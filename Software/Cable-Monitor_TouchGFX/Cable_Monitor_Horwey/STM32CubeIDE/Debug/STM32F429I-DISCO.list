
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c9b8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171a4  0802cb68  0802cb68  0003cb68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  08043d0c  08043d0c  00053d0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08047a04  08047a04  00057a04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000680  08047c50  08047c50  00057c50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  080482d0  080482d0  000582d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cd3c0  080cd3c0  000e0168  2**0
                  CONTENTS
  8 .ARM          00000008  080cd3c0  080cd3c0  000dd3c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cd3c8  080cd3c8  000e0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cd3c8  080cd3c8  000dd3c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cd3dc  080cd3dc  000dd3dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080cd3e0  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00014304  20000168  080cd548  000e0168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  2001446c  080cd548  000e446c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e0198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00091a60  00000000  00000000  000e02ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00171d2a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   002255f0  00000000  00000000  00171dbd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c41e  00000000  00000000  003973ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004328  00000000  00000000  003c37d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f4a2  00000000  00000000  003c7af8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007d1d  00000000  00000000  004e6f9a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0003113a  00000000  00000000  004eecb7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003a8cc  00000000  00000000  0051fdf1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c76c  00000000  00000000  0055a6c0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00566e2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0056a1a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802cb50 	.word	0x0802cb50

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802cb50 	.word	0x0802cb50

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f009 f943 	bl	8009900 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02b fced 	bl	802c058 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa5f 	bl	8000b40 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080cd3e0 	.word	0x080cd3e0
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	2001446c 	.word	0x2001446c

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f009 fa49 	bl	8009c7c <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f009 fab3 	bl	8009d78 <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f009 f982 	bl	8009b38 <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f009 fa3e 	bl	8009cb8 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f009 fa30 	bl	8009ca4 <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	20000184 	.word	0x20000184

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fe8b 	bl	8001594 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fe77 	bl	8001590 <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f029 f9d8 	bl	8029ca8 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f029 fa54 	bl	8029db0 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f029 febd 	bl	802a68c <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fe41 	bl	8001598 <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f029 f94d 	bl	8029bd8 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fe27 	bl	8001598 <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00d f95a 	bl	800dc2c <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c10      	ldr	r4, [pc, #64]	; (80009c0 <StartTimeoutTask+0x44>)
 8000980:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80009cc <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000984:	4f0f      	ldr	r7, [pc, #60]	; (80009c4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000986:	4e10      	ldr	r6, [pc, #64]	; (80009c8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8000988:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098a:	2300      	movs	r3, #0
 800098c:	461a      	mov	r2, r3
 800098e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8000990:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000992:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8000996:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000998:	f00d fa44 	bl	800de24 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800099c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800099e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a0:	4638      	mov	r0, r7
 80009a2:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009a4:	b912      	cbnz	r2, 80009ac <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80009a6:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a8:	f009 fbba 	bl	800a120 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009ac:	4630      	mov	r0, r6
 80009ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b2:	f009 fbb9 	bl	800a128 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80009b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80009ba:	f00d f937 	bl	800dc2c <osDelay>
	  sleep_timeout_value--;
 80009be:	e7e3      	b.n	8000988 <StartTimeoutTask+0xc>
 80009c0:	2000000c 	.word	0x2000000c
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40021800 	.word	0x40021800
 80009cc:	200001d0 	.word	0x200001d0

080009d0 <updateGUI_test>:
	return sleep_timeout_value;
 80009d0:	4b01      	ldr	r3, [pc, #4]	; (80009d8 <updateGUI_test+0x8>)
}
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	2000000c 	.word	0x2000000c

080009dc <gyro_disable>:
{
 80009dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e0:	4e1f      	ldr	r6, [pc, #124]	; (8000a60 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009e2:	4d20      	ldr	r5, [pc, #128]	; (8000a64 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80009e4:	4c20      	ldr	r4, [pc, #128]	; (8000a68 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e6:	2700      	movs	r7, #0
 80009e8:	9700      	str	r7, [sp, #0]
 80009ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009ec:	f043 0304 	orr.w	r3, r3, #4
 80009f0:	6333      	str	r3, [r6, #48]	; 0x30
 80009f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	f023 030c 	bic.w	r3, r3, #12
 8000a02:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	f043 0304 	orr.w	r3, r3, #4
 8000a0a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a12:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a14:	200a      	movs	r0, #10
 8000a16:	f008 ffad 	bl	8009974 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a1a:	682b      	ldr	r3, [r5, #0]
 8000a1c:	f043 030c 	orr.w	r3, r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a22:	9701      	str	r7, [sp, #4]
 8000a24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a26:	f043 0320 	orr.w	r3, r3, #32
 8000a2a:	6333      	str	r3, [r6, #48]	; 0x30
 8000a2c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a2e:	f003 0320 	and.w	r3, r3, #32
 8000a32:	9301      	str	r3, [sp, #4]
 8000a34:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a36:	68a3      	ldr	r3, [r4, #8]
 8000a38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a3c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a40:	f023 030f 	bic.w	r3, r3, #15
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a46:	68e3      	ldr	r3, [r4, #12]
 8000a48:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a4c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a4e:	200a      	movs	r0, #10
 8000a50:	f008 ff90 	bl	8009974 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a54:	6823      	ldr	r3, [r4, #0]
 8000a56:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a5a:	6023      	str	r3, [r4, #0]
}
 8000a5c:	b003      	add	sp, #12
 8000a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40020800 	.word	0x40020800
 8000a68:	40021400 	.word	0x40021400

08000a6c <setCalibrationFlashValues>:
{
 8000a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a70:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8000a72:	009b      	lsls	r3, r3, #2
 8000a74:	3307      	adds	r3, #7
 8000a76:	466d      	mov	r5, sp
 8000a78:	08db      	lsrs	r3, r3, #3
 8000a7a:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8000a7e:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8000a80:	469d      	mov	sp, r3
 8000a82:	466d      	mov	r5, sp
{
 8000a84:	4616      	mov	r6, r2
 8000a86:	4681      	mov	r9, r0
 8000a88:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 8000a8a:	4622      	mov	r2, r4
 8000a8c:	4629      	mov	r1, r5
 8000a8e:	f7ff fedf 	bl	8000850 <Flash_Read_Data>
	Rx_Data[index] = value;
 8000a92:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 8000a96:	4622      	mov	r2, r4
 8000a98:	4629      	mov	r1, r5
 8000a9a:	4648      	mov	r0, r9
 8000a9c:	f7ff fe9e 	bl	80007dc <Flash_Write_Data>
}
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aa6:	bf00      	nop

08000aa8 <SystemClock_Config>:
{
 8000aa8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aaa:	2400      	movs	r4, #0
{
 8000aac:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aae:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000ab2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ab6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000aba:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000abe:	4a1e      	ldr	r2, [pc, #120]	; (8000b38 <SystemClock_Config+0x90>)
 8000ac0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ac2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ac6:	4b1d      	ldr	r3, [pc, #116]	; (8000b3c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000acc:	6411      	str	r1, [r2, #64]	; 0x40
 8000ace:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000ad0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000ad4:	9201      	str	r2, [sp, #4]
 8000ad6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad8:	9402      	str	r4, [sp, #8]
 8000ada:	681a      	ldr	r2, [r3, #0]
 8000adc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000ae0:	601a      	str	r2, [r3, #0]
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000ae8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000aea:	2201      	movs	r2, #1
 8000aec:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000af0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000af6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000afa:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000afe:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b02:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000b06:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b08:	2202      	movs	r2, #2
 8000b0a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b0c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b0e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b12:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b14:	f00b f942 	bl	800bd9c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b18:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b1a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b1e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b26:	a803      	add	r0, sp, #12
 8000b28:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b2a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b2e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b30:	f00b fb4c 	bl	800c1cc <HAL_RCC_ClockConfig>
}
 8000b34:	b015      	add	sp, #84	; 0x54
 8000b36:	bd30      	pop	{r4, r5, pc}
 8000b38:	40023800 	.word	0x40023800
 8000b3c:	40007000 	.word	0x40007000

08000b40 <main>:
{
 8000b40:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b44:	2400      	movs	r4, #0
{
 8000b46:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8000b48:	f008 fee8 	bl	800991c <HAL_Init>
  SystemClock_Config();
 8000b4c:	f7ff ffac 	bl	8000aa8 <SystemClock_Config>
  gyro_disable();
 8000b50:	f7ff ff44 	bl	80009dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b54:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000b58:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b5c:	4bbe      	ldr	r3, [pc, #760]	; (8000e58 <main+0x318>)
 8000b5e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b60:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b62:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b64:	48bd      	ldr	r0, [pc, #756]	; (8000e5c <main+0x31c>)
  hi2c3.Instance = I2C3;
 8000b66:	4dbe      	ldr	r5, [pc, #760]	; (8000e60 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b68:	f041 0110 	orr.w	r1, r1, #16
 8000b6c:	6319      	str	r1, [r3, #48]	; 0x30
 8000b6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b70:	f001 0110 	and.w	r1, r1, #16
 8000b74:	9100      	str	r1, [sp, #0]
 8000b76:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b78:	9401      	str	r4, [sp, #4]
 8000b7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b7c:	f041 0120 	orr.w	r1, r1, #32
 8000b80:	6319      	str	r1, [r3, #48]	; 0x30
 8000b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b84:	f001 0120 	and.w	r1, r1, #32
 8000b88:	9101      	str	r1, [sp, #4]
 8000b8a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b8c:	9402      	str	r4, [sp, #8]
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b90:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000b94:	6319      	str	r1, [r3, #48]	; 0x30
 8000b96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b98:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000b9c:	9102      	str	r1, [sp, #8]
 8000b9e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ba0:	9403      	str	r4, [sp, #12]
 8000ba2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ba4:	f041 0104 	orr.w	r1, r1, #4
 8000ba8:	6319      	str	r1, [r3, #48]	; 0x30
 8000baa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bac:	f001 0104 	and.w	r1, r1, #4
 8000bb0:	9103      	str	r1, [sp, #12]
 8000bb2:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bb4:	9404      	str	r4, [sp, #16]
 8000bb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb8:	f041 0101 	orr.w	r1, r1, #1
 8000bbc:	6319      	str	r1, [r3, #48]	; 0x30
 8000bbe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bc0:	f001 0101 	and.w	r1, r1, #1
 8000bc4:	9104      	str	r1, [sp, #16]
 8000bc6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bc8:	9405      	str	r4, [sp, #20]
 8000bca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bcc:	f041 0102 	orr.w	r1, r1, #2
 8000bd0:	6319      	str	r1, [r3, #48]	; 0x30
 8000bd2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bd4:	f001 0102 	and.w	r1, r1, #2
 8000bd8:	9105      	str	r1, [sp, #20]
 8000bda:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000bdc:	9406      	str	r4, [sp, #24]
 8000bde:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000be4:	6319      	str	r1, [r3, #48]	; 0x30
 8000be6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000bec:	9106      	str	r1, [sp, #24]
 8000bee:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bf0:	9407      	str	r4, [sp, #28]
 8000bf2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bf4:	f041 0108 	orr.w	r1, r1, #8
 8000bf8:	6319      	str	r1, [r3, #48]	; 0x30
 8000bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bfc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c00:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c02:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c04:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c06:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c08:	f009 fa8a 	bl	800a120 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000c0c:	4893      	ldr	r0, [pc, #588]	; (8000e5c <main+0x31c>)
 8000c0e:	2120      	movs	r1, #32
 8000c10:	2201      	movs	r2, #1
 8000c12:	f009 fa85 	bl	800a120 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000c16:	4893      	ldr	r0, [pc, #588]	; (8000e64 <main+0x324>)
 8000c18:	4622      	mov	r2, r4
 8000c1a:	2114      	movs	r1, #20
 8000c1c:	f009 fa80 	bl	800a120 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000c20:	4891      	ldr	r0, [pc, #580]	; (8000e68 <main+0x328>)
 8000c22:	4622      	mov	r2, r4
 8000c24:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c28:	f009 fa7a 	bl	800a120 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000c2c:	488f      	ldr	r0, [pc, #572]	; (8000e6c <main+0x32c>)
 8000c2e:	4622      	mov	r2, r4
 8000c30:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c34:	f009 fa74 	bl	800a120 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c38:	488d      	ldr	r0, [pc, #564]	; (8000e70 <main+0x330>)
 8000c3a:	4622      	mov	r2, r4
 8000c3c:	2104      	movs	r1, #4
 8000c3e:	f009 fa6f 	bl	800a120 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c42:	2201      	movs	r2, #1
 8000c44:	488a      	ldr	r0, [pc, #552]	; (8000e70 <main+0x330>)
 8000c46:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c4a:	f009 fa69 	bl	800a120 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c4e:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c50:	f04f 0a03 	mov.w	sl, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c54:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c56:	4881      	ldr	r0, [pc, #516]	; (8000e5c <main+0x31c>)
 8000c58:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c5a:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c5e:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c62:	e9cd 4a11 	strd	r4, sl, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c66:	f009 f917 	bl	8009e98 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c6a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c6e:	487b      	ldr	r0, [pc, #492]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c70:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c74:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c76:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c78:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c7a:	f009 f90d 	bl	8009e98 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c7e:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c80:	4876      	ldr	r0, [pc, #472]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c82:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c84:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c86:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c88:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c8c:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c90:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c92:	f009 f901 	bl	8009e98 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c96:	4873      	ldr	r0, [pc, #460]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c98:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000c9c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000c9e:	f04f 0910 	mov.w	r9, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000ca6:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca8:	f009 f8f6 	bl	8009e98 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cac:	486d      	ldr	r0, [pc, #436]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cae:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb0:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cb2:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cb6:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cba:	f009 f8ed 	bl	8009e98 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cbe:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cc2:	4869      	ldr	r0, [pc, #420]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cc4:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cc6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cc8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ccc:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cce:	f009 f8e3 	bl	8009e98 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cd2:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cd6:	4865      	ldr	r0, [pc, #404]	; (8000e6c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cd8:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cda:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cdc:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000ce0:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000ce2:	f009 f8d9 	bl	8009e98 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000ce6:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cea:	4861      	ldr	r0, [pc, #388]	; (8000e70 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000cec:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cee:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf0:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cf4:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cf6:	f009 f8cf 	bl	8009e98 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000cfa:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000cfe:	485d      	ldr	r0, [pc, #372]	; (8000e74 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d00:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d02:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000d04:	220f      	movs	r2, #15
 8000d06:	9213      	str	r2, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d08:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d0c:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d0e:	f009 f8c3 	bl	8009e98 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000d12:	2105      	movs	r1, #5
 8000d14:	4622      	mov	r2, r4
 8000d16:	2009      	movs	r0, #9
 8000d18:	f008 fe50 	bl	80099bc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000d1c:	2009      	movs	r0, #9
 8000d1e:	f008 fe8b 	bl	8009a38 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d22:	4855      	ldr	r0, [pc, #340]	; (8000e78 <main+0x338>)
 8000d24:	4a55      	ldr	r2, [pc, #340]	; (8000e7c <main+0x33c>)
 8000d26:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d28:	f008 fe94 	bl	8009a54 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d2c:	4954      	ldr	r1, [pc, #336]	; (8000e80 <main+0x340>)
 8000d2e:	4a55      	ldr	r2, [pc, #340]	; (8000e84 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d30:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8000d32:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d36:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d3a:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d3c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d40:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d44:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d48:	f009 fc50 	bl	800a5ec <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d4c:	4649      	mov	r1, r9
 8000d4e:	4628      	mov	r0, r5
 8000d50:	f00a fe18 	bl	800b984 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d54:	4621      	mov	r1, r4
 8000d56:	4628      	mov	r0, r5
 8000d58:	f00a fe34 	bl	800b9c4 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d5c:	f8df c13c 	ldr.w	ip, [pc, #316]	; 8000e9c <main+0x35c>
  hspi5.Instance = SPI5;
 8000d60:	4849      	ldr	r0, [pc, #292]	; (8000e88 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d62:	4d4a      	ldr	r5, [pc, #296]	; (8000e8c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d64:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d66:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000d6a:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d6e:	f44f 7e00 	mov.w	lr, #512	; 0x200
 8000d72:	2218      	movs	r2, #24
 8000d74:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d78:	220a      	movs	r2, #10
 8000d7a:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d7c:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d80:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000d84:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000d88:	f00b fd0e 	bl	800c7a8 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000d8c:	2207      	movs	r2, #7
 8000d8e:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8000d90:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d92:	4a3f      	ldr	r2, [pc, #252]	; (8000e90 <main+0x350>)
 8000d94:	602a      	str	r2, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000d96:	2040      	movs	r0, #64	; 0x40
 8000d98:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000d9c:	e9c5 0205 	strd	r0, r2, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000da0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000da4:	622a      	str	r2, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000da6:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000da8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dac:	4628      	mov	r0, r5
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000dae:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000db2:	e9c5 b903 	strd	fp, r9, [r5, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000db6:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.RPDelay = 2;
 8000db8:	e9cd a713 	strd	sl, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000dbc:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000dbe:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000dc0:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8000dc4:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 8000dc6:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc8:	f00b fbfc 	bl	800c5c4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dcc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dd0:	a90b      	add	r1, sp, #44	; 0x2c
 8000dd2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000dd4:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000dd8:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8000ddc:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dde:	f00b fc13 	bl	800c608 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000de2:	4630      	mov	r0, r6
 8000de4:	f008 fdc6 	bl	8009974 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000de8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dec:	a90b      	add	r1, sp, #44	; 0x2c
 8000dee:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000df0:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000df4:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000df8:	f00b fc06 	bl	800c608 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dfc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e00:	a90b      	add	r1, sp, #44	; 0x2c
 8000e02:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e04:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e08:	e9cd b40d 	strd	fp, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e0c:	f00b fbfc 	bl	800c608 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000e10:	f44f 730c 	mov.w	r3, #560	; 0x230
 8000e14:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000e16:	9b08      	ldr	r3, [sp, #32]
 8000e18:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e1a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e1e:	a90b      	add	r1, sp, #44	; 0x2c
 8000e20:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e22:	e9cd b80b 	strd	fp, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8000e26:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e28:	f00b fbee 	bl	800c608 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e2c:	4628      	mov	r0, r5
 8000e2e:	f240 516a 	movw	r1, #1386	; 0x56a
 8000e32:	f00b fc07 	bl	800c644 <HAL_SDRAM_ProgramRefreshRate>
  hltdc.Instance = LTDC;
 8000e36:	4d17      	ldr	r5, [pc, #92]	; (8000e94 <main+0x354>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e38:	4621      	mov	r1, r4
 8000e3a:	2234      	movs	r2, #52	; 0x34
 8000e3c:	a80f      	add	r0, sp, #60	; 0x3c
 8000e3e:	f02b f80c 	bl	802be5a <memset>
  hltdc.Instance = LTDC;
 8000e42:	4b15      	ldr	r3, [pc, #84]	; (8000e98 <main+0x358>)
 8000e44:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8000e46:	2309      	movs	r3, #9
 8000e48:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8000e4a:	231d      	movs	r3, #29
 8000e4c:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000e4e:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000e52:	f240 1343 	movw	r3, #323	; 0x143
 8000e56:	e023      	b.n	8000ea0 <main+0x360>
 8000e58:	40023800 	.word	0x40023800
 8000e5c:	40021000 	.word	0x40021000
 8000e60:	200001e4 	.word	0x200001e4
 8000e64:	40020800 	.word	0x40020800
 8000e68:	40020400 	.word	0x40020400
 8000e6c:	40020c00 	.word	0x40020c00
 8000e70:	40021800 	.word	0x40021800
 8000e74:	40020000 	.word	0x40020000
 8000e78:	200001dc 	.word	0x200001dc
 8000e7c:	40023000 	.word	0x40023000
 8000e80:	40005c00 	.word	0x40005c00
 8000e84:	000186a0 	.word	0x000186a0
 8000e88:	20000314 	.word	0x20000314
 8000e8c:	200002e0 	.word	0x200002e0
 8000e90:	a0000140 	.word	0xa0000140
 8000e94:	20000238 	.word	0x20000238
 8000e98:	40016800 	.word	0x40016800
 8000e9c:	40015000 	.word	0x40015000
 8000ea0:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8000ea4:	f240 1217 	movw	r2, #279	; 0x117
 8000ea8:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 8000eac:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000eae:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8000eb0:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000eb4:	61ae      	str	r6, [r5, #24]
  hltdc.Init.AccumulatedVBP = 3;
 8000eb6:	f8c5 a020 	str.w	sl, [r5, #32]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000eba:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000ebe:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8000ec2:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ec6:	f00a fda1 	bl	800ba0c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8000eca:	23f0      	movs	r3, #240	; 0xf0
 8000ecc:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8000ece:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8000ed0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000ed4:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8000ed6:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8000ed8:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000eda:	4622      	mov	r2, r4
 8000edc:	a90f      	add	r1, sp, #60	; 0x3c
 8000ede:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 8000ee0:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ee2:	f44f 6680 	mov.w	r6, #1024	; 0x400
 8000ee6:	2305      	movs	r3, #5
 8000ee8:	e9cd 6316 	strd	r6, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8000eec:	4d72      	ldr	r5, [pc, #456]	; (80010b8 <main+0x578>)
  pLayerCfg.WindowX0 = 0;
 8000eee:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8000ef0:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000ef2:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 8000ef4:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8000ef6:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000ef8:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8000efc:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000f00:	f00a fe5a 	bl	800bbb8 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000f04:	4b6d      	ldr	r3, [pc, #436]	; (80010bc <main+0x57c>)
 8000f06:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8000f08:	681b      	ldr	r3, [r3, #0]
  htim3.Instance = TIM3;
 8000f0a:	4e6d      	ldr	r6, [pc, #436]	; (80010c0 <main+0x580>)
  LcdDrv->Init();
 8000f0c:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8000f0e:	682b      	ldr	r3, [r5, #0]
  htim1.Instance = TIM1;
 8000f10:	4d6c      	ldr	r5, [pc, #432]	; (80010c4 <main+0x584>)
  LcdDrv->DisplayOff();
 8000f12:	68db      	ldr	r3, [r3, #12]
 8000f14:	4798      	blx	r3
  htim1.Init.Period = 65535;
 8000f16:	f64f 78ff 	movw	r8, #65535	; 0xffff
  htim1.Instance = TIM1;
 8000f1a:	4b6b      	ldr	r3, [pc, #428]	; (80010c8 <main+0x588>)
 8000f1c:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f1e:	4628      	mov	r0, r5
  htim1.Init.Period = 65535;
 8000f20:	f8c5 800c 	str.w	r8, [r5, #12]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f24:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim1.Init.RepetitionCounter = 0;
 8000f28:	e9c5 4404 	strd	r4, r4, [r5, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f2c:	61ac      	str	r4, [r5, #24]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f2e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f32:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f36:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f3a:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f3c:	f00c f824 	bl	800cf88 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f40:	a90f      	add	r1, sp, #60	; 0x3c
 8000f42:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f44:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f48:	f00c fba8 	bl	800d69c <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f4c:	a90b      	add	r1, sp, #44	; 0x2c
 8000f4e:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f50:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f54:	f00c fce0 	bl	800d918 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8000f58:	4b5c      	ldr	r3, [pc, #368]	; (80010cc <main+0x58c>)
  htim3.Init.Period = 65535;
 8000f5a:	f8c6 800c 	str.w	r8, [r6, #12]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f5e:	4630      	mov	r0, r6
  htim3.Instance = TIM3;
 8000f60:	6033      	str	r3, [r6, #0]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f62:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f66:	6134      	str	r4, [r6, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f68:	61b4      	str	r4, [r6, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f6a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000f6e:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f72:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f76:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8000f7a:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f7c:	9409      	str	r4, [sp, #36]	; 0x24
 8000f7e:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f80:	f00c f802 	bl	800cf88 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f84:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000f88:	a90b      	add	r1, sp, #44	; 0x2c
 8000f8a:	4630      	mov	r0, r6
  htim2.Instance = TIM2;
 8000f8c:	4d50      	ldr	r5, [pc, #320]	; (80010d0 <main+0x590>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000f8e:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000f90:	f00c fad4 	bl	800d53c <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000f94:	a90f      	add	r1, sp, #60	; 0x3c
 8000f96:	4630      	mov	r0, r6
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f98:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000f9c:	f00c fb7e 	bl	800d69c <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fa0:	a909      	add	r1, sp, #36	; 0x24
 8000fa2:	4630      	mov	r0, r6
  htim2.Instance = TIM2;
 8000fa4:	f04f 4a80 	mov.w	sl, #1073741824	; 0x40000000
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fa8:	2680      	movs	r6, #128	; 0x80
  htim2.Init.Period = 100-1;
 8000faa:	f04f 0863 	mov.w	r8, #99	; 0x63
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fae:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fb2:	f00c fcb1 	bl	800d918 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Prescaler = 168-1;
 8000fb6:	23a7      	movs	r3, #167	; 0xa7
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fb8:	4628      	mov	r0, r5
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fba:	61ae      	str	r6, [r5, #24]
  htim2.Init.Prescaler = 168-1;
 8000fbc:	606b      	str	r3, [r5, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000fbe:	60ac      	str	r4, [r5, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000fc0:	612c      	str	r4, [r5, #16]
  htim2.Instance = TIM2;
 8000fc2:	f8c5 a000 	str.w	sl, [r5]
  htim2.Init.Period = 100-1;
 8000fc6:	f8c5 800c 	str.w	r8, [r5, #12]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fca:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000fce:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fd2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fd6:	f00b ffd7 	bl	800cf88 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fda:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000fde:	a90f      	add	r1, sp, #60	; 0x3c
 8000fe0:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fe2:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000fe4:	f00c faaa 	bl	800d53c <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000fe8:	a90b      	add	r1, sp, #44	; 0x2c
 8000fea:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fec:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000ff0:	f00c fc92 	bl	800d918 <HAL_TIMEx_MasterConfigSynchronization>
  TIM2->CCR1 = 33;
 8000ff4:	2321      	movs	r3, #33	; 0x21
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8000ff6:	4628      	mov	r0, r5
  htim14.Instance = TIM14;
 8000ff8:	4d36      	ldr	r5, [pc, #216]	; (80010d4 <main+0x594>)
  TIM2->CCR1 = 33;
 8000ffa:	f8ca 3034 	str.w	r3, [sl, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8000ffe:	4621      	mov	r1, r4
 8001000:	f00c f91c 	bl	800d23c <HAL_TIM_PWM_Start>
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001004:	61ae      	str	r6, [r5, #24]
  htim14.Init.Prescaler = 210-1;
 8001006:	4e34      	ldr	r6, [pc, #208]	; (80010d8 <main+0x598>)
  htim14.Init.Period = 100-1;
 8001008:	f8c5 800c 	str.w	r8, [r5, #12]
  htim14.Init.Prescaler = 210-1;
 800100c:	23d1      	movs	r3, #209	; 0xd1
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 800100e:	4628      	mov	r0, r5
  htim14.Init.Prescaler = 210-1;
 8001010:	e9c5 6300 	strd	r6, r3, [r5]
  htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001014:	60ac      	str	r4, [r5, #8]
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001016:	612c      	str	r4, [r5, #16]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001018:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 800101c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8001020:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
 8001024:	9415      	str	r4, [sp, #84]	; 0x54
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 8001026:	f00b ffaf 	bl	800cf88 <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 800102a:	4628      	mov	r0, r5
 800102c:	f00c f878 	bl	800d120 <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001030:	4622      	mov	r2, r4
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001032:	2360      	movs	r3, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001034:	a90f      	add	r1, sp, #60	; 0x3c
 8001036:	4628      	mov	r0, r5
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001038:	930f      	str	r3, [sp, #60]	; 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800103a:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800103e:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001040:	f00c f96c 	bl	800d31c <HAL_TIM_PWM_ConfigChannel>
  TIM14->CCR1 = 50;
 8001044:	2332      	movs	r3, #50	; 0x32
 8001046:	6373      	str	r3, [r6, #52]	; 0x34
  HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);
 8001048:	4621      	mov	r1, r4
 800104a:	4628      	mov	r0, r5
 800104c:	f00c f8f6 	bl	800d23c <HAL_TIM_PWM_Start>
  HAL_TIM_MspPostInit(&htim14);
 8001050:	4628      	mov	r0, r5
 8001052:	f000 fcc5 	bl	80019e0 <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 8001056:	f000 fe39 	bl	8001ccc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800105a:	f000 fe35 	bl	8001cc8 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 800105e:	f7ff fcbd 	bl	80009dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001062:	f000 f957 	bl	8001314 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001066:	f000 f989 	bl	800137c <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 800106a:	491c      	ldr	r1, [pc, #112]	; (80010dc <main+0x59c>)
 800106c:	481c      	ldr	r0, [pc, #112]	; (80010e0 <main+0x5a0>)
 800106e:	220c      	movs	r2, #12
 8001070:	f7ff fbee 	bl	8000850 <Flash_Read_Data>
  osKernelInitialize();
 8001074:	f00c fd62 	bl	800db3c <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001078:	4a1a      	ldr	r2, [pc, #104]	; (80010e4 <main+0x5a4>)
 800107a:	4639      	mov	r1, r7
 800107c:	4648      	mov	r0, r9
 800107e:	f00c fe97 	bl	800ddb0 <osMessageQueueNew>
 8001082:	4b19      	ldr	r3, [pc, #100]	; (80010e8 <main+0x5a8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001084:	4a19      	ldr	r2, [pc, #100]	; (80010ec <main+0x5ac>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001086:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001088:	4621      	mov	r1, r4
 800108a:	4819      	ldr	r0, [pc, #100]	; (80010f0 <main+0x5b0>)
 800108c:	f00c fd82 	bl	800db94 <osThreadNew>
 8001090:	4b18      	ldr	r3, [pc, #96]	; (80010f4 <main+0x5b4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001092:	4a19      	ldr	r2, [pc, #100]	; (80010f8 <main+0x5b8>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001094:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001096:	4621      	mov	r1, r4
 8001098:	4818      	ldr	r0, [pc, #96]	; (80010fc <main+0x5bc>)
 800109a:	f00c fd7b 	bl	800db94 <osThreadNew>
 800109e:	4b18      	ldr	r3, [pc, #96]	; (8001100 <main+0x5c0>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80010a0:	4a18      	ldr	r2, [pc, #96]	; (8001104 <main+0x5c4>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80010a2:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80010a4:	4621      	mov	r1, r4
 80010a6:	4818      	ldr	r0, [pc, #96]	; (8001108 <main+0x5c8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80010a8:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 80010aa:	f00c fd73 	bl	800db94 <osThreadNew>
 80010ae:	4b17      	ldr	r3, [pc, #92]	; (800110c <main+0x5cc>)
 80010b0:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80010b2:	f00c fd55 	bl	800db60 <osKernelStart>
  while (1)
 80010b6:	e7fe      	b.n	80010b6 <main+0x576>
 80010b8:	200001cc 	.word	0x200001cc
 80010bc:	20000018 	.word	0x20000018
 80010c0:	20000444 	.word	0x20000444
 80010c4:	2000036c 	.word	0x2000036c
 80010c8:	40010000 	.word	0x40010000
 80010cc:	40000400 	.word	0x40000400
 80010d0:	200003fc 	.word	0x200003fc
 80010d4:	200003b4 	.word	0x200003b4
 80010d8:	40002000 	.word	0x40002000
 80010dc:	20000198 	.word	0x20000198
 80010e0:	081e0000 	.word	0x081e0000
 80010e4:	0802cc00 	.word	0x0802cc00
 80010e8:	200001d0 	.word	0x200001d0
 80010ec:	0802cc3c 	.word	0x0802cc3c
 80010f0:	08000971 	.word	0x08000971
 80010f4:	200001d8 	.word	0x200001d8
 80010f8:	0802cbdc 	.word	0x0802cbdc
 80010fc:	08001cdd 	.word	0x08001cdd
 8001100:	200001c8 	.word	0x200001c8
 8001104:	0802cc18 	.word	0x0802cc18
 8001108:	0800097d 	.word	0x0800097d
 800110c:	200001d4 	.word	0x200001d4

08001110 <IOE_Init>:
 8001110:	4770      	bx	lr
 8001112:	bf00      	nop

08001114 <IOE_ITConfig>:
 8001114:	4770      	bx	lr
 8001116:	bf00      	nop

08001118 <IOE_Write>:
{
 8001118:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800111a:	4c09      	ldr	r4, [pc, #36]	; (8001140 <IOE_Write+0x28>)
{
 800111c:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 800111e:	6824      	ldr	r4, [r4, #0]
 8001120:	9402      	str	r4, [sp, #8]
{
 8001122:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001124:	2301      	movs	r3, #1
 8001126:	f88d 4017 	strb.w	r4, [sp, #23]
 800112a:	f10d 0417 	add.w	r4, sp, #23
 800112e:	460a      	mov	r2, r1
 8001130:	9301      	str	r3, [sp, #4]
 8001132:	4601      	mov	r1, r0
 8001134:	9400      	str	r4, [sp, #0]
 8001136:	4803      	ldr	r0, [pc, #12]	; (8001144 <IOE_Write+0x2c>)
 8001138:	f009 fb20 	bl	800a77c <HAL_I2C_Mem_Write>
}
 800113c:	b006      	add	sp, #24
 800113e:	bd10      	pop	{r4, pc}
 8001140:	20000004 	.word	0x20000004
 8001144:	200001e4 	.word	0x200001e4

08001148 <IOE_Read>:
{
 8001148:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800114a:	4b0b      	ldr	r3, [pc, #44]	; (8001178 <IOE_Read+0x30>)
{
 800114c:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800114e:	681b      	ldr	r3, [r3, #0]
 8001150:	9302      	str	r3, [sp, #8]
{
 8001152:	4684      	mov	ip, r0
 8001154:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001156:	2301      	movs	r3, #1
 8001158:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 800115c:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800115e:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001162:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001166:	4661      	mov	r1, ip
 8001168:	4804      	ldr	r0, [pc, #16]	; (800117c <IOE_Read+0x34>)
 800116a:	f009 fbf9 	bl	800a960 <HAL_I2C_Mem_Read>
}
 800116e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001172:	b007      	add	sp, #28
 8001174:	f85d fb04 	ldr.w	pc, [sp], #4
 8001178:	20000004 	.word	0x20000004
 800117c:	200001e4 	.word	0x200001e4

08001180 <IOE_ReadMultiple>:
{
 8001180:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001182:	4c09      	ldr	r4, [pc, #36]	; (80011a8 <IOE_ReadMultiple+0x28>)
{
 8001184:	b084      	sub	sp, #16
 8001186:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001188:	6820      	ldr	r0, [r4, #0]
 800118a:	9002      	str	r0, [sp, #8]
 800118c:	e9cd 2300 	strd	r2, r3, [sp]
 8001190:	4806      	ldr	r0, [pc, #24]	; (80011ac <IOE_ReadMultiple+0x2c>)
 8001192:	460a      	mov	r2, r1
 8001194:	2301      	movs	r3, #1
 8001196:	4661      	mov	r1, ip
 8001198:	f009 fbe2 	bl	800a960 <HAL_I2C_Mem_Read>
}
 800119c:	3800      	subs	r0, #0
 800119e:	bf18      	it	ne
 80011a0:	2001      	movne	r0, #1
 80011a2:	b004      	add	sp, #16
 80011a4:	bd10      	pop	{r4, pc}
 80011a6:	bf00      	nop
 80011a8:	20000004 	.word	0x20000004
 80011ac:	200001e4 	.word	0x200001e4

080011b0 <IOE_Delay>:
 80011b0:	f008 bbe0 	b.w	8009974 <HAL_Delay>

080011b4 <LCD_IO_Init>:
{
 80011b4:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011b6:	4806      	ldr	r0, [pc, #24]	; (80011d0 <LCD_IO_Init+0x1c>)
 80011b8:	2200      	movs	r2, #0
 80011ba:	2104      	movs	r1, #4
 80011bc:	f008 ffb0 	bl	800a120 <HAL_GPIO_WritePin>
}
 80011c0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011c4:	4802      	ldr	r0, [pc, #8]	; (80011d0 <LCD_IO_Init+0x1c>)
 80011c6:	2201      	movs	r2, #1
 80011c8:	2104      	movs	r1, #4
 80011ca:	f008 bfa9 	b.w	800a120 <HAL_GPIO_WritePin>
 80011ce:	bf00      	nop
 80011d0:	40020800 	.word	0x40020800

080011d4 <LCD_IO_WriteData>:
{
 80011d4:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011d6:	4d10      	ldr	r5, [pc, #64]	; (8001218 <LCD_IO_WriteData+0x44>)
{
 80011d8:	b083      	sub	sp, #12
 80011da:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80011dc:	2201      	movs	r2, #1
 80011de:	480f      	ldr	r0, [pc, #60]	; (800121c <LCD_IO_WriteData+0x48>)
 80011e0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011e4:	f008 ff9c 	bl	800a120 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011e8:	4628      	mov	r0, r5
 80011ea:	2200      	movs	r2, #0
 80011ec:	2104      	movs	r1, #4
 80011ee:	f008 ff97 	bl	800a120 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011f2:	4b0b      	ldr	r3, [pc, #44]	; (8001220 <LCD_IO_WriteData+0x4c>)
 80011f4:	480b      	ldr	r0, [pc, #44]	; (8001224 <LCD_IO_WriteData+0x50>)
 80011f6:	681b      	ldr	r3, [r3, #0]
 80011f8:	f8ad 4006 	strh.w	r4, [sp, #6]
 80011fc:	f10d 0106 	add.w	r1, sp, #6
 8001200:	2201      	movs	r2, #1
 8001202:	f00b fb33 	bl	800c86c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001206:	2201      	movs	r2, #1
 8001208:	2104      	movs	r1, #4
 800120a:	4628      	mov	r0, r5
}
 800120c:	b003      	add	sp, #12
 800120e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001212:	f008 bf85 	b.w	800a120 <HAL_GPIO_WritePin>
 8001216:	bf00      	nop
 8001218:	40020800 	.word	0x40020800
 800121c:	40020c00 	.word	0x40020c00
 8001220:	20000008 	.word	0x20000008
 8001224:	20000314 	.word	0x20000314

08001228 <LCD_IO_WriteReg>:
{
 8001228:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800122a:	4d10      	ldr	r5, [pc, #64]	; (800126c <LCD_IO_WriteReg+0x44>)
{
 800122c:	b083      	sub	sp, #12
 800122e:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001230:	2200      	movs	r2, #0
 8001232:	480f      	ldr	r0, [pc, #60]	; (8001270 <LCD_IO_WriteReg+0x48>)
 8001234:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001238:	f008 ff72 	bl	800a120 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800123c:	4628      	mov	r0, r5
 800123e:	2200      	movs	r2, #0
 8001240:	2104      	movs	r1, #4
 8001242:	f008 ff6d 	bl	800a120 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001246:	4b0b      	ldr	r3, [pc, #44]	; (8001274 <LCD_IO_WriteReg+0x4c>)
 8001248:	480b      	ldr	r0, [pc, #44]	; (8001278 <LCD_IO_WriteReg+0x50>)
 800124a:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 800124c:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001250:	f10d 0106 	add.w	r1, sp, #6
 8001254:	2201      	movs	r2, #1
 8001256:	f00b fb09 	bl	800c86c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800125a:	2201      	movs	r2, #1
 800125c:	2104      	movs	r1, #4
 800125e:	4628      	mov	r0, r5
}
 8001260:	b003      	add	sp, #12
 8001262:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001266:	f008 bf5b 	b.w	800a120 <HAL_GPIO_WritePin>
 800126a:	bf00      	nop
 800126c:	40020800 	.word	0x40020800
 8001270:	40020c00 	.word	0x40020c00
 8001274:	20000008 	.word	0x20000008
 8001278:	20000314 	.word	0x20000314

0800127c <LCD_IO_ReadData>:
{
 800127c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001280:	4e19      	ldr	r6, [pc, #100]	; (80012e8 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001282:	4f1a      	ldr	r7, [pc, #104]	; (80012ec <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001284:	f8df 9068 	ldr.w	r9, [pc, #104]	; 80012f0 <LCD_IO_ReadData+0x74>
 8001288:	f8df 8068 	ldr.w	r8, [pc, #104]	; 80012f4 <LCD_IO_ReadData+0x78>
{
 800128c:	b083      	sub	sp, #12
 800128e:	460c      	mov	r4, r1
 8001290:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001292:	2200      	movs	r2, #0
 8001294:	4630      	mov	r0, r6
 8001296:	2104      	movs	r1, #4
 8001298:	f008 ff42 	bl	800a120 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 800129c:	4638      	mov	r0, r7
 800129e:	2200      	movs	r2, #0
 80012a0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012a4:	f008 ff3c 	bl	800a120 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80012a8:	f8d9 3000 	ldr.w	r3, [r9]
 80012ac:	f8ad 5004 	strh.w	r5, [sp, #4]
 80012b0:	a901      	add	r1, sp, #4
 80012b2:	2201      	movs	r2, #1
 80012b4:	4640      	mov	r0, r8
 80012b6:	f00b fad9 	bl	800c86c <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80012ba:	f8d9 3000 	ldr.w	r3, [r9]
 80012be:	4622      	mov	r2, r4
 80012c0:	a901      	add	r1, sp, #4
 80012c2:	4640      	mov	r0, r8
 80012c4:	f00b fd7a 	bl	800cdbc <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80012c8:	4638      	mov	r0, r7
 80012ca:	2201      	movs	r2, #1
 80012cc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80012d0:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80012d2:	f008 ff25 	bl	800a120 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80012d6:	4630      	mov	r0, r6
 80012d8:	2201      	movs	r2, #1
 80012da:	2104      	movs	r1, #4
 80012dc:	f008 ff20 	bl	800a120 <HAL_GPIO_WritePin>
}
 80012e0:	4620      	mov	r0, r4
 80012e2:	b003      	add	sp, #12
 80012e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80012e8:	40020800 	.word	0x40020800
 80012ec:	40020c00 	.word	0x40020c00
 80012f0:	20000008 	.word	0x20000008
 80012f4:	20000314 	.word	0x20000314

080012f8 <LCD_Delay>:
  HAL_Delay(Delay);
 80012f8:	f008 bb3c 	b.w	8009974 <HAL_Delay>

080012fc <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80012fc:	4b03      	ldr	r3, [pc, #12]	; (800130c <HAL_TIM_PeriodElapsedCallback+0x10>)
 80012fe:	6802      	ldr	r2, [r0, #0]
 8001300:	429a      	cmp	r2, r3
 8001302:	d000      	beq.n	8001306 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001304:	4770      	bx	lr
    HAL_IncTick();
 8001306:	f008 bb23 	b.w	8009950 <HAL_IncTick>
 800130a:	bf00      	nop
 800130c:	40001000 	.word	0x40001000

08001310 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001310:	4770      	bx	lr
 8001312:	bf00      	nop

08001314 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 8001314:	b410      	push	{r4}
 8001316:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001318:	4b15      	ldr	r3, [pc, #84]	; (8001370 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 800131a:	4916      	ldr	r1, [pc, #88]	; (8001374 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800131c:	2400      	movs	r4, #0
 800131e:	9400      	str	r4, [sp, #0]
 8001320:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001322:	f042 0220 	orr.w	r2, r2, #32
 8001326:	631a      	str	r2, [r3, #48]	; 0x30
 8001328:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800132a:	f002 0220 	and.w	r2, r2, #32
 800132e:	9200      	str	r2, [sp, #0]
 8001330:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001332:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001334:	4a10      	ldr	r2, [pc, #64]	; (8001378 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001336:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 800133a:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 800133c:	6808      	ldr	r0, [r1, #0]
 800133e:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001342:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001344:	9401      	str	r4, [sp, #4]
 8001346:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001348:	f041 0104 	orr.w	r1, r1, #4
 800134c:	6319      	str	r1, [r3, #48]	; 0x30
 800134e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001350:	f003 0304 	and.w	r3, r3, #4
 8001354:	9301      	str	r3, [sp, #4]
 8001356:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001358:	6813      	ldr	r3, [r2, #0]
 800135a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800135e:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001360:	6813      	ldr	r3, [r2, #0]
 8001362:	f043 030c 	orr.w	r3, r3, #12
 8001366:	6013      	str	r3, [r2, #0]
}
 8001368:	b003      	add	sp, #12
 800136a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800136e:	4770      	bx	lr
 8001370:	40023800 	.word	0x40023800
 8001374:	40021400 	.word	0x40021400
 8001378:	40020800 	.word	0x40020800

0800137c <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 800137c:	b410      	push	{r4}
 800137e:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001380:	4a0e      	ldr	r2, [pc, #56]	; (80013bc <MEAS_timer_init+0x40>)
 8001382:	2000      	movs	r0, #0
 8001384:	9001      	str	r0, [sp, #4]
 8001386:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001388:	f041 0101 	orr.w	r1, r1, #1
 800138c:	6411      	str	r1, [r2, #64]	; 0x40
 800138e:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001390:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001394:	f002 0201 	and.w	r2, r2, #1
 8001398:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800139a:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 800139e:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 80013a0:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 80013a2:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 80013a4:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 80013a6:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013a8:	4905      	ldr	r1, [pc, #20]	; (80013c0 <MEAS_timer_init+0x44>)
 80013aa:	f042 0220 	orr.w	r2, r2, #32
 80013ae:	605a      	str	r2, [r3, #4]
 80013b0:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 80013b4:	b003      	add	sp, #12
 80013b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80013ba:	4770      	bx	lr
 80013bc:	40023800 	.word	0x40023800
 80013c0:	e000e100 	.word	0xe000e100

080013c4 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 80013c4:	b410      	push	{r4}
 80013c6:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 80013c8:	4a36      	ldr	r2, [pc, #216]	; (80014a4 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 80013ca:	4b37      	ldr	r3, [pc, #220]	; (80014a8 <MEAS_ADC3_scan_init+0xe4>)
 80013cc:	4c37      	ldr	r4, [pc, #220]	; (80014ac <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 80013ce:	2100      	movs	r1, #0
 80013d0:	9100      	str	r1, [sp, #0]
 80013d2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80013d4:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 80013d8:	6450      	str	r0, [r2, #68]	; 0x44
 80013da:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80013dc:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 80013e0:	9000      	str	r0, [sp, #0]
 80013e2:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 80013e4:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80013e6:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 80013ea:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 80013ec:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013ee:	f040 0004 	orr.w	r0, r0, #4
 80013f2:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 80013f4:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013f6:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 80013fa:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 80013fc:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013fe:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001402:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001404:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8001406:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 800140a:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 800140c:	6858      	ldr	r0, [r3, #4]
 800140e:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001412:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001414:	6898      	ldr	r0, [r3, #8]
 8001416:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 800141a:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 800141c:	6898      	ldr	r0, [r3, #8]
 800141e:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001422:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001424:	6898      	ldr	r0, [r3, #8]
 8001426:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 800142a:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 800142c:	9101      	str	r1, [sp, #4]
 800142e:	6b10      	ldr	r0, [r2, #48]	; 0x30
 8001430:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 8001434:	6310      	str	r0, [r2, #48]	; 0x30
 8001436:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8001438:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 800143c:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 800143e:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001442:	9a01      	ldr	r2, [sp, #4]
 8001444:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001448:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800144a:	f022 0201 	bic.w	r2, r2, #1
 800144e:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001450:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001452:	07d2      	lsls	r2, r2, #31
 8001454:	d4fc      	bmi.n	8001450 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001456:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001458:	4815      	ldr	r0, [pc, #84]	; (80014b0 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800145a:	4916      	ldr	r1, [pc, #88]	; (80014b4 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 800145c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001460:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001462:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001464:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001468:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 800146a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800146c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001470:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001472:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001474:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001478:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 800147a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800147c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001480:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001482:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001484:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001488:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800148a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800148c:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001490:	f042 0210 	orr.w	r2, r2, #16
 8001494:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001496:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001498:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800149a:	6359      	str	r1, [r3, #52]	; 0x34
}
 800149c:	b003      	add	sp, #12
 800149e:	f85d 4b04 	ldr.w	r4, [sp], #4
 80014a2:	4770      	bx	lr
 80014a4:	40023800 	.word	0x40023800
 80014a8:	40012200 	.word	0x40012200
 80014ac:	e000e100 	.word	0xe000e100
 80014b0:	4001224c 	.word	0x4001224c
 80014b4:	2000048c 	.word	0x2000048c

080014b8 <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 80014b8:	4b1b      	ldr	r3, [pc, #108]	; (8001528 <DMA2_Stream1_IRQHandler+0x70>)
 80014ba:	681a      	ldr	r2, [r3, #0]
 80014bc:	0511      	lsls	r1, r2, #20
 80014be:	d400      	bmi.n	80014c2 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 80014c0:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014c2:	4a1a      	ldr	r2, [pc, #104]	; (800152c <DMA2_Stream1_IRQHandler+0x74>)
 80014c4:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 80014c8:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80014cc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014d0:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80014d4:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 80014d8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80014da:	f022 0201 	bic.w	r2, r2, #1
 80014de:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 80014e0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80014e2:	07d2      	lsls	r2, r2, #31
 80014e4:	d4fc      	bmi.n	80014e0 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 80014e6:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014e8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 80014ec:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 80014f0:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014f2:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014f4:	490e      	ldr	r1, [pc, #56]	; (8001530 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014f6:	f023 0301 	bic.w	r3, r3, #1
 80014fa:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014fc:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014fe:	4b0d      	ldr	r3, [pc, #52]	; (8001534 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001500:	f020 0001 	bic.w	r0, r0, #1
 8001504:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001506:	6888      	ldr	r0, [r1, #8]
 8001508:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 800150c:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 800150e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001510:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001514:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001516:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8001518:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 800151c:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 800151e:	6813      	ldr	r3, [r2, #0]
 8001520:	f023 0301 	bic.w	r3, r3, #1
 8001524:	6013      	str	r3, [r2, #0]
}
 8001526:	4770      	bx	lr
 8001528:	40026400 	.word	0x40026400
 800152c:	e000e100 	.word	0xe000e100
 8001530:	40012200 	.word	0x40012200
 8001534:	40023800 	.word	0x40023800

08001538 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001538:	b510      	push	{r4, lr}
        buffer[i] = 0;
 800153a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800153e:	2100      	movs	r1, #0
 8001540:	480f      	ldr	r0, [pc, #60]	; (8001580 <MEAS_start_measure+0x48>)
 8001542:	f02a fc8a 	bl	802be5a <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 8001546:	f7ff ff3d 	bl	80013c4 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800154a:	4a0e      	ldr	r2, [pc, #56]	; (8001584 <MEAS_start_measure+0x4c>)
 800154c:	490e      	ldr	r1, [pc, #56]	; (8001588 <MEAS_start_measure+0x50>)
 800154e:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001550:	480e      	ldr	r0, [pc, #56]	; (800158c <MEAS_start_measure+0x54>)
 8001552:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001556:	f043 0301 	orr.w	r3, r3, #1
 800155a:	6293      	str	r3, [r2, #40]	; 0x28
 800155c:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001560:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001562:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001564:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001568:	f043 0301 	orr.w	r3, r3, #1
 800156c:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 800156e:	680b      	ldr	r3, [r1, #0]
 8001570:	f043 0301 	orr.w	r3, r3, #1
 8001574:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001576:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001578:	07db      	lsls	r3, r3, #31
 800157a:	d4fc      	bmi.n	8001576 <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 800157c:	4800      	ldr	r0, [pc, #0]	; (8001580 <MEAS_start_measure+0x48>)
 800157e:	bd10      	pop	{r4, pc}
 8001580:	2000048c 	.word	0x2000048c
 8001584:	40026400 	.word	0x40026400
 8001588:	e000e100 	.word	0xe000e100
 800158c:	40012200 	.word	0x40012200

08001590 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001590:	2004      	movs	r0, #4
 8001592:	4770      	bx	lr

08001594 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001594:	2040      	movs	r0, #64	; 0x40
 8001596:	4770      	bx	lr

08001598 <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001598:	f44f 7020 	mov.w	r0, #640	; 0x280
 800159c:	4770      	bx	lr
 800159e:	bf00      	nop

080015a0 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80015a0:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80015a2:	4b0e      	ldr	r3, [pc, #56]	; (80015dc <HAL_MspInit+0x3c>)
 80015a4:	2200      	movs	r2, #0
 80015a6:	9200      	str	r2, [sp, #0]
 80015a8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80015aa:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80015ae:	6459      	str	r1, [r3, #68]	; 0x44
 80015b0:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80015b2:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 80015b6:	9000      	str	r0, [sp, #0]
 80015b8:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80015ba:	9201      	str	r2, [sp, #4]
 80015bc:	6c18      	ldr	r0, [r3, #64]	; 0x40
 80015be:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80015c2:	6418      	str	r0, [r3, #64]	; 0x40
 80015c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015ca:	9301      	str	r3, [sp, #4]
 80015cc:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80015ce:	210f      	movs	r1, #15
 80015d0:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80015d4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80015d6:	f008 b9f1 	b.w	80099bc <HAL_NVIC_SetPriority>
 80015da:	bf00      	nop
 80015dc:	40023800 	.word	0x40023800

080015e0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80015e0:	4b0b      	ldr	r3, [pc, #44]	; (8001610 <HAL_CRC_MspInit+0x30>)
 80015e2:	6802      	ldr	r2, [r0, #0]
 80015e4:	429a      	cmp	r2, r3
 80015e6:	d000      	beq.n	80015ea <HAL_CRC_MspInit+0xa>
 80015e8:	4770      	bx	lr
{
 80015ea:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80015ec:	2200      	movs	r2, #0
 80015ee:	9201      	str	r2, [sp, #4]
 80015f0:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 80015f4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80015f8:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 80015fc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001600:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001602:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001606:	9301      	str	r3, [sp, #4]
 8001608:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800160a:	b002      	add	sp, #8
 800160c:	4770      	bx	lr
 800160e:	bf00      	nop
 8001610:	40023000 	.word	0x40023000

08001614 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001614:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001618:	4b2e      	ldr	r3, [pc, #184]	; (80016d4 <HAL_I2C_MspInit+0xc0>)
 800161a:	6802      	ldr	r2, [r0, #0]
{
 800161c:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800161e:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001620:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001622:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001626:	e9cd 4406 	strd	r4, r4, [sp, #24]
 800162a:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 800162c:	d002      	beq.n	8001634 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 800162e:	b00a      	add	sp, #40	; 0x28
 8001630:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001634:	4d28      	ldr	r5, [pc, #160]	; (80016d8 <HAL_I2C_MspInit+0xc4>)
 8001636:	9401      	str	r4, [sp, #4]
 8001638:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800163a:	4828      	ldr	r0, [pc, #160]	; (80016dc <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800163c:	f043 0304 	orr.w	r3, r3, #4
 8001640:	632b      	str	r3, [r5, #48]	; 0x30
 8001642:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001644:	f003 0304 	and.w	r3, r3, #4
 8001648:	9301      	str	r3, [sp, #4]
 800164a:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800164c:	9402      	str	r4, [sp, #8]
 800164e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001650:	f043 0301 	orr.w	r3, r3, #1
 8001654:	632b      	str	r3, [r5, #48]	; 0x30
 8001656:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001658:	f003 0301 	and.w	r3, r3, #1
 800165c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800165e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001662:	f04f 0801 	mov.w	r8, #1
 8001666:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800166a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800166c:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800166e:	2312      	movs	r3, #18
 8001670:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001674:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001678:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800167a:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800167c:	f008 fc0c 	bl	8009e98 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001680:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001682:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001686:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001688:	4815      	ldr	r0, [pc, #84]	; (80016e0 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800168a:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800168c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001690:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001694:	f008 fc00 	bl	8009e98 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001698:	9403      	str	r4, [sp, #12]
 800169a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800169c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80016a0:	642b      	str	r3, [r5, #64]	; 0x40
 80016a2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80016a4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80016a8:	4622      	mov	r2, r4
 80016aa:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 80016ac:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80016ae:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 80016b0:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80016b2:	f008 f983 	bl	80099bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 80016b6:	2048      	movs	r0, #72	; 0x48
 80016b8:	f008 f9be 	bl	8009a38 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 80016bc:	6a2b      	ldr	r3, [r5, #32]
 80016be:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80016c2:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80016c4:	6a2b      	ldr	r3, [r5, #32]
 80016c6:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80016ca:	622b      	str	r3, [r5, #32]
}
 80016cc:	b00a      	add	sp, #40	; 0x28
 80016ce:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80016d2:	bf00      	nop
 80016d4:	40005c00 	.word	0x40005c00
 80016d8:	40023800 	.word	0x40023800
 80016dc:	40020800 	.word	0x40020800
 80016e0:	40020000 	.word	0x40020000

080016e4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80016e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80016e8:	4604      	mov	r4, r0
 80016ea:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016ec:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016ee:	2230      	movs	r2, #48	; 0x30
 80016f0:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016f2:	e9cd 1108 	strd	r1, r1, [sp, #32]
 80016f6:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 80016fa:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016fc:	f02a fbad 	bl	802be5a <memset>
  if(hltdc->Instance==LTDC)
 8001700:	4b67      	ldr	r3, [pc, #412]	; (80018a0 <HAL_LTDC_MspInit+0x1bc>)
 8001702:	6822      	ldr	r2, [r4, #0]
 8001704:	429a      	cmp	r2, r3
 8001706:	d002      	beq.n	800170e <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001708:	b01a      	add	sp, #104	; 0x68
 800170a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800170e:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001710:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001712:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001714:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001716:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001718:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800171c:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800171e:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001720:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001722:	f00a fe23 	bl	800c36c <HAL_RCCEx_PeriphCLKConfig>
 8001726:	2800      	cmp	r0, #0
 8001728:	f040 80b7 	bne.w	800189a <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 800172c:	4b5d      	ldr	r3, [pc, #372]	; (80018a4 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800172e:	485e      	ldr	r0, [pc, #376]	; (80018a8 <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001730:	2400      	movs	r4, #0
 8001732:	9401      	str	r4, [sp, #4]
 8001734:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001736:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800173a:	645a      	str	r2, [r3, #68]	; 0x44
 800173c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800173e:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001742:	9201      	str	r2, [sp, #4]
 8001744:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001746:	9402      	str	r4, [sp, #8]
 8001748:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800174a:	f042 0220 	orr.w	r2, r2, #32
 800174e:	631a      	str	r2, [r3, #48]	; 0x30
 8001750:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001752:	f002 0220 	and.w	r2, r2, #32
 8001756:	9202      	str	r2, [sp, #8]
 8001758:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800175a:	9403      	str	r4, [sp, #12]
 800175c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800175e:	f042 0201 	orr.w	r2, r2, #1
 8001762:	631a      	str	r2, [r3, #48]	; 0x30
 8001764:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001766:	f002 0201 	and.w	r2, r2, #1
 800176a:	9203      	str	r2, [sp, #12]
 800176c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800176e:	9404      	str	r4, [sp, #16]
 8001770:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001772:	f042 0202 	orr.w	r2, r2, #2
 8001776:	631a      	str	r2, [r3, #48]	; 0x30
 8001778:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800177a:	f002 0202 	and.w	r2, r2, #2
 800177e:	9204      	str	r2, [sp, #16]
 8001780:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001782:	9405      	str	r4, [sp, #20]
 8001784:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001786:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800178a:	631a      	str	r2, [r3, #48]	; 0x30
 800178c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800178e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001792:	9205      	str	r2, [sp, #20]
 8001794:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001796:	9406      	str	r4, [sp, #24]
 8001798:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800179a:	f042 0204 	orr.w	r2, r2, #4
 800179e:	631a      	str	r2, [r3, #48]	; 0x30
 80017a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017a2:	f002 0204 	and.w	r2, r2, #4
 80017a6:	9206      	str	r2, [sp, #24]
 80017a8:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80017aa:	9407      	str	r4, [sp, #28]
 80017ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80017ae:	f042 0208 	orr.w	r2, r2, #8
 80017b2:	631a      	str	r2, [r3, #48]	; 0x30
 80017b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017b6:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80017ba:	2600      	movs	r6, #0
 80017bc:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017be:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80017c0:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017c2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80017c4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80017c8:	2302      	movs	r3, #2
 80017ca:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017ce:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80017d2:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017d4:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017d6:	f008 fb5f 	bl	8009e98 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017da:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017dc:	f641 0258 	movw	r2, #6232	; 0x1858
 80017e0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017e2:	4832      	ldr	r0, [pc, #200]	; (80018ac <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017e4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017e6:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017ea:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017ee:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017f2:	f008 fb51 	bl	8009e98 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017f6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017f8:	2203      	movs	r2, #3
 80017fa:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017fc:	482c      	ldr	r0, [pc, #176]	; (80018b0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017fe:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001802:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001806:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800180a:	f008 fb45 	bl	8009e98 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800180e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001810:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8001814:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001816:	4826      	ldr	r0, [pc, #152]	; (80018b0 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001818:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800181a:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800181e:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001822:	f008 fb39 	bl	8009e98 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001826:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001828:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 800182c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800182e:	4821      	ldr	r0, [pc, #132]	; (80018b4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001830:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001832:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001836:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800183a:	f008 fb2d 	bl	8009e98 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800183e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001840:	22c0      	movs	r2, #192	; 0xc0
 8001842:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001844:	481c      	ldr	r0, [pc, #112]	; (80018b8 <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001846:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001848:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800184c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001850:	f008 fb22 	bl	8009e98 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001854:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001856:	2208      	movs	r2, #8
 8001858:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800185a:	4818      	ldr	r0, [pc, #96]	; (80018bc <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800185c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800185e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001862:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001866:	f008 fb17 	bl	8009e98 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800186a:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800186c:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800186e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001872:	4810      	ldr	r0, [pc, #64]	; (80018b4 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001874:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001878:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800187c:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001880:	f008 fb0a 	bl	8009e98 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001884:	4622      	mov	r2, r4
 8001886:	2105      	movs	r1, #5
 8001888:	2058      	movs	r0, #88	; 0x58
 800188a:	f008 f897 	bl	80099bc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800188e:	2058      	movs	r0, #88	; 0x58
 8001890:	f008 f8d2 	bl	8009a38 <HAL_NVIC_EnableIRQ>
}
 8001894:	b01a      	add	sp, #104	; 0x68
 8001896:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 800189a:	f7ff fd39 	bl	8001310 <Error_Handler>
 800189e:	e745      	b.n	800172c <HAL_LTDC_MspInit+0x48>
 80018a0:	40016800 	.word	0x40016800
 80018a4:	40023800 	.word	0x40023800
 80018a8:	40021400 	.word	0x40021400
 80018ac:	40020000 	.word	0x40020000
 80018b0:	40020400 	.word	0x40020400
 80018b4:	40021800 	.word	0x40021800
 80018b8:	40020800 	.word	0x40020800
 80018bc:	40020c00 	.word	0x40020c00

080018c0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80018c0:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 80018c2:	4a1b      	ldr	r2, [pc, #108]	; (8001930 <HAL_SPI_MspInit+0x70>)
 80018c4:	6801      	ldr	r1, [r0, #0]
{
 80018c6:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018c8:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 80018ca:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018cc:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80018d0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 80018d4:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 80018d6:	d001      	beq.n	80018dc <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 80018d8:	b008      	add	sp, #32
 80018da:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 80018dc:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 80018e0:	9300      	str	r3, [sp, #0]
 80018e2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80018e4:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 80018e8:	6450      	str	r0, [r2, #68]	; 0x44
 80018ea:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80018ec:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 80018f0:	9000      	str	r0, [sp, #0]
 80018f2:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018f4:	9301      	str	r3, [sp, #4]
 80018f6:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018f8:	480e      	ldr	r0, [pc, #56]	; (8001934 <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018fa:	f043 0320 	orr.w	r3, r3, #32
 80018fe:	6313      	str	r3, [r2, #48]	; 0x30
 8001900:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001902:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8001928 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001906:	f003 0320 	and.w	r3, r3, #32
 800190a:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800190c:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800190e:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001910:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001912:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001916:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800191a:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800191c:	f008 fabc 	bl	8009e98 <HAL_GPIO_Init>
}
 8001920:	b008      	add	sp, #32
 8001922:	bd10      	pop	{r4, pc}
 8001924:	f3af 8000 	nop.w
 8001928:	00000380 	.word	0x00000380
 800192c:	00000002 	.word	0x00000002
 8001930:	40015000 	.word	0x40015000
 8001934:	40021400 	.word	0x40021400

08001938 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8001938:	4a24      	ldr	r2, [pc, #144]	; (80019cc <HAL_TIM_Base_MspInit+0x94>)
 800193a:	6803      	ldr	r3, [r0, #0]
 800193c:	4293      	cmp	r3, r2
{
 800193e:	b084      	sub	sp, #16
  if(htim_base->Instance==TIM1)
 8001940:	d019      	beq.n	8001976 <HAL_TIM_Base_MspInit+0x3e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 8001942:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001946:	d007      	beq.n	8001958 <HAL_TIM_Base_MspInit+0x20>
    __HAL_RCC_TIM2_CLK_ENABLE();
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001948:	4a21      	ldr	r2, [pc, #132]	; (80019d0 <HAL_TIM_Base_MspInit+0x98>)
 800194a:	4293      	cmp	r3, r2
 800194c:	d021      	beq.n	8001992 <HAL_TIM_Base_MspInit+0x5a>
    __HAL_RCC_TIM3_CLK_ENABLE();
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
  else if(htim_base->Instance==TIM14)
 800194e:	4a21      	ldr	r2, [pc, #132]	; (80019d4 <HAL_TIM_Base_MspInit+0x9c>)
 8001950:	4293      	cmp	r3, r2
 8001952:	d02c      	beq.n	80019ae <HAL_TIM_Base_MspInit+0x76>
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 8001954:	b004      	add	sp, #16
 8001956:	4770      	bx	lr
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001958:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 800195c:	2200      	movs	r2, #0
 800195e:	9201      	str	r2, [sp, #4]
 8001960:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001962:	f042 0201 	orr.w	r2, r2, #1
 8001966:	641a      	str	r2, [r3, #64]	; 0x40
 8001968:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800196a:	f003 0301 	and.w	r3, r3, #1
 800196e:	9301      	str	r3, [sp, #4]
 8001970:	9b01      	ldr	r3, [sp, #4]
}
 8001972:	b004      	add	sp, #16
 8001974:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001976:	4b18      	ldr	r3, [pc, #96]	; (80019d8 <HAL_TIM_Base_MspInit+0xa0>)
 8001978:	2200      	movs	r2, #0
 800197a:	9200      	str	r2, [sp, #0]
 800197c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800197e:	f042 0201 	orr.w	r2, r2, #1
 8001982:	645a      	str	r2, [r3, #68]	; 0x44
 8001984:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001986:	f003 0301 	and.w	r3, r3, #1
 800198a:	9300      	str	r3, [sp, #0]
 800198c:	9b00      	ldr	r3, [sp, #0]
}
 800198e:	b004      	add	sp, #16
 8001990:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001992:	4b11      	ldr	r3, [pc, #68]	; (80019d8 <HAL_TIM_Base_MspInit+0xa0>)
 8001994:	2200      	movs	r2, #0
 8001996:	9202      	str	r2, [sp, #8]
 8001998:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800199a:	f042 0202 	orr.w	r2, r2, #2
 800199e:	641a      	str	r2, [r3, #64]	; 0x40
 80019a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019a2:	f003 0302 	and.w	r3, r3, #2
 80019a6:	9302      	str	r3, [sp, #8]
 80019a8:	9b02      	ldr	r3, [sp, #8]
}
 80019aa:	b004      	add	sp, #16
 80019ac:	4770      	bx	lr
    __HAL_RCC_TIM14_CLK_ENABLE();
 80019ae:	4b0a      	ldr	r3, [pc, #40]	; (80019d8 <HAL_TIM_Base_MspInit+0xa0>)
 80019b0:	2200      	movs	r2, #0
 80019b2:	9203      	str	r2, [sp, #12]
 80019b4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80019b6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80019ba:	641a      	str	r2, [r3, #64]	; 0x40
 80019bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019be:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80019c2:	9303      	str	r3, [sp, #12]
 80019c4:	9b03      	ldr	r3, [sp, #12]
}
 80019c6:	b004      	add	sp, #16
 80019c8:	4770      	bx	lr
 80019ca:	bf00      	nop
 80019cc:	40010000 	.word	0x40010000
 80019d0:	40000400 	.word	0x40000400
 80019d4:	40002000 	.word	0x40002000
 80019d8:	40023800 	.word	0x40023800
 80019dc:	00000000 	.word	0x00000000

080019e0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80019e0:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(htim->Instance==TIM14)
 80019e2:	4a17      	ldr	r2, [pc, #92]	; (8001a40 <HAL_TIM_MspPostInit+0x60>)
 80019e4:	6801      	ldr	r1, [r0, #0]
{
 80019e6:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019e8:	2300      	movs	r3, #0
  if(htim->Instance==TIM14)
 80019ea:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019ec:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80019f0:	e9cd 3304 	strd	r3, r3, [sp, #16]
 80019f4:	9306      	str	r3, [sp, #24]
  if(htim->Instance==TIM14)
 80019f6:	d002      	beq.n	80019fe <HAL_TIM_MspPostInit+0x1e>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 80019f8:	b009      	add	sp, #36	; 0x24
 80019fa:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019fe:	f502 3206 	add.w	r2, r2, #137216	; 0x21800
 8001a02:	9301      	str	r3, [sp, #4]
 8001a04:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001a06:	f043 0301 	orr.w	r3, r3, #1
 8001a0a:	6313      	str	r3, [r2, #48]	; 0x30
 8001a0c:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 8001a0e:	ed9f 7b0a 	vldr	d7, [pc, #40]	; 8001a38 <HAL_TIM_MspPostInit+0x58>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a12:	f003 0301 	and.w	r3, r3, #1
 8001a16:	9301      	str	r3, [sp, #4]
 8001a18:	9801      	ldr	r0, [sp, #4]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8001a1a:	480a      	ldr	r0, [pc, #40]	; (8001a44 <HAL_TIM_MspPostInit+0x64>)
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a1c:	2202      	movs	r2, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8001a1e:	2309      	movs	r3, #9
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8001a20:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = BUZZER_PWM_Pin;
 8001a22:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001a26:	9205      	str	r2, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8001a28:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(BUZZER_PWM_GPIO_Port, &GPIO_InitStruct);
 8001a2a:	f008 fa35 	bl	8009e98 <HAL_GPIO_Init>
}
 8001a2e:	b009      	add	sp, #36	; 0x24
 8001a30:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a34:	f3af 8000 	nop.w
 8001a38:	00000080 	.word	0x00000080
 8001a3c:	00000002 	.word	0x00000002
 8001a40:	40002000 	.word	0x40002000
 8001a44:	40020000 	.word	0x40020000

08001a48 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001a48:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001a4a:	4b2b      	ldr	r3, [pc, #172]	; (8001af8 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001a4c:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 8001a4e:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001a50:	2200      	movs	r2, #0
 8001a52:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001a54:	2c00      	cmp	r4, #0
 8001a56:	d14c      	bne.n	8001af2 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001a58:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a5a:	4a28      	ldr	r2, [pc, #160]	; (8001afc <HAL_SDRAM_MspInit+0xb4>)
 8001a5c:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 8001a5e:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a60:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a62:	4827      	ldr	r0, [pc, #156]	; (8001b00 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a64:	433b      	orrs	r3, r7
 8001a66:	6393      	str	r3, [r2, #56]	; 0x38
 8001a68:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001a6a:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a6c:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a6e:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001a70:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a74:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a76:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001a78:	2302      	movs	r3, #2
 8001a7a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a7e:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001a82:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001a84:	f008 fa08 	bl	8009e98 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a88:	481e      	ldr	r0, [pc, #120]	; (8001b04 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001a8a:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a8c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a8e:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a90:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a94:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a98:	f008 f9fe 	bl	8009e98 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001a9c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aa0:	4819      	ldr	r0, [pc, #100]	; (8001b08 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001aa2:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aa4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001aa6:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001aaa:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001aae:	f008 f9f3 	bl	8009e98 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001ab2:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ab6:	4815      	ldr	r0, [pc, #84]	; (8001b0c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001ab8:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001aba:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001abc:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ac0:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ac4:	f008 f9e8 	bl	8009e98 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ac8:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001acc:	4810      	ldr	r0, [pc, #64]	; (8001b10 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ace:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ad0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ad2:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ad6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ada:	f008 f9dd 	bl	8009e98 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001ade:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ae0:	480c      	ldr	r0, [pc, #48]	; (8001b14 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ae2:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ae4:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ae6:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001aea:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001aec:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aee:	f008 f9d3 	bl	8009e98 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001af2:	b009      	add	sp, #36	; 0x24
 8001af4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001af6:	bf00      	nop
 8001af8:	2000088c 	.word	0x2000088c
 8001afc:	40023800 	.word	0x40023800
 8001b00:	40021400 	.word	0x40021400
 8001b04:	40020800 	.word	0x40020800
 8001b08:	40021800 	.word	0x40021800
 8001b0c:	40021000 	.word	0x40021000
 8001b10:	40020c00 	.word	0x40020c00
 8001b14:	40020400 	.word	0x40020400

08001b18 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001b18:	b570      	push	{r4, r5, r6, lr}
 8001b1a:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001b1c:	4b23      	ldr	r3, [pc, #140]	; (8001bac <HAL_InitTick+0x94>)
 8001b1e:	2200      	movs	r2, #0
 8001b20:	9202      	str	r2, [sp, #8]
 8001b22:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001b24:	f042 0210 	orr.w	r2, r2, #16
 8001b28:	641a      	str	r2, [r3, #64]	; 0x40
 8001b2a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b2c:	f003 0310 	and.w	r3, r3, #16
 8001b30:	9302      	str	r3, [sp, #8]
{
 8001b32:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001b34:	a901      	add	r1, sp, #4
 8001b36:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001b38:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001b3a:	f00a fbf5 	bl	800c328 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001b3e:	9b06      	ldr	r3, [sp, #24]
 8001b40:	b9d3      	cbnz	r3, 8001b78 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001b42:	f00a fbe1 	bl	800c308 <HAL_RCC_GetPCLK1Freq>
 8001b46:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001b48:	4a19      	ldr	r2, [pc, #100]	; (8001bb0 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001b4a:	4c1a      	ldr	r4, [pc, #104]	; (8001bb4 <HAL_InitTick+0x9c>)
 8001b4c:	491a      	ldr	r1, [pc, #104]	; (8001bb8 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001b4e:	fba2 2303 	umull	r2, r3, r2, r3
 8001b52:	0c9b      	lsrs	r3, r3, #18
 8001b54:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001b56:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001b58:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001b5c:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001b5e:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001b62:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b64:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001b66:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001b68:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001b6a:	f00b fa0d 	bl	800cf88 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001b6e:	4606      	mov	r6, r0
 8001b70:	b130      	cbz	r0, 8001b80 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8001b72:	4630      	mov	r0, r6
 8001b74:	b008      	add	sp, #32
 8001b76:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001b78:	f00a fbc6 	bl	800c308 <HAL_RCC_GetPCLK1Freq>
 8001b7c:	0043      	lsls	r3, r0, #1
 8001b7e:	e7e3      	b.n	8001b48 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001b80:	4620      	mov	r0, r4
 8001b82:	f00b fa8f 	bl	800d0a4 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001b86:	4606      	mov	r6, r0
 8001b88:	2800      	cmp	r0, #0
 8001b8a:	d1f2      	bne.n	8001b72 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001b8c:	2036      	movs	r0, #54	; 0x36
 8001b8e:	f007 ff53 	bl	8009a38 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001b92:	2d0f      	cmp	r5, #15
 8001b94:	d901      	bls.n	8001b9a <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8001b96:	2601      	movs	r6, #1
 8001b98:	e7eb      	b.n	8001b72 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001b9a:	4632      	mov	r2, r6
 8001b9c:	4629      	mov	r1, r5
 8001b9e:	2036      	movs	r0, #54	; 0x36
 8001ba0:	f007 ff0c 	bl	80099bc <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001ba4:	4b05      	ldr	r3, [pc, #20]	; (8001bbc <HAL_InitTick+0xa4>)
 8001ba6:	601d      	str	r5, [r3, #0]
 8001ba8:	e7e3      	b.n	8001b72 <HAL_InitTick+0x5a>
 8001baa:	bf00      	nop
 8001bac:	40023800 	.word	0x40023800
 8001bb0:	431bde83 	.word	0x431bde83
 8001bb4:	20000890 	.word	0x20000890
 8001bb8:	40001000 	.word	0x40001000
 8001bbc:	20000080 	.word	0x20000080

08001bc0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001bc0:	4770      	bx	lr
 8001bc2:	bf00      	nop

08001bc4 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001bc4:	e7fe      	b.n	8001bc4 <HardFault_Handler>
 8001bc6:	bf00      	nop

08001bc8 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001bc8:	e7fe      	b.n	8001bc8 <MemManage_Handler>
 8001bca:	bf00      	nop

08001bcc <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001bcc:	e7fe      	b.n	8001bcc <BusFault_Handler>
 8001bce:	bf00      	nop

08001bd0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001bd0:	e7fe      	b.n	8001bd0 <UsageFault_Handler>
 8001bd2:	bf00      	nop

08001bd4 <DebugMon_Handler>:
 8001bd4:	4770      	bx	lr
 8001bd6:	bf00      	nop

08001bd8 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001bd8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8001bda:	20c8      	movs	r0, #200	; 0xc8
 8001bdc:	f007 feca 	bl	8009974 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001be0:	4804      	ldr	r0, [pc, #16]	; (8001bf4 <EXTI3_IRQHandler+0x1c>)
 8001be2:	2200      	movs	r2, #0
 8001be4:	2120      	movs	r1, #32
 8001be6:	f008 fa9b 	bl	800a120 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001bea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001bee:	2008      	movs	r0, #8
 8001bf0:	f008 baa6 	b.w	800a140 <HAL_GPIO_EXTI_IRQHandler>
 8001bf4:	40021000 	.word	0x40021000

08001bf8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001bf8:	4801      	ldr	r0, [pc, #4]	; (8001c00 <TIM6_DAC_IRQHandler+0x8>)
 8001bfa:	f00b bde3 	b.w	800d7c4 <HAL_TIM_IRQHandler>
 8001bfe:	bf00      	nop
 8001c00:	20000890 	.word	0x20000890

08001c04 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001c04:	4801      	ldr	r0, [pc, #4]	; (8001c0c <I2C3_EV_IRQHandler+0x8>)
 8001c06:	f009 b9fb 	b.w	800b000 <HAL_I2C_EV_IRQHandler>
 8001c0a:	bf00      	nop
 8001c0c:	200001e4 	.word	0x200001e4

08001c10 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001c10:	4801      	ldr	r0, [pc, #4]	; (8001c18 <LTDC_IRQHandler+0x8>)
 8001c12:	f009 bf6f 	b.w	800baf4 <HAL_LTDC_IRQHandler>
 8001c16:	bf00      	nop
 8001c18:	20000238 	.word	0x20000238

08001c1c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001c1c:	2001      	movs	r0, #1
 8001c1e:	4770      	bx	lr

08001c20 <_kill>:

int _kill(int pid, int sig)
{
 8001c20:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001c22:	f02a fa13 	bl	802c04c <__errno>
 8001c26:	2316      	movs	r3, #22
 8001c28:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001c2a:	f04f 30ff 	mov.w	r0, #4294967295
 8001c2e:	bd08      	pop	{r3, pc}

08001c30 <_exit>:

void _exit (int status)
{
 8001c30:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001c32:	f02a fa0b 	bl	802c04c <__errno>
 8001c36:	2316      	movs	r3, #22
 8001c38:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001c3a:	e7fe      	b.n	8001c3a <_exit+0xa>

08001c3c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001c3c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c3e:	1e16      	subs	r6, r2, #0
 8001c40:	dd07      	ble.n	8001c52 <_read+0x16>
 8001c42:	460c      	mov	r4, r1
 8001c44:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001c46:	f3af 8000 	nop.w
 8001c4a:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c4e:	42a5      	cmp	r5, r4
 8001c50:	d1f9      	bne.n	8001c46 <_read+0xa>
	}

return len;
}
 8001c52:	4630      	mov	r0, r6
 8001c54:	bd70      	pop	{r4, r5, r6, pc}
 8001c56:	bf00      	nop

08001c58 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001c58:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c5a:	1e16      	subs	r6, r2, #0
 8001c5c:	dd07      	ble.n	8001c6e <_write+0x16>
 8001c5e:	460c      	mov	r4, r1
 8001c60:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001c62:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001c66:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001c6a:	42ac      	cmp	r4, r5
 8001c6c:	d1f9      	bne.n	8001c62 <_write+0xa>
	}
	return len;
}
 8001c6e:	4630      	mov	r0, r6
 8001c70:	bd70      	pop	{r4, r5, r6, pc}
 8001c72:	bf00      	nop

08001c74 <_close>:

int _close(int file)
{
	return -1;
}
 8001c74:	f04f 30ff 	mov.w	r0, #4294967295
 8001c78:	4770      	bx	lr
 8001c7a:	bf00      	nop

08001c7c <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001c7c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001c80:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001c82:	2000      	movs	r0, #0
 8001c84:	4770      	bx	lr
 8001c86:	bf00      	nop

08001c88 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001c88:	2001      	movs	r0, #1
 8001c8a:	4770      	bx	lr

08001c8c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001c8c:	2000      	movs	r0, #0
 8001c8e:	4770      	bx	lr

08001c90 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001c90:	4a0b      	ldr	r2, [pc, #44]	; (8001cc0 <_sbrk+0x30>)
{
 8001c92:	b508      	push	{r3, lr}
 8001c94:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001c96:	6810      	ldr	r0, [r2, #0]
 8001c98:	b128      	cbz	r0, 8001ca6 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001c9a:	4403      	add	r3, r0
 8001c9c:	4669      	mov	r1, sp
 8001c9e:	428b      	cmp	r3, r1
 8001ca0:	d807      	bhi.n	8001cb2 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001ca2:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001ca4:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001ca6:	4807      	ldr	r0, [pc, #28]	; (8001cc4 <_sbrk+0x34>)
 8001ca8:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001caa:	4403      	add	r3, r0
 8001cac:	4669      	mov	r1, sp
 8001cae:	428b      	cmp	r3, r1
 8001cb0:	d9f7      	bls.n	8001ca2 <_sbrk+0x12>
		errno = ENOMEM;
 8001cb2:	f02a f9cb 	bl	802c04c <__errno>
 8001cb6:	230c      	movs	r3, #12
 8001cb8:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001cba:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001cbe:	bd08      	pop	{r3, pc}
 8001cc0:	200008d8 	.word	0x200008d8
 8001cc4:	20014470 	.word	0x20014470

08001cc8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001cc8:	4770      	bx	lr
 8001cca:	bf00      	nop

08001ccc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001ccc:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001cce:	f000 fbab 	bl	8002428 <touchgfx_components_init>
  touchgfx_init();
}
 8001cd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001cd6:	f000 bb33 	b.w	8002340 <touchgfx_init>
 8001cda:	bf00      	nop

08001cdc <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001cdc:	f000 bba6 	b.w	800242c <touchgfx_taskEntry>

08001ce0 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001ce0:	4770      	bx	lr

08001ce2 <_ZN20STM32TouchControllerD0Ev>:
 8001ce2:	b510      	push	{r4, lr}
 8001ce4:	2104      	movs	r1, #4
 8001ce6:	4604      	mov	r4, r0
 8001ce8:	f029 f89f 	bl	802ae2a <_ZdlPvj>
 8001cec:	4620      	mov	r0, r4
 8001cee:	bd10      	pop	{r4, pc}

08001cf0 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001cf0:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001cf2:	4b0c      	ldr	r3, [pc, #48]	; (8001d24 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001cf4:	4c0c      	ldr	r4, [pc, #48]	; (8001d28 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001cf6:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001cf8:	4b0c      	ldr	r3, [pc, #48]	; (8001d2c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001cfa:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001cfc:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001cfe:	6863      	ldr	r3, [r4, #4]
 8001d00:	4798      	blx	r3
 8001d02:	f640 0311 	movw	r3, #2065	; 0x811
 8001d06:	4298      	cmp	r0, r3
 8001d08:	d10a      	bne.n	8001d20 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001d0a:	4d09      	ldr	r5, [pc, #36]	; (8001d30 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001d0c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001d0e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001d10:	2082      	movs	r0, #130	; 0x82
 8001d12:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001d14:	682b      	ldr	r3, [r5, #0]
 8001d16:	2082      	movs	r0, #130	; 0x82
 8001d18:	68db      	ldr	r3, [r3, #12]
 8001d1a:	4798      	blx	r3
 8001d1c:	2000      	movs	r0, #0
    }

    return ret;
}
 8001d1e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001d20:	2001      	movs	r0, #1
 8001d22:	e7fc      	b.n	8001d1e <_Z11BSP_TS_Inittt+0x2e>
 8001d24:	200008dc 	.word	0x200008dc
 8001d28:	20000050 	.word	0x20000050
 8001d2c:	200008de 	.word	0x200008de
 8001d30:	200008e0 	.word	0x200008e0

08001d34 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001d34:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001d38:	20f0      	movs	r0, #240	; 0xf0
 8001d3a:	f7ff bfd9 	b.w	8001cf0 <_Z11BSP_TS_Inittt>
	...

08001d40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001d40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001d42:	4d33      	ldr	r5, [pc, #204]	; (8001e10 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001d44:	682b      	ldr	r3, [r5, #0]
{
 8001d46:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001d48:	691b      	ldr	r3, [r3, #16]
 8001d4a:	2082      	movs	r0, #130	; 0x82
 8001d4c:	4798      	blx	r3
 8001d4e:	b280      	uxth	r0, r0
 8001d50:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001d52:	2800      	cmp	r0, #0
 8001d54:	d04a      	beq.n	8001dec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001d56:	682b      	ldr	r3, [r5, #0]
 8001d58:	f10d 0206 	add.w	r2, sp, #6
 8001d5c:	695b      	ldr	r3, [r3, #20]
 8001d5e:	a901      	add	r1, sp, #4
 8001d60:	2082      	movs	r0, #130	; 0x82
 8001d62:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001d64:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001d68:	f640 6274 	movw	r2, #3700	; 0xe74
 8001d6c:	4293      	cmp	r3, r2
 8001d6e:	d93f      	bls.n	8001df0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001d70:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001d74:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001d78:	1ad2      	subs	r2, r2, r3
 8001d7a:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001d7c:	2a0a      	cmp	r2, #10
 8001d7e:	d93d      	bls.n	8001dfc <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001d80:	230b      	movs	r3, #11
 8001d82:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001d86:	4b23      	ldr	r3, [pc, #140]	; (8001e14 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001d88:	881b      	ldrh	r3, [r3, #0]
 8001d8a:	429a      	cmp	r2, r3
 8001d8c:	d901      	bls.n	8001d92 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001d8e:	3b01      	subs	r3, #1
 8001d90:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001d92:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001d96:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001d9a:	428b      	cmp	r3, r1
 8001d9c:	d830      	bhi.n	8001e00 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001d9e:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001da2:	330e      	adds	r3, #14
 8001da4:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001da6:	210f      	movs	r1, #15
 8001da8:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001dac:	491a      	ldr	r1, [pc, #104]	; (8001e18 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001dae:	8809      	ldrh	r1, [r1, #0]
 8001db0:	428b      	cmp	r3, r1
 8001db2:	d901      	bls.n	8001db8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001db4:	3901      	subs	r1, #1
 8001db6:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001db8:	4e18      	ldr	r6, [pc, #96]	; (8001e1c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001dba:	4d19      	ldr	r5, [pc, #100]	; (8001e20 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001dbc:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001dbe:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001dc0:	4283      	cmp	r3, r0
 8001dc2:	b281      	uxth	r1, r0
 8001dc4:	bf8c      	ite	hi
 8001dc6:	1a59      	subhi	r1, r3, r1
 8001dc8:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001dca:	b2b8      	uxth	r0, r7
 8001dcc:	42ba      	cmp	r2, r7
 8001dce:	bf8c      	ite	hi
 8001dd0:	1a10      	subhi	r0, r2, r0
 8001dd2:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001dd4:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001dd6:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001dd8:	4401      	add	r1, r0
 8001dda:	2905      	cmp	r1, #5
        {
            _x = x;
 8001ddc:	bfc8      	it	gt
 8001dde:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001de0:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001de2:	bfc8      	it	gt
 8001de4:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001de6:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001de8:	682b      	ldr	r3, [r5, #0]
 8001dea:	80a3      	strh	r3, [r4, #4]
    }
}
 8001dec:	b003      	add	sp, #12
 8001dee:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001df0:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001df2:	bf9c      	itt	ls
 8001df4:	23b4      	movls	r3, #180	; 0xb4
 8001df6:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001dfa:	e7bb      	b.n	8001d74 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	e7c8      	b.n	8001d92 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001e00:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001e04:	3308      	adds	r3, #8
 8001e06:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001e08:	2b0e      	cmp	r3, #14
 8001e0a:	d8cc      	bhi.n	8001da6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001e0c:	2300      	movs	r3, #0
 8001e0e:	e7d3      	b.n	8001db8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001e10:	200008e0 	.word	0x200008e0
 8001e14:	200008de 	.word	0x200008de
 8001e18:	200008dc 	.word	0x200008dc
 8001e1c:	200008e4 	.word	0x200008e4
 8001e20:	200008e8 	.word	0x200008e8

08001e24 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001e24:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001e26:	4668      	mov	r0, sp
{
 8001e28:	460d      	mov	r5, r1
 8001e2a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001e2c:	f7ff ff88 	bl	8001d40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001e30:	f8bd 0000 	ldrh.w	r0, [sp]
 8001e34:	b148      	cbz	r0, 8001e4a <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001e36:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001e3a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001e3c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001e40:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001e42:	4b03      	ldr	r3, [pc, #12]	; (8001e50 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001e44:	223c      	movs	r2, #60	; 0x3c
 8001e46:	601a      	str	r2, [r3, #0]
        return true;
 8001e48:	2001      	movs	r0, #1
}
 8001e4a:	b003      	add	sp, #12
 8001e4c:	bd30      	pop	{r4, r5, pc}
 8001e4e:	bf00      	nop
 8001e50:	2000000c 	.word	0x2000000c

08001e54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001e54:	b110      	cbz	r0, 8001e5c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001e56:	2802      	cmp	r0, #2
 8001e58:	d009      	beq.n	8001e6e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001e5a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001e5c:	4b07      	ldr	r3, [pc, #28]	; (8001e7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001e5e:	681a      	ldr	r2, [r3, #0]
 8001e60:	fab2 f282 	clz	r2, r2
 8001e64:	0952      	lsrs	r2, r2, #5
 8001e66:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001e68:	4805      	ldr	r0, [pc, #20]	; (8001e80 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001e6a:	f008 b959 	b.w	800a120 <HAL_GPIO_WritePin>
 8001e6e:	4b03      	ldr	r3, [pc, #12]	; (8001e7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001e70:	689a      	ldr	r2, [r3, #8]
 8001e72:	fab2 f282 	clz	r2, r2
 8001e76:	0952      	lsrs	r2, r2, #5
 8001e78:	2110      	movs	r1, #16
 8001e7a:	e7f5      	b.n	8001e68 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001e7c:	200008ec 	.word	0x200008ec
 8001e80:	40021000 	.word	0x40021000

08001e84 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001e84:	b110      	cbz	r0, 8001e8c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001e86:	2802      	cmp	r0, #2
 8001e88:	d009      	beq.n	8001e9e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001e8a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001e8c:	4b07      	ldr	r3, [pc, #28]	; (8001eac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001e8e:	681a      	ldr	r2, [r3, #0]
 8001e90:	3a00      	subs	r2, #0
 8001e92:	bf18      	it	ne
 8001e94:	2201      	movne	r2, #1
 8001e96:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001e98:	4805      	ldr	r0, [pc, #20]	; (8001eb0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001e9a:	f008 b941 	b.w	800a120 <HAL_GPIO_WritePin>
 8001e9e:	4b03      	ldr	r3, [pc, #12]	; (8001eac <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001ea0:	689a      	ldr	r2, [r3, #8]
 8001ea2:	3a00      	subs	r2, #0
 8001ea4:	bf18      	it	ne
 8001ea6:	2201      	movne	r2, #1
 8001ea8:	2110      	movs	r1, #16
 8001eaa:	e7f5      	b.n	8001e98 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001eac:	200008ec 	.word	0x200008ec
 8001eb0:	40021000 	.word	0x40021000

08001eb4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001eb4:	b110      	cbz	r0, 8001ebc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001eb6:	2802      	cmp	r0, #2
 8001eb8:	d004      	beq.n	8001ec4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001eba:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001ebc:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001ebe:	4802      	ldr	r0, [pc, #8]	; (8001ec8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001ec0:	f008 b932 	b.w	800a128 <HAL_GPIO_TogglePin>
 8001ec4:	2110      	movs	r1, #16
 8001ec6:	e7fa      	b.n	8001ebe <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001ec8:	40021000 	.word	0x40021000

08001ecc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001ecc:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001ece:	b130      	cbz	r0, 8001ede <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001ed0:	2802      	cmp	r0, #2
 8001ed2:	d009      	beq.n	8001ee8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001ed4:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001ed6:	1e43      	subs	r3, r0, #1
 8001ed8:	4258      	negs	r0, r3
 8001eda:	4158      	adcs	r0, r3
 8001edc:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001ede:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001ee0:	4802      	ldr	r0, [pc, #8]	; (8001eec <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001ee2:	f008 f917 	bl	800a114 <HAL_GPIO_ReadPin>
        break;
 8001ee6:	e7f6      	b.n	8001ed6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001ee8:	2110      	movs	r1, #16
 8001eea:	e7f9      	b.n	8001ee0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001eec:	40021000 	.word	0x40021000

08001ef0 <_ZN8touchgfx4GPIO4initEv>:
{
 8001ef0:	b570      	push	{r4, r5, r6, lr}
 8001ef2:	4d08      	ldr	r5, [pc, #32]	; (8001f14 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001ef4:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001ef6:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001ef8:	b2e0      	uxtb	r0, r4
 8001efa:	f7ff ffe7 	bl	8001ecc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001efe:	b118      	cbz	r0, 8001f08 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001f00:	682b      	ldr	r3, [r5, #0]
 8001f02:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001f04:	bf18      	it	ne
 8001f06:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001f08:	3401      	adds	r4, #1
 8001f0a:	2c05      	cmp	r4, #5
 8001f0c:	f105 0504 	add.w	r5, r5, #4
 8001f10:	d1f2      	bne.n	8001ef8 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001f12:	bd70      	pop	{r4, r5, r6, pc}
 8001f14:	200008ec 	.word	0x200008ec

08001f18 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001f18:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001f1a:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001f1e:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001f22:	4770      	bx	lr

08001f24 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001f24:	2000      	movs	r0, #0
 8001f26:	4770      	bx	lr

08001f28 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001f28:	4b03      	ldr	r3, [pc, #12]	; (8001f38 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001f2a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001f2c:	3900      	subs	r1, #0
 8001f2e:	bf18      	it	ne
 8001f30:	2101      	movne	r1, #1
 8001f32:	7019      	strb	r1, [r3, #0]
    }
 8001f34:	4770      	bx	lr
 8001f36:	bf00      	nop
 8001f38:	20013833 	.word	0x20013833

08001f3c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001f3c:	2000      	movs	r0, #0
 8001f3e:	4770      	bx	lr

08001f40 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001f40:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001f42:	b10b      	cbz	r3, 8001f48 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001f44:	4608      	mov	r0, r1
 8001f46:	4718      	bx	r3
        }
    }
 8001f48:	4770      	bx	lr

08001f4a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001f4a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001f4e:	4770      	bx	lr

08001f50 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001f50:	6840      	ldr	r0, [r0, #4]
 8001f52:	6803      	ldr	r3, [r0, #0]
 8001f54:	699b      	ldr	r3, [r3, #24]
 8001f56:	4718      	bx	r3

08001f58 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001f58:	4770      	bx	lr

08001f5a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001f5a:	4770      	bx	lr

08001f5c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001f5c:	4770      	bx	lr
	...

08001f60 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001f60:	b510      	push	{r4, lr}
 8001f62:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001f64:	f000 fb4e 	bl	8002604 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001f68:	6823      	ldr	r3, [r4, #0]
 8001f6a:	4903      	ldr	r1, [pc, #12]	; (8001f78 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001f6c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001f70:	4620      	mov	r0, r4
}
 8001f72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001f76:	4718      	bx	r3
 8001f78:	d0000000 	.word	0xd0000000

08001f7c <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001f7c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001f7e:	6803      	ldr	r3, [r0, #0]
{
 8001f80:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001f82:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001f86:	4798      	blx	r3
    enableInterrupts();
 8001f88:	6823      	ldr	r3, [r4, #0]
 8001f8a:	4620      	mov	r0, r4
 8001f8c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001f8e:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001f90:	f000 f8ec 	bl	800216c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001f94:	6823      	ldr	r3, [r4, #0]
 8001f96:	4620      	mov	r0, r4
 8001f98:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001f9a:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001f9c:	2029      	movs	r0, #41	; 0x29
 8001f9e:	f7ff f943 	bl	8001228 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001fa2:	f000 f8e3 	bl	800216c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001fa6:	6823      	ldr	r3, [r4, #0]
 8001fa8:	4620      	mov	r0, r4
 8001faa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001fac:	4798      	blx	r3
    for (;;)
 8001fae:	e7f8      	b.n	8001fa2 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001fb0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001fb0:	b510      	push	{r4, lr}
 8001fb2:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001fb4:	f010 fa4a 	bl	801244c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001fb8:	6823      	ldr	r3, [r4, #0]
 8001fba:	4620      	mov	r0, r4
 8001fbc:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001fc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001fc4:	4718      	bx	r3

08001fc6 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001fc6:	f000 bb0f 	b.w	80025e8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001fca <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001fca:	f000 bb13 	b.w	80025f4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001fce <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001fce:	f000 bb37 	b.w	8002640 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001fd2 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001fd2:	f000 badf 	b.w	8002594 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001fd6 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001fd6:	f000 bae5 	b.w	80025a4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001fda <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001fda:	f000 bb3d 	b.w	8002658 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001fde <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001fde:	f000 bae9 	b.w	80025b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001fe2 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001fe2:	f00f bc9e 	b.w	8011922 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001fe6 <_ZN11TouchGFXHALD0Ev>:
 8001fe6:	b510      	push	{r4, lr}
 8001fe8:	217c      	movs	r1, #124	; 0x7c
 8001fea:	4604      	mov	r4, r0
 8001fec:	f028 ff1d 	bl	802ae2a <_ZdlPvj>
 8001ff0:	4620      	mov	r0, r4
 8001ff2:	bd10      	pop	{r4, pc}

08001ff4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001ff4:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001ff8:	b11b      	cbz	r3, 8002002 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001ffa:	6840      	ldr	r0, [r0, #4]
 8001ffc:	6803      	ldr	r3, [r0, #0]
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	4718      	bx	r3
    }
 8002002:	4618      	mov	r0, r3
 8002004:	4770      	bx	lr
	...

08002008 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8002008:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800200a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 800200e:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8002012:	4b0c      	ldr	r3, [pc, #48]	; (8002044 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8002014:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8002016:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8002018:	d009      	beq.n	800202e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800201a:	b93a      	cbnz	r2, 800202c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800201c:	4a0a      	ldr	r2, [pc, #40]	; (8002048 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800201e:	490b      	ldr	r1, [pc, #44]	; (800204c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002020:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8002022:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8002024:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002026:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8002028:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800202a:	701a      	strb	r2, [r3, #0]
    }
 800202c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800202e:	2a00      	cmp	r2, #0
 8002030:	d0fc      	beq.n	800202c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002032:	4a05      	ldr	r2, [pc, #20]	; (8002048 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002034:	4905      	ldr	r1, [pc, #20]	; (800204c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8002036:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8002038:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800203a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800203c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 800203e:	2200      	movs	r2, #0
 8002040:	e7f3      	b.n	800202a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8002042:	bf00      	nop
 8002044:	2001382c 	.word	0x2001382c
 8002048:	20013828 	.word	0x20013828
 800204c:	2001382a 	.word	0x2001382a

08002050 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8002050:	b570      	push	{r4, r5, r6, lr}
 8002052:	460d      	mov	r5, r1
 8002054:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8002056:	b935      	cbnz	r5, 8002066 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8002058:	4b09      	ldr	r3, [pc, #36]	; (8002080 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800205a:	4a0a      	ldr	r2, [pc, #40]	; (8002084 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 800205c:	480a      	ldr	r0, [pc, #40]	; (8002088 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800205e:	f240 21d2 	movw	r1, #722	; 0x2d2
 8002062:	f029 fcf5 	bl	802ba50 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8002066:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800206a:	4b08      	ldr	r3, [pc, #32]	; (800208c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 800206c:	3a00      	subs	r2, #0
 800206e:	bf18      	it	ne
 8002070:	2201      	movne	r2, #1
 8002072:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8002074:	6803      	ldr	r3, [r0, #0]
    }
 8002076:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800207a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800207e:	4718      	bx	r3
 8002080:	0802cc78 	.word	0x0802cc78
 8002084:	0802ccb0 	.word	0x0802ccb0
 8002088:	0802ccfe 	.word	0x0802ccfe
 800208c:	20013832 	.word	0x20013832

08002090 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8002090:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8002092:	4b09      	ldr	r3, [pc, #36]	; (80020b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8002094:	881b      	ldrh	r3, [r3, #0]
 8002096:	428b      	cmp	r3, r1
 8002098:	d803      	bhi.n	80020a2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800209a:	4b08      	ldr	r3, [pc, #32]	; (80020bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 800209c:	881b      	ldrh	r3, [r3, #0]
 800209e:	4293      	cmp	r3, r2
 80020a0:	d905      	bls.n	80020ae <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80020a2:	4b07      	ldr	r3, [pc, #28]	; (80020c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80020a4:	4a07      	ldr	r2, [pc, #28]	; (80020c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80020a6:	4808      	ldr	r0, [pc, #32]	; (80020c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80020a8:	219e      	movs	r1, #158	; 0x9e
 80020aa:	f029 fcd1 	bl	802ba50 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80020ae:	4b07      	ldr	r3, [pc, #28]	; (80020cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80020b0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80020b2:	4b07      	ldr	r3, [pc, #28]	; (80020d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80020b4:	801a      	strh	r2, [r3, #0]
    }
 80020b6:	bd08      	pop	{r3, pc}
 80020b8:	20013828 	.word	0x20013828
 80020bc:	2001382a 	.word	0x2001382a
 80020c0:	0802cd43 	.word	0x0802cd43
 80020c4:	0802cda6 	.word	0x0802cda6
 80020c8:	0802ccfe 	.word	0x0802ccfe
 80020cc:	2001382e 	.word	0x2001382e
 80020d0:	20013830 	.word	0x20013830

080020d4 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80020d4:	2101      	movs	r1, #1
{
 80020d6:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80020d8:	2200      	movs	r2, #0
 80020da:	4608      	mov	r0, r1
 80020dc:	f00b fdb4 	bl	800dc48 <osSemaphoreNew>
 80020e0:	4b0a      	ldr	r3, [pc, #40]	; (800210c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80020e2:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80020e4:	b928      	cbnz	r0, 80020f2 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80020e6:	4b0a      	ldr	r3, [pc, #40]	; (8002110 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80020e8:	4a0a      	ldr	r2, [pc, #40]	; (8002114 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80020ea:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80020ec:	480a      	ldr	r0, [pc, #40]	; (8002118 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80020ee:	f029 fcaf 	bl	802ba50 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80020f2:	2200      	movs	r2, #0
 80020f4:	2104      	movs	r1, #4
 80020f6:	2001      	movs	r0, #1
 80020f8:	f00b fe5a 	bl	800ddb0 <osMessageQueueNew>
 80020fc:	4b07      	ldr	r3, [pc, #28]	; (800211c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80020fe:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002100:	b918      	cbnz	r0, 800210a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8002102:	4b07      	ldr	r3, [pc, #28]	; (8002120 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002104:	4a03      	ldr	r2, [pc, #12]	; (8002114 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002106:	212c      	movs	r1, #44	; 0x2c
 8002108:	e7f0      	b.n	80020ec <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800210a:	bd08      	pop	{r3, pc}
 800210c:	20000900 	.word	0x20000900
 8002110:	0802cec4 	.word	0x0802cec4
 8002114:	0802cf0d 	.word	0x0802cf0d
 8002118:	0802cf3c 	.word	0x0802cf3c
 800211c:	200008fc 	.word	0x200008fc
 8002120:	0802cfb6 	.word	0x0802cfb6

08002124 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002124:	4b02      	ldr	r3, [pc, #8]	; (8002130 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002126:	f04f 31ff 	mov.w	r1, #4294967295
 800212a:	6818      	ldr	r0, [r3, #0]
 800212c:	f00b bde0 	b.w	800dcf0 <osSemaphoreAcquire>
 8002130:	20000900 	.word	0x20000900

08002134 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002134:	4b01      	ldr	r3, [pc, #4]	; (800213c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002136:	6818      	ldr	r0, [r3, #0]
 8002138:	f00b be0e 	b.w	800dd58 <osSemaphoreRelease>
 800213c:	20000900 	.word	0x20000900

08002140 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8002140:	4b02      	ldr	r3, [pc, #8]	; (800214c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8002142:	2100      	movs	r1, #0
 8002144:	6818      	ldr	r0, [r3, #0]
 8002146:	f00b bdd3 	b.w	800dcf0 <osSemaphoreAcquire>
 800214a:	bf00      	nop
 800214c:	20000900 	.word	0x20000900

08002150 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8002150:	f7ff bff0 	b.w	8002134 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002154 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002154:	4803      	ldr	r0, [pc, #12]	; (8002164 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002156:	4904      	ldr	r1, [pc, #16]	; (8002168 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002158:	6800      	ldr	r0, [r0, #0]
 800215a:	2300      	movs	r3, #0
 800215c:	461a      	mov	r2, r3
 800215e:	f00b be61 	b.w	800de24 <osMessageQueuePut>
 8002162:	bf00      	nop
 8002164:	200008fc 	.word	0x200008fc
 8002168:	20000010 	.word	0x20000010

0800216c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 800216c:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800216e:	4c08      	ldr	r4, [pc, #32]	; (8002190 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8002170:	2300      	movs	r3, #0
 8002172:	461a      	mov	r2, r3
 8002174:	a901      	add	r1, sp, #4
 8002176:	6820      	ldr	r0, [r4, #0]
 8002178:	f00b fe8a 	bl	800de90 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 800217c:	6820      	ldr	r0, [r4, #0]
 800217e:	f04f 33ff 	mov.w	r3, #4294967295
 8002182:	2200      	movs	r2, #0
 8002184:	a901      	add	r1, sp, #4
 8002186:	f00b fe83 	bl	800de90 <osMessageQueueGet>
}
 800218a:	b002      	add	sp, #8
 800218c:	bd10      	pop	{r4, pc}
 800218e:	bf00      	nop
 8002190:	200008fc 	.word	0x200008fc

08002194 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8002194:	4770      	bx	lr

08002196 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8002196:	2000      	movs	r0, #0
 8002198:	4770      	bx	lr

0800219a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 800219a:	4770      	bx	lr

0800219c <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 800219c:	4770      	bx	lr

0800219e <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 800219e:	2000      	movs	r0, #0
 80021a0:	4770      	bx	lr

080021a2 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80021a2:	4770      	bx	lr

080021a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80021a4:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80021a6:	4a03      	ldr	r2, [pc, #12]	; (80021b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80021a8:	4b03      	ldr	r3, [pc, #12]	; (80021b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80021aa:	4804      	ldr	r0, [pc, #16]	; (80021bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80021ac:	2122      	movs	r1, #34	; 0x22
 80021ae:	f029 fc4f 	bl	802ba50 <__assert_func>
 80021b2:	bf00      	nop
 80021b4:	0802d01b 	.word	0x0802d01b
 80021b8:	0802cff8 	.word	0x0802cff8
 80021bc:	0802d059 	.word	0x0802d059

080021c0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80021c0:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80021c2:	4a03      	ldr	r2, [pc, #12]	; (80021d0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 80021c4:	4b03      	ldr	r3, [pc, #12]	; (80021d4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 80021c6:	4804      	ldr	r0, [pc, #16]	; (80021d8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 80021c8:	2127      	movs	r1, #39	; 0x27
 80021ca:	f029 fc41 	bl	802ba50 <__assert_func>
 80021ce:	bf00      	nop
 80021d0:	0802d0d1 	.word	0x0802d0d1
 80021d4:	0802cff8 	.word	0x0802cff8
 80021d8:	0802d059 	.word	0x0802d059

080021dc <_ZN8STM32DMAD0Ev>:
 80021dc:	b510      	push	{r4, lr}
 80021de:	2144      	movs	r1, #68	; 0x44
 80021e0:	4604      	mov	r4, r0
 80021e2:	f028 fe22 	bl	802ae2a <_ZdlPvj>
 80021e6:	4620      	mov	r0, r4
 80021e8:	bd10      	pop	{r4, pc}
	...

080021ec <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80021ec:	b538      	push	{r3, r4, r5, lr}
 80021ee:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 80021f0:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80021f2:	2500      	movs	r5, #0
 80021f4:	4b06      	ldr	r3, [pc, #24]	; (8002210 <_ZN8STM32DMAC1Ev+0x24>)
 80021f6:	7225      	strb	r5, [r4, #8]
 80021f8:	300c      	adds	r0, #12
 80021fa:	6060      	str	r0, [r4, #4]
 80021fc:	7265      	strb	r5, [r4, #9]
 80021fe:	2201      	movs	r2, #1
 8002200:	f841 3b20 	str.w	r3, [r1], #32
 8002204:	f010 fa7a 	bl	80126fc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002208:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 800220a:	4620      	mov	r0, r4
 800220c:	bd38      	pop	{r3, r4, r5, pc}
 800220e:	bf00      	nop
 8002210:	0802d118 	.word	0x0802d118

08002214 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002214:	2001      	movs	r0, #1
 8002216:	4770      	bx	lr

08002218 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002218:	2038      	movs	r0, #56	; 0x38
 800221a:	4770      	bx	lr

0800221c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 800221c:	2338      	movs	r3, #56	; 0x38
 800221e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002222:	3008      	adds	r0, #8
 8002224:	4770      	bx	lr

08002226 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002226:	2338      	movs	r3, #56	; 0x38
 8002228:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800222c:	3008      	adds	r0, #8
 800222e:	4770      	bx	lr

08002230 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002230:	2001      	movs	r0, #1
 8002232:	4770      	bx	lr

08002234 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002234:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002238:	4770      	bx	lr

0800223a <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800223a:	f641 5304 	movw	r3, #7428	; 0x1d04
 800223e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002242:	3008      	adds	r0, #8
 8002244:	4770      	bx	lr

08002246 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002246:	f641 5304 	movw	r3, #7428	; 0x1d04
 800224a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800224e:	3008      	adds	r0, #8
 8002250:	4770      	bx	lr

08002252 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8002252:	2001      	movs	r0, #1
 8002254:	4770      	bx	lr

08002256 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002256:	2010      	movs	r0, #16
 8002258:	4770      	bx	lr

0800225a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800225a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800225e:	3008      	adds	r0, #8
 8002260:	4770      	bx	lr

08002262 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002262:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8002266:	3008      	adds	r0, #8
 8002268:	4770      	bx	lr

0800226a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 800226a:	4608      	mov	r0, r1
 800226c:	f002 bb8c 	b.w	8004988 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08002270 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8002270:	b510      	push	{r4, lr}
 8002272:	4b03      	ldr	r3, [pc, #12]	; (8002280 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8002274:	6003      	str	r3, [r0, #0]
 8002276:	4604      	mov	r4, r0
 8002278:	f00e fa69 	bl	801074e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800227c:	4620      	mov	r0, r4
 800227e:	bd10      	pop	{r4, pc}
 8002280:	0802d1d0 	.word	0x0802d1d0

08002284 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8002284:	b510      	push	{r4, lr}
 8002286:	4604      	mov	r4, r0
 8002288:	f7ff fff2 	bl	8002270 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800228c:	4620      	mov	r0, r4
 800228e:	2140      	movs	r1, #64	; 0x40
 8002290:	f028 fdcb 	bl	802ae2a <_ZdlPvj>
 8002294:	4620      	mov	r0, r4
 8002296:	bd10      	pop	{r4, pc}

08002298 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002298:	b510      	push	{r4, lr}
 800229a:	4b03      	ldr	r3, [pc, #12]	; (80022a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800229c:	6003      	str	r3, [r0, #0]
 800229e:	4604      	mov	r4, r0
 80022a0:	f00e fa55 	bl	801074e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80022a4:	4620      	mov	r0, r4
 80022a6:	bd10      	pop	{r4, pc}
 80022a8:	0802d19c 	.word	0x0802d19c

080022ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80022ac:	b510      	push	{r4, lr}
 80022ae:	4604      	mov	r4, r0
 80022b0:	f7ff fff2 	bl	8002298 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80022b4:	4620      	mov	r0, r4
 80022b6:	f641 510c 	movw	r1, #7436	; 0x1d0c
 80022ba:	f028 fdb6 	bl	802ae2a <_ZdlPvj>
 80022be:	4620      	mov	r0, r4
 80022c0:	bd10      	pop	{r4, pc}
	...

080022c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80022c4:	b510      	push	{r4, lr}
 80022c6:	4b03      	ldr	r3, [pc, #12]	; (80022d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80022c8:	6003      	str	r3, [r0, #0]
 80022ca:	4604      	mov	r4, r0
 80022cc:	f00e fa3f 	bl	801074e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80022d0:	4620      	mov	r0, r4
 80022d2:	bd10      	pop	{r4, pc}
 80022d4:	0802d168 	.word	0x0802d168

080022d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80022d8:	b510      	push	{r4, lr}
 80022da:	4604      	mov	r4, r0
 80022dc:	f7ff fff2 	bl	80022c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80022e0:	4620      	mov	r0, r4
 80022e2:	2118      	movs	r1, #24
 80022e4:	f028 fda1 	bl	802ae2a <_ZdlPvj>
 80022e8:	4620      	mov	r0, r4
 80022ea:	bd10      	pop	{r4, pc}

080022ec <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80022ec:	b510      	push	{r4, lr}
 80022ee:	4b09      	ldr	r3, [pc, #36]	; (8002314 <_ZN12FrontendHeapD1Ev+0x28>)
 80022f0:	6003      	str	r3, [r0, #0]
 80022f2:	4604      	mov	r4, r0
 80022f4:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 80022f8:	3018      	adds	r0, #24
 80022fa:	f7ff ffb9 	bl	8002270 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80022fe:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8002302:	f7ff ffc9 	bl	8002298 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002306:	f104 0014 	add.w	r0, r4, #20
 800230a:	f7ff ffdb 	bl	80022c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800230e:	4620      	mov	r0, r4
 8002310:	bd10      	pop	{r4, pc}
 8002312:	bf00      	nop
 8002314:	0802d204 	.word	0x0802d204

08002318 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002318:	b508      	push	{r3, lr}
 800231a:	4802      	ldr	r0, [pc, #8]	; (8002324 <__tcf_0+0xc>)
 800231c:	f7ff ffe6 	bl	80022ec <_ZN12FrontendHeapD1Ev>
 8002320:	bd08      	pop	{r3, pc}
 8002322:	bf00      	nop
 8002324:	20000908 	.word	0x20000908

08002328 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002328:	b510      	push	{r4, lr}
 800232a:	4604      	mov	r4, r0
 800232c:	f7ff ffde 	bl	80022ec <_ZN12FrontendHeapD1Ev>
 8002330:	4620      	mov	r0, r4
 8002332:	f641 61dc 	movw	r1, #7900	; 0x1edc
 8002336:	f028 fd78 	bl	802ae2a <_ZdlPvj>
 800233a:	4620      	mov	r0, r4
 800233c:	bd10      	pop	{r4, pc}
	...

08002340 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8002340:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002344:	f000 fa5c 	bl	8002800 <_ZN14BitmapDatabase11getInstanceEv>
 8002348:	4605      	mov	r5, r0
 800234a:	f000 fa5d 	bl	8002808 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800234e:	2400      	movs	r4, #0
 8002350:	4601      	mov	r1, r0
 8002352:	4623      	mov	r3, r4
 8002354:	4628      	mov	r0, r5
 8002356:	4622      	mov	r2, r4
 8002358:	9400      	str	r4, [sp, #0]
 800235a:	f018 f8ed 	bl	801a538 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800235e:	4b26      	ldr	r3, [pc, #152]	; (80023f8 <touchgfx_init+0xb8>)
 8002360:	4a26      	ldr	r2, [pc, #152]	; (80023fc <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8002362:	4d27      	ldr	r5, [pc, #156]	; (8002400 <touchgfx_init+0xc0>)
 8002364:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8002366:	4620      	mov	r0, r4
 8002368:	f006 fb14 	bl	8008994 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800236c:	4825      	ldr	r0, [pc, #148]	; (8002404 <touchgfx_init+0xc4>)
 800236e:	f018 f84b 	bl	801a408 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8002372:	682b      	ldr	r3, [r5, #0]
 8002374:	f3bf 8f5b 	dmb	ish
 8002378:	07db      	lsls	r3, r3, #31
 800237a:	d436      	bmi.n	80023ea <touchgfx_init+0xaa>
 800237c:	4628      	mov	r0, r5
 800237e:	f028 fd56 	bl	802ae2e <__cxa_guard_acquire>
 8002382:	b390      	cbz	r0, 80023ea <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8002384:	4c20      	ldr	r4, [pc, #128]	; (8002408 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8002386:	4b21      	ldr	r3, [pc, #132]	; (800240c <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 8002388:	4f21      	ldr	r7, [pc, #132]	; (8002410 <touchgfx_init+0xd0>)
 800238a:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 800238c:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 8002390:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8002394:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 8002398:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 800239a:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 800239e:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80023a0:	6126      	str	r6, [r4, #16]
 80023a2:	f00e f9d5 	bl	8010750 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80023a6:	4b1b      	ldr	r3, [pc, #108]	; (8002414 <touchgfx_init+0xd4>)
 80023a8:	6163      	str	r3, [r4, #20]
 80023aa:	4640      	mov	r0, r8
 80023ac:	f00e f9d0 	bl	8010750 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80023b0:	4b19      	ldr	r3, [pc, #100]	; (8002418 <touchgfx_init+0xd8>)
 80023b2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80023b4:	4638      	mov	r0, r7
 80023b6:	f00e f9cb 	bl	8010750 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80023ba:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80023be:	4a17      	ldr	r2, [pc, #92]	; (800241c <touchgfx_init+0xdc>)
 80023c0:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 80023c4:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 80023c8:	f006 ff5a 	bl	8009280 <_ZN5ModelC1Ev>
 80023cc:	4622      	mov	r2, r4
 80023ce:	f1a6 0108 	sub.w	r1, r6, #8
 80023d2:	4630      	mov	r0, r6
 80023d4:	f006 fc64 	bl	8008ca0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80023d8:	4630      	mov	r0, r6
 80023da:	f002 fad5 	bl	8004988 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 80023de:	4810      	ldr	r0, [pc, #64]	; (8002420 <touchgfx_init+0xe0>)
 80023e0:	f029 fb54 	bl	802ba8c <atexit>
 80023e4:	4628      	mov	r0, r5
 80023e6:	f028 fd2e 	bl	802ae46 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80023ea:	480e      	ldr	r0, [pc, #56]	; (8002424 <touchgfx_init+0xe4>)
}
 80023ec:	b002      	add	sp, #8
 80023ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80023f2:	f7ff bdb5 	b.w	8001f60 <_ZN11TouchGFXHAL10initializeEv>
 80023f6:	bf00      	nop
 80023f8:	20013898 	.word	0x20013898
 80023fc:	200028a8 	.word	0x200028a8
 8002400:	20000904 	.word	0x20000904
 8002404:	20000014 	.word	0x20000014
 8002408:	20000908 	.word	0x20000908
 800240c:	0802d204 	.word	0x0802d204
 8002410:	20002640 	.word	0x20002640
 8002414:	0802d168 	.word	0x0802d168
 8002418:	0802d19c 	.word	0x0802d19c
 800241c:	0802d1d0 	.word	0x0802d1d0
 8002420:	08002319 	.word	0x08002319
 8002424:	2000282c 	.word	0x2000282c

08002428 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002428:	4770      	bx	lr
	...

0800242c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800242c:	4801      	ldr	r0, [pc, #4]	; (8002434 <touchgfx_taskEntry+0x8>)
 800242e:	f7ff bda5 	b.w	8001f7c <_ZN11TouchGFXHAL9taskEntryEv>
 8002432:	bf00      	nop
 8002434:	2000282c 	.word	0x2000282c

08002438 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002438:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800243a:	4e22      	ldr	r6, [pc, #136]	; (80024c4 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 800243c:	4c22      	ldr	r4, [pc, #136]	; (80024c8 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800243e:	4d23      	ldr	r5, [pc, #140]	; (80024cc <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8002440:	4b23      	ldr	r3, [pc, #140]	; (80024d0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8002442:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002444:	4630      	mov	r0, r6
 8002446:	f7ff fed1 	bl	80021ec <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800244a:	4628      	mov	r0, r5
 800244c:	f01c fb40 	bl	801ead0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8002450:	4b20      	ldr	r3, [pc, #128]	; (80024d4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002452:	4821      	ldr	r0, [pc, #132]	; (80024d8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002454:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002456:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002458:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 800245c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8002460:	491e      	ldr	r1, [pc, #120]	; (80024dc <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8002462:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8002464:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8002468:	491d      	ldr	r1, [pc, #116]	; (80024e0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800246a:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 800246c:	491d      	ldr	r1, [pc, #116]	; (80024e4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 800246e:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8002472:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8002474:	21f0      	movs	r1, #240	; 0xf0
 8002476:	8001      	strh	r1, [r0, #0]
 8002478:	481b      	ldr	r0, [pc, #108]	; (80024e8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 800247a:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800247c:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800247e:	481b      	ldr	r0, [pc, #108]	; (80024ec <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8002480:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8002484:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8002488:	e9c3 2204 	strd	r2, r2, [r3, #16]
 800248c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8002490:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8002494:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8002498:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 800249c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80024a0:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80024a4:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80024a8:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80024aa:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80024ae:	8001      	strh	r1, [r0, #0]
 80024b0:	480f      	ldr	r0, [pc, #60]	; (80024f0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80024b2:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80024b4:	490f      	ldr	r1, [pc, #60]	; (80024f4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80024b6:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80024b8:	2201      	movs	r2, #1
 80024ba:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80024be:	4a0e      	ldr	r2, [pc, #56]	; (80024f8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80024c0:	601a      	str	r2, [r3, #0]
}
 80024c2:	bd70      	pop	{r4, r5, r6, pc}
 80024c4:	200027e8 	.word	0x200027e8
 80024c8:	200027e4 	.word	0x200027e4
 80024cc:	200028ac 	.word	0x200028ac
 80024d0:	0802cc68 	.word	0x0802cc68
 80024d4:	2000282c 	.word	0x2000282c
 80024d8:	20013828 	.word	0x20013828
 80024dc:	01000001 	.word	0x01000001
 80024e0:	01010000 	.word	0x01010000
 80024e4:	20013834 	.word	0x20013834
 80024e8:	2001382e 	.word	0x2001382e
 80024ec:	2001382a 	.word	0x2001382a
 80024f0:	20013830 	.word	0x20013830
 80024f4:	2001382c 	.word	0x2001382c
 80024f8:	0802cdf4 	.word	0x0802cdf4

080024fc <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80024fc:	2000      	movs	r0, #0
 80024fe:	4770      	bx	lr

08002500 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002500:	8081      	strh	r1, [r0, #4]
    }
 8002502:	4770      	bx	lr

08002504 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002504:	80c1      	strh	r1, [r0, #6]
    }
 8002506:	4770      	bx	lr

08002508 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002508:	8101      	strh	r1, [r0, #8]
    }
 800250a:	4770      	bx	lr

0800250c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800250c:	8141      	strh	r1, [r0, #10]
    }
 800250e:	4770      	bx	lr

08002510 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002510:	4770      	bx	lr

08002512 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002512:	4770      	bx	lr

08002514 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002514:	4770      	bx	lr

08002516 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002516:	4770      	bx	lr

08002518 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002518:	4770      	bx	lr

0800251a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800251a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800251c:	88c4      	ldrh	r4, [r0, #6]
 800251e:	6803      	ldr	r3, [r0, #0]
 8002520:	1b12      	subs	r2, r2, r4
 8002522:	8884      	ldrh	r4, [r0, #4]
 8002524:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002526:	1b09      	subs	r1, r1, r4
 8002528:	b212      	sxth	r2, r2
    }
 800252a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800252e:	b209      	sxth	r1, r1
 8002530:	4718      	bx	r3

08002532 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002532:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002536:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002538:	f04f 33ff 	mov.w	r3, #4294967295
 800253c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800253e:	6813      	ldr	r3, [r2, #0]
 8002540:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8002542:	6010      	str	r0, [r2, #0]
    }
 8002544:	4770      	bx	lr

08002546 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002546:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800254a:	b11a      	cbz	r2, 8002554 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800254c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002550:	b102      	cbz	r2, 8002554 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002552:	6018      	str	r0, [r3, #0]
        }
    }
 8002554:	4770      	bx	lr

08002556 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002556:	2000      	movs	r0, #0
 8002558:	4770      	bx	lr

0800255a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800255a:	888b      	ldrh	r3, [r1, #4]
 800255c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800255e:	2001      	movs	r0, #1
 8002560:	4770      	bx	lr

08002562 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8002562:	4770      	bx	lr

08002564 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002564:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8002568:	4770      	bx	lr

0800256a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800256a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800256e:	4770      	bx	lr

08002570 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8002570:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002572:	2200      	movs	r2, #0
        return rect.width;
 8002574:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8002578:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800257c:	8002      	strh	r2, [r0, #0]
 800257e:	8042      	strh	r2, [r0, #2]
 8002580:	8084      	strh	r4, [r0, #4]
 8002582:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8002584:	bd10      	pop	{r4, pc}

08002586 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8002586:	2200      	movs	r2, #0
 8002588:	8002      	strh	r2, [r0, #0]
 800258a:	8042      	strh	r2, [r0, #2]
 800258c:	8082      	strh	r2, [r0, #4]
 800258e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002590:	4770      	bx	lr
	...

08002594 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002594:	4b02      	ldr	r3, [pc, #8]	; (80025a0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8002596:	2290      	movs	r2, #144	; 0x90
 8002598:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800259c:	4770      	bx	lr
 800259e:	bf00      	nop
 80025a0:	e000e100 	.word	0xe000e100

080025a4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80025a4:	4b02      	ldr	r3, [pc, #8]	; (80025b0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80025a6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80025aa:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80025ac:	4770      	bx	lr
 80025ae:	bf00      	nop
 80025b0:	e000e100 	.word	0xe000e100

080025b4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80025b4:	4a09      	ldr	r2, [pc, #36]	; (80025dc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80025b6:	490a      	ldr	r1, [pc, #40]	; (80025e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80025b8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80025ba:	480a      	ldr	r0, [pc, #40]	; (80025e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80025bc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80025c0:	3b01      	subs	r3, #1
 80025c2:	b29b      	uxth	r3, r3
 80025c4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80025c6:	6911      	ldr	r1, [r2, #16]
 80025c8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 80025cc:	3901      	subs	r1, #1
 80025ce:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80025d0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80025d2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80025d4:	f043 0301 	orr.w	r3, r3, #1
 80025d8:	6353      	str	r3, [r2, #52]	; 0x34
}
 80025da:	4770      	bx	lr
 80025dc:	40016800 	.word	0x40016800
 80025e0:	20002932 	.word	0x20002932
 80025e4:	20002930 	.word	0x20002930

080025e8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80025e8:	4b01      	ldr	r3, [pc, #4]	; (80025f0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80025ea:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80025ee:	4770      	bx	lr
 80025f0:	40016800 	.word	0x40016800

080025f4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80025f4:	4b02      	ldr	r3, [pc, #8]	; (8002600 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80025f6:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80025f8:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80025fc:	625a      	str	r2, [r3, #36]	; 0x24
}
 80025fe:	4770      	bx	lr
 8002600:	40016800 	.word	0x40016800

08002604 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002604:	b570      	push	{r4, r5, r6, lr}
 8002606:	4604      	mov	r4, r0
    HAL::initialize();
 8002608:	f00f f9e1 	bl	80119ce <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800260c:	6823      	ldr	r3, [r4, #0]
 800260e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8002610:	f014 fb56 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 8002614:	4601      	mov	r1, r0
 8002616:	4620      	mov	r0, r4
 8002618:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800261a:	6823      	ldr	r3, [r4, #0]
 800261c:	4a05      	ldr	r2, [pc, #20]	; (8002634 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800261e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8002622:	4620      	mov	r0, r4
 8002624:	46ac      	mov	ip, r5
 8002626:	2300      	movs	r3, #0
}
 8002628:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800262c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8002630:	4760      	bx	ip
 8002632:	bf00      	nop
 8002634:	d004b000 	.word	0xd004b000

08002638 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002638:	f00f b9b0 	b.w	801199c <_ZN8touchgfx3HAL10beginFrameEv>

0800263c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800263c:	f00f b9ba 	b.w	80119b4 <_ZN8touchgfx3HAL8endFrameEv>

08002640 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8002640:	f00f b975 	b.w	801192e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002644 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002644:	f00f bad7 	b.w	8011bf6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002648 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002648:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800264c:	b112      	cbz	r2, 8002654 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800264e:	6803      	ldr	r3, [r0, #0]
 8002650:	695b      	ldr	r3, [r3, #20]
 8002652:	4718      	bx	r3
    }
 8002654:	4770      	bx	lr
	...

08002658 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002658:	4b04      	ldr	r3, [pc, #16]	; (800266c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800265a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800265e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8002662:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8002666:	f3bf 8f6f 	isb	sy
}
 800266a:	4770      	bx	lr
 800266c:	e000e100 	.word	0xe000e100

08002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8002670:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8002672:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8002674:	4e12      	ldr	r6, [pc, #72]	; (80026c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8002676:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8002678:	4b12      	ldr	r3, [pc, #72]	; (80026c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800267a:	6003      	str	r3, [r0, #0]
 800267c:	6833      	ldr	r3, [r6, #0]
 800267e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8002682:	4605      	mov	r5, r0
 8002684:	b10a      	cbz	r2, 800268a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8002686:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002688:	b900      	cbnz	r0, 800268c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800268a:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800268c:	6803      	ldr	r3, [r0, #0]
 800268e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002690:	4798      	blx	r3
        return auxiliaryLCD;
 8002692:	6833      	ldr	r3, [r6, #0]
 8002694:	fab0 f480 	clz	r4, r0
 8002698:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800269a:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 800269c:	b130      	cbz	r0, 80026ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800269e:	6803      	ldr	r3, [r0, #0]
 80026a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026a2:	4798      	blx	r3
 80026a4:	2800      	cmp	r0, #0
 80026a6:	bf08      	it	eq
 80026a8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80026ac:	b92c      	cbnz	r4, 80026ba <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80026ae:	4b06      	ldr	r3, [pc, #24]	; (80026c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80026b0:	4a06      	ldr	r2, [pc, #24]	; (80026cc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80026b2:	4807      	ldr	r0, [pc, #28]	; (80026d0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80026b4:	212c      	movs	r1, #44	; 0x2c
 80026b6:	f029 f9cb 	bl	802ba50 <__assert_func>
    }
 80026ba:	4628      	mov	r0, r5
 80026bc:	bd70      	pop	{r4, r5, r6, pc}
 80026be:	bf00      	nop
 80026c0:	20013834 	.word	0x20013834
 80026c4:	0802d314 	.word	0x0802d314
 80026c8:	0802d210 	.word	0x0802d210
 80026cc:	0802d26e 	.word	0x0802d26e
 80026d0:	0802d2a7 	.word	0x0802d2a7

080026d4 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80026d4:	4770      	bx	lr
	...

080026d8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80026d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80026dc:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80026de:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80026e2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80026e6:	d105      	bne.n	80026f4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80026e8:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80026ec:	4281      	cmp	r1, r0
 80026ee:	d8fb      	bhi.n	80026e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80026f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80026f4:	4f17      	ldr	r7, [pc, #92]	; (8002754 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80026f6:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80026fa:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80026fe:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002702:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002706:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002708:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800270a:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800270c:	b2db      	uxtb	r3, r3
 800270e:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002710:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002714:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002718:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800271c:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002720:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002724:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002728:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800272c:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002730:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002732:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002736:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800273a:	fb03 4e0e 	mla	lr, r3, lr, r4
 800273e:	fbbe fef5 	udiv	lr, lr, r5
 8002742:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002746:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800274a:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 800274e:	4281      	cmp	r1, r0
 8002750:	d8de      	bhi.n	8002710 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8002752:	e7cd      	b.n	80026f0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002754:	fffff800 	.word	0xfffff800

08002758 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002758:	b510      	push	{r4, lr}
        return instance;
 800275a:	4c14      	ldr	r4, [pc, #80]	; (80027ac <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800275c:	6823      	ldr	r3, [r4, #0]
 800275e:	b323      	cbz	r3, 80027aa <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8002760:	4b13      	ldr	r3, [pc, #76]	; (80027b0 <HAL_LTDC_LineEventCallback+0x58>)
 8002762:	4a14      	ldr	r2, [pc, #80]	; (80027b4 <HAL_LTDC_LineEventCallback+0x5c>)
 8002764:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002766:	8811      	ldrh	r1, [r2, #0]
 8002768:	428b      	cmp	r3, r1
 800276a:	d113      	bne.n	8002794 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800276c:	4b12      	ldr	r3, [pc, #72]	; (80027b8 <HAL_LTDC_LineEventCallback+0x60>)
 800276e:	8819      	ldrh	r1, [r3, #0]
 8002770:	f009 faf2 	bl	800bd58 <HAL_LTDC_ProgramLineEvent>
 8002774:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8002776:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800277a:	3301      	adds	r3, #1
 800277c:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8002780:	f7ff fce8 	bl	8002154 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8002784:	6820      	ldr	r0, [r4, #0]
 8002786:	f00f fe61 	bl	801244c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800278a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800278e:	2000      	movs	r0, #0
 8002790:	f7ff bb60 	b.w	8001e54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8002794:	f009 fae0 	bl	800bd58 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8002798:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800279a:	6803      	ldr	r3, [r0, #0]
 800279c:	6a1b      	ldr	r3, [r3, #32]
 800279e:	4798      	blx	r3
    }
 80027a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80027a4:	2000      	movs	r0, #0
 80027a6:	f7ff bb6d 	b.w	8001e84 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80027aa:	bd10      	pop	{r4, pc}
 80027ac:	20013834 	.word	0x20013834
 80027b0:	40016800 	.word	0x40016800
 80027b4:	20002932 	.word	0x20002932
 80027b8:	20002930 	.word	0x20002930

080027bc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80027bc:	4770      	bx	lr

080027be <_ZN23ApplicationFontProviderD0Ev>:
 80027be:	b510      	push	{r4, lr}
 80027c0:	2104      	movs	r1, #4
 80027c2:	4604      	mov	r4, r0
 80027c4:	f028 fb31 	bl	802ae2a <_ZdlPvj>
 80027c8:	4620      	mov	r0, r4
 80027ca:	bd10      	pop	{r4, pc}

080027cc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80027cc:	b508      	push	{r3, lr}
    switch (typography)
 80027ce:	2903      	cmp	r1, #3
 80027d0:	d813      	bhi.n	80027fa <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80027d2:	e8df f001 	tbb	[pc, r1]
 80027d6:	0602      	.short	0x0602
 80027d8:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80027da:	f006 f927 	bl	8008a2c <_ZN17TypedTextDatabase8getFontsEv>
 80027de:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80027e0:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80027e2:	f006 f923 	bl	8008a2c <_ZN17TypedTextDatabase8getFontsEv>
 80027e6:	6840      	ldr	r0, [r0, #4]
 80027e8:	e7fa      	b.n	80027e0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80027ea:	f006 f91f 	bl	8008a2c <_ZN17TypedTextDatabase8getFontsEv>
 80027ee:	6880      	ldr	r0, [r0, #8]
 80027f0:	e7f6      	b.n	80027e0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80027f2:	f006 f91b 	bl	8008a2c <_ZN17TypedTextDatabase8getFontsEv>
 80027f6:	68c0      	ldr	r0, [r0, #12]
 80027f8:	e7f2      	b.n	80027e0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80027fa:	2000      	movs	r0, #0
 80027fc:	e7f0      	b.n	80027e0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

08002800 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002800:	4800      	ldr	r0, [pc, #0]	; (8002804 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002802:	4770      	bx	lr
 8002804:	0802d340 	.word	0x0802d340

08002808 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002808:	200c      	movs	r0, #12
 800280a:	4770      	bx	lr

0800280c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800280c:	b513      	push	{r0, r1, r4, lr}
 800280e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002810:	b151      	cbz	r1, 8002828 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002812:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002814:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002816:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800281a:	aa01      	add	r2, sp, #4
 800281c:	689c      	ldr	r4, [r3, #8]
 800281e:	f10d 0303 	add.w	r3, sp, #3
 8002822:	47a0      	blx	r4
        return glyph;
    }
 8002824:	b002      	add	sp, #8
 8002826:	bd10      	pop	{r4, pc}
            return 0;
 8002828:	4608      	mov	r0, r1
 800282a:	e7fb      	b.n	8002824 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800282c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800282c:	89c0      	ldrh	r0, [r0, #14]
 800282e:	4770      	bx	lr

08002830 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002830:	8a00      	ldrh	r0, [r0, #16]
 8002832:	4770      	bx	lr

08002834 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002834:	88c0      	ldrh	r0, [r0, #6]
 8002836:	4770      	bx	lr

08002838 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002838:	8880      	ldrh	r0, [r0, #4]
 800283a:	4770      	bx	lr

0800283c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800283c:	7a80      	ldrb	r0, [r0, #10]
    }
 800283e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002842:	4770      	bx	lr

08002844 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002844:	7a80      	ldrb	r0, [r0, #10]
    }
 8002846:	09c0      	lsrs	r0, r0, #7
 8002848:	4770      	bx	lr

0800284a <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800284a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800284c:	4770      	bx	lr

0800284e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800284e:	4770      	bx	lr

08002850 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002850:	4770      	bx	lr

08002852 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002852:	4770      	bx	lr

08002854 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002854:	4770      	bx	lr

08002856 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002856:	4770      	bx	lr

08002858 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002858:	4770      	bx	lr

0800285a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800285a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 800285c:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800285e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002860:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002862:	466d      	mov	r5, sp
 8002864:	4601      	mov	r1, r0
 8002866:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800286a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800286c:	4628      	mov	r0, r5
 800286e:	4798      	blx	r3
 8002870:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002874:	343c      	adds	r4, #60	; 0x3c
 8002876:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800287a:	b005      	add	sp, #20
 800287c:	bd30      	pop	{r4, r5, pc}

0800287e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800287e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002880:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002882:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002884:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002886:	466d      	mov	r5, sp
 8002888:	4601      	mov	r1, r0
 800288a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800288e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002890:	4628      	mov	r0, r5
 8002892:	4798      	blx	r3
 8002894:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002898:	343c      	adds	r4, #60	; 0x3c
 800289a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800289e:	b005      	add	sp, #20
 80028a0:	bd30      	pop	{r4, r5, pc}

080028a2 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80028a2:	2200      	movs	r2, #0
 80028a4:	8002      	strh	r2, [r0, #0]
 80028a6:	8042      	strh	r2, [r0, #2]
 80028a8:	8082      	strh	r2, [r0, #4]
 80028aa:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80028ac:	4770      	bx	lr

080028ae <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80028ae:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80028b2:	4770      	bx	lr

080028b4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028b4:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80028b6:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028b8:	4604      	mov	r4, r0
        setX(x);
 80028ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028bc:	4615      	mov	r5, r2
        setX(x);
 80028be:	4798      	blx	r3
        setBaselineY(baselineY);
 80028c0:	6823      	ldr	r3, [r4, #0]
 80028c2:	4629      	mov	r1, r5
 80028c4:	4620      	mov	r0, r4
 80028c6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80028c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80028cc:	4718      	bx	r3

080028ce <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80028ce:	2000      	movs	r0, #0
 80028d0:	4770      	bx	lr

080028d2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80028d2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80028d4:	4770      	bx	lr

080028d6 <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 80028d6:	4770      	bx	lr

080028d8 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 80028d8:	6803      	ldr	r3, [r0, #0]
 80028da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80028dc:	4718      	bx	r3

080028de <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 80028de:	6803      	ldr	r3, [r0, #0]
 80028e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028e2:	4718      	bx	r3

080028e4 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80028e4:	4770      	bx	lr

080028e6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80028e6:	4770      	bx	lr

080028e8 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 80028e8:	4770      	bx	lr

080028ea <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80028ea:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80028ec:	68c2      	ldr	r2, [r0, #12]
 80028ee:	6844      	ldr	r4, [r0, #4]
 80028f0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80028f2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80028f4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80028f8:	07d2      	lsls	r2, r2, #31
 80028fa:	bf48      	it	mi
 80028fc:	5962      	ldrmi	r2, [r4, r5]
 80028fe:	689b      	ldr	r3, [r3, #8]
    }
 8002900:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002902:	bf48      	it	mi
 8002904:	58d3      	ldrmi	r3, [r2, r3]
 8002906:	4718      	bx	r3

08002908 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002908:	6843      	ldr	r3, [r0, #4]
 800290a:	b12b      	cbz	r3, 8002918 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800290c:	6883      	ldr	r3, [r0, #8]
 800290e:	b92b      	cbnz	r3, 800291c <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002910:	68c0      	ldr	r0, [r0, #12]
 8002912:	f000 0001 	and.w	r0, r0, #1
 8002916:	4770      	bx	lr
 8002918:	4618      	mov	r0, r3
 800291a:	4770      	bx	lr
 800291c:	2001      	movs	r0, #1
    }
 800291e:	4770      	bx	lr

08002920 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002920:	b510      	push	{r4, lr}
    }
 8002922:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002924:	4604      	mov	r4, r0
    }
 8002926:	f028 fa80 	bl	802ae2a <_ZdlPvj>
 800292a:	4620      	mov	r0, r4
 800292c:	bd10      	pop	{r4, pc}

0800292e <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800292e:	b510      	push	{r4, lr}
 8002930:	214c      	movs	r1, #76	; 0x4c
 8002932:	4604      	mov	r4, r0
 8002934:	f028 fa79 	bl	802ae2a <_ZdlPvj>
 8002938:	4620      	mov	r0, r4
 800293a:	bd10      	pop	{r4, pc}

0800293c <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800293c:	b510      	push	{r4, lr}
 800293e:	2110      	movs	r1, #16
 8002940:	4604      	mov	r4, r0
 8002942:	f028 fa72 	bl	802ae2a <_ZdlPvj>
 8002946:	4620      	mov	r0, r4
 8002948:	bd10      	pop	{r4, pc}

0800294a <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 800294a:	b510      	push	{r4, lr}
 800294c:	218c      	movs	r1, #140	; 0x8c
 800294e:	4604      	mov	r4, r0
 8002950:	f028 fa6b 	bl	802ae2a <_ZdlPvj>
 8002954:	4620      	mov	r0, r4
 8002956:	bd10      	pop	{r4, pc}

08002958 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002958:	b538      	push	{r3, r4, r5, lr}
 800295a:	4605      	mov	r5, r0
 800295c:	4b05      	ldr	r3, [pc, #20]	; (8002974 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 800295e:	f845 3be0 	str.w	r3, [r5], #224
 8002962:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002964:	f012 fcaa 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002968:	4628      	mov	r0, r5
 800296a:	f00e fb5f 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 800296e:	4620      	mov	r0, r4
 8002970:	bd38      	pop	{r3, r4, r5, pc}
 8002972:	bf00      	nop
 8002974:	0802d728 	.word	0x0802d728

08002978 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002978:	b510      	push	{r4, lr}
 800297a:	4604      	mov	r4, r0
}
 800297c:	f7ff ffec 	bl	8002958 <_ZN23Calibration_PadViewBaseD1Ev>
 8002980:	4620      	mov	r0, r4
 8002982:	f641 5104 	movw	r1, #7428	; 0x1d04
 8002986:	f028 fa50 	bl	802ae2a <_ZdlPvj>
 800298a:	4620      	mov	r0, r4
 800298c:	bd10      	pop	{r4, pc}

0800298e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 800298e:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002990:	f7ff fe5a 	bl	8002648 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002994:	bd08      	pop	{r3, pc}
	...

08002998 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002998:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800299a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800299c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800299e:	4b12      	ldr	r3, [pc, #72]	; (80029e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80029a0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80029a2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029a4:	b28d      	uxth	r5, r1
 80029a6:	b92b      	cbnz	r3, 80029b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80029a8:	4b10      	ldr	r3, [pc, #64]	; (80029ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80029aa:	4a11      	ldr	r2, [pc, #68]	; (80029f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029ac:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029ae:	4811      	ldr	r0, [pc, #68]	; (80029f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80029b0:	f029 f84e 	bl	802ba50 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80029b4:	4910      	ldr	r1, [pc, #64]	; (80029f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80029b6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029b8:	8809      	ldrh	r1, [r1, #0]
 80029ba:	4291      	cmp	r1, r2
 80029bc:	d803      	bhi.n	80029c6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80029be:	4b0f      	ldr	r3, [pc, #60]	; (80029fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80029c0:	4a0b      	ldr	r2, [pc, #44]	; (80029f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029c2:	216d      	movs	r1, #109	; 0x6d
 80029c4:	e7f3      	b.n	80029ae <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029c6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80029ca:	4b0d      	ldr	r3, [pc, #52]	; (8002a00 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80029cc:	681b      	ldr	r3, [r3, #0]
 80029ce:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80029d2:	6803      	ldr	r3, [r0, #0]
 80029d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029d6:	4798      	blx	r3
 80029d8:	1a28      	subs	r0, r5, r0
 80029da:	b201      	sxth	r1, r0
 80029dc:	4633      	mov	r3, r6
 80029de:	4620      	mov	r0, r4
    }
 80029e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029e4:	4718      	bx	r3
 80029e6:	bf00      	nop
 80029e8:	2001388c 	.word	0x2001388c
 80029ec:	0802d430 	.word	0x0802d430
 80029f0:	0802d472 	.word	0x0802d472
 80029f4:	0802d4ad 	.word	0x0802d4ad
 80029f8:	20013890 	.word	0x20013890
 80029fc:	0802d4f4 	.word	0x0802d4f4
 8002a00:	20013894 	.word	0x20013894

08002a04 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002a04:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002a06:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002a08:	4604      	mov	r4, r0
        setX(x);
 8002a0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002a0c:	4615      	mov	r5, r2
        setX(x);
 8002a0e:	4798      	blx	r3
        setY(y);
 8002a10:	6823      	ldr	r3, [r4, #0]
 8002a12:	4629      	mov	r1, r5
 8002a14:	4620      	mov	r0, r4
 8002a16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002a18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002a1c:	4718      	bx	r3

08002a1e <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002a1e:	b570      	push	{r4, r5, r6, lr}
 8002a20:	4604      	mov	r4, r0
 8002a22:	461d      	mov	r5, r3
 8002a24:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002a28:	f7ff ffec 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002a2c:	6823      	ldr	r3, [r4, #0]
 8002a2e:	4629      	mov	r1, r5
 8002a30:	4620      	mov	r0, r4
 8002a32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a34:	4798      	blx	r3
        setHeight(height);
 8002a36:	6823      	ldr	r3, [r4, #0]
 8002a38:	4631      	mov	r1, r6
 8002a3a:	4620      	mov	r0, r4
 8002a3c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002a3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002a42:	4718      	bx	r3

08002a44 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 8002a44:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002a48:	2200      	movs	r2, #0
 8002a4a:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8002a4c:	4905      	ldr	r1, [pc, #20]	; (8002a64 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 8002a4e:	6001      	str	r1, [r0, #0]
 8002a50:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002a54:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002a58:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002a5c:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002a60:	6282      	str	r2, [r0, #40]	; 0x28
    }
 8002a62:	4770      	bx	lr
 8002a64:	0802f64c 	.word	0x0802f64c

08002a68 <_ZN8touchgfx6WidgetC1Ev>:
 8002a68:	2200      	movs	r2, #0
 8002a6a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002a6e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002a72:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002a76:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 8002a7a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002a7e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002a80:	4a01      	ldr	r2, [pc, #4]	; (8002a88 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002a82:	6002      	str	r2, [r0, #0]
 8002a84:	4770      	bx	lr
 8002a86:	bf00      	nop
 8002a88:	0802d578 	.word	0x0802d578

08002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002a8c:	4b1a      	ldr	r3, [pc, #104]	; (8002af8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002a8e:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002a90:	881b      	ldrh	r3, [r3, #0]
 8002a92:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002a94:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002a96:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002a98:	d92b      	bls.n	8002af2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002a9a:	4b18      	ldr	r3, [pc, #96]	; (8002afc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002a9c:	681b      	ldr	r3, [r3, #0]
 8002a9e:	b92b      	cbnz	r3, 8002aac <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002aa0:	4b17      	ldr	r3, [pc, #92]	; (8002b00 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002aa2:	4a18      	ldr	r2, [pc, #96]	; (8002b04 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002aa4:	4818      	ldr	r0, [pc, #96]	; (8002b08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002aa6:	216c      	movs	r1, #108	; 0x6c
 8002aa8:	f028 ffd2 	bl	802ba50 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002aac:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002ab0:	4b16      	ldr	r3, [pc, #88]	; (8002b0c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002ab8:	4b15      	ldr	r3, [pc, #84]	; (8002b10 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002aba:	6818      	ldr	r0, [r3, #0]
 8002abc:	f005 ffa6 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002ac0:	682b      	ldr	r3, [r5, #0]
 8002ac2:	9001      	str	r0, [sp, #4]
 8002ac4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ac6:	4628      	mov	r0, r5
 8002ac8:	4798      	blx	r3
 8002aca:	682b      	ldr	r3, [r5, #0]
 8002acc:	9901      	ldr	r1, [sp, #4]
 8002ace:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002ad0:	4604      	mov	r4, r0
 8002ad2:	4628      	mov	r0, r5
 8002ad4:	4798      	blx	r3
 8002ad6:	682b      	ldr	r3, [r5, #0]
 8002ad8:	9901      	ldr	r1, [sp, #4]
 8002ada:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002adc:	fb14 f400 	smulbb	r4, r4, r0
 8002ae0:	4628      	mov	r0, r5
 8002ae2:	4798      	blx	r3
 8002ae4:	b2a4      	uxth	r4, r4
 8002ae6:	1823      	adds	r3, r4, r0
 8002ae8:	b21b      	sxth	r3, r3
 8002aea:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002aee:	b002      	add	sp, #8
 8002af0:	bd70      	pop	{r4, r5, r6, pc}
 8002af2:	2300      	movs	r3, #0
 8002af4:	e7f9      	b.n	8002aea <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002af6:	bf00      	nop
 8002af8:	20013890 	.word	0x20013890
 8002afc:	2001388c 	.word	0x2001388c
 8002b00:	0802d430 	.word	0x0802d430
 8002b04:	0802d472 	.word	0x0802d472
 8002b08:	0802d4ad 	.word	0x0802d4ad
 8002b0c:	20013894 	.word	0x20013894
 8002b10:	20013898 	.word	0x20013898

08002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002b14:	2200      	movs	r2, #0
 8002b16:	f04f 31ff 	mov.w	r1, #4294967295
 8002b1a:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002b1e:	6082      	str	r2, [r0, #8]
        {
        }
 8002b20:	4770      	bx	lr

08002b22 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8002b22:	b510      	push	{r4, lr}
 8002b24:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 8002b26:	f7ff fff5 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002b2a:	4620      	mov	r0, r4
 8002b2c:	bd10      	pop	{r4, pc}
	...

08002b30 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002b30:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002b32:	2100      	movs	r1, #0
    TextArea()
 8002b34:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002b36:	2226      	movs	r2, #38	; 0x26
 8002b38:	f029 f98f 	bl	802be5a <memset>
 8002b3c:	4620      	mov	r0, r4
 8002b3e:	f7ff ff93 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8002b42:	4b09      	ldr	r3, [pc, #36]	; (8002b68 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002b44:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002b46:	4b09      	ldr	r3, [pc, #36]	; (8002b6c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002b48:	62a3      	str	r3, [r4, #40]	; 0x28
 8002b4a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b4e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002b50:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002b54:	2300      	movs	r3, #0
 8002b56:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002b5a:	8723      	strh	r3, [r4, #56]	; 0x38
 8002b5c:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8002b60:	f7ff ffd8 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002b64:	4620      	mov	r0, r4
 8002b66:	bd10      	pop	{r4, pc}
 8002b68:	0802faa4 	.word	0x0802faa4
 8002b6c:	0802d5e0 	.word	0x0802d5e0

08002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002b70:	b510      	push	{r4, lr}
 8002b72:	4604      	mov	r4, r0
        : TextArea()
 8002b74:	f7ff ffdc 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002b78:	4b02      	ldr	r3, [pc, #8]	; (8002b84 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002b7a:	6023      	str	r3, [r4, #0]
 8002b7c:	2300      	movs	r3, #0
 8002b7e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8002b80:	4620      	mov	r0, r4
 8002b82:	bd10      	pop	{r4, pc}
 8002b84:	0802d680 	.word	0x0802d680

08002b88 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8002b88:	b510      	push	{r4, lr}
 8002b8a:	4604      	mov	r4, r0
 8002b8c:	460b      	mov	r3, r1
 8002b8e:	490d      	ldr	r1, [pc, #52]	; (8002bc4 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8002b90:	f844 1b04 	str.w	r1, [r4], #4
 8002b94:	4602      	mov	r2, r0
 8002b96:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8002b9a:	e884 0003 	stmia.w	r4, {r0, r1}
 8002b9e:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8002ba2:	f102 040c 	add.w	r4, r2, #12
 8002ba6:	e884 0003 	stmia.w	r4, {r0, r1}
 8002baa:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8002bae:	695c      	ldr	r4, [r3, #20]
 8002bb0:	61d1      	str	r1, [r2, #28]
 8002bb2:	6a19      	ldr	r1, [r3, #32]
 8002bb4:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002bb6:	6211      	str	r1, [r2, #32]
 8002bb8:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8002bbc:	8493      	strh	r3, [r2, #36]	; 0x24
 8002bbe:	4610      	mov	r0, r2
 8002bc0:	bd10      	pop	{r4, pc}
 8002bc2:	bf00      	nop
 8002bc4:	0802fec4 	.word	0x0802fec4

08002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8002bc8:	b538      	push	{r3, r4, r5, lr}
 8002bca:	460d      	mov	r5, r1
 8002bcc:	4604      	mov	r4, r0
class Container : public Drawable
 8002bce:	f7ff ffdb 	bl	8002b88 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002bd2:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8002bd4:	62a3      	str	r3, [r4, #40]	; 0x28
 8002bd6:	4b2b      	ldr	r3, [pc, #172]	; (8002c84 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8002bd8:	6023      	str	r3, [r4, #0]
 8002bda:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8002bdc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002bde:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002be0:	6323      	str	r3, [r4, #48]	; 0x30
 8002be2:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002be4:	6363      	str	r3, [r4, #52]	; 0x34
 8002be6:	f105 0138 	add.w	r1, r5, #56	; 0x38
 8002bea:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8002bee:	f7ff ffcb 	bl	8002b88 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002bf2:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002bf4:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8002bf6:	4b24      	ldr	r3, [pc, #144]	; (8002c88 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8002bf8:	63a3      	str	r3, [r4, #56]	; 0x38
 8002bfa:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 8002bfe:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8002c02:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 8002c06:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 8002c0a:	f105 0168 	add.w	r1, r5, #104	; 0x68
 8002c0e:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002c12:	f7ff ffb9 	bl	8002b88 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002c16:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8002c1a:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8002c1e:	4b1b      	ldr	r3, [pc, #108]	; (8002c8c <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8002c20:	66a3      	str	r3, [r4, #104]	; 0x68
 8002c22:	f105 0194 	add.w	r1, r5, #148	; 0x94
 8002c26:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8002c2a:	f7ff ffad 	bl	8002b88 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8002c2e:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 8002c32:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8002c36:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8002c3a:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8002c3e:	4b14      	ldr	r3, [pc, #80]	; (8002c90 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8002c40:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002c44:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8002c48:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8002c4c:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8002c50:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8002c54:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8002c58:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8002c5c:	f7ff ff94 	bl	8002b88 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002c60:	4b0c      	ldr	r3, [pc, #48]	; (8002c94 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 8002c62:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8002c66:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8002c6a:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8002c6e:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 8002c72:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 8002c76:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8002c7a:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8002c7e:	4620      	mov	r0, r4
 8002c80:	bd38      	pop	{r3, r4, r5, pc}
 8002c82:	bf00      	nop
 8002c84:	0802f6dc 	.word	0x0802f6dc
 8002c88:	0802f7a0 	.word	0x0802f7a0
 8002c8c:	0802d5f0 	.word	0x0802d5f0
 8002c90:	0802fb9c 	.word	0x0802fb9c
 8002c94:	0802fd80 	.word	0x0802fd80

08002c98 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8002c98:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithLabel3)
 8002c9a:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8002c9e:	4299      	cmp	r1, r3
{
 8002ca0:	b0c1      	sub	sp, #260	; 0x104
 8002ca2:	4604      	mov	r4, r0
 8002ca4:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002ca6:	d103      	bne.n	8002cb0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002ca8:	f014 f80a 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002cac:	f001 fe7c 	bl	80049a8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8002cb0:	f504 731e 	add.w	r3, r4, #632	; 0x278
 8002cb4:	429d      	cmp	r5, r3
 8002cb6:	d128      	bne.n	8002d0a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x72>
        SwipeContainer swipeContainer = swipeContainer1;
 8002cb8:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002cbc:	4639      	mov	r1, r7
 8002cbe:	a803      	add	r0, sp, #12
 8002cc0:	f7ff ff82 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002cc4:	f7fe fc38 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cc8:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002cca:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ccc:	2001      	movs	r0, #1
 8002cce:	f7fd fdcb 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002cd2:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002cd6:	48d8      	ldr	r0, [pc, #864]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cd8:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002cdc:	ee17 6a90 	vmov	r6, s15
 8002ce0:	ee17 1a90 	vmov	r1, s15
 8002ce4:	230c      	movs	r3, #12
 8002ce6:	2200      	movs	r2, #0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ce8:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002cec:	f7fd febe 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002cf0:	4ad2      	ldr	r2, [pc, #840]	; (800303c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002cf2:	4633      	mov	r3, r6
 8002cf4:	210a      	movs	r1, #10
 8002cf6:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8002cfa:	f017 f98f 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002cfe:	4638      	mov	r0, r7
 8002d00:	f015 f8c6 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002d04:	a803      	add	r0, sp, #12
 8002d06:	f00e f991 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8002d0a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8002d0e:	429d      	cmp	r5, r3
 8002d10:	d128      	bne.n	8002d64 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xcc>
        SwipeContainer swipeContainer = swipeContainer1;
 8002d12:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002d16:	4639      	mov	r1, r7
 8002d18:	a803      	add	r0, sp, #12
 8002d1a:	f7ff ff55 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002d1e:	f7fe fc0b 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d22:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002d24:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d26:	2001      	movs	r0, #1
 8002d28:	f7fd fd9e 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002d2c:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002d30:	48c1      	ldr	r0, [pc, #772]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d32:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002d36:	ee17 6a90 	vmov	r6, s15
 8002d3a:	ee17 1a90 	vmov	r1, s15
 8002d3e:	230c      	movs	r3, #12
 8002d40:	2201      	movs	r2, #1
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d42:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002d46:	f7fd fe91 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002d4a:	4abc      	ldr	r2, [pc, #752]	; (800303c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002d4c:	4633      	mov	r3, r6
 8002d4e:	210a      	movs	r1, #10
 8002d50:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8002d54:	f017 f962 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002d58:	4638      	mov	r0, r7
 8002d5a:	f015 f899 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002d5e:	a803      	add	r0, sp, #12
 8002d60:	f00e f964 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8002d64:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8002d68:	429d      	cmp	r5, r3
 8002d6a:	d128      	bne.n	8002dbe <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x126>
        SwipeContainer swipeContainer = swipeContainer1;
 8002d6c:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002d70:	4639      	mov	r1, r7
 8002d72:	a803      	add	r0, sp, #12
 8002d74:	f7ff ff28 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002d78:	f7fe fbde 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d7c:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002d7e:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d80:	2001      	movs	r0, #1
 8002d82:	f7fd fd71 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002d86:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002d8a:	48ab      	ldr	r0, [pc, #684]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d8c:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002d90:	ee17 6a90 	vmov	r6, s15
 8002d94:	ee17 1a90 	vmov	r1, s15
 8002d98:	230c      	movs	r3, #12
 8002d9a:	2202      	movs	r2, #2
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d9c:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002da0:	f7fd fe64 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002da4:	4aa5      	ldr	r2, [pc, #660]	; (800303c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002da6:	4633      	mov	r3, r6
 8002da8:	210a      	movs	r1, #10
 8002daa:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8002dae:	f017 f935 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002db2:	4638      	mov	r0, r7
 8002db4:	f015 f86c 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002db8:	a803      	add	r0, sp, #12
 8002dba:	f00e f937 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 8002dbe:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8002dc2:	429d      	cmp	r5, r3
 8002dc4:	d128      	bne.n	8002e18 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x180>
        SwipeContainer swipeContainer = swipeContainer1;
 8002dc6:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002dca:	4639      	mov	r1, r7
 8002dcc:	a803      	add	r0, sp, #12
 8002dce:	f7ff fefb 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002dd2:	f7fe fbb1 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dd6:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002dd8:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dda:	2001      	movs	r0, #1
 8002ddc:	f7fd fd44 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002de0:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002de4:	4894      	ldr	r0, [pc, #592]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002de6:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002dea:	ee17 6a90 	vmov	r6, s15
 8002dee:	ee17 1a90 	vmov	r1, s15
 8002df2:	230c      	movs	r3, #12
 8002df4:	2203      	movs	r2, #3
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002df6:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002dfa:	f7fd fe37 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002dfe:	4a8f      	ldr	r2, [pc, #572]	; (800303c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002e00:	4633      	mov	r3, r6
 8002e02:	210a      	movs	r1, #10
 8002e04:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8002e08:	f017 f908 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002e0c:	4638      	mov	r0, r7
 8002e0e:	f015 f83f 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002e12:	a803      	add	r0, sp, #12
 8002e14:	f00e f90a 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8002e18:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 8002e1c:	429d      	cmp	r5, r3
 8002e1e:	d128      	bne.n	8002e72 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1da>
        SwipeContainer swipeContainer = swipeContainer1;
 8002e20:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002e24:	4639      	mov	r1, r7
 8002e26:	a803      	add	r0, sp, #12
 8002e28:	f7ff fece 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002e2c:	f7fe fb84 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e30:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002e32:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e34:	2001      	movs	r0, #1
 8002e36:	f7fd fd17 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002e3a:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002e3e:	487e      	ldr	r0, [pc, #504]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e40:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002e44:	ee17 6a90 	vmov	r6, s15
 8002e48:	ee17 1a90 	vmov	r1, s15
 8002e4c:	230c      	movs	r3, #12
 8002e4e:	2204      	movs	r2, #4
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e50:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002e54:	f7fd fe0a 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002e58:	4a78      	ldr	r2, [pc, #480]	; (800303c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002e5a:	4633      	mov	r3, r6
 8002e5c:	210a      	movs	r1, #10
 8002e5e:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8002e62:	f017 f8db 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002e66:	4638      	mov	r0, r7
 8002e68:	f015 f812 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002e6c:	a803      	add	r0, sp, #12
 8002e6e:	f00e f8dd 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8002e72:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8002e76:	429d      	cmp	r5, r3
 8002e78:	d128      	bne.n	8002ecc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x234>
        SwipeContainer swipeContainer = swipeContainer1;
 8002e7a:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002e7e:	4639      	mov	r1, r7
 8002e80:	a803      	add	r0, sp, #12
 8002e82:	f7ff fea1 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002e86:	f7fe fb57 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e8a:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002e8c:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e8e:	2001      	movs	r0, #1
 8002e90:	f7fd fcea 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002e94:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002e98:	4867      	ldr	r0, [pc, #412]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e9a:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002e9e:	ee17 6a90 	vmov	r6, s15
 8002ea2:	ee17 1a90 	vmov	r1, s15
 8002ea6:	230c      	movs	r3, #12
 8002ea8:	2205      	movs	r2, #5
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002eaa:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002eae:	f7fd fddd 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002eb2:	4a62      	ldr	r2, [pc, #392]	; (800303c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002eb4:	4633      	mov	r3, r6
 8002eb6:	210a      	movs	r1, #10
 8002eb8:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8002ebc:	f017 f8ae 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002ec0:	4638      	mov	r0, r7
 8002ec2:	f014 ffe5 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002ec6:	a803      	add	r0, sp, #12
 8002ec8:	f00e f8b0 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8002ecc:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8002ed0:	429d      	cmp	r5, r3
 8002ed2:	d128      	bne.n	8002f26 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28e>
        SwipeContainer swipeContainer = swipeContainer1;
 8002ed4:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002ed8:	4639      	mov	r1, r7
 8002eda:	a803      	add	r0, sp, #12
 8002edc:	f7ff fe74 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002ee0:	f7fe fb2a 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ee4:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002ee6:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ee8:	2001      	movs	r0, #1
 8002eea:	f7fd fcbd 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002eee:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002ef2:	4851      	ldr	r0, [pc, #324]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ef4:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002ef8:	ee17 6a90 	vmov	r6, s15
 8002efc:	ee17 1a90 	vmov	r1, s15
 8002f00:	230c      	movs	r3, #12
 8002f02:	2206      	movs	r2, #6
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f04:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002f08:	f7fd fdb0 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002f0c:	4a4b      	ldr	r2, [pc, #300]	; (800303c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002f0e:	4633      	mov	r3, r6
 8002f10:	210a      	movs	r1, #10
 8002f12:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8002f16:	f017 f881 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002f1a:	4638      	mov	r0, r7
 8002f1c:	f014 ffb8 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002f20:	a803      	add	r0, sp, #12
 8002f22:	f00e f883 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8002f26:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8002f2a:	429d      	cmp	r5, r3
 8002f2c:	d128      	bne.n	8002f80 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e8>
        SwipeContainer swipeContainer = swipeContainer1;
 8002f2e:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f32:	4639      	mov	r1, r7
 8002f34:	a803      	add	r0, sp, #12
 8002f36:	f7ff fe47 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002f3a:	f7fe fafd 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f3e:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002f40:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f42:	2001      	movs	r0, #1
 8002f44:	f7fd fc90 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002f48:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002f4c:	483a      	ldr	r0, [pc, #232]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f4e:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002f52:	ee17 6a90 	vmov	r6, s15
 8002f56:	ee17 1a90 	vmov	r1, s15
 8002f5a:	230c      	movs	r3, #12
 8002f5c:	2207      	movs	r2, #7
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f5e:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002f62:	f7fd fd83 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002f66:	4a35      	ldr	r2, [pc, #212]	; (800303c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002f68:	4633      	mov	r3, r6
 8002f6a:	210a      	movs	r1, #10
 8002f6c:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8002f70:	f017 f854 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002f74:	4638      	mov	r0, r7
 8002f76:	f014 ff8b 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002f7a:	a803      	add	r0, sp, #12
 8002f7c:	f00e f856 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8002f80:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8002f84:	429d      	cmp	r5, r3
 8002f86:	d128      	bne.n	8002fda <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x342>
        SwipeContainer swipeContainer = swipeContainer1;
 8002f88:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f8c:	4639      	mov	r1, r7
 8002f8e:	a803      	add	r0, sp, #12
 8002f90:	f7ff fe1a 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002f94:	f7fe fad0 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f98:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002f9a:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f9c:	2001      	movs	r0, #1
 8002f9e:	f7fd fc63 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002fa2:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002fa6:	4824      	ldr	r0, [pc, #144]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fa8:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002fac:	ee17 6a90 	vmov	r6, s15
 8002fb0:	ee17 1a90 	vmov	r1, s15
 8002fb4:	230c      	movs	r3, #12
 8002fb6:	2208      	movs	r2, #8
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fb8:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002fbc:	f7fd fd56 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002fc0:	4a1e      	ldr	r2, [pc, #120]	; (800303c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002fc2:	4633      	mov	r3, r6
 8002fc4:	210a      	movs	r1, #10
 8002fc6:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8002fca:	f017 f827 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002fce:	4638      	mov	r0, r7
 8002fd0:	f014 ff5e 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002fd4:	a803      	add	r0, sp, #12
 8002fd6:	f00e f829 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8002fda:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8002fde:	429d      	cmp	r5, r3
 8002fe0:	d12e      	bne.n	8003040 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a8>
        SwipeContainer swipeContainer = swipeContainer1;
 8002fe2:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002fe6:	4639      	mov	r1, r7
 8002fe8:	a803      	add	r0, sp, #12
 8002fea:	f7ff fded 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002fee:	f7fe faa3 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ff2:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002ff4:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ff6:	2001      	movs	r0, #1
 8002ff8:	f7fd fc36 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8002ffc:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8003000:	480d      	ldr	r0, [pc, #52]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003002:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8003006:	ee17 6a90 	vmov	r6, s15
 800300a:	ee17 1a90 	vmov	r1, s15
 800300e:	230c      	movs	r3, #12
 8003010:	2209      	movs	r2, #9
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003012:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8003016:	f7fd fd29 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 800301a:	4a08      	ldr	r2, [pc, #32]	; (800303c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 800301c:	4633      	mov	r3, r6
 800301e:	210a      	movs	r1, #10
 8003020:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8003024:	f016 fffa 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003028:	4638      	mov	r0, r7
 800302a:	f014 ff31 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800302e:	a803      	add	r0, sp, #12
 8003030:	f00d fffc 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
 8003034:	e004      	b.n	8003040 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a8>
 8003036:	bf00      	nop
 8003038:	081e0000 	.word	0x081e0000
 800303c:	0802d532 	.word	0x0802d532
    if (&src == &buttonWithIcon_RH2)
 8003040:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8003044:	429d      	cmp	r5, r3
 8003046:	d128      	bne.n	800309a <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x402>
        SwipeContainer swipeContainer = swipeContainer1;
 8003048:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 800304c:	4639      	mov	r1, r7
 800304e:	a803      	add	r0, sp, #12
 8003050:	f7ff fdba 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8003054:	f7fe fa70 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003058:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 800305a:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800305c:	2001      	movs	r0, #1
 800305e:	f7fd fc03 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 8003062:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8003066:	4824      	ldr	r0, [pc, #144]	; (80030f8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x460>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003068:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 800306c:	ee17 6a90 	vmov	r6, s15
 8003070:	ee17 1a90 	vmov	r1, s15
 8003074:	230c      	movs	r3, #12
 8003076:	220a      	movs	r2, #10
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8003078:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 800307c:	f7fd fcf6 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003080:	4a1e      	ldr	r2, [pc, #120]	; (80030fc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x464>)
 8003082:	4633      	mov	r3, r6
 8003084:	210a      	movs	r1, #10
 8003086:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 800308a:	f016 ffc7 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 800308e:	4638      	mov	r0, r7
 8003090:	f014 fefe 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8003094:	a803      	add	r0, sp, #12
 8003096:	f00d ffc9 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH3)
 800309a:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 800309e:	429d      	cmp	r5, r3
 80030a0:	d128      	bne.n	80030f4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x45c>
        SwipeContainer swipeContainer = swipeContainer1;
 80030a2:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 80030a6:	4631      	mov	r1, r6
 80030a8:	a803      	add	r0, sp, #12
 80030aa:	f7ff fd8d 	bl	8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 80030ae:	f7fe fa43 	bl	8001538 <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030b2:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 80030b4:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030b6:	2001      	movs	r0, #1
 80030b8:	f7fd fbd6 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80030bc:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 80030c0:	480d      	ldr	r0, [pc, #52]	; (80030f8 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x460>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030c2:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80030c6:	ee17 5a90 	vmov	r5, s15
 80030ca:	ee17 1a90 	vmov	r1, s15
 80030ce:	230c      	movs	r3, #12
 80030d0:	220b      	movs	r2, #11
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80030d2:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 80030d6:	f7fd fcc9 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 80030da:	4a08      	ldr	r2, [pc, #32]	; (80030fc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x464>)
 80030dc:	462b      	mov	r3, r5
 80030de:	210a      	movs	r1, #10
 80030e0:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 80030e4:	f016 ff9a 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 80030e8:	4630      	mov	r0, r6
 80030ea:	f014 fed1 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 80030ee:	a803      	add	r0, sp, #12
 80030f0:	f00d ff9c 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 80030f4:	b041      	add	sp, #260	; 0x104
 80030f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80030f8:	081e0000 	.word	0x081e0000
 80030fc:	0802d532 	.word	0x0802d532

08003100 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003100:	0152      	lsls	r2, r2, #5
 8003102:	0149      	lsls	r1, r1, #5
 8003104:	f00f bee6 	b.w	8012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003108 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003108:	0152      	lsls	r2, r2, #5
 800310a:	0149      	lsls	r1, r1, #5
 800310c:	f00f beed 	b.w	8012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

08003110 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 8003110:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8003112:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003114:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003118:	ea4f 1241 	mov.w	r2, r1, lsl #5
 800311c:	d004      	beq.n	8003128 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 800311e:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8003122:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003124:	f00f bde0 	b.w	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003128:	f85d 4b04 	ldr.w	r4, [sp], #4
 800312c:	4770      	bx	lr
	...

08003130 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003134:	ed2d 8b10 	vpush	{d8-d15}
 8003138:	4604      	mov	r4, r0
 800313a:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 800313c:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800313e:	2500      	movs	r5, #0
 8003140:	f015 fa3e 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
 8003144:	4be5      	ldr	r3, [pc, #916]	; (80034dc <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003146:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003148:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 800314c:	2226      	movs	r2, #38	; 0x26
 800314e:	4629      	mov	r1, r5
 8003150:	4648      	mov	r0, r9
 8003152:	f028 fe82 	bl	802be5a <memset>
 8003156:	4648      	mov	r0, r9
 8003158:	f7ff fc86 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 800315c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003160:	26ff      	movs	r6, #255	; 0xff
 8003162:	4bdf      	ldr	r3, [pc, #892]	; (80034e0 <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 8003164:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8003166:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003168:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800316c:	4629      	mov	r1, r5
 800316e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003172:	4640      	mov	r0, r8
        : color(col)
 8003174:	66a5      	str	r5, [r4, #104]	; 0x68
 8003176:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 800317a:	f028 fe6e 	bl	802be5a <memset>
 800317e:	4640      	mov	r0, r8
 8003180:	f7ff fc72 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8003184:	4bd7      	ldr	r3, [pc, #860]	; (80034e4 <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 8003186:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003188:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 800318c:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8003190:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8003194:	ae29      	add	r6, sp, #164	; 0xa4
 8003196:	4631      	mov	r1, r6
 8003198:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800319c:	4640      	mov	r0, r8
 800319e:	f011 f890 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80031a2:	4658      	mov	r0, fp
 80031a4:	f011 f9c4 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80031a8:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80031ac:	4618      	mov	r0, r3
 80031ae:	ee08 3a10 	vmov	s16, r3
 80031b2:	f00e f869 	bl	8011288 <_ZN8touchgfx14SwipeContainerC1Ev>
 80031b6:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 80031ba:	4618      	mov	r0, r3
 80031bc:	ee08 3a90 	vmov	s17, r3
 80031c0:	f7ff fc40 	bl	8002a44 <_ZN8touchgfx9ContainerC1Ev>
 80031c4:	f504 7300 	add.w	r3, r4, #512	; 0x200
 80031c8:	4618      	mov	r0, r3
 80031ca:	9311      	str	r3, [sp, #68]	; 0x44
 80031cc:	f011 f852 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031d0:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80031d4:	f504 771e 	add.w	r7, r4, #632	; 0x278
 80031d8:	4618      	mov	r0, r3
 80031da:	9312      	str	r3, [sp, #72]	; 0x48
 80031dc:	f011 f84a 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031e0:	4638      	mov	r0, r7
 80031e2:	f011 f847 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031e6:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 80031ea:	4618      	mov	r0, r3
 80031ec:	ee0d 3a90 	vmov	s27, r3
 80031f0:	f7ff fcbe 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031f4:	f504 7340 	add.w	r3, r4, #768	; 0x300
 80031f8:	4618      	mov	r0, r3
 80031fa:	ee0e 3a10 	vmov	s28, r3
 80031fe:	f7ff fcb7 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003202:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003206:	4618      	mov	r0, r3
 8003208:	ee0e 3a90 	vmov	s29, r3
 800320c:	f7ff fcb0 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003210:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003214:	4618      	mov	r0, r3
 8003216:	ee0a 3a90 	vmov	s21, r3
 800321a:	f00f fd45 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 800321e:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003222:	4618      	mov	r0, r3
 8003224:	931c      	str	r3, [sp, #112]	; 0x70
 8003226:	f7ff fa23 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800322a:	4baf      	ldr	r3, [pc, #700]	; (80034e8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800322c:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 8003230:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003234:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003238:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 800323c:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800323e:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 8003242:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003246:	9107      	str	r1, [sp, #28]
 8003248:	f7ff fc72 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 800324c:	4650      	mov	r0, sl
 800324e:	f7ff fbf9 	bl	8002a44 <_ZN8touchgfx9ContainerC1Ev>
 8003252:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003256:	4608      	mov	r0, r1
 8003258:	9113      	str	r1, [sp, #76]	; 0x4c
 800325a:	f011 f80b 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800325e:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 8003262:	4608      	mov	r0, r1
 8003264:	9114      	str	r1, [sp, #80]	; 0x50
 8003266:	f011 f805 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800326a:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 800326e:	4608      	mov	r0, r1
 8003270:	9115      	str	r1, [sp, #84]	; 0x54
 8003272:	f010 ffff 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003276:	f204 5144 	addw	r1, r4, #1348	; 0x544
 800327a:	4608      	mov	r0, r1
 800327c:	9108      	str	r1, [sp, #32]
 800327e:	f7ff fc77 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003282:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 8003286:	4608      	mov	r0, r1
 8003288:	9109      	str	r1, [sp, #36]	; 0x24
 800328a:	f7ff fc71 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800328e:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 8003292:	4608      	mov	r0, r1
 8003294:	910a      	str	r1, [sp, #40]	; 0x28
 8003296:	f7ff fc6b 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800329a:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 800329e:	4608      	mov	r0, r1
 80032a0:	ee0b 1a10 	vmov	s22, r1
 80032a4:	f00f fd00 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 80032a8:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 80032ac:	4608      	mov	r0, r1
 80032ae:	911d      	str	r1, [sp, #116]	; 0x74
 80032b0:	f7ff f9de 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80032b4:	4b8c      	ldr	r3, [pc, #560]	; (80034e8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 80032b6:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 80032ba:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80032be:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 80032c2:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 80032c6:	4608      	mov	r0, r1
 80032c8:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 80032cc:	ee0f 1a10 	vmov	s30, r1
 80032d0:	f7ff fc2e 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80032d4:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 80032d8:	4608      	mov	r0, r1
 80032da:	ee09 1a10 	vmov	s18, r1
 80032de:	f7ff fbb1 	bl	8002a44 <_ZN8touchgfx9ContainerC1Ev>
 80032e2:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 80032e6:	4608      	mov	r0, r1
 80032e8:	9116      	str	r1, [sp, #88]	; 0x58
 80032ea:	f010 ffc3 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032ee:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 80032f2:	4608      	mov	r0, r1
 80032f4:	9117      	str	r1, [sp, #92]	; 0x5c
 80032f6:	f010 ffbd 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032fa:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 80032fe:	4608      	mov	r0, r1
 8003300:	9118      	str	r1, [sp, #96]	; 0x60
 8003302:	f010 ffb7 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003306:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 800330a:	4608      	mov	r0, r1
 800330c:	910b      	str	r1, [sp, #44]	; 0x2c
 800330e:	f7ff fc2f 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003312:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 8003316:	4608      	mov	r0, r1
 8003318:	910c      	str	r1, [sp, #48]	; 0x30
 800331a:	f7ff fc29 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800331e:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 8003322:	4608      	mov	r0, r1
 8003324:	910d      	str	r1, [sp, #52]	; 0x34
 8003326:	f7ff fc23 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800332a:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 800332e:	4608      	mov	r0, r1
 8003330:	ee0b 1a90 	vmov	s23, r1
 8003334:	f00f fcb8 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 8003338:	f604 1128 	addw	r1, r4, #2344	; 0x928
 800333c:	4608      	mov	r0, r1
 800333e:	911e      	str	r1, [sp, #120]	; 0x78
 8003340:	f7ff f996 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003344:	4b68      	ldr	r3, [pc, #416]	; (80034e8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003346:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 800334a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800334e:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 8003352:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8003356:	4608      	mov	r0, r1
 8003358:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 800335c:	ee0f 1a90 	vmov	s31, r1
 8003360:	f7ff fbe6 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8003364:	f604 1184 	addw	r1, r4, #2436	; 0x984
 8003368:	4608      	mov	r0, r1
 800336a:	ee09 1a90 	vmov	s19, r1
 800336e:	f7ff fb69 	bl	8002a44 <_ZN8touchgfx9ContainerC1Ev>
 8003372:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 8003376:	4608      	mov	r0, r1
 8003378:	9119      	str	r1, [sp, #100]	; 0x64
 800337a:	f010 ff7b 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800337e:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 8003382:	4608      	mov	r0, r1
 8003384:	911a      	str	r1, [sp, #104]	; 0x68
 8003386:	f010 ff75 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800338a:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 800338e:	4608      	mov	r0, r1
 8003390:	911b      	str	r1, [sp, #108]	; 0x6c
 8003392:	f010 ff6f 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003396:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 800339a:	4608      	mov	r0, r1
 800339c:	910e      	str	r1, [sp, #56]	; 0x38
 800339e:	f7ff fbe7 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033a2:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 80033a6:	4608      	mov	r0, r1
 80033a8:	910f      	str	r1, [sp, #60]	; 0x3c
 80033aa:	f7ff fbe1 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033ae:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 80033b2:	4608      	mov	r0, r1
 80033b4:	9110      	str	r1, [sp, #64]	; 0x40
 80033b6:	f7ff fbdb 	bl	8002b70 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80033ba:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 80033be:	4608      	mov	r0, r1
 80033c0:	ee0c 1a10 	vmov	s24, r1
 80033c4:	f00f fc70 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 80033c8:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 80033cc:	4608      	mov	r0, r1
 80033ce:	911f      	str	r1, [sp, #124]	; 0x7c
 80033d0:	f7ff f94e 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80033d4:	4b44      	ldr	r3, [pc, #272]	; (80034e8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 80033d6:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 80033da:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80033de:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 80033e2:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 80033e6:	4608      	mov	r0, r1
 80033e8:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 80033ec:	9103      	str	r1, [sp, #12]
 80033ee:	f7ff fb9f 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80033f2:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 80033f6:	4608      	mov	r0, r1
 80033f8:	ee0c 1a90 	vmov	s25, r1
 80033fc:	f00f fc54 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 8003400:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 8003404:	4608      	mov	r0, r1
 8003406:	9120      	str	r1, [sp, #128]	; 0x80
 8003408:	f7ff f932 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800340c:	4b36      	ldr	r3, [pc, #216]	; (80034e8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800340e:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 8003412:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003416:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 800341a:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 800341e:	4608      	mov	r0, r1
 8003420:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 8003424:	9104      	str	r1, [sp, #16]
 8003426:	f7ff fb83 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 800342a:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 800342e:	4608      	mov	r0, r1
 8003430:	ee0d 1a10 	vmov	s26, r1
 8003434:	f00f fc38 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 8003438:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 800343c:	4608      	mov	r0, r1
 800343e:	9121      	str	r1, [sp, #132]	; 0x84
 8003440:	f7ff f916 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003444:	4b28      	ldr	r3, [pc, #160]	; (80034e8 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003446:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 800344a:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800344e:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 8003452:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 8003456:	4618      	mov	r0, r3
 8003458:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 800345c:	9305      	str	r3, [sp, #20]
 800345e:	f7ff fb67 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8003462:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 8003466:	4618      	mov	r0, r3
 8003468:	9306      	str	r3, [sp, #24]
 800346a:	f7ff fb61 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800346e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003472:	4a1e      	ldr	r2, [pc, #120]	; (80034ec <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 8003474:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 8003478:	4a1d      	ldr	r2, [pc, #116]	; (80034f0 <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 800347a:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 800347e:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 8003482:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003486:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800348a:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 800348e:	f011 ff0b 	bl	80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003492:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003496:	462a      	mov	r2, r5
 8003498:	4648      	mov	r0, r9
 800349a:	9300      	str	r3, [sp, #0]
 800349c:	4629      	mov	r1, r5
 800349e:	23f0      	movs	r3, #240	; 0xf0
 80034a0:	f7ff fabd 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80034a4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80034a8:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80034aa:	1d23      	adds	r3, r4, #4
 80034ac:	4618      	mov	r0, r3
 80034ae:	4649      	mov	r1, r9
 80034b0:	ee0a 3a10 	vmov	s20, r3
 80034b4:	f00d fb2c 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80034b8:	462a      	mov	r2, r5
 80034ba:	4640      	mov	r0, r8
 80034bc:	4629      	mov	r1, r5
 80034be:	f7ff faa1 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80034c2:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80034c6:	4640      	mov	r0, r8
 80034c8:	4631      	mov	r1, r6
 80034ca:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80034ce:	f010 fef8 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80034d2:	4641      	mov	r1, r8
 80034d4:	ee1a 0a10 	vmov	r0, s20
 80034d8:	e00c      	b.n	80034f4 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 80034da:	bf00      	nop
 80034dc:	0802d728 	.word	0x0802d728
 80034e0:	0802fb34 	.word	0x0802fb34
 80034e4:	0802fd80 	.word	0x0802fd80
 80034e8:	0802f868 	.word	0x0802f868
 80034ec:	0802d710 	.word	0x0802d710
 80034f0:	08002c99 	.word	0x08002c99
 80034f4:	f00d fb0c 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80034f8:	4658      	mov	r0, fp
 80034fa:	f240 1201 	movw	r2, #257	; 0x101
 80034fe:	2121      	movs	r1, #33	; 0x21
 8003500:	f7ff fa80 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8003504:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003506:	4632      	mov	r2, r6
 8003508:	a928      	add	r1, sp, #160	; 0xa0
 800350a:	4658      	mov	r0, fp
 800350c:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 8003510:	2302      	movs	r3, #2
 8003512:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003516:	f010 fcde 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800351a:	231f      	movs	r3, #31
        updateTextPosition();
 800351c:	4658      	mov	r0, fp
 800351e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8003522:	f7ff fab3 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8003526:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 800352a:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 800352e:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 8003532:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003534:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003538:	4659      	mov	r1, fp
 800353a:	ee1a 0a10 	vmov	r0, s20
 800353e:	9302      	str	r3, [sp, #8]
 8003540:	f00d fae6 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8003544:	ee18 0a10 	vmov	r0, s16
 8003548:	2255      	movs	r2, #85	; 0x55
 800354a:	4629      	mov	r1, r5
 800354c:	f7ff fa5a 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8003550:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 8003552:	ee18 0a10 	vmov	r0, s16
 8003556:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 800355a:	4632      	mov	r2, r6
 800355c:	2307      	movs	r3, #7
 800355e:	a928      	add	r1, sp, #160	; 0xa0
 8003560:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003564:	f00d ff2e 	bl	80113c4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 8003568:	228c      	movs	r2, #140	; 0x8c
 800356a:	ee18 0a10 	vmov	r0, s16
 800356e:	2150      	movs	r1, #80	; 0x50
 8003570:	f00d fdd6 	bl	8011120 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 8003574:	ee18 0a10 	vmov	r0, s16
 8003578:	2132      	movs	r1, #50	; 0x32
 800357a:	f00d fd54 	bl	8011026 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 800357e:	ee18 0a10 	vmov	r0, s16
 8003582:	2132      	movs	r1, #50	; 0x32
 8003584:	f00d fdca 	bl	801111c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 8003588:	4b47      	ldr	r3, [pc, #284]	; (80036a8 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
    buttonWithIcon_LP3.setXY(194, 97);
 800358a:	9811      	ldr	r0, [sp, #68]	; 0x44
 800358c:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 8003590:	2261      	movs	r2, #97	; 0x61
 8003592:	21c2      	movs	r1, #194	; 0xc2
 8003594:	f7ff fa36 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8003598:	f04f 0809 	mov.w	r8, #9
 800359c:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80035a0:	aa27      	add	r2, sp, #156	; 0x9c
 80035a2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80035a4:	9600      	str	r6, [sp, #0]
 80035a6:	ab28      	add	r3, sp, #160	; 0xa0
 80035a8:	a926      	add	r1, sp, #152	; 0x98
 80035aa:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80035ae:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80035b2:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80035b6:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80035ba:	f010 fdc6 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80035be:	9b02      	ldr	r3, [sp, #8]
 80035c0:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 80035c4:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80035c6:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 80035ca:	ee18 0a90 	vmov	r0, s17
 80035ce:	f00d fa9f 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 80035d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80035d4:	223d      	movs	r2, #61	; 0x3d
 80035d6:	21c2      	movs	r1, #194	; 0xc2
 80035d8:	f7ff fa14 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80035dc:	aa27      	add	r2, sp, #156	; 0x9c
 80035de:	9812      	ldr	r0, [sp, #72]	; 0x48
 80035e0:	9600      	str	r6, [sp, #0]
 80035e2:	ab28      	add	r3, sp, #160	; 0xa0
 80035e4:	a926      	add	r1, sp, #152	; 0x98
 80035e6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80035ea:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80035ee:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80035f2:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80035f6:	f010 fda8 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80035fa:	9b02      	ldr	r3, [sp, #8]
 80035fc:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 8003600:	9912      	ldr	r1, [sp, #72]	; 0x48
 8003602:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 8003606:	ee18 0a90 	vmov	r0, s17
 800360a:	f00d fa81 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 800360e:	4638      	mov	r0, r7
 8003610:	2219      	movs	r2, #25
 8003612:	21c2      	movs	r1, #194	; 0xc2
 8003614:	f7ff f9f6 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003618:	aa27      	add	r2, sp, #156	; 0x9c
 800361a:	4638      	mov	r0, r7
 800361c:	ab28      	add	r3, sp, #160	; 0xa0
 800361e:	a926      	add	r1, sp, #152	; 0x98
 8003620:	9600      	str	r6, [sp, #0]
 8003622:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003626:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800362a:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800362e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003632:	f010 fd8a 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003636:	9b02      	ldr	r3, [sp, #8]
 8003638:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 800363c:	4639      	mov	r1, r7
 800363e:	ee18 0a90 	vmov	r0, s17
 8003642:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8003646:	f00d fa63 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 800364a:	2268      	movs	r2, #104	; 0x68
 800364c:	ee1d 0a90 	vmov	r0, s27
 8003650:	210a      	movs	r1, #10
 8003652:	f7ff f9d7 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003656:	f04f 33ff 	mov.w	r3, #4294967295
 800365a:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 800365e:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 8003662:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 8003666:	af22      	add	r7, sp, #136	; 0x88
 8003668:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800366c:	ee1d 1a90 	vmov	r1, s27
 8003670:	4638      	mov	r0, r7
 8003672:	4798      	blx	r3
 8003674:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003678:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 800367c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003680:	4b0a      	ldr	r3, [pc, #40]	; (80036ac <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 8003682:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 8003684:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 8003688:	b92b      	cbnz	r3, 8003696 <_ZN23Calibration_PadViewBaseC1Ev+0x566>
 800368a:	4b09      	ldr	r3, [pc, #36]	; (80036b0 <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 800368c:	4a09      	ldr	r2, [pc, #36]	; (80036b4 <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 800368e:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003690:	4809      	ldr	r0, [pc, #36]	; (80036b8 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 8003692:	f028 f9dd 	bl	802ba50 <__assert_func>
 8003696:	4b09      	ldr	r3, [pc, #36]	; (80036bc <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 8003698:	881b      	ldrh	r3, [r3, #0]
 800369a:	2b09      	cmp	r3, #9
 800369c:	d812      	bhi.n	80036c4 <_ZN23Calibration_PadViewBaseC1Ev+0x594>
 800369e:	4b08      	ldr	r3, [pc, #32]	; (80036c0 <_ZN23Calibration_PadViewBaseC1Ev+0x590>)
 80036a0:	4a04      	ldr	r2, [pc, #16]	; (80036b4 <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 80036a2:	2161      	movs	r1, #97	; 0x61
 80036a4:	e7f4      	b.n	8003690 <_ZN23Calibration_PadViewBaseC1Ev+0x560>
 80036a6:	bf00      	nop
 80036a8:	00ac00f0 	.word	0x00ac00f0
 80036ac:	2001388c 	.word	0x2001388c
 80036b0:	0802d430 	.word	0x0802d430
 80036b4:	0802d535 	.word	0x0802d535
 80036b8:	0802d4ad 	.word	0x0802d4ad
 80036bc:	20013890 	.word	0x20013890
 80036c0:	0802d4f4 	.word	0x0802d4f4
        return texts->getText(typedTextId);
 80036c4:	4bd8      	ldr	r3, [pc, #864]	; (8003a28 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 80036c6:	4641      	mov	r1, r8
 80036c8:	6818      	ldr	r0, [r3, #0]
 80036ca:	f005 f99f 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80036ce:	4ad7      	ldr	r2, [pc, #860]	; (8003a2c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 80036d0:	4603      	mov	r3, r0
 80036d2:	210a      	movs	r1, #10
 80036d4:	4648      	mov	r0, r9
 80036d6:	f016 fca1 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 80036da:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 80036de:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 80036e2:	f010 f81d 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80036e6:	f04f 090a 	mov.w	r9, #10
 80036ea:	4ad1      	ldr	r2, [pc, #836]	; (8003a30 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80036ec:	9229      	str	r2, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 80036ee:	ee1d 0a90 	vmov	r0, s27
 80036f2:	4631      	mov	r1, r6
 80036f4:	f8ad 90a8 	strh.w	r9, [sp, #168]	; 0xa8
 80036f8:	f010 f832 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 80036fc:	ee1d 1a90 	vmov	r1, s27
 8003700:	ee18 0a90 	vmov	r0, s17
 8003704:	f00d fa04 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 8003708:	2244      	movs	r2, #68	; 0x44
 800370a:	ee1e 0a10 	vmov	r0, s28
 800370e:	2116      	movs	r1, #22
 8003710:	f7ff f978 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8003714:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 8003718:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 800371c:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8003720:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003724:	f8c4 1330 	str.w	r1, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 8003728:	4638      	mov	r0, r7
 800372a:	ee1e 1a10 	vmov	r1, s28
 800372e:	4798      	blx	r3
 8003730:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003734:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8003738:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 800373c:	f604 6108 	addw	r1, r4, #3592	; 0xe08
 8003740:	9111      	str	r1, [sp, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003742:	49bc      	ldr	r1, [pc, #752]	; (8003a34 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8003744:	680b      	ldr	r3, [r1, #0]
 8003746:	2b00      	cmp	r3, #0
 8003748:	d09f      	beq.n	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800374a:	49bb      	ldr	r1, [pc, #748]	; (8003a38 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 800374c:	880b      	ldrh	r3, [r1, #0]
 800374e:	2b0b      	cmp	r3, #11
 8003750:	d9a5      	bls.n	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003752:	4bb5      	ldr	r3, [pc, #724]	; (8003a28 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 8003754:	210b      	movs	r1, #11
 8003756:	6818      	ldr	r0, [r3, #0]
 8003758:	f005 f958 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 800375c:	4ab3      	ldr	r2, [pc, #716]	; (8003a2c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 800375e:	4603      	mov	r3, r0
 8003760:	4649      	mov	r1, r9
 8003762:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003764:	f016 fc5a 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003768:	9811      	ldr	r0, [sp, #68]	; 0x44
 800376a:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
    textAreaCal_LP2.resizeToCurrentText();
 800376e:	ee1e 0a10 	vmov	r0, s28
 8003772:	f00f ffd5 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003776:	230c      	movs	r3, #12
 8003778:	4aad      	ldr	r2, [pc, #692]	; (8003a30 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800377a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 800377e:	ee1e 0a10 	vmov	r0, s28
 8003782:	4631      	mov	r1, r6
 8003784:	9229      	str	r2, [sp, #164]	; 0xa4
 8003786:	f00f ffeb 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 800378a:	ee1e 1a10 	vmov	r1, s28
 800378e:	ee18 0a90 	vmov	r0, s17
 8003792:	f00d f9bd 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 8003796:	2220      	movs	r2, #32
 8003798:	ee1e 0a90 	vmov	r0, s29
 800379c:	2116      	movs	r1, #22
 800379e:	f7ff f931 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80037a2:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 80037a6:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 80037aa:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80037ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80037b2:	f8c4 037c 	str.w	r0, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 80037b6:	ee1e 1a90 	vmov	r1, s29
 80037ba:	4638      	mov	r0, r7
 80037bc:	4798      	blx	r3
 80037be:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80037c2:	f504 7362 	add.w	r3, r4, #904	; 0x388
 80037c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 80037ca:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 80037ce:	9011      	str	r0, [sp, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80037d0:	4898      	ldr	r0, [pc, #608]	; (8003a34 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80037d2:	6803      	ldr	r3, [r0, #0]
 80037d4:	2b00      	cmp	r3, #0
 80037d6:	f43f af58 	beq.w	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80037da:	4997      	ldr	r1, [pc, #604]	; (8003a38 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80037dc:	880b      	ldrh	r3, [r1, #0]
 80037de:	2b0d      	cmp	r3, #13
 80037e0:	f67f af5d 	bls.w	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 80037e4:	4b90      	ldr	r3, [pc, #576]	; (8003a28 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 80037e6:	210d      	movs	r1, #13
 80037e8:	6818      	ldr	r0, [r3, #0]
 80037ea:	f005 f90f 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80037ee:	4a8f      	ldr	r2, [pc, #572]	; (8003a2c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 80037f0:	4603      	mov	r3, r0
 80037f2:	4649      	mov	r1, r9
 80037f4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80037f6:	f016 fc11 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80037fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80037fc:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
    textAreaCal_LP1.resizeToCurrentText();
 8003800:	ee1e 0a90 	vmov	r0, s29
 8003804:	f00f ff8c 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003808:	4a89      	ldr	r2, [pc, #548]	; (8003a30 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 800380a:	9229      	str	r2, [sp, #164]	; 0xa4
 800380c:	2314      	movs	r3, #20
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 800380e:	ee1e 0a90 	vmov	r0, s29
 8003812:	4631      	mov	r1, r6
 8003814:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003818:	f00f ffa2 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 800381c:	ee1e 1a90 	vmov	r1, s29
 8003820:	ee18 0a90 	vmov	r0, s17
 8003824:	f00d f974 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 8003828:	23f0      	movs	r3, #240	; 0xf0
 800382a:	ee1a 0a90 	vmov	r0, s21
 800382e:	220f      	movs	r2, #15
 8003830:	4629      	mov	r1, r5
 8003832:	f8cd 9000 	str.w	r9, [sp]
 8003836:	f7ff f8f2 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 800383a:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 800383e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8003840:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 8003844:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003846:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 800384a:	4611      	mov	r1, r2
 800384c:	f8c4 03c0 	str.w	r0, [r4, #960]	; 0x3c0
 8003850:	ee1a 0a90 	vmov	r0, s21
 8003854:	f7ff fc54 	bl	8003100 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 8003858:	2205      	movs	r2, #5
 800385a:	ee1a 0a90 	vmov	r0, s21
 800385e:	21eb      	movs	r1, #235	; 0xeb
 8003860:	f7ff fc52 	bl	8003108 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 8003864:	ee1a 0a90 	vmov	r0, s21
 8003868:	4659      	mov	r1, fp
 800386a:	f7ff fc51 	bl	8003110 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800386e:	ee1a 0a90 	vmov	r0, s21
 8003872:	4659      	mov	r1, fp
 8003874:	f00f fb44 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 8003878:	ee1a 1a90 	vmov	r1, s21
 800387c:	ee18 0a90 	vmov	r0, s17
 8003880:	f00d f946 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 8003884:	462a      	mov	r2, r5
 8003886:	9807      	ldr	r0, [sp, #28]
 8003888:	2160      	movs	r1, #96	; 0x60
 800388a:	f7ff f8bb 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800388e:	f04f 3eff 	mov.w	lr, #4294967295
        boundingArea = calculateBoundingArea();
 8003892:	4638      	mov	r0, r7
 8003894:	9907      	ldr	r1, [sp, #28]
        color = newColor;
 8003896:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        linespace = space;
 800389a:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 800389e:	f00f fcc5 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80038a2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80038a6:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 80038aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80038ae:	f04f 0e08 	mov.w	lr, #8
 80038b2:	4a5f      	ldr	r2, [pc, #380]	; (8003a30 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 80038b4:	9807      	ldr	r0, [sp, #28]
 80038b6:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 80038ba:	4631      	mov	r1, r6
 80038bc:	9229      	str	r2, [sp, #164]	; 0xa4
 80038be:	f00f ff4f 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 80038c2:	9907      	ldr	r1, [sp, #28]
 80038c4:	ee18 0a90 	vmov	r0, s17
 80038c8:	f00d f922 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 80038cc:	ee18 1a90 	vmov	r1, s17
 80038d0:	ee18 0a10 	vmov	r0, s16
 80038d4:	f00d fdff 	bl	80114d6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 80038d8:	4a58      	ldr	r2, [pc, #352]	; (8003a3c <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
    buttonWithIcon_RP3.setXY(194, 97);
 80038da:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80038dc:	f8c4 246c 	str.w	r2, [r4, #1132]	; 0x46c
 80038e0:	21c2      	movs	r1, #194	; 0xc2
 80038e2:	2261      	movs	r2, #97	; 0x61
 80038e4:	f7ff f88e 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80038e8:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80038ec:	4673      	mov	r3, lr
 80038ee:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80038f2:	4672      	mov	r2, lr
 80038f4:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80038f8:	4671      	mov	r1, lr
 80038fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80038fc:	9600      	str	r6, [sp, #0]
 80038fe:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003902:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003906:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800390a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800390e:	f010 fc1c 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003912:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 8003914:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003916:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 800391a:	4650      	mov	r0, sl
 800391c:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 8003920:	f00d f8f6 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 8003924:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003926:	223d      	movs	r2, #61	; 0x3d
 8003928:	21c2      	movs	r1, #194	; 0xc2
 800392a:	f7ff f86b 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800392e:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8003932:	4673      	mov	r3, lr
 8003934:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8003938:	4672      	mov	r2, lr
 800393a:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 800393e:	4671      	mov	r1, lr
 8003940:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003942:	9600      	str	r6, [sp, #0]
 8003944:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003948:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800394c:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8003950:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003954:	f010 fbf9 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003958:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 800395a:	9914      	ldr	r1, [sp, #80]	; 0x50
 800395c:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 8003960:	4650      	mov	r0, sl
 8003962:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 8003966:	f00d f8d3 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 800396a:	9815      	ldr	r0, [sp, #84]	; 0x54
 800396c:	2219      	movs	r2, #25
 800396e:	21c2      	movs	r1, #194	; 0xc2
 8003970:	f7ff f848 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003974:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8003978:	4673      	mov	r3, lr
 800397a:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800397e:	4672      	mov	r2, lr
 8003980:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8003984:	4671      	mov	r1, lr
 8003986:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003988:	9600      	str	r6, [sp, #0]
 800398a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800398e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003992:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8003996:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800399a:	f010 fbd6 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800399e:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 80039a0:	9915      	ldr	r1, [sp, #84]	; 0x54
 80039a2:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 80039a6:	4650      	mov	r0, sl
 80039a8:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 80039ac:	f00d f8b0 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 80039b0:	2268      	movs	r2, #104	; 0x68
 80039b2:	4649      	mov	r1, r9
 80039b4:	9808      	ldr	r0, [sp, #32]
 80039b6:	f7ff f825 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80039ba:	f04f 3eff 	mov.w	lr, #4294967295
 80039be:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 80039c2:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 80039c6:	4630      	mov	r0, r6
 80039c8:	f7ff f8a4 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80039cc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80039d0:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 80039d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039d8:	4816      	ldr	r0, [pc, #88]	; (8003a34 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 80039da:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 80039dc:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 80039e0:	2b00      	cmp	r3, #0
 80039e2:	f43f ae52 	beq.w	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039e6:	4914      	ldr	r1, [pc, #80]	; (8003a38 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 80039e8:	880b      	ldrh	r3, [r1, #0]
 80039ea:	2b12      	cmp	r3, #18
 80039ec:	f67f ae57 	bls.w	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 80039f0:	4b0d      	ldr	r3, [pc, #52]	; (8003a28 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 80039f2:	2112      	movs	r1, #18
 80039f4:	6818      	ldr	r0, [r3, #0]
 80039f6:	f005 f809 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80039fa:	4a0c      	ldr	r2, [pc, #48]	; (8003a2c <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 80039fc:	4603      	mov	r3, r0
 80039fe:	4649      	mov	r1, r9
 8003a00:	4638      	mov	r0, r7
 8003a02:	f016 fb0b 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 8003a06:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 8003a08:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 8003a0c:	f00f fe88 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003a10:	4f07      	ldr	r7, [pc, #28]	; (8003a30 <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 8003a12:	9808      	ldr	r0, [sp, #32]
 8003a14:	9729      	str	r7, [sp, #164]	; 0xa4
 8003a16:	2313      	movs	r3, #19
 8003a18:	4631      	mov	r1, r6
 8003a1a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003a1e:	f00f fe9f 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 8003a22:	9908      	ldr	r1, [sp, #32]
 8003a24:	4650      	mov	r0, sl
 8003a26:	e00b      	b.n	8003a40 <_ZN23Calibration_PadViewBaseC1Ev+0x910>
 8003a28:	20013898 	.word	0x20013898
 8003a2c:	0802d56d 	.word	0x0802d56d
 8003a30:	0802d5e0 	.word	0x0802d5e0
 8003a34:	2001388c 	.word	0x2001388c
 8003a38:	20013890 	.word	0x20013890
 8003a3c:	00ac00f0 	.word	0x00ac00f0
 8003a40:	f00d f866 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8003a44:	2116      	movs	r1, #22
 8003a46:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003a48:	2244      	movs	r2, #68	; 0x44
 8003a4a:	f7fe ffdb 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003a4e:	f04f 32ff 	mov.w	r2, #4294967295
 8003a52:	f8c4 25c0 	str.w	r2, [r4, #1472]	; 0x5c0
        linespace = space;
 8003a56:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8003a5a:	4630      	mov	r0, r6
 8003a5c:	f7ff f85a 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003a60:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003a64:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 8003a68:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a6c:	48d9      	ldr	r0, [pc, #868]	; (8003dd4 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 8003a6e:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 8003a70:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 8003a74:	2b00      	cmp	r3, #0
 8003a76:	f43f ae08 	beq.w	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a7a:	49d7      	ldr	r1, [pc, #860]	; (8003dd8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003a7c:	880b      	ldrh	r3, [r1, #0]
 8003a7e:	2b10      	cmp	r3, #16
 8003a80:	f67f ae0d 	bls.w	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003a84:	4bd5      	ldr	r3, [pc, #852]	; (8003ddc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a86:	f8df b34c 	ldr.w	fp, [pc, #844]	; 8003dd4 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>
        return texts->getText(typedTextId);
 8003a8a:	6818      	ldr	r0, [r3, #0]
 8003a8c:	2110      	movs	r1, #16
 8003a8e:	f004 ffbd 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8003a92:	4ad3      	ldr	r2, [pc, #844]	; (8003de0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003a94:	4603      	mov	r3, r0
 8003a96:	4649      	mov	r1, r9
 8003a98:	4628      	mov	r0, r5
 8003a9a:	f016 fabf 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 8003a9e:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 8003aa0:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003aa4:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 8003aa6:	f00f fe3b 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003aaa:	2311      	movs	r3, #17
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 8003aac:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003aae:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003ab2:	4629      	mov	r1, r5
 8003ab4:	9729      	str	r7, [sp, #164]	; 0xa4
 8003ab6:	f00f fe53 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 8003aba:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003abc:	4650      	mov	r0, sl
 8003abe:	f00d f827 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003ac2:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 8003ac6:	2220      	movs	r2, #32
 8003ac8:	2116      	movs	r1, #22
 8003aca:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003acc:	f7fe ff9a 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8003ad0:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 8003ad4:	2600      	movs	r6, #0
 8003ad6:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 8003ada:	4628      	mov	r0, r5
 8003adc:	f7ff f81a 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003ae0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003ae4:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 8003ae8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003aec:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 8003af0:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	f43f adc8 	beq.w	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003afa:	49b7      	ldr	r1, [pc, #732]	; (8003dd8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003afc:	880b      	ldrh	r3, [r1, #0]
 8003afe:	2b0f      	cmp	r3, #15
 8003b00:	f67f adcd 	bls.w	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003b04:	4bb5      	ldr	r3, [pc, #724]	; (8003ddc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003b06:	210f      	movs	r1, #15
 8003b08:	6818      	ldr	r0, [r3, #0]
 8003b0a:	f004 ff7f 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8003b0e:	4ab4      	ldr	r2, [pc, #720]	; (8003de0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003b10:	4603      	mov	r3, r0
 8003b12:	4649      	mov	r1, r9
 8003b14:	4638      	mov	r0, r7
 8003b16:	f016 fa81 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8003b1a:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8003b1c:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 8003b20:	f00f fdfe 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003b24:	4faf      	ldr	r7, [pc, #700]	; (8003de4 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8003b26:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003b28:	9729      	str	r7, [sp, #164]	; 0xa4
 8003b2a:	f04f 0e14 	mov.w	lr, #20
 8003b2e:	4629      	mov	r1, r5
 8003b30:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8003b34:	f00f fe14 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8003b38:	4650      	mov	r0, sl
 8003b3a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003b3c:	f00c ffe8 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 8003b40:	23f0      	movs	r3, #240	; 0xf0
 8003b42:	ee1b 0a10 	vmov	r0, s22
 8003b46:	f8cd 9000 	str.w	r9, [sp]
 8003b4a:	220f      	movs	r2, #15
 8003b4c:	4631      	mov	r1, r6
 8003b4e:	f7fe ff66 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b52:	f04f 32ff 	mov.w	r2, #4294967295
 8003b56:	f8c4 26a4 	str.w	r2, [r4, #1700]	; 0x6a4
 8003b5a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8003b5c:	f8c4 2650 	str.w	r2, [r4, #1616]	; 0x650
 8003b60:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 8003b64:	2205      	movs	r2, #5
 8003b66:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 8003b6a:	4611      	mov	r1, r2
 8003b6c:	ee1b 0a10 	vmov	r0, s22
 8003b70:	f7ff fac6 	bl	8003100 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 8003b74:	2205      	movs	r2, #5
 8003b76:	ee1b 0a10 	vmov	r0, s22
 8003b7a:	21eb      	movs	r1, #235	; 0xeb
 8003b7c:	f7ff fac4 	bl	8003108 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 8003b80:	ee1b 0a10 	vmov	r0, s22
 8003b84:	2101      	movs	r1, #1
 8003b86:	f7ff fac3 	bl	8003110 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003b8a:	ee1b 0a10 	vmov	r0, s22
 8003b8e:	2101      	movs	r1, #1
 8003b90:	f00f f9b6 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 8003b94:	4650      	mov	r0, sl
 8003b96:	ee1b 1a10 	vmov	r1, s22
 8003b9a:	f00c ffb9 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 8003b9e:	ee1f 0a10 	vmov	r0, s30
 8003ba2:	4632      	mov	r2, r6
 8003ba4:	215c      	movs	r1, #92	; 0x5c
 8003ba6:	f7fe ff2d 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003baa:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003bae:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8003bb2:	f8c4 26dc 	str.w	r2, [r4, #1756]	; 0x6dc
        boundingArea = calculateBoundingArea();
 8003bb6:	a822      	add	r0, sp, #136	; 0x88
        linespace = space;
 8003bb8:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 8003bbc:	f00f fb36 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003bc0:	ee1f 2a10 	vmov	r2, s30
 8003bc4:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003bc8:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8003bcc:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8003bd0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003bd4:	230e      	movs	r3, #14
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 8003bd6:	ee1f 0a10 	vmov	r0, s30
 8003bda:	4629      	mov	r1, r5
 8003bdc:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003be0:	9729      	str	r7, [sp, #164]	; 0xa4
 8003be2:	f00f fdbd 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 8003be6:	4650      	mov	r0, sl
 8003be8:	ee1f 1a10 	vmov	r1, s30
 8003bec:	f00c ff90 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 8003bf0:	4651      	mov	r1, sl
 8003bf2:	ee18 0a10 	vmov	r0, s16
 8003bf6:	f00d fc6e 	bl	80114d6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003bfa:	487b      	ldr	r0, [pc, #492]	; (8003de8 <_ZN23Calibration_PadViewBaseC1Ev+0xcb8>)
 8003bfc:	f8c4 06fc 	str.w	r0, [r4, #1788]	; 0x6fc
    buttonWithIcon_LH3.setXY(194, 97);
 8003c00:	2261      	movs	r2, #97	; 0x61
 8003c02:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003c04:	21c2      	movs	r1, #194	; 0xc2
 8003c06:	f7fe fefd 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003c0a:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003c0e:	4663      	mov	r3, ip
 8003c10:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003c14:	4662      	mov	r2, ip
 8003c16:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003c1a:	2709      	movs	r7, #9
 8003c1c:	4661      	mov	r1, ip
 8003c1e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003c20:	9500      	str	r5, [sp, #0]
    line1_RP.setPosition(0, 15, 240, 10);
 8003c22:	46c8      	mov	r8, r9
 8003c24:	f04f 0901 	mov.w	r9, #1
 8003c28:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003c2c:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003c30:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003c34:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003c38:	f010 fa87 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003c3c:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8003c3e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003c40:	f8c4 2748 	str.w	r2, [r4, #1864]	; 0x748
 8003c44:	ee19 0a10 	vmov	r0, s18
 8003c48:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 8003c4c:	f00c ff60 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 8003c50:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003c52:	223d      	movs	r2, #61	; 0x3d
 8003c54:	21c2      	movs	r1, #194	; 0xc2
 8003c56:	f7fe fed5 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003c5a:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003c5e:	4663      	mov	r3, ip
 8003c60:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003c64:	4662      	mov	r2, ip
 8003c66:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003c6a:	4661      	mov	r1, ip
 8003c6c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003c6e:	9500      	str	r5, [sp, #0]
 8003c70:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003c74:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003c78:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003c7c:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003c80:	f010 fa63 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003c84:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8003c86:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003c88:	f8c4 2784 	str.w	r2, [r4, #1924]	; 0x784
 8003c8c:	ee19 0a10 	vmov	r0, s18
 8003c90:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 8003c94:	f00c ff3c 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 8003c98:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003c9a:	2219      	movs	r2, #25
 8003c9c:	21c2      	movs	r1, #194	; 0xc2
 8003c9e:	f7fe feb1 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003ca2:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003ca6:	4663      	mov	r3, ip
 8003ca8:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003cac:	4662      	mov	r2, ip
 8003cae:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003cb2:	4661      	mov	r1, ip
 8003cb4:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003cb6:	9500      	str	r5, [sp, #0]
 8003cb8:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003cbc:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003cc0:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003cc4:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003cc8:	f010 fa3f 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003ccc:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 8003cce:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003cd0:	f8c4 27c0 	str.w	r2, [r4, #1984]	; 0x7c0
 8003cd4:	ee19 0a10 	vmov	r0, s18
 8003cd8:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 8003cdc:	f00c ff18 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 8003ce0:	2268      	movs	r2, #104	; 0x68
 8003ce2:	4641      	mov	r1, r8
 8003ce4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003ce6:	f7fe fe8d 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003cea:	f04f 3cff 	mov.w	ip, #4294967295
 8003cee:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 8003cf2:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 8003cf6:	4628      	mov	r0, r5
 8003cf8:	f7fe ff0c 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003cfc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d00:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 8003d04:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d08:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 8003d0c:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 8003d10:	2b00      	cmp	r3, #0
 8003d12:	f43f acba 	beq.w	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d16:	4930      	ldr	r1, [pc, #192]	; (8003dd8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003d18:	880b      	ldrh	r3, [r1, #0]
 8003d1a:	2b07      	cmp	r3, #7
 8003d1c:	f67f acbf 	bls.w	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003d20:	4b2e      	ldr	r3, [pc, #184]	; (8003ddc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003d22:	2107      	movs	r1, #7
 8003d24:	6818      	ldr	r0, [r3, #0]
 8003d26:	f004 fe71 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8003d2a:	4a2d      	ldr	r2, [pc, #180]	; (8003de0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003d2c:	4603      	mov	r3, r0
 8003d2e:	4641      	mov	r1, r8
 8003d30:	4650      	mov	r0, sl
 8003d32:	f016 f973 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8003d36:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8003d38:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 8003d3c:	f00f fcf0 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003d40:	4a28      	ldr	r2, [pc, #160]	; (8003de4 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8003d42:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003d44:	9229      	str	r2, [sp, #164]	; 0xa4
 8003d46:	4629      	mov	r1, r5
 8003d48:	f8ad 80a8 	strh.w	r8, [sp, #168]	; 0xa8
 8003d4c:	f00f fd08 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8003d50:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003d52:	ee19 0a10 	vmov	r0, s18
 8003d56:	f00c fedb 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 8003d5a:	2244      	movs	r2, #68	; 0x44
 8003d5c:	2116      	movs	r1, #22
 8003d5e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003d60:	f7fe fe50 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003d64:	f04f 3cff 	mov.w	ip, #4294967295
 8003d68:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 8003d6c:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8003d70:	4628      	mov	r0, r5
 8003d72:	f7fe fecf 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d76:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d7a:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 8003d7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d82:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8003d86:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 8003d8a:	2b00      	cmp	r3, #0
 8003d8c:	f43f ac7d 	beq.w	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d90:	4911      	ldr	r1, [pc, #68]	; (8003dd8 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003d92:	880b      	ldrh	r3, [r1, #0]
 8003d94:	2b06      	cmp	r3, #6
 8003d96:	f67f ac82 	bls.w	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003d9a:	4b10      	ldr	r3, [pc, #64]	; (8003ddc <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003d9c:	2106      	movs	r1, #6
 8003d9e:	6818      	ldr	r0, [r3, #0]
 8003da0:	f004 fe34 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8003da4:	4a0e      	ldr	r2, [pc, #56]	; (8003de0 <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003da6:	4603      	mov	r3, r0
 8003da8:	4641      	mov	r1, r8
 8003daa:	4650      	mov	r0, sl
 8003dac:	f016 f936 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8003db0:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8003db2:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8003db6:	f00f fcb3 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003dba:	230c      	movs	r3, #12
 8003dbc:	4a09      	ldr	r2, [pc, #36]	; (8003de4 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8003dbe:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003dc0:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003dc4:	4629      	mov	r1, r5
 8003dc6:	9229      	str	r2, [sp, #164]	; 0xa4
 8003dc8:	f00f fcca 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 8003dcc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003dce:	ee19 0a10 	vmov	r0, s18
 8003dd2:	e00b      	b.n	8003dec <_ZN23Calibration_PadViewBaseC1Ev+0xcbc>
 8003dd4:	2001388c 	.word	0x2001388c
 8003dd8:	20013890 	.word	0x20013890
 8003ddc:	20013898 	.word	0x20013898
 8003de0:	0802d56d 	.word	0x0802d56d
 8003de4:	0802d5e0 	.word	0x0802d5e0
 8003de8:	00ac00f0 	.word	0x00ac00f0
 8003dec:	f00c fe90 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8003df0:	2220      	movs	r2, #32
 8003df2:	2116      	movs	r1, #22
 8003df4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003df6:	f7fe fe05 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003dfa:	f04f 3cff 	mov.w	ip, #4294967295
 8003dfe:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 8003e02:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 8003e06:	4628      	mov	r0, r5
 8003e08:	f7fe fe84 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003e0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003e10:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 8003e14:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e18:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 8003e1c:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 8003e20:	2b00      	cmp	r3, #0
 8003e22:	f43f ac32 	beq.w	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e26:	49d9      	ldr	r1, [pc, #868]	; (800418c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8003e28:	880b      	ldrh	r3, [r1, #0]
 8003e2a:	2b05      	cmp	r3, #5
 8003e2c:	f67f ac37 	bls.w	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003e30:	4bd7      	ldr	r3, [pc, #860]	; (8004190 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8003e32:	2105      	movs	r1, #5
 8003e34:	6818      	ldr	r0, [r3, #0]
 8003e36:	f004 fde9 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8003e3a:	4ad6      	ldr	r2, [pc, #856]	; (8004194 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8003e3c:	4603      	mov	r3, r0
 8003e3e:	4641      	mov	r1, r8
 8003e40:	4650      	mov	r0, sl
 8003e42:	f016 f8eb 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8003e46:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8003e48:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8003e4c:	f00f fc68 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003e50:	f04f 0e14 	mov.w	lr, #20
 8003e54:	4ad0      	ldr	r2, [pc, #832]	; (8004198 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8003e56:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003e58:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8003e5c:	4629      	mov	r1, r5
 8003e5e:	9229      	str	r2, [sp, #164]	; 0xa4
 8003e60:	f00f fc7e 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8003e64:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003e66:	ee19 0a10 	vmov	r0, s18
 8003e6a:	f00c fe51 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8003e6e:	ee1b 0a90 	vmov	r0, s23
 8003e72:	23f0      	movs	r3, #240	; 0xf0
 8003e74:	220f      	movs	r2, #15
 8003e76:	4631      	mov	r1, r6
 8003e78:	f8cd 8000 	str.w	r8, [sp]
 8003e7c:	f7fe fdcf 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8003e80:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003e84:	f04f 3cff 	mov.w	ip, #4294967295
 8003e88:	981e      	ldr	r0, [sp, #120]	; 0x78
 8003e8a:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
    line1_LH.setStart(5, 5);
 8003e8e:	2205      	movs	r2, #5
 8003e90:	f8c4 c934 	str.w	ip, [r4, #2356]	; 0x934
 8003e94:	4611      	mov	r1, r2
 8003e96:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8003e9a:	ee1b 0a90 	vmov	r0, s23
 8003e9e:	f7ff f92f 	bl	8003100 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8003ea2:	2205      	movs	r2, #5
 8003ea4:	ee1b 0a90 	vmov	r0, s23
 8003ea8:	21eb      	movs	r1, #235	; 0xeb
 8003eaa:	f7ff f92d 	bl	8003108 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8003eae:	ee1b 0a90 	vmov	r0, s23
 8003eb2:	4649      	mov	r1, r9
 8003eb4:	f7ff f92c 	bl	8003110 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003eb8:	ee1b 0a90 	vmov	r0, s23
 8003ebc:	4649      	mov	r1, r9
 8003ebe:	f00f f81f 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8003ec2:	ee1b 1a90 	vmov	r1, s23
 8003ec6:	ee19 0a10 	vmov	r0, s18
 8003eca:	f00c fe21 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8003ece:	4632      	mov	r2, r6
 8003ed0:	ee1f 0a90 	vmov	r0, s31
 8003ed4:	2149      	movs	r1, #73	; 0x49
 8003ed6:	f7fe fd95 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003eda:	f04f 3cff 	mov.w	ip, #4294967295
 8003ede:	f8c4 c96c 	str.w	ip, [r4, #2412]	; 0x96c
        boundingArea = calculateBoundingArea();
 8003ee2:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003ee6:	4660      	mov	r0, ip
 8003ee8:	ee1f 1a90 	vmov	r1, s31
        linespace = space;
 8003eec:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8003ef0:	f00f f99c 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003ef4:	ee1f 0a90 	vmov	r0, s31
 8003ef8:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003efc:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8003f00:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8003f04:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003f08:	2304      	movs	r3, #4
 8003f0a:	4aa3      	ldr	r2, [pc, #652]	; (8004198 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
 8003f0c:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8003f10:	4629      	mov	r1, r5
 8003f12:	ee1f 0a90 	vmov	r0, s31
 8003f16:	9229      	str	r2, [sp, #164]	; 0xa4
 8003f18:	f00f fc22 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8003f1c:	ee1f 1a90 	vmov	r1, s31
 8003f20:	ee19 0a10 	vmov	r0, s18
 8003f24:	f00c fdf4 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8003f28:	ee19 1a10 	vmov	r1, s18
 8003f2c:	ee18 0a10 	vmov	r0, s16
 8003f30:	f00d fad1 	bl	80114d6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003f34:	4899      	ldr	r0, [pc, #612]	; (800419c <_ZN23Calibration_PadViewBaseC1Ev+0x106c>)
 8003f36:	f8c4 098c 	str.w	r0, [r4, #2444]	; 0x98c
    buttonWithIcon_RH3.setXY(194, 97);
 8003f3a:	2261      	movs	r2, #97	; 0x61
 8003f3c:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003f3e:	21c2      	movs	r1, #194	; 0xc2
 8003f40:	f7fe fd60 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003f44:	aa28      	add	r2, sp, #160	; 0xa0
 8003f46:	a826      	add	r0, sp, #152	; 0x98
 8003f48:	4613      	mov	r3, r2
 8003f4a:	4601      	mov	r1, r0
 8003f4c:	9500      	str	r5, [sp, #0]
 8003f4e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003f50:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003f54:	aa27      	add	r2, sp, #156	; 0x9c
 8003f56:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003f5a:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003f5e:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003f62:	f010 f8f2 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003f66:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8003f68:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003f6a:	f8c4 29d8 	str.w	r2, [r4, #2520]	; 0x9d8
 8003f6e:	ee19 0a90 	vmov	r0, s19
 8003f72:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8003f76:	f00c fdcb 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8003f7a:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003f7c:	223d      	movs	r2, #61	; 0x3d
 8003f7e:	21c2      	movs	r1, #194	; 0xc2
 8003f80:	f7fe fd40 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003f84:	aa28      	add	r2, sp, #160	; 0xa0
 8003f86:	a826      	add	r0, sp, #152	; 0x98
 8003f88:	4613      	mov	r3, r2
 8003f8a:	4601      	mov	r1, r0
 8003f8c:	9500      	str	r5, [sp, #0]
 8003f8e:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003f90:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003f94:	aa27      	add	r2, sp, #156	; 0x9c
 8003f96:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003f9a:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003f9e:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003fa2:	f010 f8d2 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003fa6:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8003fa8:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003faa:	f8c4 2a14 	str.w	r2, [r4, #2580]	; 0xa14
 8003fae:	ee19 0a90 	vmov	r0, s19
 8003fb2:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8003fb6:	f00c fdab 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8003fba:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003fbc:	2219      	movs	r2, #25
 8003fbe:	21c2      	movs	r1, #194	; 0xc2
 8003fc0:	f7fe fd20 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003fc4:	aa28      	add	r2, sp, #160	; 0xa0
 8003fc6:	a826      	add	r0, sp, #152	; 0x98
 8003fc8:	4613      	mov	r3, r2
 8003fca:	4601      	mov	r1, r0
 8003fcc:	9500      	str	r5, [sp, #0]
 8003fce:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003fd0:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003fd4:	aa27      	add	r2, sp, #156	; 0x9c
 8003fd6:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003fda:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003fde:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003fe2:	f010 f8b2 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003fe6:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8003fe8:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003fea:	f8c4 2a50 	str.w	r2, [r4, #2640]	; 0xa50
 8003fee:	ee19 0a90 	vmov	r0, s19
 8003ff2:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8003ff6:	f00c fd8b 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8003ffa:	4641      	mov	r1, r8
 8003ffc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003ffe:	2268      	movs	r2, #104	; 0x68
 8004000:	f7fe fd00 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004004:	f04f 32ff 	mov.w	r2, #4294967295
 8004008:	f8c4 2a94 	str.w	r2, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 800400c:	4628      	mov	r0, r5
        linespace = space;
 800400e:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8004012:	f7fe fd7f 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004016:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800401a:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 800401e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004022:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8004026:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 800402a:	2b00      	cmp	r3, #0
 800402c:	f43f ab2d 	beq.w	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004030:	4956      	ldr	r1, [pc, #344]	; (800418c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004032:	880b      	ldrh	r3, [r1, #0]
 8004034:	2b03      	cmp	r3, #3
 8004036:	f67f ab32 	bls.w	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 800403a:	4b55      	ldr	r3, [pc, #340]	; (8004190 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
        : typedTextId(id)
 800403c:	f8df a158 	ldr.w	sl, [pc, #344]	; 8004198 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>
        return texts->getText(typedTextId);
 8004040:	6818      	ldr	r0, [r3, #0]
 8004042:	2103      	movs	r1, #3
 8004044:	f004 fce2 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8004048:	4a52      	ldr	r2, [pc, #328]	; (8004194 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 800404a:	4603      	mov	r3, r0
 800404c:	4641      	mov	r1, r8
 800404e:	4628      	mov	r0, r5
 8004050:	f015 ffe4 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8004054:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8004056:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 800405a:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 800405c:	f00f fb60 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8004060:	980e      	ldr	r0, [sp, #56]	; 0x38
        : typedTextId(id)
 8004062:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004066:	4629      	mov	r1, r5
 8004068:	f8ad 80a8 	strh.w	r8, [sp, #168]	; 0xa8
 800406c:	f00f fb78 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8004070:	990e      	ldr	r1, [sp, #56]	; 0x38
 8004072:	ee19 0a90 	vmov	r0, s19
 8004076:	f00c fd4b 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800407a:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 800407e:	2244      	movs	r2, #68	; 0x44
 8004080:	2116      	movs	r1, #22
 8004082:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8004084:	f7fe fcbe 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8004088:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 800408c:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8004090:	4628      	mov	r0, r5
 8004092:	f7fe fd3f 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004096:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800409a:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 800409e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80040a2:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 80040a6:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 80040aa:	2b00      	cmp	r3, #0
 80040ac:	f43f aaed 	beq.w	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80040b0:	4936      	ldr	r1, [pc, #216]	; (800418c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 80040b2:	880b      	ldrh	r3, [r1, #0]
 80040b4:	2b02      	cmp	r3, #2
 80040b6:	f67f aaf2 	bls.w	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 80040ba:	4b35      	ldr	r3, [pc, #212]	; (8004190 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 80040bc:	2102      	movs	r1, #2
 80040be:	6818      	ldr	r0, [r3, #0]
 80040c0:	f004 fca4 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80040c4:	4a33      	ldr	r2, [pc, #204]	; (8004194 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 80040c6:	4603      	mov	r3, r0
 80040c8:	4641      	mov	r1, r8
 80040ca:	4648      	mov	r0, r9
 80040cc:	f015 ffa6 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 80040d0:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 80040d2:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 80040d6:	f00f fb23 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80040da:	f04f 020c 	mov.w	r2, #12
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 80040de:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80040e0:	f8ad 20a8 	strh.w	r2, [sp, #168]	; 0xa8
 80040e4:	4629      	mov	r1, r5
 80040e6:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80040ea:	f00f fb39 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 80040ee:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80040f0:	ee19 0a90 	vmov	r0, s19
 80040f4:	f00c fd0c 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 80040f8:	2220      	movs	r2, #32
 80040fa:	2116      	movs	r1, #22
 80040fc:	9810      	ldr	r0, [sp, #64]	; 0x40
 80040fe:	f7fe fc81 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004102:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004106:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 800410a:	4628      	mov	r0, r5
 800410c:	f7fe fd02 	bl	8002b14 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8004110:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004114:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004118:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800411c:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 8004120:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004124:	2b00      	cmp	r3, #0
 8004126:	f43f aab0 	beq.w	800368a <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800412a:	4918      	ldr	r1, [pc, #96]	; (800418c <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 800412c:	880b      	ldrh	r3, [r1, #0]
 800412e:	2b01      	cmp	r3, #1
 8004130:	f67f aab5 	bls.w	800369e <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8004134:	4b16      	ldr	r3, [pc, #88]	; (8004190 <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004136:	2101      	movs	r1, #1
 8004138:	6818      	ldr	r0, [r3, #0]
 800413a:	f004 fc67 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 800413e:	4a15      	ldr	r2, [pc, #84]	; (8004194 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004140:	4603      	mov	r3, r0
 8004142:	4641      	mov	r1, r8
 8004144:	4648      	mov	r0, r9
 8004146:	f015 ff69 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 800414a:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 800414c:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 8004150:	f00f fae6 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004154:	2314      	movs	r3, #20
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004156:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004158:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800415c:	4629      	mov	r1, r5
 800415e:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004162:	f00f fafd 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 8004166:	9910      	ldr	r1, [sp, #64]	; 0x40
 8004168:	ee19 0a90 	vmov	r0, s19
 800416c:	f00c fcd0 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 8004170:	ee1c 0a10 	vmov	r0, s24
 8004174:	4631      	mov	r1, r6
 8004176:	f8cd 8000 	str.w	r8, [sp]
 800417a:	23f0      	movs	r3, #240	; 0xf0
 800417c:	220f      	movs	r2, #15
 800417e:	f7fe fc4e 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004182:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004184:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 8004188:	2205      	movs	r2, #5
 800418a:	e009      	b.n	80041a0 <_ZN23Calibration_PadViewBaseC1Ev+0x1070>
 800418c:	20013890 	.word	0x20013890
 8004190:	20013898 	.word	0x20013898
 8004194:	0802d56d 	.word	0x0802d56d
 8004198:	0802d5e0 	.word	0x0802d5e0
 800419c:	00ac00f0 	.word	0x00ac00f0
 80041a0:	ee1c 0a10 	vmov	r0, s24
 80041a4:	4611      	mov	r1, r2
 80041a6:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 80041aa:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 80041ae:	f7fe ffa7 	bl	8003100 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 80041b2:	2205      	movs	r2, #5
 80041b4:	ee1c 0a10 	vmov	r0, s24
 80041b8:	21eb      	movs	r1, #235	; 0xeb
 80041ba:	f7fe ffa5 	bl	8003108 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 80041be:	ee1c 0a10 	vmov	r0, s24
 80041c2:	2101      	movs	r1, #1
 80041c4:	f7fe ffa4 	bl	8003110 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80041c8:	ee1c 0a10 	vmov	r0, s24
 80041cc:	2101      	movs	r1, #1
 80041ce:	f00e fe97 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 80041d2:	ee1c 1a10 	vmov	r1, s24
 80041d6:	ee19 0a90 	vmov	r0, s19
 80041da:	f10d 0988 	add.w	r9, sp, #136	; 0x88
 80041de:	f00c fc97 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 80041e2:	4632      	mov	r2, r6
 80041e4:	9803      	ldr	r0, [sp, #12]
 80041e6:	2149      	movs	r1, #73	; 0x49
 80041e8:	f7fe fc0c 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80041ec:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 80041ee:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 80041f2:	4648      	mov	r0, r9
        linespace = space;
 80041f4:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 80041f8:	f00f f818 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80041fc:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8004200:	9b03      	ldr	r3, [sp, #12]
 8004202:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004206:	333c      	adds	r3, #60	; 0x3c
 8004208:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 800420c:	9803      	ldr	r0, [sp, #12]
 800420e:	f8ad 60a8 	strh.w	r6, [sp, #168]	; 0xa8
 8004212:	4629      	mov	r1, r5
 8004214:	f00f faa4 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004218:	9903      	ldr	r1, [sp, #12]
 800421a:	ee19 0a90 	vmov	r0, s19
 800421e:	f00c fc77 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 8004222:	ee19 1a90 	vmov	r1, s19
 8004226:	ee18 0a10 	vmov	r0, s16
 800422a:	f00d f954 	bl	80114d6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 800422e:	ee18 0a10 	vmov	r0, s16
 8004232:	4631      	mov	r1, r6
 8004234:	f00d f940 	bl	80114b8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004238:	ee18 1a10 	vmov	r1, s16
 800423c:	ee1a 0a10 	vmov	r0, s20
 8004240:	f00c fc66 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004244:	ee1c 0a90 	vmov	r0, s25
 8004248:	4631      	mov	r1, r6
 800424a:	f8cd 8000 	str.w	r8, [sp]
 800424e:	23f0      	movs	r3, #240	; 0xf0
 8004250:	224b      	movs	r2, #75	; 0x4b
 8004252:	f7fe fbe4 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004256:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800425a:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 800425e:	2205      	movs	r2, #5
 8004260:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004262:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 8004266:	ee1c 0a90 	vmov	r0, s25
 800426a:	4611      	mov	r1, r2
 800426c:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 8004270:	f7fe ff46 	bl	8003100 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 8004274:	2205      	movs	r2, #5
 8004276:	ee1c 0a90 	vmov	r0, s25
 800427a:	21eb      	movs	r1, #235	; 0xeb
 800427c:	f7fe ff44 	bl	8003108 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 8004280:	ee1c 0a90 	vmov	r0, s25
 8004284:	2101      	movs	r1, #1
 8004286:	f7fe ff43 	bl	8003110 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800428a:	ee1c 0a90 	vmov	r0, s25
 800428e:	2101      	movs	r1, #1
 8004290:	f00e fe36 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8004294:	ee1c 1a90 	vmov	r1, s25
 8004298:	ee1a 0a10 	vmov	r0, s20
 800429c:	f00c fc38 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 80042a0:	9804      	ldr	r0, [sp, #16]
 80042a2:	223c      	movs	r2, #60	; 0x3c
 80042a4:	2146      	movs	r1, #70	; 0x46
 80042a6:	f7fe fbad 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80042aa:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80042ac:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 80042b0:	4648      	mov	r0, r9
        linespace = space;
 80042b2:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 80042b6:	f00e ffb9 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80042ba:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80042be:	9b04      	ldr	r3, [sp, #16]
 80042c0:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80042c4:	333c      	adds	r3, #60	; 0x3c
 80042c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80042ca:	231e      	movs	r3, #30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80042cc:	9804      	ldr	r0, [sp, #16]
 80042ce:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80042d2:	4629      	mov	r1, r5
 80042d4:	f00f fa44 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80042d8:	9904      	ldr	r1, [sp, #16]
 80042da:	ee1a 0a10 	vmov	r0, s20
 80042de:	f00c fc17 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80042e2:	ee1d 0a10 	vmov	r0, s26
 80042e6:	4631      	mov	r1, r6
 80042e8:	f8cd 8000 	str.w	r8, [sp]
 80042ec:	23f0      	movs	r3, #240	; 0xf0
 80042ee:	2232      	movs	r2, #50	; 0x32
 80042f0:	f7fe fb95 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 80042f4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80042f6:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 80042fa:	2205      	movs	r2, #5
 80042fc:	ee1d 0a10 	vmov	r0, s26
 8004300:	4611      	mov	r1, r2
 8004302:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 8004306:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 800430a:	f7fe fef9 	bl	8003100 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 800430e:	2205      	movs	r2, #5
 8004310:	ee1d 0a10 	vmov	r0, s26
 8004314:	21eb      	movs	r1, #235	; 0xeb
 8004316:	f7fe fef7 	bl	8003108 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 800431a:	ee1d 0a10 	vmov	r0, s26
 800431e:	2101      	movs	r1, #1
 8004320:	f7fe fef6 	bl	8003110 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004324:	ee1d 0a10 	vmov	r0, s26
 8004328:	2101      	movs	r1, #1
 800432a:	f00e fde9 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800432e:	ee1d 1a10 	vmov	r1, s26
 8004332:	ee1a 0a10 	vmov	r0, s20
 8004336:	f00c fbeb 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 800433a:	9805      	ldr	r0, [sp, #20]
 800433c:	2223      	movs	r2, #35	; 0x23
 800433e:	2145      	movs	r1, #69	; 0x45
 8004340:	f7fe fb60 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8004344:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004346:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 800434a:	4648      	mov	r0, r9
        linespace = space;
 800434c:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 8004350:	f00e ff6c 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004354:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8004358:	9b05      	ldr	r3, [sp, #20]
 800435a:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 800435e:	333c      	adds	r3, #60	; 0x3c
 8004360:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004364:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8004366:	9805      	ldr	r0, [sp, #20]
 8004368:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800436c:	4629      	mov	r1, r5
 800436e:	f00f f9f7 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004372:	9905      	ldr	r1, [sp, #20]
 8004374:	ee1a 0a10 	vmov	r0, s20
 8004378:	f00c fbca 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800437c:	9806      	ldr	r0, [sp, #24]
 800437e:	220c      	movs	r2, #12
 8004380:	2136      	movs	r1, #54	; 0x36
 8004382:	f7fe fb3f 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8004386:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 8004388:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 800438c:	4648      	mov	r0, r9
        linespace = space;
 800438e:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 8004392:	f00e ff4b 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004396:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800439a:	9b06      	ldr	r3, [sp, #24]
 800439c:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80043a0:	333c      	adds	r3, #60	; 0x3c
 80043a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80043a6:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80043a8:	9806      	ldr	r0, [sp, #24]
 80043aa:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80043ae:	4629      	mov	r1, r5
 80043b0:	f00f f9d6 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80043b4:	ee1a 0a10 	vmov	r0, s20
 80043b8:	9906      	ldr	r1, [sp, #24]
 80043ba:	f00c fba9 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80043be:	4620      	mov	r0, r4
 80043c0:	b02d      	add	sp, #180	; 0xb4
 80043c2:	ecbd 8b10 	vpop	{d8-d15}
 80043c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043ca:	bf00      	nop

080043cc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80043cc:	4770      	bx	lr

080043ce <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80043ce:	4770      	bx	lr

080043d0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80043d0:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80043d4:	6808      	ldr	r0, [r1, #0]
 80043d6:	6849      	ldr	r1, [r1, #4]
 80043d8:	c303      	stmia	r3!, {r0, r1}
    }
 80043da:	4770      	bx	lr

080043dc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80043dc:	4770      	bx	lr

080043de <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80043de:	4770      	bx	lr

080043e0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80043e0:	6041      	str	r1, [r0, #4]
    }
 80043e2:	4770      	bx	lr

080043e4 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80043e4:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80043e6:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80043e8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80043ec:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80043f0:	8002      	strh	r2, [r0, #0]
 80043f2:	8042      	strh	r2, [r0, #2]
 80043f4:	8084      	strh	r4, [r0, #4]
 80043f6:	80c1      	strh	r1, [r0, #6]
        }
 80043f8:	bd10      	pop	{r4, pc}

080043fa <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80043fa:	4770      	bx	lr

080043fc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80043fc:	4770      	bx	lr
	...

08004400 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004400:	4b06      	ldr	r3, [pc, #24]	; (800441c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8004402:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004406:	2300      	movs	r3, #0
 8004408:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800440c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004410:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004414:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004418:	4770      	bx	lr
 800441a:	bf00      	nop
 800441c:	080047bd 	.word	0x080047bd

08004420 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8004420:	2301      	movs	r3, #1
 8004422:	7203      	strb	r3, [r0, #8]
    }
 8004424:	4770      	bx	lr

08004426 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004426:	4770      	bx	lr

08004428 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004428:	4770      	bx	lr

0800442a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800442a:	4770      	bx	lr

0800442c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800442c:	4770      	bx	lr

0800442e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800442e:	4770      	bx	lr

08004430 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8004430:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8004432:	6840      	ldr	r0, [r0, #4]
 8004434:	6803      	ldr	r3, [r0, #0]
 8004436:	3110      	adds	r1, #16
 8004438:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800443a:	4718      	bx	r3

0800443c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 800443c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800443e:	6840      	ldr	r0, [r0, #4]
 8004440:	6803      	ldr	r3, [r0, #0]
 8004442:	3110      	adds	r1, #16
 8004444:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004446:	4718      	bx	r3

08004448 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004448:	4770      	bx	lr

0800444a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800444a:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 800444c:	6840      	ldr	r0, [r0, #4]
 800444e:	6803      	ldr	r3, [r0, #0]
 8004450:	3110      	adds	r1, #16
 8004452:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004454:	4718      	bx	r3

08004456 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004456:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004458:	6840      	ldr	r0, [r0, #4]
 800445a:	6803      	ldr	r3, [r0, #0]
 800445c:	3110      	adds	r1, #16
 800445e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004460:	4718      	bx	r3

08004462 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8004462:	4770      	bx	lr

08004464 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8004464:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8004466:	68c2      	ldr	r2, [r0, #12]
 8004468:	6841      	ldr	r1, [r0, #4]
 800446a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800446c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800446e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8004472:	07d2      	lsls	r2, r2, #31
 8004474:	bf48      	it	mi
 8004476:	590a      	ldrmi	r2, [r1, r4]
 8004478:	689b      	ldr	r3, [r3, #8]
    }
 800447a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800447e:	bf48      	it	mi
 8004480:	58d3      	ldrmi	r3, [r2, r3]
 8004482:	4718      	bx	r3

08004484 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004484:	6843      	ldr	r3, [r0, #4]
 8004486:	b12b      	cbz	r3, 8004494 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8004488:	6883      	ldr	r3, [r0, #8]
 800448a:	b92b      	cbnz	r3, 8004498 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800448c:	68c0      	ldr	r0, [r0, #12]
 800448e:	f000 0001 	and.w	r0, r0, #1
 8004492:	4770      	bx	lr
 8004494:	4618      	mov	r0, r3
 8004496:	4770      	bx	lr
 8004498:	2001      	movs	r0, #1
    }
 800449a:	4770      	bx	lr

0800449c <_ZN8touchgfx12NoTransitionD0Ev>:
 800449c:	b510      	push	{r4, lr}
 800449e:	210c      	movs	r1, #12
 80044a0:	4604      	mov	r4, r0
 80044a2:	f026 fcc2 	bl	802ae2a <_ZdlPvj>
 80044a6:	4620      	mov	r0, r4
 80044a8:	bd10      	pop	{r4, pc}

080044aa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80044aa:	b510      	push	{r4, lr}
 80044ac:	2110      	movs	r1, #16
 80044ae:	4604      	mov	r4, r0
 80044b0:	f026 fcbb 	bl	802ae2a <_ZdlPvj>
 80044b4:	4620      	mov	r0, r4
 80044b6:	bd10      	pop	{r4, pc}

080044b8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80044b8:	b510      	push	{r4, lr}
 80044ba:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80044be:	4604      	mov	r4, r0
 80044c0:	f026 fcb3 	bl	802ae2a <_ZdlPvj>
 80044c4:	4620      	mov	r0, r4
 80044c6:	bd10      	pop	{r4, pc}

080044c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80044c8:	b510      	push	{r4, lr}
 80044ca:	2138      	movs	r1, #56	; 0x38
 80044cc:	4604      	mov	r4, r0
 80044ce:	f026 fcac 	bl	802ae2a <_ZdlPvj>
 80044d2:	4620      	mov	r0, r4
 80044d4:	bd10      	pop	{r4, pc}

080044d6 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80044d6:	b510      	push	{r4, lr}
 80044d8:	2128      	movs	r1, #40	; 0x28
 80044da:	4604      	mov	r4, r0
 80044dc:	f026 fca5 	bl	802ae2a <_ZdlPvj>
 80044e0:	4620      	mov	r0, r4
 80044e2:	bd10      	pop	{r4, pc}

080044e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80044e4:	b510      	push	{r4, lr}
 80044e6:	2138      	movs	r1, #56	; 0x38
 80044e8:	4604      	mov	r4, r0
 80044ea:	f026 fc9e 	bl	802ae2a <_ZdlPvj>
 80044ee:	4620      	mov	r0, r4
 80044f0:	bd10      	pop	{r4, pc}

080044f2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80044f2:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80044f4:	f012 fbe4 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 80044f8:	6803      	ldr	r3, [r0, #0]
    }
 80044fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80044fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004500:	4718      	bx	r3
	...

08004504 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004504:	b513      	push	{r0, r1, r4, lr}
 8004506:	4604      	mov	r4, r0
        animationCounter++;
 8004508:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800450a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800450c:	3001      	adds	r0, #1
 800450e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004510:	4298      	cmp	r0, r3
        animationCounter++;
 8004512:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004514:	d905      	bls.n	8004522 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8004516:	2301      	movs	r3, #1
 8004518:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800451a:	2300      	movs	r3, #0
 800451c:	72a3      	strb	r3, [r4, #10]
    }
 800451e:	b002      	add	sp, #8
 8004520:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004522:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004526:	2100      	movs	r1, #0
 8004528:	f014 fa3a 	bl	80189a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800452c:	f010 0201 	ands.w	r2, r0, #1
 8004530:	b283      	uxth	r3, r0
 8004532:	d12a      	bne.n	800458a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004534:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004536:	4a19      	ldr	r2, [pc, #100]	; (800459c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8004538:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800453c:	89e3      	ldrh	r3, [r4, #14]
 800453e:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8004540:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004544:	82a0      	strh	r0, [r4, #20]
 8004546:	2000      	movs	r0, #0
 8004548:	1ad2      	subs	r2, r2, r3
 800454a:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800454e:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8004550:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8004552:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004554:	4a12      	ldr	r2, [pc, #72]	; (80045a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8004556:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800455a:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 800455c:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8004560:	691b      	ldr	r3, [r3, #16]
 8004562:	f8ad 1000 	strh.w	r1, [sp]
 8004566:	f8ad 2006 	strh.w	r2, [sp, #6]
 800456a:	4669      	mov	r1, sp
 800456c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800456e:	7aa3      	ldrb	r3, [r4, #10]
 8004570:	2b01      	cmp	r3, #1
 8004572:	d1d4      	bne.n	800451e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8004574:	4b0b      	ldr	r3, [pc, #44]	; (80045a4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8004576:	781b      	ldrb	r3, [r3, #0]
 8004578:	2b00      	cmp	r3, #0
 800457a:	d0d0      	beq.n	800451e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800457c:	f012 fba0 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004580:	b002      	add	sp, #8
 8004582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004586:	f012 bba1 	b.w	8016ccc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800458a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800458e:	2800      	cmp	r0, #0
 8004590:	bfd8      	it	le
 8004592:	460a      	movle	r2, r1
 8004594:	4413      	add	r3, r2
 8004596:	81e3      	strh	r3, [r4, #14]
 8004598:	e7cd      	b.n	8004536 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 800459a:	bf00      	nop
 800459c:	20013828 	.word	0x20013828
 80045a0:	2001382a 	.word	0x2001382a
 80045a4:	20013832 	.word	0x20013832

080045a8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80045a8:	b510      	push	{r4, lr}
 80045aa:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80045ac:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80045b0:	b158      	cbz	r0, 80045ca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80045b2:	6803      	ldr	r3, [r0, #0]
 80045b4:	68db      	ldr	r3, [r3, #12]
 80045b6:	4798      	blx	r3
 80045b8:	b138      	cbz	r0, 80045ca <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80045ba:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80045be:	6803      	ldr	r3, [r0, #0]
 80045c0:	689b      	ldr	r3, [r3, #8]
 80045c2:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80045c4:	2300      	movs	r3, #0
 80045c6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80045ca:	bd10      	pop	{r4, pc}

080045cc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80045cc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80045d0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80045d4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80045d6:	68a8      	ldr	r0, [r5, #8]
 80045d8:	6803      	ldr	r3, [r0, #0]
 80045da:	6a1b      	ldr	r3, [r3, #32]
 80045dc:	4798      	blx	r3
 80045de:	2897      	cmp	r0, #151	; 0x97
 80045e0:	d805      	bhi.n	80045ee <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80045e2:	4b46      	ldr	r3, [pc, #280]	; (80046fc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80045e4:	4a46      	ldr	r2, [pc, #280]	; (8004700 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80045e6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80045e8:	4846      	ldr	r0, [pc, #280]	; (8004704 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80045ea:	f027 fa31 	bl	802ba50 <__assert_func>
 80045ee:	6868      	ldr	r0, [r5, #4]
 80045f0:	6803      	ldr	r3, [r0, #0]
 80045f2:	6a1b      	ldr	r3, [r3, #32]
 80045f4:	4798      	blx	r3
 80045f6:	280f      	cmp	r0, #15
 80045f8:	d803      	bhi.n	8004602 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 80045fa:	4b43      	ldr	r3, [pc, #268]	; (8004708 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 80045fc:	4a40      	ldr	r2, [pc, #256]	; (8004700 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80045fe:	21a4      	movs	r1, #164	; 0xa4
 8004600:	e7f2      	b.n	80045e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004602:	68e8      	ldr	r0, [r5, #12]
 8004604:	6803      	ldr	r3, [r0, #0]
 8004606:	6a1b      	ldr	r3, [r3, #32]
 8004608:	4798      	blx	r3
 800460a:	280b      	cmp	r0, #11
 800460c:	d803      	bhi.n	8004616 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 800460e:	4b3f      	ldr	r3, [pc, #252]	; (800470c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8004610:	4a3b      	ldr	r2, [pc, #236]	; (8004700 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004612:	21a5      	movs	r1, #165	; 0xa5
 8004614:	e7e8      	b.n	80045e8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8004616:	f012 fb53 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800461a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004714 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800461e:	3004      	adds	r0, #4
 8004620:	f012 fbb4 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004624:	f8d9 0000 	ldr.w	r0, [r9]
 8004628:	b110      	cbz	r0, 8004630 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800462a:	6803      	ldr	r3, [r0, #0]
 800462c:	68db      	ldr	r3, [r3, #12]
 800462e:	4798      	blx	r3
    if (*currentTrans)
 8004630:	f8d9 0000 	ldr.w	r0, [r9]
 8004634:	b110      	cbz	r0, 800463c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8004636:	6803      	ldr	r3, [r0, #0]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	4798      	blx	r3
    if (*currentScreen)
 800463c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004718 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8004640:	f8d8 0000 	ldr.w	r0, [r8]
 8004644:	b110      	cbz	r0, 800464c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004646:	6803      	ldr	r3, [r0, #0]
 8004648:	695b      	ldr	r3, [r3, #20]
 800464a:	4798      	blx	r3
    if (*currentPresenter)
 800464c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004650:	b110      	cbz	r0, 8004658 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004652:	6803      	ldr	r3, [r0, #0]
 8004654:	685b      	ldr	r3, [r3, #4]
 8004656:	4798      	blx	r3
    if (*currentScreen)
 8004658:	f8d8 0000 	ldr.w	r0, [r8]
 800465c:	b110      	cbz	r0, 8004664 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800465e:	6803      	ldr	r3, [r0, #0]
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	4798      	blx	r3
    if (*currentPresenter)
 8004664:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004668:	b110      	cbz	r0, 8004670 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800466a:	6803      	ldr	r3, [r0, #0]
 800466c:	689b      	ldr	r3, [r3, #8]
 800466e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004670:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004672:	6803      	ldr	r3, [r0, #0]
 8004674:	2100      	movs	r1, #0
 8004676:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004678:	4798      	blx	r3
        : screenContainer(0), done(false)
 800467a:	f04f 0b00 	mov.w	fp, #0
 800467e:	4b24      	ldr	r3, [pc, #144]	; (8004710 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8004680:	6003      	str	r3, [r0, #0]
 8004682:	4604      	mov	r4, r0
 8004684:	f8c0 b004 	str.w	fp, [r0, #4]
 8004688:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800468c:	68a8      	ldr	r0, [r5, #8]
 800468e:	6803      	ldr	r3, [r0, #0]
 8004690:	4659      	mov	r1, fp
 8004692:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004694:	4798      	blx	r3
 8004696:	4606      	mov	r6, r0
 8004698:	f004 fea4 	bl	80093e4 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800469c:	6868      	ldr	r0, [r5, #4]
 800469e:	6803      	ldr	r3, [r0, #0]
 80046a0:	4659      	mov	r1, fp
 80046a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046a4:	4798      	blx	r3
 80046a6:	4631      	mov	r1, r6
 80046a8:	4605      	mov	r5, r0
 80046aa:	f004 fe77 	bl	800939c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80046ae:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80046b2:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046b6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046ba:	b1e5      	cbz	r5, 80046f6 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80046bc:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80046be:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046c2:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80046c4:	f8c5 a008 	str.w	sl, [r5, #8]
 80046c8:	4630      	mov	r0, r6
 80046ca:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80046cc:	63f5      	str	r5, [r6, #60]	; 0x3c
 80046ce:	4798      	blx	r3
    newPresenter->activate();
 80046d0:	682b      	ldr	r3, [r5, #0]
 80046d2:	4628      	mov	r0, r5
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80046d8:	4621      	mov	r1, r4
 80046da:	4630      	mov	r0, r6
 80046dc:	f014 f91c 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80046e0:	6823      	ldr	r3, [r4, #0]
 80046e2:	4620      	mov	r0, r4
 80046e4:	691b      	ldr	r3, [r3, #16]
 80046e6:	4798      	blx	r3
    newTransition->invalidate();
 80046e8:	6823      	ldr	r3, [r4, #0]
 80046ea:	695b      	ldr	r3, [r3, #20]
 80046ec:	4620      	mov	r0, r4
}
 80046ee:	b001      	add	sp, #4
 80046f0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80046f4:	4718      	bx	r3
    model->bind(newPresenter);
 80046f6:	462b      	mov	r3, r5
 80046f8:	e7e1      	b.n	80046be <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 80046fa:	bf00      	nop
 80046fc:	0802d75c 	.word	0x0802d75c
 8004700:	0802d7ea 	.word	0x0802d7ea
 8004704:	0802d8f8 	.word	0x0802d8f8
 8004708:	0802d93f 	.word	0x0802d93f
 800470c:	0802d9e2 	.word	0x0802d9e2
 8004710:	0802ea9c 	.word	0x0802ea9c
 8004714:	2001387c 	.word	0x2001387c
 8004718:	20013878 	.word	0x20013878

0800471c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800471c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800471e:	4604      	mov	r4, r0
        animationCounter++;
 8004720:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004722:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004724:	3001      	adds	r0, #1
 8004726:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004728:	4298      	cmp	r0, r3
        animationCounter++;
 800472a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 800472c:	d905      	bls.n	800473a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800472e:	2301      	movs	r3, #1
 8004730:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004732:	2300      	movs	r3, #0
 8004734:	72a3      	strb	r3, [r4, #10]
    }
 8004736:	b003      	add	sp, #12
 8004738:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800473a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800473e:	2100      	movs	r1, #0
 8004740:	f014 f92e 	bl	80189a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004744:	f010 0201 	ands.w	r2, r0, #1
 8004748:	b283      	uxth	r3, r0
 800474a:	d128      	bne.n	800479e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800474c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800474e:	4b18      	ldr	r3, [pc, #96]	; (80047b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004750:	4818      	ldr	r0, [pc, #96]	; (80047b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004752:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004754:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004756:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004758:	f9b0 0000 	ldrsh.w	r0, [r0]
 800475c:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004760:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8004762:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004764:	442b      	add	r3, r5
 8004766:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004768:	b212      	sxth	r2, r2
 800476a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800476e:	6803      	ldr	r3, [r0, #0]
 8004770:	8322      	strh	r2, [r4, #24]
 8004772:	f8ad 2000 	strh.w	r2, [sp]
 8004776:	2200      	movs	r2, #0
 8004778:	691b      	ldr	r3, [r3, #16]
 800477a:	f8ad 2002 	strh.w	r2, [sp, #2]
 800477e:	4669      	mov	r1, sp
 8004780:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8004782:	7aa3      	ldrb	r3, [r4, #10]
 8004784:	2b01      	cmp	r3, #1
 8004786:	d1d6      	bne.n	8004736 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8004788:	4b0b      	ldr	r3, [pc, #44]	; (80047b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800478a:	781b      	ldrb	r3, [r3, #0]
 800478c:	2b00      	cmp	r3, #0
 800478e:	d0d2      	beq.n	8004736 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004790:	f012 fa96 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004794:	b003      	add	sp, #12
 8004796:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800479a:	f012 ba97 	b.w	8016ccc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800479e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80047a2:	2800      	cmp	r0, #0
 80047a4:	bfd8      	it	le
 80047a6:	460a      	movle	r2, r1
 80047a8:	4413      	add	r3, r2
 80047aa:	81e3      	strh	r3, [r4, #14]
 80047ac:	e7cf      	b.n	800474e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80047ae:	bf00      	nop
 80047b0:	20013828 	.word	0x20013828
 80047b4:	2001382a 	.word	0x2001382a
 80047b8:	20013832 	.word	0x20013832

080047bc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80047bc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047c0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80047c4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047c6:	68a8      	ldr	r0, [r5, #8]
 80047c8:	6803      	ldr	r3, [r0, #0]
 80047ca:	6a1b      	ldr	r3, [r3, #32]
 80047cc:	4798      	blx	r3
 80047ce:	f241 137b 	movw	r3, #4475	; 0x117b
 80047d2:	4298      	cmp	r0, r3
 80047d4:	d805      	bhi.n	80047e2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80047d6:	4b46      	ldr	r3, [pc, #280]	; (80048f0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80047d8:	4a46      	ldr	r2, [pc, #280]	; (80048f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80047da:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047dc:	4846      	ldr	r0, [pc, #280]	; (80048f8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80047de:	f027 f937 	bl	802ba50 <__assert_func>
 80047e2:	6868      	ldr	r0, [r5, #4]
 80047e4:	6803      	ldr	r3, [r0, #0]
 80047e6:	6a1b      	ldr	r3, [r3, #32]
 80047e8:	4798      	blx	r3
 80047ea:	280f      	cmp	r0, #15
 80047ec:	d803      	bhi.n	80047f6 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80047ee:	4b43      	ldr	r3, [pc, #268]	; (80048fc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 80047f0:	4a40      	ldr	r2, [pc, #256]	; (80048f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80047f2:	21a4      	movs	r1, #164	; 0xa4
 80047f4:	e7f2      	b.n	80047dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80047f6:	68e8      	ldr	r0, [r5, #12]
 80047f8:	6803      	ldr	r3, [r0, #0]
 80047fa:	6a1b      	ldr	r3, [r3, #32]
 80047fc:	4798      	blx	r3
 80047fe:	280b      	cmp	r0, #11
 8004800:	d803      	bhi.n	800480a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8004802:	4b3f      	ldr	r3, [pc, #252]	; (8004900 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8004804:	4a3b      	ldr	r2, [pc, #236]	; (80048f4 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004806:	21a5      	movs	r1, #165	; 0xa5
 8004808:	e7e8      	b.n	80047dc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800480a:	f012 fa59 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800480e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004908 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8004812:	3004      	adds	r0, #4
 8004814:	f012 faba 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004818:	f8d9 0000 	ldr.w	r0, [r9]
 800481c:	b110      	cbz	r0, 8004824 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800481e:	6803      	ldr	r3, [r0, #0]
 8004820:	68db      	ldr	r3, [r3, #12]
 8004822:	4798      	blx	r3
    if (*currentTrans)
 8004824:	f8d9 0000 	ldr.w	r0, [r9]
 8004828:	b110      	cbz	r0, 8004830 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800482a:	6803      	ldr	r3, [r0, #0]
 800482c:	681b      	ldr	r3, [r3, #0]
 800482e:	4798      	blx	r3
    if (*currentScreen)
 8004830:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800490c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004834:	f8d8 0000 	ldr.w	r0, [r8]
 8004838:	b110      	cbz	r0, 8004840 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800483a:	6803      	ldr	r3, [r0, #0]
 800483c:	695b      	ldr	r3, [r3, #20]
 800483e:	4798      	blx	r3
    if (*currentPresenter)
 8004840:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004844:	b110      	cbz	r0, 800484c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004846:	6803      	ldr	r3, [r0, #0]
 8004848:	685b      	ldr	r3, [r3, #4]
 800484a:	4798      	blx	r3
    if (*currentScreen)
 800484c:	f8d8 0000 	ldr.w	r0, [r8]
 8004850:	b110      	cbz	r0, 8004858 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004852:	6803      	ldr	r3, [r0, #0]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	4798      	blx	r3
    if (*currentPresenter)
 8004858:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800485c:	b110      	cbz	r0, 8004864 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800485e:	6803      	ldr	r3, [r0, #0]
 8004860:	689b      	ldr	r3, [r3, #8]
 8004862:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004864:	68e8      	ldr	r0, [r5, #12]
 8004866:	6803      	ldr	r3, [r0, #0]
 8004868:	2100      	movs	r1, #0
 800486a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800486c:	4798      	blx	r3
 800486e:	f04f 0b00 	mov.w	fp, #0
 8004872:	4b24      	ldr	r3, [pc, #144]	; (8004904 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8004874:	6003      	str	r3, [r0, #0]
 8004876:	4604      	mov	r4, r0
 8004878:	f8c0 b004 	str.w	fp, [r0, #4]
 800487c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004880:	68a8      	ldr	r0, [r5, #8]
 8004882:	6803      	ldr	r3, [r0, #0]
 8004884:	4659      	mov	r1, fp
 8004886:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004888:	4798      	blx	r3
 800488a:	4606      	mov	r6, r0
 800488c:	f004 fa4e 	bl	8008d2c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004890:	6868      	ldr	r0, [r5, #4]
 8004892:	6803      	ldr	r3, [r0, #0]
 8004894:	4659      	mov	r1, fp
 8004896:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004898:	4798      	blx	r3
 800489a:	4631      	mov	r1, r6
 800489c:	4605      	mov	r5, r0
 800489e:	f004 fa1f 	bl	8008ce0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80048a2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80048a6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048aa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048ae:	b1e5      	cbz	r5, 80048ea <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 80048b0:	1d2b      	adds	r3, r5, #4
 80048b2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048b6:	6833      	ldr	r3, [r6, #0]
 80048b8:	f8c5 a008 	str.w	sl, [r5, #8]
 80048bc:	4630      	mov	r0, r6
 80048be:	68db      	ldr	r3, [r3, #12]
 80048c0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80048c2:	4798      	blx	r3
    newPresenter->activate();
 80048c4:	682b      	ldr	r3, [r5, #0]
 80048c6:	4628      	mov	r0, r5
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048cc:	4621      	mov	r1, r4
 80048ce:	4630      	mov	r0, r6
 80048d0:	f014 f822 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048d4:	6823      	ldr	r3, [r4, #0]
 80048d6:	4620      	mov	r0, r4
 80048d8:	691b      	ldr	r3, [r3, #16]
 80048da:	4798      	blx	r3
    newTransition->invalidate();
 80048dc:	6823      	ldr	r3, [r4, #0]
 80048de:	695b      	ldr	r3, [r3, #20]
 80048e0:	4620      	mov	r0, r4
}
 80048e2:	b001      	add	sp, #4
 80048e4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048e8:	4718      	bx	r3
    model->bind(newPresenter);
 80048ea:	462b      	mov	r3, r5
 80048ec:	e7e1      	b.n	80048b2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 80048ee:	bf00      	nop
 80048f0:	0802d75c 	.word	0x0802d75c
 80048f4:	0802da85 	.word	0x0802da85
 80048f8:	0802d8f8 	.word	0x0802d8f8
 80048fc:	0802d93f 	.word	0x0802d93f
 8004900:	0802d9e2 	.word	0x0802d9e2
 8004904:	0802ea9c 	.word	0x0802ea9c
 8004908:	2001387c 	.word	0x2001387c
 800490c:	20013878 	.word	0x20013878

08004910 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004910:	4b04      	ldr	r3, [pc, #16]	; (8004924 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8004918:	b10a      	cbz	r2, 800491e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800491a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800491c:	b900      	cbnz	r0, 8004920 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800491e:	6898      	ldr	r0, [r3, #8]
    }
 8004920:	4770      	bx	lr
 8004922:	bf00      	nop
 8004924:	20013834 	.word	0x20013834

08004928 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800492a:	4604      	mov	r4, r0
 800492c:	4617      	mov	r7, r2
 800492e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004930:	f012 fafa 	bl	8016f28 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004934:	4b10      	ldr	r3, [pc, #64]	; (8004978 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8004936:	601c      	str	r4, [r3, #0]
      model(m)
 8004938:	4b10      	ldr	r3, [pc, #64]	; (800497c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800493a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800493c:	4b10      	ldr	r3, [pc, #64]	; (8004980 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800493e:	2500      	movs	r5, #0
 8004940:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004944:	4b0f      	ldr	r3, [pc, #60]	; (8004984 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004946:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800494a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800494c:	6803      	ldr	r3, [r0, #0]
 800494e:	2101      	movs	r1, #1
 8004950:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8004952:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004956:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800495a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800495c:	4628      	mov	r0, r5
 800495e:	f004 f819 	bl	8008994 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004962:	f7ff ffd5 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 8004966:	f01b fee2 	bl	802072e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800496a:	f7ff ffd1 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 800496e:	f01b ff59 	bl	8020824 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8004972:	4620      	mov	r0, r4
 8004974:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004976:	bf00      	nop
 8004978:	20013888 	.word	0x20013888
 800497c:	0802ea48 	.word	0x0802ea48
 8004980:	0802ea30 	.word	0x0802ea30
 8004984:	20013834 	.word	0x20013834

08004988 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004988:	4b06      	ldr	r3, [pc, #24]	; (80049a4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 800498a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800498e:	2300      	movs	r3, #0
 8004990:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004994:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004998:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800499c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049a0:	4770      	bx	lr
 80049a2:	bf00      	nop
 80049a4:	080047bd 	.word	0x080047bd

080049a8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80049a8:	4b06      	ldr	r3, [pc, #24]	; (80049c4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80049aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049ae:	2300      	movs	r3, #0
 80049b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049c0:	4770      	bx	lr
 80049c2:	bf00      	nop
 80049c4:	08004e2d 	.word	0x08004e2d

080049c8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 80049c8:	4b06      	ldr	r3, [pc, #24]	; (80049e4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 80049ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049ce:	2300      	movs	r3, #0
 80049d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049e0:	4770      	bx	lr
 80049e2:	bf00      	nop
 80049e4:	080059d1 	.word	0x080059d1

080049e8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 80049e8:	4b06      	ldr	r3, [pc, #24]	; (8004a04 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 80049ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049ee:	2300      	movs	r3, #0
 80049f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a00:	4770      	bx	lr
 8004a02:	bf00      	nop
 8004a04:	08004ced 	.word	0x08004ced

08004a08 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8004a08:	4b06      	ldr	r3, [pc, #24]	; (8004a24 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8004a0a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a0e:	2300      	movs	r3, #0
 8004a10:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a14:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a18:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a1c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a20:	4770      	bx	lr
 8004a22:	bf00      	nop
 8004a24:	08005891 	.word	0x08005891

08004a28 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8004a28:	4b06      	ldr	r3, [pc, #24]	; (8004a44 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8004a2a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a2e:	2300      	movs	r3, #0
 8004a30:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a34:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a38:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a3c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a40:	4770      	bx	lr
 8004a42:	bf00      	nop
 8004a44:	08005751 	.word	0x08005751

08004a48 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004a48:	4b06      	ldr	r3, [pc, #24]	; (8004a64 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8004a4a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a4e:	2300      	movs	r3, #0
 8004a50:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a54:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a58:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a5c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a60:	4770      	bx	lr
 8004a62:	bf00      	nop
 8004a64:	08005611 	.word	0x08005611

08004a68 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8004a68:	4b06      	ldr	r3, [pc, #24]	; (8004a84 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8004a6a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a6e:	2300      	movs	r3, #0
 8004a70:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a74:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a78:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a7c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a80:	4770      	bx	lr
 8004a82:	bf00      	nop
 8004a84:	080054d1 	.word	0x080054d1

08004a88 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8004a88:	4b06      	ldr	r3, [pc, #24]	; (8004aa4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8004a8a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a8e:	2300      	movs	r3, #0
 8004a90:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a94:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a98:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a9c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004aa0:	4770      	bx	lr
 8004aa2:	bf00      	nop
 8004aa4:	08004bad 	.word	0x08004bad

08004aa8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8004aa8:	4b06      	ldr	r3, [pc, #24]	; (8004ac4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8004aaa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004aae:	2300      	movs	r3, #0
 8004ab0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004ab4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004ab8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004abc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ac0:	4770      	bx	lr
 8004ac2:	bf00      	nop
 8004ac4:	08005391 	.word	0x08005391

08004ac8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004ac8:	4b06      	ldr	r3, [pc, #24]	; (8004ae4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8004aca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004ace:	2300      	movs	r3, #0
 8004ad0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004ad4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004ad8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004adc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004ae0:	4770      	bx	lr
 8004ae2:	bf00      	nop
 8004ae4:	08005251 	.word	0x08005251

08004ae8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004ae8:	4b06      	ldr	r3, [pc, #24]	; (8004b04 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8004aea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004aee:	2300      	movs	r3, #0
 8004af0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004af4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004af8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004afc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b00:	4770      	bx	lr
 8004b02:	bf00      	nop
 8004b04:	08005111 	.word	0x08005111

08004b08 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004b08:	4b06      	ldr	r3, [pc, #24]	; (8004b24 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004b0a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b0e:	2300      	movs	r3, #0
 8004b10:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b14:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b18:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b1c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b20:	4770      	bx	lr
 8004b22:	bf00      	nop
 8004b24:	08004fd1 	.word	0x08004fd1

08004b28 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004b28:	4b06      	ldr	r3, [pc, #24]	; (8004b44 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004b2a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004b2e:	2300      	movs	r3, #0
 8004b30:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004b34:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004b38:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004b3c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004b40:	4770      	bx	lr
 8004b42:	bf00      	nop
 8004b44:	080045cd 	.word	0x080045cd

08004b48 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004b48:	6803      	ldr	r3, [r0, #0]
 8004b4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b4c:	4718      	bx	r3
	...

08004b50 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004b50:	4b12      	ldr	r3, [pc, #72]	; (8004b9c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004b52:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004b54:	6003      	str	r3, [r0, #0]
 8004b56:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004b5a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004b5c:	4b10      	ldr	r3, [pc, #64]	; (8004ba0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004b5e:	7241      	strb	r1, [r0, #9]
 8004b60:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b62:	4910      	ldr	r1, [pc, #64]	; (8004ba4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004b64:	4b10      	ldr	r3, [pc, #64]	; (8004ba8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b66:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004b6a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004b6e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004b70:	2200      	movs	r2, #0
 8004b72:	6042      	str	r2, [r0, #4]
 8004b74:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004b76:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004b78:	81c2      	strh	r2, [r0, #14]
          solid()
 8004b7a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004b7e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004b82:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004b86:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004b8a:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004b8c:	9100      	str	r1, [sp, #0]
 8004b8e:	3010      	adds	r0, #16
 8004b90:	4611      	mov	r1, r2
 8004b92:	f7fd ff44 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004b96:	4620      	mov	r0, r4
 8004b98:	b002      	add	sp, #8
 8004b9a:	bd10      	pop	{r4, pc}
 8004b9c:	0802eae4 	.word	0x0802eae4
 8004ba0:	0802e9c8 	.word	0x0802e9c8
 8004ba4:	2001382a 	.word	0x2001382a
 8004ba8:	20013828 	.word	0x20013828

08004bac <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004bac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004bb0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004bb4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004bb6:	68a0      	ldr	r0, [r4, #8]
 8004bb8:	6803      	ldr	r3, [r0, #0]
 8004bba:	6a1b      	ldr	r3, [r3, #32]
 8004bbc:	4798      	blx	r3
 8004bbe:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004bc2:	d205      	bcs.n	8004bd0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004bc4:	4b42      	ldr	r3, [pc, #264]	; (8004cd0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004bc6:	4a43      	ldr	r2, [pc, #268]	; (8004cd4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004bc8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004bca:	4843      	ldr	r0, [pc, #268]	; (8004cd8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004bcc:	f026 ff40 	bl	802ba50 <__assert_func>
 8004bd0:	6860      	ldr	r0, [r4, #4]
 8004bd2:	6803      	ldr	r3, [r0, #0]
 8004bd4:	6a1b      	ldr	r3, [r3, #32]
 8004bd6:	4798      	blx	r3
 8004bd8:	280f      	cmp	r0, #15
 8004bda:	d803      	bhi.n	8004be4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004bdc:	4b3f      	ldr	r3, [pc, #252]	; (8004cdc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004bde:	4a3d      	ldr	r2, [pc, #244]	; (8004cd4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004be0:	21a4      	movs	r1, #164	; 0xa4
 8004be2:	e7f2      	b.n	8004bca <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004be4:	68e0      	ldr	r0, [r4, #12]
 8004be6:	6803      	ldr	r3, [r0, #0]
 8004be8:	6a1b      	ldr	r3, [r3, #32]
 8004bea:	4798      	blx	r3
 8004bec:	2837      	cmp	r0, #55	; 0x37
 8004bee:	d803      	bhi.n	8004bf8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004bf0:	4b3b      	ldr	r3, [pc, #236]	; (8004ce0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004bf2:	4a38      	ldr	r2, [pc, #224]	; (8004cd4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004bf4:	21a5      	movs	r1, #165	; 0xa5
 8004bf6:	e7e8      	b.n	8004bca <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004bf8:	f012 f862 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004bfc:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ce4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004c00:	3004      	adds	r0, #4
 8004c02:	f012 f8c3 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c06:	f8d9 0000 	ldr.w	r0, [r9]
 8004c0a:	b110      	cbz	r0, 8004c12 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004c0c:	6803      	ldr	r3, [r0, #0]
 8004c0e:	68db      	ldr	r3, [r3, #12]
 8004c10:	4798      	blx	r3
    if (*currentTrans)
 8004c12:	f8d9 0000 	ldr.w	r0, [r9]
 8004c16:	b110      	cbz	r0, 8004c1e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004c18:	6803      	ldr	r3, [r0, #0]
 8004c1a:	681b      	ldr	r3, [r3, #0]
 8004c1c:	4798      	blx	r3
    if (*currentScreen)
 8004c1e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004ce8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004c22:	f8d8 0000 	ldr.w	r0, [r8]
 8004c26:	b110      	cbz	r0, 8004c2e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004c28:	6803      	ldr	r3, [r0, #0]
 8004c2a:	695b      	ldr	r3, [r3, #20]
 8004c2c:	4798      	blx	r3
    if (*currentPresenter)
 8004c2e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c32:	b110      	cbz	r0, 8004c3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004c34:	6803      	ldr	r3, [r0, #0]
 8004c36:	685b      	ldr	r3, [r3, #4]
 8004c38:	4798      	blx	r3
    if (*currentScreen)
 8004c3a:	f8d8 0000 	ldr.w	r0, [r8]
 8004c3e:	b110      	cbz	r0, 8004c46 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004c40:	6803      	ldr	r3, [r0, #0]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	4798      	blx	r3
    if (*currentPresenter)
 8004c46:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c4a:	b110      	cbz	r0, 8004c52 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004c4c:	6803      	ldr	r3, [r0, #0]
 8004c4e:	689b      	ldr	r3, [r3, #8]
 8004c50:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c52:	68e0      	ldr	r0, [r4, #12]
 8004c54:	2100      	movs	r1, #0
 8004c56:	f7ff ff77 	bl	8004b48 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004c5a:	2114      	movs	r1, #20
 8004c5c:	4605      	mov	r5, r0
 8004c5e:	f7ff ff77 	bl	8004b50 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c62:	68a0      	ldr	r0, [r4, #8]
 8004c64:	6803      	ldr	r3, [r0, #0]
 8004c66:	2100      	movs	r1, #0
 8004c68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c6a:	4798      	blx	r3
 8004c6c:	4606      	mov	r6, r0
 8004c6e:	f004 f91d 	bl	8008eac <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c72:	6860      	ldr	r0, [r4, #4]
 8004c74:	6803      	ldr	r3, [r0, #0]
 8004c76:	2100      	movs	r1, #0
 8004c78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c7a:	4798      	blx	r3
 8004c7c:	4631      	mov	r1, r6
 8004c7e:	4604      	mov	r4, r0
 8004c80:	f004 f8ee 	bl	8008e60 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004c84:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004c88:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004c8c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004c90:	b1dc      	cbz	r4, 8004cca <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004c92:	1d23      	adds	r3, r4, #4
 8004c94:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004c98:	6833      	ldr	r3, [r6, #0]
 8004c9a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004c9e:	4630      	mov	r0, r6
 8004ca0:	68db      	ldr	r3, [r3, #12]
 8004ca2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004ca4:	4798      	blx	r3
    newPresenter->activate();
 8004ca6:	6823      	ldr	r3, [r4, #0]
 8004ca8:	4620      	mov	r0, r4
 8004caa:	681b      	ldr	r3, [r3, #0]
 8004cac:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004cae:	4629      	mov	r1, r5
 8004cb0:	4630      	mov	r0, r6
 8004cb2:	f013 fe31 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004cb6:	682b      	ldr	r3, [r5, #0]
 8004cb8:	4628      	mov	r0, r5
 8004cba:	691b      	ldr	r3, [r3, #16]
 8004cbc:	4798      	blx	r3
    newTransition->invalidate();
 8004cbe:	682b      	ldr	r3, [r5, #0]
 8004cc0:	4628      	mov	r0, r5
 8004cc2:	695b      	ldr	r3, [r3, #20]
}
 8004cc4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004cc8:	4718      	bx	r3
    model->bind(newPresenter);
 8004cca:	4623      	mov	r3, r4
 8004ccc:	e7e2      	b.n	8004c94 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004cce:	bf00      	nop
 8004cd0:	0802d75c 	.word	0x0802d75c
 8004cd4:	0802db8d 	.word	0x0802db8d
 8004cd8:	0802d8f8 	.word	0x0802d8f8
 8004cdc:	0802d93f 	.word	0x0802d93f
 8004ce0:	0802d9e2 	.word	0x0802d9e2
 8004ce4:	2001387c 	.word	0x2001387c
 8004ce8:	20013878 	.word	0x20013878

08004cec <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004cec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004cf0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004cf4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004cf6:	68a0      	ldr	r0, [r4, #8]
 8004cf8:	6803      	ldr	r3, [r0, #0]
 8004cfa:	6a1b      	ldr	r3, [r3, #32]
 8004cfc:	4798      	blx	r3
 8004cfe:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004d02:	d205      	bcs.n	8004d10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004d04:	4b42      	ldr	r3, [pc, #264]	; (8004e10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004d06:	4a43      	ldr	r2, [pc, #268]	; (8004e14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d08:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d0a:	4843      	ldr	r0, [pc, #268]	; (8004e18 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004d0c:	f026 fea0 	bl	802ba50 <__assert_func>
 8004d10:	6860      	ldr	r0, [r4, #4]
 8004d12:	6803      	ldr	r3, [r0, #0]
 8004d14:	6a1b      	ldr	r3, [r3, #32]
 8004d16:	4798      	blx	r3
 8004d18:	280f      	cmp	r0, #15
 8004d1a:	d803      	bhi.n	8004d24 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004d1c:	4b3f      	ldr	r3, [pc, #252]	; (8004e1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004d1e:	4a3d      	ldr	r2, [pc, #244]	; (8004e14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d20:	21a4      	movs	r1, #164	; 0xa4
 8004d22:	e7f2      	b.n	8004d0a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d24:	68e0      	ldr	r0, [r4, #12]
 8004d26:	6803      	ldr	r3, [r0, #0]
 8004d28:	6a1b      	ldr	r3, [r3, #32]
 8004d2a:	4798      	blx	r3
 8004d2c:	2837      	cmp	r0, #55	; 0x37
 8004d2e:	d803      	bhi.n	8004d38 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004d30:	4b3b      	ldr	r3, [pc, #236]	; (8004e20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004d32:	4a38      	ldr	r2, [pc, #224]	; (8004e14 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004d34:	21a5      	movs	r1, #165	; 0xa5
 8004d36:	e7e8      	b.n	8004d0a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d38:	f011 ffc2 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d3c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e24 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004d40:	3004      	adds	r0, #4
 8004d42:	f012 f823 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d46:	f8d9 0000 	ldr.w	r0, [r9]
 8004d4a:	b110      	cbz	r0, 8004d52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004d4c:	6803      	ldr	r3, [r0, #0]
 8004d4e:	68db      	ldr	r3, [r3, #12]
 8004d50:	4798      	blx	r3
    if (*currentTrans)
 8004d52:	f8d9 0000 	ldr.w	r0, [r9]
 8004d56:	b110      	cbz	r0, 8004d5e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004d58:	6803      	ldr	r3, [r0, #0]
 8004d5a:	681b      	ldr	r3, [r3, #0]
 8004d5c:	4798      	blx	r3
    if (*currentScreen)
 8004d5e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004e28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004d62:	f8d8 0000 	ldr.w	r0, [r8]
 8004d66:	b110      	cbz	r0, 8004d6e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004d68:	6803      	ldr	r3, [r0, #0]
 8004d6a:	695b      	ldr	r3, [r3, #20]
 8004d6c:	4798      	blx	r3
    if (*currentPresenter)
 8004d6e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d72:	b110      	cbz	r0, 8004d7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004d74:	6803      	ldr	r3, [r0, #0]
 8004d76:	685b      	ldr	r3, [r3, #4]
 8004d78:	4798      	blx	r3
    if (*currentScreen)
 8004d7a:	f8d8 0000 	ldr.w	r0, [r8]
 8004d7e:	b110      	cbz	r0, 8004d86 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004d80:	6803      	ldr	r3, [r0, #0]
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	4798      	blx	r3
    if (*currentPresenter)
 8004d86:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d8a:	b110      	cbz	r0, 8004d92 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004d8c:	6803      	ldr	r3, [r0, #0]
 8004d8e:	689b      	ldr	r3, [r3, #8]
 8004d90:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004d92:	68e0      	ldr	r0, [r4, #12]
 8004d94:	2100      	movs	r1, #0
 8004d96:	f7ff fed7 	bl	8004b48 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004d9a:	2114      	movs	r1, #20
 8004d9c:	4605      	mov	r5, r0
 8004d9e:	f7ff fed7 	bl	8004b50 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004da2:	68a0      	ldr	r0, [r4, #8]
 8004da4:	6803      	ldr	r3, [r0, #0]
 8004da6:	2100      	movs	r1, #0
 8004da8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004daa:	4798      	blx	r3
 8004dac:	4606      	mov	r6, r0
 8004dae:	f004 f81d 	bl	8008dec <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004db2:	6860      	ldr	r0, [r4, #4]
 8004db4:	6803      	ldr	r3, [r0, #0]
 8004db6:	2100      	movs	r1, #0
 8004db8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dba:	4798      	blx	r3
 8004dbc:	4631      	mov	r1, r6
 8004dbe:	4604      	mov	r4, r0
 8004dc0:	f003 ffee 	bl	8008da0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004dc4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004dc8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004dcc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004dd0:	b1dc      	cbz	r4, 8004e0a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004dd2:	1d23      	adds	r3, r4, #4
 8004dd4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004dd8:	6833      	ldr	r3, [r6, #0]
 8004dda:	f8c4 a008 	str.w	sl, [r4, #8]
 8004dde:	4630      	mov	r0, r6
 8004de0:	68db      	ldr	r3, [r3, #12]
 8004de2:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004de4:	4798      	blx	r3
    newPresenter->activate();
 8004de6:	6823      	ldr	r3, [r4, #0]
 8004de8:	4620      	mov	r0, r4
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004dee:	4629      	mov	r1, r5
 8004df0:	4630      	mov	r0, r6
 8004df2:	f013 fd91 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004df6:	682b      	ldr	r3, [r5, #0]
 8004df8:	4628      	mov	r0, r5
 8004dfa:	691b      	ldr	r3, [r3, #16]
 8004dfc:	4798      	blx	r3
    newTransition->invalidate();
 8004dfe:	682b      	ldr	r3, [r5, #0]
 8004e00:	4628      	mov	r0, r5
 8004e02:	695b      	ldr	r3, [r3, #20]
}
 8004e04:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e08:	4718      	bx	r3
    model->bind(newPresenter);
 8004e0a:	4623      	mov	r3, r4
 8004e0c:	e7e2      	b.n	8004dd4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004e0e:	bf00      	nop
 8004e10:	0802d75c 	.word	0x0802d75c
 8004e14:	0802dcbd 	.word	0x0802dcbd
 8004e18:	0802d8f8 	.word	0x0802d8f8
 8004e1c:	0802d93f 	.word	0x0802d93f
 8004e20:	0802d9e2 	.word	0x0802d9e2
 8004e24:	2001387c 	.word	0x2001387c
 8004e28:	20013878 	.word	0x20013878

08004e2c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004e2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e30:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e34:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e36:	68a0      	ldr	r0, [r4, #8]
 8004e38:	6803      	ldr	r3, [r0, #0]
 8004e3a:	6a1b      	ldr	r3, [r3, #32]
 8004e3c:	4798      	blx	r3
 8004e3e:	f241 137b 	movw	r3, #4475	; 0x117b
 8004e42:	4298      	cmp	r0, r3
 8004e44:	d805      	bhi.n	8004e52 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004e46:	4b42      	ldr	r3, [pc, #264]	; (8004f50 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004e48:	4a42      	ldr	r2, [pc, #264]	; (8004f54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e4a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004e4c:	4842      	ldr	r0, [pc, #264]	; (8004f58 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004e4e:	f026 fdff 	bl	802ba50 <__assert_func>
 8004e52:	6860      	ldr	r0, [r4, #4]
 8004e54:	6803      	ldr	r3, [r0, #0]
 8004e56:	6a1b      	ldr	r3, [r3, #32]
 8004e58:	4798      	blx	r3
 8004e5a:	280f      	cmp	r0, #15
 8004e5c:	d803      	bhi.n	8004e66 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004e5e:	4b3f      	ldr	r3, [pc, #252]	; (8004f5c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004e60:	4a3c      	ldr	r2, [pc, #240]	; (8004f54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e62:	21a4      	movs	r1, #164	; 0xa4
 8004e64:	e7f2      	b.n	8004e4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004e66:	68e0      	ldr	r0, [r4, #12]
 8004e68:	6803      	ldr	r3, [r0, #0]
 8004e6a:	6a1b      	ldr	r3, [r3, #32]
 8004e6c:	4798      	blx	r3
 8004e6e:	2837      	cmp	r0, #55	; 0x37
 8004e70:	d803      	bhi.n	8004e7a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004e72:	4b3b      	ldr	r3, [pc, #236]	; (8004f60 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004e74:	4a37      	ldr	r2, [pc, #220]	; (8004f54 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004e76:	21a5      	movs	r1, #165	; 0xa5
 8004e78:	e7e8      	b.n	8004e4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004e7a:	f011 ff21 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004e7e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004f64 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004e82:	3004      	adds	r0, #4
 8004e84:	f011 ff82 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004e88:	f8d9 0000 	ldr.w	r0, [r9]
 8004e8c:	b110      	cbz	r0, 8004e94 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004e8e:	6803      	ldr	r3, [r0, #0]
 8004e90:	68db      	ldr	r3, [r3, #12]
 8004e92:	4798      	blx	r3
    if (*currentTrans)
 8004e94:	f8d9 0000 	ldr.w	r0, [r9]
 8004e98:	b110      	cbz	r0, 8004ea0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004e9a:	6803      	ldr	r3, [r0, #0]
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	4798      	blx	r3
    if (*currentScreen)
 8004ea0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004f68 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004ea4:	f8d8 0000 	ldr.w	r0, [r8]
 8004ea8:	b110      	cbz	r0, 8004eb0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004eaa:	6803      	ldr	r3, [r0, #0]
 8004eac:	695b      	ldr	r3, [r3, #20]
 8004eae:	4798      	blx	r3
    if (*currentPresenter)
 8004eb0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004eb4:	b110      	cbz	r0, 8004ebc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004eb6:	6803      	ldr	r3, [r0, #0]
 8004eb8:	685b      	ldr	r3, [r3, #4]
 8004eba:	4798      	blx	r3
    if (*currentScreen)
 8004ebc:	f8d8 0000 	ldr.w	r0, [r8]
 8004ec0:	b110      	cbz	r0, 8004ec8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004ec2:	6803      	ldr	r3, [r0, #0]
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	4798      	blx	r3
    if (*currentPresenter)
 8004ec8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ecc:	b110      	cbz	r0, 8004ed4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004ece:	6803      	ldr	r3, [r0, #0]
 8004ed0:	689b      	ldr	r3, [r3, #8]
 8004ed2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ed4:	68e0      	ldr	r0, [r4, #12]
 8004ed6:	2100      	movs	r1, #0
 8004ed8:	f7ff fe36 	bl	8004b48 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004edc:	2114      	movs	r1, #20
 8004ede:	4605      	mov	r5, r0
 8004ee0:	f7ff fe36 	bl	8004b50 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004ee4:	68a0      	ldr	r0, [r4, #8]
 8004ee6:	6803      	ldr	r3, [r0, #0]
 8004ee8:	2100      	movs	r1, #0
 8004eea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004eec:	4798      	blx	r3
 8004eee:	4606      	mov	r6, r0
 8004ef0:	f003 ff1c 	bl	8008d2c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ef4:	6860      	ldr	r0, [r4, #4]
 8004ef6:	6803      	ldr	r3, [r0, #0]
 8004ef8:	2100      	movs	r1, #0
 8004efa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004efc:	4798      	blx	r3
 8004efe:	4631      	mov	r1, r6
 8004f00:	4604      	mov	r4, r0
 8004f02:	f003 feed 	bl	8008ce0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004f06:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f0a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f0e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f12:	b1dc      	cbz	r4, 8004f4c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004f14:	1d23      	adds	r3, r4, #4
 8004f16:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f1a:	6833      	ldr	r3, [r6, #0]
 8004f1c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f20:	4630      	mov	r0, r6
 8004f22:	68db      	ldr	r3, [r3, #12]
 8004f24:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f26:	4798      	blx	r3
    newPresenter->activate();
 8004f28:	6823      	ldr	r3, [r4, #0]
 8004f2a:	4620      	mov	r0, r4
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f30:	4629      	mov	r1, r5
 8004f32:	4630      	mov	r0, r6
 8004f34:	f013 fcf0 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f38:	682b      	ldr	r3, [r5, #0]
 8004f3a:	4628      	mov	r0, r5
 8004f3c:	691b      	ldr	r3, [r3, #16]
 8004f3e:	4798      	blx	r3
    newTransition->invalidate();
 8004f40:	682b      	ldr	r3, [r5, #0]
 8004f42:	4628      	mov	r0, r5
 8004f44:	695b      	ldr	r3, [r3, #20]
}
 8004f46:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004f4a:	4718      	bx	r3
    model->bind(newPresenter);
 8004f4c:	4623      	mov	r3, r4
 8004f4e:	e7e2      	b.n	8004f16 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004f50:	0802d75c 	.word	0x0802d75c
 8004f54:	0802dddb 	.word	0x0802dddb
 8004f58:	0802d8f8 	.word	0x0802d8f8
 8004f5c:	0802d93f 	.word	0x0802d93f
 8004f60:	0802d9e2 	.word	0x0802d9e2
 8004f64:	2001387c 	.word	0x2001387c
 8004f68:	20013878 	.word	0x20013878

08004f6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004f6c:	6803      	ldr	r3, [r0, #0]
 8004f6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f70:	4718      	bx	r3
	...

08004f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004f74:	4b12      	ldr	r3, [pc, #72]	; (8004fc0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004f76:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004f78:	6003      	str	r3, [r0, #0]
 8004f7a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004f7e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004f80:	4b10      	ldr	r3, [pc, #64]	; (8004fc4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004f82:	7241      	strb	r1, [r0, #9]
 8004f84:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004f86:	4910      	ldr	r1, [pc, #64]	; (8004fc8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004f88:	4b10      	ldr	r3, [pc, #64]	; (8004fcc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004f8a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004f8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004f92:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004f94:	2200      	movs	r2, #0
 8004f96:	6042      	str	r2, [r0, #4]
 8004f98:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004f9a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004f9c:	81c2      	strh	r2, [r0, #14]
          solid()
 8004f9e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004fa2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004fa6:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004faa:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004fae:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004fb0:	9100      	str	r1, [sp, #0]
 8004fb2:	3010      	adds	r0, #16
 8004fb4:	4611      	mov	r1, r2
 8004fb6:	f7fd fd32 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004fba:	4620      	mov	r0, r4
 8004fbc:	b002      	add	sp, #8
 8004fbe:	bd10      	pop	{r4, pc}
 8004fc0:	0802eac0 	.word	0x0802eac0
 8004fc4:	0802e9c8 	.word	0x0802e9c8
 8004fc8:	2001382a 	.word	0x2001382a
 8004fcc:	20013828 	.word	0x20013828

08004fd0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004fd4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004fd8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004fda:	68a0      	ldr	r0, [r4, #8]
 8004fdc:	6803      	ldr	r3, [r0, #0]
 8004fde:	6a1b      	ldr	r3, [r3, #32]
 8004fe0:	4798      	blx	r3
 8004fe2:	f241 03af 	movw	r3, #4271	; 0x10af
 8004fe6:	4298      	cmp	r0, r3
 8004fe8:	d805      	bhi.n	8004ff6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004fea:	4b42      	ldr	r3, [pc, #264]	; (80050f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004fec:	4a42      	ldr	r2, [pc, #264]	; (80050f8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004fee:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ff0:	4842      	ldr	r0, [pc, #264]	; (80050fc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004ff2:	f026 fd2d 	bl	802ba50 <__assert_func>
 8004ff6:	6860      	ldr	r0, [r4, #4]
 8004ff8:	6803      	ldr	r3, [r0, #0]
 8004ffa:	6a1b      	ldr	r3, [r3, #32]
 8004ffc:	4798      	blx	r3
 8004ffe:	280f      	cmp	r0, #15
 8005000:	d803      	bhi.n	800500a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8005002:	4b3f      	ldr	r3, [pc, #252]	; (8005100 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8005004:	4a3c      	ldr	r2, [pc, #240]	; (80050f8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8005006:	21a4      	movs	r1, #164	; 0xa4
 8005008:	e7f2      	b.n	8004ff0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800500a:	68e0      	ldr	r0, [r4, #12]
 800500c:	6803      	ldr	r3, [r0, #0]
 800500e:	6a1b      	ldr	r3, [r3, #32]
 8005010:	4798      	blx	r3
 8005012:	2837      	cmp	r0, #55	; 0x37
 8005014:	d803      	bhi.n	800501e <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8005016:	4b3b      	ldr	r3, [pc, #236]	; (8005104 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8005018:	4a37      	ldr	r2, [pc, #220]	; (80050f8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800501a:	21a5      	movs	r1, #165	; 0xa5
 800501c:	e7e8      	b.n	8004ff0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800501e:	f011 fe4f 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005022:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005108 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8005026:	3004      	adds	r0, #4
 8005028:	f011 feb0 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800502c:	f8d9 0000 	ldr.w	r0, [r9]
 8005030:	b110      	cbz	r0, 8005038 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005032:	6803      	ldr	r3, [r0, #0]
 8005034:	68db      	ldr	r3, [r3, #12]
 8005036:	4798      	blx	r3
    if (*currentTrans)
 8005038:	f8d9 0000 	ldr.w	r0, [r9]
 800503c:	b110      	cbz	r0, 8005044 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800503e:	6803      	ldr	r3, [r0, #0]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	4798      	blx	r3
    if (*currentScreen)
 8005044:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800510c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8005048:	f8d8 0000 	ldr.w	r0, [r8]
 800504c:	b110      	cbz	r0, 8005054 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800504e:	6803      	ldr	r3, [r0, #0]
 8005050:	695b      	ldr	r3, [r3, #20]
 8005052:	4798      	blx	r3
    if (*currentPresenter)
 8005054:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005058:	b110      	cbz	r0, 8005060 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800505a:	6803      	ldr	r3, [r0, #0]
 800505c:	685b      	ldr	r3, [r3, #4]
 800505e:	4798      	blx	r3
    if (*currentScreen)
 8005060:	f8d8 0000 	ldr.w	r0, [r8]
 8005064:	b110      	cbz	r0, 800506c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005066:	6803      	ldr	r3, [r0, #0]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	4798      	blx	r3
    if (*currentPresenter)
 800506c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005070:	b110      	cbz	r0, 8005078 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005072:	6803      	ldr	r3, [r0, #0]
 8005074:	689b      	ldr	r3, [r3, #8]
 8005076:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005078:	68e0      	ldr	r0, [r4, #12]
 800507a:	2100      	movs	r1, #0
 800507c:	f7ff ff76 	bl	8004f6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005080:	2114      	movs	r1, #20
 8005082:	4605      	mov	r5, r0
 8005084:	f7ff ff76 	bl	8004f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005088:	68a0      	ldr	r0, [r4, #8]
 800508a:	6803      	ldr	r3, [r0, #0]
 800508c:	2100      	movs	r1, #0
 800508e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005090:	4798      	blx	r3
 8005092:	4606      	mov	r6, r0
 8005094:	f004 f94e 	bl	8009334 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005098:	6860      	ldr	r0, [r4, #4]
 800509a:	6803      	ldr	r3, [r0, #0]
 800509c:	2100      	movs	r1, #0
 800509e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050a0:	4798      	blx	r3
 80050a2:	4631      	mov	r1, r6
 80050a4:	4604      	mov	r4, r0
 80050a6:	f004 f91f 	bl	80092e8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 80050aa:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050ae:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050b2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050b6:	b1dc      	cbz	r4, 80050f0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 80050b8:	1d23      	adds	r3, r4, #4
 80050ba:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050be:	6833      	ldr	r3, [r6, #0]
 80050c0:	f8c4 a008 	str.w	sl, [r4, #8]
 80050c4:	4630      	mov	r0, r6
 80050c6:	68db      	ldr	r3, [r3, #12]
 80050c8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050ca:	4798      	blx	r3
    newPresenter->activate();
 80050cc:	6823      	ldr	r3, [r4, #0]
 80050ce:	4620      	mov	r0, r4
 80050d0:	681b      	ldr	r3, [r3, #0]
 80050d2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050d4:	4629      	mov	r1, r5
 80050d6:	4630      	mov	r0, r6
 80050d8:	f013 fc1e 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80050dc:	682b      	ldr	r3, [r5, #0]
 80050de:	4628      	mov	r0, r5
 80050e0:	691b      	ldr	r3, [r3, #16]
 80050e2:	4798      	blx	r3
    newTransition->invalidate();
 80050e4:	682b      	ldr	r3, [r5, #0]
 80050e6:	4628      	mov	r0, r5
 80050e8:	695b      	ldr	r3, [r3, #20]
}
 80050ea:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050ee:	4718      	bx	r3
    model->bind(newPresenter);
 80050f0:	4623      	mov	r3, r4
 80050f2:	e7e2      	b.n	80050ba <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80050f4:	0802d75c 	.word	0x0802d75c
 80050f8:	0802def5 	.word	0x0802def5
 80050fc:	0802d8f8 	.word	0x0802d8f8
 8005100:	0802d93f 	.word	0x0802d93f
 8005104:	0802d9e2 	.word	0x0802d9e2
 8005108:	2001387c 	.word	0x2001387c
 800510c:	20013878 	.word	0x20013878

08005110 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8005110:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005114:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005118:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800511a:	68a0      	ldr	r0, [r4, #8]
 800511c:	6803      	ldr	r3, [r0, #0]
 800511e:	6a1b      	ldr	r3, [r3, #32]
 8005120:	4798      	blx	r3
 8005122:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005126:	4298      	cmp	r0, r3
 8005128:	d805      	bhi.n	8005136 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 800512a:	4b42      	ldr	r3, [pc, #264]	; (8005234 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 800512c:	4a42      	ldr	r2, [pc, #264]	; (8005238 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800512e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005130:	4842      	ldr	r0, [pc, #264]	; (800523c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8005132:	f026 fc8d 	bl	802ba50 <__assert_func>
 8005136:	6860      	ldr	r0, [r4, #4]
 8005138:	6803      	ldr	r3, [r0, #0]
 800513a:	6a1b      	ldr	r3, [r3, #32]
 800513c:	4798      	blx	r3
 800513e:	280f      	cmp	r0, #15
 8005140:	d803      	bhi.n	800514a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8005142:	4b3f      	ldr	r3, [pc, #252]	; (8005240 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005144:	4a3c      	ldr	r2, [pc, #240]	; (8005238 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005146:	21a4      	movs	r1, #164	; 0xa4
 8005148:	e7f2      	b.n	8005130 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800514a:	68e0      	ldr	r0, [r4, #12]
 800514c:	6803      	ldr	r3, [r0, #0]
 800514e:	6a1b      	ldr	r3, [r3, #32]
 8005150:	4798      	blx	r3
 8005152:	2837      	cmp	r0, #55	; 0x37
 8005154:	d803      	bhi.n	800515e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005156:	4b3b      	ldr	r3, [pc, #236]	; (8005244 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005158:	4a37      	ldr	r2, [pc, #220]	; (8005238 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800515a:	21a5      	movs	r1, #165	; 0xa5
 800515c:	e7e8      	b.n	8005130 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800515e:	f011 fdaf 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005162:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005248 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8005166:	3004      	adds	r0, #4
 8005168:	f011 fe10 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800516c:	f8d9 0000 	ldr.w	r0, [r9]
 8005170:	b110      	cbz	r0, 8005178 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005172:	6803      	ldr	r3, [r0, #0]
 8005174:	68db      	ldr	r3, [r3, #12]
 8005176:	4798      	blx	r3
    if (*currentTrans)
 8005178:	f8d9 0000 	ldr.w	r0, [r9]
 800517c:	b110      	cbz	r0, 8005184 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800517e:	6803      	ldr	r3, [r0, #0]
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	4798      	blx	r3
    if (*currentScreen)
 8005184:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800524c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8005188:	f8d8 0000 	ldr.w	r0, [r8]
 800518c:	b110      	cbz	r0, 8005194 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800518e:	6803      	ldr	r3, [r0, #0]
 8005190:	695b      	ldr	r3, [r3, #20]
 8005192:	4798      	blx	r3
    if (*currentPresenter)
 8005194:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005198:	b110      	cbz	r0, 80051a0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800519a:	6803      	ldr	r3, [r0, #0]
 800519c:	685b      	ldr	r3, [r3, #4]
 800519e:	4798      	blx	r3
    if (*currentScreen)
 80051a0:	f8d8 0000 	ldr.w	r0, [r8]
 80051a4:	b110      	cbz	r0, 80051ac <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80051a6:	6803      	ldr	r3, [r0, #0]
 80051a8:	681b      	ldr	r3, [r3, #0]
 80051aa:	4798      	blx	r3
    if (*currentPresenter)
 80051ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051b0:	b110      	cbz	r0, 80051b8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80051b2:	6803      	ldr	r3, [r0, #0]
 80051b4:	689b      	ldr	r3, [r3, #8]
 80051b6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80051b8:	68e0      	ldr	r0, [r4, #12]
 80051ba:	2100      	movs	r1, #0
 80051bc:	f7ff fed6 	bl	8004f6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80051c0:	2114      	movs	r1, #20
 80051c2:	4605      	mov	r5, r0
 80051c4:	f7ff fed6 	bl	8004f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80051c8:	68a0      	ldr	r0, [r4, #8]
 80051ca:	6803      	ldr	r3, [r0, #0]
 80051cc:	2100      	movs	r1, #0
 80051ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051d0:	4798      	blx	r3
 80051d2:	4606      	mov	r6, r0
 80051d4:	f003 fc76 	bl	8008ac4 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80051d8:	6860      	ldr	r0, [r4, #4]
 80051da:	6803      	ldr	r3, [r0, #0]
 80051dc:	2100      	movs	r1, #0
 80051de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051e0:	4798      	blx	r3
 80051e2:	4631      	mov	r1, r6
 80051e4:	4604      	mov	r4, r0
 80051e6:	f003 fc47 	bl	8008a78 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80051ea:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80051ee:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80051f2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80051f6:	b1dc      	cbz	r4, 8005230 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80051f8:	1d23      	adds	r3, r4, #4
 80051fa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80051fe:	6833      	ldr	r3, [r6, #0]
 8005200:	f8c4 a008 	str.w	sl, [r4, #8]
 8005204:	4630      	mov	r0, r6
 8005206:	68db      	ldr	r3, [r3, #12]
 8005208:	63f4      	str	r4, [r6, #60]	; 0x3c
 800520a:	4798      	blx	r3
    newPresenter->activate();
 800520c:	6823      	ldr	r3, [r4, #0]
 800520e:	4620      	mov	r0, r4
 8005210:	681b      	ldr	r3, [r3, #0]
 8005212:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005214:	4629      	mov	r1, r5
 8005216:	4630      	mov	r0, r6
 8005218:	f013 fb7e 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800521c:	682b      	ldr	r3, [r5, #0]
 800521e:	4628      	mov	r0, r5
 8005220:	691b      	ldr	r3, [r3, #16]
 8005222:	4798      	blx	r3
    newTransition->invalidate();
 8005224:	682b      	ldr	r3, [r5, #0]
 8005226:	4628      	mov	r0, r5
 8005228:	695b      	ldr	r3, [r3, #20]
}
 800522a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800522e:	4718      	bx	r3
    model->bind(newPresenter);
 8005230:	4623      	mov	r3, r4
 8005232:	e7e2      	b.n	80051fa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005234:	0802d75c 	.word	0x0802d75c
 8005238:	0802e015 	.word	0x0802e015
 800523c:	0802d8f8 	.word	0x0802d8f8
 8005240:	0802d93f 	.word	0x0802d93f
 8005244:	0802d9e2 	.word	0x0802d9e2
 8005248:	2001387c 	.word	0x2001387c
 800524c:	20013878 	.word	0x20013878

08005250 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8005250:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005254:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005258:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800525a:	68a0      	ldr	r0, [r4, #8]
 800525c:	6803      	ldr	r3, [r0, #0]
 800525e:	6a1b      	ldr	r3, [r3, #32]
 8005260:	4798      	blx	r3
 8005262:	f241 035b 	movw	r3, #4187	; 0x105b
 8005266:	4298      	cmp	r0, r3
 8005268:	d805      	bhi.n	8005276 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800526a:	4b42      	ldr	r3, [pc, #264]	; (8005374 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 800526c:	4a42      	ldr	r2, [pc, #264]	; (8005378 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800526e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005270:	4842      	ldr	r0, [pc, #264]	; (800537c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 8005272:	f026 fbed 	bl	802ba50 <__assert_func>
 8005276:	6860      	ldr	r0, [r4, #4]
 8005278:	6803      	ldr	r3, [r0, #0]
 800527a:	6a1b      	ldr	r3, [r3, #32]
 800527c:	4798      	blx	r3
 800527e:	280f      	cmp	r0, #15
 8005280:	d803      	bhi.n	800528a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 8005282:	4b3f      	ldr	r3, [pc, #252]	; (8005380 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8005284:	4a3c      	ldr	r2, [pc, #240]	; (8005378 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8005286:	21a4      	movs	r1, #164	; 0xa4
 8005288:	e7f2      	b.n	8005270 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800528a:	68e0      	ldr	r0, [r4, #12]
 800528c:	6803      	ldr	r3, [r0, #0]
 800528e:	6a1b      	ldr	r3, [r3, #32]
 8005290:	4798      	blx	r3
 8005292:	2837      	cmp	r0, #55	; 0x37
 8005294:	d803      	bhi.n	800529e <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8005296:	4b3b      	ldr	r3, [pc, #236]	; (8005384 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8005298:	4a37      	ldr	r2, [pc, #220]	; (8005378 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800529a:	21a5      	movs	r1, #165	; 0xa5
 800529c:	e7e8      	b.n	8005270 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800529e:	f011 fd0f 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80052a2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005388 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80052a6:	3004      	adds	r0, #4
 80052a8:	f011 fd70 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80052ac:	f8d9 0000 	ldr.w	r0, [r9]
 80052b0:	b110      	cbz	r0, 80052b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80052b2:	6803      	ldr	r3, [r0, #0]
 80052b4:	68db      	ldr	r3, [r3, #12]
 80052b6:	4798      	blx	r3
    if (*currentTrans)
 80052b8:	f8d9 0000 	ldr.w	r0, [r9]
 80052bc:	b110      	cbz	r0, 80052c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80052be:	6803      	ldr	r3, [r0, #0]
 80052c0:	681b      	ldr	r3, [r3, #0]
 80052c2:	4798      	blx	r3
    if (*currentScreen)
 80052c4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800538c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80052c8:	f8d8 0000 	ldr.w	r0, [r8]
 80052cc:	b110      	cbz	r0, 80052d4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80052ce:	6803      	ldr	r3, [r0, #0]
 80052d0:	695b      	ldr	r3, [r3, #20]
 80052d2:	4798      	blx	r3
    if (*currentPresenter)
 80052d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052d8:	b110      	cbz	r0, 80052e0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80052da:	6803      	ldr	r3, [r0, #0]
 80052dc:	685b      	ldr	r3, [r3, #4]
 80052de:	4798      	blx	r3
    if (*currentScreen)
 80052e0:	f8d8 0000 	ldr.w	r0, [r8]
 80052e4:	b110      	cbz	r0, 80052ec <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80052e6:	6803      	ldr	r3, [r0, #0]
 80052e8:	681b      	ldr	r3, [r3, #0]
 80052ea:	4798      	blx	r3
    if (*currentPresenter)
 80052ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052f0:	b110      	cbz	r0, 80052f8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80052f2:	6803      	ldr	r3, [r0, #0]
 80052f4:	689b      	ldr	r3, [r3, #8]
 80052f6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80052f8:	68e0      	ldr	r0, [r4, #12]
 80052fa:	2100      	movs	r1, #0
 80052fc:	f7ff fe36 	bl	8004f6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005300:	2114      	movs	r1, #20
 8005302:	4605      	mov	r5, r0
 8005304:	f7ff fe36 	bl	8004f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005308:	68a0      	ldr	r0, [r4, #8]
 800530a:	6803      	ldr	r3, [r0, #0]
 800530c:	2100      	movs	r1, #0
 800530e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005310:	4798      	blx	r3
 8005312:	4606      	mov	r6, r0
 8005314:	f003 fe66 	bl	8008fe4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005318:	6860      	ldr	r0, [r4, #4]
 800531a:	6803      	ldr	r3, [r0, #0]
 800531c:	2100      	movs	r1, #0
 800531e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005320:	4798      	blx	r3
 8005322:	4631      	mov	r1, r6
 8005324:	4604      	mov	r4, r0
 8005326:	f003 fe37 	bl	8008f98 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800532a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800532e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005332:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005336:	b1dc      	cbz	r4, 8005370 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005338:	1d23      	adds	r3, r4, #4
 800533a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800533e:	6833      	ldr	r3, [r6, #0]
 8005340:	f8c4 a008 	str.w	sl, [r4, #8]
 8005344:	4630      	mov	r0, r6
 8005346:	68db      	ldr	r3, [r3, #12]
 8005348:	63f4      	str	r4, [r6, #60]	; 0x3c
 800534a:	4798      	blx	r3
    newPresenter->activate();
 800534c:	6823      	ldr	r3, [r4, #0]
 800534e:	4620      	mov	r0, r4
 8005350:	681b      	ldr	r3, [r3, #0]
 8005352:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005354:	4629      	mov	r1, r5
 8005356:	4630      	mov	r0, r6
 8005358:	f013 fade 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800535c:	682b      	ldr	r3, [r5, #0]
 800535e:	4628      	mov	r0, r5
 8005360:	691b      	ldr	r3, [r3, #16]
 8005362:	4798      	blx	r3
    newTransition->invalidate();
 8005364:	682b      	ldr	r3, [r5, #0]
 8005366:	4628      	mov	r0, r5
 8005368:	695b      	ldr	r3, [r3, #20]
}
 800536a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800536e:	4718      	bx	r3
    model->bind(newPresenter);
 8005370:	4623      	mov	r3, r4
 8005372:	e7e2      	b.n	800533a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8005374:	0802d75c 	.word	0x0802d75c
 8005378:	0802e13b 	.word	0x0802e13b
 800537c:	0802d8f8 	.word	0x0802d8f8
 8005380:	0802d93f 	.word	0x0802d93f
 8005384:	0802d9e2 	.word	0x0802d9e2
 8005388:	2001387c 	.word	0x2001387c
 800538c:	20013878 	.word	0x20013878

08005390 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 8005390:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005394:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005398:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800539a:	68a0      	ldr	r0, [r4, #8]
 800539c:	6803      	ldr	r3, [r0, #0]
 800539e:	6a1b      	ldr	r3, [r3, #32]
 80053a0:	4798      	blx	r3
 80053a2:	f241 035b 	movw	r3, #4187	; 0x105b
 80053a6:	4298      	cmp	r0, r3
 80053a8:	d805      	bhi.n	80053b6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80053aa:	4b42      	ldr	r3, [pc, #264]	; (80054b4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80053ac:	4a42      	ldr	r2, [pc, #264]	; (80054b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053ae:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80053b0:	4842      	ldr	r0, [pc, #264]	; (80054bc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80053b2:	f026 fb4d 	bl	802ba50 <__assert_func>
 80053b6:	6860      	ldr	r0, [r4, #4]
 80053b8:	6803      	ldr	r3, [r0, #0]
 80053ba:	6a1b      	ldr	r3, [r3, #32]
 80053bc:	4798      	blx	r3
 80053be:	280f      	cmp	r0, #15
 80053c0:	d803      	bhi.n	80053ca <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80053c2:	4b3f      	ldr	r3, [pc, #252]	; (80054c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80053c4:	4a3c      	ldr	r2, [pc, #240]	; (80054b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053c6:	21a4      	movs	r1, #164	; 0xa4
 80053c8:	e7f2      	b.n	80053b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80053ca:	68e0      	ldr	r0, [r4, #12]
 80053cc:	6803      	ldr	r3, [r0, #0]
 80053ce:	6a1b      	ldr	r3, [r3, #32]
 80053d0:	4798      	blx	r3
 80053d2:	2837      	cmp	r0, #55	; 0x37
 80053d4:	d803      	bhi.n	80053de <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 80053d6:	4b3b      	ldr	r3, [pc, #236]	; (80054c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 80053d8:	4a37      	ldr	r2, [pc, #220]	; (80054b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80053da:	21a5      	movs	r1, #165	; 0xa5
 80053dc:	e7e8      	b.n	80053b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80053de:	f011 fc6f 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80053e2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80054c8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 80053e6:	3004      	adds	r0, #4
 80053e8:	f011 fcd0 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80053ec:	f8d9 0000 	ldr.w	r0, [r9]
 80053f0:	b110      	cbz	r0, 80053f8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80053f2:	6803      	ldr	r3, [r0, #0]
 80053f4:	68db      	ldr	r3, [r3, #12]
 80053f6:	4798      	blx	r3
    if (*currentTrans)
 80053f8:	f8d9 0000 	ldr.w	r0, [r9]
 80053fc:	b110      	cbz	r0, 8005404 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80053fe:	6803      	ldr	r3, [r0, #0]
 8005400:	681b      	ldr	r3, [r3, #0]
 8005402:	4798      	blx	r3
    if (*currentScreen)
 8005404:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80054cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005408:	f8d8 0000 	ldr.w	r0, [r8]
 800540c:	b110      	cbz	r0, 8005414 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800540e:	6803      	ldr	r3, [r0, #0]
 8005410:	695b      	ldr	r3, [r3, #20]
 8005412:	4798      	blx	r3
    if (*currentPresenter)
 8005414:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005418:	b110      	cbz	r0, 8005420 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800541a:	6803      	ldr	r3, [r0, #0]
 800541c:	685b      	ldr	r3, [r3, #4]
 800541e:	4798      	blx	r3
    if (*currentScreen)
 8005420:	f8d8 0000 	ldr.w	r0, [r8]
 8005424:	b110      	cbz	r0, 800542c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005426:	6803      	ldr	r3, [r0, #0]
 8005428:	681b      	ldr	r3, [r3, #0]
 800542a:	4798      	blx	r3
    if (*currentPresenter)
 800542c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005430:	b110      	cbz	r0, 8005438 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005432:	6803      	ldr	r3, [r0, #0]
 8005434:	689b      	ldr	r3, [r3, #8]
 8005436:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005438:	68e0      	ldr	r0, [r4, #12]
 800543a:	2100      	movs	r1, #0
 800543c:	f7ff fd96 	bl	8004f6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005440:	2114      	movs	r1, #20
 8005442:	4605      	mov	r5, r0
 8005444:	f7ff fd96 	bl	8004f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005448:	68a0      	ldr	r0, [r4, #8]
 800544a:	6803      	ldr	r3, [r0, #0]
 800544c:	2100      	movs	r1, #0
 800544e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005450:	4798      	blx	r3
 8005452:	4606      	mov	r6, r0
 8005454:	f003 fd84 	bl	8008f60 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005458:	6860      	ldr	r0, [r4, #4]
 800545a:	6803      	ldr	r3, [r0, #0]
 800545c:	2100      	movs	r1, #0
 800545e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005460:	4798      	blx	r3
 8005462:	4631      	mov	r1, r6
 8005464:	4604      	mov	r4, r0
 8005466:	f003 fd55 	bl	8008f14 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 800546a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800546e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005472:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005476:	b1dc      	cbz	r4, 80054b0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8005478:	1d23      	adds	r3, r4, #4
 800547a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800547e:	6833      	ldr	r3, [r6, #0]
 8005480:	f8c4 a008 	str.w	sl, [r4, #8]
 8005484:	4630      	mov	r0, r6
 8005486:	68db      	ldr	r3, [r3, #12]
 8005488:	63f4      	str	r4, [r6, #60]	; 0x3c
 800548a:	4798      	blx	r3
    newPresenter->activate();
 800548c:	6823      	ldr	r3, [r4, #0]
 800548e:	4620      	mov	r0, r4
 8005490:	681b      	ldr	r3, [r3, #0]
 8005492:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005494:	4629      	mov	r1, r5
 8005496:	4630      	mov	r0, r6
 8005498:	f013 fa3e 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800549c:	682b      	ldr	r3, [r5, #0]
 800549e:	4628      	mov	r0, r5
 80054a0:	691b      	ldr	r3, [r3, #16]
 80054a2:	4798      	blx	r3
    newTransition->invalidate();
 80054a4:	682b      	ldr	r3, [r5, #0]
 80054a6:	4628      	mov	r0, r5
 80054a8:	695b      	ldr	r3, [r3, #20]
}
 80054aa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054ae:	4718      	bx	r3
    model->bind(newPresenter);
 80054b0:	4623      	mov	r3, r4
 80054b2:	e7e2      	b.n	800547a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80054b4:	0802d75c 	.word	0x0802d75c
 80054b8:	0802e27f 	.word	0x0802e27f
 80054bc:	0802d8f8 	.word	0x0802d8f8
 80054c0:	0802d93f 	.word	0x0802d93f
 80054c4:	0802d9e2 	.word	0x0802d9e2
 80054c8:	2001387c 	.word	0x2001387c
 80054cc:	20013878 	.word	0x20013878

080054d0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 80054d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80054d4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80054d8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80054da:	68a0      	ldr	r0, [r4, #8]
 80054dc:	6803      	ldr	r3, [r0, #0]
 80054de:	6a1b      	ldr	r3, [r3, #32]
 80054e0:	4798      	blx	r3
 80054e2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80054e6:	d205      	bcs.n	80054f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 80054e8:	4b42      	ldr	r3, [pc, #264]	; (80055f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 80054ea:	4a43      	ldr	r2, [pc, #268]	; (80055f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80054ec:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80054ee:	4843      	ldr	r0, [pc, #268]	; (80055fc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 80054f0:	f026 faae 	bl	802ba50 <__assert_func>
 80054f4:	6860      	ldr	r0, [r4, #4]
 80054f6:	6803      	ldr	r3, [r0, #0]
 80054f8:	6a1b      	ldr	r3, [r3, #32]
 80054fa:	4798      	blx	r3
 80054fc:	280f      	cmp	r0, #15
 80054fe:	d803      	bhi.n	8005508 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8005500:	4b3f      	ldr	r3, [pc, #252]	; (8005600 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8005502:	4a3d      	ldr	r2, [pc, #244]	; (80055f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005504:	21a4      	movs	r1, #164	; 0xa4
 8005506:	e7f2      	b.n	80054ee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005508:	68e0      	ldr	r0, [r4, #12]
 800550a:	6803      	ldr	r3, [r0, #0]
 800550c:	6a1b      	ldr	r3, [r3, #32]
 800550e:	4798      	blx	r3
 8005510:	2837      	cmp	r0, #55	; 0x37
 8005512:	d803      	bhi.n	800551c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005514:	4b3b      	ldr	r3, [pc, #236]	; (8005604 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8005516:	4a38      	ldr	r2, [pc, #224]	; (80055f8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005518:	21a5      	movs	r1, #165	; 0xa5
 800551a:	e7e8      	b.n	80054ee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800551c:	f011 fbd0 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005520:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005608 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005524:	3004      	adds	r0, #4
 8005526:	f011 fc31 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800552a:	f8d9 0000 	ldr.w	r0, [r9]
 800552e:	b110      	cbz	r0, 8005536 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005530:	6803      	ldr	r3, [r0, #0]
 8005532:	68db      	ldr	r3, [r3, #12]
 8005534:	4798      	blx	r3
    if (*currentTrans)
 8005536:	f8d9 0000 	ldr.w	r0, [r9]
 800553a:	b110      	cbz	r0, 8005542 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800553c:	6803      	ldr	r3, [r0, #0]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	4798      	blx	r3
    if (*currentScreen)
 8005542:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800560c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8005546:	f8d8 0000 	ldr.w	r0, [r8]
 800554a:	b110      	cbz	r0, 8005552 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800554c:	6803      	ldr	r3, [r0, #0]
 800554e:	695b      	ldr	r3, [r3, #20]
 8005550:	4798      	blx	r3
    if (*currentPresenter)
 8005552:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005556:	b110      	cbz	r0, 800555e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005558:	6803      	ldr	r3, [r0, #0]
 800555a:	685b      	ldr	r3, [r3, #4]
 800555c:	4798      	blx	r3
    if (*currentScreen)
 800555e:	f8d8 0000 	ldr.w	r0, [r8]
 8005562:	b110      	cbz	r0, 800556a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005564:	6803      	ldr	r3, [r0, #0]
 8005566:	681b      	ldr	r3, [r3, #0]
 8005568:	4798      	blx	r3
    if (*currentPresenter)
 800556a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800556e:	b110      	cbz	r0, 8005576 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005570:	6803      	ldr	r3, [r0, #0]
 8005572:	689b      	ldr	r3, [r3, #8]
 8005574:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005576:	68e0      	ldr	r0, [r4, #12]
 8005578:	2100      	movs	r1, #0
 800557a:	f7ff fcf7 	bl	8004f6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800557e:	2114      	movs	r1, #20
 8005580:	4605      	mov	r5, r0
 8005582:	f7ff fcf7 	bl	8004f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005586:	68a0      	ldr	r0, [r4, #8]
 8005588:	6803      	ldr	r3, [r0, #0]
 800558a:	2100      	movs	r1, #0
 800558c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800558e:	4798      	blx	r3
 8005590:	4606      	mov	r6, r0
 8005592:	f003 fc8b 	bl	8008eac <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005596:	6860      	ldr	r0, [r4, #4]
 8005598:	6803      	ldr	r3, [r0, #0]
 800559a:	2100      	movs	r1, #0
 800559c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800559e:	4798      	blx	r3
 80055a0:	4631      	mov	r1, r6
 80055a2:	4604      	mov	r4, r0
 80055a4:	f003 fc5c 	bl	8008e60 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80055a8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80055ac:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80055b0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80055b4:	b1dc      	cbz	r4, 80055ee <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80055b6:	1d23      	adds	r3, r4, #4
 80055b8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80055bc:	6833      	ldr	r3, [r6, #0]
 80055be:	f8c4 a008 	str.w	sl, [r4, #8]
 80055c2:	4630      	mov	r0, r6
 80055c4:	68db      	ldr	r3, [r3, #12]
 80055c6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80055c8:	4798      	blx	r3
    newPresenter->activate();
 80055ca:	6823      	ldr	r3, [r4, #0]
 80055cc:	4620      	mov	r0, r4
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80055d2:	4629      	mov	r1, r5
 80055d4:	4630      	mov	r0, r6
 80055d6:	f013 f99f 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80055da:	682b      	ldr	r3, [r5, #0]
 80055dc:	4628      	mov	r0, r5
 80055de:	691b      	ldr	r3, [r3, #16]
 80055e0:	4798      	blx	r3
    newTransition->invalidate();
 80055e2:	682b      	ldr	r3, [r5, #0]
 80055e4:	4628      	mov	r0, r5
 80055e6:	695b      	ldr	r3, [r3, #20]
}
 80055e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80055ec:	4718      	bx	r3
    model->bind(newPresenter);
 80055ee:	4623      	mov	r3, r4
 80055f0:	e7e2      	b.n	80055b8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 80055f2:	bf00      	nop
 80055f4:	0802d75c 	.word	0x0802d75c
 80055f8:	0802e3bf 	.word	0x0802e3bf
 80055fc:	0802d8f8 	.word	0x0802d8f8
 8005600:	0802d93f 	.word	0x0802d93f
 8005604:	0802d9e2 	.word	0x0802d9e2
 8005608:	2001387c 	.word	0x2001387c
 800560c:	20013878 	.word	0x20013878

08005610 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8005610:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005614:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005618:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800561a:	68a0      	ldr	r0, [r4, #8]
 800561c:	6803      	ldr	r3, [r0, #0]
 800561e:	6a1b      	ldr	r3, [r3, #32]
 8005620:	4798      	blx	r3
 8005622:	f241 035b 	movw	r3, #4187	; 0x105b
 8005626:	4298      	cmp	r0, r3
 8005628:	d805      	bhi.n	8005636 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 800562a:	4b42      	ldr	r3, [pc, #264]	; (8005734 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 800562c:	4a42      	ldr	r2, [pc, #264]	; (8005738 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800562e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005630:	4842      	ldr	r0, [pc, #264]	; (800573c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8005632:	f026 fa0d 	bl	802ba50 <__assert_func>
 8005636:	6860      	ldr	r0, [r4, #4]
 8005638:	6803      	ldr	r3, [r0, #0]
 800563a:	6a1b      	ldr	r3, [r3, #32]
 800563c:	4798      	blx	r3
 800563e:	280f      	cmp	r0, #15
 8005640:	d803      	bhi.n	800564a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8005642:	4b3f      	ldr	r3, [pc, #252]	; (8005740 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005644:	4a3c      	ldr	r2, [pc, #240]	; (8005738 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005646:	21a4      	movs	r1, #164	; 0xa4
 8005648:	e7f2      	b.n	8005630 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800564a:	68e0      	ldr	r0, [r4, #12]
 800564c:	6803      	ldr	r3, [r0, #0]
 800564e:	6a1b      	ldr	r3, [r3, #32]
 8005650:	4798      	blx	r3
 8005652:	2837      	cmp	r0, #55	; 0x37
 8005654:	d803      	bhi.n	800565e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8005656:	4b3b      	ldr	r3, [pc, #236]	; (8005744 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005658:	4a37      	ldr	r2, [pc, #220]	; (8005738 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800565a:	21a5      	movs	r1, #165	; 0xa5
 800565c:	e7e8      	b.n	8005630 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800565e:	f011 fb2f 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005662:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005748 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8005666:	3004      	adds	r0, #4
 8005668:	f011 fb90 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800566c:	f8d9 0000 	ldr.w	r0, [r9]
 8005670:	b110      	cbz	r0, 8005678 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005672:	6803      	ldr	r3, [r0, #0]
 8005674:	68db      	ldr	r3, [r3, #12]
 8005676:	4798      	blx	r3
    if (*currentTrans)
 8005678:	f8d9 0000 	ldr.w	r0, [r9]
 800567c:	b110      	cbz	r0, 8005684 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800567e:	6803      	ldr	r3, [r0, #0]
 8005680:	681b      	ldr	r3, [r3, #0]
 8005682:	4798      	blx	r3
    if (*currentScreen)
 8005684:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800574c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8005688:	f8d8 0000 	ldr.w	r0, [r8]
 800568c:	b110      	cbz	r0, 8005694 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800568e:	6803      	ldr	r3, [r0, #0]
 8005690:	695b      	ldr	r3, [r3, #20]
 8005692:	4798      	blx	r3
    if (*currentPresenter)
 8005694:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005698:	b110      	cbz	r0, 80056a0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800569a:	6803      	ldr	r3, [r0, #0]
 800569c:	685b      	ldr	r3, [r3, #4]
 800569e:	4798      	blx	r3
    if (*currentScreen)
 80056a0:	f8d8 0000 	ldr.w	r0, [r8]
 80056a4:	b110      	cbz	r0, 80056ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80056a6:	6803      	ldr	r3, [r0, #0]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	4798      	blx	r3
    if (*currentPresenter)
 80056ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80056b0:	b110      	cbz	r0, 80056b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80056b2:	6803      	ldr	r3, [r0, #0]
 80056b4:	689b      	ldr	r3, [r3, #8]
 80056b6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80056b8:	68e0      	ldr	r0, [r4, #12]
 80056ba:	2100      	movs	r1, #0
 80056bc:	f7ff fc56 	bl	8004f6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80056c0:	2114      	movs	r1, #20
 80056c2:	4605      	mov	r5, r0
 80056c4:	f7ff fc56 	bl	8004f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80056c8:	68a0      	ldr	r0, [r4, #8]
 80056ca:	6803      	ldr	r3, [r0, #0]
 80056cc:	2100      	movs	r1, #0
 80056ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056d0:	4798      	blx	r3
 80056d2:	4606      	mov	r6, r0
 80056d4:	f003 fdc8 	bl	8009268 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80056d8:	6860      	ldr	r0, [r4, #4]
 80056da:	6803      	ldr	r3, [r0, #0]
 80056dc:	2100      	movs	r1, #0
 80056de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056e0:	4798      	blx	r3
 80056e2:	4631      	mov	r1, r6
 80056e4:	4604      	mov	r4, r0
 80056e6:	f003 fd99 	bl	800921c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 80056ea:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80056ee:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80056f2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80056f6:	b1dc      	cbz	r4, 8005730 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 80056f8:	1d23      	adds	r3, r4, #4
 80056fa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80056fe:	6833      	ldr	r3, [r6, #0]
 8005700:	f8c4 a008 	str.w	sl, [r4, #8]
 8005704:	4630      	mov	r0, r6
 8005706:	68db      	ldr	r3, [r3, #12]
 8005708:	63f4      	str	r4, [r6, #60]	; 0x3c
 800570a:	4798      	blx	r3
    newPresenter->activate();
 800570c:	6823      	ldr	r3, [r4, #0]
 800570e:	4620      	mov	r0, r4
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005714:	4629      	mov	r1, r5
 8005716:	4630      	mov	r0, r6
 8005718:	f013 f8fe 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800571c:	682b      	ldr	r3, [r5, #0]
 800571e:	4628      	mov	r0, r5
 8005720:	691b      	ldr	r3, [r3, #16]
 8005722:	4798      	blx	r3
    newTransition->invalidate();
 8005724:	682b      	ldr	r3, [r5, #0]
 8005726:	4628      	mov	r0, r5
 8005728:	695b      	ldr	r3, [r3, #20]
}
 800572a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800572e:	4718      	bx	r3
    model->bind(newPresenter);
 8005730:	4623      	mov	r3, r4
 8005732:	e7e2      	b.n	80056fa <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005734:	0802d75c 	.word	0x0802d75c
 8005738:	0802e4ef 	.word	0x0802e4ef
 800573c:	0802d8f8 	.word	0x0802d8f8
 8005740:	0802d93f 	.word	0x0802d93f
 8005744:	0802d9e2 	.word	0x0802d9e2
 8005748:	2001387c 	.word	0x2001387c
 800574c:	20013878 	.word	0x20013878

08005750 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8005750:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005754:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005758:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800575a:	68a0      	ldr	r0, [r4, #8]
 800575c:	6803      	ldr	r3, [r0, #0]
 800575e:	6a1b      	ldr	r3, [r3, #32]
 8005760:	4798      	blx	r3
 8005762:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8005766:	4298      	cmp	r0, r3
 8005768:	d805      	bhi.n	8005776 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 800576a:	4b42      	ldr	r3, [pc, #264]	; (8005874 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 800576c:	4a42      	ldr	r2, [pc, #264]	; (8005878 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800576e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005770:	4842      	ldr	r0, [pc, #264]	; (800587c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8005772:	f026 f96d 	bl	802ba50 <__assert_func>
 8005776:	6860      	ldr	r0, [r4, #4]
 8005778:	6803      	ldr	r3, [r0, #0]
 800577a:	6a1b      	ldr	r3, [r3, #32]
 800577c:	4798      	blx	r3
 800577e:	280f      	cmp	r0, #15
 8005780:	d803      	bhi.n	800578a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8005782:	4b3f      	ldr	r3, [pc, #252]	; (8005880 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8005784:	4a3c      	ldr	r2, [pc, #240]	; (8005878 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8005786:	21a4      	movs	r1, #164	; 0xa4
 8005788:	e7f2      	b.n	8005770 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800578a:	68e0      	ldr	r0, [r4, #12]
 800578c:	6803      	ldr	r3, [r0, #0]
 800578e:	6a1b      	ldr	r3, [r3, #32]
 8005790:	4798      	blx	r3
 8005792:	2837      	cmp	r0, #55	; 0x37
 8005794:	d803      	bhi.n	800579e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8005796:	4b3b      	ldr	r3, [pc, #236]	; (8005884 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8005798:	4a37      	ldr	r2, [pc, #220]	; (8005878 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 800579a:	21a5      	movs	r1, #165	; 0xa5
 800579c:	e7e8      	b.n	8005770 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800579e:	f011 fa8f 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80057a2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005888 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80057a6:	3004      	adds	r0, #4
 80057a8:	f011 faf0 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80057ac:	f8d9 0000 	ldr.w	r0, [r9]
 80057b0:	b110      	cbz	r0, 80057b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80057b2:	6803      	ldr	r3, [r0, #0]
 80057b4:	68db      	ldr	r3, [r3, #12]
 80057b6:	4798      	blx	r3
    if (*currentTrans)
 80057b8:	f8d9 0000 	ldr.w	r0, [r9]
 80057bc:	b110      	cbz	r0, 80057c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80057be:	6803      	ldr	r3, [r0, #0]
 80057c0:	681b      	ldr	r3, [r3, #0]
 80057c2:	4798      	blx	r3
    if (*currentScreen)
 80057c4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800588c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 80057c8:	f8d8 0000 	ldr.w	r0, [r8]
 80057cc:	b110      	cbz	r0, 80057d4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80057ce:	6803      	ldr	r3, [r0, #0]
 80057d0:	695b      	ldr	r3, [r3, #20]
 80057d2:	4798      	blx	r3
    if (*currentPresenter)
 80057d4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057d8:	b110      	cbz	r0, 80057e0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80057da:	6803      	ldr	r3, [r0, #0]
 80057dc:	685b      	ldr	r3, [r3, #4]
 80057de:	4798      	blx	r3
    if (*currentScreen)
 80057e0:	f8d8 0000 	ldr.w	r0, [r8]
 80057e4:	b110      	cbz	r0, 80057ec <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80057e6:	6803      	ldr	r3, [r0, #0]
 80057e8:	681b      	ldr	r3, [r3, #0]
 80057ea:	4798      	blx	r3
    if (*currentPresenter)
 80057ec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80057f0:	b110      	cbz	r0, 80057f8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80057f2:	6803      	ldr	r3, [r0, #0]
 80057f4:	689b      	ldr	r3, [r3, #8]
 80057f6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80057f8:	68e0      	ldr	r0, [r4, #12]
 80057fa:	2100      	movs	r1, #0
 80057fc:	f7ff fbb6 	bl	8004f6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005800:	2114      	movs	r1, #20
 8005802:	4605      	mov	r5, r0
 8005804:	f7ff fbb6 	bl	8004f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005808:	68a0      	ldr	r0, [r4, #8]
 800580a:	6803      	ldr	r3, [r0, #0]
 800580c:	2100      	movs	r1, #0
 800580e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005810:	4798      	blx	r3
 8005812:	4606      	mov	r6, r0
 8005814:	f003 fc88 	bl	8009128 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005818:	6860      	ldr	r0, [r4, #4]
 800581a:	6803      	ldr	r3, [r0, #0]
 800581c:	2100      	movs	r1, #0
 800581e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005820:	4798      	blx	r3
 8005822:	4631      	mov	r1, r6
 8005824:	4604      	mov	r4, r0
 8005826:	f003 fc59 	bl	80090dc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800582a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800582e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005832:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005836:	b1dc      	cbz	r4, 8005870 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005838:	1d23      	adds	r3, r4, #4
 800583a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800583e:	6833      	ldr	r3, [r6, #0]
 8005840:	f8c4 a008 	str.w	sl, [r4, #8]
 8005844:	4630      	mov	r0, r6
 8005846:	68db      	ldr	r3, [r3, #12]
 8005848:	63f4      	str	r4, [r6, #60]	; 0x3c
 800584a:	4798      	blx	r3
    newPresenter->activate();
 800584c:	6823      	ldr	r3, [r4, #0]
 800584e:	4620      	mov	r0, r4
 8005850:	681b      	ldr	r3, [r3, #0]
 8005852:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005854:	4629      	mov	r1, r5
 8005856:	4630      	mov	r0, r6
 8005858:	f013 f85e 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800585c:	682b      	ldr	r3, [r5, #0]
 800585e:	4628      	mov	r0, r5
 8005860:	691b      	ldr	r3, [r3, #16]
 8005862:	4798      	blx	r3
    newTransition->invalidate();
 8005864:	682b      	ldr	r3, [r5, #0]
 8005866:	4628      	mov	r0, r5
 8005868:	695b      	ldr	r3, [r3, #20]
}
 800586a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800586e:	4718      	bx	r3
    model->bind(newPresenter);
 8005870:	4623      	mov	r3, r4
 8005872:	e7e2      	b.n	800583a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8005874:	0802d75c 	.word	0x0802d75c
 8005878:	0802e631 	.word	0x0802e631
 800587c:	0802d8f8 	.word	0x0802d8f8
 8005880:	0802d93f 	.word	0x0802d93f
 8005884:	0802d9e2 	.word	0x0802d9e2
 8005888:	2001387c 	.word	0x2001387c
 800588c:	20013878 	.word	0x20013878

08005890 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8005890:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005894:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005898:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800589a:	68a0      	ldr	r0, [r4, #8]
 800589c:	6803      	ldr	r3, [r0, #0]
 800589e:	6a1b      	ldr	r3, [r3, #32]
 80058a0:	4798      	blx	r3
 80058a2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80058a6:	d205      	bcs.n	80058b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 80058a8:	4b42      	ldr	r3, [pc, #264]	; (80059b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80058aa:	4a43      	ldr	r2, [pc, #268]	; (80059b8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058ac:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80058ae:	4843      	ldr	r0, [pc, #268]	; (80059bc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80058b0:	f026 f8ce 	bl	802ba50 <__assert_func>
 80058b4:	6860      	ldr	r0, [r4, #4]
 80058b6:	6803      	ldr	r3, [r0, #0]
 80058b8:	6a1b      	ldr	r3, [r3, #32]
 80058ba:	4798      	blx	r3
 80058bc:	280f      	cmp	r0, #15
 80058be:	d803      	bhi.n	80058c8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80058c0:	4b3f      	ldr	r3, [pc, #252]	; (80059c0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80058c2:	4a3d      	ldr	r2, [pc, #244]	; (80059b8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058c4:	21a4      	movs	r1, #164	; 0xa4
 80058c6:	e7f2      	b.n	80058ae <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80058c8:	68e0      	ldr	r0, [r4, #12]
 80058ca:	6803      	ldr	r3, [r0, #0]
 80058cc:	6a1b      	ldr	r3, [r3, #32]
 80058ce:	4798      	blx	r3
 80058d0:	2837      	cmp	r0, #55	; 0x37
 80058d2:	d803      	bhi.n	80058dc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 80058d4:	4b3b      	ldr	r3, [pc, #236]	; (80059c4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 80058d6:	4a38      	ldr	r2, [pc, #224]	; (80059b8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80058d8:	21a5      	movs	r1, #165	; 0xa5
 80058da:	e7e8      	b.n	80058ae <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80058dc:	f011 f9f0 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80058e0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80059c8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 80058e4:	3004      	adds	r0, #4
 80058e6:	f011 fa51 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80058ea:	f8d9 0000 	ldr.w	r0, [r9]
 80058ee:	b110      	cbz	r0, 80058f6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80058f0:	6803      	ldr	r3, [r0, #0]
 80058f2:	68db      	ldr	r3, [r3, #12]
 80058f4:	4798      	blx	r3
    if (*currentTrans)
 80058f6:	f8d9 0000 	ldr.w	r0, [r9]
 80058fa:	b110      	cbz	r0, 8005902 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80058fc:	6803      	ldr	r3, [r0, #0]
 80058fe:	681b      	ldr	r3, [r3, #0]
 8005900:	4798      	blx	r3
    if (*currentScreen)
 8005902:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80059cc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005906:	f8d8 0000 	ldr.w	r0, [r8]
 800590a:	b110      	cbz	r0, 8005912 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800590c:	6803      	ldr	r3, [r0, #0]
 800590e:	695b      	ldr	r3, [r3, #20]
 8005910:	4798      	blx	r3
    if (*currentPresenter)
 8005912:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005916:	b110      	cbz	r0, 800591e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005918:	6803      	ldr	r3, [r0, #0]
 800591a:	685b      	ldr	r3, [r3, #4]
 800591c:	4798      	blx	r3
    if (*currentScreen)
 800591e:	f8d8 0000 	ldr.w	r0, [r8]
 8005922:	b110      	cbz	r0, 800592a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005924:	6803      	ldr	r3, [r0, #0]
 8005926:	681b      	ldr	r3, [r3, #0]
 8005928:	4798      	blx	r3
    if (*currentPresenter)
 800592a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800592e:	b110      	cbz	r0, 8005936 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005930:	6803      	ldr	r3, [r0, #0]
 8005932:	689b      	ldr	r3, [r3, #8]
 8005934:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005936:	68e0      	ldr	r0, [r4, #12]
 8005938:	2100      	movs	r1, #0
 800593a:	f7ff fb17 	bl	8004f6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800593e:	2114      	movs	r1, #20
 8005940:	4605      	mov	r5, r0
 8005942:	f7ff fb17 	bl	8004f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005946:	68a0      	ldr	r0, [r4, #8]
 8005948:	6803      	ldr	r3, [r0, #0]
 800594a:	2100      	movs	r1, #0
 800594c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800594e:	4798      	blx	r3
 8005950:	4606      	mov	r6, r0
 8005952:	f003 fb8f 	bl	8009074 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005956:	6860      	ldr	r0, [r4, #4]
 8005958:	6803      	ldr	r3, [r0, #0]
 800595a:	2100      	movs	r1, #0
 800595c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800595e:	4798      	blx	r3
 8005960:	4631      	mov	r1, r6
 8005962:	4604      	mov	r4, r0
 8005964:	f003 fb60 	bl	8009028 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8005968:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800596c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005970:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005974:	b1dc      	cbz	r4, 80059ae <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8005976:	1d23      	adds	r3, r4, #4
 8005978:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800597c:	6833      	ldr	r3, [r6, #0]
 800597e:	f8c4 a008 	str.w	sl, [r4, #8]
 8005982:	4630      	mov	r0, r6
 8005984:	68db      	ldr	r3, [r3, #12]
 8005986:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005988:	4798      	blx	r3
    newPresenter->activate();
 800598a:	6823      	ldr	r3, [r4, #0]
 800598c:	4620      	mov	r0, r4
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005992:	4629      	mov	r1, r5
 8005994:	4630      	mov	r0, r6
 8005996:	f012 ffbf 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800599a:	682b      	ldr	r3, [r5, #0]
 800599c:	4628      	mov	r0, r5
 800599e:	691b      	ldr	r3, [r3, #16]
 80059a0:	4798      	blx	r3
    newTransition->invalidate();
 80059a2:	682b      	ldr	r3, [r5, #0]
 80059a4:	4628      	mov	r0, r5
 80059a6:	695b      	ldr	r3, [r3, #20]
}
 80059a8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059ac:	4718      	bx	r3
    model->bind(newPresenter);
 80059ae:	4623      	mov	r3, r4
 80059b0:	e7e2      	b.n	8005978 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 80059b2:	bf00      	nop
 80059b4:	0802d75c 	.word	0x0802d75c
 80059b8:	0802e773 	.word	0x0802e773
 80059bc:	0802d8f8 	.word	0x0802d8f8
 80059c0:	0802d93f 	.word	0x0802d93f
 80059c4:	0802d9e2 	.word	0x0802d9e2
 80059c8:	2001387c 	.word	0x2001387c
 80059cc:	20013878 	.word	0x20013878

080059d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 80059d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80059d4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80059d8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80059da:	68a0      	ldr	r0, [r4, #8]
 80059dc:	6803      	ldr	r3, [r0, #0]
 80059de:	6a1b      	ldr	r3, [r3, #32]
 80059e0:	4798      	blx	r3
 80059e2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80059e6:	d205      	bcs.n	80059f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 80059e8:	4b42      	ldr	r3, [pc, #264]	; (8005af4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 80059ea:	4a43      	ldr	r2, [pc, #268]	; (8005af8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 80059ec:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80059ee:	4843      	ldr	r0, [pc, #268]	; (8005afc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 80059f0:	f026 f82e 	bl	802ba50 <__assert_func>
 80059f4:	6860      	ldr	r0, [r4, #4]
 80059f6:	6803      	ldr	r3, [r0, #0]
 80059f8:	6a1b      	ldr	r3, [r3, #32]
 80059fa:	4798      	blx	r3
 80059fc:	280f      	cmp	r0, #15
 80059fe:	d803      	bhi.n	8005a08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005a00:	4b3f      	ldr	r3, [pc, #252]	; (8005b00 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005a02:	4a3d      	ldr	r2, [pc, #244]	; (8005af8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005a04:	21a4      	movs	r1, #164	; 0xa4
 8005a06:	e7f2      	b.n	80059ee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005a08:	68e0      	ldr	r0, [r4, #12]
 8005a0a:	6803      	ldr	r3, [r0, #0]
 8005a0c:	6a1b      	ldr	r3, [r3, #32]
 8005a0e:	4798      	blx	r3
 8005a10:	2837      	cmp	r0, #55	; 0x37
 8005a12:	d803      	bhi.n	8005a1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005a14:	4b3b      	ldr	r3, [pc, #236]	; (8005b04 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005a16:	4a38      	ldr	r2, [pc, #224]	; (8005af8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005a18:	21a5      	movs	r1, #165	; 0xa5
 8005a1a:	e7e8      	b.n	80059ee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005a1c:	f011 f950 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005a20:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005b08 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005a24:	3004      	adds	r0, #4
 8005a26:	f011 f9b1 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005a2a:	f8d9 0000 	ldr.w	r0, [r9]
 8005a2e:	b110      	cbz	r0, 8005a36 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005a30:	6803      	ldr	r3, [r0, #0]
 8005a32:	68db      	ldr	r3, [r3, #12]
 8005a34:	4798      	blx	r3
    if (*currentTrans)
 8005a36:	f8d9 0000 	ldr.w	r0, [r9]
 8005a3a:	b110      	cbz	r0, 8005a42 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005a3c:	6803      	ldr	r3, [r0, #0]
 8005a3e:	681b      	ldr	r3, [r3, #0]
 8005a40:	4798      	blx	r3
    if (*currentScreen)
 8005a42:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005b0c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005a46:	f8d8 0000 	ldr.w	r0, [r8]
 8005a4a:	b110      	cbz	r0, 8005a52 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005a4c:	6803      	ldr	r3, [r0, #0]
 8005a4e:	695b      	ldr	r3, [r3, #20]
 8005a50:	4798      	blx	r3
    if (*currentPresenter)
 8005a52:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a56:	b110      	cbz	r0, 8005a5e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005a58:	6803      	ldr	r3, [r0, #0]
 8005a5a:	685b      	ldr	r3, [r3, #4]
 8005a5c:	4798      	blx	r3
    if (*currentScreen)
 8005a5e:	f8d8 0000 	ldr.w	r0, [r8]
 8005a62:	b110      	cbz	r0, 8005a6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005a64:	6803      	ldr	r3, [r0, #0]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	4798      	blx	r3
    if (*currentPresenter)
 8005a6a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005a6e:	b110      	cbz	r0, 8005a76 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005a70:	6803      	ldr	r3, [r0, #0]
 8005a72:	689b      	ldr	r3, [r3, #8]
 8005a74:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005a76:	68e0      	ldr	r0, [r4, #12]
 8005a78:	2100      	movs	r1, #0
 8005a7a:	f7ff fa77 	bl	8004f6c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8005a7e:	2114      	movs	r1, #20
 8005a80:	4605      	mov	r5, r0
 8005a82:	f7ff fa77 	bl	8004f74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005a86:	68a0      	ldr	r0, [r4, #8]
 8005a88:	6803      	ldr	r3, [r0, #0]
 8005a8a:	2100      	movs	r1, #0
 8005a8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a8e:	4798      	blx	r3
 8005a90:	4606      	mov	r6, r0
 8005a92:	f003 f9ab 	bl	8008dec <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005a96:	6860      	ldr	r0, [r4, #4]
 8005a98:	6803      	ldr	r3, [r0, #0]
 8005a9a:	2100      	movs	r1, #0
 8005a9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a9e:	4798      	blx	r3
 8005aa0:	4631      	mov	r1, r6
 8005aa2:	4604      	mov	r4, r0
 8005aa4:	f003 f97c 	bl	8008da0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8005aa8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005aac:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005ab0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005ab4:	b1dc      	cbz	r4, 8005aee <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8005ab6:	1d23      	adds	r3, r4, #4
 8005ab8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005abc:	6833      	ldr	r3, [r6, #0]
 8005abe:	f8c4 a008 	str.w	sl, [r4, #8]
 8005ac2:	4630      	mov	r0, r6
 8005ac4:	68db      	ldr	r3, [r3, #12]
 8005ac6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005ac8:	4798      	blx	r3
    newPresenter->activate();
 8005aca:	6823      	ldr	r3, [r4, #0]
 8005acc:	4620      	mov	r0, r4
 8005ace:	681b      	ldr	r3, [r3, #0]
 8005ad0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005ad2:	4629      	mov	r1, r5
 8005ad4:	4630      	mov	r0, r6
 8005ad6:	f012 ff1f 	bl	8018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005ada:	682b      	ldr	r3, [r5, #0]
 8005adc:	4628      	mov	r0, r5
 8005ade:	691b      	ldr	r3, [r3, #16]
 8005ae0:	4798      	blx	r3
    newTransition->invalidate();
 8005ae2:	682b      	ldr	r3, [r5, #0]
 8005ae4:	4628      	mov	r0, r5
 8005ae6:	695b      	ldr	r3, [r3, #20]
}
 8005ae8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005aec:	4718      	bx	r3
    model->bind(newPresenter);
 8005aee:	4623      	mov	r3, r4
 8005af0:	e7e2      	b.n	8005ab8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005af2:	bf00      	nop
 8005af4:	0802d75c 	.word	0x0802d75c
 8005af8:	0802e89f 	.word	0x0802e89f
 8005afc:	0802d8f8 	.word	0x0802d8f8
 8005b00:	0802d93f 	.word	0x0802d93f
 8005b04:	0802d9e2 	.word	0x0802d9e2
 8005b08:	2001387c 	.word	0x2001387c
 8005b0c:	20013878 	.word	0x20013878

08005b10 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005b10:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005b12:	4770      	bx	lr

08005b14 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005b14:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005b16:	4770      	bx	lr

08005b18 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005b18:	4770      	bx	lr

08005b1a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005b1a:	888b      	ldrh	r3, [r1, #4]
 8005b1c:	69c0      	ldr	r0, [r0, #28]
 8005b1e:	680a      	ldr	r2, [r1, #0]
 8005b20:	0adb      	lsrs	r3, r3, #11
 8005b22:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005b26:	4410      	add	r0, r2
 8005b28:	4770      	bx	lr

08005b2a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005b2a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005b2c:	b1c2      	cbz	r2, 8005b60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005b2e:	7b13      	ldrb	r3, [r2, #12]
 8005b30:	b1b3      	cbz	r3, 8005b60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005b32:	7b54      	ldrb	r4, [r2, #13]
 8005b34:	7ad2      	ldrb	r2, [r2, #11]
 8005b36:	0224      	lsls	r4, r4, #8
 8005b38:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005b3c:	4314      	orrs	r4, r2
 8005b3e:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005b40:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005b42:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005b46:	8813      	ldrh	r3, [r2, #0]
 8005b48:	428b      	cmp	r3, r1
 8005b4a:	d102      	bne.n	8005b52 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005b4c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005b50:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005b52:	d805      	bhi.n	8005b60 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005b54:	3801      	subs	r0, #1
 8005b56:	b280      	uxth	r0, r0
 8005b58:	3204      	adds	r2, #4
 8005b5a:	2800      	cmp	r0, #0
 8005b5c:	d1f3      	bne.n	8005b46 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005b5e:	e7f7      	b.n	8005b50 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005b60:	2000      	movs	r0, #0
 8005b62:	e7f5      	b.n	8005b50 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005b64 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005b64:	b510      	push	{r4, lr}
 8005b66:	212c      	movs	r1, #44	; 0x2c
 8005b68:	4604      	mov	r4, r0
 8005b6a:	f025 f95e 	bl	802ae2a <_ZdlPvj>
 8005b6e:	4620      	mov	r0, r4
 8005b70:	bd10      	pop	{r4, pc}
	...

08005b74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005b74:	b530      	push	{r4, r5, lr}
 8005b76:	b08b      	sub	sp, #44	; 0x2c
 8005b78:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005b7a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005b7e:	9508      	str	r5, [sp, #32]
 8005b80:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005b84:	9507      	str	r5, [sp, #28]
 8005b86:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005b8a:	9506      	str	r5, [sp, #24]
 8005b8c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005b90:	9505      	str	r5, [sp, #20]
 8005b92:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005b96:	9504      	str	r5, [sp, #16]
 8005b98:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005b9c:	9503      	str	r5, [sp, #12]
 8005b9e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005ba2:	9502      	str	r5, [sp, #8]
 8005ba4:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005ba8:	9501      	str	r5, [sp, #4]
 8005baa:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005bae:	9500      	str	r5, [sp, #0]
 8005bb0:	f012 fa1c 	bl	8017fec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005bb4:	4b06      	ldr	r3, [pc, #24]	; (8005bd0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005bb6:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005bb8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005bba:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8005bbc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005bbe:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005bc0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005bc2:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005bc4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005bc6:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005bc8:	4620      	mov	r0, r4
 8005bca:	b00b      	add	sp, #44	; 0x2c
 8005bcc:	bd30      	pop	{r4, r5, pc}
 8005bce:	bf00      	nop
 8005bd0:	0802eb08 	.word	0x0802eb08

08005bd4 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005bd4:	4770      	bx	lr

08005bd6 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005bd6:	4770      	bx	lr

08005bd8 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005bd8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005bda:	68c2      	ldr	r2, [r0, #12]
 8005bdc:	6844      	ldr	r4, [r0, #4]
 8005bde:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005be0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005be2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005be6:	07d2      	lsls	r2, r2, #31
 8005be8:	bf48      	it	mi
 8005bea:	5962      	ldrmi	r2, [r4, r5]
 8005bec:	689b      	ldr	r3, [r3, #8]
    }
 8005bee:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005bf0:	bf48      	it	mi
 8005bf2:	58d3      	ldrmi	r3, [r2, r3]
 8005bf4:	4718      	bx	r3

08005bf6 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005bf6:	6843      	ldr	r3, [r0, #4]
 8005bf8:	b12b      	cbz	r3, 8005c06 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005bfa:	6883      	ldr	r3, [r0, #8]
 8005bfc:	b92b      	cbnz	r3, 8005c0a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005bfe:	68c0      	ldr	r0, [r0, #12]
 8005c00:	f000 0001 	and.w	r0, r0, #1
 8005c04:	4770      	bx	lr
 8005c06:	4618      	mov	r0, r3
 8005c08:	4770      	bx	lr
 8005c0a:	2001      	movs	r0, #1
    }
 8005c0c:	4770      	bx	lr

08005c0e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005c0e:	b510      	push	{r4, lr}
 8005c10:	2110      	movs	r1, #16
 8005c12:	4604      	mov	r4, r0
 8005c14:	f025 f909 	bl	802ae2a <_ZdlPvj>
 8005c18:	4620      	mov	r0, r4
 8005c1a:	bd10      	pop	{r4, pc}

08005c1c <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005c1c:	b510      	push	{r4, lr}
 8005c1e:	4b03      	ldr	r3, [pc, #12]	; (8005c2c <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005c20:	6003      	str	r3, [r0, #0]
 8005c22:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c24:	f00f fb4a 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c28:	4620      	mov	r0, r4
 8005c2a:	bd10      	pop	{r4, pc}
 8005c2c:	0802eb80 	.word	0x0802eb80

08005c30 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005c30:	b507      	push	{r0, r1, r2, lr}
 8005c32:	4b07      	ldr	r3, [pc, #28]	; (8005c50 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005c34:	6003      	str	r3, [r0, #0]
 8005c36:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005c38:	f00f fb40 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005c3c:	9801      	ldr	r0, [sp, #4]
 8005c3e:	f241 117c 	movw	r1, #4476	; 0x117c
 8005c42:	f025 f8f2 	bl	802ae2a <_ZdlPvj>
 8005c46:	9801      	ldr	r0, [sp, #4]
 8005c48:	b003      	add	sp, #12
 8005c4a:	f85d fb04 	ldr.w	pc, [sp], #4
 8005c4e:	bf00      	nop
 8005c50:	0802eb80 	.word	0x0802eb80

08005c54 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005c54:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005c56:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005c5a:	4299      	cmp	r1, r3
{
 8005c5c:	4604      	mov	r4, r0
 8005c5e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005c60:	d103      	bne.n	8005c6a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005c62:	f011 f82d 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8005c66:	f7fe feaf 	bl	80049c8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005c6a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005c6e:	429d      	cmp	r5, r3
 8005c70:	d103      	bne.n	8005c7a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005c72:	f011 f825 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8005c76:	f7fe ff37 	bl	8004ae8 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8005c7a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005c7e:	429d      	cmp	r5, r3
 8005c80:	d103      	bne.n	8005c8a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005c82:	f011 f81d 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005c86:	f7fe ff3f 	bl	8004b08 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8005c8a:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005c8e:	42a5      	cmp	r5, r4
 8005c90:	d10a      	bne.n	8005ca8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005c92:	4806      	ldr	r0, [pc, #24]	; (8005cac <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005c94:	2200      	movs	r2, #0
 8005c96:	2120      	movs	r1, #32
 8005c98:	f004 fa42 	bl	800a120 <HAL_GPIO_WritePin>
 8005c9c:	f011 f810 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005ca0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005ca4:	f7fe bf40 	b.w	8004b28 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005ca8:	bd38      	pop	{r3, r4, r5, pc}
 8005caa:	bf00      	nop
 8005cac:	40021000 	.word	0x40021000

08005cb0 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cb4:	ed2d 8b06 	vpush	{d8-d10}
 8005cb8:	4604      	mov	r4, r0
 8005cba:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8005cbc:	46a3      	mov	fp, r4
        : presenter(0)
 8005cbe:	2500      	movs	r5, #0
 8005cc0:	f012 fc7e 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
 8005cc4:	4b6a      	ldr	r3, [pc, #424]	; (8005e70 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005cc6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005cc8:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005ccc:	2226      	movs	r2, #38	; 0x26
 8005cce:	4629      	mov	r1, r5
 8005cd0:	4658      	mov	r0, fp
 8005cd2:	f026 f8c2 	bl	802be5a <memset>
 8005cd6:	4658      	mov	r0, fp
 8005cd8:	f7fc fec6 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8005cdc:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005ce0:	26ff      	movs	r6, #255	; 0xff
 8005ce2:	4b64      	ldr	r3, [pc, #400]	; (8005e74 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005ce4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005ce6:	2226      	movs	r2, #38	; 0x26
 8005ce8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005cec:	4629      	mov	r1, r5
 8005cee:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005cf2:	4650      	mov	r0, sl
        : color(col)
 8005cf4:	66a5      	str	r5, [r4, #104]	; 0x68
 8005cf6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005cfa:	f026 f8ae 	bl	802be5a <memset>
 8005cfe:	4650      	mov	r0, sl
 8005d00:	f7fc feb2 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8005d04:	4b5c      	ldr	r3, [pc, #368]	; (8005e78 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005d06:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005d08:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005d0c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005d10:	a90c      	add	r1, sp, #48	; 0x30
 8005d12:	4650      	mov	r0, sl
 8005d14:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005d18:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005d1c:	f00e fad1 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005d20:	4648      	mov	r0, r9
 8005d22:	f7fc ff05 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8005d26:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005d2a:	4b54      	ldr	r3, [pc, #336]	; (8005e7c <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005d2c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005d30:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005d34:	4638      	mov	r0, r7
 8005d36:	f00c ffb7 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 8005d3a:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005d3e:	4618      	mov	r0, r3
 8005d40:	9303      	str	r3, [sp, #12]
 8005d42:	f7fc fc95 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005d46:	4b4e      	ldr	r3, [pc, #312]	; (8005e80 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005d48:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005d4c:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005d50:	3324      	adds	r3, #36	; 0x24
 8005d52:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005d56:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005d5a:	4640      	mov	r0, r8
 8005d5c:	f7fc fee8 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8005d60:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005d64:	4618      	mov	r0, r3
 8005d66:	ee08 3a10 	vmov	s16, r3
 8005d6a:	f7fc fee1 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8005d6e:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005d72:	4618      	mov	r0, r3
 8005d74:	ee08 3a90 	vmov	s17, r3
 8005d78:	f7fc feda 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8005d7c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005d80:	4618      	mov	r0, r3
 8005d82:	ee09 3a10 	vmov	s18, r3
 8005d86:	f00e fbd3 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005d8a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005d8e:	4618      	mov	r0, r3
 8005d90:	ee09 3a90 	vmov	s19, r3
 8005d94:	f00e fbcc 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005d98:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005d9c:	4618      	mov	r0, r3
 8005d9e:	ee0a 3a10 	vmov	s20, r3
 8005da2:	f00e fbc5 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005da6:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005daa:	4618      	mov	r0, r3
 8005dac:	ee0a 3a90 	vmov	s21, r3
 8005db0:	f00e fa60 	bl	8014274 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005db4:	4a33      	ldr	r2, [pc, #204]	; (8005e84 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005db6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005dba:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005dbe:	4a32      	ldr	r2, [pc, #200]	; (8005e88 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005dc0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005dc4:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005dc8:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005dcc:	f00f fa6c 	bl	80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005dd0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005dd4:	462a      	mov	r2, r5
 8005dd6:	4658      	mov	r0, fp
 8005dd8:	9300      	str	r3, [sp, #0]
 8005dda:	4629      	mov	r1, r5
 8005ddc:	23f0      	movs	r3, #240	; 0xf0
 8005dde:	f7fc fe1e 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8005de2:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005de4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005de8:	66a3      	str	r3, [r4, #104]	; 0x68
 8005dea:	4659      	mov	r1, fp
 8005dec:	4630      	mov	r0, r6
 8005dee:	f00a fe8f 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005df2:	462a      	mov	r2, r5
 8005df4:	4650      	mov	r0, sl
 8005df6:	4629      	mov	r1, r5
 8005df8:	f7fc fe04 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8005dfc:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005dfe:	4650      	mov	r0, sl
 8005e00:	a90c      	add	r1, sp, #48	; 0x30
 8005e02:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005e06:	f00e fa5c 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005e0a:	4651      	mov	r1, sl
 8005e0c:	4630      	mov	r0, r6
 8005e0e:	f00a fe7f 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005e12:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005e16:	2156      	movs	r1, #86	; 0x56
 8005e18:	4648      	mov	r0, r9
 8005e1a:	f7fc fdf3 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8005e1e:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005e22:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005e26:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005e2a:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005e2e:	4650      	mov	r0, sl
 8005e30:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005e34:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005e38:	4649      	mov	r1, r9
 8005e3a:	4798      	blx	r3
 8005e3c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005e40:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005e44:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e48:	4b10      	ldr	r3, [pc, #64]	; (8005e8c <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005e4a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005e4c:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005e50:	b92b      	cbnz	r3, 8005e5e <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005e52:	4b0f      	ldr	r3, [pc, #60]	; (8005e90 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005e54:	4a0f      	ldr	r2, [pc, #60]	; (8005e94 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005e56:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e58:	480f      	ldr	r0, [pc, #60]	; (8005e98 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005e5a:	f025 fdf9 	bl	802ba50 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005e5e:	4b0f      	ldr	r3, [pc, #60]	; (8005e9c <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e60:	881b      	ldrh	r3, [r3, #0]
 8005e62:	2b38      	cmp	r3, #56	; 0x38
 8005e64:	d81e      	bhi.n	8005ea4 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005e66:	4b0e      	ldr	r3, [pc, #56]	; (8005ea0 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005e68:	4a0a      	ldr	r2, [pc, #40]	; (8005e94 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005e6a:	2161      	movs	r1, #97	; 0x61
 8005e6c:	e7f4      	b.n	8005e58 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005e6e:	bf00      	nop
 8005e70:	0802eb80 	.word	0x0802eb80
 8005e74:	0802fb34 	.word	0x0802fb34
 8005e78:	0802fd80 	.word	0x0802fd80
 8005e7c:	0802d680 	.word	0x0802d680
 8005e80:	0802f868 	.word	0x0802f868
 8005e84:	0802eb68 	.word	0x0802eb68
 8005e88:	08005c55 	.word	0x08005c55
 8005e8c:	2001388c 	.word	0x2001388c
 8005e90:	0802d430 	.word	0x0802d430
 8005e94:	0802d535 	.word	0x0802d535
 8005e98:	0802d4ad 	.word	0x0802d4ad
 8005e9c:	20013890 	.word	0x20013890
 8005ea0:	0802d4f4 	.word	0x0802d4f4
        return texts->getText(typedTextId);
 8005ea4:	4ba5      	ldr	r3, [pc, #660]	; (800613c <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005ea6:	2138      	movs	r1, #56	; 0x38
 8005ea8:	6818      	ldr	r0, [r3, #0]
 8005eaa:	f002 fdaf 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8005eae:	4aa4      	ldr	r2, [pc, #656]	; (8006140 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005eb0:	4603      	mov	r3, r0
 8005eb2:	2104      	movs	r1, #4
 8005eb4:	4650      	mov	r0, sl
 8005eb6:	f014 f8b1 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005eba:	4648      	mov	r0, r9
        wc1 = value;
 8005ebc:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005ec0:	f00d fc2e 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005ec4:	4b9f      	ldr	r3, [pc, #636]	; (8006144 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005ec6:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005ec8:	a90c      	add	r1, sp, #48	; 0x30
 8005eca:	2339      	movs	r3, #57	; 0x39
 8005ecc:	4648      	mov	r0, r9
 8005ece:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005ed2:	f00d fc45 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ed6:	4649      	mov	r1, r9
 8005ed8:	4630      	mov	r0, r6
 8005eda:	f00a fe19 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005ede:	230a      	movs	r3, #10
 8005ee0:	9300      	str	r3, [sp, #0]
 8005ee2:	2232      	movs	r2, #50	; 0x32
 8005ee4:	23f0      	movs	r3, #240	; 0xf0
 8005ee6:	4629      	mov	r1, r5
 8005ee8:	4638      	mov	r0, r7
 8005eea:	f7fc fd98 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8005eee:	9b03      	ldr	r3, [sp, #12]
 8005ef0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005ef4:	22a0      	movs	r2, #160	; 0xa0
 8005ef6:	4611      	mov	r1, r2
 8005ef8:	4638      	mov	r0, r7
 8005efa:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005efe:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005f02:	f00c ffe7 	bl	8012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005f06:	22a0      	movs	r2, #160	; 0xa0
 8005f08:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005f0c:	4638      	mov	r0, r7
 8005f0e:	f00c ffec 	bl	8012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005f12:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005f16:	2b20      	cmp	r3, #32
 8005f18:	d005      	beq.n	8005f26 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005f1a:	2320      	movs	r3, #32
 8005f1c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005f20:	4638      	mov	r0, r7
 8005f22:	f00c fee1 	bl	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005f26:	4638      	mov	r0, r7
 8005f28:	2101      	movs	r1, #1
 8005f2a:	f00c ffe9 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005f2e:	4639      	mov	r1, r7
 8005f30:	4630      	mov	r0, r6
 8005f32:	ad04      	add	r5, sp, #16
        color = newColor;
 8005f34:	f04f 37ff 	mov.w	r7, #4294967295
 8005f38:	f00a fdea 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005f3c:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005f40:	2223      	movs	r2, #35	; 0x23
 8005f42:	4640      	mov	r0, r8
 8005f44:	2145      	movs	r1, #69	; 0x45
 8005f46:	f7fc fd5d 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005f4a:	4641      	mov	r1, r8
 8005f4c:	4628      	mov	r0, r5
        color = newColor;
 8005f4e:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005f52:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005f56:	f00d f969 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f5a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005f5e:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005f62:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005f66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f6a:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8006144 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005f6e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005f72:	2353      	movs	r3, #83	; 0x53
 8005f74:	4649      	mov	r1, r9
 8005f76:	4640      	mov	r0, r8
 8005f78:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005f7c:	f00d fbf0 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f80:	4641      	mov	r1, r8
 8005f82:	4630      	mov	r0, r6
 8005f84:	f00a fdc4 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005f88:	ee18 0a10 	vmov	r0, s16
 8005f8c:	220c      	movs	r2, #12
 8005f8e:	2136      	movs	r1, #54	; 0x36
 8005f90:	f7fc fd38 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8005f94:	ee18 1a10 	vmov	r1, s16
 8005f98:	4628      	mov	r0, r5
        color = newColor;
 8005f9a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005f9e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005fa2:	f00d f943 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005fa6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005faa:	ee18 3a10 	vmov	r3, s16
 8005fae:	333c      	adds	r3, #60	; 0x3c
 8005fb0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005fb4:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005fb6:	ee18 0a10 	vmov	r0, s16
 8005fba:	4649      	mov	r1, r9
 8005fbc:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005fc0:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005fc4:	f00d fbcc 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fc8:	ee18 1a10 	vmov	r1, s16
 8005fcc:	4630      	mov	r0, r6
 8005fce:	f00a fd9f 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005fd2:	ee18 0a90 	vmov	r0, s17
 8005fd6:	223c      	movs	r2, #60	; 0x3c
 8005fd8:	2158      	movs	r1, #88	; 0x58
 8005fda:	f7fc fd13 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8005fde:	ee18 1a90 	vmov	r1, s17
 8005fe2:	4628      	mov	r0, r5
        color = newColor;
 8005fe4:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005fe8:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005fec:	f00d f91e 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ff0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ff4:	ee18 3a90 	vmov	r3, s17
 8005ff8:	333c      	adds	r3, #60	; 0x3c
 8005ffa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ffe:	2328      	movs	r3, #40	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8006000:	ee18 0a90 	vmov	r0, s17
 8006004:	4649      	mov	r1, r9
 8006006:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800600a:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800600e:	f00d fba7 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006012:	ee18 1a90 	vmov	r1, s17
 8006016:	4630      	mov	r0, r6
 8006018:	f00a fd7a 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800601c:	ee19 0a10 	vmov	r0, s18
 8006020:	22f0      	movs	r2, #240	; 0xf0
 8006022:	2121      	movs	r1, #33	; 0x21
 8006024:	f7fc fcee 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006028:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800602c:	464a      	mov	r2, r9
 800602e:	f04f 0802 	mov.w	r8, #2
 8006032:	a90b      	add	r1, sp, #44	; 0x2c
 8006034:	ee19 0a10 	vmov	r0, s18
 8006038:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 800603c:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8006040:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006044:	f00d ff47 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006048:	2355      	movs	r3, #85	; 0x55
 800604a:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 800604e:	350c      	adds	r5, #12
        updateTextPosition();
 8006050:	ee19 0a10 	vmov	r0, s18
 8006054:	f7fc fd1a 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006058:	ee19 1a10 	vmov	r1, s18
 800605c:	4630      	mov	r0, r6
        colorPressed = col;
 800605e:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006062:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006066:	f00a fd53 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800606a:	ee19 0a90 	vmov	r0, s19
 800606e:	22aa      	movs	r2, #170	; 0xaa
 8006070:	2121      	movs	r1, #33	; 0x21
 8006072:	f7fc fcc7 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006076:	464a      	mov	r2, r9
 8006078:	a90b      	add	r1, sp, #44	; 0x2c
 800607a:	ee19 0a90 	vmov	r0, s19
 800607e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006082:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8006086:	f00d ff26 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800608a:	2356      	movs	r3, #86	; 0x56
 800608c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006090:	ee19 0a90 	vmov	r0, s19
 8006094:	f7fc fcfa 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006098:	ee19 1a90 	vmov	r1, s19
 800609c:	4630      	mov	r0, r6
        colorPressed = col;
 800609e:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80060a2:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80060a6:	f00a fd33 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80060aa:	ee1a 0a10 	vmov	r0, s20
 80060ae:	2264      	movs	r2, #100	; 0x64
 80060b0:	2121      	movs	r1, #33	; 0x21
 80060b2:	f7fc fca7 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80060b6:	464a      	mov	r2, r9
 80060b8:	a90b      	add	r1, sp, #44	; 0x2c
 80060ba:	ee1a 0a10 	vmov	r0, s20
 80060be:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80060c2:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80060c6:	f00d ff06 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80060ca:	2357      	movs	r3, #87	; 0x57
 80060cc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 80060d0:	ee1a 0a10 	vmov	r0, s20
 80060d4:	f7fc fcda 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80060d8:	ee1a 1a10 	vmov	r1, s20
 80060dc:	4630      	mov	r0, r6
        colorPressed = col;
 80060de:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80060e2:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80060e6:	f00a fd13 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 80060ea:	ee1a 0a90 	vmov	r0, s21
 80060ee:	2205      	movs	r2, #5
 80060f0:	21c6      	movs	r1, #198	; 0xc6
 80060f2:	f7fc fc87 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80060f6:	2301      	movs	r3, #1
 80060f8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80060fc:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 80060fe:	ee1a 0a90 	vmov	r0, s21
 8006102:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006106:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800610a:	aa0a      	add	r2, sp, #40	; 0x28
 800610c:	ab0b      	add	r3, sp, #44	; 0x2c
 800610e:	a909      	add	r1, sp, #36	; 0x24
 8006110:	f8cd 9000 	str.w	r9, [sp]
 8006114:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006118:	f00e f817 	bl	801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800611c:	4630      	mov	r0, r6
 800611e:	ee1a 1a90 	vmov	r1, s21
 8006122:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8006126:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 800612a:	f00a fcf1 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800612e:	4620      	mov	r0, r4
 8006130:	b00f      	add	sp, #60	; 0x3c
 8006132:	ecbd 8b06 	vpop	{d8-d10}
 8006136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800613a:	bf00      	nop
 800613c:	20013898 	.word	0x20013898
 8006140:	0802d56d 	.word	0x0802d56d
 8006144:	0802d5e0 	.word	0x0802d5e0

08006148 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006148:	4770      	bx	lr

0800614a <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800614a:	4770      	bx	lr

0800614c <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800614c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800614e:	68c2      	ldr	r2, [r0, #12]
 8006150:	6844      	ldr	r4, [r0, #4]
 8006152:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006154:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006156:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800615a:	07d2      	lsls	r2, r2, #31
 800615c:	bf48      	it	mi
 800615e:	5962      	ldrmi	r2, [r4, r5]
 8006160:	689b      	ldr	r3, [r3, #8]
    }
 8006162:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006164:	bf48      	it	mi
 8006166:	58d3      	ldrmi	r3, [r2, r3]
 8006168:	4718      	bx	r3

0800616a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800616a:	6843      	ldr	r3, [r0, #4]
 800616c:	b12b      	cbz	r3, 800617a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800616e:	6883      	ldr	r3, [r0, #8]
 8006170:	b92b      	cbnz	r3, 800617e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006172:	68c0      	ldr	r0, [r0, #12]
 8006174:	f000 0001 	and.w	r0, r0, #1
 8006178:	4770      	bx	lr
 800617a:	4618      	mov	r0, r3
 800617c:	4770      	bx	lr
 800617e:	2001      	movs	r0, #1
    }
 8006180:	4770      	bx	lr

08006182 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006182:	b510      	push	{r4, lr}
 8006184:	2110      	movs	r1, #16
 8006186:	4604      	mov	r4, r0
 8006188:	f024 fe4f 	bl	802ae2a <_ZdlPvj>
 800618c:	4620      	mov	r0, r4
 800618e:	bd10      	pop	{r4, pc}

08006190 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8006190:	b510      	push	{r4, lr}
 8006192:	4b03      	ldr	r3, [pc, #12]	; (80061a0 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8006194:	6003      	str	r3, [r0, #0]
 8006196:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006198:	f00f f890 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800619c:	4620      	mov	r0, r4
 800619e:	bd10      	pop	{r4, pc}
 80061a0:	0802ebcc 	.word	0x0802ebcc

080061a4 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80061a4:	b507      	push	{r0, r1, r2, lr}
 80061a6:	4b07      	ldr	r3, [pc, #28]	; (80061c4 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80061a8:	6003      	str	r3, [r0, #0]
 80061aa:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80061ac:	f00f f886 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80061b0:	9801      	ldr	r0, [sp, #4]
 80061b2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80061b6:	f024 fe38 	bl	802ae2a <_ZdlPvj>
 80061ba:	9801      	ldr	r0, [sp, #4]
 80061bc:	b003      	add	sp, #12
 80061be:	f85d fb04 	ldr.w	pc, [sp], #4
 80061c2:	bf00      	nop
 80061c4:	0802ebcc 	.word	0x0802ebcc

080061c8 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80061c8:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80061ca:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80061ce:	4299      	cmp	r1, r3
{
 80061d0:	4604      	mov	r4, r0
 80061d2:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80061d4:	d103      	bne.n	80061de <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80061d6:	f010 fd73 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80061da:	f7fe fbe5 	bl	80049a8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80061de:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80061e2:	429d      	cmp	r5, r3
 80061e4:	d103      	bne.n	80061ee <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80061e6:	f010 fd6b 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80061ea:	f7fe fc0d 	bl	8004a08 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80061ee:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80061f2:	42a5      	cmp	r5, r4
 80061f4:	d105      	bne.n	8006202 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80061f6:	f010 fd63 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 80061fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 80061fe:	f7fe bc33 	b.w	8004a68 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8006202:	bd38      	pop	{r3, r4, r5, pc}

08006204 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006208:	ed2d 8b06 	vpush	{d8-d10}
 800620c:	4604      	mov	r4, r0
 800620e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8006210:	46a3      	mov	fp, r4
 8006212:	2500      	movs	r5, #0
 8006214:	f012 f9d4 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
 8006218:	4b66      	ldr	r3, [pc, #408]	; (80063b4 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 800621a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800621c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006220:	2226      	movs	r2, #38	; 0x26
 8006222:	4629      	mov	r1, r5
 8006224:	4658      	mov	r0, fp
 8006226:	f025 fe18 	bl	802be5a <memset>
 800622a:	4658      	mov	r0, fp
 800622c:	f7fc fc1c 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8006230:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006234:	26ff      	movs	r6, #255	; 0xff
 8006236:	4b60      	ldr	r3, [pc, #384]	; (80063b8 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8006238:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800623a:	2226      	movs	r2, #38	; 0x26
 800623c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006240:	4629      	mov	r1, r5
 8006242:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006246:	4650      	mov	r0, sl
 8006248:	66a5      	str	r5, [r4, #104]	; 0x68
 800624a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800624e:	f025 fe04 	bl	802be5a <memset>
 8006252:	4650      	mov	r0, sl
 8006254:	f7fc fc08 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8006258:	4b58      	ldr	r3, [pc, #352]	; (80063bc <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 800625a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800625c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006260:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006264:	a90a      	add	r1, sp, #40	; 0x28
 8006266:	4650      	mov	r0, sl
 8006268:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800626c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006270:	f00e f827 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006274:	4648      	mov	r0, r9
 8006276:	f7fc fc5b 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800627a:	4b51      	ldr	r3, [pc, #324]	; (80063c0 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 800627c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006280:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006284:	4618      	mov	r0, r3
 8006286:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800628a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800628e:	ee08 3a90 	vmov	s17, r3
 8006292:	f7fc fc4d 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8006296:	4638      	mov	r0, r7
 8006298:	f00c fd06 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 800629c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80062a0:	4618      	mov	r0, r3
 80062a2:	9303      	str	r3, [sp, #12]
 80062a4:	f7fc f9e4 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80062a8:	4b46      	ldr	r3, [pc, #280]	; (80063c4 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80062aa:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80062ae:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80062b2:	3324      	adds	r3, #36	; 0x24
 80062b4:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80062b8:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80062bc:	4640      	mov	r0, r8
 80062be:	f7fc fc37 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80062c2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80062c6:	4618      	mov	r0, r3
 80062c8:	ee08 3a10 	vmov	s16, r3
 80062cc:	f7fc fc30 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80062d0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80062d4:	4618      	mov	r0, r3
 80062d6:	ee09 3a10 	vmov	s18, r3
 80062da:	f00e f929 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80062de:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80062e2:	4618      	mov	r0, r3
 80062e4:	ee09 3a90 	vmov	s19, r3
 80062e8:	f00e f922 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80062ec:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80062f0:	4618      	mov	r0, r3
 80062f2:	ee0a 3a10 	vmov	s20, r3
 80062f6:	f00e f91b 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80062fa:	4a33      	ldr	r2, [pc, #204]	; (80063c8 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 80062fc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006300:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006304:	4a31      	ldr	r2, [pc, #196]	; (80063cc <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006306:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800630a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800630e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006312:	f00e ffc9 	bl	80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006316:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800631a:	462a      	mov	r2, r5
 800631c:	4658      	mov	r0, fp
 800631e:	9300      	str	r3, [sp, #0]
 8006320:	4629      	mov	r1, r5
 8006322:	23f0      	movs	r3, #240	; 0xf0
 8006324:	f7fc fb7b 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006328:	1d26      	adds	r6, r4, #4
        color = newColor;
 800632a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800632e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006330:	4659      	mov	r1, fp
 8006332:	4630      	mov	r0, r6
 8006334:	f00a fbec 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006338:	462a      	mov	r2, r5
 800633a:	4650      	mov	r0, sl
 800633c:	4629      	mov	r1, r5
 800633e:	f7fc fb61 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006342:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006344:	4650      	mov	r0, sl
 8006346:	a90a      	add	r1, sp, #40	; 0x28
 8006348:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800634c:	f00d ffb9 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006350:	4651      	mov	r1, sl
 8006352:	4630      	mov	r0, r6
 8006354:	f00a fbdc 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006358:	f44f 729a 	mov.w	r2, #308	; 0x134
 800635c:	2156      	movs	r1, #86	; 0x56
 800635e:	4648      	mov	r0, r9
 8006360:	f7fc fb50 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006364:	f04f 33ff 	mov.w	r3, #4294967295
 8006368:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800636c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006370:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006374:	f10d 0b10 	add.w	fp, sp, #16
 8006378:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800637c:	4649      	mov	r1, r9
 800637e:	4658      	mov	r0, fp
 8006380:	4798      	blx	r3
 8006382:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006386:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800638a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800638e:	4b10      	ldr	r3, [pc, #64]	; (80063d0 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8006390:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8006392:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006396:	b92b      	cbnz	r3, 80063a4 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8006398:	4b0e      	ldr	r3, [pc, #56]	; (80063d4 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 800639a:	4a0f      	ldr	r2, [pc, #60]	; (80063d8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 800639c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800639e:	480f      	ldr	r0, [pc, #60]	; (80063dc <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80063a0:	f025 fb56 	bl	802ba50 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80063a4:	4b0e      	ldr	r3, [pc, #56]	; (80063e0 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063a6:	881b      	ldrh	r3, [r3, #0]
 80063a8:	2b29      	cmp	r3, #41	; 0x29
 80063aa:	d81d      	bhi.n	80063e8 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80063ac:	4b0d      	ldr	r3, [pc, #52]	; (80063e4 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80063ae:	4a0a      	ldr	r2, [pc, #40]	; (80063d8 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80063b0:	2161      	movs	r1, #97	; 0x61
 80063b2:	e7f4      	b.n	800639e <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80063b4:	0802ebcc 	.word	0x0802ebcc
 80063b8:	0802fb34 	.word	0x0802fb34
 80063bc:	0802fd80 	.word	0x0802fd80
 80063c0:	0802d680 	.word	0x0802d680
 80063c4:	0802f868 	.word	0x0802f868
 80063c8:	0802ebb4 	.word	0x0802ebb4
 80063cc:	080061c9 	.word	0x080061c9
 80063d0:	2001388c 	.word	0x2001388c
 80063d4:	0802d430 	.word	0x0802d430
 80063d8:	0802d535 	.word	0x0802d535
 80063dc:	0802d4ad 	.word	0x0802d4ad
 80063e0:	20013890 	.word	0x20013890
 80063e4:	0802d4f4 	.word	0x0802d4f4
        return texts->getText(typedTextId);
 80063e8:	4b95      	ldr	r3, [pc, #596]	; (8006640 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 80063ea:	2129      	movs	r1, #41	; 0x29
 80063ec:	6818      	ldr	r0, [r3, #0]
 80063ee:	f002 fb0d 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80063f2:	4a94      	ldr	r2, [pc, #592]	; (8006644 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 80063f4:	4603      	mov	r3, r0
 80063f6:	2104      	movs	r1, #4
 80063f8:	4650      	mov	r0, sl
 80063fa:	f013 fe0f 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80063fe:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006402:	4648      	mov	r0, r9
 8006404:	f00d f98c 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006408:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006648 <_ZN19MeasurementViewBaseC1Ev+0x444>
 800640c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006410:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8006412:	a90a      	add	r1, sp, #40	; 0x28
 8006414:	4648      	mov	r0, r9
 8006416:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800641a:	f00d f9a1 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800641e:	4649      	mov	r1, r9
 8006420:	4630      	mov	r0, r6
 8006422:	f00a fb75 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8006426:	223c      	movs	r2, #60	; 0x3c
 8006428:	ee18 0a90 	vmov	r0, s17
 800642c:	213d      	movs	r1, #61	; 0x3d
 800642e:	f7fc fae9 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006432:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006436:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800643a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800643e:	4658      	mov	r0, fp
        linespace = space;
 8006440:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006444:	f00c fef2 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006448:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800644c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006450:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006454:	2337      	movs	r3, #55	; 0x37
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006456:	ee18 0a90 	vmov	r0, s17
 800645a:	a90a      	add	r1, sp, #40	; 0x28
 800645c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006460:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006464:	f00d f97c 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006468:	ee18 1a90 	vmov	r1, s17
 800646c:	4630      	mov	r0, r6
 800646e:	f00a fb4f 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006472:	230a      	movs	r3, #10
 8006474:	9300      	str	r3, [sp, #0]
 8006476:	2232      	movs	r2, #50	; 0x32
 8006478:	23f0      	movs	r3, #240	; 0xf0
 800647a:	4629      	mov	r1, r5
 800647c:	4638      	mov	r0, r7
 800647e:	f7fc face 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006482:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006486:	22a0      	movs	r2, #160	; 0xa0
 8006488:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800648c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006490:	9b03      	ldr	r3, [sp, #12]
 8006492:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006496:	4611      	mov	r1, r2
 8006498:	4638      	mov	r0, r7
 800649a:	f00c fd1b 	bl	8012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800649e:	22a0      	movs	r2, #160	; 0xa0
 80064a0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80064a4:	4638      	mov	r0, r7
 80064a6:	f00c fd20 	bl	8012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80064aa:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80064ae:	2b20      	cmp	r3, #32
 80064b0:	d005      	beq.n	80064be <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80064b2:	2320      	movs	r3, #32
 80064b4:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80064b8:	4638      	mov	r0, r7
 80064ba:	f00c fc15 	bl	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80064be:	4638      	mov	r0, r7
 80064c0:	2101      	movs	r1, #1
 80064c2:	f00c fd1d 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80064c6:	4639      	mov	r1, r7
 80064c8:	4630      	mov	r0, r6
 80064ca:	f00a fb21 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80064ce:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80064d2:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80064d4:	2223      	movs	r2, #35	; 0x23
 80064d6:	4640      	mov	r0, r8
        linespace = space;
 80064d8:	f04f 0a00 	mov.w	sl, #0
 80064dc:	2145      	movs	r1, #69	; 0x45
 80064de:	f7fc fa91 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80064e2:	4641      	mov	r1, r8
 80064e4:	4638      	mov	r0, r7
        color = newColor;
 80064e6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80064ea:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80064ee:	f00c fe9d 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064f2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80064f6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80064fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064fe:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006648 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006502:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006506:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8006508:	a90a      	add	r1, sp, #40	; 0x28
 800650a:	4640      	mov	r0, r8
 800650c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006510:	f00d f926 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006514:	4641      	mov	r1, r8
 8006516:	4630      	mov	r0, r6
 8006518:	f00a fafa 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800651c:	ee18 0a10 	vmov	r0, s16
 8006520:	220c      	movs	r2, #12
 8006522:	2136      	movs	r1, #54	; 0x36
 8006524:	f7fc fa6e 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006528:	ee18 1a10 	vmov	r1, s16
 800652c:	4638      	mov	r0, r7
        color = newColor;
 800652e:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006532:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006536:	f00c fe79 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800653a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800653e:	ee18 3a10 	vmov	r3, s16
 8006542:	333c      	adds	r3, #60	; 0x3c
 8006544:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006548:	2352      	movs	r3, #82	; 0x52
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 800654a:	ee18 0a10 	vmov	r0, s16
 800654e:	a90a      	add	r1, sp, #40	; 0x28
 8006550:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006554:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006558:	f00d f902 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800655c:	ee18 1a10 	vmov	r1, s16
 8006560:	4630      	mov	r0, r6
 8006562:	f00a fad5 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006566:	ee19 0a10 	vmov	r0, s18
 800656a:	22f0      	movs	r2, #240	; 0xf0
 800656c:	2121      	movs	r1, #33	; 0x21
 800656e:	f7fc fa49 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006572:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006576:	aa0a      	add	r2, sp, #40	; 0x28
 8006578:	f04f 0802 	mov.w	r8, #2
 800657c:	a909      	add	r1, sp, #36	; 0x24
 800657e:	ee19 0a10 	vmov	r0, s18
 8006582:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006586:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800658a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800658e:	f00d fca2 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006592:	2350      	movs	r3, #80	; 0x50
 8006594:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006598:	3710      	adds	r7, #16
        updateTextPosition();
 800659a:	ee19 0a10 	vmov	r0, s18
 800659e:	f7fc fa75 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80065a2:	ee19 1a10 	vmov	r1, s18
 80065a6:	4630      	mov	r0, r6
        colorPressed = col;
 80065a8:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80065ac:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80065b0:	f00a faae 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80065b4:	ee19 0a90 	vmov	r0, s19
 80065b8:	22aa      	movs	r2, #170	; 0xaa
 80065ba:	2121      	movs	r1, #33	; 0x21
 80065bc:	f7fc fa22 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80065c0:	aa0a      	add	r2, sp, #40	; 0x28
 80065c2:	a909      	add	r1, sp, #36	; 0x24
 80065c4:	ee19 0a90 	vmov	r0, s19
 80065c8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80065cc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80065d0:	f00d fc81 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80065d4:	234f      	movs	r3, #79	; 0x4f
 80065d6:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80065da:	ee19 0a90 	vmov	r0, s19
 80065de:	f7fc fa55 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80065e2:	ee19 1a90 	vmov	r1, s19
 80065e6:	4630      	mov	r0, r6
        colorPressed = col;
 80065e8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80065ec:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80065f0:	f00a fa8e 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80065f4:	ee1a 0a10 	vmov	r0, s20
 80065f8:	2264      	movs	r2, #100	; 0x64
 80065fa:	2121      	movs	r1, #33	; 0x21
 80065fc:	f7fc fa02 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006600:	aa0a      	add	r2, sp, #40	; 0x28
 8006602:	a909      	add	r1, sp, #36	; 0x24
 8006604:	ee1a 0a10 	vmov	r0, s20
 8006608:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800660c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006610:	f00d fc61 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006614:	234e      	movs	r3, #78	; 0x4e
        updateTextPosition();
 8006616:	ee1a 0a10 	vmov	r0, s20
 800661a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800661e:	f7fc fa35 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006622:	4630      	mov	r0, r6
        colorPressed = col;
 8006624:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006628:	ee1a 1a10 	vmov	r1, s20
 800662c:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006630:	f00a fa6e 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006634:	4620      	mov	r0, r4
 8006636:	b00d      	add	sp, #52	; 0x34
 8006638:	ecbd 8b06 	vpop	{d8-d10}
 800663c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006640:	20013898 	.word	0x20013898
 8006644:	0802d56d 	.word	0x0802d56d
 8006648:	0802d5e0 	.word	0x0802d5e0

0800664c <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 800664c:	4770      	bx	lr

0800664e <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800664e:	4770      	bx	lr

08006650 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006650:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006652:	68c2      	ldr	r2, [r0, #12]
 8006654:	6844      	ldr	r4, [r0, #4]
 8006656:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006658:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800665a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800665e:	07d2      	lsls	r2, r2, #31
 8006660:	bf48      	it	mi
 8006662:	5962      	ldrmi	r2, [r4, r5]
 8006664:	689b      	ldr	r3, [r3, #8]
    }
 8006666:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006668:	bf48      	it	mi
 800666a:	58d3      	ldrmi	r3, [r2, r3]
 800666c:	4718      	bx	r3

0800666e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800666e:	6843      	ldr	r3, [r0, #4]
 8006670:	b12b      	cbz	r3, 800667e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006672:	6883      	ldr	r3, [r0, #8]
 8006674:	b92b      	cbnz	r3, 8006682 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006676:	68c0      	ldr	r0, [r0, #12]
 8006678:	f000 0001 	and.w	r0, r0, #1
 800667c:	4770      	bx	lr
 800667e:	4618      	mov	r0, r3
 8006680:	4770      	bx	lr
 8006682:	2001      	movs	r0, #1
    }
 8006684:	4770      	bx	lr

08006686 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006686:	b510      	push	{r4, lr}
 8006688:	2110      	movs	r1, #16
 800668a:	4604      	mov	r4, r0
 800668c:	f024 fbcd 	bl	802ae2a <_ZdlPvj>
 8006690:	4620      	mov	r0, r4
 8006692:	bd10      	pop	{r4, pc}

08006694 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8006694:	b510      	push	{r4, lr}
 8006696:	4b03      	ldr	r3, [pc, #12]	; (80066a4 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8006698:	6003      	str	r3, [r0, #0]
 800669a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800669c:	f00e fe0e 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066a0:	4620      	mov	r0, r4
 80066a2:	bd10      	pop	{r4, pc}
 80066a4:	0802ec18 	.word	0x0802ec18

080066a8 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80066a8:	b507      	push	{r0, r1, r2, lr}
 80066aa:	4b07      	ldr	r3, [pc, #28]	; (80066c8 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 80066ac:	6003      	str	r3, [r0, #0]
 80066ae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80066b0:	f00e fe04 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80066b4:	9801      	ldr	r0, [sp, #4]
 80066b6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80066ba:	f024 fbb6 	bl	802ae2a <_ZdlPvj>
 80066be:	9801      	ldr	r0, [sp, #4]
 80066c0:	b003      	add	sp, #12
 80066c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80066c6:	bf00      	nop
 80066c8:	0802ec18 	.word	0x0802ec18

080066cc <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80066cc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80066ce:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80066d2:	4299      	cmp	r1, r3
{
 80066d4:	4604      	mov	r4, r0
 80066d6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80066d8:	d103      	bne.n	80066e2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80066da:	f010 faf1 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80066de:	f7fe f983 	bl	80049e8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 80066e2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80066e6:	429d      	cmp	r5, r3
 80066e8:	d103      	bne.n	80066f2 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80066ea:	f010 fae9 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 80066ee:	f7fe f9eb 	bl	8004ac8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 80066f2:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 80066f6:	42a5      	cmp	r5, r4
 80066f8:	d105      	bne.n	8006706 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80066fa:	f010 fae1 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 80066fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006702:	f7fe b9d1 	b.w	8004aa8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8006706:	bd38      	pop	{r3, r4, r5, pc}

08006708 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8006708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800670c:	ed2d 8b06 	vpush	{d8-d10}
 8006710:	4604      	mov	r4, r0
 8006712:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006714:	46a3      	mov	fp, r4
 8006716:	2500      	movs	r5, #0
 8006718:	f011 ff52 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
 800671c:	4b66      	ldr	r3, [pc, #408]	; (80068b8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 800671e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006720:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006724:	2226      	movs	r2, #38	; 0x26
 8006726:	4629      	mov	r1, r5
 8006728:	4658      	mov	r0, fp
 800672a:	f025 fb96 	bl	802be5a <memset>
 800672e:	4658      	mov	r0, fp
 8006730:	f7fc f99a 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8006734:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006738:	26ff      	movs	r6, #255	; 0xff
 800673a:	4b60      	ldr	r3, [pc, #384]	; (80068bc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 800673c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800673e:	2226      	movs	r2, #38	; 0x26
 8006740:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006744:	4629      	mov	r1, r5
 8006746:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800674a:	4650      	mov	r0, sl
 800674c:	66a5      	str	r5, [r4, #104]	; 0x68
 800674e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006752:	f025 fb82 	bl	802be5a <memset>
 8006756:	4650      	mov	r0, sl
 8006758:	f7fc f986 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 800675c:	4b58      	ldr	r3, [pc, #352]	; (80068c0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 800675e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006760:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006764:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006768:	a90a      	add	r1, sp, #40	; 0x28
 800676a:	4650      	mov	r0, sl
 800676c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006770:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006774:	f00d fda5 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006778:	4648      	mov	r0, r9
 800677a:	f7fc f9d9 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 800677e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8006782:	4b50      	ldr	r3, [pc, #320]	; (80068c4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8006784:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006788:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800678c:	4638      	mov	r0, r7
 800678e:	f00c fa8b 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 8006792:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006796:	4618      	mov	r0, r3
 8006798:	9303      	str	r3, [sp, #12]
 800679a:	f7fb ff69 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800679e:	4b4a      	ldr	r3, [pc, #296]	; (80068c8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 80067a0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80067a4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80067a8:	3324      	adds	r3, #36	; 0x24
 80067aa:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80067ae:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80067b2:	4640      	mov	r0, r8
 80067b4:	f7fc f9bc 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80067b8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80067bc:	4618      	mov	r0, r3
 80067be:	ee08 3a10 	vmov	s16, r3
 80067c2:	f7fc f9b5 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80067c6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80067ca:	4618      	mov	r0, r3
 80067cc:	ee08 3a90 	vmov	s17, r3
 80067d0:	f7fc f9ae 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80067d4:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80067d8:	4618      	mov	r0, r3
 80067da:	ee09 3a10 	vmov	s18, r3
 80067de:	f00d fea7 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067e2:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80067e6:	4618      	mov	r0, r3
 80067e8:	ee09 3a90 	vmov	s19, r3
 80067ec:	f00d fea0 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80067f0:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80067f4:	4618      	mov	r0, r3
 80067f6:	ee0a 3a10 	vmov	s20, r3
 80067fa:	f00d fe99 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80067fe:	4a33      	ldr	r2, [pc, #204]	; (80068cc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006800:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006804:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006808:	4a31      	ldr	r2, [pc, #196]	; (80068d0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800680a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800680e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006812:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006816:	f00e fd47 	bl	80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800681a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800681e:	462a      	mov	r2, r5
 8006820:	4658      	mov	r0, fp
 8006822:	9300      	str	r3, [sp, #0]
 8006824:	4629      	mov	r1, r5
 8006826:	23f0      	movs	r3, #240	; 0xf0
 8006828:	f7fc f8f9 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 800682c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800682e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006832:	66a3      	str	r3, [r4, #104]	; 0x68
 8006834:	4659      	mov	r1, fp
 8006836:	4630      	mov	r0, r6
 8006838:	f00a f96a 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800683c:	462a      	mov	r2, r5
 800683e:	4650      	mov	r0, sl
 8006840:	4629      	mov	r1, r5
 8006842:	f7fc f8df 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006846:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006848:	4650      	mov	r0, sl
 800684a:	a90a      	add	r1, sp, #40	; 0x28
 800684c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006850:	f00d fd37 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006854:	4651      	mov	r1, sl
 8006856:	4630      	mov	r0, r6
 8006858:	f00a f95a 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 800685c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006860:	2156      	movs	r1, #86	; 0x56
 8006862:	4648      	mov	r0, r9
 8006864:	f7fc f8ce 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006868:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800686c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006870:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8006874:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8006878:	4650      	mov	r0, sl
 800687a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800687e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006882:	4649      	mov	r1, r9
 8006884:	4798      	blx	r3
 8006886:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800688a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800688e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006892:	4b10      	ldr	r3, [pc, #64]	; (80068d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8006894:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8006896:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 800689a:	b92b      	cbnz	r3, 80068a8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 800689c:	4b0e      	ldr	r3, [pc, #56]	; (80068d8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 800689e:	4a0f      	ldr	r2, [pc, #60]	; (80068dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80068a0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068a2:	480f      	ldr	r0, [pc, #60]	; (80068e0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 80068a4:	f025 f8d4 	bl	802ba50 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80068a8:	4b0e      	ldr	r3, [pc, #56]	; (80068e4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068aa:	881b      	ldrh	r3, [r3, #0]
 80068ac:	2b24      	cmp	r3, #36	; 0x24
 80068ae:	d81d      	bhi.n	80068ec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 80068b0:	4b0d      	ldr	r3, [pc, #52]	; (80068e8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 80068b2:	4a0a      	ldr	r2, [pc, #40]	; (80068dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80068b4:	2161      	movs	r1, #97	; 0x61
 80068b6:	e7f4      	b.n	80068a2 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 80068b8:	0802ec18 	.word	0x0802ec18
 80068bc:	0802fb34 	.word	0x0802fb34
 80068c0:	0802fd80 	.word	0x0802fd80
 80068c4:	0802d680 	.word	0x0802d680
 80068c8:	0802f868 	.word	0x0802f868
 80068cc:	0802ec00 	.word	0x0802ec00
 80068d0:	080066cd 	.word	0x080066cd
 80068d4:	2001388c 	.word	0x2001388c
 80068d8:	0802d430 	.word	0x0802d430
 80068dc:	0802d535 	.word	0x0802d535
 80068e0:	0802d4ad 	.word	0x0802d4ad
 80068e4:	20013890 	.word	0x20013890
 80068e8:	0802d4f4 	.word	0x0802d4f4
        return texts->getText(typedTextId);
 80068ec:	4b93      	ldr	r3, [pc, #588]	; (8006b3c <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 80068ee:	2124      	movs	r1, #36	; 0x24
 80068f0:	6818      	ldr	r0, [r3, #0]
 80068f2:	f002 f88b 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80068f6:	4a92      	ldr	r2, [pc, #584]	; (8006b40 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 80068f8:	4603      	mov	r3, r0
 80068fa:	2104      	movs	r1, #4
 80068fc:	4650      	mov	r0, sl
 80068fe:	f013 fb8d 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006902:	4648      	mov	r0, r9
        wc1 = value;
 8006904:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006908:	f00c ff0a 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800690c:	4b8d      	ldr	r3, [pc, #564]	; (8006b44 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 800690e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006910:	a90a      	add	r1, sp, #40	; 0x28
 8006912:	2325      	movs	r3, #37	; 0x25
 8006914:	4648      	mov	r0, r9
 8006916:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800691a:	f00c ff21 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800691e:	4649      	mov	r1, r9
 8006920:	4630      	mov	r0, r6
 8006922:	f00a f8f5 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006926:	230a      	movs	r3, #10
 8006928:	9300      	str	r3, [sp, #0]
 800692a:	2232      	movs	r2, #50	; 0x32
 800692c:	23f0      	movs	r3, #240	; 0xf0
 800692e:	4629      	mov	r1, r5
 8006930:	4638      	mov	r0, r7
 8006932:	f7fc f874 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006936:	9b03      	ldr	r3, [sp, #12]
 8006938:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800693c:	22a0      	movs	r2, #160	; 0xa0
 800693e:	4611      	mov	r1, r2
 8006940:	4638      	mov	r0, r7
 8006942:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006946:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800694a:	f00c fac3 	bl	8012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800694e:	22a0      	movs	r2, #160	; 0xa0
 8006950:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006954:	4638      	mov	r0, r7
 8006956:	f00c fac8 	bl	8012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800695a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800695e:	2b20      	cmp	r3, #32
 8006960:	d005      	beq.n	800696e <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006962:	2320      	movs	r3, #32
 8006964:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8006968:	4638      	mov	r0, r7
 800696a:	f00c f9bd 	bl	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800696e:	4638      	mov	r0, r7
 8006970:	2101      	movs	r1, #1
 8006972:	f00c fac5 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006976:	4639      	mov	r1, r7
 8006978:	4630      	mov	r0, r6
 800697a:	ad04      	add	r5, sp, #16
        color = newColor;
 800697c:	f04f 37ff 	mov.w	r7, #4294967295
 8006980:	f00a f8c6 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006984:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006988:	2223      	movs	r2, #35	; 0x23
 800698a:	4640      	mov	r0, r8
 800698c:	2145      	movs	r1, #69	; 0x45
 800698e:	f7fc f839 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006992:	4641      	mov	r1, r8
 8006994:	4628      	mov	r0, r5
        color = newColor;
 8006996:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800699a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800699e:	f00c fc45 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069a2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80069a6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80069aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069ae:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006b44 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80069b2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80069b6:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80069b8:	a90a      	add	r1, sp, #40	; 0x28
 80069ba:	4640      	mov	r0, r8
 80069bc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80069c0:	f00c fece 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80069c4:	4641      	mov	r1, r8
 80069c6:	4630      	mov	r0, r6
 80069c8:	f00a f8a2 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80069cc:	ee18 0a10 	vmov	r0, s16
 80069d0:	220c      	movs	r2, #12
 80069d2:	2136      	movs	r1, #54	; 0x36
 80069d4:	f7fc f816 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80069d8:	ee18 1a10 	vmov	r1, s16
 80069dc:	4628      	mov	r0, r5
        color = newColor;
 80069de:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80069e2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80069e6:	f00c fc21 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80069ea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80069ee:	ee18 3a10 	vmov	r3, s16
 80069f2:	333c      	adds	r3, #60	; 0x3c
 80069f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80069f8:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 80069fa:	ee18 0a10 	vmov	r0, s16
 80069fe:	a90a      	add	r1, sp, #40	; 0x28
 8006a00:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a04:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a08:	f00c feaa 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a0c:	ee18 1a10 	vmov	r1, s16
 8006a10:	4630      	mov	r0, r6
 8006a12:	f00a f87d 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006a16:	ee18 0a90 	vmov	r0, s17
 8006a1a:	223c      	movs	r2, #60	; 0x3c
 8006a1c:	2121      	movs	r1, #33	; 0x21
 8006a1e:	f7fb fff1 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006a22:	ee18 1a90 	vmov	r1, s17
 8006a26:	4628      	mov	r0, r5
        color = newColor;
 8006a28:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006a2c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006a30:	f00c fbfc 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a34:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006a38:	ee18 3a90 	vmov	r3, s17
 8006a3c:	333c      	adds	r3, #60	; 0x3c
 8006a3e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006a42:	2333      	movs	r3, #51	; 0x33
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006a44:	ee18 0a90 	vmov	r0, s17
 8006a48:	a90a      	add	r1, sp, #40	; 0x28
 8006a4a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a4e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006a52:	f00c fe85 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a56:	ee18 1a90 	vmov	r1, s17
 8006a5a:	4630      	mov	r0, r6
 8006a5c:	f00a f858 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006a60:	ee19 0a10 	vmov	r0, s18
 8006a64:	22f0      	movs	r2, #240	; 0xf0
 8006a66:	2121      	movs	r1, #33	; 0x21
 8006a68:	f7fb ffcc 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006a6c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a70:	aa0a      	add	r2, sp, #40	; 0x28
 8006a72:	f04f 0802 	mov.w	r8, #2
 8006a76:	a909      	add	r1, sp, #36	; 0x24
 8006a78:	ee19 0a10 	vmov	r0, s18
 8006a7c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a80:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006a84:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a88:	f00d fa25 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006a8c:	2342      	movs	r3, #66	; 0x42
 8006a8e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006a92:	3510      	adds	r5, #16
        updateTextPosition();
 8006a94:	ee19 0a10 	vmov	r0, s18
 8006a98:	f7fb fff8 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006a9c:	ee19 1a10 	vmov	r1, s18
 8006aa0:	4630      	mov	r0, r6
        colorPressed = col;
 8006aa2:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006aa6:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8006aaa:	f00a f831 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006aae:	ee19 0a90 	vmov	r0, s19
 8006ab2:	22aa      	movs	r2, #170	; 0xaa
 8006ab4:	2121      	movs	r1, #33	; 0x21
 8006ab6:	f7fb ffa5 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006aba:	aa0a      	add	r2, sp, #40	; 0x28
 8006abc:	a909      	add	r1, sp, #36	; 0x24
 8006abe:	ee19 0a90 	vmov	r0, s19
 8006ac2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006ac6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006aca:	f00d fa04 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006ace:	2341      	movs	r3, #65	; 0x41
 8006ad0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006ad4:	ee19 0a90 	vmov	r0, s19
 8006ad8:	f7fb ffd8 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006adc:	ee19 1a90 	vmov	r1, s19
 8006ae0:	4630      	mov	r0, r6
        colorPressed = col;
 8006ae2:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006ae6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006aea:	f00a f811 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006aee:	ee1a 0a10 	vmov	r0, s20
 8006af2:	2264      	movs	r2, #100	; 0x64
 8006af4:	2121      	movs	r1, #33	; 0x21
 8006af6:	f7fb ff85 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006afa:	aa0a      	add	r2, sp, #40	; 0x28
 8006afc:	a909      	add	r1, sp, #36	; 0x24
 8006afe:	ee1a 0a10 	vmov	r0, s20
 8006b02:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006b06:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006b0a:	f00d f9e4 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006b0e:	2340      	movs	r3, #64	; 0x40
        updateTextPosition();
 8006b10:	ee1a 0a10 	vmov	r0, s20
 8006b14:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006b18:	f7fb ffb8 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006b1c:	4630      	mov	r0, r6
        colorPressed = col;
 8006b1e:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006b22:	ee1a 1a10 	vmov	r1, s20
 8006b26:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006b2a:	f009 fff1 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b2e:	4620      	mov	r0, r4
 8006b30:	b00d      	add	sp, #52	; 0x34
 8006b32:	ecbd 8b06 	vpop	{d8-d10}
 8006b36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b3a:	bf00      	nop
 8006b3c:	20013898 	.word	0x20013898
 8006b40:	0802d56d 	.word	0x0802d56d
 8006b44:	0802d5e0 	.word	0x0802d5e0

08006b48 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8006b48:	4770      	bx	lr

08006b4a <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b4a:	4770      	bx	lr

08006b4c <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b4c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b4e:	68c2      	ldr	r2, [r0, #12]
 8006b50:	6844      	ldr	r4, [r0, #4]
 8006b52:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006b54:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006b56:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006b5a:	07d2      	lsls	r2, r2, #31
 8006b5c:	bf48      	it	mi
 8006b5e:	5962      	ldrmi	r2, [r4, r5]
 8006b60:	689b      	ldr	r3, [r3, #8]
    }
 8006b62:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b64:	bf48      	it	mi
 8006b66:	58d3      	ldrmi	r3, [r2, r3]
 8006b68:	4718      	bx	r3

08006b6a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006b6a:	6843      	ldr	r3, [r0, #4]
 8006b6c:	b12b      	cbz	r3, 8006b7a <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006b6e:	6883      	ldr	r3, [r0, #8]
 8006b70:	b92b      	cbnz	r3, 8006b7e <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006b72:	68c0      	ldr	r0, [r0, #12]
 8006b74:	f000 0001 	and.w	r0, r0, #1
 8006b78:	4770      	bx	lr
 8006b7a:	4618      	mov	r0, r3
 8006b7c:	4770      	bx	lr
 8006b7e:	2001      	movs	r0, #1
    }
 8006b80:	4770      	bx	lr

08006b82 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b82:	b510      	push	{r4, lr}
 8006b84:	2110      	movs	r1, #16
 8006b86:	4604      	mov	r4, r0
 8006b88:	f024 f94f 	bl	802ae2a <_ZdlPvj>
 8006b8c:	4620      	mov	r0, r4
 8006b8e:	bd10      	pop	{r4, pc}

08006b90 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006b90:	b510      	push	{r4, lr}
 8006b92:	4b03      	ldr	r3, [pc, #12]	; (8006ba0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8006b94:	6003      	str	r3, [r0, #0]
 8006b96:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006b98:	f00e fb90 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006b9c:	4620      	mov	r0, r4
 8006b9e:	bd10      	pop	{r4, pc}
 8006ba0:	0802ec64 	.word	0x0802ec64

08006ba4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006ba4:	b507      	push	{r0, r1, r2, lr}
 8006ba6:	4b07      	ldr	r3, [pc, #28]	; (8006bc4 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8006ba8:	6003      	str	r3, [r0, #0]
 8006baa:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006bac:	f00e fb86 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006bb0:	9801      	ldr	r0, [sp, #4]
 8006bb2:	f241 015c 	movw	r1, #4188	; 0x105c
 8006bb6:	f024 f938 	bl	802ae2a <_ZdlPvj>
 8006bba:	9801      	ldr	r0, [sp, #4]
 8006bbc:	b003      	add	sp, #12
 8006bbe:	f85d fb04 	ldr.w	pc, [sp], #4
 8006bc2:	bf00      	nop
 8006bc4:	0802ec64 	.word	0x0802ec64

08006bc8 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006bc8:	3098      	adds	r0, #152	; 0x98
 8006bca:	4288      	cmp	r0, r1
{
 8006bcc:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006bce:	d105      	bne.n	8006bdc <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006bd0:	f010 f876 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006bd4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006bd8:	f7fd bf56 	b.w	8004a88 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006bdc:	bd08      	pop	{r3, pc}
	...

08006be0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006be4:	ed2d 8b02 	vpush	{d8}
 8006be8:	4604      	mov	r4, r0
 8006bea:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006bec:	46a1      	mov	r9, r4
 8006bee:	2500      	movs	r5, #0
 8006bf0:	f011 fce6 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
 8006bf4:	4ba5      	ldr	r3, [pc, #660]	; (8006e8c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 8006bf6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006bf8:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006bfc:	2226      	movs	r2, #38	; 0x26
 8006bfe:	4629      	mov	r1, r5
 8006c00:	4648      	mov	r0, r9
 8006c02:	f025 f92a 	bl	802be5a <memset>
 8006c06:	4648      	mov	r0, r9
 8006c08:	f7fb ff2e 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8006c0c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006c10:	26ff      	movs	r6, #255	; 0xff
 8006c12:	4b9f      	ldr	r3, [pc, #636]	; (8006e90 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006c14:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006c16:	2226      	movs	r2, #38	; 0x26
 8006c18:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c1c:	4629      	mov	r1, r5
 8006c1e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006c22:	4640      	mov	r0, r8
 8006c24:	66a5      	str	r5, [r4, #104]	; 0x68
 8006c26:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c2a:	f025 f916 	bl	802be5a <memset>
 8006c2e:	4640      	mov	r0, r8
 8006c30:	f7fb ff1a 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8006c34:	4b97      	ldr	r3, [pc, #604]	; (8006e94 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 8006c36:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006c38:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006c3c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006c40:	a90a      	add	r1, sp, #40	; 0x28
 8006c42:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006c46:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006c48:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006c4c:	f00d fb39 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c50:	4658      	mov	r0, fp
 8006c52:	f00d fc6d 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006c56:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006c5a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006c5e:	4618      	mov	r0, r3
 8006c60:	ee08 3a90 	vmov	s17, r3
 8006c64:	f7fb ff64 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8006c68:	4638      	mov	r0, r7
 8006c6a:	f00c f81d 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 8006c6e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006c72:	4618      	mov	r0, r3
 8006c74:	9303      	str	r3, [sp, #12]
 8006c76:	f7fb fcfb 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006c7a:	4b87      	ldr	r3, [pc, #540]	; (8006e98 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 8006c7c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006c80:	3324      	adds	r3, #36	; 0x24
 8006c82:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006c86:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006c8a:	4618      	mov	r0, r3
 8006c8c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006c90:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006c94:	ee08 3a10 	vmov	s16, r3
 8006c98:	f7fb ff4a 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8006c9c:	4650      	mov	r0, sl
 8006c9e:	f7fb ff47 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006ca2:	4a7e      	ldr	r2, [pc, #504]	; (8006e9c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8006ca4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006ca8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006cac:	4a7c      	ldr	r2, [pc, #496]	; (8006ea0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006cae:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006cb2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006cb6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006cba:	f00e faf5 	bl	80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006cbe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006cc2:	462a      	mov	r2, r5
 8006cc4:	4648      	mov	r0, r9
 8006cc6:	9300      	str	r3, [sp, #0]
 8006cc8:	4629      	mov	r1, r5
 8006cca:	23f0      	movs	r3, #240	; 0xf0
 8006ccc:	f7fb fea7 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006cd0:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006cd2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006cd6:	66a3      	str	r3, [r4, #104]	; 0x68
 8006cd8:	4649      	mov	r1, r9
 8006cda:	4630      	mov	r0, r6
 8006cdc:	f009 ff18 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006ce0:	462a      	mov	r2, r5
 8006ce2:	4640      	mov	r0, r8
 8006ce4:	4629      	mov	r1, r5
 8006ce6:	f7fb fe8d 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006cea:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006cec:	4640      	mov	r0, r8
 8006cee:	a90a      	add	r1, sp, #40	; 0x28
 8006cf0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006cf4:	f00d fae5 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006cf8:	4641      	mov	r1, r8
 8006cfa:	4630      	mov	r0, r6
 8006cfc:	f009 ff08 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006d00:	4658      	mov	r0, fp
 8006d02:	f240 1201 	movw	r2, #257	; 0x101
 8006d06:	2121      	movs	r1, #33	; 0x21
 8006d08:	f7fb fe7c 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006d0c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d0e:	aa0a      	add	r2, sp, #40	; 0x28
 8006d10:	a909      	add	r1, sp, #36	; 0x24
 8006d12:	4658      	mov	r0, fp
 8006d14:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006d18:	2302      	movs	r3, #2
 8006d1a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d1e:	f00d f8da 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006d22:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 8006d24:	4658      	mov	r0, fp
 8006d26:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006d2a:	f7fb feaf 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006d2e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006d32:	330c      	adds	r3, #12
        color = col;
 8006d34:	f04f 39ff 	mov.w	r9, #4294967295
 8006d38:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006d3c:	4659      	mov	r1, fp
 8006d3e:	4630      	mov	r0, r6
        colorPressed = col;
 8006d40:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006d44:	f009 fee4 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006d48:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006d4c:	223c      	movs	r2, #60	; 0x3c
 8006d4e:	ee18 0a90 	vmov	r0, s17
 8006d52:	2117      	movs	r1, #23
 8006d54:	f7fb fe56 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006d58:	ee18 1a90 	vmov	r1, s17
 8006d5c:	4640      	mov	r0, r8
        color = newColor;
 8006d5e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006d62:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006d66:	f00c fa61 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d6a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d6e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006d72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006d76:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006ea4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 8006d7a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d7e:	2330      	movs	r3, #48	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006d80:	ee18 0a90 	vmov	r0, s17
 8006d84:	a90a      	add	r1, sp, #40	; 0x28
 8006d86:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d8a:	f00c fce9 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d8e:	ee18 1a90 	vmov	r1, s17
 8006d92:	4630      	mov	r0, r6
 8006d94:	f009 febc 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006d98:	230a      	movs	r3, #10
 8006d9a:	9300      	str	r3, [sp, #0]
 8006d9c:	2232      	movs	r2, #50	; 0x32
 8006d9e:	23f0      	movs	r3, #240	; 0xf0
 8006da0:	4629      	mov	r1, r5
 8006da2:	4638      	mov	r0, r7
 8006da4:	f7fb fe3b 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8006da8:	9b03      	ldr	r3, [sp, #12]
 8006daa:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dae:	22a0      	movs	r2, #160	; 0xa0
 8006db0:	4611      	mov	r1, r2
 8006db2:	4638      	mov	r0, r7
 8006db4:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006db8:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006dbc:	f00c f88a 	bl	8012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006dc0:	22a0      	movs	r2, #160	; 0xa0
 8006dc2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006dc6:	4638      	mov	r0, r7
 8006dc8:	f00c f88f 	bl	8012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006dcc:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006dd0:	2b20      	cmp	r3, #32
 8006dd2:	d005      	beq.n	8006de0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006dd4:	2320      	movs	r3, #32
 8006dd6:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006dda:	4638      	mov	r0, r7
 8006ddc:	f00b ff84 	bl	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006de0:	4638      	mov	r0, r7
 8006de2:	2101      	movs	r1, #1
 8006de4:	f00c f88c 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006de8:	4639      	mov	r1, r7
 8006dea:	4630      	mov	r0, r6
 8006dec:	f009 fe90 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006df0:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006df4:	ee18 0a10 	vmov	r0, s16
 8006df8:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006dfa:	2500      	movs	r5, #0
 8006dfc:	2145      	movs	r1, #69	; 0x45
 8006dfe:	f7fb fe01 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006e02:	ee18 1a10 	vmov	r1, s16
 8006e06:	4640      	mov	r0, r8
        color = newColor;
 8006e08:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006e0c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006e10:	f00c fa0c 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e14:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e18:	ee18 3a10 	vmov	r3, s16
 8006e1c:	333c      	adds	r3, #60	; 0x3c
 8006e1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e22:	2331      	movs	r3, #49	; 0x31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006e24:	ee18 0a10 	vmov	r0, s16
 8006e28:	a90a      	add	r1, sp, #40	; 0x28
 8006e2a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e2e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e32:	f00c fc95 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e36:	ee18 1a10 	vmov	r1, s16
 8006e3a:	4630      	mov	r0, r6
 8006e3c:	f009 fe68 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006e40:	220c      	movs	r2, #12
 8006e42:	4650      	mov	r0, sl
 8006e44:	2136      	movs	r1, #54	; 0x36
 8006e46:	f7fb fddd 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8006e4a:	4651      	mov	r1, sl
 8006e4c:	4640      	mov	r0, r8
        color = newColor;
 8006e4e:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006e52:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006e56:	f00c f9e9 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e5a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006e5e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006e62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e66:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006e68:	a90a      	add	r1, sp, #40	; 0x28
 8006e6a:	4650      	mov	r0, sl
 8006e6c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e70:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006e74:	f00c fc74 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e78:	4630      	mov	r0, r6
 8006e7a:	4651      	mov	r1, sl
 8006e7c:	f009 fe48 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006e80:	4620      	mov	r0, r4
 8006e82:	b00d      	add	sp, #52	; 0x34
 8006e84:	ecbd 8b02 	vpop	{d8}
 8006e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e8c:	0802ec64 	.word	0x0802ec64
 8006e90:	0802fb34 	.word	0x0802fb34
 8006e94:	0802fd80 	.word	0x0802fd80
 8006e98:	0802f868 	.word	0x0802f868
 8006e9c:	0802ec4c 	.word	0x0802ec4c
 8006ea0:	08006bc9 	.word	0x08006bc9
 8006ea4:	0802d5e0 	.word	0x0802d5e0

08006ea8 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006ea8:	4770      	bx	lr

08006eaa <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006eaa:	4770      	bx	lr

08006eac <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006eac:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006eae:	68c2      	ldr	r2, [r0, #12]
 8006eb0:	6844      	ldr	r4, [r0, #4]
 8006eb2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006eb4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006eb6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006eba:	07d2      	lsls	r2, r2, #31
 8006ebc:	bf48      	it	mi
 8006ebe:	5962      	ldrmi	r2, [r4, r5]
 8006ec0:	689b      	ldr	r3, [r3, #8]
    }
 8006ec2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ec4:	bf48      	it	mi
 8006ec6:	58d3      	ldrmi	r3, [r2, r3]
 8006ec8:	4718      	bx	r3

08006eca <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006eca:	6843      	ldr	r3, [r0, #4]
 8006ecc:	b12b      	cbz	r3, 8006eda <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006ece:	6883      	ldr	r3, [r0, #8]
 8006ed0:	b92b      	cbnz	r3, 8006ede <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006ed2:	68c0      	ldr	r0, [r0, #12]
 8006ed4:	f000 0001 	and.w	r0, r0, #1
 8006ed8:	4770      	bx	lr
 8006eda:	4618      	mov	r0, r3
 8006edc:	4770      	bx	lr
 8006ede:	2001      	movs	r0, #1
    }
 8006ee0:	4770      	bx	lr

08006ee2 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006ee2:	b510      	push	{r4, lr}
 8006ee4:	2110      	movs	r1, #16
 8006ee6:	4604      	mov	r4, r0
 8006ee8:	f023 ff9f 	bl	802ae2a <_ZdlPvj>
 8006eec:	4620      	mov	r0, r4
 8006eee:	bd10      	pop	{r4, pc}

08006ef0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006ef0:	b510      	push	{r4, lr}
 8006ef2:	4b03      	ldr	r3, [pc, #12]	; (8006f00 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006ef4:	6003      	str	r3, [r0, #0]
 8006ef6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ef8:	f00e f9e0 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006efc:	4620      	mov	r0, r4
 8006efe:	bd10      	pop	{r4, pc}
 8006f00:	0802ecb0 	.word	0x0802ecb0

08006f04 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006f04:	b507      	push	{r0, r1, r2, lr}
 8006f06:	4b07      	ldr	r3, [pc, #28]	; (8006f24 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006f08:	6003      	str	r3, [r0, #0]
 8006f0a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006f0c:	f00e f9d6 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006f10:	9801      	ldr	r0, [sp, #4]
 8006f12:	f241 015c 	movw	r1, #4188	; 0x105c
 8006f16:	f023 ff88 	bl	802ae2a <_ZdlPvj>
 8006f1a:	9801      	ldr	r0, [sp, #4]
 8006f1c:	b003      	add	sp, #12
 8006f1e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006f22:	bf00      	nop
 8006f24:	0802ecb0 	.word	0x0802ecb0

08006f28 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006f28:	3098      	adds	r0, #152	; 0x98
 8006f2a:	4288      	cmp	r0, r1
{
 8006f2c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006f2e:	d105      	bne.n	8006f3c <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006f30:	f00f fec6 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006f34:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006f38:	f7fd bda6 	b.w	8004a88 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006f3c:	bd08      	pop	{r3, pc}
	...

08006f40 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f44:	ed2d 8b02 	vpush	{d8}
 8006f48:	4604      	mov	r4, r0
 8006f4a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006f4c:	46a1      	mov	r9, r4
 8006f4e:	2500      	movs	r5, #0
 8006f50:	f011 fb36 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
 8006f54:	4ba5      	ldr	r3, [pc, #660]	; (80071ec <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006f56:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006f58:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006f5c:	2226      	movs	r2, #38	; 0x26
 8006f5e:	4629      	mov	r1, r5
 8006f60:	4648      	mov	r0, r9
 8006f62:	f024 ff7a 	bl	802be5a <memset>
 8006f66:	4648      	mov	r0, r9
 8006f68:	f7fb fd7e 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8006f6c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006f70:	26ff      	movs	r6, #255	; 0xff
 8006f72:	4b9f      	ldr	r3, [pc, #636]	; (80071f0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006f74:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006f76:	2226      	movs	r2, #38	; 0x26
 8006f78:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006f7c:	4629      	mov	r1, r5
 8006f7e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006f82:	4640      	mov	r0, r8
 8006f84:	66a5      	str	r5, [r4, #104]	; 0x68
 8006f86:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f8a:	f024 ff66 	bl	802be5a <memset>
 8006f8e:	4640      	mov	r0, r8
 8006f90:	f7fb fd6a 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8006f94:	4b97      	ldr	r3, [pc, #604]	; (80071f4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8006f96:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006f98:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006f9c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006fa0:	a90a      	add	r1, sp, #40	; 0x28
 8006fa2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006fa6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006fa8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006fac:	f00d f989 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006fb0:	4658      	mov	r0, fp
 8006fb2:	f00d fabd 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006fb6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006fba:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006fbe:	4618      	mov	r0, r3
 8006fc0:	ee08 3a90 	vmov	s17, r3
 8006fc4:	f7fb fdb4 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8006fc8:	4638      	mov	r0, r7
 8006fca:	f00b fe6d 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 8006fce:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006fd2:	4618      	mov	r0, r3
 8006fd4:	9303      	str	r3, [sp, #12]
 8006fd6:	f7fb fb4b 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006fda:	4b87      	ldr	r3, [pc, #540]	; (80071f8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 8006fdc:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006fe0:	3324      	adds	r3, #36	; 0x24
 8006fe2:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006fe6:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006fea:	4618      	mov	r0, r3
 8006fec:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006ff0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006ff4:	ee08 3a10 	vmov	s16, r3
 8006ff8:	f7fb fd9a 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8006ffc:	4650      	mov	r0, sl
 8006ffe:	f7fb fd97 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007002:	4a7e      	ldr	r2, [pc, #504]	; (80071fc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8007004:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007008:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 800700c:	4a7c      	ldr	r2, [pc, #496]	; (8007200 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800700e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007012:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007016:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800701a:	f00e f945 	bl	80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800701e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007022:	462a      	mov	r2, r5
 8007024:	4648      	mov	r0, r9
 8007026:	9300      	str	r3, [sp, #0]
 8007028:	4629      	mov	r1, r5
 800702a:	23f0      	movs	r3, #240	; 0xf0
 800702c:	f7fb fcf7 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007030:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007032:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007036:	66a3      	str	r3, [r4, #104]	; 0x68
 8007038:	4649      	mov	r1, r9
 800703a:	4630      	mov	r0, r6
 800703c:	f009 fd68 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007040:	462a      	mov	r2, r5
 8007042:	4640      	mov	r0, r8
 8007044:	4629      	mov	r1, r5
 8007046:	f7fb fcdd 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 800704a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800704c:	4640      	mov	r0, r8
 800704e:	a90a      	add	r1, sp, #40	; 0x28
 8007050:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007054:	f00d f935 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007058:	4641      	mov	r1, r8
 800705a:	4630      	mov	r0, r6
 800705c:	f009 fd58 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007060:	4658      	mov	r0, fp
 8007062:	f240 1201 	movw	r2, #257	; 0x101
 8007066:	2121      	movs	r1, #33	; 0x21
 8007068:	f7fb fccc 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 800706c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800706e:	aa0a      	add	r2, sp, #40	; 0x28
 8007070:	a909      	add	r1, sp, #36	; 0x24
 8007072:	4658      	mov	r0, fp
 8007074:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007078:	2302      	movs	r3, #2
 800707a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800707e:	f00c ff2a 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007082:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8007084:	4658      	mov	r0, fp
 8007086:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800708a:	f7fb fcff 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800708e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8007092:	330c      	adds	r3, #12
        color = col;
 8007094:	f04f 39ff 	mov.w	r9, #4294967295
 8007098:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800709c:	4659      	mov	r1, fp
 800709e:	4630      	mov	r0, r6
        colorPressed = col;
 80070a0:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80070a4:	f009 fd34 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80070a8:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80070ac:	223c      	movs	r2, #60	; 0x3c
 80070ae:	ee18 0a90 	vmov	r0, s17
 80070b2:	2117      	movs	r1, #23
 80070b4:	f7fb fca6 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80070b8:	ee18 1a90 	vmov	r1, s17
 80070bc:	4640      	mov	r0, r8
        color = newColor;
 80070be:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80070c2:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80070c6:	f00c f8b1 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070ca:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80070ce:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80070d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80070d6:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007204 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 80070da:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80070de:	232c      	movs	r3, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80070e0:	ee18 0a90 	vmov	r0, s17
 80070e4:	a90a      	add	r1, sp, #40	; 0x28
 80070e6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070ea:	f00c fb39 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070ee:	ee18 1a90 	vmov	r1, s17
 80070f2:	4630      	mov	r0, r6
 80070f4:	f009 fd0c 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80070f8:	230a      	movs	r3, #10
 80070fa:	9300      	str	r3, [sp, #0]
 80070fc:	2232      	movs	r2, #50	; 0x32
 80070fe:	23f0      	movs	r3, #240	; 0xf0
 8007100:	4629      	mov	r1, r5
 8007102:	4638      	mov	r0, r7
 8007104:	f7fb fc8b 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007108:	9b03      	ldr	r3, [sp, #12]
 800710a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800710e:	22a0      	movs	r2, #160	; 0xa0
 8007110:	4611      	mov	r1, r2
 8007112:	4638      	mov	r0, r7
 8007114:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007118:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800711c:	f00b feda 	bl	8012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007120:	22a0      	movs	r2, #160	; 0xa0
 8007122:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007126:	4638      	mov	r0, r7
 8007128:	f00b fedf 	bl	8012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800712c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8007130:	2b20      	cmp	r3, #32
 8007132:	d005      	beq.n	8007140 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8007134:	2320      	movs	r3, #32
 8007136:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800713a:	4638      	mov	r0, r7
 800713c:	f00b fdd4 	bl	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007140:	4638      	mov	r0, r7
 8007142:	2101      	movs	r1, #1
 8007144:	f00b fedc 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007148:	4639      	mov	r1, r7
 800714a:	4630      	mov	r0, r6
 800714c:	f009 fce0 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007150:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8007154:	ee18 0a10 	vmov	r0, s16
 8007158:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800715a:	2500      	movs	r5, #0
 800715c:	2145      	movs	r1, #69	; 0x45
 800715e:	f7fb fc51 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007162:	ee18 1a10 	vmov	r1, s16
 8007166:	4640      	mov	r0, r8
        color = newColor;
 8007168:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800716c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007170:	f00c f85c 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007174:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007178:	ee18 3a10 	vmov	r3, s16
 800717c:	333c      	adds	r3, #60	; 0x3c
 800717e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007182:	232d      	movs	r3, #45	; 0x2d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8007184:	ee18 0a10 	vmov	r0, s16
 8007188:	a90a      	add	r1, sp, #40	; 0x28
 800718a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800718e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007192:	f00c fae5 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007196:	ee18 1a10 	vmov	r1, s16
 800719a:	4630      	mov	r0, r6
 800719c:	f009 fcb8 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80071a0:	220c      	movs	r2, #12
 80071a2:	4650      	mov	r0, sl
 80071a4:	2136      	movs	r1, #54	; 0x36
 80071a6:	f7fb fc2d 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80071aa:	4651      	mov	r1, sl
 80071ac:	4640      	mov	r0, r8
        color = newColor;
 80071ae:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80071b2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80071b6:	f00c f839 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80071ba:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80071be:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80071c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80071c6:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 80071c8:	a90a      	add	r1, sp, #40	; 0x28
 80071ca:	4650      	mov	r0, sl
 80071cc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071d0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80071d4:	f00c fac4 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071d8:	4630      	mov	r0, r6
 80071da:	4651      	mov	r1, sl
 80071dc:	f009 fc98 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80071e0:	4620      	mov	r0, r4
 80071e2:	b00d      	add	sp, #52	; 0x34
 80071e4:	ecbd 8b02 	vpop	{d8}
 80071e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071ec:	0802ecb0 	.word	0x0802ecb0
 80071f0:	0802fb34 	.word	0x0802fb34
 80071f4:	0802fd80 	.word	0x0802fd80
 80071f8:	0802f868 	.word	0x0802f868
 80071fc:	0802ec98 	.word	0x0802ec98
 8007200:	08006f29 	.word	0x08006f29
 8007204:	0802d5e0 	.word	0x0802d5e0

08007208 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8007208:	4770      	bx	lr

0800720a <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800720a:	4770      	bx	lr

0800720c <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800720c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800720e:	68c2      	ldr	r2, [r0, #12]
 8007210:	6844      	ldr	r4, [r0, #4]
 8007212:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007214:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007216:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800721a:	07d2      	lsls	r2, r2, #31
 800721c:	bf48      	it	mi
 800721e:	5962      	ldrmi	r2, [r4, r5]
 8007220:	689b      	ldr	r3, [r3, #8]
    }
 8007222:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007224:	bf48      	it	mi
 8007226:	58d3      	ldrmi	r3, [r2, r3]
 8007228:	4718      	bx	r3

0800722a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800722a:	6843      	ldr	r3, [r0, #4]
 800722c:	b12b      	cbz	r3, 800723a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800722e:	6883      	ldr	r3, [r0, #8]
 8007230:	b92b      	cbnz	r3, 800723e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007232:	68c0      	ldr	r0, [r0, #12]
 8007234:	f000 0001 	and.w	r0, r0, #1
 8007238:	4770      	bx	lr
 800723a:	4618      	mov	r0, r3
 800723c:	4770      	bx	lr
 800723e:	2001      	movs	r0, #1
    }
 8007240:	4770      	bx	lr

08007242 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007242:	b510      	push	{r4, lr}
 8007244:	2110      	movs	r1, #16
 8007246:	4604      	mov	r4, r0
 8007248:	f023 fdef 	bl	802ae2a <_ZdlPvj>
 800724c:	4620      	mov	r0, r4
 800724e:	bd10      	pop	{r4, pc}

08007250 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007250:	b510      	push	{r4, lr}
 8007252:	4b03      	ldr	r3, [pc, #12]	; (8007260 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007254:	6003      	str	r3, [r0, #0]
 8007256:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007258:	f00e f830 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800725c:	4620      	mov	r0, r4
 800725e:	bd10      	pop	{r4, pc}
 8007260:	0802ecfc 	.word	0x0802ecfc

08007264 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8007264:	b507      	push	{r0, r1, r2, lr}
 8007266:	4b07      	ldr	r3, [pc, #28]	; (8007284 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8007268:	6003      	str	r3, [r0, #0]
 800726a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800726c:	f00e f826 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007270:	9801      	ldr	r0, [sp, #4]
 8007272:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8007276:	f023 fdd8 	bl	802ae2a <_ZdlPvj>
 800727a:	9801      	ldr	r0, [sp, #4]
 800727c:	b003      	add	sp, #12
 800727e:	f85d fb04 	ldr.w	pc, [sp], #4
 8007282:	bf00      	nop
 8007284:	0802ecfc 	.word	0x0802ecfc

08007288 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007288:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800728a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800728e:	4299      	cmp	r1, r3
{
 8007290:	4604      	mov	r4, r0
 8007292:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8007294:	d103      	bne.n	800729e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007296:	f00f fd13 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800729a:	f7fd fba5 	bl	80049e8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800729e:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80072a2:	429d      	cmp	r5, r3
 80072a4:	d103      	bne.n	80072ae <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80072a6:	f00f fd0b 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80072aa:	f7fd fbbd 	bl	8004a28 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80072ae:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80072b2:	42a5      	cmp	r5, r4
 80072b4:	d105      	bne.n	80072c2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80072b6:	f00f fd03 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80072ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80072be:	f7fd bbc3 	b.w	8004a48 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80072c2:	bd38      	pop	{r3, r4, r5, pc}

080072c4 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80072c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80072c8:	ed2d 8b06 	vpush	{d8-d10}
 80072cc:	4604      	mov	r4, r0
 80072ce:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80072d0:	46a3      	mov	fp, r4
 80072d2:	2500      	movs	r5, #0
 80072d4:	f011 f974 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
 80072d8:	4b66      	ldr	r3, [pc, #408]	; (8007474 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80072da:	63e5      	str	r5, [r4, #60]	; 0x3c
 80072dc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80072e0:	2226      	movs	r2, #38	; 0x26
 80072e2:	4629      	mov	r1, r5
 80072e4:	4658      	mov	r0, fp
 80072e6:	f024 fdb8 	bl	802be5a <memset>
 80072ea:	4658      	mov	r0, fp
 80072ec:	f7fb fbbc 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 80072f0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80072f4:	26ff      	movs	r6, #255	; 0xff
 80072f6:	4b60      	ldr	r3, [pc, #384]	; (8007478 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80072f8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80072fa:	2226      	movs	r2, #38	; 0x26
 80072fc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007300:	4629      	mov	r1, r5
 8007302:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007306:	4650      	mov	r0, sl
 8007308:	66a5      	str	r5, [r4, #104]	; 0x68
 800730a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800730e:	f024 fda4 	bl	802be5a <memset>
 8007312:	4650      	mov	r0, sl
 8007314:	f7fb fba8 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8007318:	4b58      	ldr	r3, [pc, #352]	; (800747c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 800731a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800731c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007320:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007324:	a90a      	add	r1, sp, #40	; 0x28
 8007326:	4650      	mov	r0, sl
 8007328:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800732c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007330:	f00c ffc7 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007334:	4648      	mov	r0, r9
 8007336:	f7fb fbfb 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800733a:	4b51      	ldr	r3, [pc, #324]	; (8007480 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 800733c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007340:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007344:	4618      	mov	r0, r3
 8007346:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800734a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800734e:	ee08 3a90 	vmov	s17, r3
 8007352:	f7fb fbed 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8007356:	4638      	mov	r0, r7
 8007358:	f00b fca6 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 800735c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007360:	4618      	mov	r0, r3
 8007362:	9303      	str	r3, [sp, #12]
 8007364:	f7fb f984 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007368:	4b46      	ldr	r3, [pc, #280]	; (8007484 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 800736a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800736e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007372:	3324      	adds	r3, #36	; 0x24
 8007374:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8007378:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 800737c:	4640      	mov	r0, r8
 800737e:	f7fb fbd7 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8007382:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007386:	4618      	mov	r0, r3
 8007388:	ee08 3a10 	vmov	s16, r3
 800738c:	f7fb fbd0 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8007390:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007394:	4618      	mov	r0, r3
 8007396:	ee09 3a10 	vmov	s18, r3
 800739a:	f00d f8c9 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800739e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80073a2:	4618      	mov	r0, r3
 80073a4:	ee09 3a90 	vmov	s19, r3
 80073a8:	f00d f8c2 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80073ac:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80073b0:	4618      	mov	r0, r3
 80073b2:	ee0a 3a10 	vmov	s20, r3
 80073b6:	f00d f8bb 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80073ba:	4a33      	ldr	r2, [pc, #204]	; (8007488 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80073bc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80073c0:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 80073c4:	4a31      	ldr	r2, [pc, #196]	; (800748c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80073c6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80073ca:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 80073ce:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80073d2:	f00d ff69 	bl	80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80073d6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80073da:	462a      	mov	r2, r5
 80073dc:	4658      	mov	r0, fp
 80073de:	9300      	str	r3, [sp, #0]
 80073e0:	4629      	mov	r1, r5
 80073e2:	23f0      	movs	r3, #240	; 0xf0
 80073e4:	f7fb fb1b 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 80073e8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80073ea:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80073ee:	66a3      	str	r3, [r4, #104]	; 0x68
 80073f0:	4659      	mov	r1, fp
 80073f2:	4630      	mov	r0, r6
 80073f4:	f009 fb8c 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80073f8:	462a      	mov	r2, r5
 80073fa:	4650      	mov	r0, sl
 80073fc:	4629      	mov	r1, r5
 80073fe:	f7fb fb01 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8007402:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007404:	4650      	mov	r0, sl
 8007406:	a90a      	add	r1, sp, #40	; 0x28
 8007408:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800740c:	f00c ff59 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007410:	4651      	mov	r1, sl
 8007412:	4630      	mov	r0, r6
 8007414:	f009 fb7c 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007418:	f44f 729a 	mov.w	r2, #308	; 0x134
 800741c:	2156      	movs	r1, #86	; 0x56
 800741e:	4648      	mov	r0, r9
 8007420:	f7fb faf0 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007424:	f04f 33ff 	mov.w	r3, #4294967295
 8007428:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800742c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007430:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007434:	f10d 0b10 	add.w	fp, sp, #16
 8007438:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800743c:	4649      	mov	r1, r9
 800743e:	4658      	mov	r0, fp
 8007440:	4798      	blx	r3
 8007442:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007446:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800744a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800744e:	4b10      	ldr	r3, [pc, #64]	; (8007490 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8007450:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8007452:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007456:	b92b      	cbnz	r3, 8007464 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007458:	4b0e      	ldr	r3, [pc, #56]	; (8007494 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 800745a:	4a0f      	ldr	r2, [pc, #60]	; (8007498 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 800745c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800745e:	480f      	ldr	r0, [pc, #60]	; (800749c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8007460:	f024 faf6 	bl	802ba50 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007464:	4b0e      	ldr	r3, [pc, #56]	; (80074a0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007466:	881b      	ldrh	r3, [r3, #0]
 8007468:	2b26      	cmp	r3, #38	; 0x26
 800746a:	d81d      	bhi.n	80074a8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 800746c:	4b0d      	ldr	r3, [pc, #52]	; (80074a4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 800746e:	4a0a      	ldr	r2, [pc, #40]	; (8007498 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007470:	2161      	movs	r1, #97	; 0x61
 8007472:	e7f4      	b.n	800745e <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8007474:	0802ecfc 	.word	0x0802ecfc
 8007478:	0802fb34 	.word	0x0802fb34
 800747c:	0802fd80 	.word	0x0802fd80
 8007480:	0802d680 	.word	0x0802d680
 8007484:	0802f868 	.word	0x0802f868
 8007488:	0802ece4 	.word	0x0802ece4
 800748c:	08007289 	.word	0x08007289
 8007490:	2001388c 	.word	0x2001388c
 8007494:	0802d430 	.word	0x0802d430
 8007498:	0802d535 	.word	0x0802d535
 800749c:	0802d4ad 	.word	0x0802d4ad
 80074a0:	20013890 	.word	0x20013890
 80074a4:	0802d4f4 	.word	0x0802d4f4
        return texts->getText(typedTextId);
 80074a8:	4b95      	ldr	r3, [pc, #596]	; (8007700 <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 80074aa:	2126      	movs	r1, #38	; 0x26
 80074ac:	6818      	ldr	r0, [r3, #0]
 80074ae:	f001 faad 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80074b2:	4a94      	ldr	r2, [pc, #592]	; (8007704 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 80074b4:	4603      	mov	r3, r0
 80074b6:	2104      	movs	r1, #4
 80074b8:	4650      	mov	r0, sl
 80074ba:	f012 fdaf 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80074be:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80074c2:	4648      	mov	r0, r9
 80074c4:	f00c f92c 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80074c8:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8007708 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80074cc:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80074d0:	2327      	movs	r3, #39	; 0x27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 80074d2:	a90a      	add	r1, sp, #40	; 0x28
 80074d4:	4648      	mov	r0, r9
 80074d6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074da:	f00c f941 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074de:	4649      	mov	r1, r9
 80074e0:	4630      	mov	r0, r6
 80074e2:	f009 fb15 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 80074e6:	223c      	movs	r2, #60	; 0x3c
 80074e8:	ee18 0a90 	vmov	r0, s17
 80074ec:	2129      	movs	r1, #41	; 0x29
 80074ee:	f7fb fa89 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80074f2:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80074f6:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80074fa:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80074fe:	4658      	mov	r0, fp
        linespace = space;
 8007500:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007504:	f00b fe92 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007508:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 800750c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8007510:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007514:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8007516:	ee18 0a90 	vmov	r0, s17
 800751a:	a90a      	add	r1, sp, #40	; 0x28
 800751c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007520:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007524:	f00c f91c 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007528:	ee18 1a90 	vmov	r1, s17
 800752c:	4630      	mov	r0, r6
 800752e:	f009 faef 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007532:	230a      	movs	r3, #10
 8007534:	9300      	str	r3, [sp, #0]
 8007536:	2232      	movs	r2, #50	; 0x32
 8007538:	23f0      	movs	r3, #240	; 0xf0
 800753a:	4629      	mov	r1, r5
 800753c:	4638      	mov	r0, r7
 800753e:	f7fb fa6e 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007542:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007546:	22a0      	movs	r2, #160	; 0xa0
 8007548:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 800754c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8007550:	9b03      	ldr	r3, [sp, #12]
 8007552:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007556:	4611      	mov	r1, r2
 8007558:	4638      	mov	r0, r7
 800755a:	f00b fcbb 	bl	8012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800755e:	22a0      	movs	r2, #160	; 0xa0
 8007560:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007564:	4638      	mov	r0, r7
 8007566:	f00b fcc0 	bl	8012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800756a:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 800756e:	2b20      	cmp	r3, #32
 8007570:	d005      	beq.n	800757e <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8007572:	2320      	movs	r3, #32
 8007574:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8007578:	4638      	mov	r0, r7
 800757a:	f00b fbb5 	bl	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800757e:	4638      	mov	r0, r7
 8007580:	2101      	movs	r1, #1
 8007582:	f00b fcbd 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007586:	4639      	mov	r1, r7
 8007588:	4630      	mov	r0, r6
 800758a:	f009 fac1 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800758e:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8007592:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8007594:	2223      	movs	r2, #35	; 0x23
 8007596:	4640      	mov	r0, r8
        linespace = space;
 8007598:	f04f 0a00 	mov.w	sl, #0
 800759c:	2145      	movs	r1, #69	; 0x45
 800759e:	f7fb fa31 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80075a2:	4641      	mov	r1, r8
 80075a4:	4638      	mov	r0, r7
        color = newColor;
 80075a6:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80075aa:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80075ae:	f00b fe3d 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075b2:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80075b6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80075ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075be:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007708 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80075c2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80075c6:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 80075c8:	a90a      	add	r1, sp, #40	; 0x28
 80075ca:	4640      	mov	r0, r8
 80075cc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075d0:	f00c f8c6 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075d4:	4641      	mov	r1, r8
 80075d6:	4630      	mov	r0, r6
 80075d8:	f009 fa9a 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80075dc:	ee18 0a10 	vmov	r0, s16
 80075e0:	220c      	movs	r2, #12
 80075e2:	2136      	movs	r1, #54	; 0x36
 80075e4:	f7fb fa0e 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80075e8:	ee18 1a10 	vmov	r1, s16
 80075ec:	4638      	mov	r0, r7
        color = newColor;
 80075ee:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 80075f2:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80075f6:	f00b fe19 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075fa:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80075fe:	ee18 3a10 	vmov	r3, s16
 8007602:	333c      	adds	r3, #60	; 0x3c
 8007604:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007608:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 800760a:	ee18 0a10 	vmov	r0, s16
 800760e:	a90a      	add	r1, sp, #40	; 0x28
 8007610:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007614:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007618:	f00c f8a2 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800761c:	ee18 1a10 	vmov	r1, s16
 8007620:	4630      	mov	r0, r6
 8007622:	f009 fa75 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007626:	ee19 0a10 	vmov	r0, s18
 800762a:	22f0      	movs	r2, #240	; 0xf0
 800762c:	2121      	movs	r1, #33	; 0x21
 800762e:	f7fb f9e9 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8007632:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007636:	aa0a      	add	r2, sp, #40	; 0x28
 8007638:	f04f 0802 	mov.w	r8, #2
 800763c:	a909      	add	r1, sp, #36	; 0x24
 800763e:	ee19 0a10 	vmov	r0, s18
 8007642:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007646:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 800764a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800764e:	f00c fc42 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007652:	2347      	movs	r3, #71	; 0x47
 8007654:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007658:	3710      	adds	r7, #16
        updateTextPosition();
 800765a:	ee19 0a10 	vmov	r0, s18
 800765e:	f7fb fa15 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007662:	ee19 1a10 	vmov	r1, s18
 8007666:	4630      	mov	r0, r6
        colorPressed = col;
 8007668:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 800766c:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8007670:	f009 fa4e 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8007674:	ee19 0a90 	vmov	r0, s19
 8007678:	22aa      	movs	r2, #170	; 0xaa
 800767a:	2121      	movs	r1, #33	; 0x21
 800767c:	f7fb f9c2 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007680:	aa0a      	add	r2, sp, #40	; 0x28
 8007682:	a909      	add	r1, sp, #36	; 0x24
 8007684:	ee19 0a90 	vmov	r0, s19
 8007688:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800768c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007690:	f00c fc21 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007694:	2346      	movs	r3, #70	; 0x46
 8007696:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800769a:	ee19 0a90 	vmov	r0, s19
 800769e:	f7fb f9f5 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076a2:	ee19 1a90 	vmov	r1, s19
 80076a6:	4630      	mov	r0, r6
        colorPressed = col;
 80076a8:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80076ac:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80076b0:	f009 fa2e 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80076b4:	ee1a 0a10 	vmov	r0, s20
 80076b8:	2264      	movs	r2, #100	; 0x64
 80076ba:	2121      	movs	r1, #33	; 0x21
 80076bc:	f7fb f9a2 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80076c0:	aa0a      	add	r2, sp, #40	; 0x28
 80076c2:	a909      	add	r1, sp, #36	; 0x24
 80076c4:	ee1a 0a10 	vmov	r0, s20
 80076c8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80076cc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80076d0:	f00c fc01 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076d4:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 80076d6:	ee1a 0a10 	vmov	r0, s20
 80076da:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80076de:	f7fb f9d5 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076e2:	4630      	mov	r0, r6
        colorPressed = col;
 80076e4:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 80076e8:	ee1a 1a10 	vmov	r1, s20
 80076ec:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 80076f0:	f009 fa0e 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80076f4:	4620      	mov	r0, r4
 80076f6:	b00d      	add	sp, #52	; 0x34
 80076f8:	ecbd 8b06 	vpop	{d8-d10}
 80076fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007700:	20013898 	.word	0x20013898
 8007704:	0802d56d 	.word	0x0802d56d
 8007708:	0802d5e0 	.word	0x0802d5e0

0800770c <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 800770c:	4770      	bx	lr

0800770e <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 800770e:	4770      	bx	lr

08007710 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007710:	4770      	bx	lr

08007712 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007712:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007714:	68c2      	ldr	r2, [r0, #12]
 8007716:	6844      	ldr	r4, [r0, #4]
 8007718:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800771a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800771c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007720:	07d2      	lsls	r2, r2, #31
 8007722:	bf48      	it	mi
 8007724:	5962      	ldrmi	r2, [r4, r5]
 8007726:	689b      	ldr	r3, [r3, #8]
    }
 8007728:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800772a:	bf48      	it	mi
 800772c:	58d3      	ldrmi	r3, [r2, r3]
 800772e:	4718      	bx	r3

08007730 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007730:	6843      	ldr	r3, [r0, #4]
 8007732:	b12b      	cbz	r3, 8007740 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007734:	6883      	ldr	r3, [r0, #8]
 8007736:	b92b      	cbnz	r3, 8007744 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007738:	68c0      	ldr	r0, [r0, #12]
 800773a:	f000 0001 	and.w	r0, r0, #1
 800773e:	4770      	bx	lr
 8007740:	4618      	mov	r0, r3
 8007742:	4770      	bx	lr
 8007744:	2001      	movs	r0, #1
    }
 8007746:	4770      	bx	lr

08007748 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007748:	b510      	push	{r4, lr}
 800774a:	2110      	movs	r1, #16
 800774c:	4604      	mov	r4, r0
 800774e:	f023 fb6c 	bl	802ae2a <_ZdlPvj>
 8007752:	4620      	mov	r0, r4
 8007754:	bd10      	pop	{r4, pc}
	...

08007758 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007758:	b510      	push	{r4, lr}
 800775a:	4b03      	ldr	r3, [pc, #12]	; (8007768 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 800775c:	6003      	str	r3, [r0, #0]
 800775e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007760:	f00d fdac 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007764:	4620      	mov	r0, r4
 8007766:	bd10      	pop	{r4, pc}
 8007768:	0802ed48 	.word	0x0802ed48

0800776c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 800776c:	b507      	push	{r0, r1, r2, lr}
 800776e:	4b07      	ldr	r3, [pc, #28]	; (800778c <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8007770:	6003      	str	r3, [r0, #0]
 8007772:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007774:	f00d fda2 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007778:	9801      	ldr	r0, [sp, #4]
 800777a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800777e:	f023 fb54 	bl	802ae2a <_ZdlPvj>
 8007782:	9801      	ldr	r0, [sp, #4]
 8007784:	b003      	add	sp, #12
 8007786:	f85d fb04 	ldr.w	pc, [sp], #4
 800778a:	bf00      	nop
 800778c:	0802ed48 	.word	0x0802ed48

08007790 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8007790:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8007792:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8007796:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 800779a:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 800779c:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 800779e:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80077a2:	d105      	bne.n	80077b0 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 80077a4:	6803      	ldr	r3, [r0, #0]
 80077a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80077a8:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 80077aa:	2300      	movs	r3, #0
 80077ac:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 80077b0:	bd10      	pop	{r4, pc}

080077b2 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 80077b2:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 80077b6:	4288      	cmp	r0, r1
{
 80077b8:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80077ba:	d105      	bne.n	80077c8 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80077bc:	f00f fa80 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
}
 80077c0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 80077c4:	f7fd b920 	b.w	8004a08 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 80077c8:	bd08      	pop	{r3, pc}
	...

080077cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 80077cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077d0:	ed2d 8b0a 	vpush	{d8-d12}
 80077d4:	4604      	mov	r4, r0
 80077d6:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 80077d8:	46a3      	mov	fp, r4
 80077da:	2500      	movs	r5, #0
 80077dc:	f010 fef0 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
 80077e0:	4baa      	ldr	r3, [pc, #680]	; (8007a8c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 80077e2:	63e5      	str	r5, [r4, #60]	; 0x3c
 80077e4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80077e8:	2226      	movs	r2, #38	; 0x26
 80077ea:	4629      	mov	r1, r5
 80077ec:	4658      	mov	r0, fp
 80077ee:	f024 fb34 	bl	802be5a <memset>
 80077f2:	4658      	mov	r0, fp
 80077f4:	f7fb f938 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 80077f8:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 80077fc:	27ff      	movs	r7, #255	; 0xff
 80077fe:	4ba4      	ldr	r3, [pc, #656]	; (8007a90 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8007800:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007802:	2226      	movs	r2, #38	; 0x26
 8007804:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007808:	4629      	mov	r1, r5
 800780a:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 800780e:	4630      	mov	r0, r6
 8007810:	66a5      	str	r5, [r4, #104]	; 0x68
 8007812:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007816:	f024 fb20 	bl	802be5a <memset>
 800781a:	4630      	mov	r0, r6
 800781c:	f7fb f924 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8007820:	4b9c      	ldr	r3, [pc, #624]	; (8007a94 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8007822:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007824:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007828:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800782c:	a90a      	add	r1, sp, #40	; 0x28
 800782e:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 8007830:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007834:	f00c fd45 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007838:	f104 0398 	add.w	r3, r4, #152	; 0x98
 800783c:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 8007840:	4618      	mov	r0, r3
 8007842:	ee09 3a10 	vmov	s18, r3
 8007846:	f504 7920 	add.w	r9, r4, #640	; 0x280
 800784a:	f7fb f971 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 800784e:	4640      	mov	r0, r8
 8007850:	f00c f9fa 	bl	8013c48 <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 8007854:	4648      	mov	r0, r9
 8007856:	f7fb f96b 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800785a:	4f8f      	ldr	r7, [pc, #572]	; (8007a98 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 800785c:	f8c4 7280 	str.w	r7, [r4, #640]	; 0x280
 8007860:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 8007864:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8007866:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 800786a:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 800786e:	f7fb f95f 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8007872:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8007876:	f8c4 72cc 	str.w	r7, [r4, #716]	; 0x2cc
        : TextArea()
 800787a:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 800787c:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8007880:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8007884:	f7fb f954 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8007888:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 800788c:	f8c4 7318 	str.w	r7, [r4, #792]	; 0x318
 8007890:	4618      	mov	r0, r3
 8007892:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8007896:	ee0a 3a90 	vmov	s21, r3
 800789a:	f7fb f949 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 800789e:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 80078a2:	4618      	mov	r0, r3
 80078a4:	ee0b 3a10 	vmov	s22, r3
 80078a8:	f7fb f942 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80078ac:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 80078b0:	4618      	mov	r0, r3
 80078b2:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 80078b6:	ee0b 3a90 	vmov	s23, r3
 80078ba:	f7fb f939 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80078be:	4650      	mov	r0, sl
 80078c0:	f00b f9f2 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 80078c4:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80078c8:	4618      	mov	r0, r3
 80078ca:	9302      	str	r3, [sp, #8]
 80078cc:	f7fa fed0 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80078d0:	4b72      	ldr	r3, [pc, #456]	; (8007a9c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 80078d2:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 80078d6:	3324      	adds	r3, #36	; 0x24
 80078d8:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 80078dc:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 80078e0:	4618      	mov	r0, r3
 80078e2:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 80078e6:	ee08 3a10 	vmov	s16, r3
 80078ea:	f7fb f921 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80078ee:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 80078f2:	4618      	mov	r0, r3
 80078f4:	ee08 3a90 	vmov	s17, r3
 80078f8:	f7fb f91a 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80078fc:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007900:	4618      	mov	r0, r3
 8007902:	ee0c 3a10 	vmov	s24, r3
 8007906:	f00c fe13 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800790a:	4a65      	ldr	r2, [pc, #404]	; (8007aa0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 800790c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007910:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007914:	4a63      	ldr	r2, [pc, #396]	; (8007aa4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007916:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 800791a:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800791e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007922:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007926:	f00d fcbf 	bl	80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800792a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800792e:	462a      	mov	r2, r5
 8007930:	4658      	mov	r0, fp
 8007932:	9300      	str	r3, [sp, #0]
 8007934:	4629      	mov	r1, r5
 8007936:	23f0      	movs	r3, #240	; 0xf0
 8007938:	f7fb f871 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 800793c:	1d27      	adds	r7, r4, #4
        color = newColor;
 800793e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007942:	66a3      	str	r3, [r4, #104]	; 0x68
 8007944:	4659      	mov	r1, fp
 8007946:	4638      	mov	r0, r7
 8007948:	f009 f8e2 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800794c:	462a      	mov	r2, r5
 800794e:	4630      	mov	r0, r6
 8007950:	4629      	mov	r1, r5
 8007952:	f7fb f857 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8007956:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800795a:	4630      	mov	r0, r6
 800795c:	a90a      	add	r1, sp, #40	; 0x28
 800795e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007962:	f00c fcae 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007966:	4631      	mov	r1, r6
 8007968:	4638      	mov	r0, r7
 800796a:	f009 f8d1 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800796e:	ae04      	add	r6, sp, #16
    textArea3.setXY(31, 60);
 8007970:	223c      	movs	r2, #60	; 0x3c
 8007972:	ee19 0a10 	vmov	r0, s18
 8007976:	211f      	movs	r1, #31
        color = newColor;
 8007978:	f04f 3bff 	mov.w	fp, #4294967295
 800797c:	f7fb f842 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007980:	ee19 1a10 	vmov	r1, s18
 8007984:	4630      	mov	r0, r6
        color = newColor;
 8007986:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        linespace = space;
 800798a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800798e:	f00b fc4d 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007992:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007996:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800799a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800799e:	4b42      	ldr	r3, [pc, #264]	; (8007aa8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 80079a0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80079a2:	ee19 0a10 	vmov	r0, s18
 80079a6:	f04f 0335 	mov.w	r3, #53	; 0x35
 80079aa:	a90a      	add	r1, sp, #40	; 0x28
 80079ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80079b0:	f00b fed6 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80079b4:	ee19 1a10 	vmov	r1, s18
 80079b8:	4638      	mov	r0, r7
 80079ba:	f009 f8a9 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80079be:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80079c0:	4640      	mov	r0, r8
 80079c2:	a90a      	add	r1, sp, #40	; 0x28
 80079c4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079c8:	f009 f834 	bl	8010a34 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 80079cc:	236a      	movs	r3, #106	; 0x6a
 80079ce:	4640      	mov	r0, r8
 80079d0:	9300      	str	r3, [sp, #0]
 80079d2:	225e      	movs	r2, #94	; 0x5e
 80079d4:	23b8      	movs	r3, #184	; 0xb8
 80079d6:	211c      	movs	r1, #28
 80079d8:	f7fb f821 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 80079dc:	225c      	movs	r2, #92	; 0x5c
 80079de:	4611      	mov	r1, r2
 80079e0:	4640      	mov	r0, r8
 80079e2:	f00c f9dc 	bl	8013d9e <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 80079e6:	4640      	mov	r0, r8
 80079e8:	225a      	movs	r2, #90	; 0x5a
 80079ea:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80079ee:	f00c fa5b 	bl	8013ea8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 80079f2:	462b      	mov	r3, r5
 80079f4:	225a      	movs	r2, #90	; 0x5a
 80079f6:	4640      	mov	r0, r8
 80079f8:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80079fc:	9500      	str	r5, [sp, #0]
 80079fe:	f008 fec6 	bl	801078e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 8007a02:	4640      	mov	r0, r8
 8007a04:	4629      	mov	r1, r5
 8007a06:	f00c f9f9 	bl	8013dfc <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007a0a:	2335      	movs	r3, #53	; 0x35
 8007a0c:	2208      	movs	r2, #8
 8007a0e:	4640      	mov	r0, r8
 8007a10:	2105      	movs	r1, #5
 8007a12:	f00c f9af 	bl	8013d74 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007a16:	4640      	mov	r0, r8
 8007a18:	2101      	movs	r1, #1
 8007a1a:	f00c f94d 	bl	8013cb8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007a1e:	4640      	mov	r0, r8
 8007a20:	2101      	movs	r1, #1
 8007a22:	f00c f94c 	bl	8013cbe <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007a26:	4641      	mov	r1, r8
 8007a28:	4638      	mov	r0, r7
 8007a2a:	f009 f871 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 8007a2e:	230f      	movs	r3, #15
 8007a30:	22e6      	movs	r2, #230	; 0xe6
 8007a32:	9300      	str	r3, [sp, #0]
 8007a34:	4629      	mov	r1, r5
 8007a36:	23f0      	movs	r3, #240	; 0xf0
 8007a38:	4648      	mov	r0, r9
 8007a3a:	f7fa fff0 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a3e:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        color = newColor;
 8007a42:	f8c4 b2b0 	str.w	fp, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007a46:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007a4a:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 8007a4e:	4649      	mov	r1, r9
 8007a50:	4630      	mov	r0, r6
 8007a52:	4798      	blx	r3
 8007a54:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007a58:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a5c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8007ac0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 8007a60:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007a64:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 8007a68:	9303      	str	r3, [sp, #12]
 8007a6a:	f8d8 3000 	ldr.w	r3, [r8]
 8007a6e:	b92b      	cbnz	r3, 8007a7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
 8007a70:	4b0e      	ldr	r3, [pc, #56]	; (8007aac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007a72:	4a0f      	ldr	r2, [pc, #60]	; (8007ab0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007a74:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a76:	480f      	ldr	r0, [pc, #60]	; (8007ab4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007a78:	f023 ffea 	bl	802ba50 <__assert_func>
 8007a7c:	4b0e      	ldr	r3, [pc, #56]	; (8007ab8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007a7e:	881b      	ldrh	r3, [r3, #0]
 8007a80:	2b15      	cmp	r3, #21
 8007a82:	d81f      	bhi.n	8007ac4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 8007a84:	4b0d      	ldr	r3, [pc, #52]	; (8007abc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 8007a86:	4a0a      	ldr	r2, [pc, #40]	; (8007ab0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007a88:	2161      	movs	r1, #97	; 0x61
 8007a8a:	e7f4      	b.n	8007a76 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 8007a8c:	0802ed48 	.word	0x0802ed48
 8007a90:	0802fb34 	.word	0x0802fb34
 8007a94:	0802fd80 	.word	0x0802fd80
 8007a98:	0802d680 	.word	0x0802d680
 8007a9c:	0802f868 	.word	0x0802f868
 8007aa0:	0802ed30 	.word	0x0802ed30
 8007aa4:	080077b3 	.word	0x080077b3
 8007aa8:	0802d5e0 	.word	0x0802d5e0
 8007aac:	0802d430 	.word	0x0802d430
 8007ab0:	0802d535 	.word	0x0802d535
 8007ab4:	0802d4ad 	.word	0x0802d4ad
 8007ab8:	20013890 	.word	0x20013890
 8007abc:	0802d4f4 	.word	0x0802d4f4
 8007ac0:	2001388c 	.word	0x2001388c
        return texts->getText(typedTextId);
 8007ac4:	4bdb      	ldr	r3, [pc, #876]	; (8007e34 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007ac6:	2115      	movs	r1, #21
 8007ac8:	6818      	ldr	r0, [r3, #0]
 8007aca:	f000 ff9f 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8007ace:	4ada      	ldr	r2, [pc, #872]	; (8007e38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007ad0:	4603      	mov	r3, r0
 8007ad2:	210a      	movs	r1, #10
 8007ad4:	9803      	ldr	r0, [sp, #12]
 8007ad6:	f012 faa1 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007ada:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8007adc:	4bd7      	ldr	r3, [pc, #860]	; (8007e3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007ade:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007ae2:	4648      	mov	r0, r9
 8007ae4:	930a      	str	r3, [sp, #40]	; 0x28
 8007ae6:	a90a      	add	r1, sp, #40	; 0x28
 8007ae8:	2318      	movs	r3, #24
 8007aea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007aee:	f00b fe37 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007af2:	4649      	mov	r1, r9
 8007af4:	4638      	mov	r0, r7
 8007af6:	f009 f80b 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007afa:	210f      	movs	r1, #15
 8007afc:	22d7      	movs	r2, #215	; 0xd7
 8007afe:	ee19 0a90 	vmov	r0, s19
 8007b02:	9100      	str	r1, [sp, #0]
 8007b04:	23f0      	movs	r3, #240	; 0xf0
 8007b06:	4629      	mov	r1, r5
 8007b08:	f7fa ff89 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b0c:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        color = newColor;
 8007b10:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007b14:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007b18:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        boundingArea = calculateBoundingArea();
 8007b1c:	ee19 1a90 	vmov	r1, s19
 8007b20:	4630      	mov	r0, r6
 8007b22:	4798      	blx	r3
 8007b24:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007b28:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007b2c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007b30:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007b34:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007b38:	2b00      	cmp	r3, #0
 8007b3a:	d099      	beq.n	8007a70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007b3c:	49c0      	ldr	r1, [pc, #768]	; (8007e40 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007b3e:	880b      	ldrh	r3, [r1, #0]
 8007b40:	2b16      	cmp	r3, #22
 8007b42:	d99f      	bls.n	8007a84 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007b44:	4abb      	ldr	r2, [pc, #748]	; (8007e34 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007b46:	2116      	movs	r1, #22
 8007b48:	6810      	ldr	r0, [r2, #0]
 8007b4a:	f000 ff5f 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8007b4e:	4aba      	ldr	r2, [pc, #744]	; (8007e38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007b50:	4603      	mov	r3, r0
 8007b52:	210a      	movs	r1, #10
 8007b54:	4648      	mov	r0, r9
 8007b56:	f012 fa61 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007b5a:	4bb8      	ldr	r3, [pc, #736]	; (8007e3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007b5c:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007b60:	a80a      	add	r0, sp, #40	; 0x28
 8007b62:	4601      	mov	r1, r0
 8007b64:	930a      	str	r3, [sp, #40]	; 0x28
 8007b66:	ee19 0a90 	vmov	r0, s19
 8007b6a:	2319      	movs	r3, #25
 8007b6c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b70:	f00b fdf6 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b74:	ee19 1a90 	vmov	r1, s19
 8007b78:	4638      	mov	r0, r7
 8007b7a:	f008 ffc9 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8007b7e:	200f      	movs	r0, #15
 8007b80:	22c8      	movs	r2, #200	; 0xc8
 8007b82:	9000      	str	r0, [sp, #0]
 8007b84:	23f0      	movs	r3, #240	; 0xf0
 8007b86:	ee1a 0a10 	vmov	r0, s20
 8007b8a:	4629      	mov	r1, r5
 8007b8c:	f7fa ff47 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b90:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        color = newColor;
 8007b94:	f8c4 b348 	str.w	fp, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007b98:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007b9c:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 8007ba0:	ee1a 1a10 	vmov	r1, s20
 8007ba4:	4630      	mov	r0, r6
 8007ba6:	4798      	blx	r3
 8007ba8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007bac:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007bb0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007bb4:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8007bb8:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007bbc:	2b00      	cmp	r3, #0
 8007bbe:	f43f af57 	beq.w	8007a70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007bc2:	499f      	ldr	r1, [pc, #636]	; (8007e40 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007bc4:	880b      	ldrh	r3, [r1, #0]
 8007bc6:	2b17      	cmp	r3, #23
 8007bc8:	f67f af5c 	bls.w	8007a84 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007bcc:	4a99      	ldr	r2, [pc, #612]	; (8007e34 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007bce:	2117      	movs	r1, #23
 8007bd0:	6810      	ldr	r0, [r2, #0]
 8007bd2:	f000 ff1b 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8007bd6:	4a98      	ldr	r2, [pc, #608]	; (8007e38 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007bd8:	4603      	mov	r3, r0
 8007bda:	210a      	movs	r1, #10
 8007bdc:	4648      	mov	r0, r9
 8007bde:	f012 fa1d 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007be2:	4b96      	ldr	r3, [pc, #600]	; (8007e3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007be4:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007be6:	ee1a 0a10 	vmov	r0, s20
 8007bea:	231a      	movs	r3, #26
 8007bec:	a90a      	add	r1, sp, #40	; 0x28
 8007bee:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007bf2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bf6:	f00b fdb3 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bfa:	ee1a 1a10 	vmov	r1, s20
 8007bfe:	4638      	mov	r0, r7
 8007c00:	f008 ff86 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007c04:	224c      	movs	r2, #76	; 0x4c
 8007c06:	ee1a 0a90 	vmov	r0, s21
 8007c0a:	2171      	movs	r1, #113	; 0x71
 8007c0c:	f7fa fefa 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8007c10:	ee1a 1a90 	vmov	r1, s21
 8007c14:	4630      	mov	r0, r6
        color = newColor;
 8007c16:	f8c4 b394 	str.w	fp, [r4, #916]	; 0x394
        linespace = space;
 8007c1a:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007c1e:	f00b fb05 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c22:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c26:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007c2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c2e:	4b83      	ldr	r3, [pc, #524]	; (8007e3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007c30:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8007c32:	ee1a 0a90 	vmov	r0, s21
 8007c36:	231b      	movs	r3, #27
 8007c38:	a90a      	add	r1, sp, #40	; 0x28
 8007c3a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c3e:	f00b fd8f 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c42:	ee1a 1a90 	vmov	r1, s21
 8007c46:	4638      	mov	r0, r7
 8007c48:	f008 ff62 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007c4c:	22b9      	movs	r2, #185	; 0xb9
 8007c4e:	ee1b 0a10 	vmov	r0, s22
 8007c52:	4629      	mov	r1, r5
 8007c54:	f7fa fed6 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8007c58:	ee1b 1a10 	vmov	r1, s22
 8007c5c:	4630      	mov	r0, r6
        color = newColor;
 8007c5e:	f8c4 b3dc 	str.w	fp, [r4, #988]	; 0x3dc
        linespace = space;
 8007c62:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007c66:	f00b fae1 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c6a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007c6e:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8007c72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c76:	4b71      	ldr	r3, [pc, #452]	; (8007e3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007c78:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007c7a:	ee1b 0a10 	vmov	r0, s22
 8007c7e:	231c      	movs	r3, #28
 8007c80:	a90a      	add	r1, sp, #40	; 0x28
 8007c82:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c86:	f00b fd6b 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c8a:	ee1b 1a10 	vmov	r1, s22
 8007c8e:	4638      	mov	r0, r7
 8007c90:	f008 ff3e 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8007c94:	22b9      	movs	r2, #185	; 0xb9
 8007c96:	ee1b 0a90 	vmov	r0, s23
 8007c9a:	21d9      	movs	r1, #217	; 0xd9
 8007c9c:	f7fa feb2 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8007ca0:	ee1b 1a90 	vmov	r1, s23
 8007ca4:	4630      	mov	r0, r6
        color = newColor;
 8007ca6:	f8c4 b424 	str.w	fp, [r4, #1060]	; 0x424
        linespace = space;
 8007caa:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007cae:	f00b fabd 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007cb2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007cb6:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007cba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007cbe:	4b5f      	ldr	r3, [pc, #380]	; (8007e3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007cc0:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007cc2:	ee1b 0a90 	vmov	r0, s23
 8007cc6:	231d      	movs	r3, #29
 8007cc8:	a90a      	add	r1, sp, #40	; 0x28
 8007cca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cce:	f00b fd47 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cd2:	ee1b 1a90 	vmov	r1, s23
 8007cd6:	4638      	mov	r0, r7
 8007cd8:	f008 ff1a 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007cdc:	230a      	movs	r3, #10
 8007cde:	9300      	str	r3, [sp, #0]
 8007ce0:	2232      	movs	r2, #50	; 0x32
 8007ce2:	23f0      	movs	r3, #240	; 0xf0
 8007ce4:	4629      	mov	r1, r5
 8007ce6:	4650      	mov	r0, sl
 8007ce8:	f7fa fe99 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007cec:	9b02      	ldr	r3, [sp, #8]
 8007cee:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007cf2:	22a0      	movs	r2, #160	; 0xa0
 8007cf4:	4611      	mov	r1, r2
 8007cf6:	4650      	mov	r0, sl
 8007cf8:	f8c4 b4b8 	str.w	fp, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007cfc:	f8a4 b4bc 	strh.w	fp, [r4, #1212]	; 0x4bc
 8007d00:	f00b f8e8 	bl	8012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007d04:	22a0      	movs	r2, #160	; 0xa0
 8007d06:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007d0a:	4650      	mov	r0, sl
 8007d0c:	f00b f8ed 	bl	8012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007d10:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007d14:	2b20      	cmp	r3, #32
 8007d16:	d005      	beq.n	8007d24 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x558>
        lineWidthQ5 = widthQ5;
 8007d18:	2320      	movs	r3, #32
 8007d1a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007d1e:	4650      	mov	r0, sl
 8007d20:	f00a ffe2 	bl	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007d24:	4650      	mov	r0, sl
 8007d26:	2101      	movs	r1, #1
 8007d28:	f00b f8ea 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007d2c:	4651      	mov	r1, sl
 8007d2e:	4638      	mov	r0, r7
 8007d30:	f008 feee 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007d34:	f04f 36ff 	mov.w	r6, #4294967295
        boundingArea = calculateBoundingArea();
 8007d38:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007d3a:	ee18 0a10 	vmov	r0, s16
 8007d3e:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007d40:	f04f 0900 	mov.w	r9, #0
 8007d44:	2145      	movs	r1, #69	; 0x45
 8007d46:	f7fa fe5d 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007d4a:	ee18 1a10 	vmov	r1, s16
 8007d4e:	4628      	mov	r0, r5
        color = newColor;
 8007d50:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
        linespace = space;
 8007d54:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007d58:	f00b fa68 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007d5c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007d60:	ee18 3a10 	vmov	r3, s16
 8007d64:	333c      	adds	r3, #60	; 0x3c
 8007d66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007d6a:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007e3c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>
 8007d6e:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007d72:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007d74:	ee18 0a10 	vmov	r0, s16
 8007d78:	a90a      	add	r1, sp, #40	; 0x28
 8007d7a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d7e:	f00b fcef 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d82:	ee18 1a10 	vmov	r1, s16
 8007d86:	4638      	mov	r0, r7
 8007d88:	f008 fec2 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007d8c:	ee18 0a90 	vmov	r0, s17
 8007d90:	220c      	movs	r2, #12
 8007d92:	2136      	movs	r1, #54	; 0x36
 8007d94:	f7fa fe36 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8007d98:	ee18 1a90 	vmov	r1, s17
 8007d9c:	4628      	mov	r0, r5
        color = newColor;
 8007d9e:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
        linespace = space;
 8007da2:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007da6:	f00b fa41 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007daa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007dae:	ee18 3a90 	vmov	r3, s17
 8007db2:	333c      	adds	r3, #60	; 0x3c
 8007db4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007db8:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007dba:	ee18 0a90 	vmov	r0, s17
 8007dbe:	a90a      	add	r1, sp, #40	; 0x28
 8007dc0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007dc4:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007dc8:	f00b fcca 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007dcc:	ee18 1a90 	vmov	r1, s17
 8007dd0:	4638      	mov	r0, r7
 8007dd2:	f008 fe9d 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007dd6:	ee1c 0a10 	vmov	r0, s24
 8007dda:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007dde:	2121      	movs	r1, #33	; 0x21
 8007de0:	f7fa fe10 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8007de4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007de6:	aa0a      	add	r2, sp, #40	; 0x28
 8007de8:	a909      	add	r1, sp, #36	; 0x24
 8007dea:	ee1c 0a10 	vmov	r0, s24
 8007dee:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007df2:	2302      	movs	r3, #2
 8007df4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007df8:	f00c f86d 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007dfc:	233a      	movs	r3, #58	; 0x3a
        updateTextPosition();
 8007dfe:	ee1c 0a10 	vmov	r0, s24
 8007e02:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007e06:	f7fa fe41 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007e0a:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007e0e:	3304      	adds	r3, #4
 8007e10:	4638      	mov	r0, r7
 8007e12:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007e16:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007e1a:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
 8007e1e:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007e22:	f008 fe75 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007e26:	4620      	mov	r0, r4
 8007e28:	b00d      	add	sp, #52	; 0x34
 8007e2a:	ecbd 8b0a 	vpop	{d8-d12}
 8007e2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007e32:	bf00      	nop
 8007e34:	20013898 	.word	0x20013898
 8007e38:	0802d56d 	.word	0x0802d56d
 8007e3c:	0802d5e0 	.word	0x0802d5e0
 8007e40:	20013890 	.word	0x20013890

08007e44 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007e44:	4770      	bx	lr

08007e46 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e46:	4770      	bx	lr

08007e48 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007e48:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e4a:	68c2      	ldr	r2, [r0, #12]
 8007e4c:	6844      	ldr	r4, [r0, #4]
 8007e4e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007e50:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007e52:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007e56:	07d2      	lsls	r2, r2, #31
 8007e58:	bf48      	it	mi
 8007e5a:	5962      	ldrmi	r2, [r4, r5]
 8007e5c:	689b      	ldr	r3, [r3, #8]
    }
 8007e5e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007e60:	bf48      	it	mi
 8007e62:	58d3      	ldrmi	r3, [r2, r3]
 8007e64:	4718      	bx	r3

08007e66 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007e66:	6843      	ldr	r3, [r0, #4]
 8007e68:	b12b      	cbz	r3, 8007e76 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007e6a:	6883      	ldr	r3, [r0, #8]
 8007e6c:	b92b      	cbnz	r3, 8007e7a <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007e6e:	68c0      	ldr	r0, [r0, #12]
 8007e70:	f000 0001 	and.w	r0, r0, #1
 8007e74:	4770      	bx	lr
 8007e76:	4618      	mov	r0, r3
 8007e78:	4770      	bx	lr
 8007e7a:	2001      	movs	r0, #1
    }
 8007e7c:	4770      	bx	lr

08007e7e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007e7e:	b510      	push	{r4, lr}
 8007e80:	2110      	movs	r1, #16
 8007e82:	4604      	mov	r4, r0
 8007e84:	f022 ffd1 	bl	802ae2a <_ZdlPvj>
 8007e88:	4620      	mov	r0, r4
 8007e8a:	bd10      	pop	{r4, pc}

08007e8c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007e8c:	b510      	push	{r4, lr}
 8007e8e:	4b03      	ldr	r3, [pc, #12]	; (8007e9c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8007e90:	6003      	str	r3, [r0, #0]
 8007e92:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007e94:	f00d fa12 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007e98:	4620      	mov	r0, r4
 8007e9a:	bd10      	pop	{r4, pc}
 8007e9c:	0802ed98 	.word	0x0802ed98

08007ea0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007ea0:	b507      	push	{r0, r1, r2, lr}
 8007ea2:	4b07      	ldr	r3, [pc, #28]	; (8007ec0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007ea4:	6003      	str	r3, [r0, #0]
 8007ea6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007ea8:	f00d fa08 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007eac:	9801      	ldr	r0, [sp, #4]
 8007eae:	f241 015c 	movw	r1, #4188	; 0x105c
 8007eb2:	f022 ffba 	bl	802ae2a <_ZdlPvj>
 8007eb6:	9801      	ldr	r0, [sp, #4]
 8007eb8:	b003      	add	sp, #12
 8007eba:	f85d fb04 	ldr.w	pc, [sp], #4
 8007ebe:	bf00      	nop
 8007ec0:	0802ed98 	.word	0x0802ed98

08007ec4 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007ec4:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007ec8:	4288      	cmp	r0, r1
{
 8007eca:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007ecc:	d105      	bne.n	8007eda <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007ece:	f00e fef7 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007ed2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007ed6:	f7fc bd97 	b.w	8004a08 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007eda:	bd08      	pop	{r3, pc}

08007edc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ee0:	ed2d 8b02 	vpush	{d8}
 8007ee4:	4604      	mov	r4, r0
 8007ee6:	b08d      	sub	sp, #52	; 0x34
 8007ee8:	f010 fb6a 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007eec:	4622      	mov	r2, r4
 8007eee:	2500      	movs	r5, #0
 8007ef0:	4ba4      	ldr	r3, [pc, #656]	; (8008184 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007ef2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007ef4:	f842 3b40 	str.w	r3, [r2], #64
 8007ef8:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8007efc:	4629      	mov	r1, r5
 8007efe:	2226      	movs	r2, #38	; 0x26
 8007f00:	ee18 0a10 	vmov	r0, s16
 8007f04:	f023 ffa9 	bl	802be5a <memset>
 8007f08:	ee18 0a10 	vmov	r0, s16
 8007f0c:	f7fa fdac 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8007f10:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007f14:	26ff      	movs	r6, #255	; 0xff
 8007f16:	4b9c      	ldr	r3, [pc, #624]	; (8008188 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007f18:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007f1a:	2226      	movs	r2, #38	; 0x26
 8007f1c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007f20:	4629      	mov	r1, r5
 8007f22:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007f26:	66a5      	str	r5, [r4, #104]	; 0x68
 8007f28:	4658      	mov	r0, fp
 8007f2a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f2e:	f023 ff94 	bl	802be5a <memset>
 8007f32:	4658      	mov	r0, fp
 8007f34:	f7fa fd98 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8007f38:	4b94      	ldr	r3, [pc, #592]	; (800818c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8007f3a:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007f3c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007f40:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007f44:	a90a      	add	r1, sp, #40	; 0x28
 8007f46:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007f4a:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007f4e:	4658      	mov	r0, fp
 8007f50:	f00c f9b7 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007f54:	4638      	mov	r0, r7
 8007f56:	f00a fea7 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 8007f5a:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007f5e:	4618      	mov	r0, r3
 8007f60:	9303      	str	r3, [sp, #12]
 8007f62:	f7fa fb85 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007f66:	4b8a      	ldr	r3, [pc, #552]	; (8008190 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007f68:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007f6c:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8007f70:	3324      	adds	r3, #36	; 0x24
 8007f72:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007f76:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007f7a:	4650      	mov	r0, sl
 8007f7c:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8007f80:	f7fa fdd6 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8007f84:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8007f88:	4648      	mov	r0, r9
 8007f8a:	f7fa fdd1 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8007f8e:	4640      	mov	r0, r8
 8007f90:	f7fa fdce 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8007f94:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007f98:	4618      	mov	r0, r3
 8007f9a:	ee08 3a90 	vmov	s17, r3
 8007f9e:	f00c fac7 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007fa2:	4a7c      	ldr	r2, [pc, #496]	; (8008194 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8007fa4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007fa8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007fac:	4a7a      	ldr	r2, [pc, #488]	; (8008198 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007fae:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007fb2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007fb6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007fba:	f00d f975 	bl	80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007fbe:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007fc2:	462a      	mov	r2, r5
 8007fc4:	ee18 0a10 	vmov	r0, s16
 8007fc8:	9300      	str	r3, [sp, #0]
 8007fca:	4629      	mov	r1, r5
 8007fcc:	23f0      	movs	r3, #240	; 0xf0
 8007fce:	f7fa fd26 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8007fd2:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007fd4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007fd8:	66a3      	str	r3, [r4, #104]	; 0x68
 8007fda:	ee18 1a10 	vmov	r1, s16
 8007fde:	4630      	mov	r0, r6
 8007fe0:	f008 fd96 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007fe4:	462a      	mov	r2, r5
 8007fe6:	4629      	mov	r1, r5
 8007fe8:	4658      	mov	r0, fp
 8007fea:	f7fa fd0b 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8007fee:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007ff0:	a90a      	add	r1, sp, #40	; 0x28
 8007ff2:	4658      	mov	r0, fp
 8007ff4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ff8:	f00c f963 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007ffc:	4659      	mov	r1, fp
 8007ffe:	4630      	mov	r0, r6
 8008000:	f008 fd86 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008004:	230a      	movs	r3, #10
 8008006:	9300      	str	r3, [sp, #0]
 8008008:	2232      	movs	r2, #50	; 0x32
 800800a:	23f0      	movs	r3, #240	; 0xf0
 800800c:	4629      	mov	r1, r5
 800800e:	4638      	mov	r0, r7
 8008010:	f7fa fd05 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008014:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008018:	22a0      	movs	r2, #160	; 0xa0
 800801a:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 800801e:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8008022:	9b03      	ldr	r3, [sp, #12]
 8008024:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8008028:	4611      	mov	r1, r2
 800802a:	4638      	mov	r0, r7
 800802c:	f00a ff52 	bl	8012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008030:	22a0      	movs	r2, #160	; 0xa0
 8008032:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008036:	4638      	mov	r0, r7
 8008038:	f00a ff57 	bl	8012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800803c:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8008040:	2b20      	cmp	r3, #32
 8008042:	d005      	beq.n	8008050 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8008044:	2320      	movs	r3, #32
 8008046:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800804a:	4638      	mov	r0, r7
 800804c:	f00a fe4c 	bl	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8008050:	4638      	mov	r0, r7
 8008052:	2101      	movs	r1, #1
 8008054:	f00a ff54 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008058:	4639      	mov	r1, r7
 800805a:	4630      	mov	r0, r6
 800805c:	f008 fd58 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8008060:	ad04      	add	r5, sp, #16
        color = newColor;
 8008062:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8008066:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 800806a:	2223      	movs	r2, #35	; 0x23
 800806c:	4650      	mov	r0, sl
 800806e:	2145      	movs	r1, #69	; 0x45
 8008070:	f7fa fcc8 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8008074:	4651      	mov	r1, sl
 8008076:	4628      	mov	r0, r5
        color = newColor;
 8008078:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 800807c:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8008080:	f00b f8d4 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008084:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008088:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800808c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008090:	4b42      	ldr	r3, [pc, #264]	; (800819c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8008092:	930a      	str	r3, [sp, #40]	; 0x28
 8008094:	223f      	movs	r2, #63	; 0x3f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8008096:	a90a      	add	r1, sp, #40	; 0x28
 8008098:	4650      	mov	r0, sl
 800809a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800809e:	f00b fb5f 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080a2:	4651      	mov	r1, sl
 80080a4:	4630      	mov	r0, r6
 80080a6:	f008 fd33 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80080aa:	223c      	movs	r2, #60	; 0x3c
 80080ac:	4648      	mov	r0, r9
 80080ae:	211f      	movs	r1, #31
 80080b0:	f7fa fca8 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80080b4:	4649      	mov	r1, r9
 80080b6:	4628      	mov	r0, r5
        color = newColor;
 80080b8:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80080bc:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80080c0:	f00b f8b4 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80080c4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80080c8:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 80080cc:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 80080d0:	4b32      	ldr	r3, [pc, #200]	; (800819c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 80080d2:	930a      	str	r3, [sp, #40]	; 0x28
 80080d4:	2234      	movs	r2, #52	; 0x34
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80080d6:	a90a      	add	r1, sp, #40	; 0x28
 80080d8:	4648      	mov	r0, r9
 80080da:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80080de:	f00b fb3f 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80080e2:	4649      	mov	r1, r9
 80080e4:	4630      	mov	r0, r6
 80080e6:	f008 fd13 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80080ea:	220c      	movs	r2, #12
 80080ec:	4640      	mov	r0, r8
 80080ee:	2136      	movs	r1, #54	; 0x36
 80080f0:	f7fa fc88 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 80080f4:	4641      	mov	r1, r8
 80080f6:	4628      	mov	r0, r5
        color = newColor;
 80080f8:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80080fc:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8008100:	f00b f894 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008104:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008108:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 800810c:	4b23      	ldr	r3, [pc, #140]	; (800819c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 800810e:	930a      	str	r3, [sp, #40]	; 0x28
 8008110:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8008114:	233e      	movs	r3, #62	; 0x3e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8008116:	a90a      	add	r1, sp, #40	; 0x28
 8008118:	4640      	mov	r0, r8
 800811a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800811e:	f00b fb1f 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008122:	4641      	mov	r1, r8
 8008124:	4630      	mov	r0, r6
 8008126:	f008 fcf3 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800812a:	ee18 0a90 	vmov	r0, s17
 800812e:	f240 1201 	movw	r2, #257	; 0x101
 8008132:	2121      	movs	r1, #33	; 0x21
 8008134:	f7fa fc66 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8008138:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800813a:	aa0a      	add	r2, sp, #40	; 0x28
 800813c:	a909      	add	r1, sp, #36	; 0x24
 800813e:	ee18 0a90 	vmov	r0, s17
 8008142:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008146:	2302      	movs	r3, #2
 8008148:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800814c:	f00b fec3 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008150:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8008152:	ee18 0a90 	vmov	r0, s17
 8008156:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800815a:	f7fa fc97 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800815e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8008162:	330c      	adds	r3, #12
 8008164:	4630      	mov	r0, r6
        colorPressed = col;
 8008166:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 800816a:	ee18 1a90 	vmov	r1, s17
 800816e:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8008172:	f008 fccd 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008176:	4620      	mov	r0, r4
 8008178:	b00d      	add	sp, #52	; 0x34
 800817a:	ecbd 8b02 	vpop	{d8}
 800817e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008182:	bf00      	nop
 8008184:	0802ed98 	.word	0x0802ed98
 8008188:	0802fb34 	.word	0x0802fb34
 800818c:	0802fd80 	.word	0x0802fd80
 8008190:	0802f868 	.word	0x0802f868
 8008194:	0802ed80 	.word	0x0802ed80
 8008198:	08007ec5 	.word	0x08007ec5
 800819c:	0802d5e0 	.word	0x0802d5e0

080081a0 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80081a0:	4770      	bx	lr

080081a2 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081a2:	4770      	bx	lr

080081a4 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80081a4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081a6:	68c2      	ldr	r2, [r0, #12]
 80081a8:	6844      	ldr	r4, [r0, #4]
 80081aa:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80081ac:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80081ae:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80081b2:	07d2      	lsls	r2, r2, #31
 80081b4:	bf48      	it	mi
 80081b6:	5962      	ldrmi	r2, [r4, r5]
 80081b8:	689b      	ldr	r3, [r3, #8]
    }
 80081ba:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80081bc:	bf48      	it	mi
 80081be:	58d3      	ldrmi	r3, [r2, r3]
 80081c0:	4718      	bx	r3

080081c2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80081c2:	6843      	ldr	r3, [r0, #4]
 80081c4:	b12b      	cbz	r3, 80081d2 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80081c6:	6883      	ldr	r3, [r0, #8]
 80081c8:	b92b      	cbnz	r3, 80081d6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80081ca:	68c0      	ldr	r0, [r0, #12]
 80081cc:	f000 0001 	and.w	r0, r0, #1
 80081d0:	4770      	bx	lr
 80081d2:	4618      	mov	r0, r3
 80081d4:	4770      	bx	lr
 80081d6:	2001      	movs	r0, #1
    }
 80081d8:	4770      	bx	lr

080081da <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80081da:	b510      	push	{r4, lr}
 80081dc:	2110      	movs	r1, #16
 80081de:	4604      	mov	r4, r0
 80081e0:	f022 fe23 	bl	802ae2a <_ZdlPvj>
 80081e4:	4620      	mov	r0, r4
 80081e6:	bd10      	pop	{r4, pc}

080081e8 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80081e8:	b510      	push	{r4, lr}
 80081ea:	4b03      	ldr	r3, [pc, #12]	; (80081f8 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 80081ec:	6003      	str	r3, [r0, #0]
 80081ee:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80081f0:	f00d f864 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80081f4:	4620      	mov	r0, r4
 80081f6:	bd10      	pop	{r4, pc}
 80081f8:	0802ede4 	.word	0x0802ede4

080081fc <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 80081fc:	b507      	push	{r0, r1, r2, lr}
 80081fe:	4b07      	ldr	r3, [pc, #28]	; (800821c <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8008200:	6003      	str	r3, [r0, #0]
 8008202:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008204:	f00d f85a 	bl	80152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008208:	9801      	ldr	r0, [sp, #4]
 800820a:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800820e:	f022 fe0c 	bl	802ae2a <_ZdlPvj>
 8008212:	9801      	ldr	r0, [sp, #4]
 8008214:	b003      	add	sp, #12
 8008216:	f85d fb04 	ldr.w	pc, [sp], #4
 800821a:	bf00      	nop
 800821c:	0802ede4 	.word	0x0802ede4

08008220 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8008220:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8008224:	4288      	cmp	r0, r1
{
 8008226:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008228:	d105      	bne.n	8008236 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800822a:	f00e fd49 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 800822e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8008232:	f7fc bbb9 	b.w	80049a8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8008236:	bd08      	pop	{r3, pc}

08008238 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800823c:	ed2d 8b04 	vpush	{d8-d9}
 8008240:	4604      	mov	r4, r0
 8008242:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8008244:	46a3      	mov	fp, r4
 8008246:	2500      	movs	r5, #0
 8008248:	f010 f9ba 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
 800824c:	4bd1      	ldr	r3, [pc, #836]	; (8008594 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 800824e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008250:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8008254:	2226      	movs	r2, #38	; 0x26
 8008256:	4629      	mov	r1, r5
 8008258:	4658      	mov	r0, fp
 800825a:	f023 fdfe 	bl	802be5a <memset>
 800825e:	4658      	mov	r0, fp
 8008260:	f7fa fc02 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 8008264:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8008268:	26ff      	movs	r6, #255	; 0xff
 800826a:	4bcb      	ldr	r3, [pc, #812]	; (8008598 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 800826c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800826e:	2226      	movs	r2, #38	; 0x26
 8008270:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8008274:	4629      	mov	r1, r5
 8008276:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800827a:	4650      	mov	r0, sl
 800827c:	66a5      	str	r5, [r4, #104]	; 0x68
 800827e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008282:	f023 fdea 	bl	802be5a <memset>
 8008286:	4650      	mov	r0, sl
 8008288:	f7fa fbee 	bl	8002a68 <_ZN8touchgfx6WidgetC1Ev>
 800828c:	4bc3      	ldr	r3, [pc, #780]	; (800859c <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 800828e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8008290:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8008294:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8008298:	a90a      	add	r1, sp, #40	; 0x28
 800829a:	4650      	mov	r0, sl
 800829c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80082a0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80082a4:	f00c f80d 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80082a8:	4648      	mov	r0, r9
 80082aa:	f7fa fc41 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80082ae:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80082b2:	4bbb      	ldr	r3, [pc, #748]	; (80085a0 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80082b4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80082b8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80082bc:	4638      	mov	r0, r7
 80082be:	f00a fcf3 	bl	8012ca8 <_ZN8touchgfx4LineC1Ev>
 80082c2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80082c6:	4618      	mov	r0, r3
 80082c8:	9303      	str	r3, [sp, #12]
 80082ca:	f7fa f9d1 	bl	8002670 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80082ce:	4bb5      	ldr	r3, [pc, #724]	; (80085a4 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80082d0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80082d4:	3324      	adds	r3, #36	; 0x24
 80082d6:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80082da:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 80082de:	4618      	mov	r0, r3
 80082e0:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80082e4:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80082e8:	ee09 3a10 	vmov	s18, r3
 80082ec:	f00c f920 	bl	8014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80082f0:	4640      	mov	r0, r8
 80082f2:	f7fa fc1d 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 80082f6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80082fa:	4618      	mov	r0, r3
 80082fc:	ee08 3a10 	vmov	s16, r3
 8008300:	f7fa fc16 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
 8008304:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008308:	4618      	mov	r0, r3
 800830a:	ee08 3a90 	vmov	s17, r3
 800830e:	f7fa fc0f 	bl	8002b30 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8008312:	4aa5      	ldr	r2, [pc, #660]	; (80085a8 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8008314:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008318:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 800831c:	4aa3      	ldr	r2, [pc, #652]	; (80085ac <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800831e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8008322:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8008326:	f504 7024 	add.w	r0, r4, #656	; 0x290
 800832a:	f00c ffbd 	bl	80152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800832e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8008332:	462a      	mov	r2, r5
 8008334:	4658      	mov	r0, fp
 8008336:	9300      	str	r3, [sp, #0]
 8008338:	4629      	mov	r1, r5
 800833a:	23f0      	movs	r3, #240	; 0xf0
 800833c:	f7fa fb6f 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008340:	1d26      	adds	r6, r4, #4
        color = newColor;
 8008342:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008346:	66a3      	str	r3, [r4, #104]	; 0x68
 8008348:	4659      	mov	r1, fp
 800834a:	4630      	mov	r0, r6
 800834c:	f008 fbe0 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8008350:	462a      	mov	r2, r5
 8008352:	4650      	mov	r0, sl
 8008354:	4629      	mov	r1, r5
 8008356:	f7fa fb55 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 800835a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800835c:	4650      	mov	r0, sl
 800835e:	a90a      	add	r1, sp, #40	; 0x28
 8008360:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008364:	f00b ffad 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008368:	4651      	mov	r1, sl
 800836a:	4630      	mov	r0, r6
 800836c:	f008 fbd0 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8008370:	f44f 729a 	mov.w	r2, #308	; 0x134
 8008374:	2156      	movs	r1, #86	; 0x56
 8008376:	4648      	mov	r0, r9
 8008378:	f7fa fb44 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 800837c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8008380:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8008384:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8008388:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 800838c:	4650      	mov	r0, sl
 800838e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8008392:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8008396:	4649      	mov	r1, r9
 8008398:	4798      	blx	r3
 800839a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800839e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80083a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80083a6:	4b82      	ldr	r3, [pc, #520]	; (80085b0 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 80083a8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80083aa:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80083ae:	b92b      	cbnz	r3, 80083bc <_ZN20Project_InfoViewBaseC1Ev+0x184>
 80083b0:	4b80      	ldr	r3, [pc, #512]	; (80085b4 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80083b2:	4a81      	ldr	r2, [pc, #516]	; (80085b8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80083b4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80083b6:	4881      	ldr	r0, [pc, #516]	; (80085bc <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80083b8:	f023 fb4a 	bl	802ba50 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80083bc:	4b80      	ldr	r3, [pc, #512]	; (80085c0 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80083be:	881b      	ldrh	r3, [r3, #0]
 80083c0:	2b22      	cmp	r3, #34	; 0x22
 80083c2:	d803      	bhi.n	80083cc <_ZN20Project_InfoViewBaseC1Ev+0x194>
 80083c4:	4b7f      	ldr	r3, [pc, #508]	; (80085c4 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 80083c6:	4a7c      	ldr	r2, [pc, #496]	; (80085b8 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80083c8:	2161      	movs	r1, #97	; 0x61
 80083ca:	e7f4      	b.n	80083b6 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 80083cc:	4b7e      	ldr	r3, [pc, #504]	; (80085c8 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 80083ce:	2122      	movs	r1, #34	; 0x22
 80083d0:	6818      	ldr	r0, [r3, #0]
 80083d2:	f000 fb1b 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80083d6:	4a7d      	ldr	r2, [pc, #500]	; (80085cc <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 80083d8:	4603      	mov	r3, r0
 80083da:	2104      	movs	r1, #4
 80083dc:	4650      	mov	r0, sl
 80083de:	f011 fe1d 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 80083e2:	4648      	mov	r0, r9
        wc1 = value;
 80083e4:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80083e8:	f00b f99a 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80083ec:	4b78      	ldr	r3, [pc, #480]	; (80085d0 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 80083ee:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 80083f0:	a90a      	add	r1, sp, #40	; 0x28
 80083f2:	2323      	movs	r3, #35	; 0x23
 80083f4:	4648      	mov	r0, r9
 80083f6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80083fa:	f00b f9b1 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80083fe:	4649      	mov	r1, r9
 8008400:	4630      	mov	r0, r6
 8008402:	f008 fb85 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008406:	230a      	movs	r3, #10
 8008408:	9300      	str	r3, [sp, #0]
 800840a:	2232      	movs	r2, #50	; 0x32
 800840c:	23f0      	movs	r3, #240	; 0xf0
 800840e:	4629      	mov	r1, r5
 8008410:	4638      	mov	r0, r7
 8008412:	f7fa fb04 	bl	8002a1e <_ZN8touchgfx8Drawable11setPositionEssss>
 8008416:	9b03      	ldr	r3, [sp, #12]
 8008418:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800841c:	22a0      	movs	r2, #160	; 0xa0
 800841e:	4611      	mov	r1, r2
 8008420:	4638      	mov	r0, r7
 8008422:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008426:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800842a:	f00a fd53 	bl	8012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800842e:	22a0      	movs	r2, #160	; 0xa0
 8008430:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008434:	4638      	mov	r0, r7
 8008436:	f00a fd58 	bl	8012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800843a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800843e:	2b20      	cmp	r3, #32
 8008440:	d005      	beq.n	800844e <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8008442:	2320      	movs	r3, #32
 8008444:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008448:	4638      	mov	r0, r7
 800844a:	f00a fc4d 	bl	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800844e:	4638      	mov	r0, r7
 8008450:	2101      	movs	r1, #1
 8008452:	f00a fd55 	bl	8012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008456:	4639      	mov	r1, r7
 8008458:	4630      	mov	r0, r6
 800845a:	f008 fb59 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800845e:	ee19 0a10 	vmov	r0, s18
 8008462:	22f0      	movs	r2, #240	; 0xf0
 8008464:	2121      	movs	r1, #33	; 0x21
 8008466:	f7fa facd 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 800846a:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800846c:	aa0a      	add	r2, sp, #40	; 0x28
 800846e:	a909      	add	r1, sp, #36	; 0x24
 8008470:	ee19 0a10 	vmov	r0, s18
 8008474:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008478:	2302      	movs	r3, #2
 800847a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800847e:	f00b fd2a 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8008482:	234a      	movs	r3, #74	; 0x4a
        updateTextPosition();
 8008484:	ee19 0a10 	vmov	r0, s18
 8008488:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 800848c:	f7fa fafe 	bl	8002a8c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8008490:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8008494:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8008498:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 800849c:	ee19 1a10 	vmov	r1, s18
 80084a0:	4630      	mov	r0, r6
        colorPressed = col;
 80084a2:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80084a6:	ad04      	add	r5, sp, #16
 80084a8:	f008 fb32 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80084ac:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80084b0:	225b      	movs	r2, #91	; 0x5b
 80084b2:	4640      	mov	r0, r8
 80084b4:	2105      	movs	r1, #5
 80084b6:	f7fa faa5 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80084ba:	4641      	mov	r1, r8
 80084bc:	4628      	mov	r0, r5
        color = newColor;
 80084be:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80084c2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80084c6:	f00a feb1 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80084ca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80084ce:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80084d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80084d6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80085d0 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 80084da:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80084de:	234b      	movs	r3, #75	; 0x4b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 80084e0:	a90a      	add	r1, sp, #40	; 0x28
 80084e2:	4640      	mov	r0, r8
 80084e4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80084e8:	f00b f93a 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084ec:	4641      	mov	r1, r8
 80084ee:	4630      	mov	r0, r6
 80084f0:	f008 fb0e 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 80084f4:	ee18 0a10 	vmov	r0, s16
 80084f8:	2223      	movs	r2, #35	; 0x23
 80084fa:	2145      	movs	r1, #69	; 0x45
 80084fc:	f7fa fa82 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8008500:	ee18 1a10 	vmov	r1, s16
 8008504:	4628      	mov	r0, r5
        color = newColor;
 8008506:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800850a:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800850e:	f00a fe8d 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008512:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008516:	ee18 3a10 	vmov	r3, s16
 800851a:	333c      	adds	r3, #60	; 0x3c
 800851c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008520:	234d      	movs	r3, #77	; 0x4d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8008522:	ee18 0a10 	vmov	r0, s16
 8008526:	a90a      	add	r1, sp, #40	; 0x28
 8008528:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800852c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8008530:	f00b f916 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008534:	ee18 1a10 	vmov	r1, s16
 8008538:	4630      	mov	r0, r6
 800853a:	f008 fae9 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800853e:	ee18 0a90 	vmov	r0, s17
 8008542:	220c      	movs	r2, #12
 8008544:	2136      	movs	r1, #54	; 0x36
 8008546:	f7fa fa5d 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 800854a:	ee18 1a90 	vmov	r1, s17
 800854e:	4628      	mov	r0, r5
        color = newColor;
 8008550:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008554:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008558:	f00a fe68 	bl	801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800855c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008560:	ee18 3a90 	vmov	r3, s17
 8008564:	333c      	adds	r3, #60	; 0x3c
 8008566:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800856a:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 800856c:	ee18 0a90 	vmov	r0, s17
 8008570:	a90a      	add	r1, sp, #40	; 0x28
 8008572:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008576:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800857a:	f00b f8f1 	bl	8013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800857e:	4630      	mov	r0, r6
 8008580:	ee18 1a90 	vmov	r1, s17
 8008584:	f008 fac4 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8008588:	4620      	mov	r0, r4
 800858a:	b00d      	add	sp, #52	; 0x34
 800858c:	ecbd 8b04 	vpop	{d8-d9}
 8008590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008594:	0802ede4 	.word	0x0802ede4
 8008598:	0802fb34 	.word	0x0802fb34
 800859c:	0802fd80 	.word	0x0802fd80
 80085a0:	0802d680 	.word	0x0802d680
 80085a4:	0802f868 	.word	0x0802f868
 80085a8:	0802edcc 	.word	0x0802edcc
 80085ac:	08008221 	.word	0x08008221
 80085b0:	2001388c 	.word	0x2001388c
 80085b4:	0802d430 	.word	0x0802d430
 80085b8:	0802d535 	.word	0x0802d535
 80085bc:	0802d4ad 	.word	0x0802d4ad
 80085c0:	20013890 	.word	0x20013890
 80085c4:	0802d4f4 	.word	0x0802d4f4
 80085c8:	20013898 	.word	0x20013898
 80085cc:	0802d56d 	.word	0x0802d56d
 80085d0:	0802d5e0 	.word	0x0802d5e0

080085d4 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 80085d4:	4770      	bx	lr

080085d6 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 80085d6:	4770      	bx	lr

080085d8 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 80085d8:	b510      	push	{r4, lr}
}
 80085da:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 80085dc:	4604      	mov	r4, r0
}
 80085de:	f022 fc24 	bl	802ae2a <_ZdlPvj>
 80085e2:	4620      	mov	r0, r4
 80085e4:	bd10      	pop	{r4, pc}
	...

080085e8 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 80085e8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80085ec:	4604      	mov	r4, r0
 80085ee:	4626      	mov	r6, r4
 80085f0:	f00f ffe6 	bl	80185c0 <_ZN8touchgfx6ScreenC1Ev>
 80085f4:	2500      	movs	r5, #0
 80085f6:	4b2e      	ldr	r3, [pc, #184]	; (80086b0 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 80085f8:	63e5      	str	r5, [r4, #60]	; 0x3c
 80085fa:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 80085fe:	4b2d      	ldr	r3, [pc, #180]	; (80086b4 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8008600:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8008602:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008606:	f44f 7280 	mov.w	r2, #256	; 0x100
 800860a:	23ff      	movs	r3, #255	; 0xff
 800860c:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8008610:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008614:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008618:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 800861c:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8008620:	4a25      	ldr	r2, [pc, #148]	; (80086b8 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8008622:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008626:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 800862a:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 800862c:	a901      	add	r1, sp, #4
 800862e:	4638      	mov	r0, r7
 8008630:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008634:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008638:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 800863c:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8008640:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008644:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008648:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 800864c:	66a5      	str	r5, [r4, #104]	; 0x68
 800864e:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008652:	f00b fe36 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008656:	462a      	mov	r2, r5
 8008658:	4629      	mov	r1, r5
 800865a:	4630      	mov	r0, r6
 800865c:	f7fa f9d2 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8008660:	4630      	mov	r0, r6
 8008662:	21f0      	movs	r1, #240	; 0xf0
 8008664:	f7f9 ff50 	bl	8002508 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8008668:	4630      	mov	r0, r6
 800866a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800866e:	f7f9 ff4d 	bl	800250c <_ZN8touchgfx8Drawable9setHeightEs>
 8008672:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8008676:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800867a:	66a3      	str	r3, [r4, #104]	; 0x68
 800867c:	4631      	mov	r1, r6
 800867e:	4640      	mov	r0, r8
 8008680:	f008 fa46 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008684:	462a      	mov	r2, r5
 8008686:	4638      	mov	r0, r7
 8008688:	f06f 0102 	mvn.w	r1, #2
 800868c:	f7fa f9ba 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8008690:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008692:	a901      	add	r1, sp, #4
 8008694:	4638      	mov	r0, r7
 8008696:	f8ad 3004 	strh.w	r3, [sp, #4]
 800869a:	f00b fe12 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800869e:	4640      	mov	r0, r8
 80086a0:	4639      	mov	r1, r7
 80086a2:	f008 fa35 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80086a6:	4620      	mov	r0, r4
 80086a8:	b002      	add	sp, #8
 80086aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80086ae:	bf00      	nop
 80086b0:	0802ee18 	.word	0x0802ee18
 80086b4:	0802fb34 	.word	0x0802fb34
 80086b8:	0802fd80 	.word	0x0802fd80

080086bc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086bc:	4770      	bx	lr
	...

080086c0 <_Z23getFont_verdana_10_4bppv>:
{
 80086c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086c2:	4d17      	ldr	r5, [pc, #92]	; (8008720 <_Z23getFont_verdana_10_4bppv+0x60>)
 80086c4:	682c      	ldr	r4, [r5, #0]
 80086c6:	f3bf 8f5b 	dmb	ish
 80086ca:	f014 0401 	ands.w	r4, r4, #1
{
 80086ce:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80086d0:	d122      	bne.n	8008718 <_Z23getFont_verdana_10_4bppv+0x58>
 80086d2:	4628      	mov	r0, r5
 80086d4:	f022 fbab 	bl	802ae2e <__cxa_guard_acquire>
 80086d8:	b1f0      	cbz	r0, 8008718 <_Z23getFont_verdana_10_4bppv+0x58>
 80086da:	233f      	movs	r3, #63	; 0x3f
 80086dc:	9309      	str	r3, [sp, #36]	; 0x24
 80086de:	4b11      	ldr	r3, [pc, #68]	; (8008724 <_Z23getFont_verdana_10_4bppv+0x64>)
 80086e0:	9308      	str	r3, [sp, #32]
 80086e2:	4b11      	ldr	r3, [pc, #68]	; (8008728 <_Z23getFont_verdana_10_4bppv+0x68>)
 80086e4:	9307      	str	r3, [sp, #28]
 80086e6:	2301      	movs	r3, #1
 80086e8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80086ec:	9304      	str	r3, [sp, #16]
 80086ee:	2304      	movs	r3, #4
 80086f0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80086f4:	230a      	movs	r3, #10
 80086f6:	490d      	ldr	r1, [pc, #52]	; (800872c <_Z23getFont_verdana_10_4bppv+0x6c>)
 80086f8:	9300      	str	r3, [sp, #0]
 80086fa:	225f      	movs	r2, #95	; 0x5f
 80086fc:	230c      	movs	r3, #12
 80086fe:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008702:	480b      	ldr	r0, [pc, #44]	; (8008730 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008704:	940a      	str	r4, [sp, #40]	; 0x28
 8008706:	9401      	str	r4, [sp, #4]
 8008708:	f7fd fa34 	bl	8005b74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800870c:	4809      	ldr	r0, [pc, #36]	; (8008734 <_Z23getFont_verdana_10_4bppv+0x74>)
 800870e:	f023 f9bd 	bl	802ba8c <atexit>
 8008712:	4628      	mov	r0, r5
 8008714:	f022 fb97 	bl	802ae46 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008718:	4805      	ldr	r0, [pc, #20]	; (8008730 <_Z23getFont_verdana_10_4bppv+0x70>)
 800871a:	b00f      	add	sp, #60	; 0x3c
 800871c:	bd30      	pop	{r4, r5, pc}
 800871e:	bf00      	nop
 8008720:	20002934 	.word	0x20002934
 8008724:	08047a04 	.word	0x08047a04
 8008728:	08047c40 	.word	0x08047c40
 800872c:	08046a4c 	.word	0x08046a4c
 8008730:	20002938 	.word	0x20002938
 8008734:	080086bd 	.word	0x080086bd

08008738 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008738:	4770      	bx	lr
	...

0800873c <_Z23getFont_verdana_12_4bppv>:
{
 800873c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800873e:	4d17      	ldr	r5, [pc, #92]	; (800879c <_Z23getFont_verdana_12_4bppv+0x60>)
 8008740:	682c      	ldr	r4, [r5, #0]
 8008742:	f3bf 8f5b 	dmb	ish
 8008746:	f014 0401 	ands.w	r4, r4, #1
{
 800874a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800874c:	d122      	bne.n	8008794 <_Z23getFont_verdana_12_4bppv+0x58>
 800874e:	4628      	mov	r0, r5
 8008750:	f022 fb6d 	bl	802ae2e <__cxa_guard_acquire>
 8008754:	b1f0      	cbz	r0, 8008794 <_Z23getFont_verdana_12_4bppv+0x58>
 8008756:	233f      	movs	r3, #63	; 0x3f
 8008758:	9309      	str	r3, [sp, #36]	; 0x24
 800875a:	4b11      	ldr	r3, [pc, #68]	; (80087a0 <_Z23getFont_verdana_12_4bppv+0x64>)
 800875c:	9308      	str	r3, [sp, #32]
 800875e:	4b11      	ldr	r3, [pc, #68]	; (80087a4 <_Z23getFont_verdana_12_4bppv+0x68>)
 8008760:	9307      	str	r3, [sp, #28]
 8008762:	2301      	movs	r3, #1
 8008764:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008768:	9304      	str	r3, [sp, #16]
 800876a:	2304      	movs	r3, #4
 800876c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008770:	230c      	movs	r3, #12
 8008772:	490d      	ldr	r1, [pc, #52]	; (80087a8 <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008774:	9300      	str	r3, [sp, #0]
 8008776:	2260      	movs	r2, #96	; 0x60
 8008778:	230f      	movs	r3, #15
 800877a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800877e:	480b      	ldr	r0, [pc, #44]	; (80087ac <_Z23getFont_verdana_12_4bppv+0x70>)
 8008780:	940a      	str	r4, [sp, #40]	; 0x28
 8008782:	9401      	str	r4, [sp, #4]
 8008784:	f7fd f9f6 	bl	8005b74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008788:	4809      	ldr	r0, [pc, #36]	; (80087b0 <_Z23getFont_verdana_12_4bppv+0x74>)
 800878a:	f023 f97f 	bl	802ba8c <atexit>
 800878e:	4628      	mov	r0, r5
 8008790:	f022 fb59 	bl	802ae46 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008794:	4805      	ldr	r0, [pc, #20]	; (80087ac <_Z23getFont_verdana_12_4bppv+0x70>)
 8008796:	b00f      	add	sp, #60	; 0x3c
 8008798:	bd30      	pop	{r4, r5, pc}
 800879a:	bf00      	nop
 800879c:	20002964 	.word	0x20002964
 80087a0:	08047a38 	.word	0x08047a38
 80087a4:	08047c44 	.word	0x08047c44
 80087a8:	08046f80 	.word	0x08046f80
 80087ac:	20002968 	.word	0x20002968
 80087b0:	08008739 	.word	0x08008739

080087b4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087b4:	4770      	bx	lr
	...

080087b8 <_Z23getFont_verdana_19_4bppv>:
{
 80087b8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087ba:	4d17      	ldr	r5, [pc, #92]	; (8008818 <_Z23getFont_verdana_19_4bppv+0x60>)
 80087bc:	682c      	ldr	r4, [r5, #0]
 80087be:	f3bf 8f5b 	dmb	ish
 80087c2:	f014 0401 	ands.w	r4, r4, #1
{
 80087c6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80087c8:	d122      	bne.n	8008810 <_Z23getFont_verdana_19_4bppv+0x58>
 80087ca:	4628      	mov	r0, r5
 80087cc:	f022 fb2f 	bl	802ae2e <__cxa_guard_acquire>
 80087d0:	b1f0      	cbz	r0, 8008810 <_Z23getFont_verdana_19_4bppv+0x58>
 80087d2:	233f      	movs	r3, #63	; 0x3f
 80087d4:	9309      	str	r3, [sp, #36]	; 0x24
 80087d6:	4b11      	ldr	r3, [pc, #68]	; (800881c <_Z23getFont_verdana_19_4bppv+0x64>)
 80087d8:	9308      	str	r3, [sp, #32]
 80087da:	4b11      	ldr	r3, [pc, #68]	; (8008820 <_Z23getFont_verdana_19_4bppv+0x68>)
 80087dc:	9307      	str	r3, [sp, #28]
 80087de:	2301      	movs	r3, #1
 80087e0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80087e4:	9304      	str	r3, [sp, #16]
 80087e6:	2304      	movs	r3, #4
 80087e8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80087ec:	2313      	movs	r3, #19
 80087ee:	490d      	ldr	r1, [pc, #52]	; (8008824 <_Z23getFont_verdana_19_4bppv+0x6c>)
 80087f0:	9300      	str	r3, [sp, #0]
 80087f2:	225f      	movs	r2, #95	; 0x5f
 80087f4:	2317      	movs	r3, #23
 80087f6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80087fa:	480b      	ldr	r0, [pc, #44]	; (8008828 <_Z23getFont_verdana_19_4bppv+0x70>)
 80087fc:	940a      	str	r4, [sp, #40]	; 0x28
 80087fe:	9401      	str	r4, [sp, #4]
 8008800:	f7fd f9b8 	bl	8005b74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008804:	4809      	ldr	r0, [pc, #36]	; (800882c <_Z23getFont_verdana_19_4bppv+0x74>)
 8008806:	f023 f941 	bl	802ba8c <atexit>
 800880a:	4628      	mov	r0, r5
 800880c:	f022 fb1b 	bl	802ae46 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8008810:	4805      	ldr	r0, [pc, #20]	; (8008828 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008812:	b00f      	add	sp, #60	; 0x3c
 8008814:	bd30      	pop	{r4, r5, pc}
 8008816:	bf00      	nop
 8008818:	20002994 	.word	0x20002994
 800881c:	08047abc 	.word	0x08047abc
 8008820:	08047c48 	.word	0x08047c48
 8008824:	080474c0 	.word	0x080474c0
 8008828:	20002998 	.word	0x20002998
 800882c:	080087b5 	.word	0x080087b5

08008830 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008830:	4770      	bx	lr
	...

08008834 <_Z23getFont_verdana_40_4bppv>:
{
 8008834:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008836:	4d16      	ldr	r5, [pc, #88]	; (8008890 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008838:	682c      	ldr	r4, [r5, #0]
 800883a:	f3bf 8f5b 	dmb	ish
 800883e:	f014 0401 	ands.w	r4, r4, #1
{
 8008842:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008844:	d120      	bne.n	8008888 <_Z23getFont_verdana_40_4bppv+0x54>
 8008846:	4628      	mov	r0, r5
 8008848:	f022 faf1 	bl	802ae2e <__cxa_guard_acquire>
 800884c:	b1e0      	cbz	r0, 8008888 <_Z23getFont_verdana_40_4bppv+0x54>
 800884e:	233f      	movs	r3, #63	; 0x3f
 8008850:	9309      	str	r3, [sp, #36]	; 0x24
 8008852:	4b10      	ldr	r3, [pc, #64]	; (8008894 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008854:	9308      	str	r3, [sp, #32]
 8008856:	4b10      	ldr	r3, [pc, #64]	; (8008898 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008858:	4910      	ldr	r1, [pc, #64]	; (800889c <_Z23getFont_verdana_40_4bppv+0x68>)
 800885a:	4811      	ldr	r0, [pc, #68]	; (80088a0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800885c:	940a      	str	r4, [sp, #40]	; 0x28
 800885e:	2201      	movs	r2, #1
 8008860:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8008864:	2304      	movs	r3, #4
 8008866:	e9cd 3203 	strd	r3, r2, [sp, #12]
 800886a:	2328      	movs	r3, #40	; 0x28
 800886c:	9300      	str	r3, [sp, #0]
 800886e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008872:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8008876:	9405      	str	r4, [sp, #20]
 8008878:	f7fd f97c 	bl	8005b74 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800887c:	4809      	ldr	r0, [pc, #36]	; (80088a4 <_Z23getFont_verdana_40_4bppv+0x70>)
 800887e:	f023 f905 	bl	802ba8c <atexit>
 8008882:	4628      	mov	r0, r5
 8008884:	f022 fadf 	bl	802ae46 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8008888:	4805      	ldr	r0, [pc, #20]	; (80088a0 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800888a:	b00f      	add	sp, #60	; 0x3c
 800888c:	bd30      	pop	{r4, r5, pc}
 800888e:	bf00      	nop
 8008890:	200029c4 	.word	0x200029c4
 8008894:	08047c3c 	.word	0x08047c3c
 8008898:	08047c4c 	.word	0x08047c4c
 800889c:	080479f4 	.word	0x080479f4
 80088a0:	200029c8 	.word	0x200029c8
 80088a4:	08008831 	.word	0x08008831

080088a8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80088a8:	2000      	movs	r0, #0
 80088aa:	4770      	bx	lr

080088ac <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80088ac:	2000      	movs	r0, #0
 80088ae:	4770      	bx	lr

080088b0 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80088b0:	b40e      	push	{r1, r2, r3}
 80088b2:	b503      	push	{r0, r1, lr}
 80088b4:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80088b6:	2100      	movs	r1, #0
{
 80088b8:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80088bc:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80088be:	f00f f9bd 	bl	8017c3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80088c2:	b002      	add	sp, #8
 80088c4:	f85d eb04 	ldr.w	lr, [sp], #4
 80088c8:	b003      	add	sp, #12
 80088ca:	4770      	bx	lr

080088cc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80088cc:	b40c      	push	{r2, r3}
 80088ce:	b507      	push	{r0, r1, r2, lr}
 80088d0:	ab04      	add	r3, sp, #16
 80088d2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80088d6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80088d8:	f00f f9b0 	bl	8017c3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80088dc:	b003      	add	sp, #12
 80088de:	f85d eb04 	ldr.w	lr, [sp], #4
 80088e2:	b002      	add	sp, #8
 80088e4:	4770      	bx	lr
	...

080088e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80088e8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 80088ea:	b510      	push	{r4, lr}
 80088ec:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80088ee:	b373      	cbz	r3, 800894e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80088f0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 80088f2:	b92b      	cbnz	r3, 8008900 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80088f4:	4b18      	ldr	r3, [pc, #96]	; (8008958 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80088f6:	4a19      	ldr	r2, [pc, #100]	; (800895c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80088f8:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80088fa:	4819      	ldr	r0, [pc, #100]	; (8008960 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80088fc:	f023 f8a8 	bl	802ba50 <__assert_func>
            return buffer[pos];
 8008900:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008902:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008906:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008908:	b30b      	cbz	r3, 800894e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800890a:	f010 fdd2 	bl	80194b2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800890e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008910:	2b01      	cmp	r3, #1
 8008912:	d803      	bhi.n	800891c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008914:	4b13      	ldr	r3, [pc, #76]	; (8008964 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008916:	4a14      	ldr	r2, [pc, #80]	; (8008968 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008918:	21cb      	movs	r1, #203	; 0xcb
 800891a:	e7ee      	b.n	80088fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 800891c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800891e:	1c53      	adds	r3, r2, #1
 8008920:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008922:	2b09      	cmp	r3, #9
 8008924:	4619      	mov	r1, r3
 8008926:	bf88      	it	hi
 8008928:	f1a3 010a 	subhi.w	r1, r3, #10
 800892c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008930:	f640 103f 	movw	r0, #2367	; 0x93f
 8008934:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008936:	4281      	cmp	r1, r0
 8008938:	d109      	bne.n	800894e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800893a:	2b0a      	cmp	r3, #10
 800893c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008940:	bf28      	it	cs
 8008942:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008944:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008948:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800894a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 800894c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800894e:	4620      	mov	r0, r4
}
 8008950:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008954:	f010 bcb0 	b.w	80192b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008958:	0802ee44 	.word	0x0802ee44
 800895c:	0802ee4d 	.word	0x0802ee4d
 8008960:	0802eef8 	.word	0x0802eef8
 8008964:	0802ef42 	.word	0x0802ef42
 8008968:	0802ef50 	.word	0x0802ef50

0800896c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800896c:	f010 bc6b 	b.w	8019246 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008970 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008970:	b510      	push	{r4, lr}
 8008972:	b086      	sub	sp, #24
 8008974:	ac02      	add	r4, sp, #8
 8008976:	e884 0006 	stmia.w	r4, {r1, r2}
 800897a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800897c:	ab0a      	add	r3, sp, #40	; 0x28
 800897e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008980:	9301      	str	r3, [sp, #4]
 8008982:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008984:	9300      	str	r3, [sp, #0]
 8008986:	4621      	mov	r1, r4
 8008988:	9b08      	ldr	r3, [sp, #32]
 800898a:	f00d fd1b 	bl	80163c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800898e:	b006      	add	sp, #24
 8008990:	bd10      	pop	{r4, pc}
	...

08008994 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008994:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8008996:	bb18      	cbnz	r0, 80089e0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8008998:	4b12      	ldr	r3, [pc, #72]	; (80089e4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800899a:	4813      	ldr	r0, [pc, #76]	; (80089e8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800899c:	681c      	ldr	r4, [r3, #0]
 800899e:	4913      	ldr	r1, [pc, #76]	; (80089ec <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80089a0:	b1b4      	cbz	r4, 80089d0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80089a2:	6822      	ldr	r2, [r4, #0]
 80089a4:	4422      	add	r2, r4
 80089a6:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80089a8:	6862      	ldr	r2, [r4, #4]
 80089aa:	4422      	add	r2, r4
 80089ac:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80089ae:	68a2      	ldr	r2, [r4, #8]
 80089b0:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80089b2:	4b0f      	ldr	r3, [pc, #60]	; (80089f0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80089b4:	2200      	movs	r2, #0
 80089b6:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80089b8:	f000 f838 	bl	8008a2c <_ZN17TypedTextDatabase8getFontsEv>
 80089bc:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80089be:	f000 f833 	bl	8008a28 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80089c2:	4b0c      	ldr	r3, [pc, #48]	; (80089f4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80089c4:	601c      	str	r4, [r3, #0]
        fonts = f;
 80089c6:	4b0c      	ldr	r3, [pc, #48]	; (80089f8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80089c8:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80089ca:	4b0c      	ldr	r3, [pc, #48]	; (80089fc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80089cc:	8018      	strh	r0, [r3, #0]
    }
}
 80089ce:	e007      	b.n	80089e0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80089d0:	4b0b      	ldr	r3, [pc, #44]	; (8008a00 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80089d2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80089d4:	4b0b      	ldr	r3, [pc, #44]	; (8008a04 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80089d6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80089d8:	4b0b      	ldr	r3, [pc, #44]	; (8008a08 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80089da:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 80089dc:	2c00      	cmp	r4, #0
 80089de:	d1e8      	bne.n	80089b2 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80089e0:	bd38      	pop	{r3, r4, r5, pc}
 80089e2:	bf00      	nop
 80089e4:	200029f4 	.word	0x200029f4
 80089e8:	200029f8 	.word	0x200029f8
 80089ec:	200029fc 	.word	0x200029fc
 80089f0:	20002a00 	.word	0x20002a00
 80089f4:	2001388c 	.word	0x2001388c
 80089f8:	20013894 	.word	0x20013894
 80089fc:	20013890 	.word	0x20013890
 8008a00:	08047db0 	.word	0x08047db0
 8008a04:	08047c50 	.word	0x08047c50
 8008a08:	080482cc 	.word	0x080482cc

08008a0c <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008a0c:	4b04      	ldr	r3, [pc, #16]	; (8008a20 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008a0e:	681b      	ldr	r3, [r3, #0]
 8008a10:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008a14:	4b03      	ldr	r3, [pc, #12]	; (8008a24 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008a16:	681b      	ldr	r3, [r3, #0]
}
 8008a18:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008a1c:	4770      	bx	lr
 8008a1e:	bf00      	nop
 8008a20:	200029fc 	.word	0x200029fc
 8008a24:	200029f8 	.word	0x200029f8

08008a28 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008a28:	2058      	movs	r0, #88	; 0x58
 8008a2a:	4770      	bx	lr

08008a2c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008a2c:	4800      	ldr	r0, [pc, #0]	; (8008a30 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008a2e:	4770      	bx	lr
 8008a30:	20002a04 	.word	0x20002a04

08008a34 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008a34:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008a36:	f7ff febf 	bl	80087b8 <_Z23getFont_verdana_19_4bppv>
};
 8008a3a:	4c06      	ldr	r4, [pc, #24]	; (8008a54 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008a3c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008a3e:	f7ff fef9 	bl	8008834 <_Z23getFont_verdana_40_4bppv>
};
 8008a42:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008a44:	f7ff fe3c 	bl	80086c0 <_Z23getFont_verdana_10_4bppv>
};
 8008a48:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8008a4a:	f7ff fe77 	bl	800873c <_Z23getFont_verdana_12_4bppv>
};
 8008a4e:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008a50:	bd10      	pop	{r4, pc}
 8008a52:	bf00      	nop
 8008a54:	20002a04 	.word	0x20002a04

08008a58 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008a58:	4770      	bx	lr

08008a5a <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008a5a:	3804      	subs	r0, #4
 8008a5c:	4770      	bx	lr

08008a5e <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008a5e:	4770      	bx	lr

08008a60 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008a60:	4770      	bx	lr

08008a62 <_ZN24Calibration_PadPresenterD0Ev>:
 8008a62:	b510      	push	{r4, lr}
 8008a64:	2110      	movs	r1, #16
 8008a66:	4604      	mov	r4, r0
 8008a68:	f022 f9df 	bl	802ae2a <_ZdlPvj>
 8008a6c:	4620      	mov	r0, r4
 8008a6e:	bd10      	pop	{r4, pc}

08008a70 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008a70:	f1a0 0004 	sub.w	r0, r0, #4
 8008a74:	e7f5      	b.n	8008a62 <_ZN24Calibration_PadPresenterD0Ev>

08008a76 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 8008a76:	4770      	bx	lr

08008a78 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008a78:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8008a7a:	2200      	movs	r2, #0
 8008a7c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a7e:	4a04      	ldr	r2, [pc, #16]	; (8008a90 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008a80:	60c1      	str	r1, [r0, #12]
 8008a82:	f102 0408 	add.w	r4, r2, #8
 8008a86:	3224      	adds	r2, #36	; 0x24
 8008a88:	6004      	str	r4, [r0, #0]
 8008a8a:	6042      	str	r2, [r0, #4]
}
 8008a8c:	bd10      	pop	{r4, pc}
 8008a8e:	bf00      	nop
 8008a90:	0802f024 	.word	0x0802f024

08008a94 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 8008a94:	4770      	bx	lr

08008a96 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 8008a96:	4770      	bx	lr

08008a98 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008a98:	b510      	push	{r4, lr}
 8008a9a:	4b03      	ldr	r3, [pc, #12]	; (8008aa8 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008a9c:	6003      	str	r3, [r0, #0]
 8008a9e:	4604      	mov	r4, r0
 8008aa0:	f7f9 ff5a 	bl	8002958 <_ZN23Calibration_PadViewBaseD1Ev>
 8008aa4:	4620      	mov	r0, r4
 8008aa6:	bd10      	pop	{r4, pc}
 8008aa8:	0802f05c 	.word	0x0802f05c

08008aac <_ZN19Calibration_PadViewD0Ev>:
 8008aac:	b510      	push	{r4, lr}
 8008aae:	4604      	mov	r4, r0
 8008ab0:	f7ff fff2 	bl	8008a98 <_ZN19Calibration_PadViewD1Ev>
 8008ab4:	4620      	mov	r0, r4
 8008ab6:	f641 5104 	movw	r1, #7428	; 0x1d04
 8008aba:	f022 f9b6 	bl	802ae2a <_ZdlPvj>
 8008abe:	4620      	mov	r0, r4
 8008ac0:	bd10      	pop	{r4, pc}
	...

08008ac4 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008ac4:	b510      	push	{r4, lr}
 8008ac6:	4604      	mov	r4, r0
 8008ac8:	f7fa fb32 	bl	8003130 <_ZN23Calibration_PadViewBaseC1Ev>
 8008acc:	4b01      	ldr	r3, [pc, #4]	; (8008ad4 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008ace:	6023      	str	r3, [r4, #0]
}
 8008ad0:	4620      	mov	r0, r4
 8008ad2:	bd10      	pop	{r4, pc}
 8008ad4:	0802f05c 	.word	0x0802f05c

08008ad8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 8008ad8:	b570      	push	{r4, r5, r6, lr}
 8008ada:	4604      	mov	r4, r0
 8008adc:	b0ca      	sub	sp, #296	; 0x128
 8008ade:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 8008ae2:	4631      	mov	r1, r6
 8008ae4:	a80d      	add	r0, sp, #52	; 0x34
 8008ae6:	f7fa f84f 	bl	8002b88 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008aea:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008aee:	9317      	str	r3, [sp, #92]	; 0x5c
 8008af0:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008af4:	9318      	str	r3, [sp, #96]	; 0x60
 8008af6:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8008afa:	4a57      	ldr	r2, [pc, #348]	; (8008c58 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 8008afc:	9319      	str	r3, [sp, #100]	; 0x64
 8008afe:	f504 718c 	add.w	r1, r4, #280	; 0x118
 8008b02:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8008b06:	920d      	str	r2, [sp, #52]	; 0x34
 8008b08:	a81b      	add	r0, sp, #108	; 0x6c
 8008b0a:	931a      	str	r3, [sp, #104]	; 0x68
 8008b0c:	f7fa f83c 	bl	8002b88 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008b10:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8008b14:	9325      	str	r3, [sp, #148]	; 0x94
 8008b16:	4b51      	ldr	r3, [pc, #324]	; (8008c5c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 8008b18:	931b      	str	r3, [sp, #108]	; 0x6c
 8008b1a:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 8008b1e:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 8008b22:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8008b26:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8008b2a:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 8008b2e:	a827      	add	r0, sp, #156	; 0x9c
 8008b30:	f7fa f82a 	bl	8002b88 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008b34:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8008b38:	9331      	str	r3, [sp, #196]	; 0xc4
 8008b3a:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 8008b3e:	4b48      	ldr	r3, [pc, #288]	; (8008c60 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 8008b40:	9327      	str	r3, [sp, #156]	; 0x9c
 8008b42:	a832      	add	r0, sp, #200	; 0xc8
 8008b44:	f7fa f820 	bl	8002b88 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 8008b48:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8008b4c:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 8008b50:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8008b54:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 8008b58:	4b42      	ldr	r3, [pc, #264]	; (8008c64 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 8008b5a:	9332      	str	r3, [sp, #200]	; 0xc8
 8008b5c:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 8008b60:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 8008b64:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 8008b68:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8008b6c:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 8008b70:	a83e      	add	r0, sp, #248	; 0xf8
 8008b72:	f7fa f809 	bl	8002b88 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008b76:	4b3c      	ldr	r3, [pc, #240]	; (8008c68 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 8008b78:	933e      	str	r3, [sp, #248]	; 0xf8
 8008b7a:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008b7e:	4d3b      	ldr	r5, [pc, #236]	; (8008c6c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 8008b80:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 8008b84:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8008b88:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 8008b8c:	a901      	add	r1, sp, #4
 8008b8e:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 8008b92:	4837      	ldr	r0, [pc, #220]	; (8008c70 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 8008b94:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 8008b98:	220c      	movs	r2, #12
 8008b9a:	f7f7 fe59 	bl	8000850 <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008b9e:	9b01      	ldr	r3, [sp, #4]
 8008ba0:	462a      	mov	r2, r5
 8008ba2:	210a      	movs	r1, #10
 8008ba4:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8008ba8:	f011 fa38 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8008bac:	9b02      	ldr	r3, [sp, #8]
 8008bae:	462a      	mov	r2, r5
 8008bb0:	210a      	movs	r1, #10
 8008bb2:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8008bb6:	f011 fa31 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 8008bba:	9b03      	ldr	r3, [sp, #12]
 8008bbc:	462a      	mov	r2, r5
 8008bbe:	210a      	movs	r1, #10
 8008bc0:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8008bc4:	f011 fa2a 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 8008bc8:	9b04      	ldr	r3, [sp, #16]
 8008bca:	462a      	mov	r2, r5
 8008bcc:	210a      	movs	r1, #10
 8008bce:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8008bd2:	f011 fa23 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 8008bd6:	9b05      	ldr	r3, [sp, #20]
 8008bd8:	462a      	mov	r2, r5
 8008bda:	210a      	movs	r1, #10
 8008bdc:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8008be0:	f011 fa1c 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 8008be4:	9b06      	ldr	r3, [sp, #24]
 8008be6:	462a      	mov	r2, r5
 8008be8:	210a      	movs	r1, #10
 8008bea:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8008bee:	f011 fa15 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 8008bf2:	9b07      	ldr	r3, [sp, #28]
 8008bf4:	462a      	mov	r2, r5
 8008bf6:	210a      	movs	r1, #10
 8008bf8:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8008bfc:	f011 fa0e 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 8008c00:	9b08      	ldr	r3, [sp, #32]
 8008c02:	462a      	mov	r2, r5
 8008c04:	210a      	movs	r1, #10
 8008c06:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8008c0a:	f011 fa07 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 8008c0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008c10:	462a      	mov	r2, r5
 8008c12:	210a      	movs	r1, #10
 8008c14:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8008c18:	f011 fa00 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 8008c1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008c1e:	462a      	mov	r2, r5
 8008c20:	210a      	movs	r1, #10
 8008c22:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8008c26:	f011 f9f9 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 8008c2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008c2c:	462a      	mov	r2, r5
 8008c2e:	210a      	movs	r1, #10
 8008c30:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8008c34:	f011 f9f2 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 8008c38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008c3a:	462a      	mov	r2, r5
 8008c3c:	210a      	movs	r1, #10
 8008c3e:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8008c42:	f011 f9eb 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 8008c46:	4630      	mov	r0, r6
 8008c48:	f00f f922 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 8008c4c:	a80d      	add	r0, sp, #52	; 0x34
 8008c4e:	f008 f9ed 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
 8008c52:	b04a      	add	sp, #296	; 0x128
 8008c54:	bd70      	pop	{r4, r5, r6, pc}
 8008c56:	bf00      	nop
 8008c58:	0802f6dc 	.word	0x0802f6dc
 8008c5c:	0802f7a0 	.word	0x0802f7a0
 8008c60:	0802d5f0 	.word	0x0802d5f0
 8008c64:	0802fb9c 	.word	0x0802fb9c
 8008c68:	0802fd80 	.word	0x0802fd80
 8008c6c:	0802d532 	.word	0x0802d532
 8008c70:	081e0000 	.word	0x081e0000

08008c74 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008c74:	f7f9 be30 	b.w	80028d8 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008c78 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008c78:	4770      	bx	lr

08008c7a <_ZN19FrontendApplicationD0Ev>:
 8008c7a:	b510      	push	{r4, lr}
 8008c7c:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008c80:	4604      	mov	r4, r0
 8008c82:	f022 f8d2 	bl	802ae2a <_ZdlPvj>
 8008c86:	4620      	mov	r0, r4
 8008c88:	bd10      	pop	{r4, pc}

08008c8a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008c8a:	b510      	push	{r4, lr}
 8008c8c:	4604      	mov	r4, r0
    {
        model.tick();
 8008c8e:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008c92:	f000 fafb 	bl	800928c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008c96:	4620      	mov	r0, r4
    }
 8008c98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008c9c:	f00e b8d4 	b.w	8016e48 <_ZN8touchgfx11Application15handleTickEventEv>

08008ca0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008ca0:	b510      	push	{r4, lr}
 8008ca2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008ca4:	f7fb fe40 	bl	8004928 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008ca8:	4b01      	ldr	r3, [pc, #4]	; (8008cb0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8008caa:	6023      	str	r3, [r4, #0]
{

}
 8008cac:	4620      	mov	r0, r4
 8008cae:	bd10      	pop	{r4, pc}
 8008cb0:	0802f09c 	.word	0x0802f09c

08008cb4 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008cb4:	4770      	bx	lr

08008cb6 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008cb6:	3804      	subs	r0, #4
 8008cb8:	4770      	bx	lr

08008cba <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8008cba:	4770      	bx	lr

08008cbc <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008cbc:	68c0      	ldr	r0, [r0, #12]
 8008cbe:	6803      	ldr	r3, [r0, #0]
 8008cc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008cc2:	4718      	bx	r3

08008cc4 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008cc4:	f1a0 0004 	sub.w	r0, r0, #4
 8008cc8:	f7ff bff8 	b.w	8008cbc <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008ccc <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008ccc:	b510      	push	{r4, lr}
 8008cce:	2110      	movs	r1, #16
 8008cd0:	4604      	mov	r4, r0
 8008cd2:	f022 f8aa 	bl	802ae2a <_ZdlPvj>
 8008cd6:	4620      	mov	r0, r4
 8008cd8:	bd10      	pop	{r4, pc}

08008cda <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8008cda:	f1a0 0004 	sub.w	r0, r0, #4
 8008cde:	e7f5      	b.n	8008ccc <_ZN18Main_MenuPresenterD0Ev>

08008ce0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008ce0:	b510      	push	{r4, lr}
 8008ce2:	2200      	movs	r2, #0
 8008ce4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008ce6:	4a04      	ldr	r2, [pc, #16]	; (8008cf8 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008ce8:	60c1      	str	r1, [r0, #12]
 8008cea:	f102 0408 	add.w	r4, r2, #8
 8008cee:	3224      	adds	r2, #36	; 0x24
 8008cf0:	6004      	str	r4, [r0, #0]
 8008cf2:	6042      	str	r2, [r0, #4]
}
 8008cf4:	bd10      	pop	{r4, pc}
 8008cf6:	bf00      	nop
 8008cf8:	0802f0e8 	.word	0x0802f0e8

08008cfc <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008cfc:	4770      	bx	lr
	...

08008d00 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008d00:	b510      	push	{r4, lr}
 8008d02:	4b03      	ldr	r3, [pc, #12]	; (8008d10 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008d04:	6003      	str	r3, [r0, #0]
 8008d06:	4604      	mov	r4, r0
 8008d08:	f7fc ff88 	bl	8005c1c <_ZN17Main_MenuViewBaseD1Ev>
 8008d0c:	4620      	mov	r0, r4
 8008d0e:	bd10      	pop	{r4, pc}
 8008d10:	0802f120 	.word	0x0802f120

08008d14 <_ZN13Main_MenuViewD0Ev>:
 8008d14:	b510      	push	{r4, lr}
 8008d16:	4604      	mov	r4, r0
 8008d18:	f7ff fff2 	bl	8008d00 <_ZN13Main_MenuViewD1Ev>
 8008d1c:	4620      	mov	r0, r4
 8008d1e:	f241 117c 	movw	r1, #4476	; 0x117c
 8008d22:	f022 f882 	bl	802ae2a <_ZdlPvj>
 8008d26:	4620      	mov	r0, r4
 8008d28:	bd10      	pop	{r4, pc}
	...

08008d2c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008d2c:	b510      	push	{r4, lr}
 8008d2e:	4604      	mov	r4, r0
 8008d30:	f7fc ffbe 	bl	8005cb0 <_ZN17Main_MenuViewBaseC1Ev>
 8008d34:	4b01      	ldr	r3, [pc, #4]	; (8008d3c <_ZN13Main_MenuViewC1Ev+0x10>)
 8008d36:	6023      	str	r3, [r4, #0]
}
 8008d38:	4620      	mov	r0, r4
 8008d3a:	bd10      	pop	{r4, pc}
 8008d3c:	0802f120 	.word	0x0802f120

08008d40 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008d40:	f7fc bf48 	b.w	8005bd4 <_ZN17Main_MenuViewBase11setupScreenEv>

08008d44 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008d44:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008d46:	4a0a      	ldr	r2, [pc, #40]	; (8008d70 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008d48:	4605      	mov	r5, r0
 8008d4a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008d4c:	460b      	mov	r3, r1
 8008d4e:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008d52:	2104      	movs	r1, #4
 8008d54:	f011 f962 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008d58:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008d5c:	f00f f898 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008d60:	b92c      	cbnz	r4, 8008d6e <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008d62:	f00d ffad 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008d66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008d6a:	f7fb bedd 	b.w	8004b28 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008d6e:	bd38      	pop	{r3, r4, r5, pc}
 8008d70:	0802d532 	.word	0x0802d532

08008d74 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008d74:	4770      	bx	lr

08008d76 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008d76:	3804      	subs	r0, #4
 8008d78:	4770      	bx	lr

08008d7a <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008d7a:	4770      	bx	lr

08008d7c <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008d7c:	68c0      	ldr	r0, [r0, #12]
 8008d7e:	6803      	ldr	r3, [r0, #0]
 8008d80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d82:	4718      	bx	r3

08008d84 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008d84:	f1a0 0004 	sub.w	r0, r0, #4
 8008d88:	f7ff bff8 	b.w	8008d7c <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008d8c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008d8c:	b510      	push	{r4, lr}
 8008d8e:	2110      	movs	r1, #16
 8008d90:	4604      	mov	r4, r0
 8008d92:	f022 f84a 	bl	802ae2a <_ZdlPvj>
 8008d96:	4620      	mov	r0, r4
 8008d98:	bd10      	pop	{r4, pc}

08008d9a <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008d9a:	f1a0 0004 	sub.w	r0, r0, #4
 8008d9e:	e7f5      	b.n	8008d8c <_ZN20MeasurementPresenterD0Ev>

08008da0 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008da0:	b510      	push	{r4, lr}
 8008da2:	2200      	movs	r2, #0
 8008da4:	6082      	str	r2, [r0, #8]
    : view(v)
 8008da6:	4a04      	ldr	r2, [pc, #16]	; (8008db8 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008da8:	60c1      	str	r1, [r0, #12]
 8008daa:	f102 0408 	add.w	r4, r2, #8
 8008dae:	3224      	adds	r2, #36	; 0x24
 8008db0:	6004      	str	r4, [r0, #0]
 8008db2:	6042      	str	r2, [r0, #4]
}
 8008db4:	bd10      	pop	{r4, pc}
 8008db6:	bf00      	nop
 8008db8:	0802f150 	.word	0x0802f150

08008dbc <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008dbc:	4770      	bx	lr
	...

08008dc0 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008dc0:	b510      	push	{r4, lr}
 8008dc2:	4b03      	ldr	r3, [pc, #12]	; (8008dd0 <_ZN15MeasurementViewD1Ev+0x10>)
 8008dc4:	6003      	str	r3, [r0, #0]
 8008dc6:	4604      	mov	r4, r0
 8008dc8:	f7fd f9e2 	bl	8006190 <_ZN19MeasurementViewBaseD1Ev>
 8008dcc:	4620      	mov	r0, r4
 8008dce:	bd10      	pop	{r4, pc}
 8008dd0:	0802f188 	.word	0x0802f188

08008dd4 <_ZN15MeasurementViewD0Ev>:
 8008dd4:	b510      	push	{r4, lr}
 8008dd6:	4604      	mov	r4, r0
 8008dd8:	f7ff fff2 	bl	8008dc0 <_ZN15MeasurementViewD1Ev>
 8008ddc:	4620      	mov	r0, r4
 8008dde:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008de2:	f022 f822 	bl	802ae2a <_ZdlPvj>
 8008de6:	4620      	mov	r0, r4
 8008de8:	bd10      	pop	{r4, pc}
	...

08008dec <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008dec:	b510      	push	{r4, lr}
 8008dee:	4604      	mov	r4, r0
 8008df0:	f7fd fa08 	bl	8006204 <_ZN19MeasurementViewBaseC1Ev>
 8008df4:	4b01      	ldr	r3, [pc, #4]	; (8008dfc <_ZN15MeasurementViewC1Ev+0x10>)
 8008df6:	6023      	str	r3, [r4, #0]
}
 8008df8:	4620      	mov	r0, r4
 8008dfa:	bd10      	pop	{r4, pc}
 8008dfc:	0802f188 	.word	0x0802f188

08008e00 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008e00:	f7fd b9a2 	b.w	8006148 <_ZN19MeasurementViewBase11setupScreenEv>

08008e04 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008e04:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008e06:	4a0a      	ldr	r2, [pc, #40]	; (8008e30 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008e08:	4605      	mov	r5, r0
 8008e0a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008e0c:	460b      	mov	r3, r1
 8008e0e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008e12:	2104      	movs	r1, #4
 8008e14:	f011 f902 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008e18:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008e1c:	f00f f838 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008e20:	b92c      	cbnz	r4, 8008e2e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008e22:	f00d ff4d 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008e26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008e2a:	f7fb be7d 	b.w	8004b28 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008e2e:	bd38      	pop	{r3, r4, r5, pc}
 8008e30:	0802d532 	.word	0x0802d532

08008e34 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008e34:	4770      	bx	lr

08008e36 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008e36:	3804      	subs	r0, #4
 8008e38:	4770      	bx	lr

08008e3a <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008e3a:	4770      	bx	lr

08008e3c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008e3c:	68c0      	ldr	r0, [r0, #12]
 8008e3e:	6803      	ldr	r3, [r0, #0]
 8008e40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e42:	4718      	bx	r3

08008e44 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008e44:	f1a0 0004 	sub.w	r0, r0, #4
 8008e48:	f7ff bff8 	b.w	8008e3c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008e4c <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008e4c:	b510      	push	{r4, lr}
 8008e4e:	2110      	movs	r1, #16
 8008e50:	4604      	mov	r4, r0
 8008e52:	f021 ffea 	bl	802ae2a <_ZdlPvj>
 8008e56:	4620      	mov	r0, r4
 8008e58:	bd10      	pop	{r4, pc}

08008e5a <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008e5a:	f1a0 0004 	sub.w	r0, r0, #4
 8008e5e:	e7f5      	b.n	8008e4c <_ZN29Measurement_AccuratePresenterD0Ev>

08008e60 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008e60:	b510      	push	{r4, lr}
 8008e62:	2200      	movs	r2, #0
 8008e64:	6082      	str	r2, [r0, #8]
    : view(v)
 8008e66:	4a04      	ldr	r2, [pc, #16]	; (8008e78 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008e68:	60c1      	str	r1, [r0, #12]
 8008e6a:	f102 0408 	add.w	r4, r2, #8
 8008e6e:	3224      	adds	r2, #36	; 0x24
 8008e70:	6004      	str	r4, [r0, #0]
 8008e72:	6042      	str	r2, [r0, #4]
}
 8008e74:	bd10      	pop	{r4, pc}
 8008e76:	bf00      	nop
 8008e78:	0802f1b8 	.word	0x0802f1b8

08008e7c <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008e7c:	4770      	bx	lr
	...

08008e80 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008e80:	b510      	push	{r4, lr}
 8008e82:	4b03      	ldr	r3, [pc, #12]	; (8008e90 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008e84:	6003      	str	r3, [r0, #0]
 8008e86:	4604      	mov	r4, r0
 8008e88:	f7fd fc04 	bl	8006694 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008e8c:	4620      	mov	r0, r4
 8008e8e:	bd10      	pop	{r4, pc}
 8008e90:	0802f1f0 	.word	0x0802f1f0

08008e94 <_ZN24Measurement_AccurateViewD0Ev>:
 8008e94:	b510      	push	{r4, lr}
 8008e96:	4604      	mov	r4, r0
 8008e98:	f7ff fff2 	bl	8008e80 <_ZN24Measurement_AccurateViewD1Ev>
 8008e9c:	4620      	mov	r0, r4
 8008e9e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008ea2:	f021 ffc2 	bl	802ae2a <_ZdlPvj>
 8008ea6:	4620      	mov	r0, r4
 8008ea8:	bd10      	pop	{r4, pc}
	...

08008eac <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008eac:	b510      	push	{r4, lr}
 8008eae:	4604      	mov	r4, r0
 8008eb0:	f7fd fc2a 	bl	8006708 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008eb4:	4b01      	ldr	r3, [pc, #4]	; (8008ebc <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008eb6:	6023      	str	r3, [r4, #0]
}
 8008eb8:	4620      	mov	r0, r4
 8008eba:	bd10      	pop	{r4, pc}
 8008ebc:	0802f1f0 	.word	0x0802f1f0

08008ec0 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008ec0:	f7fd bbc4 	b.w	800664c <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008ec4 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008ec4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ec6:	4a0a      	ldr	r2, [pc, #40]	; (8008ef0 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008ec8:	4605      	mov	r5, r0
 8008eca:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ecc:	460b      	mov	r3, r1
 8008ece:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008ed2:	2104      	movs	r1, #4
 8008ed4:	f011 f8a2 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008ed8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008edc:	f00e ffd8 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008ee0:	b92c      	cbnz	r4, 8008eee <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008ee2:	f00d feed 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008ee6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008eea:	f7fb be1d 	b.w	8004b28 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008eee:	bd38      	pop	{r3, r4, r5, pc}
 8008ef0:	0802d532 	.word	0x0802d532

08008ef4 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008ef4:	4770      	bx	lr

08008ef6 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008ef6:	3804      	subs	r0, #4
 8008ef8:	4770      	bx	lr

08008efa <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008efa:	4770      	bx	lr

08008efc <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008efc:	4770      	bx	lr

08008efe <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008efe:	b510      	push	{r4, lr}
 8008f00:	2110      	movs	r1, #16
 8008f02:	4604      	mov	r4, r0
 8008f04:	f021 ff91 	bl	802ae2a <_ZdlPvj>
 8008f08:	4620      	mov	r0, r4
 8008f0a:	bd10      	pop	{r4, pc}

08008f0c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008f0c:	f1a0 0004 	sub.w	r0, r0, #4
 8008f10:	e7f5      	b.n	8008efe <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008f12 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008f12:	4770      	bx	lr

08008f14 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008f14:	b510      	push	{r4, lr}
 8008f16:	2200      	movs	r2, #0
 8008f18:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f1a:	4a04      	ldr	r2, [pc, #16]	; (8008f2c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008f1c:	60c1      	str	r1, [r0, #12]
 8008f1e:	f102 0408 	add.w	r4, r2, #8
 8008f22:	3224      	adds	r2, #36	; 0x24
 8008f24:	6004      	str	r4, [r0, #0]
 8008f26:	6042      	str	r2, [r0, #4]
}
 8008f28:	bd10      	pop	{r4, pc}
 8008f2a:	bf00      	nop
 8008f2c:	0802f220 	.word	0x0802f220

08008f30 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008f30:	4770      	bx	lr
	...

08008f34 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008f34:	b510      	push	{r4, lr}
 8008f36:	4b03      	ldr	r3, [pc, #12]	; (8008f44 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008f38:	6003      	str	r3, [r0, #0]
 8008f3a:	4604      	mov	r4, r0
 8008f3c:	f7fd fe28 	bl	8006b90 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008f40:	4620      	mov	r0, r4
 8008f42:	bd10      	pop	{r4, pc}
 8008f44:	0802f258 	.word	0x0802f258

08008f48 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008f48:	b510      	push	{r4, lr}
 8008f4a:	4604      	mov	r4, r0
 8008f4c:	f7ff fff2 	bl	8008f34 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008f50:	4620      	mov	r0, r4
 8008f52:	f241 015c 	movw	r1, #4188	; 0x105c
 8008f56:	f021 ff68 	bl	802ae2a <_ZdlPvj>
 8008f5a:	4620      	mov	r0, r4
 8008f5c:	bd10      	pop	{r4, pc}
	...

08008f60 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008f60:	b510      	push	{r4, lr}
 8008f62:	4604      	mov	r4, r0
 8008f64:	f7fd fe3c 	bl	8006be0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008f68:	4b01      	ldr	r3, [pc, #4]	; (8008f70 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008f6a:	6023      	str	r3, [r4, #0]
}
 8008f6c:	4620      	mov	r0, r4
 8008f6e:	bd10      	pop	{r4, pc}
 8008f70:	0802f258 	.word	0x0802f258

08008f74 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008f74:	f7fd bde8 	b.w	8006b48 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008f78 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008f78:	4770      	bx	lr

08008f7a <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008f7a:	3804      	subs	r0, #4
 8008f7c:	4770      	bx	lr

08008f7e <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008f7e:	4770      	bx	lr

08008f80 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008f80:	4770      	bx	lr

08008f82 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008f82:	b510      	push	{r4, lr}
 8008f84:	2110      	movs	r1, #16
 8008f86:	4604      	mov	r4, r0
 8008f88:	f021 ff4f 	bl	802ae2a <_ZdlPvj>
 8008f8c:	4620      	mov	r0, r4
 8008f8e:	bd10      	pop	{r4, pc}

08008f90 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008f90:	f1a0 0004 	sub.w	r0, r0, #4
 8008f94:	e7f5      	b.n	8008f82 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008f96 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008f96:	4770      	bx	lr

08008f98 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008f98:	b510      	push	{r4, lr}
 8008f9a:	2200      	movs	r2, #0
 8008f9c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f9e:	4a04      	ldr	r2, [pc, #16]	; (8008fb0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008fa0:	60c1      	str	r1, [r0, #12]
 8008fa2:	f102 0408 	add.w	r4, r2, #8
 8008fa6:	3224      	adds	r2, #36	; 0x24
 8008fa8:	6004      	str	r4, [r0, #0]
 8008faa:	6042      	str	r2, [r0, #4]
}
 8008fac:	bd10      	pop	{r4, pc}
 8008fae:	bf00      	nop
 8008fb0:	0802f284 	.word	0x0802f284

08008fb4 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008fb4:	4770      	bx	lr
	...

08008fb8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008fb8:	b510      	push	{r4, lr}
 8008fba:	4b03      	ldr	r3, [pc, #12]	; (8008fc8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008fbc:	6003      	str	r3, [r0, #0]
 8008fbe:	4604      	mov	r4, r0
 8008fc0:	f7fd ff96 	bl	8006ef0 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008fc4:	4620      	mov	r0, r4
 8008fc6:	bd10      	pop	{r4, pc}
 8008fc8:	0802f2bc 	.word	0x0802f2bc

08008fcc <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008fcc:	b510      	push	{r4, lr}
 8008fce:	4604      	mov	r4, r0
 8008fd0:	f7ff fff2 	bl	8008fb8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008fd4:	4620      	mov	r0, r4
 8008fd6:	f241 015c 	movw	r1, #4188	; 0x105c
 8008fda:	f021 ff26 	bl	802ae2a <_ZdlPvj>
 8008fde:	4620      	mov	r0, r4
 8008fe0:	bd10      	pop	{r4, pc}
	...

08008fe4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008fe4:	b510      	push	{r4, lr}
 8008fe6:	4604      	mov	r4, r0
 8008fe8:	f7fd ffaa 	bl	8006f40 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008fec:	4b01      	ldr	r3, [pc, #4]	; (8008ff4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008fee:	6023      	str	r3, [r4, #0]
}
 8008ff0:	4620      	mov	r0, r4
 8008ff2:	bd10      	pop	{r4, pc}
 8008ff4:	0802f2bc 	.word	0x0802f2bc

08008ff8 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008ff8:	f7fd bf56 	b.w	8006ea8 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008ffc <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008ffc:	4770      	bx	lr

08008ffe <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008ffe:	3804      	subs	r0, #4
 8009000:	4770      	bx	lr

08009002 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8009002:	4770      	bx	lr

08009004 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009004:	68c0      	ldr	r0, [r0, #12]
 8009006:	6803      	ldr	r3, [r0, #0]
 8009008:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800900a:	4718      	bx	r3

0800900c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800900c:	f1a0 0004 	sub.w	r0, r0, #4
 8009010:	f7ff bff8 	b.w	8009004 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08009014 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8009014:	b510      	push	{r4, lr}
 8009016:	2110      	movs	r1, #16
 8009018:	4604      	mov	r4, r0
 800901a:	f021 ff06 	bl	802ae2a <_ZdlPvj>
 800901e:	4620      	mov	r0, r4
 8009020:	bd10      	pop	{r4, pc}

08009022 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8009022:	f1a0 0004 	sub.w	r0, r0, #4
 8009026:	e7f5      	b.n	8009014 <_ZN27Measurement_SinglePresenterD0Ev>

08009028 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8009028:	b510      	push	{r4, lr}
 800902a:	2200      	movs	r2, #0
 800902c:	6082      	str	r2, [r0, #8]
    : view(v)
 800902e:	4a04      	ldr	r2, [pc, #16]	; (8009040 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8009030:	60c1      	str	r1, [r0, #12]
 8009032:	f102 0408 	add.w	r4, r2, #8
 8009036:	3224      	adds	r2, #36	; 0x24
 8009038:	6004      	str	r4, [r0, #0]
 800903a:	6042      	str	r2, [r0, #4]
}
 800903c:	bd10      	pop	{r4, pc}
 800903e:	bf00      	nop
 8009040:	0802f2e8 	.word	0x0802f2e8

08009044 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8009044:	4770      	bx	lr
	...

08009048 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8009048:	b510      	push	{r4, lr}
 800904a:	4b03      	ldr	r3, [pc, #12]	; (8009058 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800904c:	6003      	str	r3, [r0, #0]
 800904e:	4604      	mov	r4, r0
 8009050:	f7fe f8fe 	bl	8007250 <_ZN26Measurement_SingleViewBaseD1Ev>
 8009054:	4620      	mov	r0, r4
 8009056:	bd10      	pop	{r4, pc}
 8009058:	0802f320 	.word	0x0802f320

0800905c <_ZN22Measurement_SingleViewD0Ev>:
 800905c:	b510      	push	{r4, lr}
 800905e:	4604      	mov	r4, r0
 8009060:	f7ff fff2 	bl	8009048 <_ZN22Measurement_SingleViewD1Ev>
 8009064:	4620      	mov	r0, r4
 8009066:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800906a:	f021 fede 	bl	802ae2a <_ZdlPvj>
 800906e:	4620      	mov	r0, r4
 8009070:	bd10      	pop	{r4, pc}
	...

08009074 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8009074:	b510      	push	{r4, lr}
 8009076:	4604      	mov	r4, r0
 8009078:	f7fe f924 	bl	80072c4 <_ZN26Measurement_SingleViewBaseC1Ev>
 800907c:	4b01      	ldr	r3, [pc, #4]	; (8009084 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800907e:	6023      	str	r3, [r4, #0]
}
 8009080:	4620      	mov	r0, r4
 8009082:	bd10      	pop	{r4, pc}
 8009084:	0802f320 	.word	0x0802f320

08009088 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8009088:	f7fe b8be 	b.w	8007208 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800908c <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800908c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800908e:	4a0a      	ldr	r2, [pc, #40]	; (80090b8 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8009090:	4605      	mov	r5, r0
 8009092:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009094:	460b      	mov	r3, r1
 8009096:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800909a:	2104      	movs	r1, #4
 800909c:	f010 ffbe 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80090a0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80090a4:	f00e fef4 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80090a8:	b92c      	cbnz	r4, 80090b6 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80090aa:	f00d fe09 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80090ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80090b2:	f7fb bd39 	b.w	8004b28 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80090b6:	bd38      	pop	{r3, r4, r5, pc}
 80090b8:	0802d532 	.word	0x0802d532

080090bc <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80090bc:	4770      	bx	lr

080090be <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80090be:	3804      	subs	r0, #4
 80090c0:	4770      	bx	lr

080090c2 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80090c2:	4770      	bx	lr

080090c4 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80090c4:	4770      	bx	lr

080090c6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80090c6:	b510      	push	{r4, lr}
 80090c8:	2110      	movs	r1, #16
 80090ca:	4604      	mov	r4, r0
 80090cc:	f021 fead 	bl	802ae2a <_ZdlPvj>
 80090d0:	4620      	mov	r0, r4
 80090d2:	bd10      	pop	{r4, pc}

080090d4 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80090d4:	f1a0 0004 	sub.w	r0, r0, #4
 80090d8:	e7f5      	b.n	80090c6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080090da <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80090da:	4770      	bx	lr

080090dc <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80090dc:	b510      	push	{r4, lr}
 80090de:	2200      	movs	r2, #0
 80090e0:	6082      	str	r2, [r0, #8]
    : view(v)
 80090e2:	4a04      	ldr	r2, [pc, #16]	; (80090f4 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80090e4:	60c1      	str	r1, [r0, #12]
 80090e6:	f102 0408 	add.w	r4, r2, #8
 80090ea:	3224      	adds	r2, #36	; 0x24
 80090ec:	6004      	str	r4, [r0, #0]
 80090ee:	6042      	str	r2, [r0, #4]
}
 80090f0:	bd10      	pop	{r4, pc}
 80090f2:	bf00      	nop
 80090f4:	0802f350 	.word	0x0802f350

080090f8 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 80090f8:	4770      	bx	lr
	...

080090fc <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 80090fc:	b510      	push	{r4, lr}
 80090fe:	4b03      	ldr	r3, [pc, #12]	; (800910c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8009100:	6003      	str	r3, [r0, #0]
 8009102:	4604      	mov	r4, r0
 8009104:	f7fe fb28 	bl	8007758 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009108:	4620      	mov	r0, r4
 800910a:	bd10      	pop	{r4, pc}
 800910c:	0802f390 	.word	0x0802f390

08009110 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8009110:	b510      	push	{r4, lr}
 8009112:	4604      	mov	r4, r0
 8009114:	f7ff fff2 	bl	80090fc <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009118:	4620      	mov	r0, r4
 800911a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800911e:	f021 fe84 	bl	802ae2a <_ZdlPvj>
 8009122:	4620      	mov	r0, r4
 8009124:	bd10      	pop	{r4, pc}
	...

08009128 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009128:	b510      	push	{r4, lr}
 800912a:	4604      	mov	r4, r0
 800912c:	f7fe fb4e 	bl	80077cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8009130:	4b01      	ldr	r3, [pc, #4]	; (8009138 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8009132:	6023      	str	r3, [r4, #0]
}
 8009134:	4620      	mov	r0, r4
 8009136:	bd10      	pop	{r4, pc}
 8009138:	0802f390 	.word	0x0802f390

0800913c <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800913c:	f7fe bae7 	b.w	800770e <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08009140 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8009140:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009142:	4e2a      	ldr	r6, [pc, #168]	; (80091ec <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8009144:	4f2a      	ldr	r7, [pc, #168]	; (80091f0 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 8009146:	4604      	mov	r4, r0
 8009148:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 800914a:	6803      	ldr	r3, [r0, #0]
{
 800914c:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 800914e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009150:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8009152:	2201      	movs	r2, #1
 8009154:	2180      	movs	r1, #128	; 0x80
 8009156:	4638      	mov	r0, r7
 8009158:	f000 ffe2 	bl	800a120 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 800915c:	f7f7 fc38 	bl	80009d0 <updateGUI_test>
 8009160:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8009162:	f7f8 f9e9 	bl	8001538 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8009166:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8009168:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800916a:	2001      	movs	r0, #1
 800916c:	f7f7 fb7c 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8009170:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8009174:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8009176:	ed8d 0a04 	vstr	s0, [sp, #16]
 800917a:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 800917e:	9001      	str	r0, [sp, #4]
 8009180:	f00a fe3c 	bl	8013dfc <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8009184:	9801      	ldr	r0, [sp, #4]
 8009186:	f00e fe83 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 800918a:	462b      	mov	r3, r5
 800918c:	4a19      	ldr	r2, [pc, #100]	; (80091f4 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 800918e:	210a      	movs	r1, #10
 8009190:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8009194:	f010 ff42 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8009198:	f504 7020 	add.w	r0, r4, #640	; 0x280
 800919c:	f00e fe78 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 80091a0:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80091a2:	4a15      	ldr	r2, [pc, #84]	; (80091f8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80091a4:	9303      	str	r3, [sp, #12]
 80091a6:	210a      	movs	r1, #10
 80091a8:	ab03      	add	r3, sp, #12
 80091aa:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80091ae:	f011 f921 	bl	801a3f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 80091b2:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80091b6:	f00e fe6b 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80091ba:	9b05      	ldr	r3, [sp, #20]
 80091bc:	4a0e      	ldr	r2, [pc, #56]	; (80091f8 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80091be:	9303      	str	r3, [sp, #12]
 80091c0:	210a      	movs	r1, #10
 80091c2:	ab03      	add	r3, sp, #12
 80091c4:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80091c8:	f011 f914 	bl	801a3f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 80091cc:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80091d0:	f00e fe5e 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 80091d4:	4638      	mov	r0, r7
 80091d6:	2200      	movs	r2, #0
 80091d8:	2180      	movs	r1, #128	; 0x80
 80091da:	f000 ffa1 	bl	800a120 <HAL_GPIO_WritePin>
 80091de:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80091e0:	6803      	ldr	r3, [r0, #0]
 80091e2:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80091e4:	b007      	add	sp, #28
 80091e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 80091ea:	4718      	bx	r3
 80091ec:	20013834 	.word	0x20013834
 80091f0:	40020000 	.word	0x40020000
 80091f4:	0802d532 	.word	0x0802d532
 80091f8:	0802f380 	.word	0x0802f380

080091fc <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 80091fc:	4770      	bx	lr

080091fe <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 80091fe:	3804      	subs	r0, #4
 8009200:	4770      	bx	lr

08009202 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8009202:	4770      	bx	lr

08009204 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8009204:	4770      	bx	lr

08009206 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8009206:	b510      	push	{r4, lr}
 8009208:	2110      	movs	r1, #16
 800920a:	4604      	mov	r4, r0
 800920c:	f021 fe0d 	bl	802ae2a <_ZdlPvj>
 8009210:	4620      	mov	r0, r4
 8009212:	bd10      	pop	{r4, pc}

08009214 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8009214:	f1a0 0004 	sub.w	r0, r0, #4
 8009218:	e7f5      	b.n	8009206 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800921a <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800921a:	4770      	bx	lr

0800921c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800921c:	b510      	push	{r4, lr}
 800921e:	2200      	movs	r2, #0
 8009220:	6082      	str	r2, [r0, #8]
    : view(v)
 8009222:	4a04      	ldr	r2, [pc, #16]	; (8009234 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8009224:	60c1      	str	r1, [r0, #12]
 8009226:	f102 0408 	add.w	r4, r2, #8
 800922a:	3224      	adds	r2, #36	; 0x24
 800922c:	6004      	str	r4, [r0, #0]
 800922e:	6042      	str	r2, [r0, #4]
}
 8009230:	bd10      	pop	{r4, pc}
 8009232:	bf00      	nop
 8009234:	0802f3c0 	.word	0x0802f3c0

08009238 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009238:	4770      	bx	lr
	...

0800923c <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800923c:	b510      	push	{r4, lr}
 800923e:	4b03      	ldr	r3, [pc, #12]	; (800924c <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8009240:	6003      	str	r3, [r0, #0]
 8009242:	4604      	mov	r4, r0
 8009244:	f7fe fe22 	bl	8007e8c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009248:	4620      	mov	r0, r4
 800924a:	bd10      	pop	{r4, pc}
 800924c:	0802f3f8 	.word	0x0802f3f8

08009250 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8009250:	b510      	push	{r4, lr}
 8009252:	4604      	mov	r4, r0
 8009254:	f7ff fff2 	bl	800923c <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8009258:	4620      	mov	r0, r4
 800925a:	f241 015c 	movw	r1, #4188	; 0x105c
 800925e:	f021 fde4 	bl	802ae2a <_ZdlPvj>
 8009262:	4620      	mov	r0, r4
 8009264:	bd10      	pop	{r4, pc}
	...

08009268 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8009268:	b510      	push	{r4, lr}
 800926a:	4604      	mov	r4, r0
 800926c:	f7fe fe36 	bl	8007edc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8009270:	4b01      	ldr	r3, [pc, #4]	; (8009278 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8009272:	6023      	str	r3, [r4, #0]
}
 8009274:	4620      	mov	r0, r4
 8009276:	bd10      	pop	{r4, pc}
 8009278:	0802f3f8 	.word	0x0802f3f8

0800927c <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800927c:	f7fe bde2 	b.w	8007e44 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08009280 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8009280:	2100      	movs	r1, #0
 8009282:	223c      	movs	r2, #60	; 0x3c
 8009284:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8009288:	4770      	bx	lr
	...

0800928c <_ZN5Model4tickEv>:

void Model::tick()
{
 800928c:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800928e:	4d0a      	ldr	r5, [pc, #40]	; (80092b8 <_ZN5Model4tickEv+0x2c>)
{
 8009290:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8009292:	6828      	ldr	r0, [r5, #0]
 8009294:	f004 fe30 	bl	800def8 <osMessageQueueGetCount>
 8009298:	b168      	cbz	r0, 80092b6 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 800929a:	2300      	movs	r3, #0
 800929c:	6828      	ldr	r0, [r5, #0]
 800929e:	461a      	mov	r2, r3
 80092a0:	1d21      	adds	r1, r4, #4
 80092a2:	f004 fdf5 	bl	800de90 <osMessageQueueGet>
 80092a6:	b930      	cbnz	r0, 80092b6 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80092a8:	6820      	ldr	r0, [r4, #0]
 80092aa:	6861      	ldr	r1, [r4, #4]
 80092ac:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80092ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80092b2:	689b      	ldr	r3, [r3, #8]
 80092b4:	4718      	bx	r3
}
 80092b6:	bd70      	pop	{r4, r5, r6, pc}
 80092b8:	200001d0 	.word	0x200001d0

080092bc <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80092bc:	4770      	bx	lr

080092be <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80092be:	3804      	subs	r0, #4
 80092c0:	4770      	bx	lr

080092c2 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80092c2:	4770      	bx	lr

080092c4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80092c4:	68c0      	ldr	r0, [r0, #12]
 80092c6:	6803      	ldr	r3, [r0, #0]
 80092c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80092ca:	4718      	bx	r3

080092cc <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80092cc:	f1a0 0004 	sub.w	r0, r0, #4
 80092d0:	f7ff bff8 	b.w	80092c4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080092d4 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80092d4:	b510      	push	{r4, lr}
 80092d6:	2110      	movs	r1, #16
 80092d8:	4604      	mov	r4, r0
 80092da:	f021 fda6 	bl	802ae2a <_ZdlPvj>
 80092de:	4620      	mov	r0, r4
 80092e0:	bd10      	pop	{r4, pc}

080092e2 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80092e2:	f1a0 0004 	sub.w	r0, r0, #4
 80092e6:	e7f5      	b.n	80092d4 <_ZN21Project_InfoPresenterD0Ev>

080092e8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 80092e8:	b510      	push	{r4, lr}
 80092ea:	2200      	movs	r2, #0
 80092ec:	6082      	str	r2, [r0, #8]
    : view(v)
 80092ee:	4a04      	ldr	r2, [pc, #16]	; (8009300 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 80092f0:	60c1      	str	r1, [r0, #12]
 80092f2:	f102 0408 	add.w	r4, r2, #8
 80092f6:	3224      	adds	r2, #36	; 0x24
 80092f8:	6004      	str	r4, [r0, #0]
 80092fa:	6042      	str	r2, [r0, #4]
}
 80092fc:	bd10      	pop	{r4, pc}
 80092fe:	bf00      	nop
 8009300:	0802f424 	.word	0x0802f424

08009304 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8009304:	4770      	bx	lr
	...

08009308 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009308:	b510      	push	{r4, lr}
 800930a:	4b03      	ldr	r3, [pc, #12]	; (8009318 <_ZN16Project_InfoViewD1Ev+0x10>)
 800930c:	6003      	str	r3, [r0, #0]
 800930e:	4604      	mov	r4, r0
 8009310:	f7fe ff6a 	bl	80081e8 <_ZN20Project_InfoViewBaseD1Ev>
 8009314:	4620      	mov	r0, r4
 8009316:	bd10      	pop	{r4, pc}
 8009318:	0802f45c 	.word	0x0802f45c

0800931c <_ZN16Project_InfoViewD0Ev>:
 800931c:	b510      	push	{r4, lr}
 800931e:	4604      	mov	r4, r0
 8009320:	f7ff fff2 	bl	8009308 <_ZN16Project_InfoViewD1Ev>
 8009324:	4620      	mov	r0, r4
 8009326:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800932a:	f021 fd7e 	bl	802ae2a <_ZdlPvj>
 800932e:	4620      	mov	r0, r4
 8009330:	bd10      	pop	{r4, pc}
	...

08009334 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8009334:	b510      	push	{r4, lr}
 8009336:	4604      	mov	r4, r0
 8009338:	f7fe ff7e 	bl	8008238 <_ZN20Project_InfoViewBaseC1Ev>
 800933c:	4b01      	ldr	r3, [pc, #4]	; (8009344 <_ZN16Project_InfoViewC1Ev+0x10>)
 800933e:	6023      	str	r3, [r4, #0]
}
 8009340:	4620      	mov	r0, r4
 8009342:	bd10      	pop	{r4, pc}
 8009344:	0802f45c 	.word	0x0802f45c

08009348 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009348:	f7fe bf2a 	b.w	80081a0 <_ZN20Project_InfoViewBase11setupScreenEv>

0800934c <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 800934c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800934e:	4a0a      	ldr	r2, [pc, #40]	; (8009378 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8009350:	4605      	mov	r5, r0
 8009352:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009354:	460b      	mov	r3, r1
 8009356:	f500 7022 	add.w	r0, r0, #648	; 0x288
 800935a:	2104      	movs	r1, #4
 800935c:	f010 fe5e 	bl	801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8009360:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8009364:	f00e fd94 	bl	8017e90 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8009368:	b92c      	cbnz	r4, 8009376 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 800936a:	f00d fca9 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800936e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8009372:	f7fb bbd9 	b.w	8004b28 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8009376:	bd38      	pop	{r3, r4, r5, pc}
 8009378:	0802d532 	.word	0x0802d532

0800937c <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 800937c:	4770      	bx	lr

0800937e <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 800937e:	3804      	subs	r0, #4
 8009380:	4770      	bx	lr

08009382 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8009382:	4770      	bx	lr

08009384 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8009384:	4770      	bx	lr

08009386 <_ZN21Shutting_OffPresenterD0Ev>:
 8009386:	b510      	push	{r4, lr}
 8009388:	2110      	movs	r1, #16
 800938a:	4604      	mov	r4, r0
 800938c:	f021 fd4d 	bl	802ae2a <_ZdlPvj>
 8009390:	4620      	mov	r0, r4
 8009392:	bd10      	pop	{r4, pc}

08009394 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8009394:	f1a0 0004 	sub.w	r0, r0, #4
 8009398:	e7f5      	b.n	8009386 <_ZN21Shutting_OffPresenterD0Ev>

0800939a <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 800939a:	4770      	bx	lr

0800939c <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 800939c:	b510      	push	{r4, lr}
 800939e:	2200      	movs	r2, #0
 80093a0:	6082      	str	r2, [r0, #8]
    : view(v)
 80093a2:	4a04      	ldr	r2, [pc, #16]	; (80093b4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80093a4:	60c1      	str	r1, [r0, #12]
 80093a6:	f102 0408 	add.w	r4, r2, #8
 80093aa:	3224      	adds	r2, #36	; 0x24
 80093ac:	6004      	str	r4, [r0, #0]
 80093ae:	6042      	str	r2, [r0, #4]
}
 80093b0:	bd10      	pop	{r4, pc}
 80093b2:	bf00      	nop
 80093b4:	0802f48c 	.word	0x0802f48c

080093b8 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80093b8:	4770      	bx	lr
	...

080093bc <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80093bc:	b510      	push	{r4, lr}
 80093be:	4b03      	ldr	r3, [pc, #12]	; (80093cc <_ZN16Shutting_OffViewD1Ev+0x10>)
 80093c0:	6003      	str	r3, [r0, #0]
 80093c2:	4604      	mov	r4, r0
 80093c4:	f7ff f906 	bl	80085d4 <_ZN20Shutting_OffViewBaseD1Ev>
 80093c8:	4620      	mov	r0, r4
 80093ca:	bd10      	pop	{r4, pc}
 80093cc:	0802f4c4 	.word	0x0802f4c4

080093d0 <_ZN16Shutting_OffViewD0Ev>:
 80093d0:	b510      	push	{r4, lr}
 80093d2:	4604      	mov	r4, r0
 80093d4:	f7ff fff2 	bl	80093bc <_ZN16Shutting_OffViewD1Ev>
 80093d8:	4620      	mov	r0, r4
 80093da:	2198      	movs	r1, #152	; 0x98
 80093dc:	f021 fd25 	bl	802ae2a <_ZdlPvj>
 80093e0:	4620      	mov	r0, r4
 80093e2:	bd10      	pop	{r4, pc}

080093e4 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 80093e4:	b510      	push	{r4, lr}
 80093e6:	4604      	mov	r4, r0
 80093e8:	f7ff f8fe 	bl	80085e8 <_ZN20Shutting_OffViewBaseC1Ev>
 80093ec:	4b01      	ldr	r3, [pc, #4]	; (80093f4 <_ZN16Shutting_OffViewC1Ev+0x10>)
 80093ee:	6023      	str	r3, [r4, #0]
}
 80093f0:	4620      	mov	r0, r4
 80093f2:	bd10      	pop	{r4, pc}
 80093f4:	0802f4c4 	.word	0x0802f4c4

080093f8 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 80093f8:	f7ff b8ed 	b.w	80085d6 <_ZN20Shutting_OffViewBase11setupScreenEv>

080093fc <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 80093fc:	20f0      	movs	r0, #240	; 0xf0
 80093fe:	4770      	bx	lr

08009400 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8009400:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009404:	4770      	bx	lr
 8009406:	bf00      	nop

08009408 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009408:	2029      	movs	r0, #41	; 0x29
 800940a:	f7f7 bf0d 	b.w	8001228 <LCD_IO_WriteReg>
 800940e:	bf00      	nop

08009410 <ili9341_DisplayOff>:
 8009410:	2028      	movs	r0, #40	; 0x28
 8009412:	f7f7 bf09 	b.w	8001228 <LCD_IO_WriteReg>
 8009416:	bf00      	nop

08009418 <ili9341_Init>:
{
 8009418:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800941a:	f7f7 fecb 	bl	80011b4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800941e:	20ca      	movs	r0, #202	; 0xca
 8009420:	f7f7 ff02 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009424:	20c3      	movs	r0, #195	; 0xc3
 8009426:	f7f7 fed5 	bl	80011d4 <LCD_IO_WriteData>
 800942a:	2008      	movs	r0, #8
 800942c:	f7f7 fed2 	bl	80011d4 <LCD_IO_WriteData>
 8009430:	2050      	movs	r0, #80	; 0x50
 8009432:	f7f7 fecf 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009436:	20cf      	movs	r0, #207	; 0xcf
 8009438:	f7f7 fef6 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800943c:	2000      	movs	r0, #0
 800943e:	f7f7 fec9 	bl	80011d4 <LCD_IO_WriteData>
 8009442:	20c1      	movs	r0, #193	; 0xc1
 8009444:	f7f7 fec6 	bl	80011d4 <LCD_IO_WriteData>
 8009448:	2030      	movs	r0, #48	; 0x30
 800944a:	f7f7 fec3 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800944e:	20ed      	movs	r0, #237	; 0xed
 8009450:	f7f7 feea 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009454:	2064      	movs	r0, #100	; 0x64
 8009456:	f7f7 febd 	bl	80011d4 <LCD_IO_WriteData>
 800945a:	2003      	movs	r0, #3
 800945c:	f7f7 feba 	bl	80011d4 <LCD_IO_WriteData>
 8009460:	2012      	movs	r0, #18
 8009462:	f7f7 feb7 	bl	80011d4 <LCD_IO_WriteData>
 8009466:	2081      	movs	r0, #129	; 0x81
 8009468:	f7f7 feb4 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800946c:	20e8      	movs	r0, #232	; 0xe8
 800946e:	f7f7 fedb 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009472:	2085      	movs	r0, #133	; 0x85
 8009474:	f7f7 feae 	bl	80011d4 <LCD_IO_WriteData>
 8009478:	2000      	movs	r0, #0
 800947a:	f7f7 feab 	bl	80011d4 <LCD_IO_WriteData>
 800947e:	2078      	movs	r0, #120	; 0x78
 8009480:	f7f7 fea8 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009484:	20cb      	movs	r0, #203	; 0xcb
 8009486:	f7f7 fecf 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800948a:	2039      	movs	r0, #57	; 0x39
 800948c:	f7f7 fea2 	bl	80011d4 <LCD_IO_WriteData>
 8009490:	202c      	movs	r0, #44	; 0x2c
 8009492:	f7f7 fe9f 	bl	80011d4 <LCD_IO_WriteData>
 8009496:	2000      	movs	r0, #0
 8009498:	f7f7 fe9c 	bl	80011d4 <LCD_IO_WriteData>
 800949c:	2034      	movs	r0, #52	; 0x34
 800949e:	f7f7 fe99 	bl	80011d4 <LCD_IO_WriteData>
 80094a2:	2002      	movs	r0, #2
 80094a4:	f7f7 fe96 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094a8:	20f7      	movs	r0, #247	; 0xf7
 80094aa:	f7f7 febd 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094ae:	2020      	movs	r0, #32
 80094b0:	f7f7 fe90 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094b4:	20ea      	movs	r0, #234	; 0xea
 80094b6:	f7f7 feb7 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094ba:	2000      	movs	r0, #0
 80094bc:	f7f7 fe8a 	bl	80011d4 <LCD_IO_WriteData>
 80094c0:	2000      	movs	r0, #0
 80094c2:	f7f7 fe87 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094c6:	20b1      	movs	r0, #177	; 0xb1
 80094c8:	f7f7 feae 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094cc:	2000      	movs	r0, #0
 80094ce:	f7f7 fe81 	bl	80011d4 <LCD_IO_WriteData>
 80094d2:	201b      	movs	r0, #27
 80094d4:	f7f7 fe7e 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094d8:	20b6      	movs	r0, #182	; 0xb6
 80094da:	f7f7 fea5 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094de:	200a      	movs	r0, #10
 80094e0:	f7f7 fe78 	bl	80011d4 <LCD_IO_WriteData>
 80094e4:	20a2      	movs	r0, #162	; 0xa2
 80094e6:	f7f7 fe75 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094ea:	20c0      	movs	r0, #192	; 0xc0
 80094ec:	f7f7 fe9c 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094f0:	2010      	movs	r0, #16
 80094f2:	f7f7 fe6f 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094f6:	20c1      	movs	r0, #193	; 0xc1
 80094f8:	f7f7 fe96 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094fc:	2010      	movs	r0, #16
 80094fe:	f7f7 fe69 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009502:	20c5      	movs	r0, #197	; 0xc5
 8009504:	f7f7 fe90 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009508:	2045      	movs	r0, #69	; 0x45
 800950a:	f7f7 fe63 	bl	80011d4 <LCD_IO_WriteData>
 800950e:	2015      	movs	r0, #21
 8009510:	f7f7 fe60 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009514:	20c7      	movs	r0, #199	; 0xc7
 8009516:	f7f7 fe87 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800951a:	2090      	movs	r0, #144	; 0x90
 800951c:	f7f7 fe5a 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009520:	2036      	movs	r0, #54	; 0x36
 8009522:	f7f7 fe81 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009526:	20c8      	movs	r0, #200	; 0xc8
 8009528:	f7f7 fe54 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800952c:	20f2      	movs	r0, #242	; 0xf2
 800952e:	f7f7 fe7b 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009532:	2000      	movs	r0, #0
 8009534:	f7f7 fe4e 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009538:	20b0      	movs	r0, #176	; 0xb0
 800953a:	f7f7 fe75 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800953e:	20c2      	movs	r0, #194	; 0xc2
 8009540:	f7f7 fe48 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009544:	20b6      	movs	r0, #182	; 0xb6
 8009546:	f7f7 fe6f 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800954a:	200a      	movs	r0, #10
 800954c:	f7f7 fe42 	bl	80011d4 <LCD_IO_WriteData>
 8009550:	20a7      	movs	r0, #167	; 0xa7
 8009552:	f7f7 fe3f 	bl	80011d4 <LCD_IO_WriteData>
 8009556:	2027      	movs	r0, #39	; 0x27
 8009558:	f7f7 fe3c 	bl	80011d4 <LCD_IO_WriteData>
 800955c:	2004      	movs	r0, #4
 800955e:	f7f7 fe39 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009562:	202a      	movs	r0, #42	; 0x2a
 8009564:	f7f7 fe60 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009568:	2000      	movs	r0, #0
 800956a:	f7f7 fe33 	bl	80011d4 <LCD_IO_WriteData>
 800956e:	2000      	movs	r0, #0
 8009570:	f7f7 fe30 	bl	80011d4 <LCD_IO_WriteData>
 8009574:	2000      	movs	r0, #0
 8009576:	f7f7 fe2d 	bl	80011d4 <LCD_IO_WriteData>
 800957a:	20ef      	movs	r0, #239	; 0xef
 800957c:	f7f7 fe2a 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009580:	202b      	movs	r0, #43	; 0x2b
 8009582:	f7f7 fe51 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009586:	2000      	movs	r0, #0
 8009588:	f7f7 fe24 	bl	80011d4 <LCD_IO_WriteData>
 800958c:	2000      	movs	r0, #0
 800958e:	f7f7 fe21 	bl	80011d4 <LCD_IO_WriteData>
 8009592:	2001      	movs	r0, #1
 8009594:	f7f7 fe1e 	bl	80011d4 <LCD_IO_WriteData>
 8009598:	203f      	movs	r0, #63	; 0x3f
 800959a:	f7f7 fe1b 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800959e:	20f6      	movs	r0, #246	; 0xf6
 80095a0:	f7f7 fe42 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095a4:	2001      	movs	r0, #1
 80095a6:	f7f7 fe15 	bl	80011d4 <LCD_IO_WriteData>
 80095aa:	2000      	movs	r0, #0
 80095ac:	f7f7 fe12 	bl	80011d4 <LCD_IO_WriteData>
 80095b0:	2006      	movs	r0, #6
 80095b2:	f7f7 fe0f 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095b6:	202c      	movs	r0, #44	; 0x2c
 80095b8:	f7f7 fe36 	bl	8001228 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80095bc:	20c8      	movs	r0, #200	; 0xc8
 80095be:	f7f7 fe9b 	bl	80012f8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80095c2:	2026      	movs	r0, #38	; 0x26
 80095c4:	f7f7 fe30 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095c8:	2001      	movs	r0, #1
 80095ca:	f7f7 fe03 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095ce:	20e0      	movs	r0, #224	; 0xe0
 80095d0:	f7f7 fe2a 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80095d4:	200f      	movs	r0, #15
 80095d6:	f7f7 fdfd 	bl	80011d4 <LCD_IO_WriteData>
 80095da:	2029      	movs	r0, #41	; 0x29
 80095dc:	f7f7 fdfa 	bl	80011d4 <LCD_IO_WriteData>
 80095e0:	2024      	movs	r0, #36	; 0x24
 80095e2:	f7f7 fdf7 	bl	80011d4 <LCD_IO_WriteData>
 80095e6:	200c      	movs	r0, #12
 80095e8:	f7f7 fdf4 	bl	80011d4 <LCD_IO_WriteData>
 80095ec:	200e      	movs	r0, #14
 80095ee:	f7f7 fdf1 	bl	80011d4 <LCD_IO_WriteData>
 80095f2:	2009      	movs	r0, #9
 80095f4:	f7f7 fdee 	bl	80011d4 <LCD_IO_WriteData>
 80095f8:	204e      	movs	r0, #78	; 0x4e
 80095fa:	f7f7 fdeb 	bl	80011d4 <LCD_IO_WriteData>
 80095fe:	2078      	movs	r0, #120	; 0x78
 8009600:	f7f7 fde8 	bl	80011d4 <LCD_IO_WriteData>
 8009604:	203c      	movs	r0, #60	; 0x3c
 8009606:	f7f7 fde5 	bl	80011d4 <LCD_IO_WriteData>
 800960a:	2009      	movs	r0, #9
 800960c:	f7f7 fde2 	bl	80011d4 <LCD_IO_WriteData>
 8009610:	2013      	movs	r0, #19
 8009612:	f7f7 fddf 	bl	80011d4 <LCD_IO_WriteData>
 8009616:	2005      	movs	r0, #5
 8009618:	f7f7 fddc 	bl	80011d4 <LCD_IO_WriteData>
 800961c:	2017      	movs	r0, #23
 800961e:	f7f7 fdd9 	bl	80011d4 <LCD_IO_WriteData>
 8009622:	2011      	movs	r0, #17
 8009624:	f7f7 fdd6 	bl	80011d4 <LCD_IO_WriteData>
 8009628:	2000      	movs	r0, #0
 800962a:	f7f7 fdd3 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800962e:	20e1      	movs	r0, #225	; 0xe1
 8009630:	f7f7 fdfa 	bl	8001228 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009634:	2000      	movs	r0, #0
 8009636:	f7f7 fdcd 	bl	80011d4 <LCD_IO_WriteData>
 800963a:	2016      	movs	r0, #22
 800963c:	f7f7 fdca 	bl	80011d4 <LCD_IO_WriteData>
 8009640:	201b      	movs	r0, #27
 8009642:	f7f7 fdc7 	bl	80011d4 <LCD_IO_WriteData>
 8009646:	2004      	movs	r0, #4
 8009648:	f7f7 fdc4 	bl	80011d4 <LCD_IO_WriteData>
 800964c:	2011      	movs	r0, #17
 800964e:	f7f7 fdc1 	bl	80011d4 <LCD_IO_WriteData>
 8009652:	2007      	movs	r0, #7
 8009654:	f7f7 fdbe 	bl	80011d4 <LCD_IO_WriteData>
 8009658:	2031      	movs	r0, #49	; 0x31
 800965a:	f7f7 fdbb 	bl	80011d4 <LCD_IO_WriteData>
 800965e:	2033      	movs	r0, #51	; 0x33
 8009660:	f7f7 fdb8 	bl	80011d4 <LCD_IO_WriteData>
 8009664:	2042      	movs	r0, #66	; 0x42
 8009666:	f7f7 fdb5 	bl	80011d4 <LCD_IO_WriteData>
 800966a:	2005      	movs	r0, #5
 800966c:	f7f7 fdb2 	bl	80011d4 <LCD_IO_WriteData>
 8009670:	200c      	movs	r0, #12
 8009672:	f7f7 fdaf 	bl	80011d4 <LCD_IO_WriteData>
 8009676:	200a      	movs	r0, #10
 8009678:	f7f7 fdac 	bl	80011d4 <LCD_IO_WriteData>
 800967c:	2028      	movs	r0, #40	; 0x28
 800967e:	f7f7 fda9 	bl	80011d4 <LCD_IO_WriteData>
 8009682:	202f      	movs	r0, #47	; 0x2f
 8009684:	f7f7 fda6 	bl	80011d4 <LCD_IO_WriteData>
 8009688:	200f      	movs	r0, #15
 800968a:	f7f7 fda3 	bl	80011d4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800968e:	2011      	movs	r0, #17
 8009690:	f7f7 fdca 	bl	8001228 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8009694:	20c8      	movs	r0, #200	; 0xc8
 8009696:	f7f7 fe2f 	bl	80012f8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 800969a:	2029      	movs	r0, #41	; 0x29
 800969c:	f7f7 fdc4 	bl	8001228 <LCD_IO_WriteReg>
}
 80096a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80096a4:	202c      	movs	r0, #44	; 0x2c
 80096a6:	f7f7 bdbf 	b.w	8001228 <LCD_IO_WriteReg>
 80096aa:	bf00      	nop

080096ac <ili9341_ReadID>:
{
 80096ac:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80096ae:	f7f7 fd81 	bl	80011b4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80096b2:	2103      	movs	r1, #3
 80096b4:	20d3      	movs	r0, #211	; 0xd3
 80096b6:	f7f7 fde1 	bl	800127c <LCD_IO_ReadData>
}
 80096ba:	b280      	uxth	r0, r0
 80096bc:	bd08      	pop	{r3, pc}
 80096be:	bf00      	nop

080096c0 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80096c0:	221f      	movs	r2, #31
 80096c2:	210b      	movs	r1, #11
 80096c4:	b2c0      	uxtb	r0, r0
 80096c6:	f7f7 bd27 	b.w	8001118 <IOE_Write>
 80096ca:	bf00      	nop

080096cc <stmpe811_Reset>:
{
 80096cc:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80096ce:	b2c4      	uxtb	r4, r0
 80096d0:	2202      	movs	r2, #2
 80096d2:	2103      	movs	r1, #3
 80096d4:	4620      	mov	r0, r4
 80096d6:	f7f7 fd1f 	bl	8001118 <IOE_Write>
  IOE_Delay(10); 
 80096da:	200a      	movs	r0, #10
 80096dc:	f7f7 fd68 	bl	80011b0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80096e0:	4620      	mov	r0, r4
 80096e2:	2200      	movs	r2, #0
 80096e4:	2103      	movs	r1, #3
 80096e6:	f7f7 fd17 	bl	8001118 <IOE_Write>
}
 80096ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80096ee:	2002      	movs	r0, #2
 80096f0:	f7f7 bd5e 	b.w	80011b0 <IOE_Delay>

080096f4 <stmpe811_ReadID>:
{
 80096f4:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80096f6:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 80096f8:	f7f7 fd0a 	bl	8001110 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 80096fc:	2100      	movs	r1, #0
 80096fe:	4620      	mov	r0, r4
 8009700:	f7f7 fd22 	bl	8001148 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009704:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009706:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009708:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800970a:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 800970c:	f7f7 fd1c 	bl	8001148 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009710:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009714:	b280      	uxth	r0, r0
 8009716:	bd10      	pop	{r4, pc}

08009718 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009718:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 800971a:	b2c4      	uxtb	r4, r0
 800971c:	2140      	movs	r1, #64	; 0x40
 800971e:	4620      	mov	r0, r4
 8009720:	f7f7 fd12 	bl	8001148 <IOE_Read>
  
  if(state > 0)
 8009724:	0603      	lsls	r3, r0, #24
 8009726:	d40b      	bmi.n	8009740 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009728:	4620      	mov	r0, r4
 800972a:	2201      	movs	r2, #1
 800972c:	214b      	movs	r1, #75	; 0x4b
 800972e:	f7f7 fcf3 	bl	8001118 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009732:	4620      	mov	r0, r4
 8009734:	2200      	movs	r2, #0
 8009736:	214b      	movs	r1, #75	; 0x4b
 8009738:	f7f7 fcee 	bl	8001118 <IOE_Write>
  uint8_t ret = 0;
 800973c:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800973e:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8009740:	214c      	movs	r1, #76	; 0x4c
 8009742:	4620      	mov	r0, r4
 8009744:	f7f7 fd00 	bl	8001148 <IOE_Read>
      ret = 1;
 8009748:	3800      	subs	r0, #0
 800974a:	bf18      	it	ne
 800974c:	2001      	movne	r0, #1
}
 800974e:	bd10      	pop	{r4, pc}

08009750 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8009750:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8009752:	210b      	movs	r1, #11
 8009754:	b2c0      	uxtb	r0, r0
 8009756:	f7f7 fcf7 	bl	8001148 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 800975a:	f000 001f 	and.w	r0, r0, #31
 800975e:	bd08      	pop	{r3, pc}

08009760 <stmpe811_TS_GetXY>:
{
 8009760:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009762:	2304      	movs	r3, #4
{
 8009764:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8009766:	b2c4      	uxtb	r4, r0
{
 8009768:	4615      	mov	r5, r2
 800976a:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800976c:	eb0d 0203 	add.w	r2, sp, r3
 8009770:	21d7      	movs	r1, #215	; 0xd7
 8009772:	4620      	mov	r0, r4
 8009774:	f7f7 fd04 	bl	8001180 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8009778:	9b01      	ldr	r3, [sp, #4]
 800977a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 800977c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 800977e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8009782:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009784:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8009786:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009788:	2201      	movs	r2, #1
 800978a:	214b      	movs	r1, #75	; 0x4b
 800978c:	f7f7 fcc4 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009790:	2200      	movs	r2, #0
 8009792:	214b      	movs	r1, #75	; 0x4b
 8009794:	4620      	mov	r0, r4
 8009796:	f7f7 fcbf 	bl	8001118 <IOE_Write>
}
 800979a:	b002      	add	sp, #8
 800979c:	bd70      	pop	{r4, r5, r6, pc}
 800979e:	bf00      	nop

080097a0 <stmpe811_TS_Start>:
{
 80097a0:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80097a2:	b2c4      	uxtb	r4, r0
 80097a4:	2104      	movs	r1, #4
 80097a6:	4620      	mov	r0, r4
 80097a8:	f7f7 fcce 	bl	8001148 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097ac:	2104      	movs	r1, #4
 80097ae:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80097b2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097b4:	4620      	mov	r0, r4
 80097b6:	f7f7 fcaf 	bl	8001118 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80097ba:	2117      	movs	r1, #23
 80097bc:	4620      	mov	r0, r4
 80097be:	f7f7 fcc3 	bl	8001148 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80097c2:	2117      	movs	r1, #23
 80097c4:	f000 020f 	and.w	r2, r0, #15
 80097c8:	4620      	mov	r0, r4
 80097ca:	f7f7 fca5 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80097ce:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 80097d2:	4620      	mov	r0, r4
 80097d4:	2104      	movs	r1, #4
 80097d6:	f7f7 fc9f 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80097da:	2249      	movs	r2, #73	; 0x49
 80097dc:	2120      	movs	r1, #32
 80097de:	4620      	mov	r0, r4
 80097e0:	f7f7 fc9a 	bl	8001118 <IOE_Write>
  IOE_Delay(2); 
 80097e4:	2002      	movs	r0, #2
 80097e6:	f7f7 fce3 	bl	80011b0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80097ea:	4620      	mov	r0, r4
 80097ec:	2201      	movs	r2, #1
 80097ee:	2121      	movs	r1, #33	; 0x21
 80097f0:	f7f7 fc92 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80097f4:	4620      	mov	r0, r4
 80097f6:	229a      	movs	r2, #154	; 0x9a
 80097f8:	2141      	movs	r1, #65	; 0x41
 80097fa:	f7f7 fc8d 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80097fe:	4620      	mov	r0, r4
 8009800:	2201      	movs	r2, #1
 8009802:	214a      	movs	r1, #74	; 0x4a
 8009804:	f7f7 fc88 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009808:	4620      	mov	r0, r4
 800980a:	2201      	movs	r2, #1
 800980c:	214b      	movs	r1, #75	; 0x4b
 800980e:	f7f7 fc83 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8009812:	4620      	mov	r0, r4
 8009814:	2200      	movs	r2, #0
 8009816:	214b      	movs	r1, #75	; 0x4b
 8009818:	f7f7 fc7e 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800981c:	4620      	mov	r0, r4
 800981e:	2201      	movs	r2, #1
 8009820:	2156      	movs	r1, #86	; 0x56
 8009822:	f7f7 fc79 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009826:	4620      	mov	r0, r4
 8009828:	2201      	movs	r2, #1
 800982a:	2158      	movs	r1, #88	; 0x58
 800982c:	f7f7 fc74 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8009830:	4620      	mov	r0, r4
 8009832:	2201      	movs	r2, #1
 8009834:	2140      	movs	r1, #64	; 0x40
 8009836:	f7f7 fc6f 	bl	8001118 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800983a:	4620      	mov	r0, r4
 800983c:	22ff      	movs	r2, #255	; 0xff
 800983e:	210b      	movs	r1, #11
 8009840:	f7f7 fc6a 	bl	8001118 <IOE_Write>
}
 8009844:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009848:	2002      	movs	r0, #2
 800984a:	f7f7 bcb1 	b.w	80011b0 <IOE_Delay>
 800984e:	bf00      	nop

08009850 <stmpe811_TS_DisableIT>:
{
 8009850:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8009852:	b2c4      	uxtb	r4, r0
 8009854:	2109      	movs	r1, #9
 8009856:	4620      	mov	r0, r4
 8009858:	f7f7 fc76 	bl	8001148 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 800985c:	2109      	movs	r1, #9
 800985e:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8009862:	4620      	mov	r0, r4
 8009864:	f7f7 fc58 	bl	8001118 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009868:	210a      	movs	r1, #10
 800986a:	4620      	mov	r0, r4
 800986c:	f7f7 fc6c 	bl	8001148 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009870:	210a      	movs	r1, #10
 8009872:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8009876:	4620      	mov	r0, r4
}
 8009878:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800987c:	f7f7 bc4c 	b.w	8001118 <IOE_Write>

08009880 <stmpe811_TS_EnableIT>:
{
 8009880:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009882:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8009884:	f7f7 fc46 	bl	8001114 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8009888:	210a      	movs	r1, #10
 800988a:	4620      	mov	r0, r4
 800988c:	f7f7 fc5c 	bl	8001148 <IOE_Read>
  tmp |= Source; 
 8009890:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8009894:	b2c2      	uxtb	r2, r0
 8009896:	210a      	movs	r1, #10
 8009898:	4620      	mov	r0, r4
 800989a:	f7f7 fc3d 	bl	8001118 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800989e:	2109      	movs	r1, #9
 80098a0:	4620      	mov	r0, r4
 80098a2:	f7f7 fc51 	bl	8001148 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80098a6:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80098aa:	b2c2      	uxtb	r2, r0
 80098ac:	2109      	movs	r1, #9
 80098ae:	4620      	mov	r0, r4
}
 80098b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80098b4:	f7f7 bc30 	b.w	8001118 <IOE_Write>

080098b8 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80098b8:	4a10      	ldr	r2, [pc, #64]	; (80098fc <stmpe811_Init+0x44>)
 80098ba:	7813      	ldrb	r3, [r2, #0]
 80098bc:	4298      	cmp	r0, r3
 80098be:	d004      	beq.n	80098ca <stmpe811_Init+0x12>
 80098c0:	7851      	ldrb	r1, [r2, #1]
 80098c2:	4288      	cmp	r0, r1
 80098c4:	d001      	beq.n	80098ca <stmpe811_Init+0x12>
 80098c6:	b113      	cbz	r3, 80098ce <stmpe811_Init+0x16>
 80098c8:	b101      	cbz	r1, 80098cc <stmpe811_Init+0x14>
 80098ca:	4770      	bx	lr
 80098cc:	2301      	movs	r3, #1
{
 80098ce:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 80098d0:	b2c4      	uxtb	r4, r0
 80098d2:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 80098d4:	f7f7 fc1c 	bl	8001110 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80098d8:	2202      	movs	r2, #2
 80098da:	2103      	movs	r1, #3
 80098dc:	4620      	mov	r0, r4
 80098de:	f7f7 fc1b 	bl	8001118 <IOE_Write>
  IOE_Delay(10); 
 80098e2:	200a      	movs	r0, #10
 80098e4:	f7f7 fc64 	bl	80011b0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80098e8:	4620      	mov	r0, r4
 80098ea:	2200      	movs	r2, #0
 80098ec:	2103      	movs	r1, #3
 80098ee:	f7f7 fc13 	bl	8001118 <IOE_Write>
}
 80098f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 80098f6:	2002      	movs	r0, #2
 80098f8:	f7f7 bc5a 	b.w	80011b0 <IOE_Delay>
 80098fc:	20002a14 	.word	0x20002a14

08009900 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009900:	4b05      	ldr	r3, [pc, #20]	; (8009918 <SystemInit+0x18>)
 8009902:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009906:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800990a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800990e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009912:	6099      	str	r1, [r3, #8]
#endif
}
 8009914:	4770      	bx	lr
 8009916:	bf00      	nop
 8009918:	e000ed00 	.word	0xe000ed00

0800991c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800991c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800991e:	4b0b      	ldr	r3, [pc, #44]	; (800994c <HAL_Init+0x30>)
 8009920:	681a      	ldr	r2, [r3, #0]
 8009922:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009926:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009928:	681a      	ldr	r2, [r3, #0]
 800992a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800992e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009930:	681a      	ldr	r2, [r3, #0]
 8009932:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009936:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009938:	2003      	movs	r0, #3
 800993a:	f000 f82d 	bl	8009998 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800993e:	2000      	movs	r0, #0
 8009940:	f7f8 f8ea 	bl	8001b18 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009944:	f7f7 fe2c 	bl	80015a0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009948:	2000      	movs	r0, #0
 800994a:	bd08      	pop	{r3, pc}
 800994c:	40023c00 	.word	0x40023c00

08009950 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009950:	4a03      	ldr	r2, [pc, #12]	; (8009960 <HAL_IncTick+0x10>)
 8009952:	4b04      	ldr	r3, [pc, #16]	; (8009964 <HAL_IncTick+0x14>)
 8009954:	6811      	ldr	r1, [r2, #0]
 8009956:	781b      	ldrb	r3, [r3, #0]
 8009958:	440b      	add	r3, r1
 800995a:	6013      	str	r3, [r2, #0]
}
 800995c:	4770      	bx	lr
 800995e:	bf00      	nop
 8009960:	20002a18 	.word	0x20002a18
 8009964:	2000007c 	.word	0x2000007c

08009968 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009968:	4b01      	ldr	r3, [pc, #4]	; (8009970 <HAL_GetTick+0x8>)
 800996a:	6818      	ldr	r0, [r3, #0]
}
 800996c:	4770      	bx	lr
 800996e:	bf00      	nop
 8009970:	20002a18 	.word	0x20002a18

08009974 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009974:	b538      	push	{r3, r4, r5, lr}
 8009976:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009978:	f7ff fff6 	bl	8009968 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800997c:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800997e:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009980:	d002      	beq.n	8009988 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8009982:	4b04      	ldr	r3, [pc, #16]	; (8009994 <HAL_Delay+0x20>)
 8009984:	781b      	ldrb	r3, [r3, #0]
 8009986:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009988:	f7ff ffee 	bl	8009968 <HAL_GetTick>
 800998c:	1b43      	subs	r3, r0, r5
 800998e:	42a3      	cmp	r3, r4
 8009990:	d3fa      	bcc.n	8009988 <HAL_Delay+0x14>
  {
  }
}
 8009992:	bd38      	pop	{r3, r4, r5, pc}
 8009994:	2000007c 	.word	0x2000007c

08009998 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009998:	4907      	ldr	r1, [pc, #28]	; (80099b8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 800999a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800999c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800999e:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80099a2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80099a6:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80099a8:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80099aa:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80099ae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80099b2:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80099b4:	4770      	bx	lr
 80099b6:	bf00      	nop
 80099b8:	e000ed00 	.word	0xe000ed00

080099bc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80099bc:	4b1c      	ldr	r3, [pc, #112]	; (8009a30 <HAL_NVIC_SetPriority+0x74>)
 80099be:	68db      	ldr	r3, [r3, #12]
 80099c0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80099c4:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80099c6:	f1c3 0e07 	rsb	lr, r3, #7
 80099ca:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80099ce:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80099d2:	bf28      	it	cs
 80099d4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80099d8:	f1bc 0f06 	cmp.w	ip, #6
 80099dc:	d91b      	bls.n	8009a16 <HAL_NVIC_SetPriority+0x5a>
 80099de:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80099e0:	f04f 3cff 	mov.w	ip, #4294967295
 80099e4:	fa0c fc03 	lsl.w	ip, ip, r3
 80099e8:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80099ec:	f04f 3cff 	mov.w	ip, #4294967295
 80099f0:	fa0c fc0e 	lsl.w	ip, ip, lr
 80099f4:	ea21 010c 	bic.w	r1, r1, ip
 80099f8:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 80099fa:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80099fc:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009a00:	db0c      	blt.n	8009a1c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009a02:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009a06:	0109      	lsls	r1, r1, #4
 8009a08:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009a0c:	b2c9      	uxtb	r1, r1
 8009a0e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009a12:	f85d fb04 	ldr.w	pc, [sp], #4
 8009a16:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009a18:	4613      	mov	r3, r2
 8009a1a:	e7e7      	b.n	80099ec <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009a1c:	4b05      	ldr	r3, [pc, #20]	; (8009a34 <HAL_NVIC_SetPriority+0x78>)
 8009a1e:	f000 000f 	and.w	r0, r0, #15
 8009a22:	0109      	lsls	r1, r1, #4
 8009a24:	4403      	add	r3, r0
 8009a26:	b2c9      	uxtb	r1, r1
 8009a28:	7619      	strb	r1, [r3, #24]
 8009a2a:	f85d fb04 	ldr.w	pc, [sp], #4
 8009a2e:	bf00      	nop
 8009a30:	e000ed00 	.word	0xe000ed00
 8009a34:	e000ecfc 	.word	0xe000ecfc

08009a38 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009a38:	2800      	cmp	r0, #0
 8009a3a:	db07      	blt.n	8009a4c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009a3c:	0941      	lsrs	r1, r0, #5
 8009a3e:	4a04      	ldr	r2, [pc, #16]	; (8009a50 <HAL_NVIC_EnableIRQ+0x18>)
 8009a40:	f000 001f 	and.w	r0, r0, #31
 8009a44:	2301      	movs	r3, #1
 8009a46:	4083      	lsls	r3, r0
 8009a48:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009a4c:	4770      	bx	lr
 8009a4e:	bf00      	nop
 8009a50:	e000e100 	.word	0xe000e100

08009a54 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009a54:	b180      	cbz	r0, 8009a78 <HAL_CRC_Init+0x24>
{
 8009a56:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009a58:	7943      	ldrb	r3, [r0, #5]
 8009a5a:	4604      	mov	r4, r0
 8009a5c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009a60:	b11b      	cbz	r3, 8009a6a <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009a62:	2301      	movs	r3, #1
 8009a64:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009a66:	2000      	movs	r0, #0
}
 8009a68:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 8009a6a:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 8009a6c:	f7f7 fdb8 	bl	80015e0 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8009a70:	2301      	movs	r3, #1
 8009a72:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009a74:	2000      	movs	r0, #0
}
 8009a76:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009a78:	2001      	movs	r0, #1
}
 8009a7a:	4770      	bx	lr

08009a7c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009a7c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009a80:	2b02      	cmp	r3, #2
 8009a82:	d003      	beq.n	8009a8c <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009a84:	2380      	movs	r3, #128	; 0x80
 8009a86:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8009a88:	2001      	movs	r0, #1
 8009a8a:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8009a8c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 8009a8e:	2305      	movs	r3, #5
 8009a90:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8009a94:	6813      	ldr	r3, [r2, #0]
 8009a96:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 8009a9a:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 8009a9c:	6013      	str	r3, [r2, #0]
}
 8009a9e:	4770      	bx	lr

08009aa0 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 8009aa0:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 8009aa4:	4770      	bx	lr
 8009aa6:	bf00      	nop

08009aa8 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 8009aa8:	4b21      	ldr	r3, [pc, #132]	; (8009b30 <FLASH_SetErrorCode+0x88>)
 8009aaa:	68da      	ldr	r2, [r3, #12]
 8009aac:	06d0      	lsls	r0, r2, #27
 8009aae:	d505      	bpl.n	8009abc <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009ab0:	4920      	ldr	r1, [pc, #128]	; (8009b34 <FLASH_SetErrorCode+0x8c>)
 8009ab2:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009ab4:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 8009ab6:	4302      	orrs	r2, r0
 8009ab8:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 8009aba:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 8009abc:	4b1c      	ldr	r3, [pc, #112]	; (8009b30 <FLASH_SetErrorCode+0x88>)
 8009abe:	68da      	ldr	r2, [r3, #12]
 8009ac0:	0691      	lsls	r1, r2, #26
 8009ac2:	d506      	bpl.n	8009ad2 <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009ac4:	491b      	ldr	r1, [pc, #108]	; (8009b34 <FLASH_SetErrorCode+0x8c>)
 8009ac6:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ac8:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009aca:	f042 0208 	orr.w	r2, r2, #8
 8009ace:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009ad0:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8009ad2:	4b17      	ldr	r3, [pc, #92]	; (8009b30 <FLASH_SetErrorCode+0x88>)
 8009ad4:	68da      	ldr	r2, [r3, #12]
 8009ad6:	0652      	lsls	r2, r2, #25
 8009ad8:	d506      	bpl.n	8009ae8 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009ada:	4916      	ldr	r1, [pc, #88]	; (8009b34 <FLASH_SetErrorCode+0x8c>)
 8009adc:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009ade:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009ae0:	f042 0204 	orr.w	r2, r2, #4
 8009ae4:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009ae6:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8009ae8:	4b11      	ldr	r3, [pc, #68]	; (8009b30 <FLASH_SetErrorCode+0x88>)
 8009aea:	68da      	ldr	r2, [r3, #12]
 8009aec:	0610      	lsls	r0, r2, #24
 8009aee:	d506      	bpl.n	8009afe <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009af0:	4910      	ldr	r1, [pc, #64]	; (8009b34 <FLASH_SetErrorCode+0x8c>)
 8009af2:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009af4:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009af6:	f042 0202 	orr.w	r2, r2, #2
 8009afa:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009afc:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8009afe:	4b0c      	ldr	r3, [pc, #48]	; (8009b30 <FLASH_SetErrorCode+0x88>)
 8009b00:	68da      	ldr	r2, [r3, #12]
 8009b02:	05d1      	lsls	r1, r2, #23
 8009b04:	d507      	bpl.n	8009b16 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009b06:	490b      	ldr	r1, [pc, #44]	; (8009b34 <FLASH_SetErrorCode+0x8c>)
 8009b08:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009b0a:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009b0e:	f042 0201 	orr.w	r2, r2, #1
 8009b12:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009b14:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8009b16:	4b06      	ldr	r3, [pc, #24]	; (8009b30 <FLASH_SetErrorCode+0x88>)
 8009b18:	68da      	ldr	r2, [r3, #12]
 8009b1a:	0792      	lsls	r2, r2, #30
 8009b1c:	d506      	bpl.n	8009b2c <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009b1e:	4905      	ldr	r1, [pc, #20]	; (8009b34 <FLASH_SetErrorCode+0x8c>)
 8009b20:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009b22:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009b24:	f042 0220 	orr.w	r2, r2, #32
 8009b28:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009b2a:	60d8      	str	r0, [r3, #12]
  }
}
 8009b2c:	4770      	bx	lr
 8009b2e:	bf00      	nop
 8009b30:	40023c00 	.word	0x40023c00
 8009b34:	20002a1c 	.word	0x20002a1c

08009b38 <HAL_FLASH_Program>:
{
 8009b38:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8009b3c:	4f4d      	ldr	r7, [pc, #308]	; (8009c74 <HAL_FLASH_Program+0x13c>)
{
 8009b3e:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 8009b40:	7e3b      	ldrb	r3, [r7, #24]
 8009b42:	2b01      	cmp	r3, #1
 8009b44:	d060      	beq.n	8009c08 <HAL_FLASH_Program+0xd0>
 8009b46:	2301      	movs	r3, #1
 8009b48:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009b4a:	2300      	movs	r3, #0
 8009b4c:	4681      	mov	r9, r0
 8009b4e:	468a      	mov	sl, r1
 8009b50:	4690      	mov	r8, r2
 8009b52:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009b54:	f7ff ff08 	bl	8009968 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b58:	4d47      	ldr	r5, [pc, #284]	; (8009c78 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009b5a:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b5c:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b60:	e004      	b.n	8009b6c <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b62:	f7ff ff01 	bl	8009968 <HAL_GetTick>
 8009b66:	1b00      	subs	r0, r0, r4
 8009b68:	42b0      	cmp	r0, r6
 8009b6a:	d848      	bhi.n	8009bfe <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b6c:	68eb      	ldr	r3, [r5, #12]
 8009b6e:	03d8      	lsls	r0, r3, #15
 8009b70:	d4f7      	bmi.n	8009b62 <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009b72:	68eb      	ldr	r3, [r5, #12]
 8009b74:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009b76:	bf44      	itt	mi
 8009b78:	2301      	movmi	r3, #1
 8009b7a:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009b7c:	4b3e      	ldr	r3, [pc, #248]	; (8009c78 <HAL_FLASH_Program+0x140>)
 8009b7e:	68da      	ldr	r2, [r3, #12]
 8009b80:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 8009b84:	d154      	bne.n	8009c30 <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8009b86:	f1b9 0f00 	cmp.w	r9, #0
 8009b8a:	d040      	beq.n	8009c0e <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009b8c:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009b90:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009b92:	d051      	beq.n	8009c38 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009b94:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009b98:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009b9a:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009b9e:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009ba0:	d05e      	beq.n	8009c60 <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8009ba2:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8009ba6:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009ba8:	691a      	ldr	r2, [r3, #16]
 8009baa:	f042 0201 	orr.w	r2, r2, #1
 8009bae:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8009bb0:	f8ca 8000 	str.w	r8, [sl]
 8009bb4:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8009bb8:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009bbc:	2300      	movs	r3, #0
 8009bbe:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009bc0:	f7ff fed2 	bl	8009968 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bc4:	4d2c      	ldr	r5, [pc, #176]	; (8009c78 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009bc6:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009bc8:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bcc:	e004      	b.n	8009bd8 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009bce:	f7ff fecb 	bl	8009968 <HAL_GetTick>
 8009bd2:	1b00      	subs	r0, r0, r4
 8009bd4:	42b0      	cmp	r0, r6
 8009bd6:	d829      	bhi.n	8009c2c <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009bd8:	68eb      	ldr	r3, [r5, #12]
 8009bda:	03da      	lsls	r2, r3, #15
 8009bdc:	d4f7      	bmi.n	8009bce <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009bde:	68eb      	ldr	r3, [r5, #12]
 8009be0:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009be2:	bf44      	itt	mi
 8009be4:	2301      	movmi	r3, #1
 8009be6:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009be8:	4b23      	ldr	r3, [pc, #140]	; (8009c78 <HAL_FLASH_Program+0x140>)
 8009bea:	68d8      	ldr	r0, [r3, #12]
 8009bec:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009bf0:	d132      	bne.n	8009c58 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 8009bf2:	4a21      	ldr	r2, [pc, #132]	; (8009c78 <HAL_FLASH_Program+0x140>)
 8009bf4:	6913      	ldr	r3, [r2, #16]
 8009bf6:	f023 0301 	bic.w	r3, r3, #1
 8009bfa:	6113      	str	r3, [r2, #16]
 8009bfc:	e000      	b.n	8009c00 <HAL_FLASH_Program+0xc8>
 8009bfe:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 8009c00:	2300      	movs	r3, #0
 8009c02:	763b      	strb	r3, [r7, #24]
}
 8009c04:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 8009c08:	2002      	movs	r0, #2
}
 8009c0a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c0e:	691a      	ldr	r2, [r3, #16]
 8009c10:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009c14:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8009c16:	691a      	ldr	r2, [r3, #16]
 8009c18:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c1a:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8009c1c:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009c20:	f042 0201 	orr.w	r2, r2, #1
 8009c24:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 8009c26:	f88a 8000 	strb.w	r8, [sl]
}
 8009c2a:	e7c7      	b.n	8009bbc <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 8009c2c:	2003      	movs	r0, #3
 8009c2e:	e7e0      	b.n	8009bf2 <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 8009c30:	f7ff ff3a 	bl	8009aa8 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c34:	2001      	movs	r0, #1
 8009c36:	e7e3      	b.n	8009c00 <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009c38:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009c3c:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8009c3e:	691a      	ldr	r2, [r3, #16]
 8009c40:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009c44:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c46:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8009c48:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009c4c:	f042 0201 	orr.w	r2, r2, #1
 8009c50:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 8009c52:	f8aa 8000 	strh.w	r8, [sl]
}
 8009c56:	e7b1      	b.n	8009bbc <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 8009c58:	f7ff ff26 	bl	8009aa8 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c5c:	2001      	movs	r0, #1
 8009c5e:	e7c8      	b.n	8009bf2 <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009c60:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009c64:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009c66:	691a      	ldr	r2, [r3, #16]
 8009c68:	f042 0201 	orr.w	r2, r2, #1
 8009c6c:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 8009c6e:	f8ca 8000 	str.w	r8, [sl]
}
 8009c72:	e7a3      	b.n	8009bbc <HAL_FLASH_Program+0x84>
 8009c74:	20002a1c 	.word	0x20002a1c
 8009c78:	40023c00 	.word	0x40023c00

08009c7c <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009c7c:	4b06      	ldr	r3, [pc, #24]	; (8009c98 <HAL_FLASH_Unlock+0x1c>)
 8009c7e:	691a      	ldr	r2, [r3, #16]
 8009c80:	2a00      	cmp	r2, #0
 8009c82:	db01      	blt.n	8009c88 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 8009c84:	2000      	movs	r0, #0
}
 8009c86:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009c88:	4904      	ldr	r1, [pc, #16]	; (8009c9c <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009c8a:	4a05      	ldr	r2, [pc, #20]	; (8009ca0 <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009c8c:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009c8e:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009c90:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 8009c92:	0fc0      	lsrs	r0, r0, #31
 8009c94:	4770      	bx	lr
 8009c96:	bf00      	nop
 8009c98:	40023c00 	.word	0x40023c00
 8009c9c:	45670123 	.word	0x45670123
 8009ca0:	cdef89ab 	.word	0xcdef89ab

08009ca4 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8009ca4:	4a03      	ldr	r2, [pc, #12]	; (8009cb4 <HAL_FLASH_Lock+0x10>)
 8009ca6:	6913      	ldr	r3, [r2, #16]
 8009ca8:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 8009cac:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 8009cae:	6113      	str	r3, [r2, #16]
}
 8009cb0:	4770      	bx	lr
 8009cb2:	bf00      	nop
 8009cb4:	40023c00 	.word	0x40023c00

08009cb8 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 8009cb8:	4b01      	ldr	r3, [pc, #4]	; (8009cc0 <HAL_FLASH_GetError+0x8>)
 8009cba:	69d8      	ldr	r0, [r3, #28]
}  
 8009cbc:	4770      	bx	lr
 8009cbe:	bf00      	nop
 8009cc0:	20002a1c 	.word	0x20002a1c

08009cc4 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cc4:	4b14      	ldr	r3, [pc, #80]	; (8009d18 <FLASH_WaitForLastOperation+0x54>)
{ 
 8009cc6:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009cc8:	2200      	movs	r2, #0
{ 
 8009cca:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009ccc:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8009cce:	f7ff fe4b 	bl	8009968 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009cd2:	4e12      	ldr	r6, [pc, #72]	; (8009d1c <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 8009cd4:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009cd6:	1c63      	adds	r3, r4, #1
 8009cd8:	d10f      	bne.n	8009cfa <FLASH_WaitForLastOperation+0x36>
 8009cda:	4a10      	ldr	r2, [pc, #64]	; (8009d1c <FLASH_WaitForLastOperation+0x58>)
 8009cdc:	68d3      	ldr	r3, [r2, #12]
 8009cde:	03d8      	lsls	r0, r3, #15
 8009ce0:	d4fc      	bmi.n	8009cdc <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009ce2:	4b0e      	ldr	r3, [pc, #56]	; (8009d1c <FLASH_WaitForLastOperation+0x58>)
 8009ce4:	68da      	ldr	r2, [r3, #12]
 8009ce6:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009ce8:	bf44      	itt	mi
 8009cea:	2201      	movmi	r2, #1
 8009cec:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009cee:	4b0b      	ldr	r3, [pc, #44]	; (8009d1c <FLASH_WaitForLastOperation+0x58>)
 8009cf0:	68d8      	ldr	r0, [r3, #12]
 8009cf2:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009cf6:	d10b      	bne.n	8009d10 <FLASH_WaitForLastOperation+0x4c>
}  
 8009cf8:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009cfa:	68f3      	ldr	r3, [r6, #12]
 8009cfc:	03d9      	lsls	r1, r3, #15
 8009cfe:	d5f0      	bpl.n	8009ce2 <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009d00:	b124      	cbz	r4, 8009d0c <FLASH_WaitForLastOperation+0x48>
 8009d02:	f7ff fe31 	bl	8009968 <HAL_GetTick>
 8009d06:	1b40      	subs	r0, r0, r5
 8009d08:	42a0      	cmp	r0, r4
 8009d0a:	d9e4      	bls.n	8009cd6 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 8009d0c:	2003      	movs	r0, #3
}  
 8009d0e:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 8009d10:	f7ff feca 	bl	8009aa8 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009d14:	2001      	movs	r0, #1
}  
 8009d16:	bd70      	pop	{r4, r5, r6, pc}
 8009d18:	20002a1c 	.word	0x20002a1c
 8009d1c:	40023c00 	.word	0x40023c00

08009d20 <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8009d20:	4b14      	ldr	r3, [pc, #80]	; (8009d74 <FLASH_FlushCaches+0x54>)
 8009d22:	681a      	ldr	r2, [r3, #0]
 8009d24:	0591      	lsls	r1, r2, #22
 8009d26:	d50f      	bpl.n	8009d48 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8009d28:	681a      	ldr	r2, [r3, #0]
 8009d2a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009d2e:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8009d30:	681a      	ldr	r2, [r3, #0]
 8009d32:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009d36:	601a      	str	r2, [r3, #0]
 8009d38:	681a      	ldr	r2, [r3, #0]
 8009d3a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009d3e:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009d40:	681a      	ldr	r2, [r3, #0]
 8009d42:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009d46:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8009d48:	4b0a      	ldr	r3, [pc, #40]	; (8009d74 <FLASH_FlushCaches+0x54>)
 8009d4a:	681a      	ldr	r2, [r3, #0]
 8009d4c:	0552      	lsls	r2, r2, #21
 8009d4e:	d50f      	bpl.n	8009d70 <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8009d50:	681a      	ldr	r2, [r3, #0]
 8009d52:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009d56:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8009d58:	681a      	ldr	r2, [r3, #0]
 8009d5a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009d5e:	601a      	str	r2, [r3, #0]
 8009d60:	681a      	ldr	r2, [r3, #0]
 8009d62:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8009d66:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8009d68:	681a      	ldr	r2, [r3, #0]
 8009d6a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009d6e:	601a      	str	r2, [r3, #0]
  }
}
 8009d70:	4770      	bx	lr
 8009d72:	bf00      	nop
 8009d74:	40023c00 	.word	0x40023c00

08009d78 <HAL_FLASHEx_Erase>:
{
 8009d78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009d7c:	4f44      	ldr	r7, [pc, #272]	; (8009e90 <HAL_FLASHEx_Erase+0x118>)
 8009d7e:	7e3b      	ldrb	r3, [r7, #24]
 8009d80:	2b01      	cmp	r3, #1
 8009d82:	d053      	beq.n	8009e2c <HAL_FLASHEx_Erase+0xb4>
 8009d84:	2301      	movs	r3, #1
 8009d86:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009d88:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009d8c:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009d8e:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009d90:	f7ff ff98 	bl	8009cc4 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8009d94:	4606      	mov	r6, r0
 8009d96:	2800      	cmp	r0, #0
 8009d98:	d143      	bne.n	8009e22 <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 8009d9a:	f04f 33ff 	mov.w	r3, #4294967295
 8009d9e:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8009da2:	f8d9 3000 	ldr.w	r3, [r9]
 8009da6:	2b01      	cmp	r3, #1
 8009da8:	d044      	beq.n	8009e34 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009daa:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 8009dae:	442b      	add	r3, r5
 8009db0:	429d      	cmp	r5, r3
 8009db2:	d234      	bcs.n	8009e1e <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009db4:	4c37      	ldr	r4, [pc, #220]	; (8009e94 <HAL_FLASHEx_Erase+0x11c>)
 8009db6:	e005      	b.n	8009dc4 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009db8:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 8009dbc:	3501      	adds	r5, #1
 8009dbe:	4413      	add	r3, r2
 8009dc0:	42ab      	cmp	r3, r5
 8009dc2:	d92c      	bls.n	8009e1e <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8009dc4:	f899 3010 	ldrb.w	r3, [r9, #16]
 8009dc8:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 8009dca:	f44f 7140 	mov.w	r1, #768	; 0x300
 8009dce:	bf98      	it	ls
 8009dd0:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009dd2:	6923      	ldr	r3, [r4, #16]
 8009dd4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009dd8:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 8009dda:	6923      	ldr	r3, [r4, #16]
 8009ddc:	430b      	orrs	r3, r1
 8009dde:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8009de0:	6923      	ldr	r3, [r4, #16]
 8009de2:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009de6:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009de8:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 8009dea:	2d0b      	cmp	r5, #11
    Sector += 4U;
 8009dec:	bf8c      	ite	hi
 8009dee:	1d2a      	addhi	r2, r5, #4
 8009df0:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009df2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009df6:	f043 0302 	orr.w	r3, r3, #2
 8009dfa:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8009dfc:	6923      	ldr	r3, [r4, #16]
 8009dfe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009e02:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e04:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009e08:	f7ff ff5c 	bl	8009cc4 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8009e0c:	6923      	ldr	r3, [r4, #16]
 8009e0e:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 8009e12:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 8009e14:	2800      	cmp	r0, #0
 8009e16:	d0cf      	beq.n	8009db8 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 8009e18:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e1c:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 8009e1e:	f7ff ff7f 	bl	8009d20 <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 8009e22:	2300      	movs	r3, #0
 8009e24:	763b      	strb	r3, [r7, #24]
}
 8009e26:	4630      	mov	r0, r6
 8009e28:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 8009e2c:	2602      	movs	r6, #2
}
 8009e2e:	4630      	mov	r0, r6
 8009e30:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e34:	4a17      	ldr	r2, [pc, #92]	; (8009e94 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009e36:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e3a:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009e3c:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009e40:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 8009e44:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009e46:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 8009e48:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009e4a:	d01a      	beq.n	8009e82 <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 8009e4c:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 8009e4e:	bf0c      	ite	eq
 8009e50:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 8009e54:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 8009e58:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8009e5a:	4c0e      	ldr	r4, [pc, #56]	; (8009e94 <HAL_FLASHEx_Erase+0x11c>)
 8009e5c:	021b      	lsls	r3, r3, #8
 8009e5e:	6922      	ldr	r2, [r4, #16]
 8009e60:	b29b      	uxth	r3, r3
 8009e62:	4313      	orrs	r3, r2
 8009e64:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009e68:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e6a:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009e6e:	f7ff ff29 	bl	8009cc4 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8009e72:	6923      	ldr	r3, [r4, #16]
 8009e74:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009e78:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009e7c:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009e7e:	6123      	str	r3, [r4, #16]
 8009e80:	e7cd      	b.n	8009e1e <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 8009e82:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009e86:	f041 0104 	orr.w	r1, r1, #4
 8009e8a:	6111      	str	r1, [r2, #16]
 8009e8c:	e7e5      	b.n	8009e5a <HAL_FLASHEx_Erase+0xe2>
 8009e8e:	bf00      	nop
 8009e90:	20002a1c 	.word	0x20002a1c
 8009e94:	40023c00 	.word	0x40023c00

08009e98 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009e9c:	2200      	movs	r2, #0
 8009e9e:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009ea0:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a104 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009ea4:	4e90      	ldr	r6, [pc, #576]	; (800a0e8 <HAL_GPIO_Init+0x250>)
{
 8009ea6:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009ea8:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009eaa:	4689      	mov	r9, r1
 8009eac:	e005      	b.n	8009eba <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009eae:	3301      	adds	r3, #1
 8009eb0:	2b10      	cmp	r3, #16
 8009eb2:	f102 0202 	add.w	r2, r2, #2
 8009eb6:	f000 8095 	beq.w	8009fe4 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009eba:	2101      	movs	r1, #1
 8009ebc:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009ebe:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009ec2:	43a1      	bics	r1, r4
 8009ec4:	d1f3      	bne.n	8009eae <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009ec6:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009eca:	f00c 0103 	and.w	r1, ip, #3
 8009ece:	1e4d      	subs	r5, r1, #1
 8009ed0:	2d01      	cmp	r5, #1
 8009ed2:	f240 808a 	bls.w	8009fea <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009ed6:	2903      	cmp	r1, #3
 8009ed8:	f040 80ca 	bne.w	800a070 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009edc:	4091      	lsls	r1, r2
 8009ede:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009ee0:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009ee2:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009ee4:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009ee6:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009eea:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009eec:	d0df      	beq.n	8009eae <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009eee:	2100      	movs	r1, #0
 8009ef0:	9103      	str	r1, [sp, #12]
 8009ef2:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009ef6:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009efa:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009efe:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009f02:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009f06:	9103      	str	r1, [sp, #12]
 8009f08:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009f0a:	f023 0103 	bic.w	r1, r3, #3
 8009f0e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009f12:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009f16:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009f1a:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009f1c:	00bf      	lsls	r7, r7, #2
 8009f1e:	f04f 0e0f 	mov.w	lr, #15
 8009f22:	fa0e fe07 	lsl.w	lr, lr, r7
 8009f26:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009f2a:	4d70      	ldr	r5, [pc, #448]	; (800a0ec <HAL_GPIO_Init+0x254>)
 8009f2c:	42a8      	cmp	r0, r5
 8009f2e:	d02e      	beq.n	8009f8e <HAL_GPIO_Init+0xf6>
 8009f30:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009f34:	42a8      	cmp	r0, r5
 8009f36:	f000 809f 	beq.w	800a078 <HAL_GPIO_Init+0x1e0>
 8009f3a:	4d6d      	ldr	r5, [pc, #436]	; (800a0f0 <HAL_GPIO_Init+0x258>)
 8009f3c:	42a8      	cmp	r0, r5
 8009f3e:	f000 80a2 	beq.w	800a086 <HAL_GPIO_Init+0x1ee>
 8009f42:	4d6c      	ldr	r5, [pc, #432]	; (800a0f4 <HAL_GPIO_Init+0x25c>)
 8009f44:	42a8      	cmp	r0, r5
 8009f46:	f000 80a5 	beq.w	800a094 <HAL_GPIO_Init+0x1fc>
 8009f4a:	4d6b      	ldr	r5, [pc, #428]	; (800a0f8 <HAL_GPIO_Init+0x260>)
 8009f4c:	42a8      	cmp	r0, r5
 8009f4e:	f000 80a8 	beq.w	800a0a2 <HAL_GPIO_Init+0x20a>
 8009f52:	4d6a      	ldr	r5, [pc, #424]	; (800a0fc <HAL_GPIO_Init+0x264>)
 8009f54:	42a8      	cmp	r0, r5
 8009f56:	f000 80b2 	beq.w	800a0be <HAL_GPIO_Init+0x226>
 8009f5a:	4d69      	ldr	r5, [pc, #420]	; (800a100 <HAL_GPIO_Init+0x268>)
 8009f5c:	42a8      	cmp	r0, r5
 8009f5e:	f000 80b5 	beq.w	800a0cc <HAL_GPIO_Init+0x234>
 8009f62:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a108 <HAL_GPIO_Init+0x270>
 8009f66:	4570      	cmp	r0, lr
 8009f68:	f000 80a2 	beq.w	800a0b0 <HAL_GPIO_Init+0x218>
 8009f6c:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a10c <HAL_GPIO_Init+0x274>
 8009f70:	4570      	cmp	r0, lr
 8009f72:	f000 80b2 	beq.w	800a0da <HAL_GPIO_Init+0x242>
 8009f76:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a110 <HAL_GPIO_Init+0x278>
 8009f7a:	4570      	cmp	r0, lr
 8009f7c:	bf0c      	ite	eq
 8009f7e:	f04f 0e09 	moveq.w	lr, #9
 8009f82:	f04f 0e0a 	movne.w	lr, #10
 8009f86:	fa0e f707 	lsl.w	r7, lr, r7
 8009f8a:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009f8e:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009f92:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009f94:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009f98:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009f9c:	bf0c      	ite	eq
 8009f9e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fa0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009fa4:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009fa6:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009fa8:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009fac:	bf0c      	ite	eq
 8009fae:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fb0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009fb4:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009fb6:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009fb8:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009fbc:	bf0c      	ite	eq
 8009fbe:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fc0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009fc4:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009fc6:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009fc8:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fcc:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009fd0:	bf0c      	ite	eq
 8009fd2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009fd4:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fd8:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009fda:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009fdc:	f102 0202 	add.w	r2, r2, #2
 8009fe0:	f47f af6b 	bne.w	8009eba <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009fe4:	b005      	add	sp, #20
 8009fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009fea:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009fee:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009ff2:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009ff6:	2503      	movs	r5, #3
 8009ff8:	fa05 f802 	lsl.w	r8, r5, r2
 8009ffc:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a000:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a004:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a006:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a008:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a00c:	f3cc 1700 	ubfx	r7, ip, #4, #1
 800a010:	409f      	lsls	r7, r3
 800a012:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a016:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800a01a:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a01c:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a01e:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a022:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800a026:	4097      	lsls	r7, r2
 800a028:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a02c:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800a02e:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a030:	fa01 f102 	lsl.w	r1, r1, r2
 800a034:	f47f af54 	bne.w	8009ee0 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800a038:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800a03c:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a040:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a044:	f8de 7020 	ldr.w	r7, [lr, #32]
 800a048:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a04a:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a04e:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a052:	fa07 f708 	lsl.w	r7, r7, r8
 800a056:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a058:	270f      	movs	r7, #15
 800a05a:	fa07 f808 	lsl.w	r8, r7, r8
 800a05e:	9f00      	ldr	r7, [sp, #0]
 800a060:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a064:	9f01      	ldr	r7, [sp, #4]
 800a066:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800a06a:	f8ce 7020 	str.w	r7, [lr, #32]
 800a06e:	e737      	b.n	8009ee0 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a070:	2503      	movs	r5, #3
 800a072:	4095      	lsls	r5, r2
 800a074:	43ed      	mvns	r5, r5
 800a076:	e7d1      	b.n	800a01c <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a078:	f04f 0e01 	mov.w	lr, #1
 800a07c:	fa0e f707 	lsl.w	r7, lr, r7
 800a080:	ea48 0807 	orr.w	r8, r8, r7
 800a084:	e783      	b.n	8009f8e <HAL_GPIO_Init+0xf6>
 800a086:	f04f 0e02 	mov.w	lr, #2
 800a08a:	fa0e f707 	lsl.w	r7, lr, r7
 800a08e:	ea48 0807 	orr.w	r8, r8, r7
 800a092:	e77c      	b.n	8009f8e <HAL_GPIO_Init+0xf6>
 800a094:	f04f 0e03 	mov.w	lr, #3
 800a098:	fa0e f707 	lsl.w	r7, lr, r7
 800a09c:	ea48 0807 	orr.w	r8, r8, r7
 800a0a0:	e775      	b.n	8009f8e <HAL_GPIO_Init+0xf6>
 800a0a2:	f04f 0e04 	mov.w	lr, #4
 800a0a6:	fa0e f707 	lsl.w	r7, lr, r7
 800a0aa:	ea48 0807 	orr.w	r8, r8, r7
 800a0ae:	e76e      	b.n	8009f8e <HAL_GPIO_Init+0xf6>
 800a0b0:	f04f 0e07 	mov.w	lr, #7
 800a0b4:	fa0e f707 	lsl.w	r7, lr, r7
 800a0b8:	ea48 0807 	orr.w	r8, r8, r7
 800a0bc:	e767      	b.n	8009f8e <HAL_GPIO_Init+0xf6>
 800a0be:	f04f 0e05 	mov.w	lr, #5
 800a0c2:	fa0e f707 	lsl.w	r7, lr, r7
 800a0c6:	ea48 0807 	orr.w	r8, r8, r7
 800a0ca:	e760      	b.n	8009f8e <HAL_GPIO_Init+0xf6>
 800a0cc:	f04f 0e06 	mov.w	lr, #6
 800a0d0:	fa0e f707 	lsl.w	r7, lr, r7
 800a0d4:	ea48 0807 	orr.w	r8, r8, r7
 800a0d8:	e759      	b.n	8009f8e <HAL_GPIO_Init+0xf6>
 800a0da:	f04f 0e08 	mov.w	lr, #8
 800a0de:	fa0e f707 	lsl.w	r7, lr, r7
 800a0e2:	ea48 0807 	orr.w	r8, r8, r7
 800a0e6:	e752      	b.n	8009f8e <HAL_GPIO_Init+0xf6>
 800a0e8:	40013c00 	.word	0x40013c00
 800a0ec:	40020000 	.word	0x40020000
 800a0f0:	40020800 	.word	0x40020800
 800a0f4:	40020c00 	.word	0x40020c00
 800a0f8:	40021000 	.word	0x40021000
 800a0fc:	40021400 	.word	0x40021400
 800a100:	40021800 	.word	0x40021800
 800a104:	40023800 	.word	0x40023800
 800a108:	40021c00 	.word	0x40021c00
 800a10c:	40022000 	.word	0x40022000
 800a110:	40022400 	.word	0x40022400

0800a114 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a114:	6903      	ldr	r3, [r0, #16]
 800a116:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a118:	bf14      	ite	ne
 800a11a:	2001      	movne	r0, #1
 800a11c:	2000      	moveq	r0, #0
 800a11e:	4770      	bx	lr

0800a120 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a120:	b902      	cbnz	r2, 800a124 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a122:	0409      	lsls	r1, r1, #16
 800a124:	6181      	str	r1, [r0, #24]
  }
}
 800a126:	4770      	bx	lr

0800a128 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a128:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a12a:	ea01 0203 	and.w	r2, r1, r3
 800a12e:	ea21 0103 	bic.w	r1, r1, r3
 800a132:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a136:	6181      	str	r1, [r0, #24]
}
 800a138:	4770      	bx	lr
 800a13a:	bf00      	nop

0800a13c <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a13c:	4770      	bx	lr
 800a13e:	bf00      	nop

0800a140 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a140:	4a04      	ldr	r2, [pc, #16]	; (800a154 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a142:	6951      	ldr	r1, [r2, #20]
 800a144:	4201      	tst	r1, r0
 800a146:	d100      	bne.n	800a14a <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a148:	4770      	bx	lr
{
 800a14a:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a14c:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a14e:	f7ff fff5 	bl	800a13c <HAL_GPIO_EXTI_Callback>
}
 800a152:	bd08      	pop	{r3, pc}
 800a154:	40013c00 	.word	0x40013c00

0800a158 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a15c:	6804      	ldr	r4, [r0, #0]
{
 800a15e:	b083      	sub	sp, #12
 800a160:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a162:	6823      	ldr	r3, [r4, #0]
{
 800a164:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a168:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a16c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a170:	4606      	mov	r6, r0
 800a172:	468a      	mov	sl, r1
 800a174:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a176:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a178:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a17c:	d136      	bne.n	800a1ec <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a17e:	6965      	ldr	r5, [r4, #20]
 800a180:	07e8      	lsls	r0, r5, #31
 800a182:	d5fc      	bpl.n	800a17e <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a184:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a188:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a18a:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a18e:	d003      	beq.n	800a198 <I2C_RequestMemoryWrite+0x40>
 800a190:	e04f      	b.n	800a232 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a192:	6961      	ldr	r1, [r4, #20]
 800a194:	054d      	lsls	r5, r1, #21
 800a196:	d45d      	bmi.n	800a254 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a198:	6961      	ldr	r1, [r4, #20]
 800a19a:	078b      	lsls	r3, r1, #30
 800a19c:	d5f9      	bpl.n	800a192 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a19e:	2300      	movs	r3, #0
 800a1a0:	9301      	str	r3, [sp, #4]
 800a1a2:	6963      	ldr	r3, [r4, #20]
 800a1a4:	9301      	str	r3, [sp, #4]
 800a1a6:	69a3      	ldr	r3, [r4, #24]
 800a1a8:	9301      	str	r3, [sp, #4]
 800a1aa:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a1ac:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a1b0:	f040 8088 	bne.w	800a2c4 <I2C_RequestMemoryWrite+0x16c>
 800a1b4:	6963      	ldr	r3, [r4, #20]
 800a1b6:	061a      	lsls	r2, r3, #24
 800a1b8:	d464      	bmi.n	800a284 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1ba:	6963      	ldr	r3, [r4, #20]
 800a1bc:	055b      	lsls	r3, r3, #21
 800a1be:	d5f9      	bpl.n	800a1b4 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a1c0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1c2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a1c6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1c8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a1ca:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a1cc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a1d0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a1d4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a1d6:	f043 0304 	orr.w	r3, r3, #4
 800a1da:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1dc:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a1de:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1e0:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a1e2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a1e6:	d066      	beq.n	800a2b6 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a1e8:	2001      	movs	r0, #1
 800a1ea:	e01f      	b.n	800a22c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a1ec:	6963      	ldr	r3, [r4, #20]
 800a1ee:	07d9      	lsls	r1, r3, #31
 800a1f0:	d4c8      	bmi.n	800a184 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a1f2:	f7ff fbb9 	bl	8009968 <HAL_GetTick>
 800a1f6:	eba0 000b 	sub.w	r0, r0, fp
 800a1fa:	4581      	cmp	r9, r0
 800a1fc:	d304      	bcc.n	800a208 <I2C_RequestMemoryWrite+0xb0>
 800a1fe:	f1b9 0f00 	cmp.w	r9, #0
 800a202:	d001      	beq.n	800a208 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a204:	6834      	ldr	r4, [r6, #0]
 800a206:	e7b7      	b.n	800a178 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a208:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a20a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a20c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a20e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a212:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a216:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a218:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a21a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a21e:	f042 0220 	orr.w	r2, r2, #32
 800a222:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a224:	680b      	ldr	r3, [r1, #0]
 800a226:	05dc      	lsls	r4, r3, #23
 800a228:	d435      	bmi.n	800a296 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a22a:	2003      	movs	r0, #3
}
 800a22c:	b003      	add	sp, #12
 800a22e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a232:	6963      	ldr	r3, [r4, #20]
 800a234:	0798      	lsls	r0, r3, #30
 800a236:	d4b2      	bmi.n	800a19e <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a238:	6963      	ldr	r3, [r4, #20]
 800a23a:	055a      	lsls	r2, r3, #21
 800a23c:	d40a      	bmi.n	800a254 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a23e:	f7ff fb93 	bl	8009968 <HAL_GetTick>
 800a242:	eba0 000b 	sub.w	r0, r0, fp
 800a246:	4581      	cmp	r9, r0
 800a248:	d34e      	bcc.n	800a2e8 <I2C_RequestMemoryWrite+0x190>
 800a24a:	f1b9 0f00 	cmp.w	r9, #0
 800a24e:	d04b      	beq.n	800a2e8 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a250:	6834      	ldr	r4, [r6, #0]
 800a252:	e79a      	b.n	800a18a <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a254:	6823      	ldr	r3, [r4, #0]
 800a256:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a25a:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a25c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a25e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a262:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a264:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a266:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a268:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a26c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a270:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a272:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a276:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a27a:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a27c:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a27e:	b003      	add	sp, #12
 800a280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a284:	f1b8 0f01 	cmp.w	r8, #1
 800a288:	d109      	bne.n	800a29e <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a28a:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a28c:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a28e:	6127      	str	r7, [r4, #16]
}
 800a290:	b003      	add	sp, #12
 800a292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a296:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a29a:	6433      	str	r3, [r6, #64]	; 0x40
 800a29c:	e7c5      	b.n	800a22a <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a29e:	0a3b      	lsrs	r3, r7, #8
 800a2a0:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2a2:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a2a6:	d12e      	bne.n	800a306 <I2C_RequestMemoryWrite+0x1ae>
 800a2a8:	6963      	ldr	r3, [r4, #20]
 800a2aa:	0619      	lsls	r1, r3, #24
 800a2ac:	d4ed      	bmi.n	800a28a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2ae:	6963      	ldr	r3, [r4, #20]
 800a2b0:	055a      	lsls	r2, r3, #21
 800a2b2:	d5f9      	bpl.n	800a2a8 <I2C_RequestMemoryWrite+0x150>
 800a2b4:	e784      	b.n	800a1c0 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a2b6:	6832      	ldr	r2, [r6, #0]
 800a2b8:	6813      	ldr	r3, [r2, #0]
 800a2ba:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a2be:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a2c0:	6013      	str	r3, [r2, #0]
 800a2c2:	e7b3      	b.n	800a22c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2c4:	6963      	ldr	r3, [r4, #20]
 800a2c6:	061d      	lsls	r5, r3, #24
 800a2c8:	d4dc      	bmi.n	800a284 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2ca:	6963      	ldr	r3, [r4, #20]
 800a2cc:	0559      	lsls	r1, r3, #21
 800a2ce:	f53f af77 	bmi.w	800a1c0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2d2:	f7ff fb49 	bl	8009968 <HAL_GetTick>
 800a2d6:	eba0 000b 	sub.w	r0, r0, fp
 800a2da:	4581      	cmp	r9, r0
 800a2dc:	d325      	bcc.n	800a32a <I2C_RequestMemoryWrite+0x1d2>
 800a2de:	f1b9 0f00 	cmp.w	r9, #0
 800a2e2:	d022      	beq.n	800a32a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2e4:	6834      	ldr	r4, [r6, #0]
 800a2e6:	e761      	b.n	800a1ac <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a2e8:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a2ea:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a2ec:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a2ee:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a2f2:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a2f6:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a2f8:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a2fc:	f043 0320 	orr.w	r3, r3, #32
 800a300:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a302:	2001      	movs	r0, #1
 800a304:	e792      	b.n	800a22c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a306:	6963      	ldr	r3, [r4, #20]
 800a308:	061b      	lsls	r3, r3, #24
 800a30a:	d4be      	bmi.n	800a28a <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a30c:	6963      	ldr	r3, [r4, #20]
 800a30e:	0558      	lsls	r0, r3, #21
 800a310:	f53f af56 	bmi.w	800a1c0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a314:	f7ff fb28 	bl	8009968 <HAL_GetTick>
 800a318:	eba0 000b 	sub.w	r0, r0, fp
 800a31c:	4581      	cmp	r9, r0
 800a31e:	d304      	bcc.n	800a32a <I2C_RequestMemoryWrite+0x1d2>
 800a320:	f1b9 0f00 	cmp.w	r9, #0
 800a324:	d001      	beq.n	800a32a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a326:	6834      	ldr	r4, [r6, #0]
 800a328:	e7bb      	b.n	800a2a2 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a32a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a32c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a32e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a330:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a334:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a338:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a33a:	4313      	orrs	r3, r2
 800a33c:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a33e:	e74d      	b.n	800a1dc <I2C_RequestMemoryWrite+0x84>

0800a340 <I2C_RequestMemoryRead>:
{
 800a340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a344:	6804      	ldr	r4, [r0, #0]
{
 800a346:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a348:	6823      	ldr	r3, [r4, #0]
 800a34a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a34e:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a350:	6823      	ldr	r3, [r4, #0]
{
 800a352:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a354:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a358:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a35c:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a360:	6023      	str	r3, [r4, #0]
{
 800a362:	4606      	mov	r6, r0
 800a364:	468b      	mov	fp, r1
 800a366:	4617      	mov	r7, r2
 800a368:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a36c:	d13a      	bne.n	800a3e4 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a36e:	6965      	ldr	r5, [r4, #20]
 800a370:	07eb      	lsls	r3, r5, #31
 800a372:	d5fc      	bpl.n	800a36e <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a374:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a378:	6123      	str	r3, [r4, #16]
 800a37a:	fa5f fb8b 	uxtb.w	fp, fp
 800a37e:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a382:	d003      	beq.n	800a38c <I2C_RequestMemoryRead+0x4c>
 800a384:	e069      	b.n	800a45a <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a386:	6965      	ldr	r5, [r4, #20]
 800a388:	056a      	lsls	r2, r5, #21
 800a38a:	d44e      	bmi.n	800a42a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a38c:	6965      	ldr	r5, [r4, #20]
 800a38e:	07a9      	lsls	r1, r5, #30
 800a390:	d5f9      	bpl.n	800a386 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a392:	2300      	movs	r3, #0
 800a394:	9301      	str	r3, [sp, #4]
 800a396:	6963      	ldr	r3, [r4, #20]
 800a398:	9301      	str	r3, [sp, #4]
 800a39a:	69a3      	ldr	r3, [r4, #24]
 800a39c:	9301      	str	r3, [sp, #4]
 800a39e:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3a0:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a3a4:	f040 80bd 	bne.w	800a522 <I2C_RequestMemoryRead+0x1e2>
 800a3a8:	6963      	ldr	r3, [r4, #20]
 800a3aa:	0618      	lsls	r0, r3, #24
 800a3ac:	d468      	bmi.n	800a480 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3ae:	6963      	ldr	r3, [r4, #20]
 800a3b0:	0559      	lsls	r1, r3, #21
 800a3b2:	d5f9      	bpl.n	800a3a8 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3b4:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3b6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3ba:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a3bc:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a3be:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a3c0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a3c4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a3c8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a3ca:	f043 0304 	orr.w	r3, r3, #4
 800a3ce:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3d0:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a3d2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3d4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a3d6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a3da:	d070      	beq.n	800a4be <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a3dc:	2001      	movs	r0, #1
}
 800a3de:	b003      	add	sp, #12
 800a3e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a3e4:	6963      	ldr	r3, [r4, #20]
 800a3e6:	07dd      	lsls	r5, r3, #31
 800a3e8:	d4c4      	bmi.n	800a374 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3ea:	f7ff fabd 	bl	8009968 <HAL_GetTick>
 800a3ee:	eba0 0009 	sub.w	r0, r0, r9
 800a3f2:	4582      	cmp	sl, r0
 800a3f4:	d304      	bcc.n	800a400 <I2C_RequestMemoryRead+0xc0>
 800a3f6:	f1ba 0f00 	cmp.w	sl, #0
 800a3fa:	d001      	beq.n	800a400 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a3fc:	6834      	ldr	r4, [r6, #0]
 800a3fe:	e7b3      	b.n	800a368 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a400:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a402:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a404:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a406:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a40a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a40e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a410:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a412:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a416:	f042 0220 	orr.w	r2, r2, #32
 800a41a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a41c:	680b      	ldr	r3, [r1, #0]
 800a41e:	05dc      	lsls	r4, r3, #23
 800a420:	d43d      	bmi.n	800a49e <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a422:	2003      	movs	r0, #3
}
 800a424:	b003      	add	sp, #12
 800a426:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a42a:	6823      	ldr	r3, [r4, #0]
 800a42c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a430:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a432:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a434:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a438:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a43a:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a43c:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a43e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a442:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a446:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a448:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a44c:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a450:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a452:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a454:	b003      	add	sp, #12
 800a456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a45a:	6963      	ldr	r3, [r4, #20]
 800a45c:	079b      	lsls	r3, r3, #30
 800a45e:	d498      	bmi.n	800a392 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a460:	6963      	ldr	r3, [r4, #20]
 800a462:	0558      	lsls	r0, r3, #21
 800a464:	d4e1      	bmi.n	800a42a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a466:	f7ff fa7f 	bl	8009968 <HAL_GetTick>
 800a46a:	eba0 0009 	sub.w	r0, r0, r9
 800a46e:	4582      	cmp	sl, r0
 800a470:	f0c0 808f 	bcc.w	800a592 <I2C_RequestMemoryRead+0x252>
 800a474:	f1ba 0f00 	cmp.w	sl, #0
 800a478:	f000 808b 	beq.w	800a592 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a47c:	6834      	ldr	r4, [r6, #0]
 800a47e:	e77e      	b.n	800a37e <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a480:	f1b8 0f01 	cmp.w	r8, #1
 800a484:	d10f      	bne.n	800a4a6 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a486:	b2ff      	uxtb	r7, r7
 800a488:	6127      	str	r7, [r4, #16]
 800a48a:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a48e:	d16e      	bne.n	800a56e <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a490:	6963      	ldr	r3, [r4, #20]
 800a492:	061b      	lsls	r3, r3, #24
 800a494:	d41a      	bmi.n	800a4cc <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a496:	6963      	ldr	r3, [r4, #20]
 800a498:	055f      	lsls	r7, r3, #21
 800a49a:	d5f9      	bpl.n	800a490 <I2C_RequestMemoryRead+0x150>
 800a49c:	e78a      	b.n	800a3b4 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a49e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a4a2:	6433      	str	r3, [r6, #64]	; 0x40
 800a4a4:	e7bd      	b.n	800a422 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a4a6:	0a3b      	lsrs	r3, r7, #8
 800a4a8:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4aa:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4ae:	d17e      	bne.n	800a5ae <I2C_RequestMemoryRead+0x26e>
 800a4b0:	6963      	ldr	r3, [r4, #20]
 800a4b2:	061d      	lsls	r5, r3, #24
 800a4b4:	d4e7      	bmi.n	800a486 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4b6:	6963      	ldr	r3, [r4, #20]
 800a4b8:	0558      	lsls	r0, r3, #21
 800a4ba:	d5f9      	bpl.n	800a4b0 <I2C_RequestMemoryRead+0x170>
 800a4bc:	e77a      	b.n	800a3b4 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4be:	6832      	ldr	r2, [r6, #0]
 800a4c0:	6813      	ldr	r3, [r2, #0]
 800a4c2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a4c6:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a4c8:	6013      	str	r3, [r2, #0]
 800a4ca:	e7ab      	b.n	800a424 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a4cc:	6823      	ldr	r3, [r4, #0]
 800a4ce:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a4d2:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a4d4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4d8:	d113      	bne.n	800a502 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a4da:	6963      	ldr	r3, [r4, #20]
 800a4dc:	07d8      	lsls	r0, r3, #31
 800a4de:	d5fc      	bpl.n	800a4da <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a4e0:	f04b 0301 	orr.w	r3, fp, #1
 800a4e4:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a4e6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a4ea:	d003      	beq.n	800a4f4 <I2C_RequestMemoryRead+0x1b4>
 800a4ec:	e02b      	b.n	800a546 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4ee:	6963      	ldr	r3, [r4, #20]
 800a4f0:	055b      	lsls	r3, r3, #21
 800a4f2:	d49a      	bmi.n	800a42a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a4f4:	6963      	ldr	r3, [r4, #20]
 800a4f6:	43db      	mvns	r3, r3
 800a4f8:	f013 0302 	ands.w	r3, r3, #2
 800a4fc:	d1f7      	bne.n	800a4ee <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a4fe:	4618      	mov	r0, r3
 800a500:	e790      	b.n	800a424 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a502:	6963      	ldr	r3, [r4, #20]
 800a504:	07d9      	lsls	r1, r3, #31
 800a506:	d4eb      	bmi.n	800a4e0 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a508:	f7ff fa2e 	bl	8009968 <HAL_GetTick>
 800a50c:	eba0 0009 	sub.w	r0, r0, r9
 800a510:	4582      	cmp	sl, r0
 800a512:	f4ff af75 	bcc.w	800a400 <I2C_RequestMemoryRead+0xc0>
 800a516:	f1ba 0f00 	cmp.w	sl, #0
 800a51a:	f43f af71 	beq.w	800a400 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a51e:	6834      	ldr	r4, [r6, #0]
 800a520:	e7d8      	b.n	800a4d4 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a522:	6963      	ldr	r3, [r4, #20]
 800a524:	061a      	lsls	r2, r3, #24
 800a526:	d4ab      	bmi.n	800a480 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a528:	6963      	ldr	r3, [r4, #20]
 800a52a:	055d      	lsls	r5, r3, #21
 800a52c:	f53f af42 	bmi.w	800a3b4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a530:	f7ff fa1a 	bl	8009968 <HAL_GetTick>
 800a534:	eba0 0009 	sub.w	r0, r0, r9
 800a538:	4582      	cmp	sl, r0
 800a53a:	d34b      	bcc.n	800a5d4 <I2C_RequestMemoryRead+0x294>
 800a53c:	f1ba 0f00 	cmp.w	sl, #0
 800a540:	d048      	beq.n	800a5d4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a542:	6834      	ldr	r4, [r6, #0]
 800a544:	e72c      	b.n	800a3a0 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a546:	6963      	ldr	r3, [r4, #20]
 800a548:	43db      	mvns	r3, r3
 800a54a:	f013 0302 	ands.w	r3, r3, #2
 800a54e:	d0d6      	beq.n	800a4fe <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a550:	6963      	ldr	r3, [r4, #20]
 800a552:	055a      	lsls	r2, r3, #21
 800a554:	f53f af69 	bmi.w	800a42a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a558:	f7ff fa06 	bl	8009968 <HAL_GetTick>
 800a55c:	eba0 0009 	sub.w	r0, r0, r9
 800a560:	4582      	cmp	sl, r0
 800a562:	d316      	bcc.n	800a592 <I2C_RequestMemoryRead+0x252>
 800a564:	f1ba 0f00 	cmp.w	sl, #0
 800a568:	d013      	beq.n	800a592 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a56a:	6834      	ldr	r4, [r6, #0]
 800a56c:	e7bb      	b.n	800a4e6 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a56e:	6963      	ldr	r3, [r4, #20]
 800a570:	061d      	lsls	r5, r3, #24
 800a572:	d4ab      	bmi.n	800a4cc <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a574:	6963      	ldr	r3, [r4, #20]
 800a576:	055a      	lsls	r2, r3, #21
 800a578:	f53f af1c 	bmi.w	800a3b4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a57c:	f7ff f9f4 	bl	8009968 <HAL_GetTick>
 800a580:	eba0 0009 	sub.w	r0, r0, r9
 800a584:	4582      	cmp	sl, r0
 800a586:	d325      	bcc.n	800a5d4 <I2C_RequestMemoryRead+0x294>
 800a588:	f1ba 0f00 	cmp.w	sl, #0
 800a58c:	d022      	beq.n	800a5d4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a58e:	6834      	ldr	r4, [r6, #0]
 800a590:	e77b      	b.n	800a48a <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a592:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a594:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a596:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a598:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a59c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a5a0:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a5a2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a5a6:	f043 0320 	orr.w	r3, r3, #32
 800a5aa:	6433      	str	r3, [r6, #64]	; 0x40
 800a5ac:	e716      	b.n	800a3dc <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5ae:	6963      	ldr	r3, [r4, #20]
 800a5b0:	0619      	lsls	r1, r3, #24
 800a5b2:	f53f af68 	bmi.w	800a486 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a5b6:	6963      	ldr	r3, [r4, #20]
 800a5b8:	055b      	lsls	r3, r3, #21
 800a5ba:	f53f aefb 	bmi.w	800a3b4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a5be:	f7ff f9d3 	bl	8009968 <HAL_GetTick>
 800a5c2:	eba0 0009 	sub.w	r0, r0, r9
 800a5c6:	4582      	cmp	sl, r0
 800a5c8:	d304      	bcc.n	800a5d4 <I2C_RequestMemoryRead+0x294>
 800a5ca:	f1ba 0f00 	cmp.w	sl, #0
 800a5ce:	d001      	beq.n	800a5d4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a5d0:	6834      	ldr	r4, [r6, #0]
 800a5d2:	e76a      	b.n	800a4aa <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5d4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5d6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a5d8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a5da:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a5de:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a5e2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a5e4:	4313      	orrs	r3, r2
 800a5e6:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a5e8:	e6f2      	b.n	800a3d0 <I2C_RequestMemoryRead+0x90>
 800a5ea:	bf00      	nop

0800a5ec <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a5ec:	2800      	cmp	r0, #0
 800a5ee:	f000 80b9 	beq.w	800a764 <HAL_I2C_Init+0x178>
{
 800a5f2:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a5f4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a5f8:	4604      	mov	r4, r0
 800a5fa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a5fe:	2b00      	cmp	r3, #0
 800a600:	f000 8098 	beq.w	800a734 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a604:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a606:	2224      	movs	r2, #36	; 0x24
 800a608:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a60c:	681a      	ldr	r2, [r3, #0]
 800a60e:	f022 0201 	bic.w	r2, r2, #1
 800a612:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a614:	681a      	ldr	r2, [r3, #0]
 800a616:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a61a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a61c:	681a      	ldr	r2, [r3, #0]
 800a61e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a622:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a624:	f001 fe70 	bl	800c308 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a628:	6865      	ldr	r5, [r4, #4]
 800a62a:	4b4f      	ldr	r3, [pc, #316]	; (800a768 <HAL_I2C_Init+0x17c>)
 800a62c:	429d      	cmp	r5, r3
 800a62e:	d84f      	bhi.n	800a6d0 <HAL_I2C_Init+0xe4>
 800a630:	4b4e      	ldr	r3, [pc, #312]	; (800a76c <HAL_I2C_Init+0x180>)
 800a632:	4298      	cmp	r0, r3
 800a634:	d97c      	bls.n	800a730 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a636:	4b4e      	ldr	r3, [pc, #312]	; (800a770 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a638:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a63a:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a63e:	1e43      	subs	r3, r0, #1
 800a640:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a644:	6822      	ldr	r2, [r4, #0]
 800a646:	6851      	ldr	r1, [r2, #4]
 800a648:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a64c:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a650:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a652:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a654:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a658:	f10c 0c01 	add.w	ip, ip, #1
 800a65c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a660:	ea41 010c 	orr.w	r1, r1, ip
 800a664:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a666:	69d1      	ldr	r1, [r2, #28]
 800a668:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a66c:	3301      	adds	r3, #1
 800a66e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a672:	4203      	tst	r3, r0
 800a674:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a678:	d161      	bne.n	800a73e <HAL_I2C_Init+0x152>
 800a67a:	2304      	movs	r3, #4
 800a67c:	430b      	orrs	r3, r1
 800a67e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a680:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a684:	6811      	ldr	r1, [r2, #0]
 800a686:	4303      	orrs	r3, r0
 800a688:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a68c:	430b      	orrs	r3, r1
 800a68e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a690:	6891      	ldr	r1, [r2, #8]
 800a692:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a696:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a69a:	4303      	orrs	r3, r0
 800a69c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a6a0:	430b      	orrs	r3, r1
 800a6a2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a6a4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a6a8:	68d1      	ldr	r1, [r2, #12]
 800a6aa:	4303      	orrs	r3, r0
 800a6ac:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a6b0:	430b      	orrs	r3, r1
 800a6b2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a6b4:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a6b6:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a6b8:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a6bc:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a6be:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a6c0:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a6c2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a6c6:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a6c8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a6cc:	4618      	mov	r0, r3
}
 800a6ce:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a6d0:	4b28      	ldr	r3, [pc, #160]	; (800a774 <HAL_I2C_Init+0x188>)
 800a6d2:	4298      	cmp	r0, r3
 800a6d4:	d92c      	bls.n	800a730 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6d6:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a6d8:	4b25      	ldr	r3, [pc, #148]	; (800a770 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6da:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a6dc:	4e26      	ldr	r6, [pc, #152]	; (800a778 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a6de:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a6e2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a6e6:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a6ea:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a6ec:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a6f0:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a6f4:	fb01 f303 	mul.w	r3, r1, r3
 800a6f8:	fba6 6303 	umull	r6, r3, r6, r3
 800a6fc:	6a11      	ldr	r1, [r2, #32]
 800a6fe:	099b      	lsrs	r3, r3, #6
 800a700:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a704:	3301      	adds	r3, #1
 800a706:	430b      	orrs	r3, r1
 800a708:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a70a:	69d1      	ldr	r1, [r2, #28]
 800a70c:	68a3      	ldr	r3, [r4, #8]
 800a70e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a712:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a716:	b9ab      	cbnz	r3, 800a744 <HAL_I2C_Init+0x158>
 800a718:	1e43      	subs	r3, r0, #1
 800a71a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a71e:	fbb3 f3f5 	udiv	r3, r3, r5
 800a722:	3301      	adds	r3, #1
 800a724:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a728:	b1d3      	cbz	r3, 800a760 <HAL_I2C_Init+0x174>
 800a72a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a72e:	e7a5      	b.n	800a67c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a730:	2001      	movs	r0, #1
}
 800a732:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a734:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a738:	f7f6 ff6c 	bl	8001614 <HAL_I2C_MspInit>
 800a73c:	e762      	b.n	800a604 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a73e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a742:	e79b      	b.n	800a67c <HAL_I2C_Init+0x90>
 800a744:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a748:	1e43      	subs	r3, r0, #1
 800a74a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a74e:	fbb3 f3f5 	udiv	r3, r3, r5
 800a752:	3301      	adds	r3, #1
 800a754:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a758:	b113      	cbz	r3, 800a760 <HAL_I2C_Init+0x174>
 800a75a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a75e:	e78d      	b.n	800a67c <HAL_I2C_Init+0x90>
 800a760:	2301      	movs	r3, #1
 800a762:	e78b      	b.n	800a67c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a764:	2001      	movs	r0, #1
}
 800a766:	4770      	bx	lr
 800a768:	000186a0 	.word	0x000186a0
 800a76c:	001e847f 	.word	0x001e847f
 800a770:	431bde83 	.word	0x431bde83
 800a774:	003d08ff 	.word	0x003d08ff
 800a778:	10624dd3 	.word	0x10624dd3

0800a77c <HAL_I2C_Mem_Write>:
{
 800a77c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a780:	4604      	mov	r4, r0
 800a782:	b083      	sub	sp, #12
 800a784:	4699      	mov	r9, r3
 800a786:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a78a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a78c:	460f      	mov	r7, r1
 800a78e:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a790:	f7ff f8ea 	bl	8009968 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a794:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a798:	2b20      	cmp	r3, #32
 800a79a:	d004      	beq.n	800a7a6 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a79c:	2702      	movs	r7, #2
}
 800a79e:	4638      	mov	r0, r7
 800a7a0:	b003      	add	sp, #12
 800a7a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a7a6:	4605      	mov	r5, r0
 800a7a8:	e005      	b.n	800a7b6 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a7aa:	f7ff f8dd 	bl	8009968 <HAL_GetTick>
 800a7ae:	1b40      	subs	r0, r0, r5
 800a7b0:	2819      	cmp	r0, #25
 800a7b2:	f200 80a8 	bhi.w	800a906 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a7b6:	6820      	ldr	r0, [r4, #0]
 800a7b8:	6983      	ldr	r3, [r0, #24]
 800a7ba:	ea6f 0c03 	mvn.w	ip, r3
 800a7be:	f01c 0b02 	ands.w	fp, ip, #2
 800a7c2:	d0f2      	beq.n	800a7aa <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a7c4:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a7c8:	2b01      	cmp	r3, #1
 800a7ca:	d0e7      	beq.n	800a79c <HAL_I2C_Mem_Write+0x20>
 800a7cc:	2301      	movs	r3, #1
 800a7ce:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a7d2:	6803      	ldr	r3, [r0, #0]
 800a7d4:	07db      	lsls	r3, r3, #31
 800a7d6:	d572      	bpl.n	800a8be <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a7d8:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a7da:	6807      	ldr	r7, [r0, #0]
 800a7dc:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a7e0:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a7e2:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a7e4:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a7e6:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a7e8:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a7ec:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a7f0:	2040      	movs	r0, #64	; 0x40
 800a7f2:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a7f6:	2000      	movs	r0, #0
 800a7f8:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a7fa:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a7fe:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a800:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a802:	4856      	ldr	r0, [pc, #344]	; (800a95c <HAL_I2C_Mem_Write+0x1e0>)
 800a804:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a806:	464b      	mov	r3, r9
 800a808:	4642      	mov	r2, r8
 800a80a:	4620      	mov	r0, r4
 800a80c:	f7ff fca4 	bl	800a158 <I2C_RequestMemoryWrite>
 800a810:	4607      	mov	r7, r0
 800a812:	bb00      	cbnz	r0, 800a856 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a814:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a816:	2b00      	cmp	r3, #0
 800a818:	f000 809e 	beq.w	800a958 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a81c:	6823      	ldr	r3, [r4, #0]
 800a81e:	1c72      	adds	r2, r6, #1
 800a820:	d159      	bne.n	800a8d6 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a822:	695a      	ldr	r2, [r3, #20]
 800a824:	0610      	lsls	r0, r2, #24
 800a826:	d41b      	bmi.n	800a860 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a828:	695a      	ldr	r2, [r3, #20]
 800a82a:	0551      	lsls	r1, r2, #21
 800a82c:	d5f9      	bpl.n	800a822 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a82e:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a830:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a834:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a836:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a838:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a83a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a83e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a842:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a844:	f043 0304 	orr.w	r3, r3, #4
 800a848:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a84a:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a84c:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a84e:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a850:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a854:	d038      	beq.n	800a8c8 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a856:	2701      	movs	r7, #1
}
 800a858:	4638      	mov	r0, r7
 800a85a:	b003      	add	sp, #12
 800a85c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a860:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a864:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a868:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a86a:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a86e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a872:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a874:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a876:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a878:	3a01      	subs	r2, #1
 800a87a:	b292      	uxth	r2, r2
 800a87c:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a87e:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a880:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a882:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a884:	0740      	lsls	r0, r0, #29
 800a886:	d517      	bpl.n	800a8b8 <HAL_I2C_Mem_Write+0x13c>
 800a888:	b942      	cbnz	r2, 800a89c <HAL_I2C_Mem_Write+0x120>
 800a88a:	1c72      	adds	r2, r6, #1
 800a88c:	d156      	bne.n	800a93c <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a88e:	695a      	ldr	r2, [r3, #20]
 800a890:	0750      	lsls	r0, r2, #29
 800a892:	d446      	bmi.n	800a922 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a894:	695a      	ldr	r2, [r3, #20]
 800a896:	0551      	lsls	r1, r2, #21
 800a898:	d5f9      	bpl.n	800a88e <HAL_I2C_Mem_Write+0x112>
 800a89a:	e7c8      	b.n	800a82e <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a89c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a8a0:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a8a2:	f10c 0102 	add.w	r1, ip, #2
 800a8a6:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a8a8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a8aa:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a8ae:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a8b0:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a8b2:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a8b4:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a8b6:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a8b8:	2a00      	cmp	r2, #0
 800a8ba:	d1b0      	bne.n	800a81e <HAL_I2C_Mem_Write+0xa2>
 800a8bc:	e7e5      	b.n	800a88a <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a8be:	6803      	ldr	r3, [r0, #0]
 800a8c0:	f043 0301 	orr.w	r3, r3, #1
 800a8c4:	6003      	str	r3, [r0, #0]
 800a8c6:	e787      	b.n	800a7d8 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8c8:	6822      	ldr	r2, [r4, #0]
 800a8ca:	6813      	ldr	r3, [r2, #0]
 800a8cc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a8d0:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a8d2:	6013      	str	r3, [r2, #0]
 800a8d4:	e763      	b.n	800a79e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a8d6:	695a      	ldr	r2, [r3, #20]
 800a8d8:	0612      	lsls	r2, r2, #24
 800a8da:	d4c1      	bmi.n	800a860 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a8dc:	695a      	ldr	r2, [r3, #20]
 800a8de:	0551      	lsls	r1, r2, #21
 800a8e0:	d4a5      	bmi.n	800a82e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8e2:	f7ff f841 	bl	8009968 <HAL_GetTick>
 800a8e6:	1b40      	subs	r0, r0, r5
 800a8e8:	4286      	cmp	r6, r0
 800a8ea:	d301      	bcc.n	800a8f0 <HAL_I2C_Mem_Write+0x174>
 800a8ec:	2e00      	cmp	r6, #0
 800a8ee:	d195      	bne.n	800a81c <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a8f0:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a8f2:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a8f4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a8f6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a8fa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a8fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a900:	4313      	orrs	r3, r2
 800a902:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a904:	e7a1      	b.n	800a84a <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a906:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a908:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a90c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a910:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a914:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a916:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a91a:	f043 0320 	orr.w	r3, r3, #32
 800a91e:	6423      	str	r3, [r4, #64]	; 0x40
 800a920:	e73c      	b.n	800a79c <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a922:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a924:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a926:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a92a:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a92c:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a92e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a932:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a936:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a93a:	e730      	b.n	800a79e <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a93c:	695a      	ldr	r2, [r3, #20]
 800a93e:	0752      	lsls	r2, r2, #29
 800a940:	d4ef      	bmi.n	800a922 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a942:	695a      	ldr	r2, [r3, #20]
 800a944:	0551      	lsls	r1, r2, #21
 800a946:	f53f af72 	bmi.w	800a82e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a94a:	f7ff f80d 	bl	8009968 <HAL_GetTick>
 800a94e:	1b40      	subs	r0, r0, r5
 800a950:	4286      	cmp	r6, r0
 800a952:	d3cd      	bcc.n	800a8f0 <HAL_I2C_Mem_Write+0x174>
 800a954:	2e00      	cmp	r6, #0
 800a956:	d0cb      	beq.n	800a8f0 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a958:	6823      	ldr	r3, [r4, #0]
 800a95a:	e796      	b.n	800a88a <HAL_I2C_Mem_Write+0x10e>
 800a95c:	ffff0000 	.word	0xffff0000

0800a960 <HAL_I2C_Mem_Read>:
{
 800a960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a964:	4604      	mov	r4, r0
 800a966:	b087      	sub	sp, #28
 800a968:	4699      	mov	r9, r3
 800a96a:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a96e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a970:	460f      	mov	r7, r1
 800a972:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a974:	f7fe fff8 	bl	8009968 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a978:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a97c:	2b20      	cmp	r3, #32
 800a97e:	d004      	beq.n	800a98a <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a980:	2702      	movs	r7, #2
}
 800a982:	4638      	mov	r0, r7
 800a984:	b007      	add	sp, #28
 800a986:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a98a:	4606      	mov	r6, r0
 800a98c:	e005      	b.n	800a99a <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a98e:	f7fe ffeb 	bl	8009968 <HAL_GetTick>
 800a992:	1b80      	subs	r0, r0, r6
 800a994:	2819      	cmp	r0, #25
 800a996:	f200 80d2 	bhi.w	800ab3e <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a99a:	f8d4 c000 	ldr.w	ip, [r4]
 800a99e:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a9a2:	43c0      	mvns	r0, r0
 800a9a4:	f010 0b02 	ands.w	fp, r0, #2
 800a9a8:	d0f1      	beq.n	800a98e <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a9aa:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a9ae:	2b01      	cmp	r3, #1
 800a9b0:	d0e6      	beq.n	800a980 <HAL_I2C_Mem_Read+0x20>
 800a9b2:	2301      	movs	r3, #1
 800a9b4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a9b8:	f8dc 3000 	ldr.w	r3, [ip]
 800a9bc:	07d9      	lsls	r1, r3, #31
 800a9be:	d537      	bpl.n	800aa30 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a9c0:	f8dc 0000 	ldr.w	r0, [ip]
 800a9c4:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a9c8:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a9cc:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a9ce:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a9d0:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a9d2:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a9d6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a9da:	2040      	movs	r0, #64	; 0x40
 800a9dc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a9e0:	2000      	movs	r0, #0
 800a9e2:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a9e4:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a9e8:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a9ea:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a9ec:	4893      	ldr	r0, [pc, #588]	; (800ac3c <HAL_I2C_Mem_Read+0x2dc>)
 800a9ee:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a9f0:	4639      	mov	r1, r7
 800a9f2:	464b      	mov	r3, r9
 800a9f4:	4642      	mov	r2, r8
 800a9f6:	4620      	mov	r0, r4
 800a9f8:	f7ff fca2 	bl	800a340 <I2C_RequestMemoryRead>
 800a9fc:	4607      	mov	r7, r0
 800a9fe:	2800      	cmp	r0, #0
 800aa00:	f040 80ab 	bne.w	800ab5a <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800aa04:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800aa06:	b9d2      	cbnz	r2, 800aa3e <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa08:	6823      	ldr	r3, [r4, #0]
 800aa0a:	9002      	str	r0, [sp, #8]
 800aa0c:	695a      	ldr	r2, [r3, #20]
 800aa0e:	9202      	str	r2, [sp, #8]
 800aa10:	699a      	ldr	r2, [r3, #24]
 800aa12:	9202      	str	r2, [sp, #8]
 800aa14:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aa16:	681a      	ldr	r2, [r3, #0]
 800aa18:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aa1c:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa1e:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800aa20:	2220      	movs	r2, #32
 800aa22:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800aa26:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa2a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800aa2e:	e7a8      	b.n	800a982 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800aa30:	f8dc 3000 	ldr.w	r3, [ip]
 800aa34:	f043 0301 	orr.w	r3, r3, #1
 800aa38:	f8cc 3000 	str.w	r3, [ip]
 800aa3c:	e7c0      	b.n	800a9c0 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800aa3e:	2a01      	cmp	r2, #1
 800aa40:	f000 812c 	beq.w	800ac9c <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800aa44:	2a02      	cmp	r2, #2
 800aa46:	f000 80bd 	beq.w	800abc4 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa4a:	6823      	ldr	r3, [r4, #0]
 800aa4c:	9005      	str	r0, [sp, #20]
 800aa4e:	6959      	ldr	r1, [r3, #20]
 800aa50:	9105      	str	r1, [sp, #20]
 800aa52:	6999      	ldr	r1, [r3, #24]
 800aa54:	9105      	str	r1, [sp, #20]
 800aa56:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800aa58:	2a03      	cmp	r2, #3
 800aa5a:	d849      	bhi.n	800aaf0 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800aa5c:	2a01      	cmp	r2, #1
 800aa5e:	f000 80eb 	beq.w	800ac38 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800aa62:	2a02      	cmp	r2, #2
 800aa64:	f000 8089 	beq.w	800ab7a <HAL_I2C_Mem_Read+0x21a>
 800aa68:	1c69      	adds	r1, r5, #1
 800aa6a:	f040 80bb 	bne.w	800abe4 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aa6e:	695a      	ldr	r2, [r3, #20]
 800aa70:	0752      	lsls	r2, r2, #29
 800aa72:	d5fc      	bpl.n	800aa6e <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa74:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa76:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa78:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa7c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa7e:	691b      	ldr	r3, [r3, #16]
 800aa80:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aa82:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aa84:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aa86:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aa88:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aa8a:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aa8c:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aa8e:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aa90:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aa92:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aa94:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800aa96:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aa98:	6822      	ldr	r2, [r4, #0]
 800aa9a:	f040 80af 	bne.w	800abfc <HAL_I2C_Mem_Read+0x29c>
 800aa9e:	6953      	ldr	r3, [r2, #20]
 800aaa0:	075b      	lsls	r3, r3, #29
 800aaa2:	d5fc      	bpl.n	800aa9e <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aaa4:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aaa6:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aaa8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800aaac:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aaae:	6913      	ldr	r3, [r2, #16]
 800aab0:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800aab2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800aab4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aab6:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aab8:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800aaba:	3b01      	subs	r3, #1
 800aabc:	b29b      	uxth	r3, r3
 800aabe:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aac0:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800aac2:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800aac4:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800aac8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aaca:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aace:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800aad0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aad2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aad4:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aad6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aad8:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aada:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aadc:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800aade:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aae0:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aae2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aae4:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800aae6:	2a00      	cmp	r2, #0
 800aae8:	d099      	beq.n	800aa1e <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800aaea:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aaec:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800aaee:	d9b5      	bls.n	800aa5c <HAL_I2C_Mem_Read+0xfc>
 800aaf0:	b95d      	cbnz	r5, 800ab0a <HAL_I2C_Mem_Read+0x1aa>
 800aaf2:	e0c5      	b.n	800ac80 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800aaf4:	695a      	ldr	r2, [r3, #20]
 800aaf6:	06d0      	lsls	r0, r2, #27
 800aaf8:	f100 80b2 	bmi.w	800ac60 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aafc:	f7fe ff34 	bl	8009968 <HAL_GetTick>
 800ab00:	1b80      	subs	r0, r0, r6
 800ab02:	4285      	cmp	r5, r0
 800ab04:	f0c0 8086 	bcc.w	800ac14 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ab08:	6823      	ldr	r3, [r4, #0]
 800ab0a:	695a      	ldr	r2, [r3, #20]
 800ab0c:	0652      	lsls	r2, r2, #25
 800ab0e:	d5f1      	bpl.n	800aaf4 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab10:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ab12:	691b      	ldr	r3, [r3, #16]
 800ab14:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800ab16:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab18:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800ab1a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ab1c:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ab1e:	3b01      	subs	r3, #1
 800ab20:	b29b      	uxth	r3, r3
 800ab22:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab24:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800ab26:	3a01      	subs	r2, #1
 800ab28:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800ab2a:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab2e:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800ab30:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800ab32:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800ab36:	d5d6      	bpl.n	800aae6 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab38:	6903      	ldr	r3, [r0, #16]
 800ab3a:	704b      	strb	r3, [r1, #1]
 800ab3c:	e036      	b.n	800abac <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab3e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab40:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab44:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ab48:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab4c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ab4e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab52:	f043 0320 	orr.w	r3, r3, #32
 800ab56:	6423      	str	r3, [r4, #64]	; 0x40
 800ab58:	e712      	b.n	800a980 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800ab5a:	2701      	movs	r7, #1
}
 800ab5c:	4638      	mov	r0, r7
 800ab5e:	b007      	add	sp, #28
 800ab60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab64:	695a      	ldr	r2, [r3, #20]
 800ab66:	0750      	lsls	r0, r2, #29
 800ab68:	d40c      	bmi.n	800ab84 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab6a:	f7fe fefd 	bl	8009968 <HAL_GetTick>
 800ab6e:	1b80      	subs	r0, r0, r6
 800ab70:	4285      	cmp	r5, r0
 800ab72:	d34f      	bcc.n	800ac14 <HAL_I2C_Mem_Read+0x2b4>
 800ab74:	2d00      	cmp	r5, #0
 800ab76:	d04d      	beq.n	800ac14 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab78:	6823      	ldr	r3, [r4, #0]
 800ab7a:	1c69      	adds	r1, r5, #1
 800ab7c:	d1f2      	bne.n	800ab64 <HAL_I2C_Mem_Read+0x204>
 800ab7e:	695a      	ldr	r2, [r3, #20]
 800ab80:	0752      	lsls	r2, r2, #29
 800ab82:	d5fc      	bpl.n	800ab7e <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab84:	681a      	ldr	r2, [r3, #0]
 800ab86:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab8a:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab8c:	691a      	ldr	r2, [r3, #16]
 800ab8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ab90:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800ab92:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800ab94:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800ab96:	3b01      	subs	r3, #1
 800ab98:	b29b      	uxth	r3, r3
 800ab9a:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800ab9c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800ab9e:	3b01      	subs	r3, #1
 800aba0:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aba2:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800aba4:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aba6:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800aba8:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800abaa:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800abac:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800abae:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800abb0:	3301      	adds	r3, #1
 800abb2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800abb4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800abb6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800abb8:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800abba:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800abbc:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800abbe:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800abc0:	8563      	strh	r3, [r4, #42]	; 0x2a
 800abc2:	e790      	b.n	800aae6 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abc4:	6823      	ldr	r3, [r4, #0]
 800abc6:	6819      	ldr	r1, [r3, #0]
 800abc8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800abcc:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800abce:	6819      	ldr	r1, [r3, #0]
 800abd0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800abd4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abd6:	9004      	str	r0, [sp, #16]
 800abd8:	6959      	ldr	r1, [r3, #20]
 800abda:	9104      	str	r1, [sp, #16]
 800abdc:	6999      	ldr	r1, [r3, #24]
 800abde:	9104      	str	r1, [sp, #16]
 800abe0:	9904      	ldr	r1, [sp, #16]
 800abe2:	e739      	b.n	800aa58 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800abe4:	695a      	ldr	r2, [r3, #20]
 800abe6:	0750      	lsls	r0, r2, #29
 800abe8:	f53f af44 	bmi.w	800aa74 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800abec:	f7fe febc 	bl	8009968 <HAL_GetTick>
 800abf0:	1b80      	subs	r0, r0, r6
 800abf2:	4285      	cmp	r5, r0
 800abf4:	d30e      	bcc.n	800ac14 <HAL_I2C_Mem_Read+0x2b4>
 800abf6:	b16d      	cbz	r5, 800ac14 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800abf8:	6823      	ldr	r3, [r4, #0]
 800abfa:	e735      	b.n	800aa68 <HAL_I2C_Mem_Read+0x108>
 800abfc:	6953      	ldr	r3, [r2, #20]
 800abfe:	0758      	lsls	r0, r3, #29
 800ac00:	f53f af50 	bmi.w	800aaa4 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac04:	f7fe feb0 	bl	8009968 <HAL_GetTick>
 800ac08:	1b80      	subs	r0, r0, r6
 800ac0a:	4285      	cmp	r5, r0
 800ac0c:	d302      	bcc.n	800ac14 <HAL_I2C_Mem_Read+0x2b4>
 800ac0e:	2d00      	cmp	r5, #0
 800ac10:	f47f af41 	bne.w	800aa96 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac14:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac16:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac18:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac1a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ac1e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac22:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ac24:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ac28:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac2a:	f043 0320 	orr.w	r3, r3, #32
}
 800ac2e:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac30:	6423      	str	r3, [r4, #64]	; 0x40
}
 800ac32:	b007      	add	sp, #28
 800ac34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac38:	b95d      	cbnz	r5, 800ac52 <HAL_I2C_Mem_Read+0x2f2>
 800ac3a:	e02b      	b.n	800ac94 <HAL_I2C_Mem_Read+0x334>
 800ac3c:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ac40:	695a      	ldr	r2, [r3, #20]
 800ac42:	06d2      	lsls	r2, r2, #27
 800ac44:	d40c      	bmi.n	800ac60 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac46:	f7fe fe8f 	bl	8009968 <HAL_GetTick>
 800ac4a:	1b80      	subs	r0, r0, r6
 800ac4c:	4285      	cmp	r5, r0
 800ac4e:	d3e1      	bcc.n	800ac14 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac50:	6823      	ldr	r3, [r4, #0]
 800ac52:	695a      	ldr	r2, [r3, #20]
 800ac54:	0651      	lsls	r1, r2, #25
 800ac56:	d5f3      	bpl.n	800ac40 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac58:	691a      	ldr	r2, [r3, #16]
 800ac5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ac5c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ac5e:	e7a5      	b.n	800abac <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac60:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac62:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac66:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ac68:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ac6a:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ac6c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ac70:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800ac74:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ac76:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800ac78:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ac7c:	2701      	movs	r7, #1
 800ac7e:	e680      	b.n	800a982 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac80:	695a      	ldr	r2, [r3, #20]
 800ac82:	0652      	lsls	r2, r2, #25
 800ac84:	f53f af44 	bmi.w	800ab10 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ac88:	695a      	ldr	r2, [r3, #20]
 800ac8a:	06d1      	lsls	r1, r2, #27
 800ac8c:	d4e8      	bmi.n	800ac60 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac8e:	f7fe fe6b 	bl	8009968 <HAL_GetTick>
 800ac92:	e7bf      	b.n	800ac14 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ac94:	695a      	ldr	r2, [r3, #20]
 800ac96:	0650      	lsls	r0, r2, #25
 800ac98:	d5f6      	bpl.n	800ac88 <HAL_I2C_Mem_Read+0x328>
 800ac9a:	e7dd      	b.n	800ac58 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac9c:	6823      	ldr	r3, [r4, #0]
 800ac9e:	6819      	ldr	r1, [r3, #0]
 800aca0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800aca4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aca6:	9003      	str	r0, [sp, #12]
 800aca8:	6959      	ldr	r1, [r3, #20]
 800acaa:	9103      	str	r1, [sp, #12]
 800acac:	6999      	ldr	r1, [r3, #24]
 800acae:	9103      	str	r1, [sp, #12]
 800acb0:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800acb2:	6819      	ldr	r1, [r3, #0]
 800acb4:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800acb8:	6019      	str	r1, [r3, #0]
 800acba:	e6cd      	b.n	800aa58 <HAL_I2C_Mem_Read+0xf8>

0800acbc <HAL_I2C_MasterTxCpltCallback>:
 800acbc:	4770      	bx	lr
 800acbe:	bf00      	nop

0800acc0 <HAL_I2C_MasterRxCpltCallback>:
 800acc0:	4770      	bx	lr
 800acc2:	bf00      	nop

0800acc4 <HAL_I2C_SlaveTxCpltCallback>:
 800acc4:	4770      	bx	lr
 800acc6:	bf00      	nop

0800acc8 <HAL_I2C_SlaveRxCpltCallback>:
 800acc8:	4770      	bx	lr
 800acca:	bf00      	nop

0800accc <HAL_I2C_AddrCallback>:
}
 800accc:	4770      	bx	lr
 800acce:	bf00      	nop

0800acd0 <HAL_I2C_ListenCpltCallback>:
 800acd0:	4770      	bx	lr
 800acd2:	bf00      	nop

0800acd4 <HAL_I2C_MemTxCpltCallback>:
 800acd4:	4770      	bx	lr
 800acd6:	bf00      	nop

0800acd8 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800acd8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800acdc:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800acde:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800ace0:	b959      	cbnz	r1, 800acfa <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800ace2:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ace4:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800ace6:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ace8:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800acea:	d00d      	beq.n	800ad08 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800acec:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800acf0:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800acf2:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800acf4:	3201      	adds	r2, #1
 800acf6:	6502      	str	r2, [r0, #80]	; 0x50
 800acf8:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800acfa:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800acfc:	2901      	cmp	r1, #1
 800acfe:	d009      	beq.n	800ad14 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800ad00:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ad02:	2902      	cmp	r1, #2
 800ad04:	d00e      	beq.n	800ad24 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800ad06:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ad08:	b2d2      	uxtb	r2, r2
 800ad0a:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800ad0c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad0e:	3202      	adds	r2, #2
 800ad10:	6502      	str	r2, [r0, #80]	; 0x50
 800ad12:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ad14:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800ad16:	6801      	ldr	r1, [r0, #0]
 800ad18:	b2d2      	uxtb	r2, r2
 800ad1a:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800ad1c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad1e:	3201      	adds	r2, #1
 800ad20:	6502      	str	r2, [r0, #80]	; 0x50
 800ad22:	4770      	bx	lr
 800ad24:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800ad26:	2a22      	cmp	r2, #34	; 0x22
 800ad28:	d01f      	beq.n	800ad6a <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad2a:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ad2c:	b289      	uxth	r1, r1
 800ad2e:	b9c1      	cbnz	r1, 800ad62 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad30:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ad32:	b289      	uxth	r1, r1
 800ad34:	2900      	cmp	r1, #0
 800ad36:	d1e6      	bne.n	800ad06 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800ad38:	2a21      	cmp	r2, #33	; 0x21
 800ad3a:	d1e4      	bne.n	800ad06 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad3c:	6802      	ldr	r2, [r0, #0]
{
 800ad3e:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ad40:	6854      	ldr	r4, [r2, #4]
 800ad42:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800ad46:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad48:	6814      	ldr	r4, [r2, #0]
 800ad4a:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800ad4e:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800ad50:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad52:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800ad54:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad58:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800ad5c:	f7ff ffba 	bl	800acd4 <HAL_I2C_MemTxCpltCallback>
}
 800ad60:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad62:	2a21      	cmp	r2, #33	; 0x21
 800ad64:	d00a      	beq.n	800ad7c <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ad66:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ad68:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800ad6a:	6801      	ldr	r1, [r0, #0]
 800ad6c:	680a      	ldr	r2, [r1, #0]
 800ad6e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ad72:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800ad74:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ad76:	3201      	adds	r2, #1
 800ad78:	6502      	str	r2, [r0, #80]	; 0x50
 800ad7a:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ad7c:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800ad7e:	6802      	ldr	r2, [r0, #0]
 800ad80:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ad84:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800ad86:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800ad88:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800ad8a:	3a01      	subs	r2, #1
 800ad8c:	b292      	uxth	r2, r2
 800ad8e:	855a      	strh	r2, [r3, #42]	; 0x2a
 800ad90:	4770      	bx	lr
 800ad92:	bf00      	nop

0800ad94 <HAL_I2C_MemRxCpltCallback>:
 800ad94:	4770      	bx	lr
 800ad96:	bf00      	nop

0800ad98 <HAL_I2C_ErrorCallback>:
 800ad98:	4770      	bx	lr
 800ad9a:	bf00      	nop

0800ad9c <HAL_I2C_AbortCpltCallback>:
 800ad9c:	4770      	bx	lr
 800ad9e:	bf00      	nop

0800ada0 <I2C_DMAAbort>:
{
 800ada0:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ada2:	4b3a      	ldr	r3, [pc, #232]	; (800ae8c <I2C_DMAAbort+0xec>)
 800ada4:	4a3a      	ldr	r2, [pc, #232]	; (800ae90 <I2C_DMAAbort+0xf0>)
 800ada6:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800ada8:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800adaa:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adac:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800adae:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adb0:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800adb4:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adb6:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800adb8:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800adbc:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adbe:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800adc2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800adc6:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800adc8:	9301      	str	r3, [sp, #4]
 800adca:	e005      	b.n	800add8 <I2C_DMAAbort+0x38>
    count--;
 800adcc:	9b01      	ldr	r3, [sp, #4]
 800adce:	3b01      	subs	r3, #1
 800add0:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800add2:	6813      	ldr	r3, [r2, #0]
 800add4:	059b      	lsls	r3, r3, #22
 800add6:	d506      	bpl.n	800ade6 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800add8:	9b01      	ldr	r3, [sp, #4]
 800adda:	2b00      	cmp	r3, #0
 800addc:	d1f6      	bne.n	800adcc <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800adde:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ade0:	f043 0320 	orr.w	r3, r3, #32
 800ade4:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800ade6:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800ade8:	b34c      	cbz	r4, 800ae3e <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800adea:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800adec:	2500      	movs	r5, #0
 800adee:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800adf0:	b1f3      	cbz	r3, 800ae30 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adf2:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800adf4:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adf6:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800adfa:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800adfc:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800adfe:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ae00:	2400      	movs	r4, #0
 800ae02:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800ae04:	6813      	ldr	r3, [r2, #0]
 800ae06:	f023 0301 	bic.w	r3, r3, #1
 800ae0a:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ae0c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ae10:	2b60      	cmp	r3, #96	; 0x60
 800ae12:	d02a      	beq.n	800ae6a <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ae14:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ae18:	2928      	cmp	r1, #40	; 0x28
 800ae1a:	d019      	beq.n	800ae50 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ae1c:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae1e:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ae20:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae24:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ae28:	f7ff ffb6 	bl	800ad98 <HAL_I2C_ErrorCallback>
}
 800ae2c:	b002      	add	sp, #8
 800ae2e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae30:	6815      	ldr	r5, [r2, #0]
 800ae32:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ae36:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ae38:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ae3a:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800ae3c:	e7e2      	b.n	800ae04 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800ae3e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ae40:	b1f3      	cbz	r3, 800ae80 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae42:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ae44:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae46:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ae4a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ae4c:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ae4e:	e7d7      	b.n	800ae00 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800ae50:	6813      	ldr	r3, [r2, #0]
 800ae52:	f043 0301 	orr.w	r3, r3, #1
 800ae56:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae58:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae5a:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae5c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800ae60:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ae62:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ae64:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800ae68:	e7de      	b.n	800ae28 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ae6a:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800ae6c:	2220      	movs	r2, #32
 800ae6e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ae72:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800ae76:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800ae78:	f7ff ff90 	bl	800ad9c <HAL_I2C_AbortCpltCallback>
}
 800ae7c:	b002      	add	sp, #8
 800ae7e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ae80:	6814      	ldr	r4, [r2, #0]
 800ae82:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800ae86:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800ae88:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ae8a:	e7bb      	b.n	800ae04 <I2C_DMAAbort+0x64>
 800ae8c:	20000078 	.word	0x20000078
 800ae90:	14f8b589 	.word	0x14f8b589

0800ae94 <I2C_ITError>:
{
 800ae94:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ae96:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800ae9a:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ae9e:	2b10      	cmp	r3, #16
{
 800aea0:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800aea2:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800aea4:	d039      	beq.n	800af1a <I2C_ITError+0x86>
 800aea6:	b2d9      	uxtb	r1, r3
 800aea8:	2940      	cmp	r1, #64	; 0x40
 800aeaa:	d036      	beq.n	800af1a <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800aeac:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800aeb0:	2928      	cmp	r1, #40	; 0x28
 800aeb2:	d03d      	beq.n	800af30 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800aeb4:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800aeb6:	6859      	ldr	r1, [r3, #4]
 800aeb8:	0508      	lsls	r0, r1, #20
 800aeba:	d407      	bmi.n	800aecc <I2C_ITError+0x38>
 800aebc:	2a60      	cmp	r2, #96	; 0x60
 800aebe:	d005      	beq.n	800aecc <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800aec0:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aec2:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aec4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aec8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800aecc:	2200      	movs	r2, #0
 800aece:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800aed0:	685a      	ldr	r2, [r3, #4]
 800aed2:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800aed6:	d134      	bne.n	800af42 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800aed8:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800aedc:	2960      	cmp	r1, #96	; 0x60
 800aede:	d075      	beq.n	800afcc <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aee0:	695a      	ldr	r2, [r3, #20]
 800aee2:	0650      	lsls	r0, r2, #25
 800aee4:	d505      	bpl.n	800aef2 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aee6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aee8:	691b      	ldr	r3, [r3, #16]
 800aeea:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800aeec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aeee:	3301      	adds	r3, #1
 800aef0:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800aef2:	4620      	mov	r0, r4
 800aef4:	f7ff ff50 	bl	800ad98 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800aef8:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800aefa:	0719      	lsls	r1, r3, #28
 800aefc:	d004      	beq.n	800af08 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aefe:	6822      	ldr	r2, [r4, #0]
 800af00:	6853      	ldr	r3, [r2, #4]
 800af02:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800af06:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800af08:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800af0c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800af0e:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800af10:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800af12:	d501      	bpl.n	800af18 <I2C_ITError+0x84>
 800af14:	2b28      	cmp	r3, #40	; 0x28
 800af16:	d02f      	beq.n	800af78 <I2C_ITError+0xe4>
}
 800af18:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800af1a:	2a22      	cmp	r2, #34	; 0x22
 800af1c:	d1c6      	bne.n	800aeac <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af1e:	6823      	ldr	r3, [r4, #0]
 800af20:	681a      	ldr	r2, [r3, #0]
 800af22:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af26:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800af28:	685a      	ldr	r2, [r3, #4]
 800af2a:	0512      	lsls	r2, r2, #20
 800af2c:	d5c8      	bpl.n	800aec0 <I2C_ITError+0x2c>
 800af2e:	e7cd      	b.n	800aecc <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800af30:	2300      	movs	r3, #0
 800af32:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800af34:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800af36:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800af3a:	685a      	ldr	r2, [r3, #4]
 800af3c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800af40:	d0ca      	beq.n	800aed8 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800af42:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800af44:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800af46:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800af4a:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800af4c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800af50:	2b01      	cmp	r3, #1
 800af52:	d01e      	beq.n	800af92 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800af54:	4b28      	ldr	r3, [pc, #160]	; (800aff8 <I2C_ITError+0x164>)
 800af56:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800af58:	f7fe fd90 	bl	8009a7c <HAL_DMA_Abort_IT>
 800af5c:	2800      	cmp	r0, #0
 800af5e:	d0cb      	beq.n	800aef8 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800af60:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af62:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800af64:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800af66:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800af68:	f023 0301 	bic.w	r3, r3, #1
 800af6c:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800af6e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800af72:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800af74:	4798      	blx	r3
 800af76:	e7bf      	b.n	800aef8 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800af78:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800af7a:	4920      	ldr	r1, [pc, #128]	; (800affc <I2C_ITError+0x168>)
 800af7c:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800af7e:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800af80:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800af82:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800af84:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800af88:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800af8c:	f7ff fea0 	bl	800acd0 <HAL_I2C_ListenCpltCallback>
}
 800af90:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800af92:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800af94:	4b18      	ldr	r3, [pc, #96]	; (800aff8 <I2C_ITError+0x164>)
 800af96:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800af98:	f7fe fd70 	bl	8009a7c <HAL_DMA_Abort_IT>
 800af9c:	2800      	cmp	r0, #0
 800af9e:	d0ab      	beq.n	800aef8 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afa0:	6823      	ldr	r3, [r4, #0]
 800afa2:	695a      	ldr	r2, [r3, #20]
 800afa4:	0651      	lsls	r1, r2, #25
 800afa6:	d506      	bpl.n	800afb6 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afa8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afaa:	691b      	ldr	r3, [r3, #16]
 800afac:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800afae:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800afb0:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800afb2:	3201      	adds	r2, #1
 800afb4:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800afb6:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800afb8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800afba:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800afbe:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800afc0:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800afc2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800afc6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800afc8:	4798      	blx	r3
 800afca:	e795      	b.n	800aef8 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800afcc:	2120      	movs	r1, #32
 800afce:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800afd2:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800afd4:	695a      	ldr	r2, [r3, #20]
 800afd6:	0652      	lsls	r2, r2, #25
 800afd8:	d506      	bpl.n	800afe8 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afda:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800afdc:	691b      	ldr	r3, [r3, #16]
 800afde:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800afe0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800afe2:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800afe4:	3201      	adds	r2, #1
 800afe6:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800afe8:	681a      	ldr	r2, [r3, #0]
 800afea:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800afee:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800aff0:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800aff2:	f7ff fed3 	bl	800ad9c <HAL_I2C_AbortCpltCallback>
 800aff6:	e77f      	b.n	800aef8 <I2C_ITError+0x64>
 800aff8:	0800ada1 	.word	0x0800ada1
 800affc:	ffff0000 	.word	0xffff0000

0800b000 <HAL_I2C_EV_IRQHandler>:
{
 800b000:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b002:	6803      	ldr	r3, [r0, #0]
{
 800b004:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800b006:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b008:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b00a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b00e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b012:	2910      	cmp	r1, #16
{
 800b014:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b016:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b018:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800b01c:	d022      	beq.n	800b064 <HAL_I2C_EV_IRQHandler+0x64>
 800b01e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b022:	d01f      	beq.n	800b064 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b024:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800b026:	2900      	cmp	r1, #0
 800b028:	f000 8094 	beq.w	800b154 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b02c:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800b02e:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b030:	f011 0602 	ands.w	r6, r1, #2
 800b034:	d059      	beq.n	800b0ea <HAL_I2C_EV_IRQHandler+0xea>
 800b036:	0586      	lsls	r6, r0, #22
 800b038:	d559      	bpl.n	800b0ee <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b03a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b03c:	b102      	cbz	r2, 800b040 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b03e:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800b040:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b044:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800b048:	2a28      	cmp	r2, #40	; 0x28
 800b04a:	f000 821e 	beq.w	800b48a <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b04e:	2200      	movs	r2, #0
 800b050:	920c      	str	r2, [sp, #48]	; 0x30
 800b052:	6959      	ldr	r1, [r3, #20]
 800b054:	910c      	str	r1, [sp, #48]	; 0x30
 800b056:	699b      	ldr	r3, [r3, #24]
 800b058:	930c      	str	r3, [sp, #48]	; 0x30
 800b05a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800b05c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800b060:	b00e      	add	sp, #56	; 0x38
 800b062:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b064:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b066:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800b068:	f011 0f01 	tst.w	r1, #1
 800b06c:	d11a      	bne.n	800b0a4 <HAL_I2C_EV_IRQHandler+0xa4>
 800b06e:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800b072:	d0f5      	beq.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b074:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800b078:	d0f2      	beq.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b07a:	070d      	lsls	r5, r1, #28
 800b07c:	d56d      	bpl.n	800b15a <HAL_I2C_EV_IRQHandler+0x15a>
 800b07e:	0585      	lsls	r5, r0, #22
 800b080:	f140 8083 	bpl.w	800b18a <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b084:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b086:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b088:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800b08a:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b08c:	2900      	cmp	r1, #0
 800b08e:	f000 81e3 	beq.w	800b458 <HAL_I2C_EV_IRQHandler+0x458>
 800b092:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800b094:	2a00      	cmp	r2, #0
 800b096:	f000 81df 	beq.w	800b458 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b09a:	685a      	ldr	r2, [r3, #4]
 800b09c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b0a0:	605a      	str	r2, [r3, #4]
 800b0a2:	e7dd      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b0a4:	0585      	lsls	r5, r0, #22
 800b0a6:	d56e      	bpl.n	800b186 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800b0a8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b0aa:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800b0ae:	f000 81e9 	beq.w	800b484 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800b0b2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b0b4:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800b0b8:	bf04      	itt	eq
 800b0ba:	2208      	moveq	r2, #8
 800b0bc:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b0be:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b0c2:	2a40      	cmp	r2, #64	; 0x40
 800b0c4:	f000 81d7 	beq.w	800b476 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b0c8:	6922      	ldr	r2, [r4, #16]
 800b0ca:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b0ce:	f000 81b2 	beq.w	800b436 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b0d2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b0d4:	2a00      	cmp	r2, #0
 800b0d6:	f040 81ef 	bne.w	800b4b8 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b0da:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b0dc:	11d2      	asrs	r2, r2, #7
 800b0de:	f002 0206 	and.w	r2, r2, #6
 800b0e2:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b0e6:	611a      	str	r2, [r3, #16]
 800b0e8:	e7ba      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b0ea:	06cd      	lsls	r5, r1, #27
 800b0ec:	d47c      	bmi.n	800b1e8 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b0ee:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b0f2:	2a21      	cmp	r2, #33	; 0x21
 800b0f4:	f000 80f5 	beq.w	800b2e2 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b0f8:	064e      	lsls	r6, r1, #25
 800b0fa:	f140 8132 	bpl.w	800b362 <HAL_I2C_EV_IRQHandler+0x362>
 800b0fe:	0545      	lsls	r5, r0, #21
 800b100:	f140 812f 	bpl.w	800b362 <HAL_I2C_EV_IRQHandler+0x362>
 800b104:	0749      	lsls	r1, r1, #29
 800b106:	f100 812f 	bmi.w	800b368 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b10a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b10e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b110:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b112:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b114:	2a00      	cmp	r2, #0
 800b116:	d0a3      	beq.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b118:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b11a:	691b      	ldr	r3, [r3, #16]
 800b11c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b11e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b120:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b122:	3b01      	subs	r3, #1
 800b124:	b29b      	uxth	r3, r3
 800b126:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b128:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b12a:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b12c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b12e:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b130:	2b00      	cmp	r3, #0
 800b132:	d195      	bne.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b134:	292a      	cmp	r1, #42	; 0x2a
 800b136:	d193      	bne.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b138:	6822      	ldr	r2, [r4, #0]
 800b13a:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b13c:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b13e:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b140:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b144:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b146:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b148:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b14a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b14e:	f7ff fdbb 	bl	800acc8 <HAL_I2C_SlaveRxCpltCallback>
 800b152:	e785      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b154:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b156:	6959      	ldr	r1, [r3, #20]
 800b158:	e76a      	b.n	800b030 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b15a:	078d      	lsls	r5, r1, #30
 800b15c:	d515      	bpl.n	800b18a <HAL_I2C_EV_IRQHandler+0x18a>
 800b15e:	0585      	lsls	r5, r0, #22
 800b160:	d513      	bpl.n	800b18a <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b162:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b166:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b168:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b16a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b16e:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b170:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b172:	f000 81b3 	beq.w	800b4dc <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b176:	2200      	movs	r2, #0
 800b178:	920a      	str	r2, [sp, #40]	; 0x28
 800b17a:	695a      	ldr	r2, [r3, #20]
 800b17c:	920a      	str	r2, [sp, #40]	; 0x28
 800b17e:	699b      	ldr	r3, [r3, #24]
 800b180:	930a      	str	r3, [sp, #40]	; 0x28
 800b182:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b184:	e76c      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b186:	070d      	lsls	r5, r1, #28
 800b188:	d5e7      	bpl.n	800b15a <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b18a:	0776      	lsls	r6, r6, #29
 800b18c:	f140 80f5 	bpl.w	800b37a <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b190:	685d      	ldr	r5, [r3, #4]
 800b192:	052d      	lsls	r5, r5, #20
 800b194:	f53f af64 	bmi.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b198:	060e      	lsls	r6, r1, #24
 800b19a:	f140 8115 	bpl.w	800b3c8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b19e:	0545      	lsls	r5, r0, #21
 800b1a0:	f140 8112 	bpl.w	800b3c8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b1a4:	074e      	lsls	r6, r1, #29
 800b1a6:	f100 8112 	bmi.w	800b3ce <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1aa:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1ae:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b1b0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b1b4:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1b6:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b1b8:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b1ba:	2800      	cmp	r0, #0
 800b1bc:	f040 8235 	bne.w	800b62a <HAL_I2C_EV_IRQHandler+0x62a>
 800b1c0:	2a21      	cmp	r2, #33	; 0x21
 800b1c2:	f000 8347 	beq.w	800b854 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b1c6:	2940      	cmp	r1, #64	; 0x40
 800b1c8:	f47f af4a 	bne.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b1cc:	2a22      	cmp	r2, #34	; 0x22
 800b1ce:	f47f af47 	bne.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b1d2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b1d4:	b292      	uxth	r2, r2
 800b1d6:	2a00      	cmp	r2, #0
 800b1d8:	f000 8268 	beq.w	800b6ac <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b1dc:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b1e0:	2a40      	cmp	r2, #64	; 0x40
 800b1e2:	f040 80b4 	bne.w	800b34e <HAL_I2C_EV_IRQHandler+0x34e>
 800b1e6:	e0fc      	b.n	800b3e2 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b1e8:	0585      	lsls	r5, r0, #22
 800b1ea:	d580      	bpl.n	800b0ee <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b1ec:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b1f0:	685a      	ldr	r2, [r3, #4]
 800b1f2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b1f6:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b1f8:	960d      	str	r6, [sp, #52]	; 0x34
 800b1fa:	695a      	ldr	r2, [r3, #20]
 800b1fc:	920d      	str	r2, [sp, #52]	; 0x34
 800b1fe:	681a      	ldr	r2, [r3, #0]
 800b200:	f042 0201 	orr.w	r2, r2, #1
 800b204:	601a      	str	r2, [r3, #0]
 800b206:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b208:	681a      	ldr	r2, [r3, #0]
 800b20a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b20e:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b210:	685a      	ldr	r2, [r3, #4]
 800b212:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b214:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b216:	d521      	bpl.n	800b25c <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b218:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b21c:	2a22      	cmp	r2, #34	; 0x22
 800b21e:	f000 817a 	beq.w	800b516 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b222:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b224:	6802      	ldr	r2, [r0, #0]
 800b226:	6852      	ldr	r2, [r2, #4]
 800b228:	b292      	uxth	r2, r2
 800b22a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b22c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b22e:	b292      	uxth	r2, r2
 800b230:	b11a      	cbz	r2, 800b23a <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b232:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b234:	f042 0204 	orr.w	r2, r2, #4
 800b238:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b23a:	685a      	ldr	r2, [r3, #4]
 800b23c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b240:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b242:	f7fe fc2d 	bl	8009aa0 <HAL_DMA_GetState>
 800b246:	2801      	cmp	r0, #1
 800b248:	d008      	beq.n	800b25c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b24a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b24c:	4b99      	ldr	r3, [pc, #612]	; (800b4b4 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b24e:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b250:	f7fe fc14 	bl	8009a7c <HAL_DMA_Abort_IT>
 800b254:	b110      	cbz	r0, 800b25c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b256:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b258:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b25a:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b25c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b25e:	b29b      	uxth	r3, r3
 800b260:	b313      	cbz	r3, 800b2a8 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b262:	6823      	ldr	r3, [r4, #0]
 800b264:	695a      	ldr	r2, [r3, #20]
 800b266:	0752      	lsls	r2, r2, #29
 800b268:	d50a      	bpl.n	800b280 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b26a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b26c:	691b      	ldr	r3, [r3, #16]
 800b26e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b270:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b272:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b274:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b276:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b278:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b27a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b27c:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b27e:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b280:	695a      	ldr	r2, [r3, #20]
 800b282:	0656      	lsls	r6, r2, #25
 800b284:	d509      	bpl.n	800b29a <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b286:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b288:	691b      	ldr	r3, [r3, #16]
 800b28a:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b28c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b28e:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b290:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b292:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b294:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b296:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b298:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b29a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b29c:	b29b      	uxth	r3, r3
 800b29e:	b11b      	cbz	r3, 800b2a8 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b2a0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b2a2:	f043 0304 	orr.w	r3, r3, #4
 800b2a6:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b2a8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b2aa:	2b00      	cmp	r3, #0
 800b2ac:	f040 80dd 	bne.w	800b46a <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b2b0:	2d2a      	cmp	r5, #42	; 0x2a
 800b2b2:	f000 8151 	beq.w	800b558 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b2b6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b2ba:	2b28      	cmp	r3, #40	; 0x28
 800b2bc:	f000 8154 	beq.w	800b568 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b2c0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b2c2:	2b22      	cmp	r3, #34	; 0x22
 800b2c4:	d002      	beq.n	800b2cc <HAL_I2C_EV_IRQHandler+0x2cc>
 800b2c6:	2d22      	cmp	r5, #34	; 0x22
 800b2c8:	f47f aeca 	bne.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b2cc:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b2ce:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b2d0:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b2d2:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b2d4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b2d8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b2dc:	f7ff fcf4 	bl	800acc8 <HAL_I2C_SlaveRxCpltCallback>
 800b2e0:	e6be      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b2e2:	060d      	lsls	r5, r1, #24
 800b2e4:	d528      	bpl.n	800b338 <HAL_I2C_EV_IRQHandler+0x338>
 800b2e6:	0546      	lsls	r6, r0, #21
 800b2e8:	d526      	bpl.n	800b338 <HAL_I2C_EV_IRQHandler+0x338>
 800b2ea:	074d      	lsls	r5, r1, #29
 800b2ec:	d427      	bmi.n	800b33e <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b2ee:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b2f2:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b2f4:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b2f6:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b2f8:	2900      	cmp	r1, #0
 800b2fa:	f43f aeb1 	beq.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b2fe:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b300:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b304:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b306:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b308:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b30a:	3901      	subs	r1, #1
 800b30c:	b289      	uxth	r1, r1
 800b30e:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b310:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b312:	b289      	uxth	r1, r1
 800b314:	2900      	cmp	r1, #0
 800b316:	f47f aea3 	bne.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b31a:	2829      	cmp	r0, #41	; 0x29
 800b31c:	f47f aea0 	bne.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b320:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b322:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b324:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b328:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b32a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b32c:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b32e:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b332:	f7ff fcc7 	bl	800acc4 <HAL_I2C_SlaveTxCpltCallback>
 800b336:	e693      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b338:	0749      	lsls	r1, r1, #29
 800b33a:	f57f ae91 	bpl.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b33e:	0582      	lsls	r2, r0, #22
 800b340:	f57f ae8e 	bpl.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b344:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b346:	b292      	uxth	r2, r2
 800b348:	2a00      	cmp	r2, #0
 800b34a:	f43f ae89 	beq.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b34e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b350:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b354:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b356:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b358:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b35a:	3b01      	subs	r3, #1
 800b35c:	b29b      	uxth	r3, r3
 800b35e:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b360:	e67e      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b362:	074a      	lsls	r2, r1, #29
 800b364:	f57f ae7c 	bpl.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b368:	0586      	lsls	r6, r0, #22
 800b36a:	f57f ae79 	bpl.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b36e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b370:	b292      	uxth	r2, r2
 800b372:	2a00      	cmp	r2, #0
 800b374:	f43f ae74 	beq.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b378:	e01b      	b.n	800b3b2 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b37a:	685a      	ldr	r2, [r3, #4]
 800b37c:	0512      	lsls	r2, r2, #20
 800b37e:	f53f ae6f 	bmi.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b382:	064e      	lsls	r6, r1, #25
 800b384:	d433      	bmi.n	800b3ee <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b386:	0749      	lsls	r1, r1, #29
 800b388:	f57f ae6a 	bpl.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b38c:	0582      	lsls	r2, r0, #22
 800b38e:	f57f ae67 	bpl.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b392:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b394:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b396:	b292      	uxth	r2, r2
 800b398:	2a04      	cmp	r2, #4
 800b39a:	f000 8113 	beq.w	800b5c4 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b39e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3a0:	b292      	uxth	r2, r2
 800b3a2:	2a03      	cmp	r2, #3
 800b3a4:	f000 8153 	beq.w	800b64e <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b3a8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b3aa:	b292      	uxth	r2, r2
 800b3ac:	2a02      	cmp	r2, #2
 800b3ae:	f000 8182 	beq.w	800b6b6 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3b2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b3b4:	691b      	ldr	r3, [r3, #16]
 800b3b6:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b3b8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b3ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3bc:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b3be:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b3c0:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b3c2:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b3c4:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b3c6:	e64b      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b3c8:	074d      	lsls	r5, r1, #29
 800b3ca:	f57f ae49 	bpl.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b3ce:	0581      	lsls	r1, r0, #22
 800b3d0:	f57f ae46 	bpl.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b3d4:	2a21      	cmp	r2, #33	; 0x21
 800b3d6:	f000 80fd 	beq.w	800b5d4 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b3da:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b3de:	f47f ae3f 	bne.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b3e2:	4620      	mov	r0, r4
}
 800b3e4:	b00e      	add	sp, #56	; 0x38
 800b3e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b3ea:	f7ff bc75 	b.w	800acd8 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b3ee:	0545      	lsls	r5, r0, #21
 800b3f0:	d5c9      	bpl.n	800b386 <HAL_I2C_EV_IRQHandler+0x386>
 800b3f2:	f011 0104 	ands.w	r1, r1, #4
 800b3f6:	d1c9      	bne.n	800b38c <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b3f8:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b3fc:	2a22      	cmp	r2, #34	; 0x22
 800b3fe:	f47f ae2f 	bne.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b402:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b404:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b406:	2a03      	cmp	r2, #3
 800b408:	f240 81ec 	bls.w	800b7e4 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b40c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b40e:	691b      	ldr	r3, [r3, #16]
 800b410:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b412:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b414:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b416:	3b01      	subs	r3, #1
 800b418:	b29b      	uxth	r3, r3
 800b41a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b41c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b41e:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b420:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b422:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b424:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b426:	f47f ae1b 	bne.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b42a:	6822      	ldr	r2, [r4, #0]
 800b42c:	6853      	ldr	r3, [r2, #4]
 800b42e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b432:	6053      	str	r3, [r2, #4]
 800b434:	e614      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b436:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b43a:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b43c:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b43e:	bf16      	itet	ne
 800b440:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b444:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b448:	b2d2      	uxtbne	r2, r2
 800b44a:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b44c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b44e:	b11a      	cbz	r2, 800b458 <HAL_I2C_EV_IRQHandler+0x458>
 800b450:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b452:	2a00      	cmp	r2, #0
 800b454:	f47f ae21 	bne.w	800b09a <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b458:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b45a:	2a00      	cmp	r2, #0
 800b45c:	f43f ae00 	beq.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b460:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b462:	2a00      	cmp	r2, #0
 800b464:	f47f ae19 	bne.w	800b09a <HAL_I2C_EV_IRQHandler+0x9a>
 800b468:	e5fa      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b46a:	4620      	mov	r0, r4
}
 800b46c:	b00e      	add	sp, #56	; 0x38
 800b46e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b472:	f7ff bd0f 	b.w	800ae94 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b476:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b478:	bb52      	cbnz	r2, 800b4d0 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b47a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b47c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b480:	611a      	str	r2, [r3, #16]
 800b482:	e5ed      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b484:	2201      	movs	r2, #1
 800b486:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b488:	e619      	b.n	800b0be <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b48a:	685a      	ldr	r2, [r3, #4]
 800b48c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b490:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b492:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b494:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b498:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b49c:	bf54      	ite	pl
 800b49e:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b4a0:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b4a2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b4a6:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b4aa:	4620      	mov	r0, r4
 800b4ac:	f7ff fc0e 	bl	800accc <HAL_I2C_AddrCallback>
 800b4b0:	e5d6      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b4b2:	bf00      	nop
 800b4b4:	0800ada1 	.word	0x0800ada1
      else if (hi2c->EventCount == 1U)
 800b4b8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b4ba:	2a01      	cmp	r2, #1
 800b4bc:	f47f add0 	bne.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b4c0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4c2:	11d2      	asrs	r2, r2, #7
 800b4c4:	f002 0206 	and.w	r2, r2, #6
 800b4c8:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b4cc:	611a      	str	r2, [r3, #16]
 800b4ce:	e5c7      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b4d0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b4d2:	f042 0201 	orr.w	r2, r2, #1
 800b4d6:	b2d2      	uxtb	r2, r2
 800b4d8:	611a      	str	r2, [r3, #16]
 800b4da:	e5c1      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b4dc:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b4de:	b911      	cbnz	r1, 800b4e6 <HAL_I2C_EV_IRQHandler+0x4e6>
 800b4e0:	2a40      	cmp	r2, #64	; 0x40
 800b4e2:	f000 809b 	beq.w	800b61c <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b4e6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b4e8:	b922      	cbnz	r2, 800b4f4 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b4ea:	6921      	ldr	r1, [r4, #16]
 800b4ec:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b4f0:	f000 809f 	beq.w	800b632 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b4f4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b4f6:	b292      	uxth	r2, r2
 800b4f8:	2a00      	cmp	r2, #0
 800b4fa:	d142      	bne.n	800b582 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b4fc:	9203      	str	r2, [sp, #12]
 800b4fe:	695a      	ldr	r2, [r3, #20]
 800b500:	9203      	str	r2, [sp, #12]
 800b502:	699a      	ldr	r2, [r3, #24]
 800b504:	9203      	str	r2, [sp, #12]
 800b506:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b508:	681a      	ldr	r2, [r3, #0]
 800b50a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b50e:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b510:	2300      	movs	r3, #0
 800b512:	6523      	str	r3, [r4, #80]	; 0x50
 800b514:	e5a4      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b516:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b518:	6802      	ldr	r2, [r0, #0]
 800b51a:	6852      	ldr	r2, [r2, #4]
 800b51c:	b292      	uxth	r2, r2
 800b51e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b520:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b522:	b292      	uxth	r2, r2
 800b524:	b11a      	cbz	r2, 800b52e <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b526:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b528:	f042 0204 	orr.w	r2, r2, #4
 800b52c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b52e:	685a      	ldr	r2, [r3, #4]
 800b530:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b534:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b536:	f7fe fab3 	bl	8009aa0 <HAL_DMA_GetState>
 800b53a:	2801      	cmp	r0, #1
 800b53c:	f43f ae8e 	beq.w	800b25c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b540:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b542:	4b98      	ldr	r3, [pc, #608]	; (800b7a4 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b544:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b546:	f7fe fa99 	bl	8009a7c <HAL_DMA_Abort_IT>
 800b54a:	2800      	cmp	r0, #0
 800b54c:	f43f ae86 	beq.w	800b25c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b550:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b552:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b554:	4798      	blx	r3
 800b556:	e681      	b.n	800b25c <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b558:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b55a:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b55c:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b55e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b562:	f7ff fbb1 	bl	800acc8 <HAL_I2C_SlaveRxCpltCallback>
 800b566:	e6a6      	b.n	800b2b6 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b568:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b56a:	498f      	ldr	r1, [pc, #572]	; (800b7a8 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b56c:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b56e:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b570:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b572:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b574:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b578:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b57c:	f7ff fba8 	bl	800acd0 <HAL_I2C_ListenCpltCallback>
 800b580:	e56e      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b582:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b584:	b292      	uxth	r2, r2
 800b586:	2a01      	cmp	r2, #1
 800b588:	d070      	beq.n	800b66c <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b58a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b58c:	b292      	uxth	r2, r2
 800b58e:	2a02      	cmp	r2, #2
 800b590:	f000 80d6 	beq.w	800b740 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b594:	681a      	ldr	r2, [r3, #0]
 800b596:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b59a:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b59c:	685a      	ldr	r2, [r3, #4]
 800b59e:	0511      	lsls	r1, r2, #20
 800b5a0:	d508      	bpl.n	800b5b4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b5a2:	2820      	cmp	r0, #32
 800b5a4:	f200 80f8 	bhi.w	800b798 <HAL_I2C_EV_IRQHandler+0x798>
 800b5a8:	2807      	cmp	r0, #7
 800b5aa:	f200 80ea 	bhi.w	800b782 <HAL_I2C_EV_IRQHandler+0x782>
 800b5ae:	2801      	cmp	r0, #1
 800b5b0:	f000 80ed 	beq.w	800b78e <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5b4:	2200      	movs	r2, #0
 800b5b6:	9209      	str	r2, [sp, #36]	; 0x24
 800b5b8:	695a      	ldr	r2, [r3, #20]
 800b5ba:	9209      	str	r2, [sp, #36]	; 0x24
 800b5bc:	699b      	ldr	r3, [r3, #24]
 800b5be:	9309      	str	r3, [sp, #36]	; 0x24
 800b5c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b5c2:	e7a5      	b.n	800b510 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5c4:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5c6:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5c8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5cc:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b5ce:	691b      	ldr	r3, [r3, #16]
 800b5d0:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b5d2:	e6f1      	b.n	800b3b8 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b5d4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b5d6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b5da:	2a21      	cmp	r2, #33	; 0x21
 800b5dc:	f47f ad40 	bne.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b5e0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b5e2:	b292      	uxth	r2, r2
 800b5e4:	2a00      	cmp	r2, #0
 800b5e6:	f47f aeb2 	bne.w	800b34e <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b5ea:	2908      	cmp	r1, #8
 800b5ec:	f000 80e2 	beq.w	800b7b4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b5f0:	2920      	cmp	r1, #32
 800b5f2:	f000 80df 	beq.w	800b7b4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b5f6:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b5fa:	f000 80db 	beq.w	800b7b4 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b5fe:	6859      	ldr	r1, [r3, #4]
 800b600:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b604:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b606:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b608:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b60a:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b60c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b610:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b612:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b616:	f7ff fb51 	bl	800acbc <HAL_I2C_MasterTxCpltCallback>
 800b61a:	e521      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b61c:	9101      	str	r1, [sp, #4]
 800b61e:	695a      	ldr	r2, [r3, #20]
 800b620:	9201      	str	r2, [sp, #4]
 800b622:	699b      	ldr	r3, [r3, #24]
 800b624:	9301      	str	r3, [sp, #4]
 800b626:	9b01      	ldr	r3, [sp, #4]
 800b628:	e51a      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b62a:	2a21      	cmp	r2, #33	; 0x21
 800b62c:	f43f add1 	beq.w	800b1d2 <HAL_I2C_EV_IRQHandler+0x1d2>
 800b630:	e5c9      	b.n	800b1c6 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b632:	9202      	str	r2, [sp, #8]
 800b634:	695a      	ldr	r2, [r3, #20]
 800b636:	9202      	str	r2, [sp, #8]
 800b638:	699a      	ldr	r2, [r3, #24]
 800b63a:	9202      	str	r2, [sp, #8]
 800b63c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b63e:	681a      	ldr	r2, [r3, #0]
 800b640:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b644:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b646:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b648:	3301      	adds	r3, #1
 800b64a:	6523      	str	r3, [r4, #80]	; 0x50
 800b64c:	e508      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b64e:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b650:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b652:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b656:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b658:	f43f aeab 	beq.w	800b3b2 <HAL_I2C_EV_IRQHandler+0x3b2>
 800b65c:	2902      	cmp	r1, #2
 800b65e:	f43f aea8 	beq.w	800b3b2 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b662:	681a      	ldr	r2, [r3, #0]
 800b664:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b668:	601a      	str	r2, [r3, #0]
 800b66a:	e6a2      	b.n	800b3b2 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b66c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b670:	f000 811b 	beq.w	800b8aa <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b674:	2808      	cmp	r0, #8
 800b676:	f000 8108 	beq.w	800b88a <HAL_I2C_EV_IRQHandler+0x88a>
 800b67a:	2820      	cmp	r0, #32
 800b67c:	f000 8105 	beq.w	800b88a <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b680:	2d12      	cmp	r5, #18
 800b682:	f000 80ff 	beq.w	800b884 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b686:	2810      	cmp	r0, #16
 800b688:	d804      	bhi.n	800b694 <HAL_I2C_EV_IRQHandler+0x694>
 800b68a:	4a48      	ldr	r2, [pc, #288]	; (800b7ac <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b68c:	40c2      	lsrs	r2, r0
 800b68e:	07d1      	lsls	r1, r2, #31
 800b690:	f100 814c 	bmi.w	800b92c <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b694:	681a      	ldr	r2, [r3, #0]
 800b696:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b69a:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b69c:	2200      	movs	r2, #0
 800b69e:	9206      	str	r2, [sp, #24]
 800b6a0:	695a      	ldr	r2, [r3, #20]
 800b6a2:	9206      	str	r2, [sp, #24]
 800b6a4:	699b      	ldr	r3, [r3, #24]
 800b6a6:	9306      	str	r3, [sp, #24]
 800b6a8:	9b06      	ldr	r3, [sp, #24]
 800b6aa:	e731      	b.n	800b510 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b6ac:	685a      	ldr	r2, [r3, #4]
 800b6ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b6b2:	605a      	str	r2, [r3, #4]
 800b6b4:	e4d4      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b6b6:	3901      	subs	r1, #1
 800b6b8:	290f      	cmp	r1, #15
 800b6ba:	d809      	bhi.n	800b6d0 <HAL_I2C_EV_IRQHandler+0x6d0>
 800b6bc:	e8df f001 	tbb	[pc, r1]
 800b6c0:	3608363b 	.word	0x3608363b
 800b6c4:	08080808 	.word	0x08080808
 800b6c8:	08080808 	.word	0x08080808
 800b6cc:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b6d0:	681a      	ldr	r2, [r3, #0]
 800b6d2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b6d6:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6d8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b6da:	691b      	ldr	r3, [r3, #16]
 800b6dc:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b6de:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b6e0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6e2:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b6e4:	3b01      	subs	r3, #1
 800b6e6:	b29b      	uxth	r3, r3
 800b6e8:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6ea:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b6ec:	1c51      	adds	r1, r2, #1
 800b6ee:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6f0:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b6f2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b6f4:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b6f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b6f8:	3b01      	subs	r3, #1
 800b6fa:	b29b      	uxth	r3, r3
 800b6fc:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b6fe:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b700:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b702:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b706:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b708:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b70a:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b70c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b710:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b714:	2b40      	cmp	r3, #64	; 0x40
 800b716:	f000 80f5 	beq.w	800b904 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b71a:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b71c:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b71e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b722:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b724:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b726:	f7ff facb 	bl	800acc0 <HAL_I2C_MasterRxCpltCallback>
 800b72a:	e499      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b72c:	681a      	ldr	r2, [r3, #0]
 800b72e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b732:	601a      	str	r2, [r3, #0]
 800b734:	e7d0      	b.n	800b6d8 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b736:	681a      	ldr	r2, [r3, #0]
 800b738:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b73c:	601a      	str	r2, [r3, #0]
 800b73e:	e7cb      	b.n	800b6d8 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b740:	2810      	cmp	r0, #16
 800b742:	d804      	bhi.n	800b74e <HAL_I2C_EV_IRQHandler+0x74e>
 800b744:	4a19      	ldr	r2, [pc, #100]	; (800b7ac <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b746:	40c2      	lsrs	r2, r0
 800b748:	07d2      	lsls	r2, r2, #31
 800b74a:	f100 80c2 	bmi.w	800b8d2 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b74e:	681a      	ldr	r2, [r3, #0]
 800b750:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b754:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b756:	681a      	ldr	r2, [r3, #0]
 800b758:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b75c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b75e:	685a      	ldr	r2, [r3, #4]
 800b760:	0516      	lsls	r6, r2, #20
 800b762:	d506      	bpl.n	800b772 <HAL_I2C_EV_IRQHandler+0x772>
 800b764:	2820      	cmp	r0, #32
 800b766:	f240 80bc 	bls.w	800b8e2 <HAL_I2C_EV_IRQHandler+0x8e2>
 800b76a:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b76e:	f000 80bd 	beq.w	800b8ec <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b772:	2200      	movs	r2, #0
 800b774:	9208      	str	r2, [sp, #32]
 800b776:	695a      	ldr	r2, [r3, #20]
 800b778:	9208      	str	r2, [sp, #32]
 800b77a:	699b      	ldr	r3, [r3, #24]
 800b77c:	9308      	str	r3, [sp, #32]
 800b77e:	9b08      	ldr	r3, [sp, #32]
 800b780:	e6c6      	b.n	800b510 <HAL_I2C_EV_IRQHandler+0x510>
 800b782:	4a0b      	ldr	r2, [pc, #44]	; (800b7b0 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b784:	3808      	subs	r0, #8
 800b786:	40c2      	lsrs	r2, r0
 800b788:	07d2      	lsls	r2, r2, #31
 800b78a:	f57f af13 	bpl.w	800b5b4 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b78e:	685a      	ldr	r2, [r3, #4]
 800b790:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b794:	605a      	str	r2, [r3, #4]
 800b796:	e70d      	b.n	800b5b4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b798:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b79c:	f47f af0a 	bne.w	800b5b4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b7a0:	e7f5      	b.n	800b78e <HAL_I2C_EV_IRQHandler+0x78e>
 800b7a2:	bf00      	nop
 800b7a4:	0800ada1 	.word	0x0800ada1
 800b7a8:	ffff0000 	.word	0xffff0000
 800b7ac:	00010014 	.word	0x00010014
 800b7b0:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b7b4:	6859      	ldr	r1, [r3, #4]
 800b7b6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b7ba:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7bc:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b7be:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b7c0:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7c2:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b7c6:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b7c8:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b7ca:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7ce:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7d2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7d6:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b7d8:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b7da:	f47f af1c 	bne.w	800b616 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b7de:	f7ff fa79 	bl	800acd4 <HAL_I2C_MemTxCpltCallback>
 800b7e2:	e43d      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b7e4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b7e6:	2802      	cmp	r0, #2
 800b7e8:	f43f af60 	beq.w	800b6ac <HAL_I2C_EV_IRQHandler+0x6ac>
 800b7ec:	2a01      	cmp	r2, #1
 800b7ee:	f63f af5d 	bhi.w	800b6ac <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b7f2:	4a62      	ldr	r2, [pc, #392]	; (800b97c <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b7f4:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b7f6:	6812      	ldr	r2, [r2, #0]
 800b7f8:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b7fc:	fbb2 f2f0 	udiv	r2, r2, r0
 800b800:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b804:	920b      	str	r2, [sp, #44]	; 0x2c
 800b806:	e004      	b.n	800b812 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b808:	681a      	ldr	r2, [r3, #0]
 800b80a:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b80e:	f000 8092 	beq.w	800b936 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b812:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b814:	3a01      	subs	r2, #1
 800b816:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b818:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b81a:	2900      	cmp	r1, #0
 800b81c:	d1f4      	bne.n	800b808 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b81e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b820:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b822:	f042 0220 	orr.w	r2, r2, #32
 800b826:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b828:	685a      	ldr	r2, [r3, #4]
 800b82a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b82e:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b830:	691b      	ldr	r3, [r3, #16]
 800b832:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b834:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b836:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b838:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b83a:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b83c:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b83e:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b840:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b842:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b844:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b848:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b84a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b84e:	f7ff faa3 	bl	800ad98 <HAL_I2C_ErrorCallback>
 800b852:	e405      	b.n	800b060 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b854:	2d08      	cmp	r5, #8
 800b856:	d0ad      	beq.n	800b7b4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b858:	2d20      	cmp	r5, #32
 800b85a:	d0ab      	beq.n	800b7b4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b85c:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b860:	d0a8      	beq.n	800b7b4 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b862:	685a      	ldr	r2, [r3, #4]
 800b864:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b868:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b86a:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b86c:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b86e:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b870:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b872:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b876:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b878:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b87c:	f7ff fa1e 	bl	800acbc <HAL_I2C_MasterTxCpltCallback>
 800b880:	f7ff bbee 	b.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b884:	2801      	cmp	r0, #1
 800b886:	f43f af05 	beq.w	800b694 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b88a:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b88c:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b88e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b892:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b894:	9107      	str	r1, [sp, #28]
 800b896:	695a      	ldr	r2, [r3, #20]
 800b898:	9207      	str	r2, [sp, #28]
 800b89a:	699a      	ldr	r2, [r3, #24]
 800b89c:	9207      	str	r2, [sp, #28]
 800b89e:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b8a0:	681a      	ldr	r2, [r3, #0]
 800b8a2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b8a6:	601a      	str	r2, [r3, #0]
 800b8a8:	e632      	b.n	800b510 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8aa:	681a      	ldr	r2, [r3, #0]
 800b8ac:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8b0:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b8b2:	685a      	ldr	r2, [r3, #4]
 800b8b4:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b8b8:	d02d      	beq.n	800b916 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8ba:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8bc:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8be:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b8c2:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b8c4:	9104      	str	r1, [sp, #16]
 800b8c6:	695a      	ldr	r2, [r3, #20]
 800b8c8:	9204      	str	r2, [sp, #16]
 800b8ca:	699b      	ldr	r3, [r3, #24]
 800b8cc:	9304      	str	r3, [sp, #16]
 800b8ce:	9b04      	ldr	r3, [sp, #16]
 800b8d0:	e61e      	b.n	800b510 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b8d2:	681a      	ldr	r2, [r3, #0]
 800b8d4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b8d8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b8da:	685a      	ldr	r2, [r3, #4]
 800b8dc:	0515      	lsls	r5, r2, #20
 800b8de:	f57f af48 	bpl.w	800b772 <HAL_I2C_EV_IRQHandler+0x772>
 800b8e2:	2807      	cmp	r0, #7
 800b8e4:	d807      	bhi.n	800b8f6 <HAL_I2C_EV_IRQHandler+0x8f6>
 800b8e6:	2801      	cmp	r0, #1
 800b8e8:	f47f af43 	bne.w	800b772 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b8ec:	685a      	ldr	r2, [r3, #4]
 800b8ee:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b8f2:	605a      	str	r2, [r3, #4]
 800b8f4:	e73d      	b.n	800b772 <HAL_I2C_EV_IRQHandler+0x772>
 800b8f6:	4a22      	ldr	r2, [pc, #136]	; (800b980 <HAL_I2C_EV_IRQHandler+0x980>)
 800b8f8:	3808      	subs	r0, #8
 800b8fa:	40c2      	lsrs	r2, r0
 800b8fc:	07d0      	lsls	r0, r2, #31
 800b8fe:	f57f af38 	bpl.w	800b772 <HAL_I2C_EV_IRQHandler+0x772>
 800b902:	e7f3      	b.n	800b8ec <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b904:	2300      	movs	r3, #0
 800b906:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b90a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b90c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b90e:	f7ff fa41 	bl	800ad94 <HAL_I2C_MemRxCpltCallback>
 800b912:	f7ff bba5 	b.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b916:	9205      	str	r2, [sp, #20]
 800b918:	695a      	ldr	r2, [r3, #20]
 800b91a:	9205      	str	r2, [sp, #20]
 800b91c:	699a      	ldr	r2, [r3, #24]
 800b91e:	9205      	str	r2, [sp, #20]
 800b920:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b922:	681a      	ldr	r2, [r3, #0]
 800b924:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b928:	601a      	str	r2, [r3, #0]
 800b92a:	e5f1      	b.n	800b510 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b92c:	681a      	ldr	r2, [r3, #0]
 800b92e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b932:	601a      	str	r2, [r3, #0]
 800b934:	e6b2      	b.n	800b69c <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b936:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b938:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b93a:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b93e:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b940:	6859      	ldr	r1, [r3, #4]
 800b942:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b946:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b948:	691b      	ldr	r3, [r3, #16]
 800b94a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b94c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b94e:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b950:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b952:	b29b      	uxth	r3, r3
 800b954:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b956:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b95a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b95c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b960:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b962:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b964:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b966:	f47f aed9 	bne.w	800b71c <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b96a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b96e:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b970:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b972:	f7ff fa0f 	bl	800ad94 <HAL_I2C_MemRxCpltCallback>
 800b976:	f7ff bb73 	b.w	800b060 <HAL_I2C_EV_IRQHandler+0x60>
 800b97a:	bf00      	nop
 800b97c:	20000078 	.word	0x20000078
 800b980:	01000101 	.word	0x01000101

0800b984 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b984:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b988:	2a20      	cmp	r2, #32
{
 800b98a:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b98c:	fa5f fc82 	uxtb.w	ip, r2
 800b990:	d001      	beq.n	800b996 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b992:	2002      	movs	r0, #2
  }
}
 800b994:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b996:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b998:	2024      	movs	r0, #36	; 0x24
 800b99a:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b99e:	6810      	ldr	r0, [r2, #0]
 800b9a0:	f020 0001 	bic.w	r0, r0, #1
 800b9a4:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b9a6:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b9a8:	f020 0010 	bic.w	r0, r0, #16
 800b9ac:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b9ae:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b9b0:	4301      	orrs	r1, r0
 800b9b2:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b9b4:	6811      	ldr	r1, [r2, #0]
 800b9b6:	f041 0101 	orr.w	r1, r1, #1
 800b9ba:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b9bc:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b9be:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b9c2:	4770      	bx	lr

0800b9c4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b9c4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b9c8:	2a20      	cmp	r2, #32
 800b9ca:	d001      	beq.n	800b9d0 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b9cc:	2002      	movs	r0, #2
  }
}
 800b9ce:	4770      	bx	lr
{
 800b9d0:	b410      	push	{r4}
 800b9d2:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b9d6:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b9d8:	2224      	movs	r2, #36	; 0x24
 800b9da:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b9de:	6822      	ldr	r2, [r4, #0]
 800b9e0:	f022 0201 	bic.w	r2, r2, #1
 800b9e4:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b9e6:	4603      	mov	r3, r0
 800b9e8:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b9ea:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b9ee:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b9f0:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b9f2:	b289      	uxth	r1, r1
 800b9f4:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b9f6:	6822      	ldr	r2, [r4, #0]
 800b9f8:	f042 0201 	orr.w	r2, r2, #1
 800b9fc:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b9fe:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ba02:	2000      	movs	r0, #0
}
 800ba04:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ba08:	4770      	bx	lr
 800ba0a:	bf00      	nop

0800ba0c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ba0c:	2800      	cmp	r0, #0
 800ba0e:	d069      	beq.n	800bae4 <HAL_LTDC_Init+0xd8>
{
 800ba10:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ba12:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ba16:	4604      	mov	r4, r0
 800ba18:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ba1c:	2b00      	cmp	r3, #0
 800ba1e:	d05c      	beq.n	800bada <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba20:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba22:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba24:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba28:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba2c:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba2e:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ba30:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ba34:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800ba38:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba3a:	6999      	ldr	r1, [r3, #24]
 800ba3c:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ba3e:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ba40:	430a      	orrs	r2, r1
 800ba42:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ba44:	689a      	ldr	r2, [r3, #8]
 800ba46:	4928      	ldr	r1, [pc, #160]	; (800bae8 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800ba48:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ba4a:	400a      	ands	r2, r1
 800ba4c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800ba4e:	689a      	ldr	r2, [r3, #8]
 800ba50:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba54:	69a0      	ldr	r0, [r4, #24]
 800ba56:	4302      	orrs	r2, r0
 800ba58:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ba5a:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800ba5c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ba5e:	400a      	ands	r2, r1
 800ba60:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800ba62:	68da      	ldr	r2, [r3, #12]
 800ba64:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba68:	6a20      	ldr	r0, [r4, #32]
 800ba6a:	4302      	orrs	r2, r0
 800ba6c:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ba6e:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ba70:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ba72:	400a      	ands	r2, r1
 800ba74:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800ba76:	691a      	ldr	r2, [r3, #16]
 800ba78:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba7c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ba7e:	4302      	orrs	r2, r0
 800ba80:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ba82:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800ba84:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ba86:	400a      	ands	r2, r1
 800ba88:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800ba8a:	695a      	ldr	r2, [r3, #20]
 800ba8c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ba8e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ba92:	430a      	orrs	r2, r1
 800ba94:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800ba96:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800ba98:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800ba9c:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800baa0:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800baa4:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800baa6:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800baa8:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800baac:	432a      	orrs	r2, r5
 800baae:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800bab2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800bab6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800bab8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800baba:	f042 0206 	orr.w	r2, r2, #6
 800babe:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800bac0:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800bac2:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bac6:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800bac8:	ea42 020c 	orr.w	r2, r2, ip
 800bacc:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800bace:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800bad2:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800bad6:	4608      	mov	r0, r1
}
 800bad8:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800bada:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800bade:	f7f5 fe01 	bl	80016e4 <HAL_LTDC_MspInit>
 800bae2:	e79d      	b.n	800ba20 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800bae4:	2001      	movs	r0, #1
}
 800bae6:	4770      	bx	lr
 800bae8:	f000f800 	.word	0xf000f800

0800baec <HAL_LTDC_ErrorCallback>:
 800baec:	4770      	bx	lr
 800baee:	bf00      	nop

0800baf0 <HAL_LTDC_ReloadEventCallback>:
 800baf0:	4770      	bx	lr
 800baf2:	bf00      	nop

0800baf4 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800baf4:	6803      	ldr	r3, [r0, #0]
{
 800baf6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800baf8:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800bafa:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bafc:	076a      	lsls	r2, r5, #29
{
 800bafe:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800bb00:	d501      	bpl.n	800bb06 <HAL_LTDC_IRQHandler+0x12>
 800bb02:	0771      	lsls	r1, r6, #29
 800bb04:	d41d      	bmi.n	800bb42 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800bb06:	07aa      	lsls	r2, r5, #30
 800bb08:	d501      	bpl.n	800bb0e <HAL_LTDC_IRQHandler+0x1a>
 800bb0a:	07b3      	lsls	r3, r6, #30
 800bb0c:	d42d      	bmi.n	800bb6a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800bb0e:	07e8      	lsls	r0, r5, #31
 800bb10:	d501      	bpl.n	800bb16 <HAL_LTDC_IRQHandler+0x22>
 800bb12:	07f1      	lsls	r1, r6, #31
 800bb14:	d440      	bmi.n	800bb98 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800bb16:	072a      	lsls	r2, r5, #28
 800bb18:	d501      	bpl.n	800bb1e <HAL_LTDC_IRQHandler+0x2a>
 800bb1a:	0733      	lsls	r3, r6, #28
 800bb1c:	d400      	bmi.n	800bb20 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800bb1e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bb20:	6823      	ldr	r3, [r4, #0]
 800bb22:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bb24:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800bb26:	f022 0208 	bic.w	r2, r2, #8
 800bb2a:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb2c:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800bb2e:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bb30:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bb32:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb36:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800bb3a:	4620      	mov	r0, r4
 800bb3c:	f7ff ffd8 	bl	800baf0 <HAL_LTDC_ReloadEventCallback>
}
 800bb40:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800bb42:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb44:	f022 0204 	bic.w	r2, r2, #4
 800bb48:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800bb4a:	2204      	movs	r2, #4
 800bb4c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800bb4e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800bb52:	f043 0301 	orr.w	r3, r3, #1
 800bb56:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800bb5a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb5c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb60:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bb64:	f7ff ffc2 	bl	800baec <HAL_LTDC_ErrorCallback>
 800bb68:	e7cd      	b.n	800bb06 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800bb6a:	6823      	ldr	r3, [r4, #0]
 800bb6c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb6e:	f022 0202 	bic.w	r2, r2, #2
 800bb72:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bb74:	2202      	movs	r2, #2
 800bb76:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bb78:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bb7c:	f043 0302 	orr.w	r3, r3, #2
 800bb80:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb84:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800bb86:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bb88:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bb8c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bb90:	4620      	mov	r0, r4
 800bb92:	f7ff ffab 	bl	800baec <HAL_LTDC_ErrorCallback>
 800bb96:	e7ba      	b.n	800bb0e <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bb98:	6823      	ldr	r3, [r4, #0]
 800bb9a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bb9c:	f022 0201 	bic.w	r2, r2, #1
 800bba0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bba2:	2201      	movs	r2, #1
 800bba4:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bba6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bba8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bbac:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800bbb0:	4620      	mov	r0, r4
 800bbb2:	f7f6 fdd1 	bl	8002758 <HAL_LTDC_LineEventCallback>
 800bbb6:	e7ae      	b.n	800bb16 <HAL_LTDC_IRQHandler+0x22>

0800bbb8 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800bbb8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bbbc:	2b01      	cmp	r3, #1
 800bbbe:	f000 80c2 	beq.w	800bd46 <HAL_LTDC_ConfigLayer+0x18e>
{
 800bbc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbc6:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbca:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbce:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bbd2:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbd4:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bbd6:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbda:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800bbde:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bbe2:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800bbe6:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbea:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bbee:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbf0:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbf4:	460c      	mov	r4, r1
 800bbf6:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bbf8:	9301      	str	r3, [sp, #4]
 800bbfa:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bbfc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bbfe:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800bc02:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc06:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bc08:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bc0a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc0e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bc10:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bc14:	6823      	ldr	r3, [r4, #0]
 800bc16:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bc1a:	9b01      	ldr	r3, [sp, #4]
 800bc1c:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc20:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bc24:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc26:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800bc28:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc2c:	1c51      	adds	r1, r2, #1
 800bc2e:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800bc32:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bc34:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bc36:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bc3a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc3e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800bc42:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800bc46:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800bc4a:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc4e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bc52:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bc54:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bc56:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800bc5a:	3301      	adds	r3, #1
 800bc5c:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800bc60:	4403      	add	r3, r0
 800bc62:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bc66:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bc6a:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bc6e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bc70:	f023 0307 	bic.w	r3, r3, #7
 800bc74:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc78:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bc7c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc80:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800bc84:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800bc88:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bc8c:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800bc90:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800bc94:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800bc98:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bc9c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bca0:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800bca4:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800bca8:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800bcac:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800bcb0:	696b      	ldr	r3, [r5, #20]
 800bcb2:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800bcb6:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800bcba:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bcbe:	f023 0307 	bic.w	r3, r3, #7
 800bcc2:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800bcc6:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800bcca:	4303      	orrs	r3, r0
 800bccc:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bcd0:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bcd4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bcd6:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bcda:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bcde:	bb69      	cbnz	r1, 800bd3c <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800bce0:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bce2:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bce4:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bce6:	fb03 f707 	mul.w	r7, r3, r7
 800bcea:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bcec:	fb02 f303 	mul.w	r3, r2, r3
 800bcf0:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bcf4:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bcf8:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bcfa:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800bcfe:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bd02:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bd06:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800bd0a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800bd0e:	f023 0307 	bic.w	r3, r3, #7
 800bd12:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bd16:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bd1a:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd1e:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bd20:	4313      	orrs	r3, r2
 800bd22:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800bd26:	2300      	movs	r3, #0
  return HAL_OK;
 800bd28:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bd2a:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800bd2e:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd32:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800bd36:	b003      	add	sp, #12
 800bd38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800bd3c:	3901      	subs	r1, #1
 800bd3e:	2906      	cmp	r1, #6
 800bd40:	d903      	bls.n	800bd4a <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bd42:	2301      	movs	r3, #1
 800bd44:	e7cd      	b.n	800bce2 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800bd46:	2002      	movs	r0, #2
}
 800bd48:	4770      	bx	lr
 800bd4a:	4b02      	ldr	r3, [pc, #8]	; (800bd54 <HAL_LTDC_ConfigLayer+0x19c>)
 800bd4c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bd50:	e7c7      	b.n	800bce2 <HAL_LTDC_ConfigLayer+0x12a>
 800bd52:	bf00      	nop
 800bd54:	0802f508 	.word	0x0802f508

0800bd58 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800bd58:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bd5c:	2b01      	cmp	r3, #1
 800bd5e:	d019      	beq.n	800bd94 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd60:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd62:	2302      	movs	r3, #2
{
 800bd64:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bd66:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd6a:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bd6c:	4c0a      	ldr	r4, [pc, #40]	; (800bd98 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bd6e:	f023 0301 	bic.w	r3, r3, #1
 800bd72:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bd74:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd76:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800bd78:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd7a:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd7e:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bd82:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800bd84:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bd88:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800bd8c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800bd90:	4618      	mov	r0, r3
}
 800bd92:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800bd94:	2002      	movs	r0, #2
}
 800bd96:	4770      	bx	lr
 800bd98:	40016800 	.word	0x40016800

0800bd9c <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800bd9c:	2800      	cmp	r0, #0
 800bd9e:	f000 81a2 	beq.w	800c0e6 <HAL_RCC_OscConfig+0x34a>
{
 800bda2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bda6:	6803      	ldr	r3, [r0, #0]
 800bda8:	07dd      	lsls	r5, r3, #31
{
 800bdaa:	b082      	sub	sp, #8
 800bdac:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bdae:	d52f      	bpl.n	800be10 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bdb0:	499e      	ldr	r1, [pc, #632]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800bdb2:	688a      	ldr	r2, [r1, #8]
 800bdb4:	f002 020c 	and.w	r2, r2, #12
 800bdb8:	2a04      	cmp	r2, #4
 800bdba:	f000 80ed 	beq.w	800bf98 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bdbe:	688a      	ldr	r2, [r1, #8]
 800bdc0:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bdc4:	2a08      	cmp	r2, #8
 800bdc6:	f000 80e3 	beq.w	800bf90 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bdca:	6863      	ldr	r3, [r4, #4]
 800bdcc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800bdd0:	f000 80ec 	beq.w	800bfac <HAL_RCC_OscConfig+0x210>
 800bdd4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800bdd8:	f000 8175 	beq.w	800c0c6 <HAL_RCC_OscConfig+0x32a>
 800bddc:	4d93      	ldr	r5, [pc, #588]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800bdde:	682a      	ldr	r2, [r5, #0]
 800bde0:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800bde4:	602a      	str	r2, [r5, #0]
 800bde6:	682a      	ldr	r2, [r5, #0]
 800bde8:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800bdec:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800bdee:	2b00      	cmp	r3, #0
 800bdf0:	f040 80e1 	bne.w	800bfb6 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bdf4:	f7fd fdb8 	bl	8009968 <HAL_GetTick>
 800bdf8:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800bdfa:	e005      	b.n	800be08 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bdfc:	f7fd fdb4 	bl	8009968 <HAL_GetTick>
 800be00:	1b80      	subs	r0, r0, r6
 800be02:	2864      	cmp	r0, #100	; 0x64
 800be04:	f200 8101 	bhi.w	800c00a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800be08:	682b      	ldr	r3, [r5, #0]
 800be0a:	039b      	lsls	r3, r3, #14
 800be0c:	d4f6      	bmi.n	800bdfc <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800be0e:	6823      	ldr	r3, [r4, #0]
 800be10:	079f      	lsls	r7, r3, #30
 800be12:	d528      	bpl.n	800be66 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800be14:	4a85      	ldr	r2, [pc, #532]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800be16:	6891      	ldr	r1, [r2, #8]
 800be18:	f011 0f0c 	tst.w	r1, #12
 800be1c:	f000 8090 	beq.w	800bf40 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800be20:	6891      	ldr	r1, [r2, #8]
 800be22:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800be26:	2908      	cmp	r1, #8
 800be28:	f000 8086 	beq.w	800bf38 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800be2c:	68e3      	ldr	r3, [r4, #12]
 800be2e:	2b00      	cmp	r3, #0
 800be30:	f000 810e 	beq.w	800c050 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800be34:	4b7e      	ldr	r3, [pc, #504]	; (800c030 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be36:	4e7d      	ldr	r6, [pc, #500]	; (800c02c <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800be38:	2201      	movs	r2, #1
 800be3a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800be3c:	f7fd fd94 	bl	8009968 <HAL_GetTick>
 800be40:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be42:	e005      	b.n	800be50 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800be44:	f7fd fd90 	bl	8009968 <HAL_GetTick>
 800be48:	1b40      	subs	r0, r0, r5
 800be4a:	2802      	cmp	r0, #2
 800be4c:	f200 80dd 	bhi.w	800c00a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800be50:	6833      	ldr	r3, [r6, #0]
 800be52:	0798      	lsls	r0, r3, #30
 800be54:	d5f6      	bpl.n	800be44 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800be56:	6833      	ldr	r3, [r6, #0]
 800be58:	6922      	ldr	r2, [r4, #16]
 800be5a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800be5e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800be62:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800be64:	6823      	ldr	r3, [r4, #0]
 800be66:	071a      	lsls	r2, r3, #28
 800be68:	d451      	bmi.n	800bf0e <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800be6a:	0758      	lsls	r0, r3, #29
 800be6c:	d52f      	bpl.n	800bece <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800be6e:	4a6f      	ldr	r2, [pc, #444]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800be70:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800be72:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800be76:	d07f      	beq.n	800bf78 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800be78:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800be7a:	4e6e      	ldr	r6, [pc, #440]	; (800c034 <HAL_RCC_OscConfig+0x298>)
 800be7c:	6833      	ldr	r3, [r6, #0]
 800be7e:	05d9      	lsls	r1, r3, #23
 800be80:	f140 80b3 	bpl.w	800bfea <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800be84:	68a3      	ldr	r3, [r4, #8]
 800be86:	2b01      	cmp	r3, #1
 800be88:	f000 80c3 	beq.w	800c012 <HAL_RCC_OscConfig+0x276>
 800be8c:	2b05      	cmp	r3, #5
 800be8e:	f000 812c 	beq.w	800c0ea <HAL_RCC_OscConfig+0x34e>
 800be92:	4e66      	ldr	r6, [pc, #408]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800be94:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800be96:	f022 0201 	bic.w	r2, r2, #1
 800be9a:	6732      	str	r2, [r6, #112]	; 0x70
 800be9c:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800be9e:	f022 0204 	bic.w	r2, r2, #4
 800bea2:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800bea4:	2b00      	cmp	r3, #0
 800bea6:	f040 80b9 	bne.w	800c01c <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800beaa:	f7fd fd5d 	bl	8009968 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800beae:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800beb2:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800beb4:	e005      	b.n	800bec2 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800beb6:	f7fd fd57 	bl	8009968 <HAL_GetTick>
 800beba:	1bc0      	subs	r0, r0, r7
 800bebc:	4540      	cmp	r0, r8
 800bebe:	f200 80a4 	bhi.w	800c00a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bec2:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800bec4:	0798      	lsls	r0, r3, #30
 800bec6:	d4f6      	bmi.n	800beb6 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800bec8:	2d00      	cmp	r5, #0
 800beca:	f040 8106 	bne.w	800c0da <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800bece:	69a0      	ldr	r0, [r4, #24]
 800bed0:	b1c8      	cbz	r0, 800bf06 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800bed2:	4d56      	ldr	r5, [pc, #344]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800bed4:	68ab      	ldr	r3, [r5, #8]
 800bed6:	f003 030c 	and.w	r3, r3, #12
 800beda:	2b08      	cmp	r3, #8
 800bedc:	f000 80c9 	beq.w	800c072 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800bee0:	4b53      	ldr	r3, [pc, #332]	; (800c030 <HAL_RCC_OscConfig+0x294>)
 800bee2:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bee4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800bee6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800bee8:	f000 8109 	beq.w	800c0fe <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800beec:	f7fd fd3c 	bl	8009968 <HAL_GetTick>
 800bef0:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bef2:	e005      	b.n	800bf00 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800bef4:	f7fd fd38 	bl	8009968 <HAL_GetTick>
 800bef8:	1b00      	subs	r0, r0, r4
 800befa:	2802      	cmp	r0, #2
 800befc:	f200 8085 	bhi.w	800c00a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800bf00:	682b      	ldr	r3, [r5, #0]
 800bf02:	019b      	lsls	r3, r3, #6
 800bf04:	d4f6      	bmi.n	800bef4 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800bf06:	2000      	movs	r0, #0
}
 800bf08:	b002      	add	sp, #8
 800bf0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800bf0e:	6963      	ldr	r3, [r4, #20]
 800bf10:	b30b      	cbz	r3, 800bf56 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800bf12:	4b47      	ldr	r3, [pc, #284]	; (800c030 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf14:	4e45      	ldr	r6, [pc, #276]	; (800c02c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800bf16:	2201      	movs	r2, #1
 800bf18:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bf1c:	f7fd fd24 	bl	8009968 <HAL_GetTick>
 800bf20:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf22:	e004      	b.n	800bf2e <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bf24:	f7fd fd20 	bl	8009968 <HAL_GetTick>
 800bf28:	1b40      	subs	r0, r0, r5
 800bf2a:	2802      	cmp	r0, #2
 800bf2c:	d86d      	bhi.n	800c00a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800bf2e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bf30:	079b      	lsls	r3, r3, #30
 800bf32:	d5f7      	bpl.n	800bf24 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800bf34:	6823      	ldr	r3, [r4, #0]
 800bf36:	e798      	b.n	800be6a <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800bf38:	6852      	ldr	r2, [r2, #4]
 800bf3a:	0256      	lsls	r6, r2, #9
 800bf3c:	f53f af76 	bmi.w	800be2c <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800bf40:	4a3a      	ldr	r2, [pc, #232]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800bf42:	6812      	ldr	r2, [r2, #0]
 800bf44:	0795      	lsls	r5, r2, #30
 800bf46:	d544      	bpl.n	800bfd2 <HAL_RCC_OscConfig+0x236>
 800bf48:	68e2      	ldr	r2, [r4, #12]
 800bf4a:	2a01      	cmp	r2, #1
 800bf4c:	d041      	beq.n	800bfd2 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800bf4e:	2001      	movs	r0, #1
}
 800bf50:	b002      	add	sp, #8
 800bf52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800bf56:	4a36      	ldr	r2, [pc, #216]	; (800c030 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf58:	4e34      	ldr	r6, [pc, #208]	; (800c02c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800bf5a:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800bf5e:	f7fd fd03 	bl	8009968 <HAL_GetTick>
 800bf62:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf64:	e004      	b.n	800bf70 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bf66:	f7fd fcff 	bl	8009968 <HAL_GetTick>
 800bf6a:	1b40      	subs	r0, r0, r5
 800bf6c:	2802      	cmp	r0, #2
 800bf6e:	d84c      	bhi.n	800c00a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bf70:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800bf72:	079f      	lsls	r7, r3, #30
 800bf74:	d4f7      	bmi.n	800bf66 <HAL_RCC_OscConfig+0x1ca>
 800bf76:	e7dd      	b.n	800bf34 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800bf78:	9301      	str	r3, [sp, #4]
 800bf7a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf7c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bf80:	6413      	str	r3, [r2, #64]	; 0x40
 800bf82:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bf84:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bf88:	9301      	str	r3, [sp, #4]
 800bf8a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800bf8c:	2501      	movs	r5, #1
 800bf8e:	e774      	b.n	800be7a <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bf90:	684a      	ldr	r2, [r1, #4]
 800bf92:	0250      	lsls	r0, r2, #9
 800bf94:	f57f af19 	bpl.w	800bdca <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800bf98:	4a24      	ldr	r2, [pc, #144]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800bf9a:	6812      	ldr	r2, [r2, #0]
 800bf9c:	0391      	lsls	r1, r2, #14
 800bf9e:	f57f af37 	bpl.w	800be10 <HAL_RCC_OscConfig+0x74>
 800bfa2:	6862      	ldr	r2, [r4, #4]
 800bfa4:	2a00      	cmp	r2, #0
 800bfa6:	f47f af33 	bne.w	800be10 <HAL_RCC_OscConfig+0x74>
 800bfaa:	e7d0      	b.n	800bf4e <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bfac:	4a1f      	ldr	r2, [pc, #124]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800bfae:	6813      	ldr	r3, [r2, #0]
 800bfb0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bfb4:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bfb6:	f7fd fcd7 	bl	8009968 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfba:	4e1c      	ldr	r6, [pc, #112]	; (800c02c <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800bfbc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfbe:	e004      	b.n	800bfca <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bfc0:	f7fd fcd2 	bl	8009968 <HAL_GetTick>
 800bfc4:	1b40      	subs	r0, r0, r5
 800bfc6:	2864      	cmp	r0, #100	; 0x64
 800bfc8:	d81f      	bhi.n	800c00a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bfca:	6833      	ldr	r3, [r6, #0]
 800bfcc:	039a      	lsls	r2, r3, #14
 800bfce:	d5f7      	bpl.n	800bfc0 <HAL_RCC_OscConfig+0x224>
 800bfd0:	e71d      	b.n	800be0e <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bfd2:	4916      	ldr	r1, [pc, #88]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800bfd4:	6920      	ldr	r0, [r4, #16]
 800bfd6:	680a      	ldr	r2, [r1, #0]
 800bfd8:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800bfdc:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800bfe0:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bfe2:	071a      	lsls	r2, r3, #28
 800bfe4:	f57f af41 	bpl.w	800be6a <HAL_RCC_OscConfig+0xce>
 800bfe8:	e791      	b.n	800bf0e <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800bfea:	6833      	ldr	r3, [r6, #0]
 800bfec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bff0:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800bff2:	f7fd fcb9 	bl	8009968 <HAL_GetTick>
 800bff6:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800bff8:	6833      	ldr	r3, [r6, #0]
 800bffa:	05da      	lsls	r2, r3, #23
 800bffc:	f53f af42 	bmi.w	800be84 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c000:	f7fd fcb2 	bl	8009968 <HAL_GetTick>
 800c004:	1bc0      	subs	r0, r0, r7
 800c006:	2802      	cmp	r0, #2
 800c008:	d9f6      	bls.n	800bff8 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800c00a:	2003      	movs	r0, #3
}
 800c00c:	b002      	add	sp, #8
 800c00e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c012:	4a06      	ldr	r2, [pc, #24]	; (800c02c <HAL_RCC_OscConfig+0x290>)
 800c014:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800c016:	f043 0301 	orr.w	r3, r3, #1
 800c01a:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c01c:	f7fd fca4 	bl	8009968 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c020:	4f02      	ldr	r7, [pc, #8]	; (800c02c <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800c022:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c024:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c028:	e00b      	b.n	800c042 <HAL_RCC_OscConfig+0x2a6>
 800c02a:	bf00      	nop
 800c02c:	40023800 	.word	0x40023800
 800c030:	42470000 	.word	0x42470000
 800c034:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c038:	f7fd fc96 	bl	8009968 <HAL_GetTick>
 800c03c:	1b80      	subs	r0, r0, r6
 800c03e:	4540      	cmp	r0, r8
 800c040:	d8e3      	bhi.n	800c00a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c042:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800c044:	079b      	lsls	r3, r3, #30
 800c046:	d5f7      	bpl.n	800c038 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800c048:	2d00      	cmp	r5, #0
 800c04a:	f43f af40 	beq.w	800bece <HAL_RCC_OscConfig+0x132>
 800c04e:	e044      	b.n	800c0da <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800c050:	4a42      	ldr	r2, [pc, #264]	; (800c15c <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c052:	4e43      	ldr	r6, [pc, #268]	; (800c160 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800c054:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800c056:	f7fd fc87 	bl	8009968 <HAL_GetTick>
 800c05a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c05c:	e004      	b.n	800c068 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c05e:	f7fd fc83 	bl	8009968 <HAL_GetTick>
 800c062:	1b40      	subs	r0, r0, r5
 800c064:	2802      	cmp	r0, #2
 800c066:	d8d0      	bhi.n	800c00a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c068:	6833      	ldr	r3, [r6, #0]
 800c06a:	0799      	lsls	r1, r3, #30
 800c06c:	d4f7      	bmi.n	800c05e <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c06e:	6823      	ldr	r3, [r4, #0]
 800c070:	e6f9      	b.n	800be66 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c072:	2801      	cmp	r0, #1
 800c074:	f43f af48 	beq.w	800bf08 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800c078:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c07a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c07c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c080:	4291      	cmp	r1, r2
 800c082:	f47f af64 	bne.w	800bf4e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c086:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c088:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c08c:	4291      	cmp	r1, r2
 800c08e:	f47f af5e 	bne.w	800bf4e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c092:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c094:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c098:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c09a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c09e:	f47f af56 	bne.w	800bf4e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c0a2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c0a4:	0852      	lsrs	r2, r2, #1
 800c0a6:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c0aa:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c0ac:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c0b0:	f47f af4d 	bne.w	800bf4e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800c0b4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c0b6:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c0ba:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800c0be:	bf14      	ite	ne
 800c0c0:	2001      	movne	r0, #1
 800c0c2:	2000      	moveq	r0, #0
 800c0c4:	e720      	b.n	800bf08 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c0c6:	4b26      	ldr	r3, [pc, #152]	; (800c160 <HAL_RCC_OscConfig+0x3c4>)
 800c0c8:	681a      	ldr	r2, [r3, #0]
 800c0ca:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c0ce:	601a      	str	r2, [r3, #0]
 800c0d0:	681a      	ldr	r2, [r3, #0]
 800c0d2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c0d6:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c0d8:	e76d      	b.n	800bfb6 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c0da:	4a21      	ldr	r2, [pc, #132]	; (800c160 <HAL_RCC_OscConfig+0x3c4>)
 800c0dc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c0de:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c0e2:	6413      	str	r3, [r2, #64]	; 0x40
 800c0e4:	e6f3      	b.n	800bece <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c0e6:	2001      	movs	r0, #1
}
 800c0e8:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c0ea:	4b1d      	ldr	r3, [pc, #116]	; (800c160 <HAL_RCC_OscConfig+0x3c4>)
 800c0ec:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c0ee:	f042 0204 	orr.w	r2, r2, #4
 800c0f2:	671a      	str	r2, [r3, #112]	; 0x70
 800c0f4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c0f6:	f042 0201 	orr.w	r2, r2, #1
 800c0fa:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c0fc:	e78e      	b.n	800c01c <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c0fe:	f7fd fc33 	bl	8009968 <HAL_GetTick>
 800c102:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c104:	e005      	b.n	800c112 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c106:	f7fd fc2f 	bl	8009968 <HAL_GetTick>
 800c10a:	1b80      	subs	r0, r0, r6
 800c10c:	2802      	cmp	r0, #2
 800c10e:	f63f af7c 	bhi.w	800c00a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c112:	682b      	ldr	r3, [r5, #0]
 800c114:	0199      	lsls	r1, r3, #6
 800c116:	d4f6      	bmi.n	800c106 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c118:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c11c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c11e:	430b      	orrs	r3, r1
 800c120:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c124:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c128:	0852      	lsrs	r2, r2, #1
 800c12a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c12e:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c130:	490a      	ldr	r1, [pc, #40]	; (800c15c <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c132:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c136:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c138:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c13a:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c13c:	f7fd fc14 	bl	8009968 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c140:	4d07      	ldr	r5, [pc, #28]	; (800c160 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c142:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c144:	e005      	b.n	800c152 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c146:	f7fd fc0f 	bl	8009968 <HAL_GetTick>
 800c14a:	1b00      	subs	r0, r0, r4
 800c14c:	2802      	cmp	r0, #2
 800c14e:	f63f af5c 	bhi.w	800c00a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c152:	682b      	ldr	r3, [r5, #0]
 800c154:	019a      	lsls	r2, r3, #6
 800c156:	d5f6      	bpl.n	800c146 <HAL_RCC_OscConfig+0x3aa>
 800c158:	e6d5      	b.n	800bf06 <HAL_RCC_OscConfig+0x16a>
 800c15a:	bf00      	nop
 800c15c:	42470000 	.word	0x42470000
 800c160:	40023800 	.word	0x40023800

0800c164 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c164:	4916      	ldr	r1, [pc, #88]	; (800c1c0 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c166:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c168:	688b      	ldr	r3, [r1, #8]
 800c16a:	f003 030c 	and.w	r3, r3, #12
 800c16e:	2b04      	cmp	r3, #4
 800c170:	d01b      	beq.n	800c1aa <HAL_RCC_GetSysClockFreq+0x46>
 800c172:	2b08      	cmp	r3, #8
 800c174:	d117      	bne.n	800c1a6 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c176:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c178:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c17a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c17c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c180:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c184:	d113      	bne.n	800c1ae <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c186:	480f      	ldr	r0, [pc, #60]	; (800c1c4 <HAL_RCC_GetSysClockFreq+0x60>)
 800c188:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c18c:	fba1 0100 	umull	r0, r1, r1, r0
 800c190:	f7f4 f8de 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c194:	4b0a      	ldr	r3, [pc, #40]	; (800c1c0 <HAL_RCC_GetSysClockFreq+0x5c>)
 800c196:	685b      	ldr	r3, [r3, #4]
 800c198:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c19c:	3301      	adds	r3, #1
 800c19e:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c1a0:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c1a4:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c1a6:	4807      	ldr	r0, [pc, #28]	; (800c1c4 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c1a8:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c1aa:	4807      	ldr	r0, [pc, #28]	; (800c1c8 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c1ac:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c1ae:	4806      	ldr	r0, [pc, #24]	; (800c1c8 <HAL_RCC_GetSysClockFreq+0x64>)
 800c1b0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c1b4:	2300      	movs	r3, #0
 800c1b6:	fba1 0100 	umull	r0, r1, r1, r0
 800c1ba:	f7f4 f8c9 	bl	8000350 <__aeabi_uldivmod>
 800c1be:	e7e9      	b.n	800c194 <HAL_RCC_GetSysClockFreq+0x30>
 800c1c0:	40023800 	.word	0x40023800
 800c1c4:	00f42400 	.word	0x00f42400
 800c1c8:	007a1200 	.word	0x007a1200

0800c1cc <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c1cc:	2800      	cmp	r0, #0
 800c1ce:	f000 8087 	beq.w	800c2e0 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c1d2:	4a48      	ldr	r2, [pc, #288]	; (800c2f4 <HAL_RCC_ClockConfig+0x128>)
 800c1d4:	6813      	ldr	r3, [r2, #0]
 800c1d6:	f003 030f 	and.w	r3, r3, #15
 800c1da:	428b      	cmp	r3, r1
{
 800c1dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1e0:	460d      	mov	r5, r1
 800c1e2:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c1e4:	d209      	bcs.n	800c1fa <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c1e6:	b2cb      	uxtb	r3, r1
 800c1e8:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c1ea:	6813      	ldr	r3, [r2, #0]
 800c1ec:	f003 030f 	and.w	r3, r3, #15
 800c1f0:	428b      	cmp	r3, r1
 800c1f2:	d002      	beq.n	800c1fa <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c1f4:	2001      	movs	r0, #1
}
 800c1f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c1fa:	6823      	ldr	r3, [r4, #0]
 800c1fc:	0798      	lsls	r0, r3, #30
 800c1fe:	d514      	bpl.n	800c22a <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c200:	0759      	lsls	r1, r3, #29
 800c202:	d504      	bpl.n	800c20e <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c204:	493c      	ldr	r1, [pc, #240]	; (800c2f8 <HAL_RCC_ClockConfig+0x12c>)
 800c206:	688a      	ldr	r2, [r1, #8]
 800c208:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c20c:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c20e:	071a      	lsls	r2, r3, #28
 800c210:	d504      	bpl.n	800c21c <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c212:	4939      	ldr	r1, [pc, #228]	; (800c2f8 <HAL_RCC_ClockConfig+0x12c>)
 800c214:	688a      	ldr	r2, [r1, #8]
 800c216:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c21a:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c21c:	4936      	ldr	r1, [pc, #216]	; (800c2f8 <HAL_RCC_ClockConfig+0x12c>)
 800c21e:	68a0      	ldr	r0, [r4, #8]
 800c220:	688a      	ldr	r2, [r1, #8]
 800c222:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c226:	4302      	orrs	r2, r0
 800c228:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c22a:	07df      	lsls	r7, r3, #31
 800c22c:	d521      	bpl.n	800c272 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c22e:	6862      	ldr	r2, [r4, #4]
 800c230:	2a01      	cmp	r2, #1
 800c232:	d057      	beq.n	800c2e4 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c234:	1e93      	subs	r3, r2, #2
 800c236:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c238:	4b2f      	ldr	r3, [pc, #188]	; (800c2f8 <HAL_RCC_ClockConfig+0x12c>)
 800c23a:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c23c:	d94d      	bls.n	800c2da <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c23e:	0799      	lsls	r1, r3, #30
 800c240:	d5d8      	bpl.n	800c1f4 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c242:	4e2d      	ldr	r6, [pc, #180]	; (800c2f8 <HAL_RCC_ClockConfig+0x12c>)
 800c244:	68b3      	ldr	r3, [r6, #8]
 800c246:	f023 0303 	bic.w	r3, r3, #3
 800c24a:	4313      	orrs	r3, r2
 800c24c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c24e:	f7fd fb8b 	bl	8009968 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c252:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c256:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c258:	e004      	b.n	800c264 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c25a:	f7fd fb85 	bl	8009968 <HAL_GetTick>
 800c25e:	1bc0      	subs	r0, r0, r7
 800c260:	4540      	cmp	r0, r8
 800c262:	d844      	bhi.n	800c2ee <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c264:	68b3      	ldr	r3, [r6, #8]
 800c266:	6862      	ldr	r2, [r4, #4]
 800c268:	f003 030c 	and.w	r3, r3, #12
 800c26c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c270:	d1f3      	bne.n	800c25a <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c272:	4a20      	ldr	r2, [pc, #128]	; (800c2f4 <HAL_RCC_ClockConfig+0x128>)
 800c274:	6813      	ldr	r3, [r2, #0]
 800c276:	f003 030f 	and.w	r3, r3, #15
 800c27a:	42ab      	cmp	r3, r5
 800c27c:	d906      	bls.n	800c28c <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c27e:	b2eb      	uxtb	r3, r5
 800c280:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c282:	6813      	ldr	r3, [r2, #0]
 800c284:	f003 030f 	and.w	r3, r3, #15
 800c288:	42ab      	cmp	r3, r5
 800c28a:	d1b3      	bne.n	800c1f4 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c28c:	6823      	ldr	r3, [r4, #0]
 800c28e:	075a      	lsls	r2, r3, #29
 800c290:	d506      	bpl.n	800c2a0 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c292:	4919      	ldr	r1, [pc, #100]	; (800c2f8 <HAL_RCC_ClockConfig+0x12c>)
 800c294:	68e0      	ldr	r0, [r4, #12]
 800c296:	688a      	ldr	r2, [r1, #8]
 800c298:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c29c:	4302      	orrs	r2, r0
 800c29e:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c2a0:	071b      	lsls	r3, r3, #28
 800c2a2:	d507      	bpl.n	800c2b4 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c2a4:	4a14      	ldr	r2, [pc, #80]	; (800c2f8 <HAL_RCC_ClockConfig+0x12c>)
 800c2a6:	6921      	ldr	r1, [r4, #16]
 800c2a8:	6893      	ldr	r3, [r2, #8]
 800c2aa:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c2ae:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c2b2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2b4:	f7ff ff56 	bl	800c164 <HAL_RCC_GetSysClockFreq>
 800c2b8:	4a0f      	ldr	r2, [pc, #60]	; (800c2f8 <HAL_RCC_ClockConfig+0x12c>)
 800c2ba:	4c10      	ldr	r4, [pc, #64]	; (800c2fc <HAL_RCC_ClockConfig+0x130>)
 800c2bc:	6892      	ldr	r2, [r2, #8]
 800c2be:	4910      	ldr	r1, [pc, #64]	; (800c300 <HAL_RCC_ClockConfig+0x134>)
 800c2c0:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c2c4:	4603      	mov	r3, r0
 800c2c6:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c2c8:	480e      	ldr	r0, [pc, #56]	; (800c304 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2ca:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c2cc:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c2ce:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c2d0:	f7f5 fc22 	bl	8001b18 <HAL_InitTick>
  return HAL_OK;
 800c2d4:	2000      	movs	r0, #0
}
 800c2d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c2da:	0198      	lsls	r0, r3, #6
 800c2dc:	d4b1      	bmi.n	800c242 <HAL_RCC_ClockConfig+0x76>
 800c2de:	e789      	b.n	800c1f4 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c2e0:	2001      	movs	r0, #1
}
 800c2e2:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c2e4:	4b04      	ldr	r3, [pc, #16]	; (800c2f8 <HAL_RCC_ClockConfig+0x12c>)
 800c2e6:	681b      	ldr	r3, [r3, #0]
 800c2e8:	039e      	lsls	r6, r3, #14
 800c2ea:	d4aa      	bmi.n	800c242 <HAL_RCC_ClockConfig+0x76>
 800c2ec:	e782      	b.n	800c1f4 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c2ee:	2003      	movs	r0, #3
 800c2f0:	e781      	b.n	800c1f6 <HAL_RCC_ClockConfig+0x2a>
 800c2f2:	bf00      	nop
 800c2f4:	40023c00 	.word	0x40023c00
 800c2f8:	40023800 	.word	0x40023800
 800c2fc:	0802f4f0 	.word	0x0802f4f0
 800c300:	20000078 	.word	0x20000078
 800c304:	20000080 	.word	0x20000080

0800c308 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c308:	4b04      	ldr	r3, [pc, #16]	; (800c31c <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c30a:	4905      	ldr	r1, [pc, #20]	; (800c320 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c30c:	689b      	ldr	r3, [r3, #8]
 800c30e:	4a05      	ldr	r2, [pc, #20]	; (800c324 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c310:	6808      	ldr	r0, [r1, #0]
 800c312:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c316:	5cd3      	ldrb	r3, [r2, r3]
}
 800c318:	40d8      	lsrs	r0, r3
 800c31a:	4770      	bx	lr
 800c31c:	40023800 	.word	0x40023800
 800c320:	20000078 	.word	0x20000078
 800c324:	0802f500 	.word	0x0802f500

0800c328 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c328:	4b0e      	ldr	r3, [pc, #56]	; (800c364 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c32a:	220f      	movs	r2, #15
 800c32c:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c32e:	689a      	ldr	r2, [r3, #8]
 800c330:	f002 0203 	and.w	r2, r2, #3
 800c334:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c336:	689a      	ldr	r2, [r3, #8]
 800c338:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c33c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c33e:	689a      	ldr	r2, [r3, #8]
 800c340:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c344:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c346:	689b      	ldr	r3, [r3, #8]
 800c348:	08db      	lsrs	r3, r3, #3
{
 800c34a:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c34c:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c350:	4c05      	ldr	r4, [pc, #20]	; (800c368 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c352:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c354:	6823      	ldr	r3, [r4, #0]
}
 800c356:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c35a:	f003 030f 	and.w	r3, r3, #15
 800c35e:	600b      	str	r3, [r1, #0]
}
 800c360:	4770      	bx	lr
 800c362:	bf00      	nop
 800c364:	40023800 	.word	0x40023800
 800c368:	40023c00 	.word	0x40023c00

0800c36c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c36c:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c36e:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c370:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c374:	b083      	sub	sp, #12
 800c376:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c378:	d111      	bne.n	800c39e <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c37a:	f013 0f0c 	tst.w	r3, #12
 800c37e:	d16f      	bne.n	800c460 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c380:	0698      	lsls	r0, r3, #26
 800c382:	f100 80c2 	bmi.w	800c50a <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c386:	f013 0310 	ands.w	r3, r3, #16
 800c38a:	f000 80bb 	beq.w	800c504 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c38e:	4b89      	ldr	r3, [pc, #548]	; (800c5b4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c390:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c394:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c398:	2000      	movs	r0, #0
}
 800c39a:	b003      	add	sp, #12
 800c39c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c39e:	4b86      	ldr	r3, [pc, #536]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3a0:	4e86      	ldr	r6, [pc, #536]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c3a2:	2200      	movs	r2, #0
 800c3a4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c3a6:	f7fd fadf 	bl	8009968 <HAL_GetTick>
 800c3aa:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3ac:	e004      	b.n	800c3b8 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c3ae:	f7fd fadb 	bl	8009968 <HAL_GetTick>
 800c3b2:	1b43      	subs	r3, r0, r5
 800c3b4:	2b02      	cmp	r3, #2
 800c3b6:	d850      	bhi.n	800c45a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c3b8:	6833      	ldr	r3, [r6, #0]
 800c3ba:	0118      	lsls	r0, r3, #4
 800c3bc:	d4f7      	bmi.n	800c3ae <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c3be:	6823      	ldr	r3, [r4, #0]
 800c3c0:	07d9      	lsls	r1, r3, #31
 800c3c2:	d506      	bpl.n	800c3d2 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c3c4:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c3c8:	0712      	lsls	r2, r2, #28
 800c3ca:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c3ce:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c3d2:	079a      	lsls	r2, r3, #30
 800c3d4:	d515      	bpl.n	800c402 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c3d6:	4979      	ldr	r1, [pc, #484]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c3d8:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c3da:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c3de:	6865      	ldr	r5, [r4, #4]
 800c3e0:	0612      	lsls	r2, r2, #24
 800c3e2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c3e6:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c3ea:	4302      	orrs	r2, r0
 800c3ec:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c3f0:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c3f4:	69e2      	ldr	r2, [r4, #28]
 800c3f6:	f020 001f 	bic.w	r0, r0, #31
 800c3fa:	3a01      	subs	r2, #1
 800c3fc:	4302      	orrs	r2, r0
 800c3fe:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c402:	065b      	lsls	r3, r3, #25
 800c404:	d509      	bpl.n	800c41a <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c406:	1d20      	adds	r0, r4, #4
 800c408:	c80b      	ldmia	r0, {r0, r1, r3}
 800c40a:	061b      	lsls	r3, r3, #24
 800c40c:	4a6b      	ldr	r2, [pc, #428]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c40e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c412:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c416:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c41a:	4b67      	ldr	r3, [pc, #412]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c41c:	4e67      	ldr	r6, [pc, #412]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c41e:	2201      	movs	r2, #1
 800c420:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c422:	f7fd faa1 	bl	8009968 <HAL_GetTick>
 800c426:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c428:	e004      	b.n	800c434 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c42a:	f7fd fa9d 	bl	8009968 <HAL_GetTick>
 800c42e:	1b40      	subs	r0, r0, r5
 800c430:	2802      	cmp	r0, #2
 800c432:	d812      	bhi.n	800c45a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c434:	6833      	ldr	r3, [r6, #0]
 800c436:	011f      	lsls	r7, r3, #4
 800c438:	d5f7      	bpl.n	800c42a <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c43a:	6823      	ldr	r3, [r4, #0]
 800c43c:	e79d      	b.n	800c37a <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c43e:	f7fd fa93 	bl	8009968 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c442:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c446:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c448:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c44a:	079b      	lsls	r3, r3, #30
 800c44c:	f100 80a5 	bmi.w	800c59a <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c450:	f7fd fa8a 	bl	8009968 <HAL_GetTick>
 800c454:	1b80      	subs	r0, r0, r6
 800c456:	42b8      	cmp	r0, r7
 800c458:	d9f6      	bls.n	800c448 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c45a:	2003      	movs	r0, #3
}
 800c45c:	b003      	add	sp, #12
 800c45e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c460:	4b55      	ldr	r3, [pc, #340]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c462:	4e56      	ldr	r6, [pc, #344]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c464:	2200      	movs	r2, #0
 800c466:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c468:	f7fd fa7e 	bl	8009968 <HAL_GetTick>
 800c46c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c46e:	e004      	b.n	800c47a <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c470:	f7fd fa7a 	bl	8009968 <HAL_GetTick>
 800c474:	1b43      	subs	r3, r0, r5
 800c476:	2b02      	cmp	r3, #2
 800c478:	d8ef      	bhi.n	800c45a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c47a:	6833      	ldr	r3, [r6, #0]
 800c47c:	0098      	lsls	r0, r3, #2
 800c47e:	d4f7      	bmi.n	800c470 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c480:	6822      	ldr	r2, [r4, #0]
 800c482:	0751      	lsls	r1, r2, #29
 800c484:	d515      	bpl.n	800c4b2 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c486:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c488:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c48c:	6920      	ldr	r0, [r4, #16]
 800c48e:	061b      	lsls	r3, r3, #24
 800c490:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c494:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c498:	430b      	orrs	r3, r1
 800c49a:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c49e:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c4a2:	6a21      	ldr	r1, [r4, #32]
 800c4a4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c4a8:	3901      	subs	r1, #1
 800c4aa:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c4ae:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c4b2:	0713      	lsls	r3, r2, #28
 800c4b4:	d514      	bpl.n	800c4e0 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c4b6:	4a41      	ldr	r2, [pc, #260]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c4b8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c4ba:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c4be:	6920      	ldr	r0, [r4, #16]
 800c4c0:	071b      	lsls	r3, r3, #28
 800c4c2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c4c6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c4ca:	430b      	orrs	r3, r1
 800c4cc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c4d0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c4d4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c4d6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c4da:	430b      	orrs	r3, r1
 800c4dc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c4e0:	4b35      	ldr	r3, [pc, #212]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4e2:	4e36      	ldr	r6, [pc, #216]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c4e4:	2201      	movs	r2, #1
 800c4e6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c4e8:	f7fd fa3e 	bl	8009968 <HAL_GetTick>
 800c4ec:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4ee:	e004      	b.n	800c4fa <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c4f0:	f7fd fa3a 	bl	8009968 <HAL_GetTick>
 800c4f4:	1b40      	subs	r0, r0, r5
 800c4f6:	2802      	cmp	r0, #2
 800c4f8:	d8af      	bhi.n	800c45a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c4fa:	6833      	ldr	r3, [r6, #0]
 800c4fc:	009f      	lsls	r7, r3, #2
 800c4fe:	d5f7      	bpl.n	800c4f0 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c500:	6823      	ldr	r3, [r4, #0]
 800c502:	e73d      	b.n	800c380 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c504:	4618      	mov	r0, r3
}
 800c506:	b003      	add	sp, #12
 800c508:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c50a:	4b2c      	ldr	r3, [pc, #176]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c50c:	4d2c      	ldr	r5, [pc, #176]	; (800c5c0 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c50e:	2200      	movs	r2, #0
 800c510:	9201      	str	r2, [sp, #4]
 800c512:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c514:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c518:	641a      	str	r2, [r3, #64]	; 0x40
 800c51a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c51c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c520:	9301      	str	r3, [sp, #4]
 800c522:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c524:	682b      	ldr	r3, [r5, #0]
 800c526:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c52a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c52c:	f7fd fa1c 	bl	8009968 <HAL_GetTick>
 800c530:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c532:	e004      	b.n	800c53e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c534:	f7fd fa18 	bl	8009968 <HAL_GetTick>
 800c538:	1b83      	subs	r3, r0, r6
 800c53a:	2b02      	cmp	r3, #2
 800c53c:	d88d      	bhi.n	800c45a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c53e:	682b      	ldr	r3, [r5, #0]
 800c540:	05d9      	lsls	r1, r3, #23
 800c542:	d5f7      	bpl.n	800c534 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c544:	4d1d      	ldr	r5, [pc, #116]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c546:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c548:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c54a:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c54e:	d111      	bne.n	800c574 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c550:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c554:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c558:	d021      	beq.n	800c59e <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c55a:	4918      	ldr	r1, [pc, #96]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c55c:	688a      	ldr	r2, [r1, #8]
 800c55e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c562:	608a      	str	r2, [r1, #8]
 800c564:	4a15      	ldr	r2, [pc, #84]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c566:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c568:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c56c:	430b      	orrs	r3, r1
 800c56e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c570:	6823      	ldr	r3, [r4, #0]
 800c572:	e708      	b.n	800c386 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c574:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c578:	4291      	cmp	r1, r2
 800c57a:	d0eb      	beq.n	800c554 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c57c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c57e:	4a0e      	ldr	r2, [pc, #56]	; (800c5b8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c580:	2101      	movs	r1, #1
 800c582:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c586:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c58a:	2100      	movs	r1, #0
 800c58c:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c590:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c592:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c594:	07da      	lsls	r2, r3, #31
 800c596:	f53f af52 	bmi.w	800c43e <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c59a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c59c:	e7d8      	b.n	800c550 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c59e:	4807      	ldr	r0, [pc, #28]	; (800c5bc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c5a0:	6882      	ldr	r2, [r0, #8]
 800c5a2:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c5a6:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c5aa:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c5ae:	430a      	orrs	r2, r1
 800c5b0:	6082      	str	r2, [r0, #8]
 800c5b2:	e7d7      	b.n	800c564 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c5b4:	42471000 	.word	0x42471000
 800c5b8:	42470000 	.word	0x42470000
 800c5bc:	40023800 	.word	0x40023800
 800c5c0:	40007000 	.word	0x40007000

0800c5c4 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c5c4:	b1f0      	cbz	r0, 800c604 <HAL_SDRAM_Init+0x40>
{
 800c5c6:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c5c8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c5cc:	460d      	mov	r5, r1
 800c5ce:	4604      	mov	r4, r0
 800c5d0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c5d4:	b18b      	cbz	r3, 800c5fa <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c5d6:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c5d8:	2302      	movs	r3, #2
 800c5da:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c5de:	f851 0b04 	ldr.w	r0, [r1], #4
 800c5e2:	f001 f9dd 	bl	800d9a0 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c5e6:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c5ea:	4629      	mov	r1, r5
 800c5ec:	f001 fa16 	bl	800da1c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c5f0:	2301      	movs	r3, #1
 800c5f2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c5f6:	2000      	movs	r0, #0
}
 800c5f8:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c5fa:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c5fe:	f7f5 fa23 	bl	8001a48 <HAL_SDRAM_MspInit>
 800c602:	e7e8      	b.n	800c5d6 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c604:	2001      	movs	r0, #1
}
 800c606:	4770      	bx	lr

0800c608 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c608:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c60a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c60e:	2b02      	cmp	r3, #2
{
 800c610:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c612:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c614:	d004      	beq.n	800c620 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c616:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c61a:	2c01      	cmp	r4, #1
 800c61c:	d001      	beq.n	800c622 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c61e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c620:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c622:	460e      	mov	r6, r1
 800c624:	2302      	movs	r3, #2
 800c626:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c62a:	6828      	ldr	r0, [r5, #0]
 800c62c:	f001 fa42 	bl	800dab4 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c630:	6833      	ldr	r3, [r6, #0]
 800c632:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c634:	bf06      	itte	eq
 800c636:	2305      	moveq	r3, #5
 800c638:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c63c:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c640:	2000      	movs	r0, #0
}
 800c642:	bd70      	pop	{r4, r5, r6, pc}

0800c644 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c644:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c646:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c64a:	2b02      	cmp	r3, #2
{
 800c64c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c64e:	b2d8      	uxtb	r0, r3
 800c650:	d005      	beq.n	800c65e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c652:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c656:	2b01      	cmp	r3, #1
 800c658:	b2dd      	uxtb	r5, r3
 800c65a:	d001      	beq.n	800c660 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c65c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c65e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c660:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c662:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c664:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c668:	f001 fa4e 	bl	800db08 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c66c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c670:	2000      	movs	r0, #0
}
 800c672:	bd38      	pop	{r3, r4, r5, pc}

0800c674 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c674:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c678:	b082      	sub	sp, #8
 800c67a:	461d      	mov	r5, r3
 800c67c:	4616      	mov	r6, r2
 800c67e:	460c      	mov	r4, r1
 800c680:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c682:	f7fd f971 	bl	8009968 <HAL_GetTick>
 800c686:	4435      	add	r5, r6
 800c688:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c68a:	f7fd f96d 	bl	8009968 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c68e:	4b27      	ldr	r3, [pc, #156]	; (800c72c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c690:	681b      	ldr	r3, [r3, #0]
 800c692:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c696:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c69a:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c69c:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c69e:	1c73      	adds	r3, r6, #1
 800c6a0:	6839      	ldr	r1, [r7, #0]
 800c6a2:	d107      	bne.n	800c6b4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c6a4:	688b      	ldr	r3, [r1, #8]
 800c6a6:	ea34 0303 	bics.w	r3, r4, r3
 800c6aa:	d0fb      	beq.n	800c6a4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c6ac:	2000      	movs	r0, #0
}
 800c6ae:	b002      	add	sp, #8
 800c6b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c6b4:	688b      	ldr	r3, [r1, #8]
 800c6b6:	ea34 0303 	bics.w	r3, r4, r3
 800c6ba:	d1f7      	bne.n	800c6ac <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c6bc:	f7fd f954 	bl	8009968 <HAL_GetTick>
 800c6c0:	eba0 0008 	sub.w	r0, r0, r8
 800c6c4:	42a8      	cmp	r0, r5
 800c6c6:	d208      	bcs.n	800c6da <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c6c8:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c6ca:	2b00      	cmp	r3, #0
      count--;
 800c6cc:	9b01      	ldr	r3, [sp, #4]
 800c6ce:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c6d2:	bf08      	it	eq
 800c6d4:	2500      	moveq	r5, #0
      count--;
 800c6d6:	9301      	str	r3, [sp, #4]
 800c6d8:	e7e1      	b.n	800c69e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6da:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c6de:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6e0:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c6e4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c6e8:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c6ea:	d013      	beq.n	800c714 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c6ec:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c6ee:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c6f2:	d107      	bne.n	800c704 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c6f4:	681a      	ldr	r2, [r3, #0]
 800c6f6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c6fa:	601a      	str	r2, [r3, #0]
 800c6fc:	681a      	ldr	r2, [r3, #0]
 800c6fe:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c702:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c704:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c706:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c708:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c70c:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c710:	2003      	movs	r0, #3
 800c712:	e7cc      	b.n	800c6ae <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c714:	68ba      	ldr	r2, [r7, #8]
 800c716:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c71a:	d002      	beq.n	800c722 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c71c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c720:	d1e4      	bne.n	800c6ec <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c722:	681a      	ldr	r2, [r3, #0]
 800c724:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c728:	601a      	str	r2, [r3, #0]
 800c72a:	e7df      	b.n	800c6ec <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c72c:	20000078 	.word	0x20000078

0800c730 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c730:	b538      	push	{r3, r4, r5, lr}
 800c732:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c734:	6842      	ldr	r2, [r0, #4]
 800c736:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c73a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c73c:	d006      	beq.n	800c74c <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c73e:	460a      	mov	r2, r1
 800c740:	2101      	movs	r1, #1
 800c742:	f7ff ff97 	bl	800c674 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c746:	b978      	cbnz	r0, 800c768 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c748:	2000      	movs	r0, #0
}
 800c74a:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c74c:	6882      	ldr	r2, [r0, #8]
 800c74e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c752:	d01c      	beq.n	800c78e <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c754:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c758:	d00c      	beq.n	800c774 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c75a:	460a      	mov	r2, r1
 800c75c:	4620      	mov	r0, r4
 800c75e:	2180      	movs	r1, #128	; 0x80
 800c760:	f7ff ff88 	bl	800c674 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c764:	2800      	cmp	r0, #0
 800c766:	d0ef      	beq.n	800c748 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c768:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c76a:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c76e:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c770:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c772:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c774:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c776:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c778:	6829      	ldr	r1, [r5, #0]
 800c77a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c77e:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c780:	2101      	movs	r1, #1
 800c782:	f7ff ff77 	bl	800c674 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c786:	2800      	cmp	r0, #0
 800c788:	d1ee      	bne.n	800c768 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c78a:	2000      	movs	r0, #0
 800c78c:	e7dd      	b.n	800c74a <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c78e:	6800      	ldr	r0, [r0, #0]
 800c790:	6802      	ldr	r2, [r0, #0]
 800c792:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c796:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c798:	460a      	mov	r2, r1
 800c79a:	4620      	mov	r0, r4
 800c79c:	2180      	movs	r1, #128	; 0x80
 800c79e:	f7ff ff69 	bl	800c674 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c7a2:	2800      	cmp	r0, #0
 800c7a4:	d0d0      	beq.n	800c748 <SPI_EndRxTransaction+0x18>
 800c7a6:	e7df      	b.n	800c768 <SPI_EndRxTransaction+0x38>

0800c7a8 <HAL_SPI_Init>:
  if (hspi == NULL)
 800c7a8:	2800      	cmp	r0, #0
 800c7aa:	d05c      	beq.n	800c866 <HAL_SPI_Init+0xbe>
{
 800c7ac:	b570      	push	{r4, r5, r6, lr}
 800c7ae:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c7b0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c7b2:	2800      	cmp	r0, #0
 800c7b4:	d047      	beq.n	800c846 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c7b6:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c7b8:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c7bc:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c7c0:	2200      	movs	r2, #0
 800c7c2:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c7c4:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c7c8:	2b00      	cmp	r3, #0
 800c7ca:	d042      	beq.n	800c852 <HAL_SPI_Init+0xaa>
 800c7cc:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c7ce:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7d0:	68a5      	ldr	r5, [r4, #8]
 800c7d2:	69a2      	ldr	r2, [r4, #24]
 800c7d4:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c7d6:	2302      	movs	r3, #2
 800c7d8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c7dc:	680b      	ldr	r3, [r1, #0]
 800c7de:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c7e2:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7e4:	6863      	ldr	r3, [r4, #4]
 800c7e6:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c7ea:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c7ee:	432b      	orrs	r3, r5
 800c7f0:	68e5      	ldr	r5, [r4, #12]
 800c7f2:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c7f6:	432b      	orrs	r3, r5
 800c7f8:	6925      	ldr	r5, [r4, #16]
 800c7fa:	f005 0502 	and.w	r5, r5, #2
 800c7fe:	432b      	orrs	r3, r5
 800c800:	6965      	ldr	r5, [r4, #20]
 800c802:	f005 0501 	and.w	r5, r5, #1
 800c806:	432b      	orrs	r3, r5
 800c808:	69e5      	ldr	r5, [r4, #28]
 800c80a:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c80e:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c812:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c816:	4333      	orrs	r3, r6
 800c818:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c81a:	0c12      	lsrs	r2, r2, #16
 800c81c:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c820:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c824:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c828:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c82c:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c82e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c830:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c832:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c834:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c836:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c83a:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c83c:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c83e:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c840:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c844:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c846:	6863      	ldr	r3, [r4, #4]
 800c848:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c84c:	d0b6      	beq.n	800c7bc <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c84e:	61e0      	str	r0, [r4, #28]
 800c850:	e7b4      	b.n	800c7bc <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c852:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c854:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c858:	f7f5 f832 	bl	80018c0 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c85c:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c860:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c864:	e7b3      	b.n	800c7ce <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c866:	2001      	movs	r0, #1
}
 800c868:	4770      	bx	lr
 800c86a:	bf00      	nop

0800c86c <HAL_SPI_Transmit>:
{
 800c86c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c870:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c872:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c876:	2801      	cmp	r0, #1
{
 800c878:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c87a:	f000 8085 	beq.w	800c988 <HAL_SPI_Transmit+0x11c>
 800c87e:	461d      	mov	r5, r3
 800c880:	2301      	movs	r3, #1
 800c882:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c886:	4688      	mov	r8, r1
 800c888:	4617      	mov	r7, r2
 800c88a:	f7fd f86d 	bl	8009968 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c88e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c892:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c894:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c896:	b2d8      	uxtb	r0, r3
 800c898:	d009      	beq.n	800c8ae <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c89a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c89c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c89e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c8a0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c8a4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c8a8:	b002      	add	sp, #8
 800c8aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c8ae:	f1b8 0f00 	cmp.w	r8, #0
 800c8b2:	d0f3      	beq.n	800c89c <HAL_SPI_Transmit+0x30>
 800c8b4:	2f00      	cmp	r7, #0
 800c8b6:	d0f1      	beq.n	800c89c <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8b8:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c8ba:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c8bc:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c8c0:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c8c2:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8c4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c8c8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c8cc:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c8d0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c8d2:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c8d4:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c8d6:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c8d8:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c8da:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c8dc:	f000 8085 	beq.w	800c9ea <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c8e0:	6803      	ldr	r3, [r0, #0]
 800c8e2:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c8e4:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c8e6:	d403      	bmi.n	800c8f0 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c8e8:	6803      	ldr	r3, [r0, #0]
 800c8ea:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c8ee:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c8f0:	68e3      	ldr	r3, [r4, #12]
 800c8f2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c8f6:	d04b      	beq.n	800c990 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c8f8:	6863      	ldr	r3, [r4, #4]
 800c8fa:	2b00      	cmp	r3, #0
 800c8fc:	f000 8097 	beq.w	800ca2e <HAL_SPI_Transmit+0x1c2>
 800c900:	2f01      	cmp	r7, #1
 800c902:	f000 8094 	beq.w	800ca2e <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c906:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c908:	b29b      	uxth	r3, r3
 800c90a:	b1ab      	cbz	r3, 800c938 <HAL_SPI_Transmit+0xcc>
 800c90c:	1c68      	adds	r0, r5, #1
 800c90e:	f040 8083 	bne.w	800ca18 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c912:	6823      	ldr	r3, [r4, #0]
 800c914:	689a      	ldr	r2, [r3, #8]
 800c916:	0791      	lsls	r1, r2, #30
 800c918:	f140 8094 	bpl.w	800ca44 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c91c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c91e:	7812      	ldrb	r2, [r2, #0]
 800c920:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c922:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c924:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c926:	3901      	subs	r1, #1
 800c928:	b289      	uxth	r1, r1
 800c92a:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c92c:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c92e:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c930:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c932:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c934:	2900      	cmp	r1, #0
 800c936:	d1ec      	bne.n	800c912 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c938:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c93a:	4b5b      	ldr	r3, [pc, #364]	; (800caa8 <HAL_SPI_Transmit+0x23c>)
 800c93c:	4a5b      	ldr	r2, [pc, #364]	; (800caac <HAL_SPI_Transmit+0x240>)
 800c93e:	681b      	ldr	r3, [r3, #0]
 800c940:	fba2 2303 	umull	r2, r3, r2, r3
 800c944:	0d5b      	lsrs	r3, r3, #21
 800c946:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c94a:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c94e:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c952:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c954:	d107      	bne.n	800c966 <HAL_SPI_Transmit+0xfa>
 800c956:	e098      	b.n	800ca8a <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c958:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c95a:	6822      	ldr	r2, [r4, #0]
      count--;
 800c95c:	3b01      	subs	r3, #1
 800c95e:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c960:	6893      	ldr	r3, [r2, #8]
 800c962:	061b      	lsls	r3, r3, #24
 800c964:	d502      	bpl.n	800c96c <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c966:	9b01      	ldr	r3, [sp, #4]
 800c968:	2b00      	cmp	r3, #0
 800c96a:	d1f5      	bne.n	800c958 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c96c:	68a3      	ldr	r3, [r4, #8]
 800c96e:	b933      	cbnz	r3, 800c97e <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c970:	6822      	ldr	r2, [r4, #0]
 800c972:	9300      	str	r3, [sp, #0]
 800c974:	68d3      	ldr	r3, [r2, #12]
 800c976:	9300      	str	r3, [sp, #0]
 800c978:	6893      	ldr	r3, [r2, #8]
 800c97a:	9300      	str	r3, [sp, #0]
 800c97c:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c97e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c980:	3800      	subs	r0, #0
 800c982:	bf18      	it	ne
 800c984:	2001      	movne	r0, #1
error:
 800c986:	e789      	b.n	800c89c <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c988:	2002      	movs	r0, #2
}
 800c98a:	b002      	add	sp, #8
 800c98c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c990:	6861      	ldr	r1, [r4, #4]
 800c992:	2900      	cmp	r1, #0
 800c994:	d176      	bne.n	800ca84 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c996:	4643      	mov	r3, r8
 800c998:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c99c:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c99e:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c9a0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9a2:	3b01      	subs	r3, #1
 800c9a4:	b29b      	uxth	r3, r3
 800c9a6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9aa:	b29b      	uxth	r3, r3
 800c9ac:	2b00      	cmp	r3, #0
 800c9ae:	d0c4      	beq.n	800c93a <HAL_SPI_Transmit+0xce>
 800c9b0:	1c6b      	adds	r3, r5, #1
 800c9b2:	d15e      	bne.n	800ca72 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9b4:	6883      	ldr	r3, [r0, #8]
 800c9b6:	079f      	lsls	r7, r3, #30
 800c9b8:	d50f      	bpl.n	800c9da <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c9ba:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c9bc:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c9c0:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c9c2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c9c4:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c9c6:	3b01      	subs	r3, #1
 800c9c8:	b29b      	uxth	r3, r3
 800c9ca:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9cc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9ce:	b29b      	uxth	r3, r3
 800c9d0:	2b00      	cmp	r3, #0
 800c9d2:	d0b1      	beq.n	800c938 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9d4:	6883      	ldr	r3, [r0, #8]
 800c9d6:	079f      	lsls	r7, r3, #30
 800c9d8:	d4ef      	bmi.n	800c9ba <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c9da:	f7fc ffc5 	bl	8009968 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c9de:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9e0:	b29b      	uxth	r3, r3
 800c9e2:	2b00      	cmp	r3, #0
 800c9e4:	d0a8      	beq.n	800c938 <HAL_SPI_Transmit+0xcc>
 800c9e6:	6820      	ldr	r0, [r4, #0]
 800c9e8:	e7e4      	b.n	800c9b4 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c9ea:	6803      	ldr	r3, [r0, #0]
 800c9ec:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c9f0:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c9f2:	6803      	ldr	r3, [r0, #0]
 800c9f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c9f8:	6003      	str	r3, [r0, #0]
 800c9fa:	e771      	b.n	800c8e0 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c9fc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c9fe:	7812      	ldrb	r2, [r2, #0]
 800ca00:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800ca02:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca04:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca06:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca08:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800ca0a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca0c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca0e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca10:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca12:	b29b      	uxth	r3, r3
 800ca14:	2b00      	cmp	r3, #0
 800ca16:	d08f      	beq.n	800c938 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca18:	6823      	ldr	r3, [r4, #0]
 800ca1a:	689a      	ldr	r2, [r3, #8]
 800ca1c:	0792      	lsls	r2, r2, #30
 800ca1e:	d4ed      	bmi.n	800c9fc <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca20:	f7fc ffa2 	bl	8009968 <HAL_GetTick>
 800ca24:	1b80      	subs	r0, r0, r6
 800ca26:	42a8      	cmp	r0, r5
 800ca28:	d3f2      	bcc.n	800ca10 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800ca2a:	2003      	movs	r0, #3
 800ca2c:	e736      	b.n	800c89c <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800ca2e:	f898 3000 	ldrb.w	r3, [r8]
 800ca32:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800ca34:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca36:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca38:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca3a:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800ca3c:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800ca3e:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800ca40:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ca42:	e760      	b.n	800c906 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca44:	f7fc ff90 	bl	8009968 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800ca48:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca4a:	b29b      	uxth	r3, r3
 800ca4c:	2b00      	cmp	r3, #0
 800ca4e:	f47f af60 	bne.w	800c912 <HAL_SPI_Transmit+0xa6>
 800ca52:	e771      	b.n	800c938 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ca54:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ca56:	f831 3b02 	ldrh.w	r3, [r1], #2
 800ca5a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800ca5c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800ca5e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ca60:	3b01      	subs	r3, #1
 800ca62:	b29b      	uxth	r3, r3
 800ca64:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800ca66:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ca68:	b29b      	uxth	r3, r3
 800ca6a:	2b00      	cmp	r3, #0
 800ca6c:	f43f af64 	beq.w	800c938 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800ca70:	6822      	ldr	r2, [r4, #0]
 800ca72:	6893      	ldr	r3, [r2, #8]
 800ca74:	0799      	lsls	r1, r3, #30
 800ca76:	d4ed      	bmi.n	800ca54 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ca78:	f7fc ff76 	bl	8009968 <HAL_GetTick>
 800ca7c:	1b80      	subs	r0, r0, r6
 800ca7e:	42a8      	cmp	r0, r5
 800ca80:	d3f1      	bcc.n	800ca66 <HAL_SPI_Transmit+0x1fa>
 800ca82:	e7d2      	b.n	800ca2a <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ca84:	2f01      	cmp	r7, #1
 800ca86:	d18f      	bne.n	800c9a8 <HAL_SPI_Transmit+0x13c>
 800ca88:	e785      	b.n	800c996 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ca8a:	4633      	mov	r3, r6
 800ca8c:	462a      	mov	r2, r5
 800ca8e:	2180      	movs	r1, #128	; 0x80
 800ca90:	4620      	mov	r0, r4
 800ca92:	f7ff fdef 	bl	800c674 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ca96:	2800      	cmp	r0, #0
 800ca98:	f43f af68 	beq.w	800c96c <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ca9c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ca9e:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800caa0:	4313      	orrs	r3, r2
 800caa2:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800caa4:	6562      	str	r2, [r4, #84]	; 0x54
 800caa6:	e761      	b.n	800c96c <HAL_SPI_Transmit+0x100>
 800caa8:	20000078 	.word	0x20000078
 800caac:	165e9f81 	.word	0x165e9f81

0800cab0 <HAL_SPI_TransmitReceive>:
{
 800cab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cab4:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800cab6:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800caba:	2801      	cmp	r0, #1
{
 800cabc:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800cabe:	f000 80ac 	beq.w	800cc1a <HAL_SPI_TransmitReceive+0x16a>
 800cac2:	461e      	mov	r6, r3
 800cac4:	2301      	movs	r3, #1
 800cac6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800caca:	4690      	mov	r8, r2
 800cacc:	460f      	mov	r7, r1
 800cace:	f7fc ff4b 	bl	8009968 <HAL_GetTick>
 800cad2:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800cad4:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800cad8:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cada:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800cadc:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800cade:	d011      	beq.n	800cb04 <HAL_SPI_TransmitReceive+0x54>
 800cae0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800cae4:	d009      	beq.n	800cafa <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800cae6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cae8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800caea:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800caec:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800caf0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800caf4:	b002      	add	sp, #8
 800caf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800cafa:	68a1      	ldr	r1, [r4, #8]
 800cafc:	2900      	cmp	r1, #0
 800cafe:	d1f2      	bne.n	800cae6 <HAL_SPI_TransmitReceive+0x36>
 800cb00:	2a04      	cmp	r2, #4
 800cb02:	d1f0      	bne.n	800cae6 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800cb04:	2f00      	cmp	r7, #0
 800cb06:	f000 808c 	beq.w	800cc22 <HAL_SPI_TransmitReceive+0x172>
 800cb0a:	f1b8 0f00 	cmp.w	r8, #0
 800cb0e:	f000 8088 	beq.w	800cc22 <HAL_SPI_TransmitReceive+0x172>
 800cb12:	2e00      	cmp	r6, #0
 800cb14:	f000 8085 	beq.w	800cc22 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cb18:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800cb1c:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800cb20:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800cb22:	bf1c      	itt	ne
 800cb24:	2205      	movne	r2, #5
 800cb26:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cb2a:	2200      	movs	r2, #0
 800cb2c:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800cb2e:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb32:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800cb34:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800cb36:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb38:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800cb3a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb3c:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800cb3e:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800cb40:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cb42:	d403      	bmi.n	800cb4c <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800cb44:	6811      	ldr	r1, [r2, #0]
 800cb46:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cb4a:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800cb4c:	68e1      	ldr	r1, [r4, #12]
 800cb4e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800cb52:	f000 809e 	beq.w	800cc92 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cb56:	2b00      	cmp	r3, #0
 800cb58:	f000 8091 	beq.w	800cc7e <HAL_SPI_TransmitReceive+0x1ce>
 800cb5c:	2e01      	cmp	r6, #1
 800cb5e:	f000 808e 	beq.w	800cc7e <HAL_SPI_TransmitReceive+0x1ce>
 800cb62:	9b08      	ldr	r3, [sp, #32]
 800cb64:	3301      	adds	r3, #1
        txallowed = 1U;
 800cb66:	f04f 0601 	mov.w	r6, #1
 800cb6a:	d028      	beq.n	800cbbe <HAL_SPI_TransmitReceive+0x10e>
 800cb6c:	e05b      	b.n	800cc26 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cb6e:	6821      	ldr	r1, [r4, #0]
 800cb70:	688b      	ldr	r3, [r1, #8]
 800cb72:	0798      	lsls	r0, r3, #30
 800cb74:	d50f      	bpl.n	800cb96 <HAL_SPI_TransmitReceive+0xe6>
 800cb76:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb78:	b29b      	uxth	r3, r3
 800cb7a:	b163      	cbz	r3, 800cb96 <HAL_SPI_TransmitReceive+0xe6>
 800cb7c:	b15e      	cbz	r6, 800cb96 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cb7e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cb80:	781b      	ldrb	r3, [r3, #0]
 800cb82:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cb84:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cb86:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cb88:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800cb8a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cb8c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cb8e:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cb90:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cb92:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cb94:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cb96:	688a      	ldr	r2, [r1, #8]
 800cb98:	f012 0201 	ands.w	r2, r2, #1
 800cb9c:	d00d      	beq.n	800cbba <HAL_SPI_TransmitReceive+0x10a>
 800cb9e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cba0:	b29b      	uxth	r3, r3
 800cba2:	b153      	cbz	r3, 800cbba <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cba4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cba6:	68c9      	ldr	r1, [r1, #12]
 800cba8:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800cbaa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cbac:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cbae:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800cbb0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cbb2:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800cbb4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cbb6:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cbb8:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cbba:	f7fc fed5 	bl	8009968 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cbbe:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cbc0:	b292      	uxth	r2, r2
 800cbc2:	2a00      	cmp	r2, #0
 800cbc4:	d1d3      	bne.n	800cb6e <HAL_SPI_TransmitReceive+0xbe>
 800cbc6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cbc8:	b29b      	uxth	r3, r3
 800cbca:	2b00      	cmp	r3, #0
 800cbcc:	d1cf      	bne.n	800cb6e <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbce:	4b79      	ldr	r3, [pc, #484]	; (800cdb4 <HAL_SPI_TransmitReceive+0x304>)
 800cbd0:	4a79      	ldr	r2, [pc, #484]	; (800cdb8 <HAL_SPI_TransmitReceive+0x308>)
 800cbd2:	681b      	ldr	r3, [r3, #0]
 800cbd4:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbd8:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbda:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800cbde:	0d5b      	lsrs	r3, r3, #21
 800cbe0:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbe4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cbe8:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cbea:	d107      	bne.n	800cbfc <HAL_SPI_TransmitReceive+0x14c>
 800cbec:	e0d2      	b.n	800cd94 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800cbee:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cbf0:	6822      	ldr	r2, [r4, #0]
      count--;
 800cbf2:	3b01      	subs	r3, #1
 800cbf4:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cbf6:	6893      	ldr	r3, [r2, #8]
 800cbf8:	061b      	lsls	r3, r3, #24
 800cbfa:	d502      	bpl.n	800cc02 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800cbfc:	9b01      	ldr	r3, [sp, #4]
 800cbfe:	2b00      	cmp	r3, #0
 800cc00:	d1f5      	bne.n	800cbee <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cc02:	68a0      	ldr	r0, [r4, #8]
 800cc04:	2800      	cmp	r0, #0
 800cc06:	f040 8082 	bne.w	800cd0e <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cc0a:	6823      	ldr	r3, [r4, #0]
 800cc0c:	9000      	str	r0, [sp, #0]
 800cc0e:	68da      	ldr	r2, [r3, #12]
 800cc10:	9200      	str	r2, [sp, #0]
 800cc12:	689b      	ldr	r3, [r3, #8]
 800cc14:	9300      	str	r3, [sp, #0]
 800cc16:	9b00      	ldr	r3, [sp, #0]
 800cc18:	e766      	b.n	800cae8 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800cc1a:	2002      	movs	r0, #2
}
 800cc1c:	b002      	add	sp, #8
 800cc1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800cc22:	2001      	movs	r0, #1
 800cc24:	e760      	b.n	800cae8 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cc26:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc28:	b29b      	uxth	r3, r3
 800cc2a:	b91b      	cbnz	r3, 800cc34 <HAL_SPI_TransmitReceive+0x184>
 800cc2c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc2e:	b29b      	uxth	r3, r3
 800cc30:	2b00      	cmp	r3, #0
 800cc32:	d0cc      	beq.n	800cbce <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cc34:	6822      	ldr	r2, [r4, #0]
 800cc36:	6893      	ldr	r3, [r2, #8]
 800cc38:	0799      	lsls	r1, r3, #30
 800cc3a:	d50f      	bpl.n	800cc5c <HAL_SPI_TransmitReceive+0x1ac>
 800cc3c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc3e:	b29b      	uxth	r3, r3
 800cc40:	b163      	cbz	r3, 800cc5c <HAL_SPI_TransmitReceive+0x1ac>
 800cc42:	b15e      	cbz	r6, 800cc5c <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cc44:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cc46:	781b      	ldrb	r3, [r3, #0]
 800cc48:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800cc4a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cc4c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc4e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cc50:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cc52:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800cc54:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc56:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800cc58:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cc5a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc5c:	6893      	ldr	r3, [r2, #8]
 800cc5e:	f013 0301 	ands.w	r3, r3, #1
 800cc62:	d004      	beq.n	800cc6e <HAL_SPI_TransmitReceive+0x1be>
 800cc64:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cc66:	b289      	uxth	r1, r1
 800cc68:	2900      	cmp	r1, #0
 800cc6a:	f040 8087 	bne.w	800cd7c <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cc6e:	f7fc fe7b 	bl	8009968 <HAL_GetTick>
 800cc72:	9b08      	ldr	r3, [sp, #32]
 800cc74:	1b40      	subs	r0, r0, r5
 800cc76:	4298      	cmp	r0, r3
 800cc78:	d3d5      	bcc.n	800cc26 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800cc7a:	2003      	movs	r0, #3
 800cc7c:	e734      	b.n	800cae8 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cc7e:	783b      	ldrb	r3, [r7, #0]
 800cc80:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800cc82:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc84:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc86:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc88:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cc8a:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cc8c:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cc8e:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cc90:	e767      	b.n	800cb62 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cc92:	2b00      	cmp	r3, #0
 800cc94:	d13d      	bne.n	800cd12 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cc96:	f837 3b02 	ldrh.w	r3, [r7], #2
 800cc9a:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800cc9c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cc9e:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cca0:	3b01      	subs	r3, #1
 800cca2:	b29b      	uxth	r3, r3
 800cca4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cca6:	9b08      	ldr	r3, [sp, #32]
 800cca8:	3301      	adds	r3, #1
{
 800ccaa:	f04f 0601 	mov.w	r6, #1
 800ccae:	d025      	beq.n	800ccfc <HAL_SPI_TransmitReceive+0x24c>
 800ccb0:	e032      	b.n	800cd18 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800ccb2:	6823      	ldr	r3, [r4, #0]
 800ccb4:	689a      	ldr	r2, [r3, #8]
 800ccb6:	0792      	lsls	r2, r2, #30
 800ccb8:	d50d      	bpl.n	800ccd6 <HAL_SPI_TransmitReceive+0x226>
 800ccba:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ccbc:	b292      	uxth	r2, r2
 800ccbe:	b152      	cbz	r2, 800ccd6 <HAL_SPI_TransmitReceive+0x226>
 800ccc0:	b14e      	cbz	r6, 800ccd6 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800ccc2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ccc4:	f831 2b02 	ldrh.w	r2, [r1], #2
 800ccc8:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800ccca:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cccc:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800ccce:	3a01      	subs	r2, #1
 800ccd0:	b292      	uxth	r2, r2
        txallowed = 0U;
 800ccd2:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800ccd4:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800ccd6:	689a      	ldr	r2, [r3, #8]
 800ccd8:	f012 0201 	ands.w	r2, r2, #1
 800ccdc:	d00c      	beq.n	800ccf8 <HAL_SPI_TransmitReceive+0x248>
 800ccde:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cce0:	b289      	uxth	r1, r1
 800cce2:	b149      	cbz	r1, 800ccf8 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cce4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cce6:	68db      	ldr	r3, [r3, #12]
 800cce8:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800ccec:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ccee:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ccf0:	3b01      	subs	r3, #1
 800ccf2:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800ccf4:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800ccf6:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800ccf8:	f7fc fe36 	bl	8009968 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800ccfc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ccfe:	b29b      	uxth	r3, r3
 800cd00:	2b00      	cmp	r3, #0
 800cd02:	d1d6      	bne.n	800ccb2 <HAL_SPI_TransmitReceive+0x202>
 800cd04:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cd06:	b29b      	uxth	r3, r3
 800cd08:	2b00      	cmp	r3, #0
 800cd0a:	d1d2      	bne.n	800ccb2 <HAL_SPI_TransmitReceive+0x202>
 800cd0c:	e75f      	b.n	800cbce <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800cd0e:	2000      	movs	r0, #0
 800cd10:	e6ea      	b.n	800cae8 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cd12:	2e01      	cmp	r6, #1
 800cd14:	d1c7      	bne.n	800cca6 <HAL_SPI_TransmitReceive+0x1f6>
 800cd16:	e7be      	b.n	800cc96 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cd18:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd1a:	b29b      	uxth	r3, r3
 800cd1c:	b923      	cbnz	r3, 800cd28 <HAL_SPI_TransmitReceive+0x278>
 800cd1e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cd20:	b29b      	uxth	r3, r3
 800cd22:	2b00      	cmp	r3, #0
 800cd24:	f43f af53 	beq.w	800cbce <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cd28:	6822      	ldr	r2, [r4, #0]
 800cd2a:	6893      	ldr	r3, [r2, #8]
 800cd2c:	079f      	lsls	r7, r3, #30
 800cd2e:	d50d      	bpl.n	800cd4c <HAL_SPI_TransmitReceive+0x29c>
 800cd30:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cd32:	b29b      	uxth	r3, r3
 800cd34:	b153      	cbz	r3, 800cd4c <HAL_SPI_TransmitReceive+0x29c>
 800cd36:	b14e      	cbz	r6, 800cd4c <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cd38:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cd3a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cd3e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cd40:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cd42:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cd44:	3b01      	subs	r3, #1
 800cd46:	b29b      	uxth	r3, r3
 800cd48:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cd4a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cd4c:	6893      	ldr	r3, [r2, #8]
 800cd4e:	f013 0301 	ands.w	r3, r3, #1
 800cd52:	d00c      	beq.n	800cd6e <HAL_SPI_TransmitReceive+0x2be>
 800cd54:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cd56:	b289      	uxth	r1, r1
 800cd58:	b149      	cbz	r1, 800cd6e <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cd5a:	68d1      	ldr	r1, [r2, #12]
 800cd5c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cd5e:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800cd62:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800cd64:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cd66:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd68:	3b01      	subs	r3, #1
 800cd6a:	b29b      	uxth	r3, r3
 800cd6c:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cd6e:	f7fc fdfb 	bl	8009968 <HAL_GetTick>
 800cd72:	9b08      	ldr	r3, [sp, #32]
 800cd74:	1b40      	subs	r0, r0, r5
 800cd76:	4298      	cmp	r0, r3
 800cd78:	d3ce      	bcc.n	800cd18 <HAL_SPI_TransmitReceive+0x268>
 800cd7a:	e77e      	b.n	800cc7a <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cd7c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cd7e:	68d2      	ldr	r2, [r2, #12]
 800cd80:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800cd82:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cd84:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd86:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800cd88:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800cd8a:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800cd8c:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cd8e:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cd90:	461e      	mov	r6, r3
 800cd92:	e76c      	b.n	800cc6e <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800cd94:	9a08      	ldr	r2, [sp, #32]
 800cd96:	462b      	mov	r3, r5
 800cd98:	2180      	movs	r1, #128	; 0x80
 800cd9a:	4620      	mov	r0, r4
 800cd9c:	f7ff fc6a 	bl	800c674 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800cda0:	2800      	cmp	r0, #0
 800cda2:	f43f af2e 	beq.w	800cc02 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cda6:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cda8:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cdaa:	4313      	orrs	r3, r2
 800cdac:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800cdae:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cdb0:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800cdb2:	e699      	b.n	800cae8 <HAL_SPI_TransmitReceive+0x38>
 800cdb4:	20000078 	.word	0x20000078
 800cdb8:	165e9f81 	.word	0x165e9f81

0800cdbc <HAL_SPI_Receive>:
{
 800cdbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cdc0:	6846      	ldr	r6, [r0, #4]
 800cdc2:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800cdc6:	b082      	sub	sp, #8
 800cdc8:	4604      	mov	r4, r0
 800cdca:	4690      	mov	r8, r2
 800cdcc:	461d      	mov	r5, r3
 800cdce:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cdd0:	d06e      	beq.n	800ceb0 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800cdd2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800cdd6:	2b01      	cmp	r3, #1
 800cdd8:	d076      	beq.n	800cec8 <HAL_SPI_Receive+0x10c>
 800cdda:	2301      	movs	r3, #1
 800cddc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cde0:	f7fc fdc2 	bl	8009968 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cde4:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800cde8:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800cdec:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cdee:	fa5f f08c 	uxtb.w	r0, ip
 800cdf2:	d009      	beq.n	800ce08 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800cdf4:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cdf6:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cdf8:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cdfa:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cdfe:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ce02:	b002      	add	sp, #8
 800ce04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800ce08:	2f00      	cmp	r7, #0
 800ce0a:	d0f4      	beq.n	800cdf6 <HAL_SPI_Receive+0x3a>
 800ce0c:	f1b8 0f00 	cmp.w	r8, #0
 800ce10:	d0f1      	beq.n	800cdf6 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce12:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800ce14:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce16:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800ce1a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800ce1c:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce20:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800ce24:	f04f 0104 	mov.w	r1, #4
 800ce28:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800ce2c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ce30:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800ce32:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800ce34:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800ce36:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800ce3a:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800ce3c:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ce3e:	d107      	bne.n	800ce50 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800ce40:	6811      	ldr	r1, [r2, #0]
 800ce42:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ce46:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800ce48:	6811      	ldr	r1, [r2, #0]
 800ce4a:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800ce4e:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ce50:	6811      	ldr	r1, [r2, #0]
 800ce52:	0648      	lsls	r0, r1, #25
 800ce54:	d403      	bmi.n	800ce5e <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800ce56:	6811      	ldr	r1, [r2, #0]
 800ce58:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ce5c:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800ce5e:	68e1      	ldr	r1, [r4, #12]
 800ce60:	2900      	cmp	r1, #0
 800ce62:	d054      	beq.n	800cf0e <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800ce64:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800ce66:	b289      	uxth	r1, r1
 800ce68:	b1a9      	cbz	r1, 800ce96 <HAL_SPI_Receive+0xda>
 800ce6a:	1c69      	adds	r1, r5, #1
 800ce6c:	d13e      	bne.n	800ceec <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ce6e:	6893      	ldr	r3, [r2, #8]
 800ce70:	07db      	lsls	r3, r3, #31
 800ce72:	d544      	bpl.n	800cefe <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ce74:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ce76:	68d1      	ldr	r1, [r2, #12]
 800ce78:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800ce7c:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ce80:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce82:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ce86:	fa1f fc8c 	uxth.w	ip, ip
 800ce8a:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ce8e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce90:	b29b      	uxth	r3, r3
 800ce92:	2b00      	cmp	r3, #0
 800ce94:	d1eb      	bne.n	800ce6e <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800ce96:	4632      	mov	r2, r6
 800ce98:	4629      	mov	r1, r5
 800ce9a:	4620      	mov	r0, r4
 800ce9c:	f7ff fc48 	bl	800c730 <SPI_EndRxTransaction>
 800cea0:	b108      	cbz	r0, 800cea6 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cea2:	2320      	movs	r3, #32
 800cea4:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cea6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800cea8:	3800      	subs	r0, #0
 800ceaa:	bf18      	it	ne
 800ceac:	2001      	movne	r0, #1
error :
 800ceae:	e7a2      	b.n	800cdf6 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ceb0:	6883      	ldr	r3, [r0, #8]
 800ceb2:	2b00      	cmp	r3, #0
 800ceb4:	d18d      	bne.n	800cdd2 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ceb6:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800ceb8:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800ceba:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cebc:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cec0:	460a      	mov	r2, r1
 800cec2:	f7ff fdf5 	bl	800cab0 <HAL_SPI_TransmitReceive>
 800cec6:	e79c      	b.n	800ce02 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800cec8:	2002      	movs	r0, #2
}
 800ceca:	b002      	add	sp, #8
 800cecc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ced0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ced2:	68db      	ldr	r3, [r3, #12]
 800ced4:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800ced8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ceda:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cedc:	3b01      	subs	r3, #1
 800cede:	b29b      	uxth	r3, r3
 800cee0:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cee2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cee4:	b29b      	uxth	r3, r3
 800cee6:	2b00      	cmp	r3, #0
 800cee8:	d0d5      	beq.n	800ce96 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ceea:	6823      	ldr	r3, [r4, #0]
 800ceec:	689a      	ldr	r2, [r3, #8]
 800ceee:	07d2      	lsls	r2, r2, #31
 800cef0:	d4ee      	bmi.n	800ced0 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cef2:	f7fc fd39 	bl	8009968 <HAL_GetTick>
 800cef6:	1b80      	subs	r0, r0, r6
 800cef8:	42a8      	cmp	r0, r5
 800cefa:	d243      	bcs.n	800cf84 <HAL_SPI_Receive+0x1c8>
 800cefc:	e7f1      	b.n	800cee2 <HAL_SPI_Receive+0x126>
 800cefe:	f7fc fd33 	bl	8009968 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cf02:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf04:	b29b      	uxth	r3, r3
 800cf06:	2b00      	cmp	r3, #0
 800cf08:	d0c5      	beq.n	800ce96 <HAL_SPI_Receive+0xda>
 800cf0a:	6822      	ldr	r2, [r4, #0]
 800cf0c:	e7af      	b.n	800ce6e <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800cf0e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800cf10:	b292      	uxth	r2, r2
 800cf12:	2a00      	cmp	r2, #0
 800cf14:	d0bf      	beq.n	800ce96 <HAL_SPI_Receive+0xda>
 800cf16:	1c6f      	adds	r7, r5, #1
 800cf18:	d013      	beq.n	800cf42 <HAL_SPI_Receive+0x186>
 800cf1a:	e02b      	b.n	800cf74 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cf1c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf1e:	7b1b      	ldrb	r3, [r3, #12]
 800cf20:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cf22:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf26:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf28:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cf2c:	fa1f fc8c 	uxth.w	ip, ip
 800cf30:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf34:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf36:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800cf38:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf3a:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800cf3c:	2b00      	cmp	r3, #0
 800cf3e:	d0aa      	beq.n	800ce96 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf40:	6823      	ldr	r3, [r4, #0]
 800cf42:	689a      	ldr	r2, [r3, #8]
 800cf44:	07d0      	lsls	r0, r2, #31
 800cf46:	d4e9      	bmi.n	800cf1c <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf48:	f7fc fd0e 	bl	8009968 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800cf4c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf4e:	b29b      	uxth	r3, r3
 800cf50:	2b00      	cmp	r3, #0
 800cf52:	d1f5      	bne.n	800cf40 <HAL_SPI_Receive+0x184>
 800cf54:	e79f      	b.n	800ce96 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800cf56:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cf58:	7b1b      	ldrb	r3, [r3, #12]
 800cf5a:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800cf5c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf5e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf60:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf62:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800cf64:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cf66:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cf68:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cf6a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cf6c:	b29b      	uxth	r3, r3
 800cf6e:	2b00      	cmp	r3, #0
 800cf70:	d091      	beq.n	800ce96 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cf72:	6823      	ldr	r3, [r4, #0]
 800cf74:	689a      	ldr	r2, [r3, #8]
 800cf76:	07d1      	lsls	r1, r2, #31
 800cf78:	d4ed      	bmi.n	800cf56 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800cf7a:	f7fc fcf5 	bl	8009968 <HAL_GetTick>
 800cf7e:	1b80      	subs	r0, r0, r6
 800cf80:	42a8      	cmp	r0, r5
 800cf82:	d3f2      	bcc.n	800cf6a <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800cf84:	2003      	movs	r0, #3
 800cf86:	e736      	b.n	800cdf6 <HAL_SPI_Receive+0x3a>

0800cf88 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800cf88:	2800      	cmp	r0, #0
 800cf8a:	f000 8087 	beq.w	800d09c <HAL_TIM_Base_Init+0x114>
{
 800cf8e:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800cf90:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cf94:	4604      	mov	r4, r0
 800cf96:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cf9a:	2b00      	cmp	r3, #0
 800cf9c:	d079      	beq.n	800d092 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cf9e:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfa0:	493f      	ldr	r1, [pc, #252]	; (800d0a0 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800cfa2:	2302      	movs	r3, #2
 800cfa4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfa8:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800cfaa:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cfac:	d05d      	beq.n	800d06a <HAL_TIM_Base_Init+0xe2>
 800cfae:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800cfb2:	d031      	beq.n	800d018 <HAL_TIM_Base_Init+0x90>
 800cfb4:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800cfb8:	428a      	cmp	r2, r1
 800cfba:	d02d      	beq.n	800d018 <HAL_TIM_Base_Init+0x90>
 800cfbc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfc0:	428a      	cmp	r2, r1
 800cfc2:	d029      	beq.n	800d018 <HAL_TIM_Base_Init+0x90>
 800cfc4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfc8:	428a      	cmp	r2, r1
 800cfca:	d025      	beq.n	800d018 <HAL_TIM_Base_Init+0x90>
 800cfcc:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800cfd0:	428a      	cmp	r2, r1
 800cfd2:	d04a      	beq.n	800d06a <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800cfd4:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800cfd8:	428a      	cmp	r2, r1
 800cfda:	d021      	beq.n	800d020 <HAL_TIM_Base_Init+0x98>
 800cfdc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfe0:	428a      	cmp	r2, r1
 800cfe2:	d01d      	beq.n	800d020 <HAL_TIM_Base_Init+0x98>
 800cfe4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cfe8:	428a      	cmp	r2, r1
 800cfea:	d019      	beq.n	800d020 <HAL_TIM_Base_Init+0x98>
 800cfec:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800cff0:	428a      	cmp	r2, r1
 800cff2:	d015      	beq.n	800d020 <HAL_TIM_Base_Init+0x98>
 800cff4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cff8:	428a      	cmp	r2, r1
 800cffa:	d011      	beq.n	800d020 <HAL_TIM_Base_Init+0x98>
 800cffc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d000:	428a      	cmp	r2, r1
 800d002:	d00d      	beq.n	800d020 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d004:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d006:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d008:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d00c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d00e:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800d010:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d012:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d014:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d016:	e010      	b.n	800d03a <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d018:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d01a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d01e:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d020:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d022:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d024:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d028:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d02a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d02e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d030:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d032:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d034:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d036:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d038:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800d03a:	2301      	movs	r3, #1
 800d03c:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d03e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d042:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d046:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d04a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d04e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d052:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d056:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d05a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d05e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d062:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d066:	2000      	movs	r0, #0
}
 800d068:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d06a:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d06c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d06e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d072:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d074:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d078:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d07a:	69a1      	ldr	r1, [r4, #24]
 800d07c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d080:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d082:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d084:	68e3      	ldr	r3, [r4, #12]
 800d086:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d088:	6863      	ldr	r3, [r4, #4]
 800d08a:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d08c:	6963      	ldr	r3, [r4, #20]
 800d08e:	6313      	str	r3, [r2, #48]	; 0x30
 800d090:	e7d3      	b.n	800d03a <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d092:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800d096:	f7f4 fc4f 	bl	8001938 <HAL_TIM_Base_MspInit>
 800d09a:	e780      	b.n	800cf9e <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800d09c:	2001      	movs	r0, #1
}
 800d09e:	4770      	bx	lr
 800d0a0:	40010000 	.word	0x40010000

0800d0a4 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800d0a4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d0a8:	2b01      	cmp	r3, #1
 800d0aa:	d12f      	bne.n	800d10c <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0ac:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0ae:	4919      	ldr	r1, [pc, #100]	; (800d114 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d0b0:	2202      	movs	r2, #2
 800d0b2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0b6:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0b8:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800d0ba:	f042 0201 	orr.w	r2, r2, #1
 800d0be:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d0c0:	d019      	beq.n	800d0f6 <HAL_TIM_Base_Start_IT+0x52>
 800d0c2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d0c6:	d016      	beq.n	800d0f6 <HAL_TIM_Base_Start_IT+0x52>
 800d0c8:	4a13      	ldr	r2, [pc, #76]	; (800d118 <HAL_TIM_Base_Start_IT+0x74>)
 800d0ca:	4293      	cmp	r3, r2
 800d0cc:	d013      	beq.n	800d0f6 <HAL_TIM_Base_Start_IT+0x52>
 800d0ce:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0d2:	4293      	cmp	r3, r2
 800d0d4:	d00f      	beq.n	800d0f6 <HAL_TIM_Base_Start_IT+0x52>
 800d0d6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d0da:	4293      	cmp	r3, r2
 800d0dc:	d00b      	beq.n	800d0f6 <HAL_TIM_Base_Start_IT+0x52>
 800d0de:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d0e2:	4293      	cmp	r3, r2
 800d0e4:	d007      	beq.n	800d0f6 <HAL_TIM_Base_Start_IT+0x52>
 800d0e6:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d0ea:	4293      	cmp	r3, r2
 800d0ec:	d003      	beq.n	800d0f6 <HAL_TIM_Base_Start_IT+0x52>
 800d0ee:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d0f2:	4293      	cmp	r3, r2
 800d0f4:	d104      	bne.n	800d100 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d0f6:	689a      	ldr	r2, [r3, #8]
 800d0f8:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d0fc:	2a06      	cmp	r2, #6
 800d0fe:	d007      	beq.n	800d110 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d100:	681a      	ldr	r2, [r3, #0]
 800d102:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d106:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d108:	601a      	str	r2, [r3, #0]
 800d10a:	4770      	bx	lr
    return HAL_ERROR;
 800d10c:	2001      	movs	r0, #1
 800d10e:	4770      	bx	lr
  return HAL_OK;
 800d110:	2000      	movs	r0, #0
}
 800d112:	4770      	bx	lr
 800d114:	40010000 	.word	0x40010000
 800d118:	40000400 	.word	0x40000400

0800d11c <HAL_TIM_PWM_MspInit>:
 800d11c:	4770      	bx	lr
 800d11e:	bf00      	nop

0800d120 <HAL_TIM_PWM_Init>:
  if (htim == NULL)
 800d120:	2800      	cmp	r0, #0
 800d122:	f000 8087 	beq.w	800d234 <HAL_TIM_PWM_Init+0x114>
{
 800d126:	b510      	push	{r4, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
 800d128:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800d12c:	4604      	mov	r4, r0
 800d12e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800d132:	2b00      	cmp	r3, #0
 800d134:	d079      	beq.n	800d22a <HAL_TIM_PWM_Init+0x10a>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800d136:	6822      	ldr	r2, [r4, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d138:	493f      	ldr	r1, [pc, #252]	; (800d238 <HAL_TIM_PWM_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800d13a:	2302      	movs	r3, #2
 800d13c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d140:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800d142:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800d144:	d05d      	beq.n	800d202 <HAL_TIM_PWM_Init+0xe2>
 800d146:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800d14a:	d031      	beq.n	800d1b0 <HAL_TIM_PWM_Init+0x90>
 800d14c:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d150:	428a      	cmp	r2, r1
 800d152:	d02d      	beq.n	800d1b0 <HAL_TIM_PWM_Init+0x90>
 800d154:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d158:	428a      	cmp	r2, r1
 800d15a:	d029      	beq.n	800d1b0 <HAL_TIM_PWM_Init+0x90>
 800d15c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d160:	428a      	cmp	r2, r1
 800d162:	d025      	beq.n	800d1b0 <HAL_TIM_PWM_Init+0x90>
 800d164:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800d168:	428a      	cmp	r2, r1
 800d16a:	d04a      	beq.n	800d202 <HAL_TIM_PWM_Init+0xe2>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800d16c:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800d170:	428a      	cmp	r2, r1
 800d172:	d021      	beq.n	800d1b8 <HAL_TIM_PWM_Init+0x98>
 800d174:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d178:	428a      	cmp	r2, r1
 800d17a:	d01d      	beq.n	800d1b8 <HAL_TIM_PWM_Init+0x98>
 800d17c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d180:	428a      	cmp	r2, r1
 800d182:	d019      	beq.n	800d1b8 <HAL_TIM_PWM_Init+0x98>
 800d184:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800d188:	428a      	cmp	r2, r1
 800d18a:	d015      	beq.n	800d1b8 <HAL_TIM_PWM_Init+0x98>
 800d18c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d190:	428a      	cmp	r2, r1
 800d192:	d011      	beq.n	800d1b8 <HAL_TIM_PWM_Init+0x98>
 800d194:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d198:	428a      	cmp	r2, r1
 800d19a:	d00d      	beq.n	800d1b8 <HAL_TIM_PWM_Init+0x98>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d19c:	69a0      	ldr	r0, [r4, #24]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d19e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1a0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d1a4:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800d1a6:	6013      	str	r3, [r2, #0]
  TIMx->PSC = Structure->Prescaler;
 800d1a8:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d1aa:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d1ac:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800d1ae:	e010      	b.n	800d1d2 <HAL_TIM_PWM_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800d1b0:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d1b2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d1b6:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d1b8:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1ba:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800d1bc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d1c0:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1c2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d1c6:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d1c8:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800d1ca:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800d1cc:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d1ce:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d1d0:	6291      	str	r1, [r2, #40]	; 0x28
  TIMx->EGR = TIM_EGR_UG;
 800d1d2:	2301      	movs	r3, #1
 800d1d4:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800d1d6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d1da:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800d1de:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800d1e2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d1e6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800d1ea:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800d1ee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800d1f2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800d1f6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800d1fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800d1fe:	2000      	movs	r0, #0
}
 800d200:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800d202:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d204:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800d206:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800d20a:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800d20c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800d210:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800d212:	69a1      	ldr	r1, [r4, #24]
 800d214:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d218:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800d21a:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800d21c:	68e3      	ldr	r3, [r4, #12]
 800d21e:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800d220:	6863      	ldr	r3, [r4, #4]
 800d222:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800d224:	6963      	ldr	r3, [r4, #20]
 800d226:	6313      	str	r3, [r2, #48]	; 0x30
 800d228:	e7d3      	b.n	800d1d2 <HAL_TIM_PWM_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800d22a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 800d22e:	f7ff ff75 	bl	800d11c <HAL_TIM_PWM_MspInit>
 800d232:	e780      	b.n	800d136 <HAL_TIM_PWM_Init+0x16>
    return HAL_ERROR;
 800d234:	2001      	movs	r0, #1
}
 800d236:	4770      	bx	lr
 800d238:	40010000 	.word	0x40010000

0800d23c <HAL_TIM_PWM_Start>:
 800d23c:	2900      	cmp	r1, #0
 800d23e:	d13c      	bne.n	800d2ba <HAL_TIM_PWM_Start+0x7e>
 800d240:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 800d244:	2b01      	cmp	r3, #1
 800d246:	d140      	bne.n	800d2ca <HAL_TIM_PWM_Start+0x8e>
 800d248:	2302      	movs	r3, #2
 800d24a:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
 800d24e:	6803      	ldr	r3, [r0, #0]
 800d250:	f001 011f 	and.w	r1, r1, #31
 800d254:	6a18      	ldr	r0, [r3, #32]
 800d256:	2201      	movs	r2, #1
 800d258:	408a      	lsls	r2, r1
 800d25a:	ea20 0002 	bic.w	r0, r0, r2
 800d25e:	6218      	str	r0, [r3, #32]
 800d260:	6a18      	ldr	r0, [r3, #32]
 800d262:	492c      	ldr	r1, [pc, #176]	; (800d314 <HAL_TIM_PWM_Start+0xd8>)
 800d264:	4302      	orrs	r2, r0
 800d266:	428b      	cmp	r3, r1
 800d268:	621a      	str	r2, [r3, #32]
 800d26a:	d038      	beq.n	800d2de <HAL_TIM_PWM_Start+0xa2>
 800d26c:	4a2a      	ldr	r2, [pc, #168]	; (800d318 <HAL_TIM_PWM_Start+0xdc>)
 800d26e:	4293      	cmp	r3, r2
 800d270:	d035      	beq.n	800d2de <HAL_TIM_PWM_Start+0xa2>
 800d272:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d276:	d015      	beq.n	800d2a4 <HAL_TIM_PWM_Start+0x68>
 800d278:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800d27c:	428b      	cmp	r3, r1
 800d27e:	d011      	beq.n	800d2a4 <HAL_TIM_PWM_Start+0x68>
 800d280:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d284:	428b      	cmp	r3, r1
 800d286:	d00d      	beq.n	800d2a4 <HAL_TIM_PWM_Start+0x68>
 800d288:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800d28c:	428b      	cmp	r3, r1
 800d28e:	d009      	beq.n	800d2a4 <HAL_TIM_PWM_Start+0x68>
 800d290:	4293      	cmp	r3, r2
 800d292:	d007      	beq.n	800d2a4 <HAL_TIM_PWM_Start+0x68>
 800d294:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d298:	4293      	cmp	r3, r2
 800d29a:	d003      	beq.n	800d2a4 <HAL_TIM_PWM_Start+0x68>
 800d29c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d2a0:	4293      	cmp	r3, r2
 800d2a2:	d104      	bne.n	800d2ae <HAL_TIM_PWM_Start+0x72>
 800d2a4:	689a      	ldr	r2, [r3, #8]
 800d2a6:	f002 0207 	and.w	r2, r2, #7
 800d2aa:	2a06      	cmp	r2, #6
 800d2ac:	d020      	beq.n	800d2f0 <HAL_TIM_PWM_Start+0xb4>
 800d2ae:	681a      	ldr	r2, [r3, #0]
 800d2b0:	f042 0201 	orr.w	r2, r2, #1
 800d2b4:	2000      	movs	r0, #0
 800d2b6:	601a      	str	r2, [r3, #0]
 800d2b8:	4770      	bx	lr
 800d2ba:	2904      	cmp	r1, #4
 800d2bc:	d022      	beq.n	800d304 <HAL_TIM_PWM_Start+0xc8>
 800d2be:	2908      	cmp	r1, #8
 800d2c0:	d018      	beq.n	800d2f4 <HAL_TIM_PWM_Start+0xb8>
 800d2c2:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800d2c6:	2b01      	cmp	r3, #1
 800d2c8:	d001      	beq.n	800d2ce <HAL_TIM_PWM_Start+0x92>
 800d2ca:	2001      	movs	r0, #1
 800d2cc:	4770      	bx	lr
 800d2ce:	2904      	cmp	r1, #4
 800d2d0:	d01c      	beq.n	800d30c <HAL_TIM_PWM_Start+0xd0>
 800d2d2:	2908      	cmp	r1, #8
 800d2d4:	d012      	beq.n	800d2fc <HAL_TIM_PWM_Start+0xc0>
 800d2d6:	2302      	movs	r3, #2
 800d2d8:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
 800d2dc:	e7b7      	b.n	800d24e <HAL_TIM_PWM_Start+0x12>
 800d2de:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800d2e0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800d2e4:	645a      	str	r2, [r3, #68]	; 0x44
 800d2e6:	689a      	ldr	r2, [r3, #8]
 800d2e8:	f002 0207 	and.w	r2, r2, #7
 800d2ec:	2a06      	cmp	r2, #6
 800d2ee:	d1de      	bne.n	800d2ae <HAL_TIM_PWM_Start+0x72>
 800d2f0:	2000      	movs	r0, #0
 800d2f2:	4770      	bx	lr
 800d2f4:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 800d2f8:	2b01      	cmp	r3, #1
 800d2fa:	d1e6      	bne.n	800d2ca <HAL_TIM_PWM_Start+0x8e>
 800d2fc:	2302      	movs	r3, #2
 800d2fe:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800d302:	e7a4      	b.n	800d24e <HAL_TIM_PWM_Start+0x12>
 800d304:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 800d308:	2b01      	cmp	r3, #1
 800d30a:	d1de      	bne.n	800d2ca <HAL_TIM_PWM_Start+0x8e>
 800d30c:	2302      	movs	r3, #2
 800d30e:	f880 303f 	strb.w	r3, [r0, #63]	; 0x3f
 800d312:	e79c      	b.n	800d24e <HAL_TIM_PWM_Start+0x12>
 800d314:	40010000 	.word	0x40010000
 800d318:	40010400 	.word	0x40010400

0800d31c <HAL_TIM_PWM_ConfigChannel>:
  __HAL_LOCK(htim);
 800d31c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d320:	2b01      	cmp	r3, #1
 800d322:	f000 80d2 	beq.w	800d4ca <HAL_TIM_PWM_ConfigChannel+0x1ae>
 800d326:	2301      	movs	r3, #1
{
 800d328:	b570      	push	{r4, r5, r6, lr}
 800d32a:	4684      	mov	ip, r0
  __HAL_LOCK(htim);
 800d32c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  switch (Channel)
 800d330:	2a0c      	cmp	r2, #12
 800d332:	d808      	bhi.n	800d346 <HAL_TIM_PWM_ConfigChannel+0x2a>
 800d334:	e8df f002 	tbb	[pc, r2]
 800d338:	0707073e 	.word	0x0707073e
 800d33c:	0707076b 	.word	0x0707076b
 800d340:	0707079b 	.word	0x0707079b
 800d344:	0c          	.byte	0x0c
 800d345:	00          	.byte	0x00
  __HAL_UNLOCK(htim);
 800d346:	2300      	movs	r3, #0
 800d348:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  switch (Channel)
 800d34c:	2001      	movs	r0, #1
}
 800d34e:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800d350:	6803      	ldr	r3, [r0, #0]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d352:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800d354:	6a1a      	ldr	r2, [r3, #32]
 800d356:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800d35a:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d35c:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d35e:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800d360:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800d362:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d366:	ea40 2005 	orr.w	r0, r0, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800d36a:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 800d36c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800d370:	ea42 3205 	orr.w	r2, r2, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800d374:	4d70      	ldr	r5, [pc, #448]	; (800d538 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d376:	42ab      	cmp	r3, r5
 800d378:	f000 80c8 	beq.w	800d50c <HAL_TIM_PWM_ConfigChannel+0x1f0>
 800d37c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d380:	42ab      	cmp	r3, r5
 800d382:	f000 80c3 	beq.w	800d50c <HAL_TIM_PWM_ConfigChannel+0x1f0>
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800d386:	605c      	str	r4, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800d388:	61d8      	str	r0, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800d38a:	6848      	ldr	r0, [r1, #4]
 800d38c:	6418      	str	r0, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800d38e:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800d390:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800d392:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800d394:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d398:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800d39a:	69da      	ldr	r2, [r3, #28]
 800d39c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d3a0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800d3a2:	69da      	ldr	r2, [r3, #28]
 800d3a4:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800d3a8:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800d3aa:	2300      	movs	r3, #0
 800d3ac:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d3b0:	2000      	movs	r0, #0
}
 800d3b2:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800d3b4:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800d3b6:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d3b8:	6a1a      	ldr	r2, [r3, #32]
 800d3ba:	f022 0201 	bic.w	r2, r2, #1
 800d3be:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d3c0:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d3c2:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800d3c4:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800d3c6:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800d3ca:	4328      	orrs	r0, r5
  tmpccer |= OC_Config->OCPolarity;
 800d3cc:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 800d3ce:	f022 0202 	bic.w	r2, r2, #2
  tmpccer |= OC_Config->OCPolarity;
 800d3d2:	432a      	orrs	r2, r5
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800d3d4:	4d58      	ldr	r5, [pc, #352]	; (800d538 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d3d6:	42ab      	cmp	r3, r5
 800d3d8:	d079      	beq.n	800d4ce <HAL_TIM_PWM_ConfigChannel+0x1b2>
 800d3da:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d3de:	42ab      	cmp	r3, r5
 800d3e0:	d075      	beq.n	800d4ce <HAL_TIM_PWM_ConfigChannel+0x1b2>
  TIMx->CR2 = tmpcr2;
 800d3e2:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800d3e4:	6198      	str	r0, [r3, #24]
  TIMx->CCR1 = OC_Config->Pulse;
 800d3e6:	6848      	ldr	r0, [r1, #4]
 800d3e8:	6358      	str	r0, [r3, #52]	; 0x34
  TIMx->CCER = tmpccer;
 800d3ea:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800d3ec:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800d3ee:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800d3f0:	f042 0208 	orr.w	r2, r2, #8
 800d3f4:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800d3f6:	699a      	ldr	r2, [r3, #24]
 800d3f8:	f022 0204 	bic.w	r2, r2, #4
 800d3fc:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800d3fe:	699a      	ldr	r2, [r3, #24]
 800d400:	430a      	orrs	r2, r1
 800d402:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800d404:	2300      	movs	r3, #0
 800d406:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d40a:	2000      	movs	r0, #0
}
 800d40c:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800d40e:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d410:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d412:	6a1a      	ldr	r2, [r3, #32]
 800d414:	f022 0210 	bic.w	r2, r2, #16
 800d418:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d41a:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d41c:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR1;
 800d41e:	6998      	ldr	r0, [r3, #24]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800d420:	f420 40e6 	bic.w	r0, r0, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800d424:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800d428:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 800d42a:	f022 0220 	bic.w	r2, r2, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800d42e:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800d432:	4d41      	ldr	r5, [pc, #260]	; (800d538 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d434:	42ab      	cmp	r3, r5
 800d436:	d059      	beq.n	800d4ec <HAL_TIM_PWM_ConfigChannel+0x1d0>
 800d438:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d43c:	42ab      	cmp	r3, r5
 800d43e:	d055      	beq.n	800d4ec <HAL_TIM_PWM_ConfigChannel+0x1d0>
  TIMx->CR2 = tmpcr2;
 800d440:	605c      	str	r4, [r3, #4]
  TIMx->CCMR1 = tmpccmrx;
 800d442:	6198      	str	r0, [r3, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 800d444:	6848      	ldr	r0, [r1, #4]
 800d446:	6398      	str	r0, [r3, #56]	; 0x38
  TIMx->CCER = tmpccer;
 800d448:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800d44a:	699a      	ldr	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800d44c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800d44e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800d452:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800d454:	699a      	ldr	r2, [r3, #24]
 800d456:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800d45a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800d45c:	699a      	ldr	r2, [r3, #24]
 800d45e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800d462:	619a      	str	r2, [r3, #24]
  __HAL_UNLOCK(htim);
 800d464:	2300      	movs	r3, #0
 800d466:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d46a:	2000      	movs	r0, #0
}
 800d46c:	bd70      	pop	{r4, r5, r6, pc}
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800d46e:	6803      	ldr	r3, [r0, #0]
  tmpccmrx |= OC_Config->OCMode;
 800d470:	680d      	ldr	r5, [r1, #0]
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800d472:	6a1a      	ldr	r2, [r3, #32]
 800d474:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800d478:	621a      	str	r2, [r3, #32]
  tmpccer = TIMx->CCER;
 800d47a:	6a1a      	ldr	r2, [r3, #32]
  tmpcr2 =  TIMx->CR2;
 800d47c:	685c      	ldr	r4, [r3, #4]
  tmpccmrx = TIMx->CCMR2;
 800d47e:	69d8      	ldr	r0, [r3, #28]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800d480:	f020 0073 	bic.w	r0, r0, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 800d484:	4328      	orrs	r0, r5
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800d486:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 800d488:	f422 7200 	bic.w	r2, r2, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800d48c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800d490:	4d29      	ldr	r5, [pc, #164]	; (800d538 <HAL_TIM_PWM_ConfigChannel+0x21c>)
 800d492:	42ab      	cmp	r3, r5
 800d494:	d040      	beq.n	800d518 <HAL_TIM_PWM_ConfigChannel+0x1fc>
 800d496:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800d49a:	42ab      	cmp	r3, r5
 800d49c:	d03c      	beq.n	800d518 <HAL_TIM_PWM_ConfigChannel+0x1fc>
  TIMx->CR2 = tmpcr2;
 800d49e:	605c      	str	r4, [r3, #4]
  TIMx->CCMR2 = tmpccmrx;
 800d4a0:	61d8      	str	r0, [r3, #28]
  TIMx->CCR3 = OC_Config->Pulse;
 800d4a2:	6848      	ldr	r0, [r1, #4]
 800d4a4:	63d8      	str	r0, [r3, #60]	; 0x3c
  TIMx->CCER = tmpccer;
 800d4a6:	621a      	str	r2, [r3, #32]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800d4a8:	69da      	ldr	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800d4aa:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800d4ac:	f042 0208 	orr.w	r2, r2, #8
 800d4b0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800d4b2:	69da      	ldr	r2, [r3, #28]
 800d4b4:	f022 0204 	bic.w	r2, r2, #4
 800d4b8:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800d4ba:	69da      	ldr	r2, [r3, #28]
 800d4bc:	430a      	orrs	r2, r1
 800d4be:	61da      	str	r2, [r3, #28]
  __HAL_UNLOCK(htim);
 800d4c0:	2300      	movs	r3, #0
 800d4c2:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
  HAL_StatusTypeDef status = HAL_OK;
 800d4c6:	2000      	movs	r0, #0
}
 800d4c8:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(htim);
 800d4ca:	2002      	movs	r0, #2
}
 800d4cc:	4770      	bx	lr
    tmpccer |= OC_Config->OCNPolarity;
 800d4ce:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 800d4d0:	f022 0208 	bic.w	r2, r2, #8
    tmpccer |= OC_Config->OCNPolarity;
 800d4d4:	432a      	orrs	r2, r5
    tmpcr2 |= OC_Config->OCNIdleState;
 800d4d6:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800d4da:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 800d4de:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 800d4e2:	f022 0204 	bic.w	r2, r2, #4
    tmpcr2 |= OC_Config->OCNIdleState;
 800d4e6:	ea4e 0404 	orr.w	r4, lr, r4
 800d4ea:	e77a      	b.n	800d3e2 <HAL_TIM_PWM_ConfigChannel+0xc6>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800d4ec:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 800d4ee:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800d4f2:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d4f6:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800d4fa:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d4fe:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800d502:	f022 0240 	bic.w	r2, r2, #64	; 0x40
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800d506:	ea44 048e 	orr.w	r4, r4, lr, lsl #2
 800d50a:	e799      	b.n	800d440 <HAL_TIM_PWM_ConfigChannel+0x124>
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800d50c:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 800d50e:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800d512:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800d516:	e736      	b.n	800d386 <HAL_TIM_PWM_ConfigChannel+0x6a>
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800d518:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 800d51a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800d51e:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d522:	e9d1 6505 	ldrd	r6, r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800d526:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d52a:	ea46 0e05 	orr.w	lr, r6, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 800d52e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800d532:	ea44 140e 	orr.w	r4, r4, lr, lsl #4
 800d536:	e7b2      	b.n	800d49e <HAL_TIM_PWM_ConfigChannel+0x182>
 800d538:	40010000 	.word	0x40010000

0800d53c <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800d53c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d540:	2b01      	cmp	r3, #1
 800d542:	d075      	beq.n	800d630 <HAL_TIM_ConfigClockSource+0xf4>
 800d544:	4602      	mov	r2, r0
{
 800d546:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d548:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800d54a:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d54c:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d550:	2001      	movs	r0, #1
 800d552:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d556:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d558:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800d55c:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800d560:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800d562:	680b      	ldr	r3, [r1, #0]
 800d564:	2b60      	cmp	r3, #96	; 0x60
 800d566:	d065      	beq.n	800d634 <HAL_TIM_ConfigClockSource+0xf8>
 800d568:	d824      	bhi.n	800d5b4 <HAL_TIM_ConfigClockSource+0x78>
 800d56a:	2b40      	cmp	r3, #64	; 0x40
 800d56c:	d07c      	beq.n	800d668 <HAL_TIM_ConfigClockSource+0x12c>
 800d56e:	d94b      	bls.n	800d608 <HAL_TIM_ConfigClockSource+0xcc>
 800d570:	2b50      	cmp	r3, #80	; 0x50
 800d572:	d117      	bne.n	800d5a4 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d574:	684b      	ldr	r3, [r1, #4]
 800d576:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800d578:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d57a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d57e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d580:	6a23      	ldr	r3, [r4, #32]
 800d582:	f023 0301 	bic.w	r3, r3, #1
 800d586:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d588:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d58a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d58e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800d592:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d594:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800d596:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800d598:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d59c:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800d5a0:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d5a2:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800d5a4:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800d5a6:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d5a8:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d5ac:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800d5b0:	bc30      	pop	{r4, r5}
 800d5b2:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800d5b4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800d5b8:	d038      	beq.n	800d62c <HAL_TIM_ConfigClockSource+0xf0>
 800d5ba:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800d5be:	d110      	bne.n	800d5e2 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5c0:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d5c4:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5c6:	432b      	orrs	r3, r5
 800d5c8:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d5ca:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5ce:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d5d2:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d5d4:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d5d6:	68a3      	ldr	r3, [r4, #8]
 800d5d8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800d5dc:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d5de:	60a3      	str	r3, [r4, #8]
      break;
 800d5e0:	e7e0      	b.n	800d5a4 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d5e2:	2b70      	cmp	r3, #112	; 0x70
 800d5e4:	d1de      	bne.n	800d5a4 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5e6:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d5ea:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5ec:	432b      	orrs	r3, r5
 800d5ee:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d5f0:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d5f4:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d5f8:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800d5fa:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800d5fc:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800d5fe:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800d602:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800d604:	60a3      	str	r3, [r4, #8]
      break;
 800d606:	e7cd      	b.n	800d5a4 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d608:	2b20      	cmp	r3, #32
 800d60a:	d002      	beq.n	800d612 <HAL_TIM_ConfigClockSource+0xd6>
 800d60c:	d90a      	bls.n	800d624 <HAL_TIM_ConfigClockSource+0xe8>
 800d60e:	2b30      	cmp	r3, #48	; 0x30
 800d610:	d1c8      	bne.n	800d5a4 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800d612:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d614:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d618:	430b      	orrs	r3, r1
 800d61a:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800d61e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d620:	60a3      	str	r3, [r4, #8]
}
 800d622:	e7bf      	b.n	800d5a4 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d624:	f033 0110 	bics.w	r1, r3, #16
 800d628:	d1bc      	bne.n	800d5a4 <HAL_TIM_ConfigClockSource+0x68>
 800d62a:	e7f2      	b.n	800d612 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800d62c:	2000      	movs	r0, #0
 800d62e:	e7b9      	b.n	800d5a4 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800d630:	2002      	movs	r0, #2
}
 800d632:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d634:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d636:	6848      	ldr	r0, [r1, #4]
 800d638:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d63a:	f023 0310 	bic.w	r3, r3, #16
 800d63e:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d640:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d642:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d644:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d648:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800d64c:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d650:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800d654:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d656:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d658:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d65a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d65e:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800d662:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d664:	60a3      	str	r3, [r4, #8]
}
 800d666:	e79d      	b.n	800d5a4 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d668:	684b      	ldr	r3, [r1, #4]
 800d66a:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800d66c:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d66e:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d672:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d674:	6a23      	ldr	r3, [r4, #32]
 800d676:	f023 0301 	bic.w	r3, r3, #1
 800d67a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d67c:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d67e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d682:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d686:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d688:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d68a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d68c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d690:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800d694:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d696:	60a3      	str	r3, [r4, #8]
}
 800d698:	e784      	b.n	800d5a4 <HAL_TIM_ConfigClockSource+0x68>
 800d69a:	bf00      	nop

0800d69c <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800d69c:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800d6a0:	2a01      	cmp	r2, #1
 800d6a2:	d050      	beq.n	800d746 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800d6a4:	4603      	mov	r3, r0
{
 800d6a6:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d6a8:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800d6aa:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d6ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d6b0:	2001      	movs	r0, #1
 800d6b2:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d6b6:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d6b8:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d6ba:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d6bc:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d6c0:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800d6c2:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d6c6:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800d6c8:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800d6ca:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800d6cc:	d060      	beq.n	800d790 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800d6ce:	d90f      	bls.n	800d6f0 <HAL_TIM_SlaveConfigSynchro+0x54>
 800d6d0:	2860      	cmp	r0, #96	; 0x60
 800d6d2:	d03a      	beq.n	800d74a <HAL_TIM_SlaveConfigSynchro+0xae>
 800d6d4:	2870      	cmp	r0, #112	; 0x70
 800d6d6:	d10e      	bne.n	800d6f6 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d6d8:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800d6dc:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d6de:	432a      	orrs	r2, r5
 800d6e0:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d6e2:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d6e6:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800d6ea:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800d6ec:	60a2      	str	r2, [r4, #8]
 800d6ee:	e00f      	b.n	800d710 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800d6f0:	2840      	cmp	r0, #64	; 0x40
 800d6f2:	d03d      	beq.n	800d770 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800d6f4:	d907      	bls.n	800d706 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800d6f6:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d6f8:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d6fa:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d6fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800d702:	bc30      	pop	{r4, r5}
 800d704:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d706:	2820      	cmp	r0, #32
 800d708:	d002      	beq.n	800d710 <HAL_TIM_SlaveConfigSynchro+0x74>
 800d70a:	d912      	bls.n	800d732 <HAL_TIM_SlaveConfigSynchro+0x96>
 800d70c:	2830      	cmp	r0, #48	; 0x30
 800d70e:	d1f2      	bne.n	800d6f6 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800d710:	68e2      	ldr	r2, [r4, #12]
 800d712:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800d716:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d718:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800d71a:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800d71c:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d71e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800d722:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800d724:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d728:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800d72c:	4608      	mov	r0, r1
}
 800d72e:	bc30      	pop	{r4, r5}
 800d730:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d732:	f030 0210 	bics.w	r2, r0, #16
 800d736:	d0eb      	beq.n	800d710 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800d738:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d73a:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d73c:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d740:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800d744:	e7dd      	b.n	800d702 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800d746:	2002      	movs	r0, #2
}
 800d748:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d74a:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d74c:	6888      	ldr	r0, [r1, #8]
 800d74e:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d750:	f022 0210 	bic.w	r2, r2, #16
 800d754:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d756:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d758:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d75a:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d75e:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d762:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800d766:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800d76a:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d76c:	6222      	str	r2, [r4, #32]
 800d76e:	e7cf      	b.n	800d710 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800d770:	2d05      	cmp	r5, #5
 800d772:	d0c0      	beq.n	800d6f6 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800d774:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d776:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d778:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d77a:	f022 0201 	bic.w	r2, r2, #1
 800d77e:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800d780:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d782:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d786:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800d78a:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800d78c:	6220      	str	r0, [r4, #32]
      break;
 800d78e:	e7bf      	b.n	800d710 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d790:	688a      	ldr	r2, [r1, #8]
 800d792:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800d794:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d796:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d79a:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d79c:	6a22      	ldr	r2, [r4, #32]
 800d79e:	f022 0201 	bic.w	r2, r2, #1
 800d7a2:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d7a4:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d7a6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d7aa:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d7ae:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800d7b0:	6221      	str	r1, [r4, #32]
 800d7b2:	e7ad      	b.n	800d710 <HAL_TIM_SlaveConfigSynchro+0x74>

0800d7b4 <HAL_TIM_OC_DelayElapsedCallback>:
 800d7b4:	4770      	bx	lr
 800d7b6:	bf00      	nop

0800d7b8 <HAL_TIM_IC_CaptureCallback>:
 800d7b8:	4770      	bx	lr
 800d7ba:	bf00      	nop

0800d7bc <HAL_TIM_PWM_PulseFinishedCallback>:
 800d7bc:	4770      	bx	lr
 800d7be:	bf00      	nop

0800d7c0 <HAL_TIM_TriggerCallback>:
 800d7c0:	4770      	bx	lr
 800d7c2:	bf00      	nop

0800d7c4 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d7c4:	6803      	ldr	r3, [r0, #0]
 800d7c6:	691a      	ldr	r2, [r3, #16]
 800d7c8:	0791      	lsls	r1, r2, #30
{
 800d7ca:	b510      	push	{r4, lr}
 800d7cc:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d7ce:	d502      	bpl.n	800d7d6 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d7d0:	68da      	ldr	r2, [r3, #12]
 800d7d2:	0792      	lsls	r2, r2, #30
 800d7d4:	d45f      	bmi.n	800d896 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d7d6:	691a      	ldr	r2, [r3, #16]
 800d7d8:	0750      	lsls	r0, r2, #29
 800d7da:	d502      	bpl.n	800d7e2 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d7dc:	68da      	ldr	r2, [r3, #12]
 800d7de:	0751      	lsls	r1, r2, #29
 800d7e0:	d446      	bmi.n	800d870 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d7e2:	691a      	ldr	r2, [r3, #16]
 800d7e4:	0712      	lsls	r2, r2, #28
 800d7e6:	d502      	bpl.n	800d7ee <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d7e8:	68da      	ldr	r2, [r3, #12]
 800d7ea:	0710      	lsls	r0, r2, #28
 800d7ec:	d42e      	bmi.n	800d84c <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d7ee:	691a      	ldr	r2, [r3, #16]
 800d7f0:	06d2      	lsls	r2, r2, #27
 800d7f2:	d502      	bpl.n	800d7fa <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d7f4:	68da      	ldr	r2, [r3, #12]
 800d7f6:	06d0      	lsls	r0, r2, #27
 800d7f8:	d418      	bmi.n	800d82c <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d7fa:	691a      	ldr	r2, [r3, #16]
 800d7fc:	07d1      	lsls	r1, r2, #31
 800d7fe:	d502      	bpl.n	800d806 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d800:	68da      	ldr	r2, [r3, #12]
 800d802:	07d2      	lsls	r2, r2, #31
 800d804:	d45d      	bmi.n	800d8c2 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d806:	691a      	ldr	r2, [r3, #16]
 800d808:	0610      	lsls	r0, r2, #24
 800d80a:	d502      	bpl.n	800d812 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d80c:	68da      	ldr	r2, [r3, #12]
 800d80e:	0611      	lsls	r1, r2, #24
 800d810:	d45f      	bmi.n	800d8d2 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d812:	691a      	ldr	r2, [r3, #16]
 800d814:	0652      	lsls	r2, r2, #25
 800d816:	d502      	bpl.n	800d81e <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d818:	68da      	ldr	r2, [r3, #12]
 800d81a:	0650      	lsls	r0, r2, #25
 800d81c:	d461      	bmi.n	800d8e2 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d81e:	691a      	ldr	r2, [r3, #16]
 800d820:	0691      	lsls	r1, r2, #26
 800d822:	d502      	bpl.n	800d82a <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d824:	68da      	ldr	r2, [r3, #12]
 800d826:	0692      	lsls	r2, r2, #26
 800d828:	d443      	bmi.n	800d8b2 <HAL_TIM_IRQHandler+0xee>
}
 800d82a:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d82c:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d830:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d832:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d834:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d836:	69db      	ldr	r3, [r3, #28]
 800d838:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d83c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d83e:	d064      	beq.n	800d90a <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d840:	f7ff ffba 	bl	800d7b8 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d844:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d846:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d848:	7722      	strb	r2, [r4, #28]
 800d84a:	e7d6      	b.n	800d7fa <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d84c:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d850:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d852:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d854:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d856:	69db      	ldr	r3, [r3, #28]
 800d858:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d85a:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d85c:	d152      	bne.n	800d904 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d85e:	f7ff ffa9 	bl	800d7b4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d862:	4620      	mov	r0, r4
 800d864:	f7ff ffaa 	bl	800d7bc <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d868:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d86a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d86c:	7722      	strb	r2, [r4, #28]
 800d86e:	e7be      	b.n	800d7ee <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d870:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d874:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d876:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d878:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d87a:	699b      	ldr	r3, [r3, #24]
 800d87c:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d880:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d882:	d13c      	bne.n	800d8fe <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d884:	f7ff ff96 	bl	800d7b4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d888:	4620      	mov	r0, r4
 800d88a:	f7ff ff97 	bl	800d7bc <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d88e:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d890:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d892:	7722      	strb	r2, [r4, #28]
 800d894:	e7a5      	b.n	800d7e2 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d896:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d89a:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d89c:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d89e:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d8a0:	699b      	ldr	r3, [r3, #24]
 800d8a2:	079b      	lsls	r3, r3, #30
 800d8a4:	d025      	beq.n	800d8f2 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d8a6:	f7ff ff87 	bl	800d7b8 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d8aa:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d8ac:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d8ae:	7722      	strb	r2, [r4, #28]
 800d8b0:	e791      	b.n	800d7d6 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d8b2:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d8b6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d8b8:	611a      	str	r2, [r3, #16]
}
 800d8ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d8be:	f000 b86b 	b.w	800d998 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d8c2:	f06f 0201 	mvn.w	r2, #1
 800d8c6:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d8c8:	4620      	mov	r0, r4
 800d8ca:	f7f3 fd17 	bl	80012fc <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d8ce:	6823      	ldr	r3, [r4, #0]
 800d8d0:	e799      	b.n	800d806 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d8d2:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d8d6:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d8d8:	4620      	mov	r0, r4
 800d8da:	f000 f85f 	bl	800d99c <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d8de:	6823      	ldr	r3, [r4, #0]
 800d8e0:	e797      	b.n	800d812 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d8e2:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d8e6:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d8e8:	4620      	mov	r0, r4
 800d8ea:	f7ff ff69 	bl	800d7c0 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d8ee:	6823      	ldr	r3, [r4, #0]
 800d8f0:	e795      	b.n	800d81e <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d8f2:	f7ff ff5f 	bl	800d7b4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d8f6:	4620      	mov	r0, r4
 800d8f8:	f7ff ff60 	bl	800d7bc <HAL_TIM_PWM_PulseFinishedCallback>
 800d8fc:	e7d5      	b.n	800d8aa <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d8fe:	f7ff ff5b 	bl	800d7b8 <HAL_TIM_IC_CaptureCallback>
 800d902:	e7c4      	b.n	800d88e <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d904:	f7ff ff58 	bl	800d7b8 <HAL_TIM_IC_CaptureCallback>
 800d908:	e7ae      	b.n	800d868 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d90a:	f7ff ff53 	bl	800d7b4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d90e:	4620      	mov	r0, r4
 800d910:	f7ff ff54 	bl	800d7bc <HAL_TIM_PWM_PulseFinishedCallback>
 800d914:	e796      	b.n	800d844 <HAL_TIM_IRQHandler+0x80>
 800d916:	bf00      	nop

0800d918 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800d918:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d91c:	2b01      	cmp	r3, #1
 800d91e:	d037      	beq.n	800d990 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800d920:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d922:	2202      	movs	r2, #2
{
 800d924:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d926:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800d92a:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d92c:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800d92e:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800d930:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d934:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800d936:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d938:	4a16      	ldr	r2, [pc, #88]	; (800d994 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800d93a:	4293      	cmp	r3, r2
 800d93c:	d01a      	beq.n	800d974 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d93e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d942:	d017      	beq.n	800d974 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d944:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800d948:	4293      	cmp	r3, r2
 800d94a:	d013      	beq.n	800d974 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d94c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d950:	4293      	cmp	r3, r2
 800d952:	d00f      	beq.n	800d974 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d954:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d958:	4293      	cmp	r3, r2
 800d95a:	d00b      	beq.n	800d974 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d95c:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d960:	4293      	cmp	r3, r2
 800d962:	d007      	beq.n	800d974 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d964:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d968:	4293      	cmp	r3, r2
 800d96a:	d003      	beq.n	800d974 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d96c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d970:	4293      	cmp	r3, r2
 800d972:	d104      	bne.n	800d97e <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d974:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800d976:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d97a:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800d97c:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800d97e:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d980:	2201      	movs	r2, #1
 800d982:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d986:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800d98a:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800d98c:	4618      	mov	r0, r3
}
 800d98e:	4770      	bx	lr
  __HAL_LOCK(htim);
 800d990:	2002      	movs	r0, #2
}
 800d992:	4770      	bx	lr
 800d994:	40010000 	.word	0x40010000

0800d998 <HAL_TIMEx_CommutCallback>:
 800d998:	4770      	bx	lr
 800d99a:	bf00      	nop

0800d99c <HAL_TIMEx_BreakCallback>:
 800d99c:	4770      	bx	lr
 800d99e:	bf00      	nop

0800d9a0 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d9a0:	680b      	ldr	r3, [r1, #0]
{
 800d9a2:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d9a4:	b9d3      	cbnz	r3, 800d9dc <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d9a6:	6803      	ldr	r3, [r0, #0]
 800d9a8:	684c      	ldr	r4, [r1, #4]
 800d9aa:	688a      	ldr	r2, [r1, #8]
 800d9ac:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d9b0:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d9b4:	4323      	orrs	r3, r4
 800d9b6:	4313      	orrs	r3, r2
 800d9b8:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d9bc:	4323      	orrs	r3, r4
 800d9be:	4313      	orrs	r3, r2
 800d9c0:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d9c4:	4323      	orrs	r3, r4
 800d9c6:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d9ca:	4313      	orrs	r3, r2
 800d9cc:	432b      	orrs	r3, r5
 800d9ce:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d9d0:	4323      	orrs	r3, r4
 800d9d2:	4313      	orrs	r3, r2
 800d9d4:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d9d6:	bc30      	pop	{r4, r5}
 800d9d8:	2000      	movs	r0, #0
 800d9da:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d9dc:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d9e0:	6803      	ldr	r3, [r0, #0]
 800d9e2:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d9e6:	4323      	orrs	r3, r4
 800d9e8:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d9ea:	4313      	orrs	r3, r2
 800d9ec:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d9ee:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d9f0:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d9f2:	6843      	ldr	r3, [r0, #4]
 800d9f4:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d9f8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d9fc:	4313      	orrs	r3, r2
 800d9fe:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800da02:	4323      	orrs	r3, r4
 800da04:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800da08:	4313      	orrs	r3, r2
 800da0a:	432b      	orrs	r3, r5
 800da0c:	698a      	ldr	r2, [r1, #24]
 800da0e:	4323      	orrs	r3, r4
 800da10:	4313      	orrs	r3, r2
 800da12:	6043      	str	r3, [r0, #4]
}
 800da14:	bc30      	pop	{r4, r5}
 800da16:	2000      	movs	r0, #0
 800da18:	4770      	bx	lr
 800da1a:	bf00      	nop

0800da1c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800da1c:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da1e:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800da20:	bb02      	cbnz	r2, 800da64 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da22:	e9d1 2400 	ldrd	r2, r4, [r1]
 800da26:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800da2a:	3c01      	subs	r4, #1
 800da2c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800da30:	3a01      	subs	r2, #1
 800da32:	4313      	orrs	r3, r2
 800da34:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800da38:	3c01      	subs	r4, #1
 800da3a:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800da3e:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800da42:	3a01      	subs	r2, #1
 800da44:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800da48:	698a      	ldr	r2, [r1, #24]
 800da4a:	1e69      	subs	r1, r5, #1
 800da4c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800da50:	1e61      	subs	r1, r4, #1
 800da52:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800da56:	3a01      	subs	r2, #1
 800da58:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800da5c:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800da5e:	bc30      	pop	{r4, r5}
 800da60:	2000      	movs	r0, #0
 800da62:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da64:	68cc      	ldr	r4, [r1, #12]
 800da66:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800da68:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800da6a:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800da6e:	3c01      	subs	r4, #1
 800da70:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800da74:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800da78:	3a01      	subs	r2, #1
 800da7a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800da7e:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800da80:	e9d1 2400 	ldrd	r2, r4, [r1]
 800da84:	68c3      	ldr	r3, [r0, #12]
 800da86:	3c01      	subs	r4, #1
 800da88:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800da8c:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800da90:	3a01      	subs	r2, #1
 800da92:	690c      	ldr	r4, [r1, #16]
 800da94:	4313      	orrs	r3, r2
 800da96:	698a      	ldr	r2, [r1, #24]
 800da98:	1e69      	subs	r1, r5, #1
 800da9a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800da9e:	1e61      	subs	r1, r4, #1
 800daa0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800daa4:	3a01      	subs	r2, #1
 800daa6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800daaa:	60c3      	str	r3, [r0, #12]
}
 800daac:	bc30      	pop	{r4, r5}
 800daae:	2000      	movs	r0, #0
 800dab0:	4770      	bx	lr
 800dab2:	bf00      	nop

0800dab4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800dab4:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800dab6:	680b      	ldr	r3, [r1, #0]
{
 800dab8:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800daba:	684a      	ldr	r2, [r1, #4]
{
 800dabc:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800dabe:	4313      	orrs	r3, r2
 800dac0:	6900      	ldr	r0, [r0, #16]
 800dac2:	68ca      	ldr	r2, [r1, #12]
 800dac4:	0d80      	lsrs	r0, r0, #22
 800dac6:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800daca:	688a      	ldr	r2, [r1, #8]
 800dacc:	0580      	lsls	r0, r0, #22
 800dace:	4303      	orrs	r3, r0
 800dad0:	3a01      	subs	r2, #1
 800dad2:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800dad6:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800dad8:	f7fb ff46 	bl	8009968 <HAL_GetTick>
 800dadc:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800dade:	1c6b      	adds	r3, r5, #1
 800dae0:	d105      	bne.n	800daee <FMC_SDRAM_SendCommand+0x3a>
 800dae2:	69a3      	ldr	r3, [r4, #24]
 800dae4:	f013 0320 	ands.w	r3, r3, #32
 800dae8:	d1fb      	bne.n	800dae2 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800daea:	4618      	mov	r0, r3
}
 800daec:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800daee:	69a3      	ldr	r3, [r4, #24]
 800daf0:	f013 0320 	ands.w	r3, r3, #32
 800daf4:	d0f9      	beq.n	800daea <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800daf6:	b125      	cbz	r5, 800db02 <FMC_SDRAM_SendCommand+0x4e>
 800daf8:	f7fb ff36 	bl	8009968 <HAL_GetTick>
 800dafc:	1b80      	subs	r0, r0, r6
 800dafe:	42a8      	cmp	r0, r5
 800db00:	d9ed      	bls.n	800dade <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800db02:	2003      	movs	r0, #3
}
 800db04:	bd70      	pop	{r4, r5, r6, pc}
 800db06:	bf00      	nop

0800db08 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800db08:	6943      	ldr	r3, [r0, #20]
 800db0a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800db0e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800db10:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800db14:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800db18:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800db1a:	6151      	str	r1, [r2, #20]
}
 800db1c:	4770      	bx	lr
 800db1e:	bf00      	nop

0800db20 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800db20:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800db22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800db26:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800db28:	f002 fb04 	bl	8010134 <xTaskGetSchedulerState>
 800db2c:	2801      	cmp	r0, #1
 800db2e:	d100      	bne.n	800db32 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800db30:	bd08      	pop	{r3, pc}
 800db32:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800db36:	f000 bc45 	b.w	800e3c4 <xPortSysTickHandler>
 800db3a:	bf00      	nop

0800db3c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800db3c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800db40:	b92b      	cbnz	r3, 800db4e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800db42:	4b06      	ldr	r3, [pc, #24]	; (800db5c <osKernelInitialize+0x20>)
 800db44:	6818      	ldr	r0, [r3, #0]
 800db46:	b928      	cbnz	r0, 800db54 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800db48:	2201      	movs	r2, #1
 800db4a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800db4c:	4770      	bx	lr
    stat = osErrorISR;
 800db4e:	f06f 0005 	mvn.w	r0, #5
 800db52:	4770      	bx	lr
    } else {
      stat = osError;
 800db54:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800db58:	4770      	bx	lr
 800db5a:	bf00      	nop
 800db5c:	20002ce8 	.word	0x20002ce8

0800db60 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800db60:	b510      	push	{r4, lr}
 800db62:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800db66:	b974      	cbnz	r4, 800db86 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800db68:	4b08      	ldr	r3, [pc, #32]	; (800db8c <osKernelStart+0x2c>)
 800db6a:	681a      	ldr	r2, [r3, #0]
 800db6c:	2a01      	cmp	r2, #1
 800db6e:	d107      	bne.n	800db80 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800db70:	4907      	ldr	r1, [pc, #28]	; (800db90 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800db72:	2202      	movs	r2, #2
 800db74:	77cc      	strb	r4, [r1, #31]
 800db76:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800db78:	f002 f8b6 	bl	800fce8 <vTaskStartScheduler>
      stat = osOK;
 800db7c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800db7e:	bd10      	pop	{r4, pc}
      stat = osError;
 800db80:	f04f 30ff 	mov.w	r0, #4294967295
}
 800db84:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800db86:	f06f 0005 	mvn.w	r0, #5
}
 800db8a:	bd10      	pop	{r4, pc}
 800db8c:	20002ce8 	.word	0x20002ce8
 800db90:	e000ed00 	.word	0xe000ed00

0800db94 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800db94:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db96:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800db98:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800db9a:	4615      	mov	r5, r2
  hTask = NULL;
 800db9c:	9405      	str	r4, [sp, #20]
 800db9e:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800dba2:	b9ea      	cbnz	r2, 800dbe0 <osThreadNew+0x4c>
 800dba4:	b350      	cbz	r0, 800dbfc <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800dba6:	b1f5      	cbz	r5, 800dbe6 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800dba8:	69ab      	ldr	r3, [r5, #24]
 800dbaa:	bb5b      	cbnz	r3, 800dc04 <osThreadNew+0x70>
 800dbac:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800dbae:	686a      	ldr	r2, [r5, #4]
 800dbb0:	07d2      	lsls	r2, r2, #31
 800dbb2:	d423      	bmi.n	800dbfc <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800dbb4:	696e      	ldr	r6, [r5, #20]
 800dbb6:	b34e      	cbz	r6, 800dc0c <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800dbb8:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dbbc:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800dbbe:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dbc0:	b34c      	cbz	r4, 800dc16 <osThreadNew+0x82>
 800dbc2:	68ea      	ldr	r2, [r5, #12]
 800dbc4:	2aab      	cmp	r2, #171	; 0xab
 800dbc6:	d919      	bls.n	800dbfc <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800dbc8:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800dbca:	b1bd      	cbz	r5, 800dbfc <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800dbcc:	b1b6      	cbz	r6, 800dbfc <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800dbce:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800dbd2:	9300      	str	r3, [sp, #0]
 800dbd4:	4662      	mov	r2, ip
 800dbd6:	460b      	mov	r3, r1
 800dbd8:	4639      	mov	r1, r7
 800dbda:	f001 ffc3 	bl	800fb64 <xTaskCreateStatic>
 800dbde:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800dbe0:	4620      	mov	r0, r4
 800dbe2:	b007      	add	sp, #28
 800dbe4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dbe6:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800dbe8:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800dbea:	ac05      	add	r4, sp, #20
 800dbec:	9300      	str	r3, [sp, #0]
 800dbee:	9401      	str	r4, [sp, #4]
 800dbf0:	460b      	mov	r3, r1
 800dbf2:	4629      	mov	r1, r5
 800dbf4:	f001 fff0 	bl	800fbd8 <xTaskCreate>
 800dbf8:	2801      	cmp	r0, #1
 800dbfa:	d00a      	beq.n	800dc12 <osThreadNew+0x7e>
        return (NULL);
 800dbfc:	2400      	movs	r4, #0
}
 800dbfe:	4620      	mov	r0, r4
 800dc00:	b007      	add	sp, #28
 800dc02:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800dc04:	1e5c      	subs	r4, r3, #1
 800dc06:	2c37      	cmp	r4, #55	; 0x37
 800dc08:	d9d1      	bls.n	800dbae <osThreadNew+0x1a>
 800dc0a:	e7f7      	b.n	800dbfc <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800dc0c:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800dc10:	e7d4      	b.n	800dbbc <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800dc12:	9c05      	ldr	r4, [sp, #20]
 800dc14:	e7e4      	b.n	800dbe0 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800dc16:	68ee      	ldr	r6, [r5, #12]
 800dc18:	2e00      	cmp	r6, #0
 800dc1a:	d1e1      	bne.n	800dbe0 <osThreadNew+0x4c>
 800dc1c:	692d      	ldr	r5, [r5, #16]
 800dc1e:	2d00      	cmp	r5, #0
 800dc20:	d1de      	bne.n	800dbe0 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800dc22:	fa1f f28c 	uxth.w	r2, ip
 800dc26:	463d      	mov	r5, r7
 800dc28:	e7df      	b.n	800dbea <osThreadNew+0x56>
 800dc2a:	bf00      	nop

0800dc2c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800dc2c:	b510      	push	{r4, lr}
 800dc2e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800dc32:	b92c      	cbnz	r4, 800dc40 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800dc34:	b900      	cbnz	r0, 800dc38 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800dc36:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800dc38:	f002 f800 	bl	800fc3c <vTaskDelay>
    stat = osOK;
 800dc3c:	4620      	mov	r0, r4
}
 800dc3e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800dc40:	f06f 0005 	mvn.w	r0, #5
}
 800dc44:	bd10      	pop	{r4, pc}
 800dc46:	bf00      	nop

0800dc48 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800dc48:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc4a:	b083      	sub	sp, #12
 800dc4c:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800dc50:	b9fe      	cbnz	r6, 800dc92 <osSemaphoreNew+0x4a>
 800dc52:	b1f0      	cbz	r0, 800dc92 <osSemaphoreNew+0x4a>
 800dc54:	4288      	cmp	r0, r1
 800dc56:	460f      	mov	r7, r1
 800dc58:	d31b      	bcc.n	800dc92 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800dc5a:	4615      	mov	r5, r2
 800dc5c:	b192      	cbz	r2, 800dc84 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800dc5e:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800dc62:	b1d2      	cbz	r2, 800dc9a <osSemaphoreNew+0x52>
 800dc64:	2b4f      	cmp	r3, #79	; 0x4f
 800dc66:	d914      	bls.n	800dc92 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800dc68:	2801      	cmp	r0, #1
 800dc6a:	d038      	beq.n	800dcde <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800dc6c:	f000 fd90 	bl	800e790 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800dc70:	4604      	mov	r4, r0
 800dc72:	b170      	cbz	r0, 800dc92 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800dc74:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800dc76:	4620      	mov	r0, r4
 800dc78:	4629      	mov	r1, r5
 800dc7a:	f001 fc3b 	bl	800f4f4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800dc7e:	4620      	mov	r0, r4
 800dc80:	b003      	add	sp, #12
 800dc82:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800dc84:	2801      	cmp	r0, #1
 800dc86:	d012      	beq.n	800dcae <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800dc88:	f000 fde2 	bl	800e850 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800dc8c:	4604      	mov	r4, r0
 800dc8e:	2800      	cmp	r0, #0
 800dc90:	d1f1      	bne.n	800dc76 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800dc92:	2400      	movs	r4, #0
}
 800dc94:	4620      	mov	r0, r4
 800dc96:	b003      	add	sp, #12
 800dc98:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800dc9a:	2b00      	cmp	r3, #0
 800dc9c:	d1f9      	bne.n	800dc92 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800dc9e:	2801      	cmp	r0, #1
 800dca0:	d005      	beq.n	800dcae <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800dca2:	f000 fdd5 	bl	800e850 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800dca6:	4604      	mov	r4, r0
 800dca8:	2800      	cmp	r0, #0
 800dcaa:	d1e3      	bne.n	800dc74 <osSemaphoreNew+0x2c>
 800dcac:	e7f1      	b.n	800dc92 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800dcae:	2203      	movs	r2, #3
 800dcb0:	2100      	movs	r1, #0
 800dcb2:	2001      	movs	r0, #1
 800dcb4:	f000 fd2a 	bl	800e70c <xQueueGenericCreate>
 800dcb8:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800dcba:	2c00      	cmp	r4, #0
 800dcbc:	d0e9      	beq.n	800dc92 <osSemaphoreNew+0x4a>
 800dcbe:	b917      	cbnz	r7, 800dcc6 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800dcc0:	2d00      	cmp	r5, #0
 800dcc2:	d1d7      	bne.n	800dc74 <osSemaphoreNew+0x2c>
 800dcc4:	e7d7      	b.n	800dc76 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800dcc6:	2300      	movs	r3, #0
 800dcc8:	461a      	mov	r2, r3
 800dcca:	4619      	mov	r1, r3
 800dccc:	4620      	mov	r0, r4
 800dcce:	f000 fe05 	bl	800e8dc <xQueueGenericSend>
 800dcd2:	2801      	cmp	r0, #1
 800dcd4:	d0f4      	beq.n	800dcc0 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800dcd6:	4620      	mov	r0, r4
 800dcd8:	f001 fbc6 	bl	800f468 <vQueueDelete>
 800dcdc:	e7d9      	b.n	800dc92 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800dcde:	4613      	mov	r3, r2
 800dce0:	2203      	movs	r2, #3
 800dce2:	9200      	str	r2, [sp, #0]
 800dce4:	4631      	mov	r1, r6
 800dce6:	4632      	mov	r2, r6
 800dce8:	f000 fca2 	bl	800e630 <xQueueGenericCreateStatic>
 800dcec:	4604      	mov	r4, r0
 800dcee:	e7e4      	b.n	800dcba <osSemaphoreNew+0x72>

0800dcf0 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800dcf0:	b370      	cbz	r0, 800dd50 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800dcf2:	b510      	push	{r4, lr}
 800dcf4:	460c      	mov	r4, r1
 800dcf6:	b082      	sub	sp, #8
 800dcf8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800dcfc:	b1c3      	cbz	r3, 800dd30 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800dcfe:	bb21      	cbnz	r1, 800dd4a <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800dd00:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800dd02:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800dd04:	f001 fb2e 	bl	800f364 <xQueueReceiveFromISR>
 800dd08:	2801      	cmp	r0, #1
 800dd0a:	d11a      	bne.n	800dd42 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800dd0c:	9b01      	ldr	r3, [sp, #4]
 800dd0e:	b913      	cbnz	r3, 800dd16 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800dd10:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800dd12:	b002      	add	sp, #8
 800dd14:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800dd16:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd1a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd22:	f3bf 8f4f 	dsb	sy
 800dd26:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dd2a:	4620      	mov	r0, r4
}
 800dd2c:	b002      	add	sp, #8
 800dd2e:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800dd30:	f001 f98e 	bl	800f050 <xQueueSemaphoreTake>
 800dd34:	2801      	cmp	r0, #1
 800dd36:	d0eb      	beq.n	800dd10 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800dd38:	b11c      	cbz	r4, 800dd42 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800dd3a:	f06f 0001 	mvn.w	r0, #1
}
 800dd3e:	b002      	add	sp, #8
 800dd40:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800dd42:	f06f 0002 	mvn.w	r0, #2
}
 800dd46:	b002      	add	sp, #8
 800dd48:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800dd4a:	f06f 0003 	mvn.w	r0, #3
 800dd4e:	e7e0      	b.n	800dd12 <osSemaphoreAcquire+0x22>
 800dd50:	f06f 0003 	mvn.w	r0, #3
}
 800dd54:	4770      	bx	lr
 800dd56:	bf00      	nop

0800dd58 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800dd58:	b330      	cbz	r0, 800dda8 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800dd5a:	b510      	push	{r4, lr}
 800dd5c:	b082      	sub	sp, #8
 800dd5e:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800dd62:	b1ab      	cbz	r3, 800dd90 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800dd64:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800dd66:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800dd68:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800dd6a:	f000 ff9b 	bl	800eca4 <xQueueGiveFromISR>
 800dd6e:	2801      	cmp	r0, #1
 800dd70:	d117      	bne.n	800dda2 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800dd72:	9b01      	ldr	r3, [sp, #4]
 800dd74:	b193      	cbz	r3, 800dd9c <osSemaphoreRelease+0x44>
 800dd76:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd7a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd7e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd82:	f3bf 8f4f 	dsb	sy
 800dd86:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dd8a:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800dd8c:	b002      	add	sp, #8
 800dd8e:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800dd90:	461a      	mov	r2, r3
 800dd92:	4619      	mov	r1, r3
 800dd94:	f000 fda2 	bl	800e8dc <xQueueGenericSend>
 800dd98:	2801      	cmp	r0, #1
 800dd9a:	d102      	bne.n	800dda2 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800dd9c:	2000      	movs	r0, #0
}
 800dd9e:	b002      	add	sp, #8
 800dda0:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800dda2:	f06f 0002 	mvn.w	r0, #2
 800dda6:	e7fa      	b.n	800dd9e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800dda8:	f06f 0003 	mvn.w	r0, #3
}
 800ddac:	4770      	bx	lr
 800ddae:	bf00      	nop

0800ddb0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800ddb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ddb2:	b085      	sub	sp, #20
 800ddb4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800ddb8:	b987      	cbnz	r7, 800dddc <osMessageQueueNew+0x2c>
 800ddba:	4605      	mov	r5, r0
 800ddbc:	b170      	cbz	r0, 800dddc <osMessageQueueNew+0x2c>
 800ddbe:	b169      	cbz	r1, 800dddc <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800ddc0:	4614      	mov	r4, r2
 800ddc2:	b1ea      	cbz	r2, 800de00 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ddc4:	6893      	ldr	r3, [r2, #8]
 800ddc6:	b163      	cbz	r3, 800dde2 <osMessageQueueNew+0x32>
 800ddc8:	68d2      	ldr	r2, [r2, #12]
 800ddca:	2a4f      	cmp	r2, #79	; 0x4f
 800ddcc:	d906      	bls.n	800dddc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ddce:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ddd0:	b122      	cbz	r2, 800dddc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ddd2:	6966      	ldr	r6, [r4, #20]
 800ddd4:	fb01 f505 	mul.w	r5, r1, r5
 800ddd8:	42ae      	cmp	r6, r5
 800ddda:	d21c      	bcs.n	800de16 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800dddc:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800ddde:	b005      	add	sp, #20
 800dde0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800dde2:	68d3      	ldr	r3, [r2, #12]
 800dde4:	2b00      	cmp	r3, #0
 800dde6:	d1f9      	bne.n	800dddc <osMessageQueueNew+0x2c>
 800dde8:	6913      	ldr	r3, [r2, #16]
 800ddea:	2b00      	cmp	r3, #0
 800ddec:	d1f6      	bne.n	800dddc <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800ddee:	6952      	ldr	r2, [r2, #20]
 800ddf0:	2a00      	cmp	r2, #0
 800ddf2:	d1f3      	bne.n	800dddc <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800ddf4:	f000 fc8a 	bl	800e70c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800ddf8:	2800      	cmp	r0, #0
 800ddfa:	d0ef      	beq.n	800dddc <osMessageQueueNew+0x2c>
        name = attr->name;
 800ddfc:	6824      	ldr	r4, [r4, #0]
 800ddfe:	e003      	b.n	800de08 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800de00:	f000 fc84 	bl	800e70c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800de04:	2800      	cmp	r0, #0
 800de06:	d0e9      	beq.n	800dddc <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800de08:	4621      	mov	r1, r4
 800de0a:	9003      	str	r0, [sp, #12]
 800de0c:	f001 fb72 	bl	800f4f4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800de10:	9803      	ldr	r0, [sp, #12]
}
 800de12:	b005      	add	sp, #20
 800de14:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800de16:	9700      	str	r7, [sp, #0]
 800de18:	f000 fc0a 	bl	800e630 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800de1c:	2800      	cmp	r0, #0
 800de1e:	d1ed      	bne.n	800ddfc <osMessageQueueNew+0x4c>
 800de20:	e7dc      	b.n	800dddc <osMessageQueueNew+0x2c>
 800de22:	bf00      	nop

0800de24 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800de24:	b570      	push	{r4, r5, r6, lr}
 800de26:	461c      	mov	r4, r3
 800de28:	b082      	sub	sp, #8
 800de2a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800de2e:	b1be      	cbz	r6, 800de60 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800de30:	b350      	cbz	r0, 800de88 <osMessageQueuePut+0x64>
 800de32:	b349      	cbz	r1, 800de88 <osMessageQueuePut+0x64>
 800de34:	bb43      	cbnz	r3, 800de88 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800de36:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800de38:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800de3a:	f000 fecd 	bl	800ebd8 <xQueueGenericSendFromISR>
 800de3e:	2801      	cmp	r0, #1
 800de40:	d11e      	bne.n	800de80 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800de42:	9b01      	ldr	r3, [sp, #4]
 800de44:	b1cb      	cbz	r3, 800de7a <osMessageQueuePut+0x56>
 800de46:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de4a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de4e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800de52:	f3bf 8f4f 	dsb	sy
 800de56:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800de5a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800de5c:	b002      	add	sp, #8
 800de5e:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800de60:	b190      	cbz	r0, 800de88 <osMessageQueuePut+0x64>
 800de62:	b189      	cbz	r1, 800de88 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800de64:	4633      	mov	r3, r6
 800de66:	4622      	mov	r2, r4
 800de68:	f000 fd38 	bl	800e8dc <xQueueGenericSend>
 800de6c:	2801      	cmp	r0, #1
 800de6e:	d004      	beq.n	800de7a <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800de70:	b134      	cbz	r4, 800de80 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800de72:	f06f 0001 	mvn.w	r0, #1
}
 800de76:	b002      	add	sp, #8
 800de78:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800de7a:	2000      	movs	r0, #0
}
 800de7c:	b002      	add	sp, #8
 800de7e:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800de80:	f06f 0002 	mvn.w	r0, #2
}
 800de84:	b002      	add	sp, #8
 800de86:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800de88:	f06f 0003 	mvn.w	r0, #3
 800de8c:	e7e6      	b.n	800de5c <osMessageQueuePut+0x38>
 800de8e:	bf00      	nop

0800de90 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800de90:	b530      	push	{r4, r5, lr}
 800de92:	461c      	mov	r4, r3
 800de94:	b083      	sub	sp, #12
 800de96:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800de9a:	b1bb      	cbz	r3, 800decc <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800de9c:	b348      	cbz	r0, 800def2 <osMessageQueueGet+0x62>
 800de9e:	b341      	cbz	r1, 800def2 <osMessageQueueGet+0x62>
 800dea0:	bb3c      	cbnz	r4, 800def2 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800dea2:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800dea4:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800dea6:	f001 fa5d 	bl	800f364 <xQueueReceiveFromISR>
 800deaa:	2801      	cmp	r0, #1
 800deac:	d11d      	bne.n	800deea <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800deae:	9b01      	ldr	r3, [sp, #4]
 800deb0:	b1c3      	cbz	r3, 800dee4 <osMessageQueueGet+0x54>
 800deb2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800deb6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800deba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800debe:	f3bf 8f4f 	dsb	sy
 800dec2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800dec6:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800dec8:	b003      	add	sp, #12
 800deca:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800decc:	b188      	cbz	r0, 800def2 <osMessageQueueGet+0x62>
 800dece:	b181      	cbz	r1, 800def2 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ded0:	4622      	mov	r2, r4
 800ded2:	f000 ff3f 	bl	800ed54 <xQueueReceive>
 800ded6:	2801      	cmp	r0, #1
 800ded8:	d004      	beq.n	800dee4 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800deda:	b134      	cbz	r4, 800deea <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800dedc:	f06f 0001 	mvn.w	r0, #1
}
 800dee0:	b003      	add	sp, #12
 800dee2:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800dee4:	2000      	movs	r0, #0
}
 800dee6:	b003      	add	sp, #12
 800dee8:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800deea:	f06f 0002 	mvn.w	r0, #2
}
 800deee:	b003      	add	sp, #12
 800def0:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800def2:	f06f 0003 	mvn.w	r0, #3
 800def6:	e7e7      	b.n	800dec8 <osMessageQueueGet+0x38>

0800def8 <osMessageQueueGetCount>:
 800def8:	b130      	cbz	r0, 800df08 <osMessageQueueGetCount+0x10>
 800defa:	f3ef 8305 	mrs	r3, IPSR
 800defe:	b10b      	cbz	r3, 800df04 <osMessageQueueGetCount+0xc>
 800df00:	f001 baa4 	b.w	800f44c <uxQueueMessagesWaitingFromISR>
 800df04:	f001 ba8c 	b.w	800f420 <uxQueueMessagesWaiting>
 800df08:	4770      	bx	lr
 800df0a:	bf00      	nop

0800df0c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800df0c:	4b04      	ldr	r3, [pc, #16]	; (800df20 <vApplicationGetIdleTaskMemory+0x14>)
 800df0e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800df10:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800df12:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800df14:	4c03      	ldr	r4, [pc, #12]	; (800df24 <vApplicationGetIdleTaskMemory+0x18>)
 800df16:	600c      	str	r4, [r1, #0]
}
 800df18:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800df1c:	6013      	str	r3, [r2, #0]
}
 800df1e:	4770      	bx	lr
 800df20:	20002c3c 	.word	0x20002c3c
 800df24:	20002a3c 	.word	0x20002a3c

0800df28 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800df28:	4b05      	ldr	r3, [pc, #20]	; (800df40 <vApplicationGetTimerTaskMemory+0x18>)
 800df2a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800df2c:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800df2e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800df32:	4c04      	ldr	r4, [pc, #16]	; (800df44 <vApplicationGetTimerTaskMemory+0x1c>)
 800df34:	600c      	str	r4, [r1, #0]
}
 800df36:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800df3a:	6013      	str	r3, [r2, #0]
}
 800df3c:	4770      	bx	lr
 800df3e:	bf00      	nop
 800df40:	200030ec 	.word	0x200030ec
 800df44:	20002cec 	.word	0x20002cec

0800df48 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800df48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df4c:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800df4e:	f001 ff47 	bl	800fde0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800df52:	4a54      	ldr	r2, [pc, #336]	; (800e0a4 <pvPortMalloc+0x15c>)
 800df54:	6816      	ldr	r6, [r2, #0]
 800df56:	2e00      	cmp	r6, #0
 800df58:	d06e      	beq.n	800e038 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800df5a:	4b53      	ldr	r3, [pc, #332]	; (800e0a8 <pvPortMalloc+0x160>)
 800df5c:	681f      	ldr	r7, [r3, #0]
 800df5e:	423d      	tst	r5, r7
 800df60:	d12e      	bne.n	800dfc0 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800df62:	b36d      	cbz	r5, 800dfc0 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800df64:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800df68:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800df6a:	bf1c      	itt	ne
 800df6c:	f024 0407 	bicne.w	r4, r4, #7
 800df70:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800df72:	b32c      	cbz	r4, 800dfc0 <pvPortMalloc+0x78>
 800df74:	f8df c144 	ldr.w	ip, [pc, #324]	; 800e0bc <pvPortMalloc+0x174>
 800df78:	f8dc 5000 	ldr.w	r5, [ip]
 800df7c:	42a5      	cmp	r5, r4
 800df7e:	d31f      	bcc.n	800dfc0 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800df80:	484a      	ldr	r0, [pc, #296]	; (800e0ac <pvPortMalloc+0x164>)
 800df82:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800df84:	e003      	b.n	800df8e <pvPortMalloc+0x46>
 800df86:	681a      	ldr	r2, [r3, #0]
 800df88:	b122      	cbz	r2, 800df94 <pvPortMalloc+0x4c>
 800df8a:	4618      	mov	r0, r3
 800df8c:	4613      	mov	r3, r2
 800df8e:	6859      	ldr	r1, [r3, #4]
 800df90:	42a1      	cmp	r1, r4
 800df92:	d3f8      	bcc.n	800df86 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800df94:	42b3      	cmp	r3, r6
 800df96:	d013      	beq.n	800dfc0 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800df98:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800df9a:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800df9c:	f858 eb08 	ldr.w	lr, [r8], #8
 800dfa0:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dfa4:	2a10      	cmp	r2, #16
 800dfa6:	d929      	bls.n	800dffc <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800dfa8:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800dfaa:	0748      	lsls	r0, r1, #29
 800dfac:	d00f      	beq.n	800dfce <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800dfae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfb2:	f383 8811 	msr	BASEPRI, r3
 800dfb6:	f3bf 8f6f 	isb	sy
 800dfba:	f3bf 8f4f 	dsb	sy
 800dfbe:	e7fe      	b.n	800dfbe <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800dfc0:	f001 ff16 	bl	800fdf0 <xTaskResumeAll>
 800dfc4:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800dfc8:	4640      	mov	r0, r8
 800dfca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800dfce:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dfd0:	4a36      	ldr	r2, [pc, #216]	; (800e0ac <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800dfd2:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dfd4:	4614      	mov	r4, r2
 800dfd6:	6812      	ldr	r2, [r2, #0]
 800dfd8:	4291      	cmp	r1, r2
 800dfda:	d8fb      	bhi.n	800dfd4 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dfdc:	6860      	ldr	r0, [r4, #4]
 800dfde:	eb04 0e00 	add.w	lr, r4, r0
 800dfe2:	4571      	cmp	r1, lr
 800dfe4:	d04b      	beq.n	800e07e <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dfe6:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dfea:	eb01 000e 	add.w	r0, r1, lr
 800dfee:	4282      	cmp	r2, r0
 800dff0:	d051      	beq.n	800e096 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800dff2:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dff4:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dff6:	bf18      	it	ne
 800dff8:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800dffa:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800dffc:	4a2c      	ldr	r2, [pc, #176]	; (800e0b0 <pvPortMalloc+0x168>)
 800dffe:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e000:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800e002:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800e004:	bf38      	it	cc
 800e006:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800e008:	4a2a      	ldr	r2, [pc, #168]	; (800e0b4 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800e00a:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800e00e:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800e010:	2000      	movs	r0, #0
 800e012:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800e016:	6813      	ldr	r3, [r2, #0]
 800e018:	3301      	adds	r3, #1
 800e01a:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800e01c:	f001 fee8 	bl	800fdf0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800e020:	f018 0f07 	tst.w	r8, #7
 800e024:	d0d0      	beq.n	800dfc8 <pvPortMalloc+0x80>
 800e026:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e02a:	f383 8811 	msr	BASEPRI, r3
 800e02e:	f3bf 8f6f 	isb	sy
 800e032:	f3bf 8f4f 	dsb	sy
 800e036:	e7fe      	b.n	800e036 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800e038:	4b1f      	ldr	r3, [pc, #124]	; (800e0b8 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800e03a:	075e      	lsls	r6, r3, #29
 800e03c:	d118      	bne.n	800e070 <pvPortMalloc+0x128>
 800e03e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800e042:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800e044:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e046:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800e04a:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e04c:	4a18      	ldr	r2, [pc, #96]	; (800e0b0 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e04e:	4817      	ldr	r0, [pc, #92]	; (800e0ac <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e050:	4c15      	ldr	r4, [pc, #84]	; (800e0a8 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800e052:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800e054:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e056:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e058:	4a18      	ldr	r2, [pc, #96]	; (800e0bc <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e05a:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800e05e:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800e060:	2200      	movs	r2, #0
 800e062:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800e064:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800e066:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800e06a:	e9c1 6300 	strd	r6, r3, [r1]
}
 800e06e:	e776      	b.n	800df5e <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800e070:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800e072:	f021 0107 	bic.w	r1, r1, #7
 800e076:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800e07a:	460b      	mov	r3, r1
 800e07c:	e7e2      	b.n	800e044 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e07e:	6849      	ldr	r1, [r1, #4]
 800e080:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e084:	eb04 010e 	add.w	r1, r4, lr
 800e088:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e08a:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e08e:	d001      	beq.n	800e094 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e090:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800e092:	e7b2      	b.n	800dffa <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e094:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e096:	42b2      	cmp	r2, r6
 800e098:	d0ab      	beq.n	800dff2 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e09a:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e09c:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e09e:	4470      	add	r0, lr
 800e0a0:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e0a2:	e7a6      	b.n	800dff2 <pvPortMalloc+0xaa>
 800e0a4:	20003198 	.word	0x20003198
 800e0a8:	2001319c 	.word	0x2001319c
 800e0ac:	200131b0 	.word	0x200131b0
 800e0b0:	200131a4 	.word	0x200131a4
 800e0b4:	200131a8 	.word	0x200131a8
 800e0b8:	2000319c 	.word	0x2000319c
 800e0bc:	200131a0 	.word	0x200131a0

0800e0c0 <vPortFree>:
	if( pv != NULL )
 800e0c0:	b1d0      	cbz	r0, 800e0f8 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800e0c2:	4a2c      	ldr	r2, [pc, #176]	; (800e174 <vPortFree+0xb4>)
 800e0c4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800e0c8:	6812      	ldr	r2, [r2, #0]
 800e0ca:	4213      	tst	r3, r2
 800e0cc:	d00b      	beq.n	800e0e6 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800e0ce:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800e0d2:	b191      	cbz	r1, 800e0fa <vPortFree+0x3a>
 800e0d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0d8:	f383 8811 	msr	BASEPRI, r3
 800e0dc:	f3bf 8f6f 	isb	sy
 800e0e0:	f3bf 8f4f 	dsb	sy
 800e0e4:	e7fe      	b.n	800e0e4 <vPortFree+0x24>
 800e0e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0ea:	f383 8811 	msr	BASEPRI, r3
 800e0ee:	f3bf 8f6f 	isb	sy
 800e0f2:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800e0f6:	e7fe      	b.n	800e0f6 <vPortFree+0x36>
 800e0f8:	4770      	bx	lr
{
 800e0fa:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e0fc:	ea23 0302 	bic.w	r3, r3, r2
{
 800e100:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e102:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e106:	4c1c      	ldr	r4, [pc, #112]	; (800e178 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800e108:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800e10a:	f001 fe69 	bl	800fde0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e10e:	9801      	ldr	r0, [sp, #4]
 800e110:	6822      	ldr	r2, [r4, #0]
 800e112:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e116:	4b19      	ldr	r3, [pc, #100]	; (800e17c <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e118:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800e11a:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800e11c:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800e11e:	461a      	mov	r2, r3
 800e120:	681b      	ldr	r3, [r3, #0]
 800e122:	4298      	cmp	r0, r3
 800e124:	d8fb      	bhi.n	800e11e <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800e126:	6854      	ldr	r4, [r2, #4]
 800e128:	eb02 0e04 	add.w	lr, r2, r4
 800e12c:	4570      	cmp	r0, lr
 800e12e:	d010      	beq.n	800e152 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e130:	eb00 0c01 	add.w	ip, r0, r1
 800e134:	4563      	cmp	r3, ip
 800e136:	d014      	beq.n	800e162 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800e138:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e13a:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800e13c:	bf18      	it	ne
 800e13e:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800e140:	4a0f      	ldr	r2, [pc, #60]	; (800e180 <vPortFree+0xc0>)
 800e142:	6813      	ldr	r3, [r2, #0]
 800e144:	3301      	adds	r3, #1
 800e146:	6013      	str	r3, [r2, #0]
}
 800e148:	b002      	add	sp, #8
 800e14a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800e14e:	f001 be4f 	b.w	800fdf0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e152:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e154:	1850      	adds	r0, r2, r1
 800e156:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800e158:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e15a:	d001      	beq.n	800e160 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e15c:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800e15e:	e7ef      	b.n	800e140 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800e160:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800e162:	4c08      	ldr	r4, [pc, #32]	; (800e184 <vPortFree+0xc4>)
 800e164:	6824      	ldr	r4, [r4, #0]
 800e166:	42a3      	cmp	r3, r4
 800e168:	d0e6      	beq.n	800e138 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e16a:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800e16e:	4421      	add	r1, r4
 800e170:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800e172:	e7e1      	b.n	800e138 <vPortFree+0x78>
 800e174:	2001319c 	.word	0x2001319c
 800e178:	200131a0 	.word	0x200131a0
 800e17c:	200131b0 	.word	0x200131b0
 800e180:	200131ac 	.word	0x200131ac
 800e184:	20003198 	.word	0x20003198

0800e188 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e188:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800e18c:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800e190:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800e192:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800e196:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800e19a:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800e19c:	4770      	bx	lr
 800e19e:	bf00      	nop

0800e1a0 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800e1a0:	2300      	movs	r3, #0
 800e1a2:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800e1a4:	4770      	bx	lr
 800e1a6:	bf00      	nop

0800e1a8 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800e1a8:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800e1aa:	689a      	ldr	r2, [r3, #8]
 800e1ac:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e1ae:	6802      	ldr	r2, [r0, #0]
{
 800e1b0:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800e1b2:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800e1b4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800e1b6:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800e1b8:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800e1ba:	6099      	str	r1, [r3, #8]
}
 800e1bc:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800e1c0:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800e1c2:	6002      	str	r2, [r0, #0]
}
 800e1c4:	4770      	bx	lr
 800e1c6:	bf00      	nop

0800e1c8 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800e1c8:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800e1ca:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800e1cc:	1c6b      	adds	r3, r5, #1
 800e1ce:	d010      	beq.n	800e1f2 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800e1d0:	f100 0308 	add.w	r3, r0, #8
 800e1d4:	461c      	mov	r4, r3
 800e1d6:	685b      	ldr	r3, [r3, #4]
 800e1d8:	681a      	ldr	r2, [r3, #0]
 800e1da:	42aa      	cmp	r2, r5
 800e1dc:	d9fa      	bls.n	800e1d4 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800e1de:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800e1e0:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800e1e2:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800e1e4:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800e1e6:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800e1e8:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800e1ea:	6108      	str	r0, [r1, #16]
}
 800e1ec:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800e1ee:	6002      	str	r2, [r0, #0]
}
 800e1f0:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800e1f2:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800e1f4:	6863      	ldr	r3, [r4, #4]
 800e1f6:	e7f2      	b.n	800e1de <vListInsert+0x16>

0800e1f8 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800e1f8:	6903      	ldr	r3, [r0, #16]
{
 800e1fa:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e1fc:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800e200:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800e202:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800e204:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800e206:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800e208:	bf08      	it	eq
 800e20a:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800e20c:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800e20e:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800e212:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800e214:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800e216:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800e218:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800e21a:	6818      	ldr	r0, [r3, #0]
}
 800e21c:	4770      	bx	lr
 800e21e:	bf00      	nop

0800e220 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800e220:	4808      	ldr	r0, [pc, #32]	; (800e244 <prvPortStartFirstTask+0x24>)
 800e222:	6800      	ldr	r0, [r0, #0]
 800e224:	6800      	ldr	r0, [r0, #0]
 800e226:	f380 8808 	msr	MSP, r0
 800e22a:	f04f 0000 	mov.w	r0, #0
 800e22e:	f380 8814 	msr	CONTROL, r0
 800e232:	b662      	cpsie	i
 800e234:	b661      	cpsie	f
 800e236:	f3bf 8f4f 	dsb	sy
 800e23a:	f3bf 8f6f 	isb	sy
 800e23e:	df00      	svc	0
 800e240:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800e242:	0000      	.short	0x0000
 800e244:	e000ed08 	.word	0xe000ed08

0800e248 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800e248:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800e258 <vPortEnableVFP+0x10>
 800e24c:	6801      	ldr	r1, [r0, #0]
 800e24e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800e252:	6001      	str	r1, [r0, #0]
 800e254:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800e256:	0000      	.short	0x0000
 800e258:	e000ed88 	.word	0xe000ed88

0800e25c <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800e25c:	4b0e      	ldr	r3, [pc, #56]	; (800e298 <prvTaskExitError+0x3c>)
 800e25e:	681b      	ldr	r3, [r3, #0]
{
 800e260:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800e262:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800e264:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800e266:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800e268:	d008      	beq.n	800e27c <prvTaskExitError+0x20>
 800e26a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e26e:	f383 8811 	msr	BASEPRI, r3
 800e272:	f3bf 8f6f 	isb	sy
 800e276:	f3bf 8f4f 	dsb	sy
 800e27a:	e7fe      	b.n	800e27a <prvTaskExitError+0x1e>
 800e27c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e280:	f383 8811 	msr	BASEPRI, r3
 800e284:	f3bf 8f6f 	isb	sy
 800e288:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e28c:	9b01      	ldr	r3, [sp, #4]
 800e28e:	2b00      	cmp	r3, #0
 800e290:	d0fc      	beq.n	800e28c <prvTaskExitError+0x30>
}
 800e292:	b002      	add	sp, #8
 800e294:	4770      	bx	lr
 800e296:	bf00      	nop
 800e298:	20000084 	.word	0x20000084

0800e29c <pxPortInitialiseStack>:
{
 800e29c:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e29e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e2a2:	4c07      	ldr	r4, [pc, #28]	; (800e2c0 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800e2a4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800e2a8:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e2ac:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800e2b0:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800e2b4:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800e2b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e2bc:	3844      	subs	r0, #68	; 0x44
 800e2be:	4770      	bx	lr
 800e2c0:	0800e25d 	.word	0x0800e25d
	...

0800e2d0 <SVC_Handler>:
	__asm volatile (
 800e2d0:	4b07      	ldr	r3, [pc, #28]	; (800e2f0 <pxCurrentTCBConst2>)
 800e2d2:	6819      	ldr	r1, [r3, #0]
 800e2d4:	6808      	ldr	r0, [r1, #0]
 800e2d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2da:	f380 8809 	msr	PSP, r0
 800e2de:	f3bf 8f6f 	isb	sy
 800e2e2:	f04f 0000 	mov.w	r0, #0
 800e2e6:	f380 8811 	msr	BASEPRI, r0
 800e2ea:	4770      	bx	lr
 800e2ec:	f3af 8000 	nop.w

0800e2f0 <pxCurrentTCBConst2>:
 800e2f0:	20013200 	.word	0x20013200

0800e2f4 <vPortEnterCritical>:
 800e2f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2f8:	f383 8811 	msr	BASEPRI, r3
 800e2fc:	f3bf 8f6f 	isb	sy
 800e300:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800e304:	4a0b      	ldr	r2, [pc, #44]	; (800e334 <vPortEnterCritical+0x40>)
 800e306:	6813      	ldr	r3, [r2, #0]
 800e308:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800e30a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800e30c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800e30e:	d000      	beq.n	800e312 <vPortEnterCritical+0x1e>
}
 800e310:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800e312:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e316:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800e31a:	b2db      	uxtb	r3, r3
 800e31c:	2b00      	cmp	r3, #0
 800e31e:	d0f7      	beq.n	800e310 <vPortEnterCritical+0x1c>
 800e320:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e324:	f383 8811 	msr	BASEPRI, r3
 800e328:	f3bf 8f6f 	isb	sy
 800e32c:	f3bf 8f4f 	dsb	sy
 800e330:	e7fe      	b.n	800e330 <vPortEnterCritical+0x3c>
 800e332:	bf00      	nop
 800e334:	20000084 	.word	0x20000084

0800e338 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800e338:	4a08      	ldr	r2, [pc, #32]	; (800e35c <vPortExitCritical+0x24>)
 800e33a:	6813      	ldr	r3, [r2, #0]
 800e33c:	b943      	cbnz	r3, 800e350 <vPortExitCritical+0x18>
 800e33e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e342:	f383 8811 	msr	BASEPRI, r3
 800e346:	f3bf 8f6f 	isb	sy
 800e34a:	f3bf 8f4f 	dsb	sy
 800e34e:	e7fe      	b.n	800e34e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800e350:	3b01      	subs	r3, #1
 800e352:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800e354:	b90b      	cbnz	r3, 800e35a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800e356:	f383 8811 	msr	BASEPRI, r3
}
 800e35a:	4770      	bx	lr
 800e35c:	20000084 	.word	0x20000084

0800e360 <PendSV_Handler>:
	__asm volatile
 800e360:	f3ef 8009 	mrs	r0, PSP
 800e364:	f3bf 8f6f 	isb	sy
 800e368:	4b15      	ldr	r3, [pc, #84]	; (800e3c0 <pxCurrentTCBConst>)
 800e36a:	681a      	ldr	r2, [r3, #0]
 800e36c:	f01e 0f10 	tst.w	lr, #16
 800e370:	bf08      	it	eq
 800e372:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800e376:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e37a:	6010      	str	r0, [r2, #0]
 800e37c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800e380:	f04f 0050 	mov.w	r0, #80	; 0x50
 800e384:	f380 8811 	msr	BASEPRI, r0
 800e388:	f3bf 8f4f 	dsb	sy
 800e38c:	f3bf 8f6f 	isb	sy
 800e390:	f001 fd54 	bl	800fe3c <vTaskSwitchContext>
 800e394:	f04f 0000 	mov.w	r0, #0
 800e398:	f380 8811 	msr	BASEPRI, r0
 800e39c:	bc09      	pop	{r0, r3}
 800e39e:	6819      	ldr	r1, [r3, #0]
 800e3a0:	6808      	ldr	r0, [r1, #0]
 800e3a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3a6:	f01e 0f10 	tst.w	lr, #16
 800e3aa:	bf08      	it	eq
 800e3ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800e3b0:	f380 8809 	msr	PSP, r0
 800e3b4:	f3bf 8f6f 	isb	sy
 800e3b8:	4770      	bx	lr
 800e3ba:	bf00      	nop
 800e3bc:	f3af 8000 	nop.w

0800e3c0 <pxCurrentTCBConst>:
 800e3c0:	20013200 	.word	0x20013200

0800e3c4 <xPortSysTickHandler>:
{
 800e3c4:	b508      	push	{r3, lr}
	__asm volatile
 800e3c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3ca:	f383 8811 	msr	BASEPRI, r3
 800e3ce:	f3bf 8f6f 	isb	sy
 800e3d2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800e3d6:	f001 fd21 	bl	800fe1c <xTaskIncrementTick>
 800e3da:	b128      	cbz	r0, 800e3e8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800e3dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e3e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e3e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800e3e8:	2300      	movs	r3, #0
 800e3ea:	f383 8811 	msr	BASEPRI, r3
}
 800e3ee:	bd08      	pop	{r3, pc}

0800e3f0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e3f0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800e3f4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e3f6:	4906      	ldr	r1, [pc, #24]	; (800e410 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800e3f8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800e3fa:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e3fc:	680b      	ldr	r3, [r1, #0]
 800e3fe:	4905      	ldr	r1, [pc, #20]	; (800e414 <vPortSetupTimerInterrupt+0x24>)
 800e400:	fba1 1303 	umull	r1, r3, r1, r3
 800e404:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e406:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800e408:	3b01      	subs	r3, #1
 800e40a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800e40c:	6110      	str	r0, [r2, #16]
}
 800e40e:	4770      	bx	lr
 800e410:	20000078 	.word	0x20000078
 800e414:	10624dd3 	.word	0x10624dd3

0800e418 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e418:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e41c:	4a49      	ldr	r2, [pc, #292]	; (800e544 <xPortStartScheduler+0x12c>)
 800e41e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800e422:	4291      	cmp	r1, r2
 800e424:	d043      	beq.n	800e4ae <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e426:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800e42a:	4b47      	ldr	r3, [pc, #284]	; (800e548 <xPortStartScheduler+0x130>)
 800e42c:	429a      	cmp	r2, r3
 800e42e:	d035      	beq.n	800e49c <xPortStartScheduler+0x84>
{
 800e430:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e432:	4b46      	ldr	r3, [pc, #280]	; (800e54c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e434:	4846      	ldr	r0, [pc, #280]	; (800e550 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e436:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e438:	4c46      	ldr	r4, [pc, #280]	; (800e554 <xPortStartScheduler+0x13c>)
{
 800e43a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e43c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800e43e:	b2d2      	uxtb	r2, r2
 800e440:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800e442:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800e444:	781b      	ldrb	r3, [r3, #0]
 800e446:	b2db      	uxtb	r3, r3
 800e448:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e44c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e450:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e454:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e458:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800e45a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e45c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800e45e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e460:	bf48      	it	mi
 800e462:	2206      	movmi	r2, #6
 800e464:	d511      	bpl.n	800e48a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800e466:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e46a:	005b      	lsls	r3, r3, #1
 800e46c:	b2db      	uxtb	r3, r3
 800e46e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800e472:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e476:	0609      	lsls	r1, r1, #24
 800e478:	4610      	mov	r0, r2
 800e47a:	f102 32ff 	add.w	r2, r2, #4294967295
 800e47e:	d4f2      	bmi.n	800e466 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800e480:	2803      	cmp	r0, #3
 800e482:	6020      	str	r0, [r4, #0]
 800e484:	f88d 3007 	strb.w	r3, [sp, #7]
 800e488:	d01a      	beq.n	800e4c0 <xPortStartScheduler+0xa8>
	__asm volatile
 800e48a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e48e:	f383 8811 	msr	BASEPRI, r3
 800e492:	f3bf 8f6f 	isb	sy
 800e496:	f3bf 8f4f 	dsb	sy
 800e49a:	e7fe      	b.n	800e49a <xPortStartScheduler+0x82>
 800e49c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4a0:	f383 8811 	msr	BASEPRI, r3
 800e4a4:	f3bf 8f6f 	isb	sy
 800e4a8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800e4ac:	e7fe      	b.n	800e4ac <xPortStartScheduler+0x94>
 800e4ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4b2:	f383 8811 	msr	BASEPRI, r3
 800e4b6:	f3bf 8f6f 	isb	sy
 800e4ba:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800e4be:	e7fe      	b.n	800e4be <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e4c0:	9b02      	ldr	r3, [sp, #8]
 800e4c2:	4a22      	ldr	r2, [pc, #136]	; (800e54c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e4c4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e4c8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e4cc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800e4ce:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800e4d0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e4d2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e4d6:	4c20      	ldr	r4, [pc, #128]	; (800e558 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800e4d8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800e4dc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800e4e0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800e4e4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800e4e8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800e4ec:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800e4ee:	f7ff ff7f 	bl	800e3f0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e4f2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e4f4:	f7ff fea8 	bl	800e248 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e4f8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e4fc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e500:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e504:	f7ff fe8c 	bl	800e220 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e508:	f001 fc98 	bl	800fe3c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e50c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e50e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e510:	3301      	adds	r3, #1
 800e512:	d008      	beq.n	800e526 <xPortStartScheduler+0x10e>
 800e514:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e518:	f383 8811 	msr	BASEPRI, r3
 800e51c:	f3bf 8f6f 	isb	sy
 800e520:	f3bf 8f4f 	dsb	sy
 800e524:	e7fe      	b.n	800e524 <xPortStartScheduler+0x10c>
 800e526:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e52a:	f383 8811 	msr	BASEPRI, r3
 800e52e:	f3bf 8f6f 	isb	sy
 800e532:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e536:	9b03      	ldr	r3, [sp, #12]
 800e538:	2b00      	cmp	r3, #0
 800e53a:	d0fc      	beq.n	800e536 <xPortStartScheduler+0x11e>
}
 800e53c:	2000      	movs	r0, #0
 800e53e:	b004      	add	sp, #16
 800e540:	bd70      	pop	{r4, r5, r6, pc}
 800e542:	bf00      	nop
 800e544:	410fc271 	.word	0x410fc271
 800e548:	410fc270 	.word	0x410fc270
 800e54c:	e000e400 	.word	0xe000e400
 800e550:	200131b8 	.word	0x200131b8
 800e554:	200131bc 	.word	0x200131bc
 800e558:	20000084 	.word	0x20000084

0800e55c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e55c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e560:	2b0f      	cmp	r3, #15
 800e562:	d90e      	bls.n	800e582 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e564:	4911      	ldr	r1, [pc, #68]	; (800e5ac <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e566:	4a12      	ldr	r2, [pc, #72]	; (800e5b0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e568:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e56a:	7812      	ldrb	r2, [r2, #0]
 800e56c:	429a      	cmp	r2, r3
 800e56e:	d908      	bls.n	800e582 <vPortValidateInterruptPriority+0x26>
 800e570:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e574:	f383 8811 	msr	BASEPRI, r3
 800e578:	f3bf 8f6f 	isb	sy
 800e57c:	f3bf 8f4f 	dsb	sy
 800e580:	e7fe      	b.n	800e580 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e582:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e586:	4a0b      	ldr	r2, [pc, #44]	; (800e5b4 <vPortValidateInterruptPriority+0x58>)
 800e588:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e58c:	6812      	ldr	r2, [r2, #0]
 800e58e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e592:	4293      	cmp	r3, r2
 800e594:	d908      	bls.n	800e5a8 <vPortValidateInterruptPriority+0x4c>
 800e596:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e59a:	f383 8811 	msr	BASEPRI, r3
 800e59e:	f3bf 8f6f 	isb	sy
 800e5a2:	f3bf 8f4f 	dsb	sy
 800e5a6:	e7fe      	b.n	800e5a6 <vPortValidateInterruptPriority+0x4a>
	}
 800e5a8:	4770      	bx	lr
 800e5aa:	bf00      	nop
 800e5ac:	e000e3f0 	.word	0xe000e3f0
 800e5b0:	200131b8 	.word	0x200131b8
 800e5b4:	200131bc 	.word	0x200131bc

0800e5b8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e5b8:	b570      	push	{r4, r5, r6, lr}
 800e5ba:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e5bc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e5be:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e5c0:	b920      	cbnz	r0, 800e5cc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e5c2:	6825      	ldr	r5, [r4, #0]
 800e5c4:	b34d      	cbz	r5, 800e61a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5c6:	3601      	adds	r6, #1
 800e5c8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e5ca:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e5cc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e5ce:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e5d0:	b97d      	cbnz	r5, 800e5f2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e5d2:	6860      	ldr	r0, [r4, #4]
 800e5d4:	f01d fd67 	bl	802c0a6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e5d8:	6863      	ldr	r3, [r4, #4]
 800e5da:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e5dc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e5de:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e5e0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e5e2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e5e4:	bf24      	itt	cs
 800e5e6:	6823      	ldrcs	r3, [r4, #0]
 800e5e8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5ea:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e5ec:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e5ee:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e5f0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e5f2:	68e0      	ldr	r0, [r4, #12]
 800e5f4:	f01d fd57 	bl	802c0a6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e5f8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e5fa:	68e3      	ldr	r3, [r4, #12]
 800e5fc:	4251      	negs	r1, r2
 800e5fe:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e600:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e602:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e604:	4293      	cmp	r3, r2
 800e606:	d202      	bcs.n	800e60e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e608:	68a3      	ldr	r3, [r4, #8]
 800e60a:	440b      	add	r3, r1
 800e60c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e60e:	2d02      	cmp	r5, #2
 800e610:	d008      	beq.n	800e624 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e612:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e614:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e616:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e618:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e61a:	68a0      	ldr	r0, [r4, #8]
 800e61c:	f001 fde0 	bl	80101e0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e620:	60a5      	str	r5, [r4, #8]
 800e622:	e7d0      	b.n	800e5c6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e624:	2e01      	cmp	r6, #1
 800e626:	bf38      	it	cc
 800e628:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e62a:	2000      	movs	r0, #0
 800e62c:	e7cc      	b.n	800e5c8 <prvCopyDataToQueue+0x10>
 800e62e:	bf00      	nop

0800e630 <xQueueGenericCreateStatic>:
	{
 800e630:	b530      	push	{r4, r5, lr}
 800e632:	b083      	sub	sp, #12
 800e634:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e638:	b940      	cbnz	r0, 800e64c <xQueueGenericCreateStatic+0x1c>
 800e63a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e63e:	f383 8811 	msr	BASEPRI, r3
 800e642:	f3bf 8f6f 	isb	sy
 800e646:	f3bf 8f4f 	dsb	sy
 800e64a:	e7fe      	b.n	800e64a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e64c:	461d      	mov	r5, r3
 800e64e:	b17b      	cbz	r3, 800e670 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e650:	b302      	cbz	r2, 800e694 <xQueueGenericCreateStatic+0x64>
 800e652:	b1b1      	cbz	r1, 800e682 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e654:	2350      	movs	r3, #80	; 0x50
 800e656:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e658:	9b01      	ldr	r3, [sp, #4]
 800e65a:	2b50      	cmp	r3, #80	; 0x50
 800e65c:	d023      	beq.n	800e6a6 <xQueueGenericCreateStatic+0x76>
 800e65e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e662:	f383 8811 	msr	BASEPRI, r3
 800e666:	f3bf 8f6f 	isb	sy
 800e66a:	f3bf 8f4f 	dsb	sy
 800e66e:	e7fe      	b.n	800e66e <xQueueGenericCreateStatic+0x3e>
 800e670:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e674:	f383 8811 	msr	BASEPRI, r3
 800e678:	f3bf 8f6f 	isb	sy
 800e67c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e680:	e7fe      	b.n	800e680 <xQueueGenericCreateStatic+0x50>
 800e682:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e686:	f383 8811 	msr	BASEPRI, r3
 800e68a:	f3bf 8f6f 	isb	sy
 800e68e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e692:	e7fe      	b.n	800e692 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e694:	bb89      	cbnz	r1, 800e6fa <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e696:	2250      	movs	r2, #80	; 0x50
 800e698:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e69a:	9a01      	ldr	r2, [sp, #4]
 800e69c:	2a50      	cmp	r2, #80	; 0x50
 800e69e:	d1de      	bne.n	800e65e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e6a0:	9a01      	ldr	r2, [sp, #4]
 800e6a2:	462a      	mov	r2, r5
 800e6a4:	e000      	b.n	800e6a8 <xQueueGenericCreateStatic+0x78>
 800e6a6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e6a8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e6aa:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e6ac:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e6b0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e6b4:	f7ff fe1e 	bl	800e2f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6b8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e6bc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e6be:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6c0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6c4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6c6:	4401      	add	r1, r0
 800e6c8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e6ca:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6cc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e6ce:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e6d0:	21ff      	movs	r1, #255	; 0xff
 800e6d2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e6d6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e6d8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e6dc:	f105 0010 	add.w	r0, r5, #16
 800e6e0:	f7ff fd52 	bl	800e188 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e6e4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e6e8:	f7ff fd4e 	bl	800e188 <vListInitialise>
	taskEXIT_CRITICAL();
 800e6ec:	f7ff fe24 	bl	800e338 <vPortExitCritical>
	}
 800e6f0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e6f2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e6f6:	b003      	add	sp, #12
 800e6f8:	bd30      	pop	{r4, r5, pc}
 800e6fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6fe:	f383 8811 	msr	BASEPRI, r3
 800e702:	f3bf 8f6f 	isb	sy
 800e706:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e70a:	e7fe      	b.n	800e70a <xQueueGenericCreateStatic+0xda>

0800e70c <xQueueGenericCreate>:
	{
 800e70c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e70e:	b940      	cbnz	r0, 800e722 <xQueueGenericCreate+0x16>
 800e710:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e714:	f383 8811 	msr	BASEPRI, r3
 800e718:	f3bf 8f6f 	isb	sy
 800e71c:	f3bf 8f4f 	dsb	sy
 800e720:	e7fe      	b.n	800e720 <xQueueGenericCreate+0x14>
 800e722:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e724:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e728:	3050      	adds	r0, #80	; 0x50
 800e72a:	460e      	mov	r6, r1
 800e72c:	4617      	mov	r7, r2
 800e72e:	f7ff fc0b 	bl	800df48 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e732:	4604      	mov	r4, r0
 800e734:	b340      	cbz	r0, 800e788 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e736:	2300      	movs	r3, #0
 800e738:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e73c:	b336      	cbz	r6, 800e78c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e73e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e742:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e744:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e748:	f7ff fdd4 	bl	800e2f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e74c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e750:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e752:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e754:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e758:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e75a:	440a      	add	r2, r1
 800e75c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e75e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e760:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e762:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e764:	22ff      	movs	r2, #255	; 0xff
 800e766:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e76a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e76c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e770:	f104 0010 	add.w	r0, r4, #16
 800e774:	f7ff fd08 	bl	800e188 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e778:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e77c:	f7ff fd04 	bl	800e188 <vListInitialise>
	taskEXIT_CRITICAL();
 800e780:	f7ff fdda 	bl	800e338 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e784:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e788:	4620      	mov	r0, r4
 800e78a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e78c:	4603      	mov	r3, r0
 800e78e:	e7d8      	b.n	800e742 <xQueueGenericCreate+0x36>

0800e790 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e790:	b940      	cbnz	r0, 800e7a4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e792:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e796:	f383 8811 	msr	BASEPRI, r3
 800e79a:	f3bf 8f6f 	isb	sy
 800e79e:	f3bf 8f4f 	dsb	sy
 800e7a2:	e7fe      	b.n	800e7a2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e7a4:	4288      	cmp	r0, r1
 800e7a6:	d208      	bcs.n	800e7ba <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e7a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7ac:	f383 8811 	msr	BASEPRI, r3
 800e7b0:	f3bf 8f6f 	isb	sy
 800e7b4:	f3bf 8f4f 	dsb	sy
 800e7b8:	e7fe      	b.n	800e7b8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e7ba:	b530      	push	{r4, r5, lr}
 800e7bc:	4615      	mov	r5, r2
 800e7be:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e7c0:	2a00      	cmp	r2, #0
 800e7c2:	d03c      	beq.n	800e83e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e7c4:	2350      	movs	r3, #80	; 0x50
 800e7c6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e7c8:	9b03      	ldr	r3, [sp, #12]
 800e7ca:	2b50      	cmp	r3, #80	; 0x50
 800e7cc:	d008      	beq.n	800e7e0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e7ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7d2:	f383 8811 	msr	BASEPRI, r3
 800e7d6:	f3bf 8f6f 	isb	sy
 800e7da:	f3bf 8f4f 	dsb	sy
 800e7de:	e7fe      	b.n	800e7de <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e7e0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e7e2:	2301      	movs	r3, #1
 800e7e4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e7e8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e7ea:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e7ee:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e7f0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e7f2:	f7ff fd7f 	bl	800e2f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e7f6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e7fa:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e7fc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e7fe:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e802:	1ac3      	subs	r3, r0, r3
 800e804:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e806:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e808:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e80c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e810:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e812:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e814:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e818:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e81a:	f105 0010 	add.w	r0, r5, #16
 800e81e:	f7ff fcb3 	bl	800e188 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e822:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e826:	f7ff fcaf 	bl	800e188 <vListInitialise>
	taskEXIT_CRITICAL();
 800e82a:	f7ff fd85 	bl	800e338 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e82e:	9901      	ldr	r1, [sp, #4]
 800e830:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e832:	2302      	movs	r3, #2
	}
 800e834:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e836:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e83a:	b005      	add	sp, #20
 800e83c:	bd30      	pop	{r4, r5, pc}
 800e83e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e842:	f383 8811 	msr	BASEPRI, r3
 800e846:	f3bf 8f6f 	isb	sy
 800e84a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e84e:	e7fe      	b.n	800e84e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e850 <xQueueCreateCountingSemaphore>:
	{
 800e850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e852:	b940      	cbnz	r0, 800e866 <xQueueCreateCountingSemaphore+0x16>
 800e854:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e858:	f383 8811 	msr	BASEPRI, r3
 800e85c:	f3bf 8f6f 	isb	sy
 800e860:	f3bf 8f4f 	dsb	sy
 800e864:	e7fe      	b.n	800e864 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e866:	4288      	cmp	r0, r1
 800e868:	460e      	mov	r6, r1
 800e86a:	4604      	mov	r4, r0
 800e86c:	d208      	bcs.n	800e880 <xQueueCreateCountingSemaphore+0x30>
 800e86e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e872:	f383 8811 	msr	BASEPRI, r3
 800e876:	f3bf 8f6f 	isb	sy
 800e87a:	f3bf 8f4f 	dsb	sy
 800e87e:	e7fe      	b.n	800e87e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e880:	2050      	movs	r0, #80	; 0x50
 800e882:	f7ff fb61 	bl	800df48 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e886:	4605      	mov	r5, r0
 800e888:	b330      	cbz	r0, 800e8d8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e88a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e88c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e890:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e894:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e896:	f7ff fd2d 	bl	800e2f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e89a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e89e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e8a0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8a2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8a6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8a8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8aa:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8ac:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e8ae:	22ff      	movs	r2, #255	; 0xff
 800e8b0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e8b4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e8b6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e8b8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e8bc:	f105 0010 	add.w	r0, r5, #16
 800e8c0:	f7ff fc62 	bl	800e188 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e8c4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e8c8:	f7ff fc5e 	bl	800e188 <vListInitialise>
	taskEXIT_CRITICAL();
 800e8cc:	f7ff fd34 	bl	800e338 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e8d0:	2302      	movs	r3, #2
 800e8d2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e8d6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e8d8:	4628      	mov	r0, r5
 800e8da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e8dc <xQueueGenericSend>:
{
 800e8dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e8e0:	b085      	sub	sp, #20
 800e8e2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e8e4:	2800      	cmp	r0, #0
 800e8e6:	f000 80a4 	beq.w	800ea32 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e8ea:	4688      	mov	r8, r1
 800e8ec:	461f      	mov	r7, r3
 800e8ee:	4604      	mov	r4, r0
 800e8f0:	2900      	cmp	r1, #0
 800e8f2:	f000 8091 	beq.w	800ea18 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e8f6:	2f02      	cmp	r7, #2
 800e8f8:	d10b      	bne.n	800e912 <xQueueGenericSend+0x36>
 800e8fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e8fc:	2b01      	cmp	r3, #1
 800e8fe:	d008      	beq.n	800e912 <xQueueGenericSend+0x36>
 800e900:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e904:	f383 8811 	msr	BASEPRI, r3
 800e908:	f3bf 8f6f 	isb	sy
 800e90c:	f3bf 8f4f 	dsb	sy
 800e910:	e7fe      	b.n	800e910 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e912:	f001 fc0f 	bl	8010134 <xTaskGetSchedulerState>
 800e916:	4605      	mov	r5, r0
 800e918:	2800      	cmp	r0, #0
 800e91a:	f000 8093 	beq.w	800ea44 <xQueueGenericSend+0x168>
 800e91e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e920:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e924:	f7ff fce6 	bl	800e2f4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e928:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e92a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e92c:	429a      	cmp	r2, r3
 800e92e:	f0c0 80ef 	bcc.w	800eb10 <xQueueGenericSend+0x234>
 800e932:	2f02      	cmp	r7, #2
 800e934:	f000 80ec 	beq.w	800eb10 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e938:	9801      	ldr	r0, [sp, #4]
 800e93a:	2800      	cmp	r0, #0
 800e93c:	f000 8101 	beq.w	800eb42 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e940:	2d00      	cmp	r5, #0
 800e942:	f000 80e1 	beq.w	800eb08 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e946:	f7ff fcf7 	bl	800e338 <vPortExitCritical>
		vTaskSuspendAll();
 800e94a:	f001 fa49 	bl	800fde0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e94e:	f7ff fcd1 	bl	800e2f4 <vPortEnterCritical>
 800e952:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e956:	2bff      	cmp	r3, #255	; 0xff
 800e958:	bf04      	itt	eq
 800e95a:	2300      	moveq	r3, #0
 800e95c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e960:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e964:	2bff      	cmp	r3, #255	; 0xff
 800e966:	bf04      	itt	eq
 800e968:	2300      	moveq	r3, #0
 800e96a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e96e:	f7ff fce3 	bl	800e338 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e972:	a901      	add	r1, sp, #4
 800e974:	a802      	add	r0, sp, #8
 800e976:	f001 fb8f 	bl	8010098 <xTaskCheckForTimeOut>
 800e97a:	2800      	cmp	r0, #0
 800e97c:	f040 80e6 	bne.w	800eb4c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e980:	f7ff fcb8 	bl	800e2f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e984:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e986:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e988:	429a      	cmp	r2, r3
 800e98a:	d068      	beq.n	800ea5e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e98c:	f7ff fcd4 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e990:	f7ff fcb0 	bl	800e2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e994:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e998:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e99a:	2d00      	cmp	r5, #0
 800e99c:	dc04      	bgt.n	800e9a8 <xQueueGenericSend+0xcc>
 800e99e:	e011      	b.n	800e9c4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e9a0:	1e6a      	subs	r2, r5, #1
 800e9a2:	b2d3      	uxtb	r3, r2
 800e9a4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9a6:	b16b      	cbz	r3, 800e9c4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9ac:	b153      	cbz	r3, 800e9c4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9ae:	f001 fb1f 	bl	800fff0 <xTaskRemoveFromEventList>
 800e9b2:	2800      	cmp	r0, #0
 800e9b4:	d0f4      	beq.n	800e9a0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e9b6:	f001 fbb7 	bl	8010128 <vTaskMissedYield>
			--cTxLock;
 800e9ba:	1e6a      	subs	r2, r5, #1
 800e9bc:	b2d3      	uxtb	r3, r2
 800e9be:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9c0:	2b00      	cmp	r3, #0
 800e9c2:	d1f1      	bne.n	800e9a8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e9c4:	23ff      	movs	r3, #255	; 0xff
 800e9c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e9ca:	f7ff fcb5 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9ce:	f7ff fc91 	bl	800e2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e9d2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e9d6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9d8:	2d00      	cmp	r5, #0
 800e9da:	dd14      	ble.n	800ea06 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9dc:	f104 0910 	add.w	r9, r4, #16
 800e9e0:	e003      	b.n	800e9ea <xQueueGenericSend+0x10e>
				--cRxLock;
 800e9e2:	1e6a      	subs	r2, r5, #1
 800e9e4:	b2d3      	uxtb	r3, r2
 800e9e6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9e8:	b16b      	cbz	r3, 800ea06 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9ea:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9ec:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9ee:	b153      	cbz	r3, 800ea06 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9f0:	f001 fafe 	bl	800fff0 <xTaskRemoveFromEventList>
 800e9f4:	2800      	cmp	r0, #0
 800e9f6:	d0f4      	beq.n	800e9e2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e9f8:	f001 fb96 	bl	8010128 <vTaskMissedYield>
				--cRxLock;
 800e9fc:	1e6a      	subs	r2, r5, #1
 800e9fe:	b2d3      	uxtb	r3, r2
 800ea00:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea02:	2b00      	cmp	r3, #0
 800ea04:	d1f1      	bne.n	800e9ea <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800ea06:	23ff      	movs	r3, #255	; 0xff
 800ea08:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ea0c:	f7ff fc94 	bl	800e338 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ea10:	f001 f9ee 	bl	800fdf0 <xTaskResumeAll>
 800ea14:	2501      	movs	r5, #1
 800ea16:	e785      	b.n	800e924 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ea18:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ea1a:	2b00      	cmp	r3, #0
 800ea1c:	f43f af6b 	beq.w	800e8f6 <xQueueGenericSend+0x1a>
 800ea20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea24:	f383 8811 	msr	BASEPRI, r3
 800ea28:	f3bf 8f6f 	isb	sy
 800ea2c:	f3bf 8f4f 	dsb	sy
 800ea30:	e7fe      	b.n	800ea30 <xQueueGenericSend+0x154>
 800ea32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea36:	f383 8811 	msr	BASEPRI, r3
 800ea3a:	f3bf 8f6f 	isb	sy
 800ea3e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ea42:	e7fe      	b.n	800ea42 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ea44:	9b01      	ldr	r3, [sp, #4]
 800ea46:	2b00      	cmp	r3, #0
 800ea48:	f43f af6a 	beq.w	800e920 <xQueueGenericSend+0x44>
 800ea4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea50:	f383 8811 	msr	BASEPRI, r3
 800ea54:	f3bf 8f6f 	isb	sy
 800ea58:	f3bf 8f4f 	dsb	sy
 800ea5c:	e7fe      	b.n	800ea5c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ea5e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800ea62:	f7ff fc69 	bl	800e338 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800ea66:	9901      	ldr	r1, [sp, #4]
 800ea68:	4648      	mov	r0, r9
 800ea6a:	f001 fa33 	bl	800fed4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ea6e:	f7ff fc41 	bl	800e2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea72:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea76:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea78:	2d00      	cmp	r5, #0
 800ea7a:	dc04      	bgt.n	800ea86 <xQueueGenericSend+0x1aa>
 800ea7c:	e011      	b.n	800eaa2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800ea7e:	1e6b      	subs	r3, r5, #1
 800ea80:	b2da      	uxtb	r2, r3
 800ea82:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea84:	b16a      	cbz	r2, 800eaa2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea86:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea88:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea8a:	b153      	cbz	r3, 800eaa2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea8c:	f001 fab0 	bl	800fff0 <xTaskRemoveFromEventList>
 800ea90:	2800      	cmp	r0, #0
 800ea92:	d0f4      	beq.n	800ea7e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800ea94:	f001 fb48 	bl	8010128 <vTaskMissedYield>
			--cTxLock;
 800ea98:	1e6b      	subs	r3, r5, #1
 800ea9a:	b2da      	uxtb	r2, r3
 800ea9c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea9e:	2a00      	cmp	r2, #0
 800eaa0:	d1f1      	bne.n	800ea86 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800eaa2:	23ff      	movs	r3, #255	; 0xff
 800eaa4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eaa8:	f7ff fc46 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eaac:	f7ff fc22 	bl	800e2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eab0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eab4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eab6:	2d00      	cmp	r5, #0
 800eab8:	dc04      	bgt.n	800eac4 <xQueueGenericSend+0x1e8>
 800eaba:	e011      	b.n	800eae0 <xQueueGenericSend+0x204>
				--cRxLock;
 800eabc:	1e6b      	subs	r3, r5, #1
 800eabe:	b2da      	uxtb	r2, r3
 800eac0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eac2:	b16a      	cbz	r2, 800eae0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eac4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eac6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eac8:	b153      	cbz	r3, 800eae0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eaca:	f001 fa91 	bl	800fff0 <xTaskRemoveFromEventList>
 800eace:	2800      	cmp	r0, #0
 800ead0:	d0f4      	beq.n	800eabc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800ead2:	f001 fb29 	bl	8010128 <vTaskMissedYield>
				--cRxLock;
 800ead6:	1e6b      	subs	r3, r5, #1
 800ead8:	b2da      	uxtb	r2, r3
 800eada:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eadc:	2a00      	cmp	r2, #0
 800eade:	d1f1      	bne.n	800eac4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800eae0:	23ff      	movs	r3, #255	; 0xff
 800eae2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800eae6:	f7ff fc27 	bl	800e338 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800eaea:	f001 f981 	bl	800fdf0 <xTaskResumeAll>
 800eaee:	2800      	cmp	r0, #0
 800eaf0:	d190      	bne.n	800ea14 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800eaf2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eaf6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eafa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eafe:	f3bf 8f4f 	dsb	sy
 800eb02:	f3bf 8f6f 	isb	sy
 800eb06:	e785      	b.n	800ea14 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800eb08:	a802      	add	r0, sp, #8
 800eb0a:	f001 fab9 	bl	8010080 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800eb0e:	e71a      	b.n	800e946 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800eb10:	463a      	mov	r2, r7
 800eb12:	4641      	mov	r1, r8
 800eb14:	4620      	mov	r0, r4
 800eb16:	f7ff fd4f 	bl	800e5b8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800eb1c:	2b00      	cmp	r3, #0
 800eb1e:	d153      	bne.n	800ebc8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800eb20:	b148      	cbz	r0, 800eb36 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800eb22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb26:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb2a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb2e:	f3bf 8f4f 	dsb	sy
 800eb32:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800eb36:	f7ff fbff 	bl	800e338 <vPortExitCritical>
				return pdPASS;
 800eb3a:	2001      	movs	r0, #1
}
 800eb3c:	b005      	add	sp, #20
 800eb3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eb42:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800eb44:	f7ff fbf8 	bl	800e338 <vPortExitCritical>
					return errQUEUE_FULL;
 800eb48:	9800      	ldr	r0, [sp, #0]
 800eb4a:	e7f7      	b.n	800eb3c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800eb4c:	f7ff fbd2 	bl	800e2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eb50:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800eb54:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb56:	2d00      	cmp	r5, #0
 800eb58:	dd10      	ble.n	800eb7c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb5a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800eb5e:	e003      	b.n	800eb68 <xQueueGenericSend+0x28c>
			--cTxLock;
 800eb60:	1e6b      	subs	r3, r5, #1
 800eb62:	b2da      	uxtb	r2, r3
 800eb64:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eb66:	b14a      	cbz	r2, 800eb7c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb68:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb6a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eb6c:	b133      	cbz	r3, 800eb7c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb6e:	f001 fa3f 	bl	800fff0 <xTaskRemoveFromEventList>
 800eb72:	2800      	cmp	r0, #0
 800eb74:	d0f4      	beq.n	800eb60 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800eb76:	f001 fad7 	bl	8010128 <vTaskMissedYield>
 800eb7a:	e7f1      	b.n	800eb60 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800eb7c:	23ff      	movs	r3, #255	; 0xff
 800eb7e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eb82:	f7ff fbd9 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eb86:	f7ff fbb5 	bl	800e2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eb8a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eb8e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eb90:	2d00      	cmp	r5, #0
 800eb92:	dd10      	ble.n	800ebb6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb94:	f104 0610 	add.w	r6, r4, #16
 800eb98:	e003      	b.n	800eba2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800eb9a:	1e6b      	subs	r3, r5, #1
 800eb9c:	b2da      	uxtb	r2, r3
 800eb9e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eba0:	b14a      	cbz	r2, 800ebb6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eba2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eba4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eba6:	b133      	cbz	r3, 800ebb6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eba8:	f001 fa22 	bl	800fff0 <xTaskRemoveFromEventList>
 800ebac:	2800      	cmp	r0, #0
 800ebae:	d0f4      	beq.n	800eb9a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800ebb0:	f001 faba 	bl	8010128 <vTaskMissedYield>
 800ebb4:	e7f1      	b.n	800eb9a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800ebb6:	23ff      	movs	r3, #255	; 0xff
 800ebb8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ebbc:	f7ff fbbc 	bl	800e338 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ebc0:	f001 f916 	bl	800fdf0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800ebc4:	2000      	movs	r0, #0
 800ebc6:	e7b9      	b.n	800eb3c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ebc8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ebcc:	f001 fa10 	bl	800fff0 <xTaskRemoveFromEventList>
 800ebd0:	2800      	cmp	r0, #0
 800ebd2:	d0b0      	beq.n	800eb36 <xQueueGenericSend+0x25a>
 800ebd4:	e7a5      	b.n	800eb22 <xQueueGenericSend+0x246>
 800ebd6:	bf00      	nop

0800ebd8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800ebd8:	2800      	cmp	r0, #0
 800ebda:	d04b      	beq.n	800ec74 <xQueueGenericSendFromISR+0x9c>
{
 800ebdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ebe0:	460e      	mov	r6, r1
 800ebe2:	4617      	mov	r7, r2
 800ebe4:	461d      	mov	r5, r3
 800ebe6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ebe8:	b321      	cbz	r1, 800ec34 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800ebea:	2d02      	cmp	r5, #2
 800ebec:	d10b      	bne.n	800ec06 <xQueueGenericSendFromISR+0x2e>
 800ebee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ebf0:	2b01      	cmp	r3, #1
 800ebf2:	d008      	beq.n	800ec06 <xQueueGenericSendFromISR+0x2e>
 800ebf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebf8:	f383 8811 	msr	BASEPRI, r3
 800ebfc:	f3bf 8f6f 	isb	sy
 800ec00:	f3bf 8f4f 	dsb	sy
 800ec04:	e7fe      	b.n	800ec04 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ec06:	f7ff fca9 	bl	800e55c <vPortValidateInterruptPriority>
	__asm volatile
 800ec0a:	f3ef 8811 	mrs	r8, BASEPRI
 800ec0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec12:	f383 8811 	msr	BASEPRI, r3
 800ec16:	f3bf 8f6f 	isb	sy
 800ec1a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800ec1e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ec20:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ec22:	429a      	cmp	r2, r3
 800ec24:	d312      	bcc.n	800ec4c <xQueueGenericSendFromISR+0x74>
 800ec26:	2d02      	cmp	r5, #2
 800ec28:	d010      	beq.n	800ec4c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800ec2a:	2000      	movs	r0, #0
	__asm volatile
 800ec2c:	f388 8811 	msr	BASEPRI, r8
}
 800ec30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ec34:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ec36:	2b00      	cmp	r3, #0
 800ec38:	d0d7      	beq.n	800ebea <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800ec3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec3e:	f383 8811 	msr	BASEPRI, r3
 800ec42:	f3bf 8f6f 	isb	sy
 800ec46:	f3bf 8f4f 	dsb	sy
 800ec4a:	e7fe      	b.n	800ec4a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec4c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800ec4e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ec52:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec54:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800ec56:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800ec58:	4620      	mov	r0, r4
 800ec5a:	f7ff fcad 	bl	800e5b8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800ec5e:	1c6b      	adds	r3, r5, #1
 800ec60:	d011      	beq.n	800ec86 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ec62:	1c6b      	adds	r3, r5, #1
 800ec64:	b25b      	sxtb	r3, r3
 800ec66:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800ec6a:	2001      	movs	r0, #1
	__asm volatile
 800ec6c:	f388 8811 	msr	BASEPRI, r8
}
 800ec70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800ec74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec78:	f383 8811 	msr	BASEPRI, r3
 800ec7c:	f3bf 8f6f 	isb	sy
 800ec80:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ec84:	e7fe      	b.n	800ec84 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ec88:	2b00      	cmp	r3, #0
 800ec8a:	d0ee      	beq.n	800ec6a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec8c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ec90:	f001 f9ae 	bl	800fff0 <xTaskRemoveFromEventList>
 800ec94:	2800      	cmp	r0, #0
 800ec96:	d0e8      	beq.n	800ec6a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800ec98:	2f00      	cmp	r7, #0
 800ec9a:	d0e6      	beq.n	800ec6a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ec9c:	2001      	movs	r0, #1
 800ec9e:	6038      	str	r0, [r7, #0]
 800eca0:	e7c4      	b.n	800ec2c <xQueueGenericSendFromISR+0x54>
 800eca2:	bf00      	nop

0800eca4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800eca4:	b370      	cbz	r0, 800ed04 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800eca6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800eca8:	b570      	push	{r4, r5, r6, lr}
 800ecaa:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800ecac:	b143      	cbz	r3, 800ecc0 <xQueueGiveFromISR+0x1c>
 800ecae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecb2:	f383 8811 	msr	BASEPRI, r3
 800ecb6:	f3bf 8f6f 	isb	sy
 800ecba:	f3bf 8f4f 	dsb	sy
 800ecbe:	e7fe      	b.n	800ecbe <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ecc0:	6803      	ldr	r3, [r0, #0]
 800ecc2:	460c      	mov	r4, r1
 800ecc4:	b33b      	cbz	r3, 800ed16 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ecc6:	f7ff fc49 	bl	800e55c <vPortValidateInterruptPriority>
	__asm volatile
 800ecca:	f3ef 8511 	mrs	r5, BASEPRI
 800ecce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecd2:	f383 8811 	msr	BASEPRI, r3
 800ecd6:	f3bf 8f6f 	isb	sy
 800ecda:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ecde:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800ece0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800ece2:	429a      	cmp	r2, r3
 800ece4:	d923      	bls.n	800ed2e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800ece6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ecea:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800ecec:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800ecee:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800ecf0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800ecf2:	d020      	beq.n	800ed36 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ecf4:	3301      	adds	r3, #1
 800ecf6:	b25b      	sxtb	r3, r3
 800ecf8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800ecfc:	2001      	movs	r0, #1
	__asm volatile
 800ecfe:	f385 8811 	msr	BASEPRI, r5
}
 800ed02:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800ed04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed08:	f383 8811 	msr	BASEPRI, r3
 800ed0c:	f3bf 8f6f 	isb	sy
 800ed10:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ed14:	e7fe      	b.n	800ed14 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800ed16:	6883      	ldr	r3, [r0, #8]
 800ed18:	2b00      	cmp	r3, #0
 800ed1a:	d0d4      	beq.n	800ecc6 <xQueueGiveFromISR+0x22>
 800ed1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed20:	f383 8811 	msr	BASEPRI, r3
 800ed24:	f3bf 8f6f 	isb	sy
 800ed28:	f3bf 8f4f 	dsb	sy
 800ed2c:	e7fe      	b.n	800ed2c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800ed2e:	2000      	movs	r0, #0
	__asm volatile
 800ed30:	f385 8811 	msr	BASEPRI, r5
}
 800ed34:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed36:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800ed38:	2b00      	cmp	r3, #0
 800ed3a:	d0df      	beq.n	800ecfc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed3c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800ed40:	f001 f956 	bl	800fff0 <xTaskRemoveFromEventList>
 800ed44:	2800      	cmp	r0, #0
 800ed46:	d0d9      	beq.n	800ecfc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800ed48:	2c00      	cmp	r4, #0
 800ed4a:	d0d7      	beq.n	800ecfc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ed4c:	2001      	movs	r0, #1
 800ed4e:	6020      	str	r0, [r4, #0]
 800ed50:	e7ee      	b.n	800ed30 <xQueueGiveFromISR+0x8c>
 800ed52:	bf00      	nop

0800ed54 <xQueueReceive>:
{
 800ed54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ed58:	b085      	sub	sp, #20
 800ed5a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800ed5c:	2800      	cmp	r0, #0
 800ed5e:	f000 815c 	beq.w	800f01a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ed62:	460f      	mov	r7, r1
 800ed64:	4604      	mov	r4, r0
 800ed66:	2900      	cmp	r1, #0
 800ed68:	d079      	beq.n	800ee5e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ed6a:	f001 f9e3 	bl	8010134 <xTaskGetSchedulerState>
 800ed6e:	2800      	cmp	r0, #0
 800ed70:	f000 8081 	beq.w	800ee76 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800ed74:	f7ff fabe 	bl	800e2f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ed78:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ed7a:	2d00      	cmp	r5, #0
 800ed7c:	f040 8138 	bne.w	800eff0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ed80:	9b01      	ldr	r3, [sp, #4]
 800ed82:	2b00      	cmp	r3, #0
 800ed84:	f000 80d5 	beq.w	800ef32 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ed88:	a802      	add	r0, sp, #8
 800ed8a:	f001 f979 	bl	8010080 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800ed8e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed90:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800ed94:	f7ff fad0 	bl	800e338 <vPortExitCritical>
		vTaskSuspendAll();
 800ed98:	f001 f822 	bl	800fde0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ed9c:	f7ff faaa 	bl	800e2f4 <vPortEnterCritical>
 800eda0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eda4:	2bff      	cmp	r3, #255	; 0xff
 800eda6:	bf08      	it	eq
 800eda8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800edac:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800edb0:	2bff      	cmp	r3, #255	; 0xff
 800edb2:	bf08      	it	eq
 800edb4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800edb8:	f7ff fabe 	bl	800e338 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800edbc:	a901      	add	r1, sp, #4
 800edbe:	a802      	add	r0, sp, #8
 800edc0:	f001 f96a 	bl	8010098 <xTaskCheckForTimeOut>
 800edc4:	2800      	cmp	r0, #0
 800edc6:	d163      	bne.n	800ee90 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800edc8:	f7ff fa94 	bl	800e2f4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800edcc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800edce:	2b00      	cmp	r3, #0
 800edd0:	f000 80b5 	beq.w	800ef3e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800edd4:	f7ff fab0 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800edd8:	f7ff fa8c 	bl	800e2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800eddc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ede0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ede2:	2d00      	cmp	r5, #0
 800ede4:	dc04      	bgt.n	800edf0 <xQueueReceive+0x9c>
 800ede6:	e011      	b.n	800ee0c <xQueueReceive+0xb8>
			--cTxLock;
 800ede8:	1e6b      	subs	r3, r5, #1
 800edea:	b2da      	uxtb	r2, r3
 800edec:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800edee:	b16a      	cbz	r2, 800ee0c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800edf0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800edf2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800edf4:	b153      	cbz	r3, 800ee0c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800edf6:	f001 f8fb 	bl	800fff0 <xTaskRemoveFromEventList>
 800edfa:	2800      	cmp	r0, #0
 800edfc:	d0f4      	beq.n	800ede8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800edfe:	f001 f993 	bl	8010128 <vTaskMissedYield>
			--cTxLock;
 800ee02:	1e6b      	subs	r3, r5, #1
 800ee04:	b2da      	uxtb	r2, r3
 800ee06:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee08:	2a00      	cmp	r2, #0
 800ee0a:	d1f1      	bne.n	800edf0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800ee0c:	23ff      	movs	r3, #255	; 0xff
 800ee0e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ee12:	f7ff fa91 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ee16:	f7ff fa6d 	bl	800e2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ee1a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ee1e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee20:	2d00      	cmp	r5, #0
 800ee22:	dd14      	ble.n	800ee4e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee24:	f104 0910 	add.w	r9, r4, #16
 800ee28:	e003      	b.n	800ee32 <xQueueReceive+0xde>
				--cRxLock;
 800ee2a:	1e6b      	subs	r3, r5, #1
 800ee2c:	b2da      	uxtb	r2, r3
 800ee2e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee30:	b16a      	cbz	r2, 800ee4e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee32:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee34:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee36:	b153      	cbz	r3, 800ee4e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee38:	f001 f8da 	bl	800fff0 <xTaskRemoveFromEventList>
 800ee3c:	2800      	cmp	r0, #0
 800ee3e:	d0f4      	beq.n	800ee2a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800ee40:	f001 f972 	bl	8010128 <vTaskMissedYield>
				--cRxLock;
 800ee44:	1e6b      	subs	r3, r5, #1
 800ee46:	b2da      	uxtb	r2, r3
 800ee48:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ee4a:	2a00      	cmp	r2, #0
 800ee4c:	d1f1      	bne.n	800ee32 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800ee4e:	23ff      	movs	r3, #255	; 0xff
 800ee50:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ee54:	f7ff fa70 	bl	800e338 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ee58:	f000 ffca 	bl	800fdf0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800ee5c:	e060      	b.n	800ef20 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ee5e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ee60:	2b00      	cmp	r3, #0
 800ee62:	d082      	beq.n	800ed6a <xQueueReceive+0x16>
	__asm volatile
 800ee64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee68:	f383 8811 	msr	BASEPRI, r3
 800ee6c:	f3bf 8f6f 	isb	sy
 800ee70:	f3bf 8f4f 	dsb	sy
 800ee74:	e7fe      	b.n	800ee74 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ee76:	9b01      	ldr	r3, [sp, #4]
 800ee78:	2b00      	cmp	r3, #0
 800ee7a:	f43f af7b 	beq.w	800ed74 <xQueueReceive+0x20>
 800ee7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee82:	f383 8811 	msr	BASEPRI, r3
 800ee86:	f3bf 8f6f 	isb	sy
 800ee8a:	f3bf 8f4f 	dsb	sy
 800ee8e:	e7fe      	b.n	800ee8e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800ee90:	f7ff fa30 	bl	800e2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ee94:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ee98:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ee9a:	2d00      	cmp	r5, #0
 800ee9c:	dc04      	bgt.n	800eea8 <xQueueReceive+0x154>
 800ee9e:	e011      	b.n	800eec4 <xQueueReceive+0x170>
			--cTxLock;
 800eea0:	1e6b      	subs	r3, r5, #1
 800eea2:	b2da      	uxtb	r2, r3
 800eea4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eea6:	b16a      	cbz	r2, 800eec4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eea8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eeaa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800eeac:	b153      	cbz	r3, 800eec4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eeae:	f001 f89f 	bl	800fff0 <xTaskRemoveFromEventList>
 800eeb2:	2800      	cmp	r0, #0
 800eeb4:	d0f4      	beq.n	800eea0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800eeb6:	f001 f937 	bl	8010128 <vTaskMissedYield>
			--cTxLock;
 800eeba:	1e6b      	subs	r3, r5, #1
 800eebc:	b2da      	uxtb	r2, r3
 800eebe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800eec0:	2a00      	cmp	r2, #0
 800eec2:	d1f1      	bne.n	800eea8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800eec4:	23ff      	movs	r3, #255	; 0xff
 800eec6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800eeca:	f7ff fa35 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800eece:	f7ff fa11 	bl	800e2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800eed2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eed6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eed8:	2d00      	cmp	r5, #0
 800eeda:	dd14      	ble.n	800ef06 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eedc:	f104 0910 	add.w	r9, r4, #16
 800eee0:	e003      	b.n	800eeea <xQueueReceive+0x196>
				--cRxLock;
 800eee2:	1e6b      	subs	r3, r5, #1
 800eee4:	b2da      	uxtb	r2, r3
 800eee6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eee8:	b16a      	cbz	r2, 800ef06 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eeea:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eeec:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eeee:	b153      	cbz	r3, 800ef06 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eef0:	f001 f87e 	bl	800fff0 <xTaskRemoveFromEventList>
 800eef4:	2800      	cmp	r0, #0
 800eef6:	d0f4      	beq.n	800eee2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800eef8:	f001 f916 	bl	8010128 <vTaskMissedYield>
				--cRxLock;
 800eefc:	1e6b      	subs	r3, r5, #1
 800eefe:	b2da      	uxtb	r2, r3
 800ef00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef02:	2a00      	cmp	r2, #0
 800ef04:	d1f1      	bne.n	800eeea <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800ef06:	23ff      	movs	r3, #255	; 0xff
 800ef08:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ef0c:	f7ff fa14 	bl	800e338 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ef10:	f000 ff6e 	bl	800fdf0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ef14:	f7ff f9ee 	bl	800e2f4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ef18:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ef1a:	b153      	cbz	r3, 800ef32 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800ef1c:	f7ff fa0c 	bl	800e338 <vPortExitCritical>
		taskENTER_CRITICAL();
 800ef20:	f7ff f9e8 	bl	800e2f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ef24:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ef26:	2d00      	cmp	r5, #0
 800ef28:	d162      	bne.n	800eff0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ef2a:	9b01      	ldr	r3, [sp, #4]
 800ef2c:	2b00      	cmp	r3, #0
 800ef2e:	f47f af31 	bne.w	800ed94 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800ef32:	f7ff fa01 	bl	800e338 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ef36:	2000      	movs	r0, #0
}
 800ef38:	b005      	add	sp, #20
 800ef3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800ef3e:	f7ff f9fb 	bl	800e338 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ef42:	9901      	ldr	r1, [sp, #4]
 800ef44:	4630      	mov	r0, r6
 800ef46:	f000 ffc5 	bl	800fed4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ef4a:	f7ff f9d3 	bl	800e2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ef4e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ef52:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef54:	2d00      	cmp	r5, #0
 800ef56:	dc04      	bgt.n	800ef62 <xQueueReceive+0x20e>
 800ef58:	e011      	b.n	800ef7e <xQueueReceive+0x22a>
			--cTxLock;
 800ef5a:	1e6b      	subs	r3, r5, #1
 800ef5c:	b2da      	uxtb	r2, r3
 800ef5e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef60:	b16a      	cbz	r2, 800ef7e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef62:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef64:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ef66:	b153      	cbz	r3, 800ef7e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ef68:	f001 f842 	bl	800fff0 <xTaskRemoveFromEventList>
 800ef6c:	2800      	cmp	r0, #0
 800ef6e:	d0f4      	beq.n	800ef5a <xQueueReceive+0x206>
						vTaskMissedYield();
 800ef70:	f001 f8da 	bl	8010128 <vTaskMissedYield>
			--cTxLock;
 800ef74:	1e6b      	subs	r3, r5, #1
 800ef76:	b2da      	uxtb	r2, r3
 800ef78:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ef7a:	2a00      	cmp	r2, #0
 800ef7c:	d1f1      	bne.n	800ef62 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ef7e:	23ff      	movs	r3, #255	; 0xff
 800ef80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ef84:	f7ff f9d8 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ef88:	f7ff f9b4 	bl	800e2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ef8c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ef90:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ef92:	2d00      	cmp	r5, #0
 800ef94:	dd14      	ble.n	800efc0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef96:	f104 0910 	add.w	r9, r4, #16
 800ef9a:	e003      	b.n	800efa4 <xQueueReceive+0x250>
				--cRxLock;
 800ef9c:	1e6b      	subs	r3, r5, #1
 800ef9e:	b2da      	uxtb	r2, r3
 800efa0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800efa2:	b16a      	cbz	r2, 800efc0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800efa4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efa6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800efa8:	b153      	cbz	r3, 800efc0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800efaa:	f001 f821 	bl	800fff0 <xTaskRemoveFromEventList>
 800efae:	2800      	cmp	r0, #0
 800efb0:	d0f4      	beq.n	800ef9c <xQueueReceive+0x248>
					vTaskMissedYield();
 800efb2:	f001 f8b9 	bl	8010128 <vTaskMissedYield>
				--cRxLock;
 800efb6:	1e6b      	subs	r3, r5, #1
 800efb8:	b2da      	uxtb	r2, r3
 800efba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800efbc:	2a00      	cmp	r2, #0
 800efbe:	d1f1      	bne.n	800efa4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800efc0:	23ff      	movs	r3, #255	; 0xff
 800efc2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800efc6:	f7ff f9b7 	bl	800e338 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800efca:	f000 ff11 	bl	800fdf0 <xTaskResumeAll>
 800efce:	2800      	cmp	r0, #0
 800efd0:	d1a6      	bne.n	800ef20 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800efd2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800efd6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800efda:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800efde:	f3bf 8f4f 	dsb	sy
 800efe2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800efe6:	f7ff f985 	bl	800e2f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800efea:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800efec:	2d00      	cmp	r5, #0
 800efee:	d09c      	beq.n	800ef2a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800eff0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800eff2:	b152      	cbz	r2, 800f00a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eff4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eff6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eff8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800effa:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800effc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800effe:	bf24      	itt	cs
 800f000:	6821      	ldrcs	r1, [r4, #0]
 800f002:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f004:	4638      	mov	r0, r7
 800f006:	f01d f84e 	bl	802c0a6 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f00a:	3d01      	subs	r5, #1
 800f00c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f00e:	6923      	ldr	r3, [r4, #16]
 800f010:	b963      	cbnz	r3, 800f02c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800f012:	f7ff f991 	bl	800e338 <vPortExitCritical>
				return pdPASS;
 800f016:	2001      	movs	r0, #1
 800f018:	e78e      	b.n	800ef38 <xQueueReceive+0x1e4>
 800f01a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f01e:	f383 8811 	msr	BASEPRI, r3
 800f022:	f3bf 8f6f 	isb	sy
 800f026:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800f02a:	e7fe      	b.n	800f02a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f02c:	f104 0010 	add.w	r0, r4, #16
 800f030:	f000 ffde 	bl	800fff0 <xTaskRemoveFromEventList>
 800f034:	2800      	cmp	r0, #0
 800f036:	d0ec      	beq.n	800f012 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800f038:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f03c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f040:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f044:	f3bf 8f4f 	dsb	sy
 800f048:	f3bf 8f6f 	isb	sy
 800f04c:	e7e1      	b.n	800f012 <xQueueReceive+0x2be>
 800f04e:	bf00      	nop

0800f050 <xQueueSemaphoreTake>:
{
 800f050:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f054:	b084      	sub	sp, #16
 800f056:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800f058:	2800      	cmp	r0, #0
 800f05a:	d05c      	beq.n	800f116 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800f05c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800f05e:	4604      	mov	r4, r0
 800f060:	b147      	cbz	r7, 800f074 <xQueueSemaphoreTake+0x24>
 800f062:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f066:	f383 8811 	msr	BASEPRI, r3
 800f06a:	f3bf 8f6f 	isb	sy
 800f06e:	f3bf 8f4f 	dsb	sy
 800f072:	e7fe      	b.n	800f072 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f074:	f001 f85e 	bl	8010134 <xTaskGetSchedulerState>
 800f078:	4605      	mov	r5, r0
 800f07a:	2800      	cmp	r0, #0
 800f07c:	d054      	beq.n	800f128 <xQueueSemaphoreTake+0xd8>
 800f07e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f080:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800f084:	f7ff f936 	bl	800e2f4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800f088:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800f08a:	2b00      	cmp	r3, #0
 800f08c:	f040 8148 	bne.w	800f320 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800f090:	9b01      	ldr	r3, [sp, #4]
 800f092:	2b00      	cmp	r3, #0
 800f094:	f000 813a 	beq.w	800f30c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800f098:	2d00      	cmp	r5, #0
 800f09a:	f000 809d 	beq.w	800f1d8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800f09e:	f7ff f94b 	bl	800e338 <vPortExitCritical>
		vTaskSuspendAll();
 800f0a2:	f000 fe9d 	bl	800fde0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800f0a6:	f7ff f925 	bl	800e2f4 <vPortEnterCritical>
 800f0aa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f0ae:	2bff      	cmp	r3, #255	; 0xff
 800f0b0:	bf04      	itt	eq
 800f0b2:	2300      	moveq	r3, #0
 800f0b4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800f0b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f0bc:	2bff      	cmp	r3, #255	; 0xff
 800f0be:	bf04      	itt	eq
 800f0c0:	2300      	moveq	r3, #0
 800f0c2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800f0c6:	f7ff f937 	bl	800e338 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800f0ca:	a901      	add	r1, sp, #4
 800f0cc:	a802      	add	r0, sp, #8
 800f0ce:	f000 ffe3 	bl	8010098 <xTaskCheckForTimeOut>
 800f0d2:	2800      	cmp	r0, #0
 800f0d4:	d135      	bne.n	800f142 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800f0d6:	f7ff f90d 	bl	800e2f4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f0da:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f0dc:	2b00      	cmp	r3, #0
 800f0de:	f000 80a4 	beq.w	800f22a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800f0e2:	f7ff f929 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f0e6:	f7ff f905 	bl	800e2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f0ea:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f0ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0f0:	2d00      	cmp	r5, #0
 800f0f2:	dc05      	bgt.n	800f100 <xQueueSemaphoreTake+0xb0>
 800f0f4:	e074      	b.n	800f1e0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800f0f6:	1e6b      	subs	r3, r5, #1
 800f0f8:	b2da      	uxtb	r2, r3
 800f0fa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0fc:	2a00      	cmp	r2, #0
 800f0fe:	d06f      	beq.n	800f1e0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f100:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f102:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f104:	2b00      	cmp	r3, #0
 800f106:	d06b      	beq.n	800f1e0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f108:	f000 ff72 	bl	800fff0 <xTaskRemoveFromEventList>
 800f10c:	2800      	cmp	r0, #0
 800f10e:	d0f2      	beq.n	800f0f6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800f110:	f001 f80a 	bl	8010128 <vTaskMissedYield>
 800f114:	e7ef      	b.n	800f0f6 <xQueueSemaphoreTake+0xa6>
 800f116:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f11a:	f383 8811 	msr	BASEPRI, r3
 800f11e:	f3bf 8f6f 	isb	sy
 800f122:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800f126:	e7fe      	b.n	800f126 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800f128:	9b01      	ldr	r3, [sp, #4]
 800f12a:	2b00      	cmp	r3, #0
 800f12c:	f000 80d4 	beq.w	800f2d8 <xQueueSemaphoreTake+0x288>
 800f130:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f134:	f383 8811 	msr	BASEPRI, r3
 800f138:	f3bf 8f6f 	isb	sy
 800f13c:	f3bf 8f4f 	dsb	sy
 800f140:	e7fe      	b.n	800f140 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800f142:	f7ff f8d7 	bl	800e2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f146:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f14a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f14c:	2d00      	cmp	r5, #0
 800f14e:	dc04      	bgt.n	800f15a <xQueueSemaphoreTake+0x10a>
 800f150:	e011      	b.n	800f176 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800f152:	1e6b      	subs	r3, r5, #1
 800f154:	b2da      	uxtb	r2, r3
 800f156:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f158:	b16a      	cbz	r2, 800f176 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f15a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f15c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f15e:	b153      	cbz	r3, 800f176 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f160:	f000 ff46 	bl	800fff0 <xTaskRemoveFromEventList>
 800f164:	2800      	cmp	r0, #0
 800f166:	d0f4      	beq.n	800f152 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800f168:	f000 ffde 	bl	8010128 <vTaskMissedYield>
			--cTxLock;
 800f16c:	1e6b      	subs	r3, r5, #1
 800f16e:	b2da      	uxtb	r2, r3
 800f170:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f172:	2a00      	cmp	r2, #0
 800f174:	d1f1      	bne.n	800f15a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800f176:	23ff      	movs	r3, #255	; 0xff
 800f178:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f17c:	f7ff f8dc 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f180:	f7ff f8b8 	bl	800e2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f184:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f188:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f18a:	2d00      	cmp	r5, #0
 800f18c:	dd14      	ble.n	800f1b8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f18e:	f104 0810 	add.w	r8, r4, #16
 800f192:	e003      	b.n	800f19c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800f194:	1e6b      	subs	r3, r5, #1
 800f196:	b2da      	uxtb	r2, r3
 800f198:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f19a:	b16a      	cbz	r2, 800f1b8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f19c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f19e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f1a0:	b153      	cbz	r3, 800f1b8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1a2:	f000 ff25 	bl	800fff0 <xTaskRemoveFromEventList>
 800f1a6:	2800      	cmp	r0, #0
 800f1a8:	d0f4      	beq.n	800f194 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800f1aa:	f000 ffbd 	bl	8010128 <vTaskMissedYield>
				--cRxLock;
 800f1ae:	1e6b      	subs	r3, r5, #1
 800f1b0:	b2da      	uxtb	r2, r3
 800f1b2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f1b4:	2a00      	cmp	r2, #0
 800f1b6:	d1f1      	bne.n	800f19c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800f1b8:	23ff      	movs	r3, #255	; 0xff
 800f1ba:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f1be:	f7ff f8bb 	bl	800e338 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800f1c2:	f000 fe15 	bl	800fdf0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800f1c6:	f7ff f895 	bl	800e2f4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800f1ca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800f1cc:	2b00      	cmp	r3, #0
 800f1ce:	d07c      	beq.n	800f2ca <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800f1d0:	f7ff f8b2 	bl	800e338 <vPortExitCritical>
	return xReturn;
 800f1d4:	2501      	movs	r5, #1
 800f1d6:	e755      	b.n	800f084 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800f1d8:	a802      	add	r0, sp, #8
 800f1da:	f000 ff51 	bl	8010080 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800f1de:	e75e      	b.n	800f09e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f1e0:	23ff      	movs	r3, #255	; 0xff
 800f1e2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f1e6:	f7ff f8a7 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f1ea:	f7ff f883 	bl	800e2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f1ee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f1f2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f1f4:	2d00      	cmp	r5, #0
 800f1f6:	dd10      	ble.n	800f21a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f1f8:	f104 0810 	add.w	r8, r4, #16
 800f1fc:	e003      	b.n	800f206 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800f1fe:	1e6b      	subs	r3, r5, #1
 800f200:	b2da      	uxtb	r2, r3
 800f202:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f204:	b14a      	cbz	r2, 800f21a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f206:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f208:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f20a:	b133      	cbz	r3, 800f21a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f20c:	f000 fef0 	bl	800fff0 <xTaskRemoveFromEventList>
 800f210:	2800      	cmp	r0, #0
 800f212:	d0f4      	beq.n	800f1fe <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800f214:	f000 ff88 	bl	8010128 <vTaskMissedYield>
 800f218:	e7f1      	b.n	800f1fe <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800f21a:	23ff      	movs	r3, #255	; 0xff
 800f21c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f220:	f7ff f88a 	bl	800e338 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800f224:	f000 fde4 	bl	800fdf0 <xTaskResumeAll>
 800f228:	e7d4      	b.n	800f1d4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800f22a:	f7ff f885 	bl	800e338 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f22e:	6823      	ldr	r3, [r4, #0]
 800f230:	2b00      	cmp	r3, #0
 800f232:	d062      	beq.n	800f2fa <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800f234:	9901      	ldr	r1, [sp, #4]
 800f236:	4630      	mov	r0, r6
 800f238:	f000 fe4c 	bl	800fed4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800f23c:	f7ff f85a 	bl	800e2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f240:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800f244:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f246:	2d00      	cmp	r5, #0
 800f248:	dc04      	bgt.n	800f254 <xQueueSemaphoreTake+0x204>
 800f24a:	e00d      	b.n	800f268 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800f24c:	1e6b      	subs	r3, r5, #1
 800f24e:	b2da      	uxtb	r2, r3
 800f250:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f252:	b14a      	cbz	r2, 800f268 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f254:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f256:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f258:	b133      	cbz	r3, 800f268 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f25a:	f000 fec9 	bl	800fff0 <xTaskRemoveFromEventList>
 800f25e:	2800      	cmp	r0, #0
 800f260:	d0f4      	beq.n	800f24c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800f262:	f000 ff61 	bl	8010128 <vTaskMissedYield>
 800f266:	e7f1      	b.n	800f24c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800f268:	23ff      	movs	r3, #255	; 0xff
 800f26a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f26e:	f7ff f863 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f272:	f7ff f83f 	bl	800e2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f276:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800f27a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f27c:	2d00      	cmp	r5, #0
 800f27e:	dd10      	ble.n	800f2a2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f280:	f104 0810 	add.w	r8, r4, #16
 800f284:	e003      	b.n	800f28e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800f286:	1e6b      	subs	r3, r5, #1
 800f288:	b2da      	uxtb	r2, r3
 800f28a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f28c:	b14a      	cbz	r2, 800f2a2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f28e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f290:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f292:	b133      	cbz	r3, 800f2a2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f294:	f000 feac 	bl	800fff0 <xTaskRemoveFromEventList>
 800f298:	2800      	cmp	r0, #0
 800f29a:	d0f4      	beq.n	800f286 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800f29c:	f000 ff44 	bl	8010128 <vTaskMissedYield>
 800f2a0:	e7f1      	b.n	800f286 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800f2a2:	23ff      	movs	r3, #255	; 0xff
 800f2a4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800f2a8:	f7ff f846 	bl	800e338 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800f2ac:	f000 fda0 	bl	800fdf0 <xTaskResumeAll>
 800f2b0:	2800      	cmp	r0, #0
 800f2b2:	d18f      	bne.n	800f1d4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800f2b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f2b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f2bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f2c0:	f3bf 8f4f 	dsb	sy
 800f2c4:	f3bf 8f6f 	isb	sy
 800f2c8:	e784      	b.n	800f1d4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800f2ca:	f7ff f835 	bl	800e338 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800f2ce:	b92f      	cbnz	r7, 800f2dc <xQueueSemaphoreTake+0x28c>
}
 800f2d0:	4638      	mov	r0, r7
 800f2d2:	b004      	add	sp, #16
 800f2d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2d8:	4607      	mov	r7, r0
 800f2da:	e6d1      	b.n	800f080 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800f2dc:	f7ff f80a 	bl	800e2f4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800f2e0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f2e2:	b119      	cbz	r1, 800f2ec <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800f2e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f2e6:	6819      	ldr	r1, [r3, #0]
 800f2e8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800f2ec:	68a0      	ldr	r0, [r4, #8]
 800f2ee:	f000 ffbd 	bl	801026c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800f2f2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800f2f4:	f7ff f820 	bl	800e338 <vPortExitCritical>
 800f2f8:	e7ea      	b.n	800f2d0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800f2fa:	f7fe fffb 	bl	800e2f4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800f2fe:	68a0      	ldr	r0, [r4, #8]
 800f300:	f000 ff28 	bl	8010154 <xTaskPriorityInherit>
 800f304:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800f306:	f7ff f817 	bl	800e338 <vPortExitCritical>
 800f30a:	e793      	b.n	800f234 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800f30c:	b197      	cbz	r7, 800f334 <xQueueSemaphoreTake+0x2e4>
 800f30e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f312:	f383 8811 	msr	BASEPRI, r3
 800f316:	f3bf 8f6f 	isb	sy
 800f31a:	f3bf 8f4f 	dsb	sy
 800f31e:	e7fe      	b.n	800f31e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f320:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800f322:	3b01      	subs	r3, #1
 800f324:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800f326:	b1ca      	cbz	r2, 800f35c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f328:	6923      	ldr	r3, [r4, #16]
 800f32a:	b933      	cbnz	r3, 800f33a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800f32c:	f7ff f804 	bl	800e338 <vPortExitCritical>
				return pdPASS;
 800f330:	2701      	movs	r7, #1
 800f332:	e7cd      	b.n	800f2d0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800f334:	f7ff f800 	bl	800e338 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800f338:	e7ca      	b.n	800f2d0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f33a:	f104 0010 	add.w	r0, r4, #16
 800f33e:	f000 fe57 	bl	800fff0 <xTaskRemoveFromEventList>
 800f342:	2800      	cmp	r0, #0
 800f344:	d0f2      	beq.n	800f32c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800f346:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f34a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f34e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f352:	f3bf 8f4f 	dsb	sy
 800f356:	f3bf 8f6f 	isb	sy
 800f35a:	e7e7      	b.n	800f32c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800f35c:	f000 ffda 	bl	8010314 <pvTaskIncrementMutexHeldCount>
 800f360:	60a0      	str	r0, [r4, #8]
 800f362:	e7e1      	b.n	800f328 <xQueueSemaphoreTake+0x2d8>

0800f364 <xQueueReceiveFromISR>:
{
 800f364:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800f368:	b310      	cbz	r0, 800f3b0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f36a:	460e      	mov	r6, r1
 800f36c:	4617      	mov	r7, r2
 800f36e:	4604      	mov	r4, r0
 800f370:	b191      	cbz	r1, 800f398 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800f372:	f7ff f8f3 	bl	800e55c <vPortValidateInterruptPriority>
	__asm volatile
 800f376:	f3ef 8911 	mrs	r9, BASEPRI
 800f37a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f37e:	f383 8811 	msr	BASEPRI, r3
 800f382:	f3bf 8f6f 	isb	sy
 800f386:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800f38a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800f38c:	b9cd      	cbnz	r5, 800f3c2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800f38e:	4628      	mov	r0, r5
	__asm volatile
 800f390:	f389 8811 	msr	BASEPRI, r9
}
 800f394:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800f398:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800f39a:	2b00      	cmp	r3, #0
 800f39c:	d0e9      	beq.n	800f372 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800f39e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3a2:	f383 8811 	msr	BASEPRI, r3
 800f3a6:	f3bf 8f6f 	isb	sy
 800f3aa:	f3bf 8f4f 	dsb	sy
 800f3ae:	e7fe      	b.n	800f3ae <xQueueReceiveFromISR+0x4a>
 800f3b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3b4:	f383 8811 	msr	BASEPRI, r3
 800f3b8:	f3bf 8f6f 	isb	sy
 800f3bc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f3c0:	e7fe      	b.n	800f3c0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800f3c2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f3c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800f3c8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800f3cc:	b152      	cbz	r2, 800f3e4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f3ce:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f3d0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f3d2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800f3d4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800f3d6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800f3d8:	bf24      	itt	cs
 800f3da:	6821      	ldrcs	r1, [r4, #0]
 800f3dc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800f3de:	4630      	mov	r0, r6
 800f3e0:	f01c fe61 	bl	802c0a6 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f3e4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800f3e6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800f3ea:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800f3ec:	d009      	beq.n	800f402 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800f3ee:	f108 0301 	add.w	r3, r8, #1
 800f3f2:	b25b      	sxtb	r3, r3
 800f3f4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800f3f8:	2001      	movs	r0, #1
	__asm volatile
 800f3fa:	f389 8811 	msr	BASEPRI, r9
}
 800f3fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f402:	6923      	ldr	r3, [r4, #16]
 800f404:	2b00      	cmp	r3, #0
 800f406:	d0f7      	beq.n	800f3f8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f408:	f104 0010 	add.w	r0, r4, #16
 800f40c:	f000 fdf0 	bl	800fff0 <xTaskRemoveFromEventList>
 800f410:	2800      	cmp	r0, #0
 800f412:	d0f1      	beq.n	800f3f8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800f414:	2f00      	cmp	r7, #0
 800f416:	d0ef      	beq.n	800f3f8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800f418:	2001      	movs	r0, #1
 800f41a:	6038      	str	r0, [r7, #0]
 800f41c:	e7b8      	b.n	800f390 <xQueueReceiveFromISR+0x2c>
 800f41e:	bf00      	nop

0800f420 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800f420:	b158      	cbz	r0, 800f43a <uxQueueMessagesWaiting+0x1a>
{
 800f422:	b510      	push	{r4, lr}
 800f424:	4604      	mov	r4, r0
 800f426:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800f428:	f7fe ff64 	bl	800e2f4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800f42c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800f42e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f430:	f7fe ff82 	bl	800e338 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f434:	9801      	ldr	r0, [sp, #4]
 800f436:	b002      	add	sp, #8
 800f438:	bd10      	pop	{r4, pc}
	__asm volatile
 800f43a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f43e:	f383 8811 	msr	BASEPRI, r3
 800f442:	f3bf 8f6f 	isb	sy
 800f446:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800f44a:	e7fe      	b.n	800f44a <uxQueueMessagesWaiting+0x2a>

0800f44c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800f44c:	b108      	cbz	r0, 800f452 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800f44e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800f450:	4770      	bx	lr
 800f452:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f456:	f383 8811 	msr	BASEPRI, r3
 800f45a:	f3bf 8f6f 	isb	sy
 800f45e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f462:	e7fe      	b.n	800f462 <uxQueueMessagesWaitingFromISR+0x16>
 800f464:	0000      	movs	r0, r0
	...

0800f468 <vQueueDelete>:
	configASSERT( pxQueue );
 800f468:	b1f0      	cbz	r0, 800f4a8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f46a:	4b21      	ldr	r3, [pc, #132]	; (800f4f0 <vQueueDelete+0x88>)
 800f46c:	685a      	ldr	r2, [r3, #4]
 800f46e:	4290      	cmp	r0, r2
 800f470:	d025      	beq.n	800f4be <vQueueDelete+0x56>
 800f472:	68da      	ldr	r2, [r3, #12]
 800f474:	4290      	cmp	r0, r2
 800f476:	d02c      	beq.n	800f4d2 <vQueueDelete+0x6a>
 800f478:	695a      	ldr	r2, [r3, #20]
 800f47a:	4290      	cmp	r0, r2
 800f47c:	d02b      	beq.n	800f4d6 <vQueueDelete+0x6e>
 800f47e:	69da      	ldr	r2, [r3, #28]
 800f480:	4290      	cmp	r0, r2
 800f482:	d02a      	beq.n	800f4da <vQueueDelete+0x72>
 800f484:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800f486:	4290      	cmp	r0, r2
 800f488:	d029      	beq.n	800f4de <vQueueDelete+0x76>
 800f48a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f48c:	4290      	cmp	r0, r2
 800f48e:	d01e      	beq.n	800f4ce <vQueueDelete+0x66>
 800f490:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800f492:	4290      	cmp	r0, r2
 800f494:	d025      	beq.n	800f4e2 <vQueueDelete+0x7a>
 800f496:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800f498:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f49a:	bf08      	it	eq
 800f49c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800f49e:	d00f      	beq.n	800f4c0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800f4a0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800f4a4:	b14b      	cbz	r3, 800f4ba <vQueueDelete+0x52>
}
 800f4a6:	4770      	bx	lr
 800f4a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4ac:	f383 8811 	msr	BASEPRI, r3
 800f4b0:	f3bf 8f6f 	isb	sy
 800f4b4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800f4b8:	e7fe      	b.n	800f4b8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800f4ba:	f7fe be01 	b.w	800e0c0 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f4be:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800f4c0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800f4e8 <vQueueDelete+0x80>
 800f4c4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800f4c8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800f4cc:	e7e8      	b.n	800f4a0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f4ce:	2205      	movs	r2, #5
 800f4d0:	e7f6      	b.n	800f4c0 <vQueueDelete+0x58>
 800f4d2:	2201      	movs	r2, #1
 800f4d4:	e7f4      	b.n	800f4c0 <vQueueDelete+0x58>
 800f4d6:	2202      	movs	r2, #2
 800f4d8:	e7f2      	b.n	800f4c0 <vQueueDelete+0x58>
 800f4da:	2203      	movs	r2, #3
 800f4dc:	e7f0      	b.n	800f4c0 <vQueueDelete+0x58>
 800f4de:	2204      	movs	r2, #4
 800f4e0:	e7ee      	b.n	800f4c0 <vQueueDelete+0x58>
 800f4e2:	2206      	movs	r2, #6
 800f4e4:	e7ec      	b.n	800f4c0 <vQueueDelete+0x58>
 800f4e6:	bf00      	nop
	...
 800f4f0:	200131c0 	.word	0x200131c0

0800f4f4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f4f4:	4b12      	ldr	r3, [pc, #72]	; (800f540 <vQueueAddToRegistry+0x4c>)
 800f4f6:	681a      	ldr	r2, [r3, #0]
 800f4f8:	b17a      	cbz	r2, 800f51a <vQueueAddToRegistry+0x26>
 800f4fa:	689a      	ldr	r2, [r3, #8]
 800f4fc:	b162      	cbz	r2, 800f518 <vQueueAddToRegistry+0x24>
 800f4fe:	691a      	ldr	r2, [r3, #16]
 800f500:	b192      	cbz	r2, 800f528 <vQueueAddToRegistry+0x34>
 800f502:	699a      	ldr	r2, [r3, #24]
 800f504:	b192      	cbz	r2, 800f52c <vQueueAddToRegistry+0x38>
 800f506:	6a1a      	ldr	r2, [r3, #32]
 800f508:	b192      	cbz	r2, 800f530 <vQueueAddToRegistry+0x3c>
 800f50a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f50c:	b192      	cbz	r2, 800f534 <vQueueAddToRegistry+0x40>
 800f50e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f510:	b192      	cbz	r2, 800f538 <vQueueAddToRegistry+0x44>
 800f512:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f514:	b192      	cbz	r2, 800f53c <vQueueAddToRegistry+0x48>
	}
 800f516:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f518:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f51a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f51e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f522:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f526:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f528:	2202      	movs	r2, #2
 800f52a:	e7f6      	b.n	800f51a <vQueueAddToRegistry+0x26>
 800f52c:	2203      	movs	r2, #3
 800f52e:	e7f4      	b.n	800f51a <vQueueAddToRegistry+0x26>
 800f530:	2204      	movs	r2, #4
 800f532:	e7f2      	b.n	800f51a <vQueueAddToRegistry+0x26>
 800f534:	2205      	movs	r2, #5
 800f536:	e7f0      	b.n	800f51a <vQueueAddToRegistry+0x26>
 800f538:	2206      	movs	r2, #6
 800f53a:	e7ee      	b.n	800f51a <vQueueAddToRegistry+0x26>
 800f53c:	2207      	movs	r2, #7
 800f53e:	e7ec      	b.n	800f51a <vQueueAddToRegistry+0x26>
 800f540:	200131c0 	.word	0x200131c0

0800f544 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f544:	b570      	push	{r4, r5, r6, lr}
 800f546:	4605      	mov	r5, r0
 800f548:	460e      	mov	r6, r1
 800f54a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f54c:	f7fe fed2 	bl	800e2f4 <vPortEnterCritical>
 800f550:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f554:	2bff      	cmp	r3, #255	; 0xff
 800f556:	bf04      	itt	eq
 800f558:	2300      	moveq	r3, #0
 800f55a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f55e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f562:	2bff      	cmp	r3, #255	; 0xff
 800f564:	bf04      	itt	eq
 800f566:	2300      	moveq	r3, #0
 800f568:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f56c:	f7fe fee4 	bl	800e338 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f570:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f572:	2b00      	cmp	r3, #0
 800f574:	d043      	beq.n	800f5fe <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f576:	f7fe febd 	bl	800e2f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f57a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f57e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f580:	2c00      	cmp	r4, #0
 800f582:	dd14      	ble.n	800f5ae <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f584:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f588:	e003      	b.n	800f592 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f58a:	1e63      	subs	r3, r4, #1
 800f58c:	b2da      	uxtb	r2, r3
 800f58e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f590:	b16a      	cbz	r2, 800f5ae <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f592:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f594:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f596:	b153      	cbz	r3, 800f5ae <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f598:	f000 fd2a 	bl	800fff0 <xTaskRemoveFromEventList>
 800f59c:	2800      	cmp	r0, #0
 800f59e:	d0f4      	beq.n	800f58a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f5a0:	f000 fdc2 	bl	8010128 <vTaskMissedYield>
			--cTxLock;
 800f5a4:	1e63      	subs	r3, r4, #1
 800f5a6:	b2da      	uxtb	r2, r3
 800f5a8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f5aa:	2a00      	cmp	r2, #0
 800f5ac:	d1f1      	bne.n	800f592 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f5ae:	23ff      	movs	r3, #255	; 0xff
 800f5b0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f5b4:	f7fe fec0 	bl	800e338 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f5b8:	f7fe fe9c 	bl	800e2f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f5bc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f5c0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f5c2:	2c00      	cmp	r4, #0
 800f5c4:	dd14      	ble.n	800f5f0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f5c6:	f105 0610 	add.w	r6, r5, #16
 800f5ca:	e003      	b.n	800f5d4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f5cc:	1e63      	subs	r3, r4, #1
 800f5ce:	b2da      	uxtb	r2, r3
 800f5d0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f5d2:	b16a      	cbz	r2, 800f5f0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f5d4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f5d6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f5d8:	b153      	cbz	r3, 800f5f0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f5da:	f000 fd09 	bl	800fff0 <xTaskRemoveFromEventList>
 800f5de:	2800      	cmp	r0, #0
 800f5e0:	d0f4      	beq.n	800f5cc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f5e2:	f000 fda1 	bl	8010128 <vTaskMissedYield>
				--cRxLock;
 800f5e6:	1e63      	subs	r3, r4, #1
 800f5e8:	b2da      	uxtb	r2, r3
 800f5ea:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f5ec:	2a00      	cmp	r2, #0
 800f5ee:	d1f1      	bne.n	800f5d4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f5f0:	23ff      	movs	r3, #255	; 0xff
 800f5f2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f5f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f5fa:	f7fe be9d 	b.w	800e338 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f5fe:	4622      	mov	r2, r4
 800f600:	4631      	mov	r1, r6
 800f602:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f606:	f000 fca9 	bl	800ff5c <vTaskPlaceOnEventListRestricted>
 800f60a:	e7b4      	b.n	800f576 <vQueueWaitForMessageRestricted+0x32>

0800f60c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f60c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f610:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f612:	f7fe fe6f 	bl	800e2f4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f616:	4a34      	ldr	r2, [pc, #208]	; (800f6e8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f618:	4e34      	ldr	r6, [pc, #208]	; (800f6ec <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f61a:	6813      	ldr	r3, [r2, #0]
 800f61c:	3301      	adds	r3, #1
 800f61e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f620:	6833      	ldr	r3, [r6, #0]
 800f622:	2b00      	cmp	r3, #0
 800f624:	d032      	beq.n	800f68c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f626:	4c32      	ldr	r4, [pc, #200]	; (800f6f0 <prvAddNewTaskToReadyList+0xe4>)
 800f628:	6823      	ldr	r3, [r4, #0]
 800f62a:	b33b      	cbz	r3, 800f67c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f62c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f62e:	4f31      	ldr	r7, [pc, #196]	; (800f6f4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f630:	4a31      	ldr	r2, [pc, #196]	; (800f6f8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f632:	4932      	ldr	r1, [pc, #200]	; (800f6fc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f634:	6813      	ldr	r3, [r2, #0]
 800f636:	3301      	adds	r3, #1
 800f638:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f63a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f63c:	680b      	ldr	r3, [r1, #0]
 800f63e:	4283      	cmp	r3, r0
 800f640:	bf38      	it	cc
 800f642:	6008      	strcc	r0, [r1, #0]
 800f644:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f648:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f64c:	1d29      	adds	r1, r5, #4
 800f64e:	f7fe fdab 	bl	800e1a8 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f652:	f7fe fe71 	bl	800e338 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f656:	6823      	ldr	r3, [r4, #0]
 800f658:	b173      	cbz	r3, 800f678 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f65a:	6832      	ldr	r2, [r6, #0]
 800f65c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f65e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f660:	429a      	cmp	r2, r3
 800f662:	d209      	bcs.n	800f678 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f664:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f668:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f66c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f670:	f3bf 8f4f 	dsb	sy
 800f674:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f678:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f67c:	6833      	ldr	r3, [r6, #0]
 800f67e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f680:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f682:	4f1c      	ldr	r7, [pc, #112]	; (800f6f4 <prvAddNewTaskToReadyList+0xe8>)
 800f684:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f686:	bf98      	it	ls
 800f688:	6035      	strls	r5, [r6, #0]
 800f68a:	e7d1      	b.n	800f630 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f68c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f68e:	6813      	ldr	r3, [r2, #0]
 800f690:	2b01      	cmp	r3, #1
 800f692:	d003      	beq.n	800f69c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f694:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f696:	4f17      	ldr	r7, [pc, #92]	; (800f6f4 <prvAddNewTaskToReadyList+0xe8>)
 800f698:	4c15      	ldr	r4, [pc, #84]	; (800f6f0 <prvAddNewTaskToReadyList+0xe4>)
 800f69a:	e7c9      	b.n	800f630 <prvAddNewTaskToReadyList+0x24>
 800f69c:	4f15      	ldr	r7, [pc, #84]	; (800f6f4 <prvAddNewTaskToReadyList+0xe8>)
 800f69e:	463c      	mov	r4, r7
 800f6a0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f6a4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f6a6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f6a8:	f7fe fd6e 	bl	800e188 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f6ac:	45a0      	cmp	r8, r4
 800f6ae:	d1f9      	bne.n	800f6a4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f6b0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f714 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f6b4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f718 <prvAddNewTaskToReadyList+0x10c>
 800f6b8:	4c0d      	ldr	r4, [pc, #52]	; (800f6f0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f6ba:	4648      	mov	r0, r9
 800f6bc:	f7fe fd64 	bl	800e188 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f6c0:	4640      	mov	r0, r8
 800f6c2:	f7fe fd61 	bl	800e188 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f6c6:	480e      	ldr	r0, [pc, #56]	; (800f700 <prvAddNewTaskToReadyList+0xf4>)
 800f6c8:	f7fe fd5e 	bl	800e188 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f6cc:	480d      	ldr	r0, [pc, #52]	; (800f704 <prvAddNewTaskToReadyList+0xf8>)
 800f6ce:	f7fe fd5b 	bl	800e188 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f6d2:	480d      	ldr	r0, [pc, #52]	; (800f708 <prvAddNewTaskToReadyList+0xfc>)
 800f6d4:	f7fe fd58 	bl	800e188 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f6d8:	4b0c      	ldr	r3, [pc, #48]	; (800f70c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f6da:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f6dc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f6e0:	4b0b      	ldr	r3, [pc, #44]	; (800f710 <prvAddNewTaskToReadyList+0x104>)
 800f6e2:	f8c3 8000 	str.w	r8, [r3]
}
 800f6e6:	e7a3      	b.n	800f630 <prvAddNewTaskToReadyList+0x24>
 800f6e8:	2001366c 	.word	0x2001366c
 800f6ec:	20013200 	.word	0x20013200
 800f6f0:	200136c8 	.word	0x200136c8
 800f6f4:	2001320c 	.word	0x2001320c
 800f6f8:	20013678 	.word	0x20013678
 800f6fc:	2001367c 	.word	0x2001367c
 800f700:	200136b4 	.word	0x200136b4
 800f704:	200136e0 	.word	0x200136e0
 800f708:	200136cc 	.word	0x200136cc
 800f70c:	20013204 	.word	0x20013204
 800f710:	20013208 	.word	0x20013208
 800f714:	20013680 	.word	0x20013680
 800f718:	20013694 	.word	0x20013694

0800f71c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f71c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f720:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f722:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f726:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f72a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f72c:	4606      	mov	r6, r0
 800f72e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f730:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f732:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f734:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f736:	f01c fb90 	bl	802be5a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f73a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f73c:	f1a9 0904 	sub.w	r9, r9, #4
 800f740:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f742:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f746:	2d00      	cmp	r5, #0
 800f748:	d079      	beq.n	800f83e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f74a:	782b      	ldrb	r3, [r5, #0]
 800f74c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f750:	2b00      	cmp	r3, #0
 800f752:	d03b      	beq.n	800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f754:	786b      	ldrb	r3, [r5, #1]
 800f756:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f75a:	2b00      	cmp	r3, #0
 800f75c:	d036      	beq.n	800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f75e:	78ab      	ldrb	r3, [r5, #2]
 800f760:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f764:	b393      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f766:	78eb      	ldrb	r3, [r5, #3]
 800f768:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f76c:	b373      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f76e:	792b      	ldrb	r3, [r5, #4]
 800f770:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f774:	b353      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f776:	796b      	ldrb	r3, [r5, #5]
 800f778:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f77c:	b333      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f77e:	79ab      	ldrb	r3, [r5, #6]
 800f780:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f784:	b313      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f786:	79eb      	ldrb	r3, [r5, #7]
 800f788:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f78c:	b1f3      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f78e:	7a2b      	ldrb	r3, [r5, #8]
 800f790:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f794:	b1d3      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f796:	7a6b      	ldrb	r3, [r5, #9]
 800f798:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f79c:	b1b3      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f79e:	7aab      	ldrb	r3, [r5, #10]
 800f7a0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f7a4:	b193      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7a6:	7aeb      	ldrb	r3, [r5, #11]
 800f7a8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f7ac:	b173      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7ae:	7b2b      	ldrb	r3, [r5, #12]
 800f7b0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f7b4:	b153      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7b6:	7b6b      	ldrb	r3, [r5, #13]
 800f7b8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f7bc:	b133      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7be:	7bab      	ldrb	r3, [r5, #14]
 800f7c0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f7c4:	b113      	cbz	r3, 800f7cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f7c6:	7beb      	ldrb	r3, [r5, #15]
 800f7c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f7cc:	2300      	movs	r3, #0
 800f7ce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f7d2:	9d08      	ldr	r5, [sp, #32]
 800f7d4:	2d37      	cmp	r5, #55	; 0x37
 800f7d6:	bf28      	it	cs
 800f7d8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f7da:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f7de:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f7e0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f7e2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f7e4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f7e8:	f7fe fcda 	bl	800e1a0 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f7ec:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f7f0:	f104 0018 	add.w	r0, r4, #24
 800f7f4:	f7fe fcd4 	bl	800e1a0 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f7f8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f7fa:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f7fe:	4651      	mov	r1, sl
 800f800:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f802:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f804:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f806:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f80a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f80e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f812:	f01c fb22 	bl	802be5a <memset>
 800f816:	4b0b      	ldr	r3, [pc, #44]	; (800f844 <prvInitialiseNewTask.constprop.0+0x128>)
 800f818:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f81a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f81e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f820:	463a      	mov	r2, r7
 800f822:	4631      	mov	r1, r6
 800f824:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f826:	6625      	str	r5, [r4, #96]	; 0x60
 800f828:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f82a:	f7fe fd37 	bl	800e29c <pxPortInitialiseStack>
 800f82e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f830:	f1b8 0f00 	cmp.w	r8, #0
 800f834:	d001      	beq.n	800f83a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f836:	f8c8 4000 	str.w	r4, [r8]
}
 800f83a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f83e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f842:	e7c6      	b.n	800f7d2 <prvInitialiseNewTask.constprop.0+0xb6>
 800f844:	20014190 	.word	0x20014190

0800f848 <prvIdleTask>:
{
 800f848:	b580      	push	{r7, lr}
 800f84a:	4d23      	ldr	r5, [pc, #140]	; (800f8d8 <prvIdleTask+0x90>)
 800f84c:	4f23      	ldr	r7, [pc, #140]	; (800f8dc <prvIdleTask+0x94>)
 800f84e:	4e24      	ldr	r6, [pc, #144]	; (800f8e0 <prvIdleTask+0x98>)
 800f850:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f8e4 <prvIdleTask+0x9c>
				taskYIELD();
 800f854:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f858:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f85c:	682b      	ldr	r3, [r5, #0]
 800f85e:	b35b      	cbz	r3, 800f8b8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f860:	f7fe fd48 	bl	800e2f4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f864:	68fb      	ldr	r3, [r7, #12]
 800f866:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f868:	1d20      	adds	r0, r4, #4
 800f86a:	f7fe fcc5 	bl	800e1f8 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f86e:	6833      	ldr	r3, [r6, #0]
 800f870:	3b01      	subs	r3, #1
 800f872:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f874:	682b      	ldr	r3, [r5, #0]
 800f876:	3b01      	subs	r3, #1
 800f878:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f87a:	f7fe fd5d 	bl	800e338 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f87e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f882:	f01c fb33 	bl	802beec <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f886:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f88a:	b163      	cbz	r3, 800f8a6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f88c:	2b01      	cmp	r3, #1
 800f88e:	d01e      	beq.n	800f8ce <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f890:	2b02      	cmp	r3, #2
 800f892:	d0e3      	beq.n	800f85c <prvIdleTask+0x14>
 800f894:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f898:	f383 8811 	msr	BASEPRI, r3
 800f89c:	f3bf 8f6f 	isb	sy
 800f8a0:	f3bf 8f4f 	dsb	sy
 800f8a4:	e7fe      	b.n	800f8a4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f8a6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f8a8:	f7fe fc0a 	bl	800e0c0 <vPortFree>
				vPortFree( pxTCB );
 800f8ac:	4620      	mov	r0, r4
 800f8ae:	f7fe fc07 	bl	800e0c0 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f8b2:	682b      	ldr	r3, [r5, #0]
 800f8b4:	2b00      	cmp	r3, #0
 800f8b6:	d1d3      	bne.n	800f860 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f8b8:	f8d8 3000 	ldr.w	r3, [r8]
 800f8bc:	2b01      	cmp	r3, #1
 800f8be:	d9cd      	bls.n	800f85c <prvIdleTask+0x14>
				taskYIELD();
 800f8c0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f8c4:	f3bf 8f4f 	dsb	sy
 800f8c8:	f3bf 8f6f 	isb	sy
 800f8cc:	e7c6      	b.n	800f85c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f8ce:	4620      	mov	r0, r4
 800f8d0:	f7fe fbf6 	bl	800e0c0 <vPortFree>
 800f8d4:	e7c2      	b.n	800f85c <prvIdleTask+0x14>
 800f8d6:	bf00      	nop
 800f8d8:	20013670 	.word	0x20013670
 800f8dc:	200136e0 	.word	0x200136e0
 800f8e0:	2001366c 	.word	0x2001366c
 800f8e4:	2001320c 	.word	0x2001320c

0800f8e8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f8e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f8ec:	4b47      	ldr	r3, [pc, #284]	; (800fa0c <xTaskIncrementTick.part.0+0x124>)
 800f8ee:	681e      	ldr	r6, [r3, #0]
 800f8f0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f8f2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f8f4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f8f6:	2e00      	cmp	r6, #0
 800f8f8:	d040      	beq.n	800f97c <xTaskIncrementTick.part.0+0x94>
 800f8fa:	f8df b124 	ldr.w	fp, [pc, #292]	; 800fa20 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f8fe:	f8db 3000 	ldr.w	r3, [fp]
 800f902:	429e      	cmp	r6, r3
 800f904:	d347      	bcc.n	800f996 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f906:	4f42      	ldr	r7, [pc, #264]	; (800fa10 <xTaskIncrementTick.part.0+0x128>)
 800f908:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800fa24 <xTaskIncrementTick.part.0+0x13c>
 800f90c:	683b      	ldr	r3, [r7, #0]
 800f90e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800fa28 <xTaskIncrementTick.part.0+0x140>
 800f912:	681d      	ldr	r5, [r3, #0]
 800f914:	2d00      	cmp	r5, #0
 800f916:	d073      	beq.n	800fa00 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f918:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800fa2c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f91c:	2500      	movs	r5, #0
 800f91e:	e022      	b.n	800f966 <xTaskIncrementTick.part.0+0x7e>
 800f920:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f922:	f7fe fc69 	bl	800e1f8 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f926:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f928:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f92a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f92e:	b113      	cbz	r3, 800f936 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f930:	f7fe fc62 	bl	800e1f8 <uxListRemove>
 800f934:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f936:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f938:	f8d8 2000 	ldr.w	r2, [r8]
 800f93c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f940:	4293      	cmp	r3, r2
 800f942:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f946:	bf88      	it	hi
 800f948:	f8c8 3000 	strhi.w	r3, [r8]
 800f94c:	f7fe fc2c 	bl	800e1a8 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f950:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f954:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f956:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f958:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f95a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f95c:	4291      	cmp	r1, r2
 800f95e:	bf28      	it	cs
 800f960:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f962:	2b00      	cmp	r3, #0
 800f964:	d04c      	beq.n	800fa00 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f966:	683b      	ldr	r3, [r7, #0]
 800f968:	68db      	ldr	r3, [r3, #12]
 800f96a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f96c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f96e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f970:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f972:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f974:	d2d4      	bcs.n	800f920 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f976:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f97a:	e011      	b.n	800f9a0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f97c:	4b24      	ldr	r3, [pc, #144]	; (800fa10 <xTaskIncrementTick.part.0+0x128>)
 800f97e:	681a      	ldr	r2, [r3, #0]
 800f980:	6812      	ldr	r2, [r2, #0]
 800f982:	b30a      	cbz	r2, 800f9c8 <xTaskIncrementTick.part.0+0xe0>
 800f984:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f988:	f383 8811 	msr	BASEPRI, r3
 800f98c:	f3bf 8f6f 	isb	sy
 800f990:	f3bf 8f4f 	dsb	sy
 800f994:	e7fe      	b.n	800f994 <xTaskIncrementTick.part.0+0xac>
 800f996:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800fa24 <xTaskIncrementTick.part.0+0x13c>
 800f99a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800fa28 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f99e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f9a0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f9a4:	491b      	ldr	r1, [pc, #108]	; (800fa14 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f9a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f9a8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f9ac:	009b      	lsls	r3, r3, #2
 800f9ae:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f9b2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f9b4:	2a02      	cmp	r2, #2
 800f9b6:	bf28      	it	cs
 800f9b8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f9ba:	2b00      	cmp	r3, #0
}
 800f9bc:	bf0c      	ite	eq
 800f9be:	4628      	moveq	r0, r5
 800f9c0:	2001      	movne	r0, #1
 800f9c2:	b003      	add	sp, #12
 800f9c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f9c8:	4a13      	ldr	r2, [pc, #76]	; (800fa18 <xTaskIncrementTick.part.0+0x130>)
 800f9ca:	6818      	ldr	r0, [r3, #0]
 800f9cc:	6811      	ldr	r1, [r2, #0]
 800f9ce:	6019      	str	r1, [r3, #0]
 800f9d0:	4912      	ldr	r1, [pc, #72]	; (800fa1c <xTaskIncrementTick.part.0+0x134>)
 800f9d2:	6010      	str	r0, [r2, #0]
 800f9d4:	680a      	ldr	r2, [r1, #0]
 800f9d6:	3201      	adds	r2, #1
 800f9d8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f9da:	681a      	ldr	r2, [r3, #0]
 800f9dc:	6812      	ldr	r2, [r2, #0]
 800f9de:	b932      	cbnz	r2, 800f9ee <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f9e0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800fa20 <xTaskIncrementTick.part.0+0x138>
 800f9e4:	f04f 33ff 	mov.w	r3, #4294967295
 800f9e8:	f8cb 3000 	str.w	r3, [fp]
 800f9ec:	e787      	b.n	800f8fe <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9ee:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f9f0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800fa20 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9f4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f9f6:	68db      	ldr	r3, [r3, #12]
 800f9f8:	685b      	ldr	r3, [r3, #4]
 800f9fa:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f9fe:	e77e      	b.n	800f8fe <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fa00:	f04f 33ff 	mov.w	r3, #4294967295
 800fa04:	f8cb 3000 	str.w	r3, [fp]
					break;
 800fa08:	e7ca      	b.n	800f9a0 <xTaskIncrementTick.part.0+0xb8>
 800fa0a:	bf00      	nop
 800fa0c:	200136f4 	.word	0x200136f4
 800fa10:	20013204 	.word	0x20013204
 800fa14:	200136f8 	.word	0x200136f8
 800fa18:	20013208 	.word	0x20013208
 800fa1c:	200136ac 	.word	0x200136ac
 800fa20:	200136a8 	.word	0x200136a8
 800fa24:	2001320c 	.word	0x2001320c
 800fa28:	20013200 	.word	0x20013200
 800fa2c:	2001367c 	.word	0x2001367c

0800fa30 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800fa30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800fa34:	4d41      	ldr	r5, [pc, #260]	; (800fb3c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800fa36:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800fa38:	f7fe fc5c 	bl	800e2f4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800fa3c:	682b      	ldr	r3, [r5, #0]
 800fa3e:	3b01      	subs	r3, #1
 800fa40:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fa42:	682b      	ldr	r3, [r5, #0]
 800fa44:	2b00      	cmp	r3, #0
 800fa46:	d161      	bne.n	800fb0c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800fa48:	4b3d      	ldr	r3, [pc, #244]	; (800fb40 <xTaskResumeAll.part.0+0x110>)
 800fa4a:	681b      	ldr	r3, [r3, #0]
 800fa4c:	2b00      	cmp	r3, #0
 800fa4e:	d05d      	beq.n	800fb0c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fa50:	4e3c      	ldr	r6, [pc, #240]	; (800fb44 <xTaskResumeAll.part.0+0x114>)
 800fa52:	6833      	ldr	r3, [r6, #0]
 800fa54:	2b00      	cmp	r3, #0
 800fa56:	d06e      	beq.n	800fb36 <xTaskResumeAll.part.0+0x106>
 800fa58:	4f3b      	ldr	r7, [pc, #236]	; (800fb48 <xTaskResumeAll.part.0+0x118>)
 800fa5a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800fb58 <xTaskResumeAll.part.0+0x128>
 800fa5e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800fb5c <xTaskResumeAll.part.0+0x12c>
 800fa62:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800fb60 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fa66:	68f3      	ldr	r3, [r6, #12]
 800fa68:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fa6a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800fa6e:	f104 0018 	add.w	r0, r4, #24
 800fa72:	f7fe fbc1 	bl	800e1f8 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800fa76:	4658      	mov	r0, fp
 800fa78:	f7fe fbbe 	bl	800e1f8 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800fa7c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fa7e:	683a      	ldr	r2, [r7, #0]
 800fa80:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800fa84:	4293      	cmp	r3, r2
 800fa86:	4659      	mov	r1, fp
 800fa88:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800fa8c:	bf88      	it	hi
 800fa8e:	603b      	strhi	r3, [r7, #0]
 800fa90:	f7fe fb8a 	bl	800e1a8 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800fa94:	f8d8 3000 	ldr.w	r3, [r8]
 800fa98:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fa9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa9c:	429a      	cmp	r2, r3
 800fa9e:	d33d      	bcc.n	800fb1c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800faa0:	2301      	movs	r3, #1
 800faa2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800faa6:	6833      	ldr	r3, [r6, #0]
 800faa8:	2b00      	cmp	r3, #0
 800faaa:	d1dc      	bne.n	800fa66 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800faac:	4b27      	ldr	r3, [pc, #156]	; (800fb4c <xTaskResumeAll.part.0+0x11c>)
 800faae:	681a      	ldr	r2, [r3, #0]
 800fab0:	6812      	ldr	r2, [r2, #0]
 800fab2:	2a00      	cmp	r2, #0
 800fab4:	d03a      	beq.n	800fb2c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fab6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fab8:	4b25      	ldr	r3, [pc, #148]	; (800fb50 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800faba:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800fabc:	68d2      	ldr	r2, [r2, #12]
 800fabe:	6852      	ldr	r2, [r2, #4]
 800fac0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800fac2:	4e24      	ldr	r6, [pc, #144]	; (800fb54 <xTaskResumeAll.part.0+0x124>)
 800fac4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800fac6:	b194      	cbz	r4, 800faee <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800fac8:	2701      	movs	r7, #1
 800faca:	e006      	b.n	800fada <xTaskResumeAll.part.0+0xaa>
 800facc:	f7ff ff0c 	bl	800f8e8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800fad0:	b108      	cbz	r0, 800fad6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800fad2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fad6:	3c01      	subs	r4, #1
 800fad8:	d008      	beq.n	800faec <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fada:	682b      	ldr	r3, [r5, #0]
 800fadc:	2b00      	cmp	r3, #0
 800fade:	d0f5      	beq.n	800facc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800fae0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800fae2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800fae4:	f103 0301 	add.w	r3, r3, #1
 800fae8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800faea:	d1f6      	bne.n	800fada <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800faec:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800faee:	f8da 3000 	ldr.w	r3, [sl]
 800faf2:	b15b      	cbz	r3, 800fb0c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800faf4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800faf8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fafc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fb00:	f3bf 8f4f 	dsb	sy
 800fb04:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800fb08:	2001      	movs	r0, #1
 800fb0a:	e000      	b.n	800fb0e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800fb0c:	2000      	movs	r0, #0
 800fb0e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fb10:	f7fe fc12 	bl	800e338 <vPortExitCritical>
}
 800fb14:	9801      	ldr	r0, [sp, #4]
 800fb16:	b003      	add	sp, #12
 800fb18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800fb1c:	6833      	ldr	r3, [r6, #0]
 800fb1e:	2b00      	cmp	r3, #0
 800fb20:	d1a1      	bne.n	800fa66 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800fb22:	4b0a      	ldr	r3, [pc, #40]	; (800fb4c <xTaskResumeAll.part.0+0x11c>)
 800fb24:	681a      	ldr	r2, [r3, #0]
 800fb26:	6812      	ldr	r2, [r2, #0]
 800fb28:	2a00      	cmp	r2, #0
 800fb2a:	d1c4      	bne.n	800fab6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800fb2c:	4b08      	ldr	r3, [pc, #32]	; (800fb50 <xTaskResumeAll.part.0+0x120>)
 800fb2e:	f04f 32ff 	mov.w	r2, #4294967295
 800fb32:	601a      	str	r2, [r3, #0]
 800fb34:	e7c5      	b.n	800fac2 <xTaskResumeAll.part.0+0x92>
 800fb36:	f8df a028 	ldr.w	sl, [pc, #40]	; 800fb60 <xTaskResumeAll.part.0+0x130>
 800fb3a:	e7c2      	b.n	800fac2 <xTaskResumeAll.part.0+0x92>
 800fb3c:	20013674 	.word	0x20013674
 800fb40:	2001366c 	.word	0x2001366c
 800fb44:	200136b4 	.word	0x200136b4
 800fb48:	2001367c 	.word	0x2001367c
 800fb4c:	20013204 	.word	0x20013204
 800fb50:	200136a8 	.word	0x200136a8
 800fb54:	200136b0 	.word	0x200136b0
 800fb58:	2001320c 	.word	0x2001320c
 800fb5c:	20013200 	.word	0x20013200
 800fb60:	200136f8 	.word	0x200136f8

0800fb64 <xTaskCreateStatic>:
	{
 800fb64:	b530      	push	{r4, r5, lr}
 800fb66:	b087      	sub	sp, #28
 800fb68:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800fb6a:	b1c4      	cbz	r4, 800fb9e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800fb6c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800fb6e:	b16d      	cbz	r5, 800fb8c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fb70:	25ac      	movs	r5, #172	; 0xac
 800fb72:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800fb74:	9d05      	ldr	r5, [sp, #20]
 800fb76:	2dac      	cmp	r5, #172	; 0xac
 800fb78:	d01a      	beq.n	800fbb0 <xTaskCreateStatic+0x4c>
 800fb7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb7e:	f383 8811 	msr	BASEPRI, r3
 800fb82:	f3bf 8f6f 	isb	sy
 800fb86:	f3bf 8f4f 	dsb	sy
 800fb8a:	e7fe      	b.n	800fb8a <xTaskCreateStatic+0x26>
 800fb8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb90:	f383 8811 	msr	BASEPRI, r3
 800fb94:	f3bf 8f6f 	isb	sy
 800fb98:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800fb9c:	e7fe      	b.n	800fb9c <xTaskCreateStatic+0x38>
 800fb9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fba2:	f383 8811 	msr	BASEPRI, r3
 800fba6:	f3bf 8f6f 	isb	sy
 800fbaa:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800fbae:	e7fe      	b.n	800fbae <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800fbb0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800fbb2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fbb4:	2402      	movs	r4, #2
 800fbb6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fbba:	ac04      	add	r4, sp, #16
 800fbbc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800fbc0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800fbc2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fbc4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fbc6:	f7ff fda9 	bl	800f71c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fbca:	980c      	ldr	r0, [sp, #48]	; 0x30
 800fbcc:	f7ff fd1e 	bl	800f60c <prvAddNewTaskToReadyList>
	}
 800fbd0:	9804      	ldr	r0, [sp, #16]
 800fbd2:	b007      	add	sp, #28
 800fbd4:	bd30      	pop	{r4, r5, pc}
 800fbd6:	bf00      	nop

0800fbd8 <xTaskCreate>:
	{
 800fbd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fbdc:	4607      	mov	r7, r0
 800fbde:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fbe0:	0090      	lsls	r0, r2, #2
	{
 800fbe2:	4615      	mov	r5, r2
 800fbe4:	4688      	mov	r8, r1
 800fbe6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800fbe8:	f7fe f9ae 	bl	800df48 <pvPortMalloc>
			if( pxStack != NULL )
 800fbec:	b1d8      	cbz	r0, 800fc26 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800fbee:	4604      	mov	r4, r0
 800fbf0:	20ac      	movs	r0, #172	; 0xac
 800fbf2:	f7fe f9a9 	bl	800df48 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800fbf6:	4606      	mov	r6, r0
 800fbf8:	b1d0      	cbz	r0, 800fc30 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800fbfa:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800fbfc:	2400      	movs	r4, #0
 800fbfe:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800fc02:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800fc04:	9401      	str	r4, [sp, #4]
 800fc06:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800fc08:	9602      	str	r6, [sp, #8]
 800fc0a:	464b      	mov	r3, r9
 800fc0c:	462a      	mov	r2, r5
 800fc0e:	4641      	mov	r1, r8
 800fc10:	4638      	mov	r0, r7
 800fc12:	9400      	str	r4, [sp, #0]
 800fc14:	f7ff fd82 	bl	800f71c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fc18:	4630      	mov	r0, r6
 800fc1a:	f7ff fcf7 	bl	800f60c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800fc1e:	2001      	movs	r0, #1
	}
 800fc20:	b005      	add	sp, #20
 800fc22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800fc26:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800fc2a:	b005      	add	sp, #20
 800fc2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800fc30:	4620      	mov	r0, r4
 800fc32:	f7fe fa45 	bl	800e0c0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800fc36:	f04f 30ff 	mov.w	r0, #4294967295
 800fc3a:	e7f1      	b.n	800fc20 <xTaskCreate+0x48>

0800fc3c <vTaskDelay>:
	{
 800fc3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800fc3e:	b950      	cbnz	r0, 800fc56 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800fc40:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800fc44:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800fc48:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800fc4c:	f3bf 8f4f 	dsb	sy
 800fc50:	f3bf 8f6f 	isb	sy
	}
 800fc54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800fc56:	4d1e      	ldr	r5, [pc, #120]	; (800fcd0 <vTaskDelay+0x94>)
 800fc58:	682b      	ldr	r3, [r5, #0]
 800fc5a:	b143      	cbz	r3, 800fc6e <vTaskDelay+0x32>
 800fc5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fc60:	f383 8811 	msr	BASEPRI, r3
 800fc64:	f3bf 8f6f 	isb	sy
 800fc68:	f3bf 8f4f 	dsb	sy
 800fc6c:	e7fe      	b.n	800fc6c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800fc6e:	682b      	ldr	r3, [r5, #0]
 800fc70:	3301      	adds	r3, #1
 800fc72:	4604      	mov	r4, r0
 800fc74:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800fc76:	4b17      	ldr	r3, [pc, #92]	; (800fcd4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc78:	4e17      	ldr	r6, [pc, #92]	; (800fcd8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800fc7a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fc7c:	6830      	ldr	r0, [r6, #0]
 800fc7e:	3004      	adds	r0, #4
 800fc80:	f7fe faba 	bl	800e1f8 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fc84:	6833      	ldr	r3, [r6, #0]
 800fc86:	19e4      	adds	r4, r4, r7
 800fc88:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800fc8a:	d310      	bcc.n	800fcae <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fc8c:	4b13      	ldr	r3, [pc, #76]	; (800fcdc <vTaskDelay+0xa0>)
 800fc8e:	6818      	ldr	r0, [r3, #0]
 800fc90:	6831      	ldr	r1, [r6, #0]
 800fc92:	3104      	adds	r1, #4
 800fc94:	f7fe fa98 	bl	800e1c8 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800fc98:	682b      	ldr	r3, [r5, #0]
 800fc9a:	b9a3      	cbnz	r3, 800fcc6 <vTaskDelay+0x8a>
 800fc9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fca0:	f383 8811 	msr	BASEPRI, r3
 800fca4:	f3bf 8f6f 	isb	sy
 800fca8:	f3bf 8f4f 	dsb	sy
 800fcac:	e7fe      	b.n	800fcac <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fcae:	4b0c      	ldr	r3, [pc, #48]	; (800fce0 <vTaskDelay+0xa4>)
 800fcb0:	6818      	ldr	r0, [r3, #0]
 800fcb2:	6831      	ldr	r1, [r6, #0]
 800fcb4:	3104      	adds	r1, #4
 800fcb6:	f7fe fa87 	bl	800e1c8 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800fcba:	4b0a      	ldr	r3, [pc, #40]	; (800fce4 <vTaskDelay+0xa8>)
 800fcbc:	681a      	ldr	r2, [r3, #0]
 800fcbe:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800fcc0:	bf38      	it	cc
 800fcc2:	601c      	strcc	r4, [r3, #0]
 800fcc4:	e7e8      	b.n	800fc98 <vTaskDelay+0x5c>
 800fcc6:	f7ff feb3 	bl	800fa30 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800fcca:	2800      	cmp	r0, #0
 800fccc:	d0b8      	beq.n	800fc40 <vTaskDelay+0x4>
	}
 800fcce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fcd0:	20013674 	.word	0x20013674
 800fcd4:	200136f4 	.word	0x200136f4
 800fcd8:	20013200 	.word	0x20013200
 800fcdc:	20013208 	.word	0x20013208
 800fce0:	20013204 	.word	0x20013204
 800fce4:	200136a8 	.word	0x200136a8

0800fce8 <vTaskStartScheduler>:
{
 800fce8:	b530      	push	{r4, r5, lr}
 800fcea:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fcec:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800fcee:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fcf0:	a906      	add	r1, sp, #24
 800fcf2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800fcf4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800fcf8:	f7fe f908 	bl	800df0c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800fcfc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800fd00:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800fd02:	b1bb      	cbz	r3, 800fd34 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800fd04:	b16d      	cbz	r5, 800fd22 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800fd06:	21ac      	movs	r1, #172	; 0xac
 800fd08:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800fd0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800fd0c:	29ac      	cmp	r1, #172	; 0xac
 800fd0e:	d01a      	beq.n	800fd46 <vTaskStartScheduler+0x5e>
 800fd10:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd14:	f383 8811 	msr	BASEPRI, r3
 800fd18:	f3bf 8f6f 	isb	sy
 800fd1c:	f3bf 8f4f 	dsb	sy
 800fd20:	e7fe      	b.n	800fd20 <vTaskStartScheduler+0x38>
 800fd22:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd26:	f383 8811 	msr	BASEPRI, r3
 800fd2a:	f3bf 8f6f 	isb	sy
 800fd2e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800fd32:	e7fe      	b.n	800fd32 <vTaskStartScheduler+0x4a>
 800fd34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd38:	f383 8811 	msr	BASEPRI, r3
 800fd3c:	f3bf 8f6f 	isb	sy
 800fd40:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800fd44:	e7fe      	b.n	800fd44 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fd46:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd48:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800fd4a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800fd4c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd50:	4623      	mov	r3, r4
 800fd52:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800fd56:	491b      	ldr	r1, [pc, #108]	; (800fdc4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800fd58:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800fd5a:	9400      	str	r4, [sp, #0]
 800fd5c:	481a      	ldr	r0, [pc, #104]	; (800fdc8 <vTaskStartScheduler+0xe0>)
 800fd5e:	f7ff fcdd 	bl	800f71c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800fd62:	4628      	mov	r0, r5
 800fd64:	f7ff fc52 	bl	800f60c <prvAddNewTaskToReadyList>
		return xReturn;
 800fd68:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800fd6a:	b1eb      	cbz	r3, 800fda8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800fd6c:	f000 fc6e 	bl	801064c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800fd70:	2801      	cmp	r0, #1
 800fd72:	d11b      	bne.n	800fdac <vTaskStartScheduler+0xc4>
 800fd74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd78:	f383 8811 	msr	BASEPRI, r3
 800fd7c:	f3bf 8f6f 	isb	sy
 800fd80:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fd84:	4b11      	ldr	r3, [pc, #68]	; (800fdcc <vTaskStartScheduler+0xe4>)
 800fd86:	4a12      	ldr	r2, [pc, #72]	; (800fdd0 <vTaskStartScheduler+0xe8>)
 800fd88:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800fd8a:	4912      	ldr	r1, [pc, #72]	; (800fdd4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fd8c:	3358      	adds	r3, #88	; 0x58
 800fd8e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800fd90:	4a11      	ldr	r2, [pc, #68]	; (800fdd8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800fd92:	4b12      	ldr	r3, [pc, #72]	; (800fddc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800fd94:	f04f 35ff 	mov.w	r5, #4294967295
 800fd98:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800fd9a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800fd9c:	601c      	str	r4, [r3, #0]
}
 800fd9e:	b00b      	add	sp, #44	; 0x2c
 800fda0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800fda4:	f7fe bb38 	b.w	800e418 <xPortStartScheduler>
}
 800fda8:	b00b      	add	sp, #44	; 0x2c
 800fdaa:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800fdac:	3001      	adds	r0, #1
 800fdae:	d1fb      	bne.n	800fda8 <vTaskStartScheduler+0xc0>
 800fdb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdb4:	f383 8811 	msr	BASEPRI, r3
 800fdb8:	f3bf 8f6f 	isb	sy
 800fdbc:	f3bf 8f4f 	dsb	sy
 800fdc0:	e7fe      	b.n	800fdc0 <vTaskStartScheduler+0xd8>
 800fdc2:	bf00      	nop
 800fdc4:	0802f524 	.word	0x0802f524
 800fdc8:	0800f849 	.word	0x0800f849
 800fdcc:	20013200 	.word	0x20013200
 800fdd0:	20000160 	.word	0x20000160
 800fdd4:	200136a8 	.word	0x200136a8
 800fdd8:	200136c8 	.word	0x200136c8
 800fddc:	200136f4 	.word	0x200136f4

0800fde0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800fde0:	4a02      	ldr	r2, [pc, #8]	; (800fdec <vTaskSuspendAll+0xc>)
 800fde2:	6813      	ldr	r3, [r2, #0]
 800fde4:	3301      	adds	r3, #1
 800fde6:	6013      	str	r3, [r2, #0]
}
 800fde8:	4770      	bx	lr
 800fdea:	bf00      	nop
 800fdec:	20013674 	.word	0x20013674

0800fdf0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800fdf0:	4b06      	ldr	r3, [pc, #24]	; (800fe0c <xTaskResumeAll+0x1c>)
 800fdf2:	681b      	ldr	r3, [r3, #0]
 800fdf4:	b943      	cbnz	r3, 800fe08 <xTaskResumeAll+0x18>
 800fdf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fdfa:	f383 8811 	msr	BASEPRI, r3
 800fdfe:	f3bf 8f6f 	isb	sy
 800fe02:	f3bf 8f4f 	dsb	sy
 800fe06:	e7fe      	b.n	800fe06 <xTaskResumeAll+0x16>
 800fe08:	f7ff be12 	b.w	800fa30 <xTaskResumeAll.part.0>
 800fe0c:	20013674 	.word	0x20013674

0800fe10 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800fe10:	4b01      	ldr	r3, [pc, #4]	; (800fe18 <xTaskGetTickCount+0x8>)
 800fe12:	6818      	ldr	r0, [r3, #0]
}
 800fe14:	4770      	bx	lr
 800fe16:	bf00      	nop
 800fe18:	200136f4 	.word	0x200136f4

0800fe1c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fe1c:	4b05      	ldr	r3, [pc, #20]	; (800fe34 <xTaskIncrementTick+0x18>)
 800fe1e:	681b      	ldr	r3, [r3, #0]
 800fe20:	b90b      	cbnz	r3, 800fe26 <xTaskIncrementTick+0xa>
 800fe22:	f7ff bd61 	b.w	800f8e8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800fe26:	4a04      	ldr	r2, [pc, #16]	; (800fe38 <xTaskIncrementTick+0x1c>)
 800fe28:	6813      	ldr	r3, [r2, #0]
 800fe2a:	3301      	adds	r3, #1
}
 800fe2c:	2000      	movs	r0, #0
		++xPendedTicks;
 800fe2e:	6013      	str	r3, [r2, #0]
}
 800fe30:	4770      	bx	lr
 800fe32:	bf00      	nop
 800fe34:	20013674 	.word	0x20013674
 800fe38:	200136b0 	.word	0x200136b0

0800fe3c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800fe3c:	4b1f      	ldr	r3, [pc, #124]	; (800febc <vTaskSwitchContext+0x80>)
 800fe3e:	681b      	ldr	r3, [r3, #0]
 800fe40:	b11b      	cbz	r3, 800fe4a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800fe42:	4b1f      	ldr	r3, [pc, #124]	; (800fec0 <vTaskSwitchContext+0x84>)
 800fe44:	2201      	movs	r2, #1
 800fe46:	601a      	str	r2, [r3, #0]
 800fe48:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800fe4a:	4a1d      	ldr	r2, [pc, #116]	; (800fec0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe4c:	491d      	ldr	r1, [pc, #116]	; (800fec4 <vTaskSwitchContext+0x88>)
{
 800fe4e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe50:	4c1d      	ldr	r4, [pc, #116]	; (800fec8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800fe52:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe54:	6823      	ldr	r3, [r4, #0]
 800fe56:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fe5a:	0092      	lsls	r2, r2, #2
 800fe5c:	0098      	lsls	r0, r3, #2
 800fe5e:	588a      	ldr	r2, [r1, r2]
 800fe60:	b942      	cbnz	r2, 800fe74 <vTaskSwitchContext+0x38>
 800fe62:	b313      	cbz	r3, 800feaa <vTaskSwitchContext+0x6e>
 800fe64:	3b01      	subs	r3, #1
 800fe66:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800fe6a:	0098      	lsls	r0, r3, #2
 800fe6c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800fe70:	2a00      	cmp	r2, #0
 800fe72:	d0f6      	beq.n	800fe62 <vTaskSwitchContext+0x26>
 800fe74:	4418      	add	r0, r3
 800fe76:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800fe7a:	4662      	mov	r2, ip
 800fe7c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800fe80:	6849      	ldr	r1, [r1, #4]
 800fe82:	f8cc 1004 	str.w	r1, [ip, #4]
 800fe86:	3208      	adds	r2, #8
 800fe88:	4291      	cmp	r1, r2
 800fe8a:	bf08      	it	eq
 800fe8c:	6849      	ldreq	r1, [r1, #4]
 800fe8e:	4a0f      	ldr	r2, [pc, #60]	; (800fecc <vTaskSwitchContext+0x90>)
 800fe90:	bf08      	it	eq
 800fe92:	f8cc 1004 	streq.w	r1, [ip, #4]
 800fe96:	68c9      	ldr	r1, [r1, #12]
 800fe98:	6011      	str	r1, [r2, #0]
 800fe9a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fe9c:	6813      	ldr	r3, [r2, #0]
 800fe9e:	4a0c      	ldr	r2, [pc, #48]	; (800fed0 <vTaskSwitchContext+0x94>)
}
 800fea0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800fea4:	3358      	adds	r3, #88	; 0x58
 800fea6:	6013      	str	r3, [r2, #0]
}
 800fea8:	4770      	bx	lr
 800feaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800feae:	f383 8811 	msr	BASEPRI, r3
 800feb2:	f3bf 8f6f 	isb	sy
 800feb6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800feba:	e7fe      	b.n	800feba <vTaskSwitchContext+0x7e>
 800febc:	20013674 	.word	0x20013674
 800fec0:	200136f8 	.word	0x200136f8
 800fec4:	2001320c 	.word	0x2001320c
 800fec8:	2001367c 	.word	0x2001367c
 800fecc:	20013200 	.word	0x20013200
 800fed0:	20000160 	.word	0x20000160

0800fed4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800fed4:	b1d0      	cbz	r0, 800ff0c <vTaskPlaceOnEventList+0x38>
{
 800fed6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fed8:	4d1a      	ldr	r5, [pc, #104]	; (800ff44 <vTaskPlaceOnEventList+0x70>)
 800feda:	460c      	mov	r4, r1
 800fedc:	6829      	ldr	r1, [r5, #0]
 800fede:	3118      	adds	r1, #24
 800fee0:	f7fe f972 	bl	800e1c8 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800fee4:	4b18      	ldr	r3, [pc, #96]	; (800ff48 <vTaskPlaceOnEventList+0x74>)
 800fee6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fee8:	6828      	ldr	r0, [r5, #0]
 800feea:	3004      	adds	r0, #4
 800feec:	f7fe f984 	bl	800e1f8 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800fef0:	1c63      	adds	r3, r4, #1
 800fef2:	d014      	beq.n	800ff1e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fef4:	682b      	ldr	r3, [r5, #0]
 800fef6:	19a4      	adds	r4, r4, r6
 800fef8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fefa:	d317      	bcc.n	800ff2c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fefc:	4b13      	ldr	r3, [pc, #76]	; (800ff4c <vTaskPlaceOnEventList+0x78>)
 800fefe:	6818      	ldr	r0, [r3, #0]
 800ff00:	6829      	ldr	r1, [r5, #0]
}
 800ff02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff06:	3104      	adds	r1, #4
 800ff08:	f7fe b95e 	b.w	800e1c8 <vListInsert>
 800ff0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff10:	f383 8811 	msr	BASEPRI, r3
 800ff14:	f3bf 8f6f 	isb	sy
 800ff18:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800ff1c:	e7fe      	b.n	800ff1c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff1e:	6829      	ldr	r1, [r5, #0]
 800ff20:	480b      	ldr	r0, [pc, #44]	; (800ff50 <vTaskPlaceOnEventList+0x7c>)
}
 800ff22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff26:	3104      	adds	r1, #4
 800ff28:	f7fe b93e 	b.w	800e1a8 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff2c:	4b09      	ldr	r3, [pc, #36]	; (800ff54 <vTaskPlaceOnEventList+0x80>)
 800ff2e:	6818      	ldr	r0, [r3, #0]
 800ff30:	6829      	ldr	r1, [r5, #0]
 800ff32:	3104      	adds	r1, #4
 800ff34:	f7fe f948 	bl	800e1c8 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ff38:	4b07      	ldr	r3, [pc, #28]	; (800ff58 <vTaskPlaceOnEventList+0x84>)
 800ff3a:	681a      	ldr	r2, [r3, #0]
 800ff3c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ff3e:	bf38      	it	cc
 800ff40:	601c      	strcc	r4, [r3, #0]
}
 800ff42:	bd70      	pop	{r4, r5, r6, pc}
 800ff44:	20013200 	.word	0x20013200
 800ff48:	200136f4 	.word	0x200136f4
 800ff4c:	20013208 	.word	0x20013208
 800ff50:	200136cc 	.word	0x200136cc
 800ff54:	20013204 	.word	0x20013204
 800ff58:	200136a8 	.word	0x200136a8

0800ff5c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800ff5c:	b330      	cbz	r0, 800ffac <vTaskPlaceOnEventListRestricted+0x50>
	{
 800ff5e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ff60:	4e1d      	ldr	r6, [pc, #116]	; (800ffd8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800ff62:	460c      	mov	r4, r1
 800ff64:	6831      	ldr	r1, [r6, #0]
 800ff66:	4615      	mov	r5, r2
 800ff68:	3118      	adds	r1, #24
 800ff6a:	f7fe f91d 	bl	800e1a8 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800ff6e:	4b1b      	ldr	r3, [pc, #108]	; (800ffdc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800ff70:	b985      	cbnz	r5, 800ff94 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800ff72:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ff74:	6830      	ldr	r0, [r6, #0]
 800ff76:	3004      	adds	r0, #4
 800ff78:	f7fe f93e 	bl	800e1f8 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ff7c:	6833      	ldr	r3, [r6, #0]
 800ff7e:	1964      	adds	r4, r4, r5
 800ff80:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ff82:	d31c      	bcc.n	800ffbe <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff84:	4b16      	ldr	r3, [pc, #88]	; (800ffe0 <vTaskPlaceOnEventListRestricted+0x84>)
 800ff86:	6818      	ldr	r0, [r3, #0]
 800ff88:	6831      	ldr	r1, [r6, #0]
	}
 800ff8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff8e:	3104      	adds	r1, #4
 800ff90:	f7fe b91a 	b.w	800e1c8 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800ff94:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ff96:	6830      	ldr	r0, [r6, #0]
 800ff98:	3004      	adds	r0, #4
 800ff9a:	f7fe f92d 	bl	800e1f8 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ff9e:	6831      	ldr	r1, [r6, #0]
 800ffa0:	4810      	ldr	r0, [pc, #64]	; (800ffe4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800ffa2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ffa6:	3104      	adds	r1, #4
 800ffa8:	f7fe b8fe 	b.w	800e1a8 <vListInsertEnd>
 800ffac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffb0:	f383 8811 	msr	BASEPRI, r3
 800ffb4:	f3bf 8f6f 	isb	sy
 800ffb8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800ffbc:	e7fe      	b.n	800ffbc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ffbe:	4b0a      	ldr	r3, [pc, #40]	; (800ffe8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800ffc0:	6818      	ldr	r0, [r3, #0]
 800ffc2:	6831      	ldr	r1, [r6, #0]
 800ffc4:	3104      	adds	r1, #4
 800ffc6:	f7fe f8ff 	bl	800e1c8 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ffca:	4b08      	ldr	r3, [pc, #32]	; (800ffec <vTaskPlaceOnEventListRestricted+0x90>)
 800ffcc:	681a      	ldr	r2, [r3, #0]
 800ffce:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ffd0:	bf38      	it	cc
 800ffd2:	601c      	strcc	r4, [r3, #0]
	}
 800ffd4:	bd70      	pop	{r4, r5, r6, pc}
 800ffd6:	bf00      	nop
 800ffd8:	20013200 	.word	0x20013200
 800ffdc:	200136f4 	.word	0x200136f4
 800ffe0:	20013208 	.word	0x20013208
 800ffe4:	200136cc 	.word	0x200136cc
 800ffe8:	20013204 	.word	0x20013204
 800ffec:	200136a8 	.word	0x200136a8

0800fff0 <xTaskRemoveFromEventList>:
{
 800fff0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fff2:	68c3      	ldr	r3, [r0, #12]
 800fff4:	68dc      	ldr	r4, [r3, #12]
{
 800fff6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800fff8:	2c00      	cmp	r4, #0
 800fffa:	d02b      	beq.n	8010054 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fffc:	f104 0518 	add.w	r5, r4, #24
 8010000:	4628      	mov	r0, r5
 8010002:	f7fe f8f9 	bl	800e1f8 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8010006:	4b18      	ldr	r3, [pc, #96]	; (8010068 <xTaskRemoveFromEventList+0x78>)
 8010008:	681b      	ldr	r3, [r3, #0]
 801000a:	b17b      	cbz	r3, 801002c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 801000c:	4817      	ldr	r0, [pc, #92]	; (801006c <xTaskRemoveFromEventList+0x7c>)
 801000e:	4629      	mov	r1, r5
 8010010:	f7fe f8ca 	bl	800e1a8 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8010014:	4b16      	ldr	r3, [pc, #88]	; (8010070 <xTaskRemoveFromEventList+0x80>)
 8010016:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010018:	681b      	ldr	r3, [r3, #0]
 801001a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801001c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 801001e:	bf85      	ittet	hi
 8010020:	4b14      	ldrhi	r3, [pc, #80]	; (8010074 <xTaskRemoveFromEventList+0x84>)
 8010022:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8010024:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8010026:	6018      	strhi	r0, [r3, #0]
}
 8010028:	b003      	add	sp, #12
 801002a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 801002c:	1d21      	adds	r1, r4, #4
 801002e:	4608      	mov	r0, r1
 8010030:	9101      	str	r1, [sp, #4]
 8010032:	f7fe f8e1 	bl	800e1f8 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8010036:	4a10      	ldr	r2, [pc, #64]	; (8010078 <xTaskRemoveFromEventList+0x88>)
 8010038:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801003a:	6810      	ldr	r0, [r2, #0]
 801003c:	9901      	ldr	r1, [sp, #4]
 801003e:	4283      	cmp	r3, r0
 8010040:	480e      	ldr	r0, [pc, #56]	; (801007c <xTaskRemoveFromEventList+0x8c>)
 8010042:	bf88      	it	hi
 8010044:	6013      	strhi	r3, [r2, #0]
 8010046:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801004a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 801004e:	f7fe f8ab 	bl	800e1a8 <vListInsertEnd>
 8010052:	e7df      	b.n	8010014 <xTaskRemoveFromEventList+0x24>
 8010054:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010058:	f383 8811 	msr	BASEPRI, r3
 801005c:	f3bf 8f6f 	isb	sy
 8010060:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 8010064:	e7fe      	b.n	8010064 <xTaskRemoveFromEventList+0x74>
 8010066:	bf00      	nop
 8010068:	20013674 	.word	0x20013674
 801006c:	200136b4 	.word	0x200136b4
 8010070:	20013200 	.word	0x20013200
 8010074:	200136f8 	.word	0x200136f8
 8010078:	2001367c 	.word	0x2001367c
 801007c:	2001320c 	.word	0x2001320c

08010080 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010080:	4a03      	ldr	r2, [pc, #12]	; (8010090 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010082:	4b04      	ldr	r3, [pc, #16]	; (8010094 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010084:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010086:	681b      	ldr	r3, [r3, #0]
 8010088:	e9c0 2300 	strd	r2, r3, [r0]
}
 801008c:	4770      	bx	lr
 801008e:	bf00      	nop
 8010090:	200136ac 	.word	0x200136ac
 8010094:	200136f4 	.word	0x200136f4

08010098 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 8010098:	b328      	cbz	r0, 80100e6 <xTaskCheckForTimeOut+0x4e>
{
 801009a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801009c:	460d      	mov	r5, r1
 801009e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 80100a0:	b1c1      	cbz	r1, 80100d4 <xTaskCheckForTimeOut+0x3c>
 80100a2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80100a4:	f7fe f926 	bl	800e2f4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 80100a8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 80100aa:	4a1d      	ldr	r2, [pc, #116]	; (8010120 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 80100ac:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 80100ae:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80100b0:	d030      	beq.n	8010114 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80100b2:	f8df c070 	ldr.w	ip, [pc, #112]	; 8010124 <xTaskCheckForTimeOut+0x8c>
 80100b6:	e9d4 6000 	ldrd	r6, r0, [r4]
 80100ba:	f8dc 7000 	ldr.w	r7, [ip]
 80100be:	42be      	cmp	r6, r7
 80100c0:	d01a      	beq.n	80100f8 <xTaskCheckForTimeOut+0x60>
 80100c2:	4288      	cmp	r0, r1
 80100c4:	d818      	bhi.n	80100f8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 80100c6:	2001      	movs	r0, #1
 80100c8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 80100ca:	f7fe f935 	bl	800e338 <vPortExitCritical>
}
 80100ce:	9801      	ldr	r0, [sp, #4]
 80100d0:	b003      	add	sp, #12
 80100d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80100d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100d8:	f383 8811 	msr	BASEPRI, r3
 80100dc:	f3bf 8f6f 	isb	sy
 80100e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 80100e4:	e7fe      	b.n	80100e4 <xTaskCheckForTimeOut+0x4c>
 80100e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80100ea:	f383 8811 	msr	BASEPRI, r3
 80100ee:	f3bf 8f6f 	isb	sy
 80100f2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 80100f6:	e7fe      	b.n	80100f6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80100f8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80100fc:	4573      	cmp	r3, lr
 80100fe:	d90b      	bls.n	8010118 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 8010100:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8010102:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 8010106:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 8010108:	4403      	add	r3, r0
 801010a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 801010c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 801010e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 8010112:	e7d9      	b.n	80100c8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 8010114:	2000      	movs	r0, #0
 8010116:	e7d7      	b.n	80100c8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 8010118:	2300      	movs	r3, #0
 801011a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 801011c:	2001      	movs	r0, #1
 801011e:	e7d3      	b.n	80100c8 <xTaskCheckForTimeOut+0x30>
 8010120:	200136f4 	.word	0x200136f4
 8010124:	200136ac 	.word	0x200136ac

08010128 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8010128:	4b01      	ldr	r3, [pc, #4]	; (8010130 <vTaskMissedYield+0x8>)
 801012a:	2201      	movs	r2, #1
 801012c:	601a      	str	r2, [r3, #0]
}
 801012e:	4770      	bx	lr
 8010130:	200136f8 	.word	0x200136f8

08010134 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8010134:	4b05      	ldr	r3, [pc, #20]	; (801014c <xTaskGetSchedulerState+0x18>)
 8010136:	681b      	ldr	r3, [r3, #0]
 8010138:	b133      	cbz	r3, 8010148 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 801013a:	4b05      	ldr	r3, [pc, #20]	; (8010150 <xTaskGetSchedulerState+0x1c>)
 801013c:	6818      	ldr	r0, [r3, #0]
 801013e:	fab0 f080 	clz	r0, r0
 8010142:	0940      	lsrs	r0, r0, #5
 8010144:	0040      	lsls	r0, r0, #1
 8010146:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8010148:	2001      	movs	r0, #1
	}
 801014a:	4770      	bx	lr
 801014c:	200136c8 	.word	0x200136c8
 8010150:	20013674 	.word	0x20013674

08010154 <xTaskPriorityInherit>:
	{
 8010154:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8010156:	4604      	mov	r4, r0
	{
 8010158:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 801015a:	b1c8      	cbz	r0, 8010190 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 801015c:	4d1d      	ldr	r5, [pc, #116]	; (80101d4 <xTaskPriorityInherit+0x80>)
 801015e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010160:	682a      	ldr	r2, [r5, #0]
 8010162:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8010164:	4293      	cmp	r3, r2
 8010166:	d215      	bcs.n	8010194 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8010168:	6982      	ldr	r2, [r0, #24]
 801016a:	2a00      	cmp	r2, #0
 801016c:	db04      	blt.n	8010178 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801016e:	682a      	ldr	r2, [r5, #0]
 8010170:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8010172:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 8010176:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8010178:	4e17      	ldr	r6, [pc, #92]	; (80101d8 <xTaskPriorityInherit+0x84>)
 801017a:	6962      	ldr	r2, [r4, #20]
 801017c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010180:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8010184:	429a      	cmp	r2, r3
 8010186:	d00e      	beq.n	80101a6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8010188:	682b      	ldr	r3, [r5, #0]
 801018a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801018c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 801018e:	2001      	movs	r0, #1
	}
 8010190:	b002      	add	sp, #8
 8010192:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8010194:	682b      	ldr	r3, [r5, #0]
 8010196:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8010198:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801019a:	4298      	cmp	r0, r3
 801019c:	bf2c      	ite	cs
 801019e:	2000      	movcs	r0, #0
 80101a0:	2001      	movcc	r0, #1
	}
 80101a2:	b002      	add	sp, #8
 80101a4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80101a6:	1d21      	adds	r1, r4, #4
 80101a8:	4608      	mov	r0, r1
 80101aa:	9101      	str	r1, [sp, #4]
 80101ac:	f7fe f824 	bl	800e1f8 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80101b0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80101b2:	4b0a      	ldr	r3, [pc, #40]	; (80101dc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80101b4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80101b6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80101b8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80101ba:	4290      	cmp	r0, r2
 80101bc:	bf88      	it	hi
 80101be:	6018      	strhi	r0, [r3, #0]
 80101c0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80101c4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 80101c8:	9901      	ldr	r1, [sp, #4]
 80101ca:	f7fd ffed 	bl	800e1a8 <vListInsertEnd>
				xReturn = pdTRUE;
 80101ce:	2001      	movs	r0, #1
 80101d0:	e7de      	b.n	8010190 <xTaskPriorityInherit+0x3c>
 80101d2:	bf00      	nop
 80101d4:	20013200 	.word	0x20013200
 80101d8:	2001320c 	.word	0x2001320c
 80101dc:	2001367c 	.word	0x2001367c

080101e0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 80101e0:	b318      	cbz	r0, 801022a <xTaskPriorityDisinherit+0x4a>
	{
 80101e2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 80101e4:	4b1e      	ldr	r3, [pc, #120]	; (8010260 <xTaskPriorityDisinherit+0x80>)
 80101e6:	681c      	ldr	r4, [r3, #0]
 80101e8:	4284      	cmp	r4, r0
	{
 80101ea:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 80101ec:	d008      	beq.n	8010200 <xTaskPriorityDisinherit+0x20>
 80101ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101f2:	f383 8811 	msr	BASEPRI, r3
 80101f6:	f3bf 8f6f 	isb	sy
 80101fa:	f3bf 8f4f 	dsb	sy
 80101fe:	e7fe      	b.n	80101fe <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 8010200:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8010202:	b14b      	cbz	r3, 8010218 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8010204:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8010206:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8010208:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 801020a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 801020c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 801020e:	d000      	beq.n	8010212 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8010210:	b16b      	cbz	r3, 801022e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 8010212:	2000      	movs	r0, #0
	}
 8010214:	b002      	add	sp, #8
 8010216:	bd10      	pop	{r4, pc}
 8010218:	f04f 0350 	mov.w	r3, #80	; 0x50
 801021c:	f383 8811 	msr	BASEPRI, r3
 8010220:	f3bf 8f6f 	isb	sy
 8010224:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 8010228:	e7fe      	b.n	8010228 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 801022a:	2000      	movs	r0, #0
	}
 801022c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 801022e:	1d21      	adds	r1, r4, #4
 8010230:	4608      	mov	r0, r1
 8010232:	9101      	str	r1, [sp, #4]
 8010234:	f7fd ffe0 	bl	800e1f8 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8010238:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 801023a:	4a0a      	ldr	r2, [pc, #40]	; (8010264 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 801023c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801023e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 8010242:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8010244:	6810      	ldr	r0, [r2, #0]
 8010246:	9901      	ldr	r1, [sp, #4]
 8010248:	4283      	cmp	r3, r0
 801024a:	4807      	ldr	r0, [pc, #28]	; (8010268 <xTaskPriorityDisinherit+0x88>)
 801024c:	bf88      	it	hi
 801024e:	6013      	strhi	r3, [r2, #0]
 8010250:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010254:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8010258:	f7fd ffa6 	bl	800e1a8 <vListInsertEnd>
					xReturn = pdTRUE;
 801025c:	2001      	movs	r0, #1
		return xReturn;
 801025e:	e7d9      	b.n	8010214 <xTaskPriorityDisinherit+0x34>
 8010260:	20013200 	.word	0x20013200
 8010264:	2001367c 	.word	0x2001367c
 8010268:	2001320c 	.word	0x2001320c

0801026c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 801026c:	2800      	cmp	r0, #0
 801026e:	d041      	beq.n	80102f4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 8010270:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 8010272:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 8010274:	b083      	sub	sp, #12
 8010276:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 8010278:	b153      	cbz	r3, 8010290 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 801027a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 801027c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801027e:	4281      	cmp	r1, r0
 8010280:	bf38      	it	cc
 8010282:	4601      	movcc	r1, r0
 8010284:	428a      	cmp	r2, r1
 8010286:	d001      	beq.n	801028c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8010288:	2b01      	cmp	r3, #1
 801028a:	d00a      	beq.n	80102a2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 801028c:	b003      	add	sp, #12
 801028e:	bd30      	pop	{r4, r5, pc}
 8010290:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010294:	f383 8811 	msr	BASEPRI, r3
 8010298:	f3bf 8f6f 	isb	sy
 801029c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 80102a0:	e7fe      	b.n	80102a0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 80102a2:	4b19      	ldr	r3, [pc, #100]	; (8010308 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 80102a4:	681b      	ldr	r3, [r3, #0]
 80102a6:	42a3      	cmp	r3, r4
 80102a8:	d025      	beq.n	80102f6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80102aa:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 80102ac:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80102ae:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80102b0:	bfa8      	it	ge
 80102b2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80102b6:	4d15      	ldr	r5, [pc, #84]	; (801030c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80102b8:	bfa8      	it	ge
 80102ba:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 80102bc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80102c0:	6961      	ldr	r1, [r4, #20]
 80102c2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 80102c6:	4299      	cmp	r1, r3
 80102c8:	d1e0      	bne.n	801028c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80102ca:	1d21      	adds	r1, r4, #4
 80102cc:	4608      	mov	r0, r1
 80102ce:	9101      	str	r1, [sp, #4]
 80102d0:	f7fd ff92 	bl	800e1f8 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 80102d4:	4b0e      	ldr	r3, [pc, #56]	; (8010310 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 80102d6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80102d8:	681a      	ldr	r2, [r3, #0]
 80102da:	9901      	ldr	r1, [sp, #4]
 80102dc:	4290      	cmp	r0, r2
 80102de:	bf88      	it	hi
 80102e0:	6018      	strhi	r0, [r3, #0]
 80102e2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80102e6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 80102ea:	b003      	add	sp, #12
 80102ec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 80102f0:	f7fd bf5a 	b.w	800e1a8 <vListInsertEnd>
 80102f4:	4770      	bx	lr
 80102f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80102fa:	f383 8811 	msr	BASEPRI, r3
 80102fe:	f3bf 8f6f 	isb	sy
 8010302:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 8010306:	e7fe      	b.n	8010306 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 8010308:	20013200 	.word	0x20013200
 801030c:	2001320c 	.word	0x2001320c
 8010310:	2001367c 	.word	0x2001367c

08010314 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8010314:	4b04      	ldr	r3, [pc, #16]	; (8010328 <pvTaskIncrementMutexHeldCount+0x14>)
 8010316:	681a      	ldr	r2, [r3, #0]
 8010318:	b11a      	cbz	r2, 8010322 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 801031a:	6819      	ldr	r1, [r3, #0]
 801031c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 801031e:	3201      	adds	r2, #1
 8010320:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8010322:	6818      	ldr	r0, [r3, #0]
	}
 8010324:	4770      	bx	lr
 8010326:	bf00      	nop
 8010328:	20013200 	.word	0x20013200

0801032c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 801032c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010330:	4e22      	ldr	r6, [pc, #136]	; (80103bc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 8010332:	f8df 9090 	ldr.w	r9, [pc, #144]	; 80103c4 <prvSwitchTimerLists+0x98>
{
 8010336:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 8010338:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801033c:	e00d      	b.n	801035a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 801033e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010340:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8010342:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010344:	1d25      	adds	r5, r4, #4
 8010346:	4628      	mov	r0, r5
 8010348:	f7fd ff56 	bl	800e1f8 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 801034c:	6a23      	ldr	r3, [r4, #32]
 801034e:	4620      	mov	r0, r4
 8010350:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010352:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8010356:	075b      	lsls	r3, r3, #29
 8010358:	d40a      	bmi.n	8010370 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 801035a:	6833      	ldr	r3, [r6, #0]
 801035c:	681a      	ldr	r2, [r3, #0]
 801035e:	2a00      	cmp	r2, #0
 8010360:	d1ed      	bne.n	801033e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 8010362:	4a17      	ldr	r2, [pc, #92]	; (80103c0 <prvSwitchTimerLists+0x94>)
 8010364:	6811      	ldr	r1, [r2, #0]
 8010366:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 8010368:	6013      	str	r3, [r2, #0]
}
 801036a:	b005      	add	sp, #20
 801036c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8010370:	69a3      	ldr	r3, [r4, #24]
 8010372:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 8010374:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010376:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 8010378:	d205      	bcs.n	8010386 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 801037a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 801037c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801037e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8010380:	f7fd ff22 	bl	800e1c8 <vListInsert>
 8010384:	e7e9      	b.n	801035a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 8010386:	f8d9 3000 	ldr.w	r3, [r9]
 801038a:	b16b      	cbz	r3, 80103a8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 801038c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010390:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010392:	f7ff fecf 	bl	8010134 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8010396:	2300      	movs	r3, #0
 8010398:	f8d9 0000 	ldr.w	r0, [r9]
 801039c:	461a      	mov	r2, r3
 801039e:	4669      	mov	r1, sp
 80103a0:	f7fe fa9c 	bl	800e8dc <xQueueGenericSend>
				configASSERT( xResult );
 80103a4:	2800      	cmp	r0, #0
 80103a6:	d1d8      	bne.n	801035a <prvSwitchTimerLists+0x2e>
 80103a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103ac:	f383 8811 	msr	BASEPRI, r3
 80103b0:	f3bf 8f6f 	isb	sy
 80103b4:	f3bf 8f4f 	dsb	sy
 80103b8:	e7fe      	b.n	80103b8 <prvSwitchTimerLists+0x8c>
 80103ba:	bf00      	nop
 80103bc:	200136fc 	.word	0x200136fc
 80103c0:	20013700 	.word	0x20013700
 80103c4:	20013820 	.word	0x20013820

080103c8 <prvTimerTask>:
{
 80103c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103cc:	4e9b      	ldr	r6, [pc, #620]	; (801063c <prvTimerTask+0x274>)
 80103ce:	4d9c      	ldr	r5, [pc, #624]	; (8010640 <prvTimerTask+0x278>)
 80103d0:	4c9c      	ldr	r4, [pc, #624]	; (8010644 <prvTimerTask+0x27c>)
 80103d2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 80103d4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 80103d8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80103dc:	6833      	ldr	r3, [r6, #0]
 80103de:	681f      	ldr	r7, [r3, #0]
 80103e0:	2f00      	cmp	r7, #0
 80103e2:	f000 80a8 	beq.w	8010536 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80103e6:	68db      	ldr	r3, [r3, #12]
 80103e8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 80103ea:	f7ff fcf9 	bl	800fde0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80103ee:	f7ff fd0f 	bl	800fe10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80103f2:	682a      	ldr	r2, [r5, #0]
 80103f4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 80103f6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 80103f8:	f0c0 80ae 	bcc.w	8010558 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80103fc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 80103fe:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8010400:	f240 80b4 	bls.w	801056c <prvTimerTask+0x1a4>
 8010404:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8010406:	6820      	ldr	r0, [r4, #0]
 8010408:	eba7 010a 	sub.w	r1, r7, sl
 801040c:	f7ff f89a 	bl	800f544 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8010410:	f7ff fcee 	bl	800fdf0 <xTaskResumeAll>
 8010414:	b928      	cbnz	r0, 8010422 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 8010416:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 801041a:	f3bf 8f4f 	dsb	sy
 801041e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8010422:	6820      	ldr	r0, [r4, #0]
 8010424:	2200      	movs	r2, #0
 8010426:	a902      	add	r1, sp, #8
 8010428:	f7fe fc94 	bl	800ed54 <xQueueReceive>
 801042c:	2800      	cmp	r0, #0
 801042e:	d0d5      	beq.n	80103dc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8010430:	9b02      	ldr	r3, [sp, #8]
 8010432:	2b00      	cmp	r3, #0
 8010434:	db76      	blt.n	8010524 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8010436:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8010438:	697b      	ldr	r3, [r7, #20]
 801043a:	b113      	cbz	r3, 8010442 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 801043c:	1d38      	adds	r0, r7, #4
 801043e:	f7fd fedb 	bl	800e1f8 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 8010442:	f7ff fce5 	bl	800fe10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8010446:	682b      	ldr	r3, [r5, #0]
 8010448:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 801044a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 801044c:	f0c0 808b 	bcc.w	8010566 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 8010450:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 8010452:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 8010456:	2b09      	cmp	r3, #9
 8010458:	d8e3      	bhi.n	8010422 <prvTimerTask+0x5a>
 801045a:	e8df f003 	tbb	[pc, r3]
 801045e:	0505      	.short	0x0505
 8010460:	5a3d5305 	.word	0x5a3d5305
 8010464:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010468:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 801046c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 801046e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8010470:	f043 0301 	orr.w	r3, r3, #1
 8010474:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8010478:	9b03      	ldr	r3, [sp, #12]
 801047a:	1899      	adds	r1, r3, r2
 801047c:	bf2c      	ite	cs
 801047e:	2001      	movcs	r0, #1
 8010480:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 8010482:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010484:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 8010486:	f200 808c 	bhi.w	80105a2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801048a:	ebaa 0303 	sub.w	r3, sl, r3
 801048e:	429a      	cmp	r2, r3
 8010490:	d832      	bhi.n	80104f8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010492:	6a3b      	ldr	r3, [r7, #32]
 8010494:	4638      	mov	r0, r7
 8010496:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010498:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 801049c:	075b      	lsls	r3, r3, #29
 801049e:	d5c0      	bpl.n	8010422 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 80104a0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80104a2:	9903      	ldr	r1, [sp, #12]
 80104a4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 80104a6:	b172      	cbz	r2, 80104c6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80104a8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80104aa:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 80104ae:	2300      	movs	r3, #0
 80104b0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80104b2:	f7ff fe3f 	bl	8010134 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80104b6:	2300      	movs	r3, #0
 80104b8:	6820      	ldr	r0, [r4, #0]
 80104ba:	461a      	mov	r2, r3
 80104bc:	a906      	add	r1, sp, #24
 80104be:	f7fe fa0d 	bl	800e8dc <xQueueGenericSend>
							configASSERT( xResult );
 80104c2:	2800      	cmp	r0, #0
 80104c4:	d1ad      	bne.n	8010422 <prvTimerTask+0x5a>
 80104c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80104ca:	f383 8811 	msr	BASEPRI, r3
 80104ce:	f3bf 8f6f 	isb	sy
 80104d2:	f3bf 8f4f 	dsb	sy
 80104d6:	e7fe      	b.n	80104d6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80104d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80104dc:	f043 0301 	orr.w	r3, r3, #1
 80104e0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80104e4:	9b03      	ldr	r3, [sp, #12]
 80104e6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80104e8:	2b00      	cmp	r3, #0
 80104ea:	f000 809d 	beq.w	8010628 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80104ee:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 80104f0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80104f2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80104f4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 80104f6:	d85e      	bhi.n	80105b6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 80104f8:	4b53      	ldr	r3, [pc, #332]	; (8010648 <prvTimerTask+0x280>)
 80104fa:	1d39      	adds	r1, r7, #4
 80104fc:	6818      	ldr	r0, [r3, #0]
 80104fe:	f7fd fe63 	bl	800e1c8 <vListInsert>
	return xProcessTimerNow;
 8010502:	e78e      	b.n	8010422 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010504:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010508:	f023 0301 	bic.w	r3, r3, #1
 801050c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8010510:	e787      	b.n	8010422 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8010512:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010516:	079a      	lsls	r2, r3, #30
 8010518:	d552      	bpl.n	80105c0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801051a:	f023 0301 	bic.w	r3, r3, #1
 801051e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8010522:	e77e      	b.n	8010422 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010524:	9b03      	ldr	r3, [sp, #12]
 8010526:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801052a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801052c:	9b02      	ldr	r3, [sp, #8]
 801052e:	2b00      	cmp	r3, #0
 8010530:	f6ff af77 	blt.w	8010422 <prvTimerTask+0x5a>
 8010534:	e77f      	b.n	8010436 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8010536:	f7ff fc53 	bl	800fde0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801053a:	f7ff fc69 	bl	800fe10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801053e:	682a      	ldr	r2, [r5, #0]
 8010540:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8010542:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010544:	d808      	bhi.n	8010558 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010546:	4b40      	ldr	r3, [pc, #256]	; (8010648 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8010548:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801054c:	681a      	ldr	r2, [r3, #0]
 801054e:	6812      	ldr	r2, [r2, #0]
 8010550:	fab2 f282 	clz	r2, r2
 8010554:	0952      	lsrs	r2, r2, #5
 8010556:	e756      	b.n	8010406 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8010558:	f7ff fee8 	bl	801032c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801055c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8010560:	f7ff fc46 	bl	800fdf0 <xTaskResumeAll>
 8010564:	e75d      	b.n	8010422 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8010566:	f7ff fee1 	bl	801032c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801056a:	e771      	b.n	8010450 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801056c:	f7ff fc40 	bl	800fdf0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010570:	6832      	ldr	r2, [r6, #0]
 8010572:	68d2      	ldr	r2, [r2, #12]
 8010574:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010578:	f10b 0104 	add.w	r1, fp, #4
 801057c:	4608      	mov	r0, r1
 801057e:	9101      	str	r1, [sp, #4]
 8010580:	f7fd fe3a 	bl	800e1f8 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010584:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8010588:	9901      	ldr	r1, [sp, #4]
 801058a:	f010 0f04 	tst.w	r0, #4
 801058e:	d11b      	bne.n	80105c8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010590:	f020 0001 	bic.w	r0, r0, #1
 8010594:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8010598:	f8db 3020 	ldr.w	r3, [fp, #32]
 801059c:	4658      	mov	r0, fp
 801059e:	4798      	blx	r3
}
 80105a0:	e73f      	b.n	8010422 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80105a2:	4553      	cmp	r3, sl
 80105a4:	d902      	bls.n	80105ac <prvTimerTask+0x1e4>
 80105a6:	2800      	cmp	r0, #0
 80105a8:	f43f af73 	beq.w	8010492 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80105ac:	6830      	ldr	r0, [r6, #0]
 80105ae:	1d39      	adds	r1, r7, #4
 80105b0:	f7fd fe0a 	bl	800e1c8 <vListInsert>
	return xProcessTimerNow;
 80105b4:	e735      	b.n	8010422 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80105b6:	6830      	ldr	r0, [r6, #0]
 80105b8:	1d39      	adds	r1, r7, #4
 80105ba:	f7fd fe05 	bl	800e1c8 <vListInsert>
 80105be:	e730      	b.n	8010422 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 80105c0:	4638      	mov	r0, r7
 80105c2:	f7fd fd7d 	bl	800e0c0 <vPortFree>
 80105c6:	e72c      	b.n	8010422 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80105c8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80105cc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80105d0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 80105d2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80105d4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 80105d8:	d903      	bls.n	80105e2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80105da:	6830      	ldr	r0, [r6, #0]
 80105dc:	f7fd fdf4 	bl	800e1c8 <vListInsert>
	return xProcessTimerNow;
 80105e0:	e7da      	b.n	8010598 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80105e2:	ebaa 0307 	sub.w	r3, sl, r7
 80105e6:	429a      	cmp	r2, r3
 80105e8:	d819      	bhi.n	801061e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80105ea:	6823      	ldr	r3, [r4, #0]
 80105ec:	b173      	cbz	r3, 801060c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80105ee:	2300      	movs	r3, #0
 80105f0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 80105f2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 80105f4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 80105f8:	f7ff fd9c 	bl	8010134 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 80105fc:	2300      	movs	r3, #0
 80105fe:	6820      	ldr	r0, [r4, #0]
 8010600:	461a      	mov	r2, r3
 8010602:	a906      	add	r1, sp, #24
 8010604:	f7fe f96a 	bl	800e8dc <xQueueGenericSend>
			configASSERT( xResult );
 8010608:	2800      	cmp	r0, #0
 801060a:	d1c5      	bne.n	8010598 <prvTimerTask+0x1d0>
 801060c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010610:	f383 8811 	msr	BASEPRI, r3
 8010614:	f3bf 8f6f 	isb	sy
 8010618:	f3bf 8f4f 	dsb	sy
 801061c:	e7fe      	b.n	801061c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801061e:	4b0a      	ldr	r3, [pc, #40]	; (8010648 <prvTimerTask+0x280>)
 8010620:	6818      	ldr	r0, [r3, #0]
 8010622:	f7fd fdd1 	bl	800e1c8 <vListInsert>
	return xProcessTimerNow;
 8010626:	e7b7      	b.n	8010598 <prvTimerTask+0x1d0>
 8010628:	f04f 0350 	mov.w	r3, #80	; 0x50
 801062c:	f383 8811 	msr	BASEPRI, r3
 8010630:	f3bf 8f6f 	isb	sy
 8010634:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010638:	e7fe      	b.n	8010638 <prvTimerTask+0x270>
 801063a:	bf00      	nop
 801063c:	200136fc 	.word	0x200136fc
 8010640:	200137cc 	.word	0x200137cc
 8010644:	20013820 	.word	0x20013820
 8010648:	20013700 	.word	0x20013700

0801064c <xTimerCreateTimerTask>:
{
 801064c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801064e:	4c23      	ldr	r4, [pc, #140]	; (80106dc <xTimerCreateTimerTask+0x90>)
{
 8010650:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8010652:	f7fd fe4f 	bl	800e2f4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010656:	6825      	ldr	r5, [r4, #0]
 8010658:	b335      	cbz	r5, 80106a8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801065a:	f7fd fe6d 	bl	800e338 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801065e:	6823      	ldr	r3, [r4, #0]
 8010660:	b1cb      	cbz	r3, 8010696 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8010662:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8010664:	aa07      	add	r2, sp, #28
 8010666:	a906      	add	r1, sp, #24
 8010668:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801066a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801066e:	f7fd fc5b 	bl	800df28 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8010672:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8010676:	2302      	movs	r3, #2
 8010678:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801067c:	9300      	str	r3, [sp, #0]
 801067e:	9a07      	ldr	r2, [sp, #28]
 8010680:	4917      	ldr	r1, [pc, #92]	; (80106e0 <xTimerCreateTimerTask+0x94>)
 8010682:	4818      	ldr	r0, [pc, #96]	; (80106e4 <xTimerCreateTimerTask+0x98>)
 8010684:	4623      	mov	r3, r4
 8010686:	f7ff fa6d 	bl	800fb64 <xTaskCreateStatic>
 801068a:	4b17      	ldr	r3, [pc, #92]	; (80106e8 <xTimerCreateTimerTask+0x9c>)
 801068c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801068e:	b110      	cbz	r0, 8010696 <xTimerCreateTimerTask+0x4a>
}
 8010690:	2001      	movs	r0, #1
 8010692:	b009      	add	sp, #36	; 0x24
 8010694:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010696:	f04f 0350 	mov.w	r3, #80	; 0x50
 801069a:	f383 8811 	msr	BASEPRI, r3
 801069e:	f3bf 8f6f 	isb	sy
 80106a2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80106a6:	e7fe      	b.n	80106a6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 80106a8:	4f10      	ldr	r7, [pc, #64]	; (80106ec <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 80106aa:	4e11      	ldr	r6, [pc, #68]	; (80106f0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 80106ac:	4638      	mov	r0, r7
 80106ae:	f7fd fd6b 	bl	800e188 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80106b2:	4630      	mov	r0, r6
 80106b4:	f7fd fd68 	bl	800e188 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80106b8:	4a0e      	ldr	r2, [pc, #56]	; (80106f4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80106ba:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 80106bc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80106be:	4a0e      	ldr	r2, [pc, #56]	; (80106f8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80106c0:	4b0e      	ldr	r3, [pc, #56]	; (80106fc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 80106c2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80106c4:	2110      	movs	r1, #16
 80106c6:	4a0e      	ldr	r2, [pc, #56]	; (8010700 <xTimerCreateTimerTask+0xb4>)
 80106c8:	200a      	movs	r0, #10
 80106ca:	f7fd ffb1 	bl	800e630 <xQueueGenericCreateStatic>
 80106ce:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 80106d0:	2800      	cmp	r0, #0
 80106d2:	d0c2      	beq.n	801065a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80106d4:	490b      	ldr	r1, [pc, #44]	; (8010704 <xTimerCreateTimerTask+0xb8>)
 80106d6:	f7fe ff0d 	bl	800f4f4 <vQueueAddToRegistry>
 80106da:	e7be      	b.n	801065a <xTimerCreateTimerTask+0xe>
 80106dc:	20013820 	.word	0x20013820
 80106e0:	0802f534 	.word	0x0802f534
 80106e4:	080103c9 	.word	0x080103c9
 80106e8:	20013824 	.word	0x20013824
 80106ec:	200137a4 	.word	0x200137a4
 80106f0:	200137b8 	.word	0x200137b8
 80106f4:	200136fc 	.word	0x200136fc
 80106f8:	20013700 	.word	0x20013700
 80106fc:	200137d0 	.word	0x200137d0
 8010700:	20013704 	.word	0x20013704
 8010704:	0802f52c 	.word	0x0802f52c

08010708 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010708:	8880      	ldrh	r0, [r0, #4]
 801070a:	4770      	bx	lr

0801070c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801070c:	b570      	push	{r4, r5, r6, lr}
 801070e:	6803      	ldr	r3, [r0, #0]
 8010710:	4605      	mov	r5, r0
 8010712:	460c      	mov	r4, r1
 8010714:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010716:	2100      	movs	r1, #0
 8010718:	4798      	blx	r3
 801071a:	682b      	ldr	r3, [r5, #0]
 801071c:	4606      	mov	r6, r0
 801071e:	6a1b      	ldr	r3, [r3, #32]
 8010720:	4628      	mov	r0, r5
 8010722:	4798      	blx	r3
 8010724:	1ba4      	subs	r4, r4, r6
 8010726:	b2a4      	uxth	r4, r4
 8010728:	fbb4 f0f0 	udiv	r0, r4, r0
 801072c:	bd70      	pop	{r4, r5, r6, pc}

0801072e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801072e:	2300      	movs	r3, #0
 8010730:	8083      	strh	r3, [r0, #4]
 8010732:	4770      	bx	lr

08010734 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010734:	b510      	push	{r4, lr}
 8010736:	6803      	ldr	r3, [r0, #0]
 8010738:	8881      	ldrh	r1, [r0, #4]
 801073a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801073c:	4604      	mov	r4, r0
 801073e:	4798      	blx	r3
 8010740:	88a3      	ldrh	r3, [r4, #4]
 8010742:	3301      	adds	r3, #1
 8010744:	80a3      	strh	r3, [r4, #4]
 8010746:	bd10      	pop	{r4, pc}

08010748 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010748:	6803      	ldr	r3, [r0, #0]
 801074a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801074c:	4718      	bx	r3

0801074e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801074e:	4770      	bx	lr

08010750 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010750:	4a02      	ldr	r2, [pc, #8]	; (801075c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010752:	6002      	str	r2, [r0, #0]
 8010754:	2200      	movs	r2, #0
 8010756:	8082      	strh	r2, [r0, #4]
 8010758:	4770      	bx	lr
 801075a:	bf00      	nop
 801075c:	0802f544 	.word	0x0802f544

08010760 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8010760:	b510      	push	{r4, lr}
 8010762:	6803      	ldr	r3, [r0, #0]
 8010764:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010768:	4604      	mov	r4, r0
 801076a:	4798      	blx	r3
 801076c:	b110      	cbz	r0, 8010774 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801076e:	4620      	mov	r0, r4
 8010770:	f7f1 ff6a 	bl	8002648 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8010774:	bd10      	pop	{r4, pc}

08010776 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010776:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801077a:	4770      	bx	lr

0801077c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801077c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010780:	4770      	bx	lr

08010782 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010782:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010786:	4770      	bx	lr

08010788 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010788:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801078c:	4770      	bx	lr

0801078e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801078e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010790:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 8010794:	461e      	mov	r6, r3
 8010796:	6803      	ldr	r3, [r0, #0]
 8010798:	460f      	mov	r7, r1
 801079a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801079e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 80107a2:	4604      	mov	r4, r0
 80107a4:	4615      	mov	r5, r2
 80107a6:	4798      	blx	r3
 80107a8:	b93e      	cbnz	r6, 80107ba <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80107aa:	1bed      	subs	r5, r5, r7
 80107ac:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80107b0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80107b4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80107b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80107ba:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80107be:	e7f7      	b.n	80107b0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080107c0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80107c0:	b510      	push	{r4, lr}
 80107c2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80107c6:	600c      	str	r4, [r1, #0]
 80107c8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80107cc:	6011      	str	r1, [r2, #0]
 80107ce:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80107d2:	801a      	strh	r2, [r3, #0]
 80107d4:	9b02      	ldr	r3, [sp, #8]
 80107d6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80107da:	801a      	strh	r2, [r3, #0]
 80107dc:	bd10      	pop	{r4, pc}

080107de <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80107de:	b510      	push	{r4, lr}
 80107e0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80107e4:	600c      	str	r4, [r1, #0]
 80107e6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80107ea:	6011      	str	r1, [r2, #0]
 80107ec:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80107f0:	801a      	strh	r2, [r3, #0]
 80107f2:	bd10      	pop	{r4, pc}

080107f4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 80107f4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80107f8:	600b      	str	r3, [r1, #0]
 80107fa:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80107fe:	6013      	str	r3, [r2, #0]
 8010800:	4770      	bx	lr

08010802 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8010802:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8010806:	4770      	bx	lr

08010808 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8010808:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801080c:	4770      	bx	lr

0801080e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801080e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8010812:	4770      	bx	lr

08010814 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010814:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8010818:	4770      	bx	lr

0801081a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801081a:	4770      	bx	lr

0801081c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801081c:	b510      	push	{r4, lr}
 801081e:	21b4      	movs	r1, #180	; 0xb4
 8010820:	4604      	mov	r4, r0
 8010822:	f01a fb02 	bl	802ae2a <_ZdlPvj>
 8010826:	4620      	mov	r0, r4
 8010828:	bd10      	pop	{r4, pc}

0801082a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801082a:	b570      	push	{r4, r5, r6, lr}
 801082c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010830:	428d      	cmp	r5, r1
 8010832:	bfb8      	it	lt
 8010834:	460d      	movlt	r5, r1
 8010836:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801083a:	428d      	cmp	r5, r1
 801083c:	4604      	mov	r4, r0
 801083e:	bfa8      	it	ge
 8010840:	460d      	movge	r5, r1
 8010842:	4616      	mov	r6, r2
 8010844:	b99a      	cbnz	r2, 801086e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010846:	6803      	ldr	r3, [r0, #0]
 8010848:	4629      	mov	r1, r5
 801084a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801084e:	4798      	blx	r3
 8010850:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010854:	b368      	cbz	r0, 80108b2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010856:	6803      	ldr	r3, [r0, #0]
 8010858:	68db      	ldr	r3, [r3, #12]
 801085a:	4798      	blx	r3
 801085c:	b348      	cbz	r0, 80108b2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801085e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010862:	6803      	ldr	r3, [r0, #0]
 8010864:	4621      	mov	r1, r4
 8010866:	689b      	ldr	r3, [r3, #8]
 8010868:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801086c:	4718      	bx	r3
 801086e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010872:	2b00      	cmp	r3, #0
 8010874:	dd08      	ble.n	8010888 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010876:	f006 fa23 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 801087a:	4621      	mov	r1, r4
 801087c:	3004      	adds	r0, #4
 801087e:	f006 fa6c 	bl	8016d5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010882:	2300      	movs	r3, #0
 8010884:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010888:	6823      	ldr	r3, [r4, #0]
 801088a:	4620      	mov	r0, r4
 801088c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010890:	4798      	blx	r3
 8010892:	2300      	movs	r3, #0
 8010894:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 8010898:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 801089c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 80108a0:	f006 fa0e 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 80108a4:	4621      	mov	r1, r4
 80108a6:	3004      	adds	r0, #4
 80108a8:	f006 fb00 	bl	8016eac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80108ac:	2301      	movs	r3, #1
 80108ae:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80108b2:	bd70      	pop	{r4, r5, r6, pc}

080108b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80108b4:	b510      	push	{r4, lr}
 80108b6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80108ba:	4299      	cmp	r1, r3
 80108bc:	bfb8      	it	lt
 80108be:	4619      	movlt	r1, r3
 80108c0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80108c4:	4299      	cmp	r1, r3
 80108c6:	bfa8      	it	ge
 80108c8:	4619      	movge	r1, r3
 80108ca:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80108ce:	428b      	cmp	r3, r1
 80108d0:	4604      	mov	r4, r0
 80108d2:	d010      	beq.n	80108f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80108d4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80108d8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80108dc:	b158      	cbz	r0, 80108f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80108de:	6803      	ldr	r3, [r0, #0]
 80108e0:	68db      	ldr	r3, [r3, #12]
 80108e2:	4798      	blx	r3
 80108e4:	b138      	cbz	r0, 80108f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80108e6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80108ea:	6803      	ldr	r3, [r0, #0]
 80108ec:	4621      	mov	r1, r4
 80108ee:	689b      	ldr	r3, [r3, #8]
 80108f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80108f4:	4718      	bx	r3
 80108f6:	bd10      	pop	{r4, pc}

080108f8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 80108f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80108fa:	4604      	mov	r4, r0
 80108fc:	460d      	mov	r5, r1
 80108fe:	b1a9      	cbz	r1, 801092c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8010900:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8010904:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8010908:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801090c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010910:	ab01      	add	r3, sp, #4
 8010912:	1a12      	subs	r2, r2, r0
 8010914:	1b89      	subs	r1, r1, r6
 8010916:	1a38      	subs	r0, r7, r0
 8010918:	f007 fc88 	bl	801822c <_ZN8touchgfx6muldivElllRl>
 801091c:	4629      	mov	r1, r5
 801091e:	ab01      	add	r3, sp, #4
 8010920:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010924:	4430      	add	r0, r6
 8010926:	f007 fc81 	bl	801822c <_ZN8touchgfx6muldivElllRl>
 801092a:	b285      	uxth	r5, r0
 801092c:	4628      	mov	r0, r5
 801092e:	b003      	add	sp, #12
 8010930:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010932 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010932:	b570      	push	{r4, r5, r6, lr}
 8010934:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010938:	4604      	mov	r4, r0
 801093a:	2b00      	cmp	r3, #0
 801093c:	d035      	beq.n	80109aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801093e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010942:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010946:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801094a:	3001      	adds	r0, #1
 801094c:	1ad2      	subs	r2, r2, r3
 801094e:	b212      	sxth	r2, r2
 8010950:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010954:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010958:	2100      	movs	r1, #0
 801095a:	b280      	uxth	r0, r0
 801095c:	47a8      	blx	r5
 801095e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010962:	6823      	ldr	r3, [r4, #0]
 8010964:	4401      	add	r1, r0
 8010966:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801096a:	4620      	mov	r0, r4
 801096c:	4798      	blx	r3
 801096e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010972:	429a      	cmp	r2, r3
 8010974:	db19      	blt.n	80109aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010976:	2500      	movs	r5, #0
 8010978:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801097c:	f006 f9a0 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 8010980:	4621      	mov	r1, r4
 8010982:	3004      	adds	r0, #4
 8010984:	f006 f9e9 	bl	8016d5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010988:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801098c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010990:	b158      	cbz	r0, 80109aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010992:	6803      	ldr	r3, [r0, #0]
 8010994:	68db      	ldr	r3, [r3, #12]
 8010996:	4798      	blx	r3
 8010998:	b138      	cbz	r0, 80109aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801099a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801099e:	6803      	ldr	r3, [r0, #0]
 80109a0:	4621      	mov	r1, r4
 80109a2:	689b      	ldr	r3, [r3, #8]
 80109a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109a8:	4718      	bx	r3
 80109aa:	bd70      	pop	{r4, r5, r6, pc}

080109ac <_ZN8touchgfx8DrawableC1Ev>:
 80109ac:	4a0a      	ldr	r2, [pc, #40]	; (80109d8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 80109ae:	6002      	str	r2, [r0, #0]
 80109b0:	2200      	movs	r2, #0
 80109b2:	8082      	strh	r2, [r0, #4]
 80109b4:	80c2      	strh	r2, [r0, #6]
 80109b6:	8102      	strh	r2, [r0, #8]
 80109b8:	8142      	strh	r2, [r0, #10]
 80109ba:	8182      	strh	r2, [r0, #12]
 80109bc:	81c2      	strh	r2, [r0, #14]
 80109be:	8202      	strh	r2, [r0, #16]
 80109c0:	8242      	strh	r2, [r0, #18]
 80109c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80109c6:	61c2      	str	r2, [r0, #28]
 80109c8:	8402      	strh	r2, [r0, #32]
 80109ca:	8442      	strh	r2, [r0, #34]	; 0x22
 80109cc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80109d0:	2201      	movs	r2, #1
 80109d2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80109d6:	4770      	bx	lr
 80109d8:	0802fec4 	.word	0x0802fec4

080109dc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80109dc:	b570      	push	{r4, r5, r6, lr}
 80109de:	6803      	ldr	r3, [r0, #0]
 80109e0:	4604      	mov	r4, r0
 80109e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80109e4:	4615      	mov	r5, r2
 80109e6:	4798      	blx	r3
 80109e8:	6823      	ldr	r3, [r4, #0]
 80109ea:	4629      	mov	r1, r5
 80109ec:	4620      	mov	r0, r4
 80109ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80109f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109f4:	4718      	bx	r3

080109f6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 80109f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109fa:	4604      	mov	r4, r0
 80109fc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8010a00:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8010a04:	460e      	mov	r6, r1
 8010a06:	4615      	mov	r5, r2
 8010a08:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8010a0c:	4619      	mov	r1, r3
 8010a0e:	463a      	mov	r2, r7
 8010a10:	3058      	adds	r0, #88	; 0x58
 8010a12:	4698      	mov	r8, r3
 8010a14:	f7ff ffe2 	bl	80109dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010a18:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8010a1c:	4446      	add	r6, r8
 8010a1e:	42b3      	cmp	r3, r6
 8010a20:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010a24:	bfb8      	it	lt
 8010a26:	8126      	strhlt	r6, [r4, #8]
 8010a28:	443d      	add	r5, r7
 8010a2a:	42ab      	cmp	r3, r5
 8010a2c:	bfb8      	it	lt
 8010a2e:	8165      	strhlt	r5, [r4, #10]
 8010a30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a34 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010a34:	b510      	push	{r4, lr}
 8010a36:	4604      	mov	r4, r0
 8010a38:	302c      	adds	r0, #44	; 0x2c
 8010a3a:	f003 fc42 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010a3e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010a42:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010a46:	4620      	mov	r0, r4
 8010a48:	f7ff ffc8 	bl	80109dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010a4c:	bd10      	pop	{r4, pc}
	...

08010a50 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010a50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010a52:	4604      	mov	r4, r0
 8010a54:	4626      	mov	r6, r4
 8010a56:	2500      	movs	r5, #0
 8010a58:	f7ff ffa8 	bl	80109ac <_ZN8touchgfx8DrawableC1Ev>
 8010a5c:	4b23      	ldr	r3, [pc, #140]	; (8010aec <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8010a5e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010a60:	f846 3b2c 	str.w	r3, [r6], #44
 8010a64:	2226      	movs	r2, #38	; 0x26
 8010a66:	4629      	mov	r1, r5
 8010a68:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8010a6c:	4630      	mov	r0, r6
 8010a6e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010a72:	f01b f9f2 	bl	802be5a <memset>
 8010a76:	4630      	mov	r0, r6
 8010a78:	f7ff ff98 	bl	80109ac <_ZN8touchgfx8DrawableC1Ev>
 8010a7c:	a902      	add	r1, sp, #8
 8010a7e:	4b1c      	ldr	r3, [pc, #112]	; (8010af0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010a80:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010a82:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010a86:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 8010a8a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 8010a8e:	4630      	mov	r0, r6
 8010a90:	f104 0758 	add.w	r7, r4, #88	; 0x58
 8010a94:	f003 fc15 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010a98:	4638      	mov	r0, r7
 8010a9a:	f7ff ff87 	bl	80109ac <_ZN8touchgfx8DrawableC1Ev>
 8010a9e:	4b15      	ldr	r3, [pc, #84]	; (8010af4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8010aa0:	65a3      	str	r3, [r4, #88]	; 0x58
 8010aa2:	2364      	movs	r3, #100	; 0x64
 8010aa4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 8010aa8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 8010aac:	4b12      	ldr	r3, [pc, #72]	; (8010af8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8010aae:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8010ab2:	4629      	mov	r1, r5
 8010ab4:	4630      	mov	r0, r6
 8010ab6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8010aba:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 8010abe:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 8010ac2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 8010ac6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 8010aca:	f7f1 fd19 	bl	8002500 <_ZN8touchgfx8Drawable4setXEs>
 8010ace:	4629      	mov	r1, r5
 8010ad0:	4630      	mov	r0, r6
 8010ad2:	f7f1 fd17 	bl	8002504 <_ZN8touchgfx8Drawable4setYEs>
 8010ad6:	4631      	mov	r1, r6
 8010ad8:	4620      	mov	r0, r4
 8010ada:	f000 f819 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010ade:	4620      	mov	r0, r4
 8010ae0:	4639      	mov	r1, r7
 8010ae2:	f000 f815 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010ae6:	4620      	mov	r0, r4
 8010ae8:	b003      	add	sp, #12
 8010aea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010aec:	0802f578 	.word	0x0802f578
 8010af0:	0802fd80 	.word	0x0802fd80
 8010af4:	0802f64c 	.word	0x0802f64c
 8010af8:	08018a07 	.word	0x08018a07

08010afc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8010afc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010afe:	2000      	movs	r0, #0
 8010b00:	b12b      	cbz	r3, 8010b0e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010b02:	b920      	cbnz	r0, 8010b0e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010b04:	1a5a      	subs	r2, r3, r1
 8010b06:	4250      	negs	r0, r2
 8010b08:	4150      	adcs	r0, r2
 8010b0a:	699b      	ldr	r3, [r3, #24]
 8010b0c:	e7f8      	b.n	8010b00 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8010b0e:	4770      	bx	lr

08010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010b10:	2300      	movs	r3, #0
 8010b12:	6148      	str	r0, [r1, #20]
 8010b14:	618b      	str	r3, [r1, #24]
 8010b16:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010b18:	b913      	cbnz	r3, 8010b20 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 8010b1a:	6281      	str	r1, [r0, #40]	; 0x28
 8010b1c:	4770      	bx	lr
 8010b1e:	4613      	mov	r3, r2
 8010b20:	699a      	ldr	r2, [r3, #24]
 8010b22:	2a00      	cmp	r2, #0
 8010b24:	d1fb      	bne.n	8010b1e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010b26:	6199      	str	r1, [r3, #24]
 8010b28:	4770      	bx	lr

08010b2a <_ZN8touchgfx9Container9removeAllEv>:
 8010b2a:	2200      	movs	r2, #0
 8010b2c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010b2e:	b123      	cbz	r3, 8010b3a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010b30:	6999      	ldr	r1, [r3, #24]
 8010b32:	6281      	str	r1, [r0, #40]	; 0x28
 8010b34:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010b38:	e7f8      	b.n	8010b2c <_ZN8touchgfx9Container9removeAllEv+0x2>
 8010b3a:	4770      	bx	lr

08010b3c <_ZN8touchgfx9Container6unlinkEv>:
 8010b3c:	2300      	movs	r3, #0
 8010b3e:	6283      	str	r3, [r0, #40]	; 0x28
 8010b40:	4770      	bx	lr

08010b42 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010b42:	2200      	movs	r2, #0
 8010b44:	8002      	strh	r2, [r0, #0]
 8010b46:	8042      	strh	r2, [r0, #2]
 8010b48:	8082      	strh	r2, [r0, #4]
 8010b4a:	80c2      	strh	r2, [r0, #6]
 8010b4c:	4770      	bx	lr

08010b4e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8010b4e:	b570      	push	{r4, r5, r6, lr}
 8010b50:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b52:	460d      	mov	r5, r1
 8010b54:	4616      	mov	r6, r2
 8010b56:	b13c      	cbz	r4, 8010b68 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010b58:	6823      	ldr	r3, [r4, #0]
 8010b5a:	4620      	mov	r0, r4
 8010b5c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8010b5e:	4632      	mov	r2, r6
 8010b60:	4629      	mov	r1, r5
 8010b62:	4798      	blx	r3
 8010b64:	69a4      	ldr	r4, [r4, #24]
 8010b66:	e7f6      	b.n	8010b56 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010b68:	bd70      	pop	{r4, r5, r6, pc}

08010b6a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8010b6a:	b538      	push	{r3, r4, r5, lr}
 8010b6c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010b6e:	460d      	mov	r5, r1
 8010b70:	b134      	cbz	r4, 8010b80 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010b72:	682b      	ldr	r3, [r5, #0]
 8010b74:	4621      	mov	r1, r4
 8010b76:	689b      	ldr	r3, [r3, #8]
 8010b78:	4628      	mov	r0, r5
 8010b7a:	4798      	blx	r3
 8010b7c:	69a4      	ldr	r4, [r4, #24]
 8010b7e:	e7f7      	b.n	8010b70 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010b80:	bd38      	pop	{r3, r4, r5, pc}

08010b82 <_ZN8touchgfx9ContainerD1Ev>:
 8010b82:	4770      	bx	lr

08010b84 <_ZN8touchgfx9ContainerD0Ev>:
 8010b84:	b510      	push	{r4, lr}
 8010b86:	212c      	movs	r1, #44	; 0x2c
 8010b88:	4604      	mov	r4, r0
 8010b8a:	f01a f94e 	bl	802ae2a <_ZdlPvj>
 8010b8e:	4620      	mov	r0, r4
 8010b90:	bd10      	pop	{r4, pc}

08010b92 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010b92:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010b94:	b19b      	cbz	r3, 8010bbe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010b96:	428b      	cmp	r3, r1
 8010b98:	d109      	bne.n	8010bae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8010b9a:	699a      	ldr	r2, [r3, #24]
 8010b9c:	2100      	movs	r1, #0
 8010b9e:	6159      	str	r1, [r3, #20]
 8010ba0:	6282      	str	r2, [r0, #40]	; 0x28
 8010ba2:	b902      	cbnz	r2, 8010ba6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010ba4:	4770      	bx	lr
 8010ba6:	6199      	str	r1, [r3, #24]
 8010ba8:	4770      	bx	lr
 8010baa:	4613      	mov	r3, r2
 8010bac:	b13a      	cbz	r2, 8010bbe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010bae:	699a      	ldr	r2, [r3, #24]
 8010bb0:	428a      	cmp	r2, r1
 8010bb2:	d1fa      	bne.n	8010baa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010bb4:	698a      	ldr	r2, [r1, #24]
 8010bb6:	619a      	str	r2, [r3, #24]
 8010bb8:	2300      	movs	r3, #0
 8010bba:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8010bbe:	4770      	bx	lr

08010bc0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010bc0:	b410      	push	{r4}
 8010bc2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010bc4:	4604      	mov	r4, r0
 8010bc6:	b92b      	cbnz	r3, 8010bd4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010bc8:	6803      	ldr	r3, [r0, #0]
 8010bca:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010bce:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8010bd0:	4611      	mov	r1, r2
 8010bd2:	4718      	bx	r3
 8010bd4:	b941      	cbnz	r1, 8010be8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010bd6:	6193      	str	r3, [r2, #24]
 8010bd8:	6282      	str	r2, [r0, #40]	; 0x28
 8010bda:	6154      	str	r4, [r2, #20]
 8010bdc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010be0:	4770      	bx	lr
 8010be2:	4603      	mov	r3, r0
 8010be4:	2800      	cmp	r0, #0
 8010be6:	d0f9      	beq.n	8010bdc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010be8:	4299      	cmp	r1, r3
 8010bea:	6998      	ldr	r0, [r3, #24]
 8010bec:	d1f9      	bne.n	8010be2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8010bee:	6190      	str	r0, [r2, #24]
 8010bf0:	618a      	str	r2, [r1, #24]
 8010bf2:	e7f2      	b.n	8010bda <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010bf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010bf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010bf8:	461f      	mov	r7, r3
 8010bfa:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8010bfe:	460d      	mov	r5, r1
 8010c00:	4616      	mov	r6, r2
 8010c02:	b103      	cbz	r3, 8010c06 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010c04:	6038      	str	r0, [r7, #0]
 8010c06:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010c08:	b314      	cbz	r4, 8010c50 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8010c0a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010c0e:	b1eb      	cbz	r3, 8010c4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c10:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010c14:	428d      	cmp	r5, r1
 8010c16:	db19      	blt.n	8010c4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c18:	8923      	ldrh	r3, [r4, #8]
 8010c1a:	b289      	uxth	r1, r1
 8010c1c:	440b      	add	r3, r1
 8010c1e:	b21b      	sxth	r3, r3
 8010c20:	429d      	cmp	r5, r3
 8010c22:	da13      	bge.n	8010c4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c24:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010c28:	4296      	cmp	r6, r2
 8010c2a:	db0f      	blt.n	8010c4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c2c:	8963      	ldrh	r3, [r4, #10]
 8010c2e:	b292      	uxth	r2, r2
 8010c30:	4413      	add	r3, r2
 8010c32:	b21b      	sxth	r3, r3
 8010c34:	429e      	cmp	r6, r3
 8010c36:	da09      	bge.n	8010c4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010c38:	6823      	ldr	r3, [r4, #0]
 8010c3a:	1ab2      	subs	r2, r6, r2
 8010c3c:	1a69      	subs	r1, r5, r1
 8010c3e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010c42:	b212      	sxth	r2, r2
 8010c44:	463b      	mov	r3, r7
 8010c46:	b209      	sxth	r1, r1
 8010c48:	4620      	mov	r0, r4
 8010c4a:	47c0      	blx	r8
 8010c4c:	69a4      	ldr	r4, [r4, #24]
 8010c4e:	e7db      	b.n	8010c08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010c50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010c54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c58:	4c6e      	ldr	r4, [pc, #440]	; (8010e14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8010c5a:	b0a1      	sub	sp, #132	; 0x84
 8010c5c:	6824      	ldr	r4, [r4, #0]
 8010c5e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010c60:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010c64:	9303      	str	r3, [sp, #12]
 8010c66:	2400      	movs	r4, #0
 8010c68:	802c      	strh	r4, [r5, #0]
 8010c6a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 8010c6c:	802c      	strh	r4, [r5, #0]
 8010c6e:	601c      	str	r4, [r3, #0]
 8010c70:	4606      	mov	r6, r0
 8010c72:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010c76:	f7ff ffbd 	bl	8010bf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010c7a:	f1b9 0f03 	cmp.w	r9, #3
 8010c7e:	f340 80c2 	ble.w	8010e06 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010c82:	4631      	mov	r1, r6
 8010c84:	a80c      	add	r0, sp, #48	; 0x30
 8010c86:	f007 f99f 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010c8a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8010c8e:	9306      	str	r3, [sp, #24]
 8010c90:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8010c94:	9307      	str	r3, [sp, #28]
 8010c96:	9b03      	ldr	r3, [sp, #12]
 8010c98:	f8d3 a000 	ldr.w	sl, [r3]
 8010c9c:	f1ba 0f00 	cmp.w	sl, #0
 8010ca0:	f000 80b4 	beq.w	8010e0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010ca4:	4651      	mov	r1, sl
 8010ca6:	a810      	add	r0, sp, #64	; 0x40
 8010ca8:	f007 f98e 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010cac:	9b01      	ldr	r3, [sp, #4]
 8010cae:	9a06      	ldr	r2, [sp, #24]
 8010cb0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8010cb4:	189d      	adds	r5, r3, r2
 8010cb6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 8010cba:	9a07      	ldr	r2, [sp, #28]
 8010cbc:	2002      	movs	r0, #2
 8010cbe:	fb91 f1f0 	sdiv	r1, r1, r0
 8010cc2:	4419      	add	r1, r3
 8010cc4:	1a6d      	subs	r5, r5, r1
 8010cc6:	9b02      	ldr	r3, [sp, #8]
 8010cc8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010ccc:	4413      	add	r3, r2
 8010cce:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8010cd2:	fb92 f2f0 	sdiv	r2, r2, r0
 8010cd6:	440a      	add	r2, r1
 8010cd8:	1a9b      	subs	r3, r3, r2
 8010cda:	435b      	muls	r3, r3
 8010cdc:	fb05 3505 	mla	r5, r5, r5, r3
 8010ce0:	4f4d      	ldr	r7, [pc, #308]	; (8010e18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010ce2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010ce4:	ac10      	add	r4, sp, #64	; 0x40
 8010ce6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010ce8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010cea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010cec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010cee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010cf0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010cf4:	f1b9 0f0c 	cmp.w	r9, #12
 8010cf8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010cfc:	f04f 0303 	mov.w	r3, #3
 8010d00:	bfc8      	it	gt
 8010d02:	4698      	movgt	r8, r3
 8010d04:	f8cd 9000 	str.w	r9, [sp]
 8010d08:	f04f 0400 	mov.w	r4, #0
 8010d0c:	bfdc      	itt	le
 8010d0e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010d12:	fb92 f8f3 	sdivle	r8, r2, r3
 8010d16:	1c63      	adds	r3, r4, #1
 8010d18:	aa10      	add	r2, sp, #64	; 0x40
 8010d1a:	f004 0401 	and.w	r4, r4, #1
 8010d1e:	9308      	str	r3, [sp, #32]
 8010d20:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010d24:	9b00      	ldr	r3, [sp, #0]
 8010d26:	fb93 f3f8 	sdiv	r3, r3, r8
 8010d2a:	b29b      	uxth	r3, r3
 8010d2c:	3404      	adds	r4, #4
 8010d2e:	f04f 0b00 	mov.w	fp, #0
 8010d32:	9304      	str	r3, [sp, #16]
 8010d34:	9a04      	ldr	r2, [sp, #16]
 8010d36:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010d3a:	fb13 f302 	smulbb	r3, r3, r2
 8010d3e:	9a01      	ldr	r2, [sp, #4]
 8010d40:	b29b      	uxth	r3, r3
 8010d42:	1899      	adds	r1, r3, r2
 8010d44:	9305      	str	r3, [sp, #20]
 8010d46:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010d4a:	b209      	sxth	r1, r1
 8010d4c:	4299      	cmp	r1, r3
 8010d4e:	db4d      	blt.n	8010dec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d50:	8932      	ldrh	r2, [r6, #8]
 8010d52:	4413      	add	r3, r2
 8010d54:	b21b      	sxth	r3, r3
 8010d56:	4299      	cmp	r1, r3
 8010d58:	da48      	bge.n	8010dec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d5a:	9b04      	ldr	r3, [sp, #16]
 8010d5c:	6827      	ldr	r7, [r4, #0]
 8010d5e:	fb17 f703 	smulbb	r7, r7, r3
 8010d62:	9b02      	ldr	r3, [sp, #8]
 8010d64:	b2bf      	uxth	r7, r7
 8010d66:	18fa      	adds	r2, r7, r3
 8010d68:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010d6c:	b212      	sxth	r2, r2
 8010d6e:	429a      	cmp	r2, r3
 8010d70:	db3c      	blt.n	8010dec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d72:	8970      	ldrh	r0, [r6, #10]
 8010d74:	4403      	add	r3, r0
 8010d76:	b21b      	sxth	r3, r3
 8010d78:	429a      	cmp	r2, r3
 8010d7a:	da37      	bge.n	8010dec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d7c:	2300      	movs	r3, #0
 8010d7e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010d80:	4630      	mov	r0, r6
 8010d82:	ab0b      	add	r3, sp, #44	; 0x2c
 8010d84:	f7ff ff36 	bl	8010bf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010d88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010d8a:	b37a      	cbz	r2, 8010dec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d8c:	4552      	cmp	r2, sl
 8010d8e:	d02d      	beq.n	8010dec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010d90:	4611      	mov	r1, r2
 8010d92:	a80e      	add	r0, sp, #56	; 0x38
 8010d94:	9209      	str	r2, [sp, #36]	; 0x24
 8010d96:	f007 f917 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010d9a:	9a06      	ldr	r2, [sp, #24]
 8010d9c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8010da0:	9b01      	ldr	r3, [sp, #4]
 8010da2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8010da6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 8010daa:	4413      	add	r3, r2
 8010dac:	f04f 0e02 	mov.w	lr, #2
 8010db0:	fb91 f1fe 	sdiv	r1, r1, lr
 8010db4:	4401      	add	r1, r0
 8010db6:	1a58      	subs	r0, r3, r1
 8010db8:	9a07      	ldr	r2, [sp, #28]
 8010dba:	9b02      	ldr	r3, [sp, #8]
 8010dbc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010dc0:	fb9c fcfe 	sdiv	ip, ip, lr
 8010dc4:	4413      	add	r3, r2
 8010dc6:	448c      	add	ip, r1
 8010dc8:	eba3 030c 	sub.w	r3, r3, ip
 8010dcc:	435b      	muls	r3, r3
 8010dce:	fb00 3300 	mla	r3, r0, r0, r3
 8010dd2:	42ab      	cmp	r3, r5
 8010dd4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010dd6:	d208      	bcs.n	8010dea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010dd8:	9803      	ldr	r0, [sp, #12]
 8010dda:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010ddc:	6001      	str	r1, [r0, #0]
 8010dde:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010de0:	9805      	ldr	r0, [sp, #20]
 8010de2:	8008      	strh	r0, [r1, #0]
 8010de4:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010de6:	461d      	mov	r5, r3
 8010de8:	800f      	strh	r7, [r1, #0]
 8010dea:	4692      	mov	sl, r2
 8010dec:	f10b 0b01 	add.w	fp, fp, #1
 8010df0:	f1bb 0f04 	cmp.w	fp, #4
 8010df4:	f104 0408 	add.w	r4, r4, #8
 8010df8:	d19c      	bne.n	8010d34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010dfa:	9b00      	ldr	r3, [sp, #0]
 8010dfc:	9c08      	ldr	r4, [sp, #32]
 8010dfe:	444b      	add	r3, r9
 8010e00:	4544      	cmp	r4, r8
 8010e02:	9300      	str	r3, [sp, #0]
 8010e04:	d187      	bne.n	8010d16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010e06:	b021      	add	sp, #132	; 0x84
 8010e08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e0c:	f04f 35ff 	mov.w	r5, #4294967295
 8010e10:	e766      	b.n	8010ce0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010e12:	bf00      	nop
 8010e14:	20013834 	.word	0x20013834
 8010e18:	0802cb68 	.word	0x0802cb68

08010e1c <_ZN8touchgfx4RectaNERKS0_>:
 8010e1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010e20:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010e24:	888c      	ldrh	r4, [r1, #4]
 8010e26:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010e2a:	443c      	add	r4, r7
 8010e2c:	b2a4      	uxth	r4, r4
 8010e2e:	fa0f f884 	sxth.w	r8, r4
 8010e32:	45c1      	cmp	r9, r8
 8010e34:	da2f      	bge.n	8010e96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e36:	8882      	ldrh	r2, [r0, #4]
 8010e38:	444a      	add	r2, r9
 8010e3a:	b292      	uxth	r2, r2
 8010e3c:	fa0f fe82 	sxth.w	lr, r2
 8010e40:	4577      	cmp	r7, lr
 8010e42:	da28      	bge.n	8010e96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e44:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010e48:	88cb      	ldrh	r3, [r1, #6]
 8010e4a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010e4e:	442b      	add	r3, r5
 8010e50:	b21b      	sxth	r3, r3
 8010e52:	429e      	cmp	r6, r3
 8010e54:	da1f      	bge.n	8010e96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e56:	88c3      	ldrh	r3, [r0, #6]
 8010e58:	4433      	add	r3, r6
 8010e5a:	b29b      	uxth	r3, r3
 8010e5c:	fa0f fc83 	sxth.w	ip, r3
 8010e60:	4565      	cmp	r5, ip
 8010e62:	da18      	bge.n	8010e96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010e64:	454f      	cmp	r7, r9
 8010e66:	bfb8      	it	lt
 8010e68:	464f      	movlt	r7, r9
 8010e6a:	42b5      	cmp	r5, r6
 8010e6c:	bfb8      	it	lt
 8010e6e:	4635      	movlt	r5, r6
 8010e70:	45f0      	cmp	r8, lr
 8010e72:	bfd8      	it	le
 8010e74:	4622      	movle	r2, r4
 8010e76:	1bd2      	subs	r2, r2, r7
 8010e78:	8082      	strh	r2, [r0, #4]
 8010e7a:	884a      	ldrh	r2, [r1, #2]
 8010e7c:	88c9      	ldrh	r1, [r1, #6]
 8010e7e:	8007      	strh	r7, [r0, #0]
 8010e80:	440a      	add	r2, r1
 8010e82:	b292      	uxth	r2, r2
 8010e84:	b211      	sxth	r1, r2
 8010e86:	458c      	cmp	ip, r1
 8010e88:	bfa8      	it	ge
 8010e8a:	4613      	movge	r3, r2
 8010e8c:	1b5b      	subs	r3, r3, r5
 8010e8e:	80c3      	strh	r3, [r0, #6]
 8010e90:	8045      	strh	r5, [r0, #2]
 8010e92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010e96:	2300      	movs	r3, #0
 8010e98:	8003      	strh	r3, [r0, #0]
 8010e9a:	8043      	strh	r3, [r0, #2]
 8010e9c:	8083      	strh	r3, [r0, #4]
 8010e9e:	80c3      	strh	r3, [r0, #6]
 8010ea0:	e7f7      	b.n	8010e92 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010ea2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010ea6:	2b00      	cmp	r3, #0
 8010ea8:	dd06      	ble.n	8010eb8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010eaa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010eae:	2800      	cmp	r0, #0
 8010eb0:	bfcc      	ite	gt
 8010eb2:	2000      	movgt	r0, #0
 8010eb4:	2001      	movle	r0, #1
 8010eb6:	4770      	bx	lr
 8010eb8:	2001      	movs	r0, #1
 8010eba:	4770      	bx	lr

08010ebc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010ebc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ec0:	2300      	movs	r3, #0
 8010ec2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010ec4:	8003      	strh	r3, [r0, #0]
 8010ec6:	4604      	mov	r4, r0
 8010ec8:	8043      	strh	r3, [r0, #2]
 8010eca:	8083      	strh	r3, [r0, #4]
 8010ecc:	80c3      	strh	r3, [r0, #6]
 8010ece:	2d00      	cmp	r5, #0
 8010ed0:	d040      	beq.n	8010f54 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010ed2:	1d28      	adds	r0, r5, #4
 8010ed4:	f7ff ffe5 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ed8:	b988      	cbnz	r0, 8010efe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010eda:	4620      	mov	r0, r4
 8010edc:	f7ff ffe1 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ee0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010ee4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010ee8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010eec:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010ef0:	b138      	cbz	r0, 8010f02 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010ef2:	8022      	strh	r2, [r4, #0]
 8010ef4:	8063      	strh	r3, [r4, #2]
 8010ef6:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010efa:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010efe:	69ad      	ldr	r5, [r5, #24]
 8010f00:	e7e5      	b.n	8010ece <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010f02:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010f06:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010f0a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010f0e:	4290      	cmp	r0, r2
 8010f10:	4607      	mov	r7, r0
 8010f12:	bfa8      	it	ge
 8010f14:	4617      	movge	r7, r2
 8010f16:	4472      	add	r2, lr
 8010f18:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010f1c:	8027      	strh	r7, [r4, #0]
 8010f1e:	4299      	cmp	r1, r3
 8010f20:	460e      	mov	r6, r1
 8010f22:	4440      	add	r0, r8
 8010f24:	bfa8      	it	ge
 8010f26:	461e      	movge	r6, r3
 8010f28:	4471      	add	r1, lr
 8010f2a:	4463      	add	r3, ip
 8010f2c:	b200      	sxth	r0, r0
 8010f2e:	b212      	sxth	r2, r2
 8010f30:	b209      	sxth	r1, r1
 8010f32:	b21b      	sxth	r3, r3
 8010f34:	4290      	cmp	r0, r2
 8010f36:	bfac      	ite	ge
 8010f38:	ebc7 0200 	rsbge	r2, r7, r0
 8010f3c:	ebc7 0202 	rsblt	r2, r7, r2
 8010f40:	4299      	cmp	r1, r3
 8010f42:	bfac      	ite	ge
 8010f44:	ebc6 0301 	rsbge	r3, r6, r1
 8010f48:	ebc6 0303 	rsblt	r3, r6, r3
 8010f4c:	8066      	strh	r6, [r4, #2]
 8010f4e:	80a2      	strh	r2, [r4, #4]
 8010f50:	80e3      	strh	r3, [r4, #6]
 8010f52:	e7d4      	b.n	8010efe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010f54:	4620      	mov	r0, r4
 8010f56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010f5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010f5a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010f5e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010f62:	b383      	cbz	r3, 8010fc6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010f64:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010f66:	b374      	cbz	r4, 8010fc6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010f68:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010f6c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010f70:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010f74:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010f78:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010f7c:	b303      	cbz	r3, 8010fc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010f7e:	4668      	mov	r0, sp
 8010f80:	1d21      	adds	r1, r4, #4
 8010f82:	f8ad 5000 	strh.w	r5, [sp]
 8010f86:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010f8a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010f8e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010f92:	f7ff ff43 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 8010f96:	4668      	mov	r0, sp
 8010f98:	f7ff ff83 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010f9c:	b980      	cbnz	r0, 8010fc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010f9e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010fa2:	88a2      	ldrh	r2, [r4, #4]
 8010fa4:	1a9b      	subs	r3, r3, r2
 8010fa6:	f8ad 3000 	strh.w	r3, [sp]
 8010faa:	88e2      	ldrh	r2, [r4, #6]
 8010fac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010fb0:	1a9b      	subs	r3, r3, r2
 8010fb2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010fb6:	6823      	ldr	r3, [r4, #0]
 8010fb8:	4669      	mov	r1, sp
 8010fba:	689b      	ldr	r3, [r3, #8]
 8010fbc:	4620      	mov	r0, r4
 8010fbe:	4798      	blx	r3
 8010fc0:	69a4      	ldr	r4, [r4, #24]
 8010fc2:	2c00      	cmp	r4, #0
 8010fc4:	d1d8      	bne.n	8010f78 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010fc6:	b002      	add	sp, #8
 8010fc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010fcc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010fcc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010fce:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010fd2:	460d      	mov	r5, r1
 8010fd4:	4616      	mov	r6, r2
 8010fd6:	b323      	cbz	r3, 8011022 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010fd8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010fda:	b314      	cbz	r4, 8011022 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010fdc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010fe0:	b1eb      	cbz	r3, 801101e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010fe2:	6828      	ldr	r0, [r5, #0]
 8010fe4:	6869      	ldr	r1, [r5, #4]
 8010fe6:	466b      	mov	r3, sp
 8010fe8:	c303      	stmia	r3!, {r0, r1}
 8010fea:	4668      	mov	r0, sp
 8010fec:	1d21      	adds	r1, r4, #4
 8010fee:	f7ff ff15 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 8010ff2:	4668      	mov	r0, sp
 8010ff4:	f7ff ff55 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ff8:	b988      	cbnz	r0, 801101e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010ffa:	f8bd 3000 	ldrh.w	r3, [sp]
 8010ffe:	88a2      	ldrh	r2, [r4, #4]
 8011000:	1a9b      	subs	r3, r3, r2
 8011002:	f8ad 3000 	strh.w	r3, [sp]
 8011006:	88e2      	ldrh	r2, [r4, #6]
 8011008:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801100c:	1a9b      	subs	r3, r3, r2
 801100e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011012:	6823      	ldr	r3, [r4, #0]
 8011014:	4632      	mov	r2, r6
 8011016:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8011018:	4669      	mov	r1, sp
 801101a:	4620      	mov	r0, r4
 801101c:	4798      	blx	r3
 801101e:	69a4      	ldr	r4, [r4, #24]
 8011020:	e7db      	b.n	8010fda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8011022:	b002      	add	sp, #8
 8011024:	bd70      	pop	{r4, r5, r6, pc}

08011026 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8011026:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8011028:	4770      	bx	lr
	...

0801102c <_ZN8touchgfx14SwipeContainerD1Ev>:
 801102c:	4b05      	ldr	r3, [pc, #20]	; (8011044 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 801102e:	b510      	push	{r4, lr}
 8011030:	6003      	str	r3, [r0, #0]
 8011032:	4604      	mov	r4, r0
 8011034:	f005 fe44 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 8011038:	4621      	mov	r1, r4
 801103a:	3004      	adds	r0, #4
 801103c:	f005 fe8d 	bl	8016d5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8011040:	4620      	mov	r0, r4
 8011042:	bd10      	pop	{r4, pc}
 8011044:	0802f6dc 	.word	0x0802f6dc

08011048 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8011048:	b510      	push	{r4, lr}
 801104a:	4604      	mov	r4, r0
 801104c:	f7ff ffee 	bl	801102c <_ZN8touchgfx14SwipeContainerD1Ev>
 8011050:	4620      	mov	r0, r4
 8011052:	21f4      	movs	r1, #244	; 0xf4
 8011054:	f019 fee9 	bl	802ae2a <_ZdlPvj>
 8011058:	4620      	mov	r0, r4
 801105a:	bd10      	pop	{r4, pc}

0801105c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 801105c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011060:	2b04      	cmp	r3, #4
 8011062:	d117      	bne.n	8011094 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8011064:	790b      	ldrb	r3, [r1, #4]
 8011066:	2b01      	cmp	r3, #1
 8011068:	d114      	bne.n	8011094 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801106a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 801106e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8011070:	8643      	strh	r3, [r0, #50]	; 0x32
 8011072:	2b00      	cmp	r3, #0
 8011074:	8682      	strh	r2, [r0, #52]	; 0x34
 8011076:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 801107a:	da0e      	bge.n	801109a <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 801107c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8011080:	3a01      	subs	r2, #1
 8011082:	4291      	cmp	r1, r2
 8011084:	d007      	beq.n	8011096 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8011086:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8011088:	4252      	negs	r2, r2
 801108a:	4293      	cmp	r3, r2
 801108c:	dc03      	bgt.n	8011096 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 801108e:	2302      	movs	r3, #2
 8011090:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011094:	4770      	bx	lr
 8011096:	2300      	movs	r3, #0
 8011098:	e7fa      	b.n	8011090 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 801109a:	d0fb      	beq.n	8011094 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 801109c:	b111      	cbz	r1, 80110a4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 801109e:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 80110a0:	4293      	cmp	r3, r2
 80110a2:	da01      	bge.n	80110a8 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 80110a4:	2301      	movs	r3, #1
 80110a6:	e7f3      	b.n	8011090 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 80110a8:	2303      	movs	r3, #3
 80110aa:	e7f1      	b.n	8011090 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

080110ac <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 80110ac:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80110b0:	2b04      	cmp	r3, #4
 80110b2:	d113      	bne.n	80110dc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110b4:	790b      	ldrb	r3, [r1, #4]
 80110b6:	b98b      	cbnz	r3, 80110dc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110b8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80110ba:	8643      	strh	r3, [r0, #50]	; 0x32
 80110bc:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 80110be:	8683      	strh	r3, [r0, #52]	; 0x34
 80110c0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80110c4:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 80110c8:	2b00      	cmp	r3, #0
 80110ca:	da08      	bge.n	80110de <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 80110cc:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80110d0:	3b01      	subs	r3, #1
 80110d2:	429a      	cmp	r2, r3
 80110d4:	da02      	bge.n	80110dc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110d6:	2302      	movs	r3, #2
 80110d8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80110dc:	4770      	bx	lr
 80110de:	d0fd      	beq.n	80110dc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110e0:	2a00      	cmp	r2, #0
 80110e2:	d0fb      	beq.n	80110dc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 80110e4:	2303      	movs	r3, #3
 80110e6:	e7f7      	b.n	80110d8 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

080110e8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 80110e8:	b538      	push	{r3, r4, r5, lr}
 80110ea:	2226      	movs	r2, #38	; 0x26
 80110ec:	4604      	mov	r4, r0
 80110ee:	460d      	mov	r5, r1
 80110f0:	2100      	movs	r1, #0
 80110f2:	f01a feb2 	bl	802be5a <memset>
 80110f6:	4620      	mov	r0, r4
 80110f8:	f7ff fc58 	bl	80109ac <_ZN8touchgfx8DrawableC1Ev>
 80110fc:	4b06      	ldr	r3, [pc, #24]	; (8011118 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 80110fe:	6023      	str	r3, [r4, #0]
 8011100:	882b      	ldrh	r3, [r5, #0]
 8011102:	84e3      	strh	r3, [r4, #38]	; 0x26
 8011104:	23ff      	movs	r3, #255	; 0xff
 8011106:	4620      	mov	r0, r4
 8011108:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 801110c:	4629      	mov	r1, r5
 801110e:	f003 f8d8 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011112:	4620      	mov	r0, r4
 8011114:	bd38      	pop	{r3, r4, r5, pc}
 8011116:	bf00      	nop
 8011118:	0802fd80 	.word	0x0802fd80

0801111c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 801111c:	86c1      	strh	r1, [r0, #54]	; 0x36
 801111e:	4770      	bx	lr

08011120 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8011120:	b508      	push	{r3, lr}
 8011122:	3068      	adds	r0, #104	; 0x68
 8011124:	f7f1 fc6e 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8011128:	bd08      	pop	{r3, pc}

0801112a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 801112a:	b508      	push	{r3, lr}
 801112c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 801112e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8011132:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011136:	fb03 2111 	mls	r1, r3, r1, r2
 801113a:	b209      	sxth	r1, r1
 801113c:	2200      	movs	r2, #0
 801113e:	3038      	adds	r0, #56	; 0x38
 8011140:	f7f1 f9eb 	bl	800251a <_ZN8touchgfx8Drawable6moveToEss>
 8011144:	bd08      	pop	{r3, pc}

08011146 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8011146:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801114a:	2b04      	cmp	r3, #4
 801114c:	d119      	bne.n	8011182 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 801114e:	88ca      	ldrh	r2, [r1, #6]
 8011150:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011152:	1a9b      	subs	r3, r3, r2
 8011154:	894a      	ldrh	r2, [r1, #10]
 8011156:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 801115a:	4413      	add	r3, r2
 801115c:	b21b      	sxth	r3, r3
 801115e:	8603      	strh	r3, [r0, #48]	; 0x30
 8011160:	b921      	cbnz	r1, 801116c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8011162:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8011164:	4293      	cmp	r3, r2
 8011166:	dd01      	ble.n	801116c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8011168:	8602      	strh	r2, [r0, #48]	; 0x30
 801116a:	e008      	b.n	801117e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 801116c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8011170:	3a01      	subs	r2, #1
 8011172:	4291      	cmp	r1, r2
 8011174:	d103      	bne.n	801117e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8011176:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8011178:	4252      	negs	r2, r2
 801117a:	4293      	cmp	r3, r2
 801117c:	dbf4      	blt.n	8011168 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 801117e:	f7ff bfd4 	b.w	801112a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011182:	4770      	bx	lr

08011184 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8011184:	b538      	push	{r3, r4, r5, lr}
 8011186:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 801118a:	2d0e      	cmp	r5, #14
 801118c:	4604      	mov	r4, r0
 801118e:	d813      	bhi.n	80111b8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8011190:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8011192:	4252      	negs	r2, r2
 8011194:	230e      	movs	r3, #14
 8011196:	b212      	sxth	r2, r2
 8011198:	2100      	movs	r1, #0
 801119a:	4628      	mov	r0, r5
 801119c:	f007 fbc2 	bl	8018924 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 80111a0:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80111a2:	4418      	add	r0, r3
 80111a4:	8620      	strh	r0, [r4, #48]	; 0x30
 80111a6:	4620      	mov	r0, r4
 80111a8:	f7ff ffbf 	bl	801112a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80111ac:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80111b0:	3301      	adds	r3, #1
 80111b2:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80111b6:	bd38      	pop	{r3, r4, r5, pc}
 80111b8:	2304      	movs	r3, #4
 80111ba:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80111be:	2300      	movs	r3, #0
 80111c0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 80111c4:	8603      	strh	r3, [r0, #48]	; 0x30
 80111c6:	e7ef      	b.n	80111a8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

080111c8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 80111c8:	b538      	push	{r3, r4, r5, lr}
 80111ca:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 80111ce:	2d0e      	cmp	r5, #14
 80111d0:	4604      	mov	r4, r0
 80111d2:	d812      	bhi.n	80111fa <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 80111d4:	230e      	movs	r3, #14
 80111d6:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 80111da:	2100      	movs	r1, #0
 80111dc:	4628      	mov	r0, r5
 80111de:	f007 fba1 	bl	8018924 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 80111e2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80111e4:	1a18      	subs	r0, r3, r0
 80111e6:	8620      	strh	r0, [r4, #48]	; 0x30
 80111e8:	4620      	mov	r0, r4
 80111ea:	f7ff ff9e 	bl	801112a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80111ee:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 80111f2:	3301      	adds	r3, #1
 80111f4:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 80111f8:	bd38      	pop	{r3, r4, r5, pc}
 80111fa:	2304      	movs	r3, #4
 80111fc:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8011200:	2300      	movs	r3, #0
 8011202:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8011206:	8603      	strh	r3, [r0, #48]	; 0x30
 8011208:	e7ef      	b.n	80111ea <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

0801120c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 801120c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011210:	4604      	mov	r4, r0
 8011212:	4626      	mov	r6, r4
 8011214:	af02      	add	r7, sp, #8
 8011216:	f7ff fbc9 	bl	80109ac <_ZN8touchgfx8DrawableC1Ev>
 801121a:	2500      	movs	r5, #0
 801121c:	4b18      	ldr	r3, [pc, #96]	; (8011280 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 801121e:	62a5      	str	r5, [r4, #40]	; 0x28
 8011220:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8011224:	f846 3b2c 	str.w	r3, [r6], #44
 8011228:	f827 9d04 	strh.w	r9, [r7, #-4]!
 801122c:	4630      	mov	r0, r6
 801122e:	4639      	mov	r1, r7
 8011230:	f7ff ff5a 	bl	80110e8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8011234:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8011238:	4b12      	ldr	r3, [pc, #72]	; (8011284 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 801123a:	62e3      	str	r3, [r4, #44]	; 0x2c
 801123c:	4639      	mov	r1, r7
 801123e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8011242:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8011246:	4640      	mov	r0, r8
 8011248:	f8ad 9004 	strh.w	r9, [sp, #4]
 801124c:	f7ff ff4c 	bl	80110e8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8011250:	462a      	mov	r2, r5
 8011252:	4629      	mov	r1, r5
 8011254:	4630      	mov	r0, r6
 8011256:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 801125a:	f7f1 fbd3 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 801125e:	462a      	mov	r2, r5
 8011260:	4629      	mov	r1, r5
 8011262:	4640      	mov	r0, r8
 8011264:	f7f1 fbce 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8011268:	4631      	mov	r1, r6
 801126a:	4620      	mov	r0, r4
 801126c:	f7ff fc50 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011270:	4620      	mov	r0, r4
 8011272:	4641      	mov	r1, r8
 8011274:	f7ff fc4c 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011278:	4620      	mov	r0, r4
 801127a:	b003      	add	sp, #12
 801127c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011280:	0802d5f0 	.word	0x0802d5f0
 8011284:	0802fb9c 	.word	0x0802fb9c

08011288 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8011288:	b570      	push	{r4, r5, r6, lr}
 801128a:	4604      	mov	r4, r0
 801128c:	f7ff fb8e 	bl	80109ac <_ZN8touchgfx8DrawableC1Ev>
 8011290:	4b1a      	ldr	r3, [pc, #104]	; (80112fc <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8011292:	6023      	str	r3, [r4, #0]
 8011294:	2304      	movs	r3, #4
 8011296:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801129a:	2350      	movs	r3, #80	; 0x50
 801129c:	2500      	movs	r5, #0
 801129e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 80112a0:	f104 0638 	add.w	r6, r4, #56	; 0x38
 80112a4:	231e      	movs	r3, #30
 80112a6:	62a5      	str	r5, [r4, #40]	; 0x28
 80112a8:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 80112ac:	8625      	strh	r5, [r4, #48]	; 0x30
 80112ae:	8665      	strh	r5, [r4, #50]	; 0x32
 80112b0:	86a5      	strh	r5, [r4, #52]	; 0x34
 80112b2:	86e3      	strh	r3, [r4, #54]	; 0x36
 80112b4:	4630      	mov	r0, r6
 80112b6:	f7ff fb79 	bl	80109ac <_ZN8touchgfx8DrawableC1Ev>
 80112ba:	4b11      	ldr	r3, [pc, #68]	; (8011300 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 80112bc:	6625      	str	r5, [r4, #96]	; 0x60
 80112be:	63a3      	str	r3, [r4, #56]	; 0x38
 80112c0:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 80112c4:	2302      	movs	r3, #2
 80112c6:	f104 0568 	add.w	r5, r4, #104	; 0x68
 80112ca:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80112ce:	4628      	mov	r0, r5
 80112d0:	f7ff ff9c 	bl	801120c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 80112d4:	f005 fcf4 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 80112d8:	4621      	mov	r1, r4
 80112da:	3004      	adds	r0, #4
 80112dc:	f005 fde6 	bl	8016eac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80112e0:	2301      	movs	r3, #1
 80112e2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 80112e6:	4631      	mov	r1, r6
 80112e8:	4620      	mov	r0, r4
 80112ea:	f7ff fc11 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80112ee:	4620      	mov	r0, r4
 80112f0:	4629      	mov	r1, r5
 80112f2:	f7ff fc0d 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80112f6:	4620      	mov	r0, r4
 80112f8:	bd70      	pop	{r4, r5, r6, pc}
 80112fa:	bf00      	nop
 80112fc:	0802f6dc 	.word	0x0802f6dc
 8011300:	0802f7a0 	.word	0x0802f7a0

08011304 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8011304:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011306:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 801130a:	428b      	cmp	r3, r1
 801130c:	4604      	mov	r4, r0
 801130e:	460d      	mov	r5, r1
 8011310:	d915      	bls.n	801133e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8011312:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8011316:	428b      	cmp	r3, r1
 8011318:	d011      	beq.n	801133e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 801131a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 801131e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8011322:	a802      	add	r0, sp, #8
 8011324:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8011328:	f009 f91a 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801132c:	fb15 f100 	smulbb	r1, r5, r0
 8011330:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8011334:	b209      	sxth	r1, r1
 8011336:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801133a:	f7f1 f8ee 	bl	800251a <_ZN8touchgfx8Drawable6moveToEss>
 801133e:	b003      	add	sp, #12
 8011340:	bd30      	pop	{r4, r5, pc}

08011342 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8011342:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011344:	4604      	mov	r4, r0
 8011346:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801134a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 801134e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8011352:	4293      	cmp	r3, r2
 8011354:	460d      	mov	r5, r1
 8011356:	d01e      	beq.n	8011396 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8011358:	a802      	add	r0, sp, #8
 801135a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 801135e:	f009 f8ff 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011362:	6823      	ldr	r3, [r4, #0]
 8011364:	fb15 f000 	smulbb	r0, r5, r0
 8011368:	86a0      	strh	r0, [r4, #52]	; 0x34
 801136a:	695b      	ldr	r3, [r3, #20]
 801136c:	4620      	mov	r0, r4
 801136e:	4798      	blx	r3
 8011370:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8011374:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8011378:	4620      	mov	r0, r4
 801137a:	f7ff fb2f 	bl	80109dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801137e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8011382:	42a9      	cmp	r1, r5
 8011384:	4620      	mov	r0, r4
 8011386:	bf28      	it	cs
 8011388:	4629      	movcs	r1, r5
 801138a:	f7ff ffbb 	bl	8011304 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 801138e:	6823      	ldr	r3, [r4, #0]
 8011390:	4620      	mov	r0, r4
 8011392:	695b      	ldr	r3, [r3, #20]
 8011394:	4798      	blx	r3
 8011396:	b003      	add	sp, #12
 8011398:	bd30      	pop	{r4, r5, pc}

0801139a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 801139a:	b538      	push	{r3, r4, r5, lr}
 801139c:	4604      	mov	r4, r0
 801139e:	460d      	mov	r5, r1
 80113a0:	305c      	adds	r0, #92	; 0x5c
 80113a2:	4611      	mov	r1, r2
 80113a4:	f002 ff8d 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80113a8:	4629      	mov	r1, r5
 80113aa:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80113ae:	f002 fa53 	bl	8013858 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 80113b2:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 80113b6:	b121      	cbz	r1, 80113c2 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 80113b8:	4620      	mov	r0, r4
 80113ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80113be:	f7ff bfc0 	b.w	8011342 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80113c2:	bd38      	pop	{r3, r4, r5, pc}

080113c4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 80113c4:	3068      	adds	r0, #104	; 0x68
 80113c6:	f7ff bfe8 	b.w	801139a <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

080113ca <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 80113ca:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 80113ce:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 80113d2:	3101      	adds	r1, #1
 80113d4:	fb91 f3f2 	sdiv	r3, r1, r2
 80113d8:	fb02 1113 	mls	r1, r2, r3, r1
 80113dc:	b2c9      	uxtb	r1, r1
 80113de:	f7ff bf91 	b.w	8011304 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

080113e2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 80113e2:	b510      	push	{r4, lr}
 80113e4:	4604      	mov	r4, r0
 80113e6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 80113ea:	280a      	cmp	r0, #10
 80113ec:	d813      	bhi.n	8011416 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 80113ee:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 80113f0:	8922      	ldrh	r2, [r4, #8]
 80113f2:	441a      	add	r2, r3
 80113f4:	b212      	sxth	r2, r2
 80113f6:	230a      	movs	r3, #10
 80113f8:	2100      	movs	r1, #0
 80113fa:	f007 fad1 	bl	80189a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 80113fe:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011400:	1a18      	subs	r0, r3, r0
 8011402:	8620      	strh	r0, [r4, #48]	; 0x30
 8011404:	4620      	mov	r0, r4
 8011406:	f7ff fe90 	bl	801112a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 801140a:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 801140e:	3301      	adds	r3, #1
 8011410:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011414:	bd10      	pop	{r4, pc}
 8011416:	2304      	movs	r3, #4
 8011418:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 801141c:	2300      	movs	r3, #0
 801141e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011422:	8623      	strh	r3, [r4, #48]	; 0x30
 8011424:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011428:	f7ff ffcf 	bl	80113ca <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 801142c:	e7ea      	b.n	8011404 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

0801142e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 801142e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8011432:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8011436:	4411      	add	r1, r2
 8011438:	3901      	subs	r1, #1
 801143a:	fb91 f3f2 	sdiv	r3, r1, r2
 801143e:	fb02 1113 	mls	r1, r2, r3, r1
 8011442:	b2c9      	uxtb	r1, r1
 8011444:	f7ff bf5e 	b.w	8011304 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08011448 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8011448:	b510      	push	{r4, lr}
 801144a:	4604      	mov	r4, r0
 801144c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8011450:	280a      	cmp	r0, #10
 8011452:	d813      	bhi.n	801147c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8011454:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011456:	8922      	ldrh	r2, [r4, #8]
 8011458:	1ad2      	subs	r2, r2, r3
 801145a:	b212      	sxth	r2, r2
 801145c:	230a      	movs	r3, #10
 801145e:	2100      	movs	r1, #0
 8011460:	f007 fa9e 	bl	80189a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8011464:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8011466:	4418      	add	r0, r3
 8011468:	8620      	strh	r0, [r4, #48]	; 0x30
 801146a:	4620      	mov	r0, r4
 801146c:	f7ff fe5d 	bl	801112a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8011470:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8011474:	3301      	adds	r3, #1
 8011476:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 801147a:	bd10      	pop	{r4, pc}
 801147c:	2304      	movs	r3, #4
 801147e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8011482:	2300      	movs	r3, #0
 8011484:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8011488:	8623      	strh	r3, [r4, #48]	; 0x30
 801148a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801148e:	f7ff ffce 	bl	801142e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8011492:	e7ea      	b.n	801146a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08011494 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8011494:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011498:	b90b      	cbnz	r3, 801149e <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 801149a:	f7ff be73 	b.w	8011184 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 801149e:	2b01      	cmp	r3, #1
 80114a0:	d101      	bne.n	80114a6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 80114a2:	f7ff be91 	b.w	80111c8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 80114a6:	2b02      	cmp	r3, #2
 80114a8:	d101      	bne.n	80114ae <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 80114aa:	f7ff bf9a 	b.w	80113e2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 80114ae:	2b03      	cmp	r3, #3
 80114b0:	d101      	bne.n	80114b6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 80114b2:	f7ff bfc9 	b.w	8011448 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 80114b6:	4770      	bx	lr

080114b8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 80114b8:	b510      	push	{r4, lr}
 80114ba:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 80114be:	428b      	cmp	r3, r1
 80114c0:	4604      	mov	r4, r0
 80114c2:	d907      	bls.n	80114d4 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 80114c4:	3068      	adds	r0, #104	; 0x68
 80114c6:	f7ff ff1d 	bl	8011304 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 80114ca:	4620      	mov	r0, r4
 80114cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80114d0:	f7ff be2b 	b.w	801112a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 80114d4:	bd10      	pop	{r4, pc}

080114d6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 80114d6:	b538      	push	{r3, r4, r5, lr}
 80114d8:	4604      	mov	r4, r0
 80114da:	3038      	adds	r0, #56	; 0x38
 80114dc:	460d      	mov	r5, r1
 80114de:	f000 f963 	bl	80117a8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 80114e2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 80114e6:	3101      	adds	r1, #1
 80114e8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80114ec:	b2c9      	uxtb	r1, r1
 80114ee:	f7ff ff28 	bl	8011342 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 80114f2:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 80114f6:	4620      	mov	r0, r4
 80114f8:	f7ff ffde 	bl	80114b8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 80114fc:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8011500:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8011504:	4620      	mov	r0, r4
 8011506:	f7ff fa69 	bl	80109dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801150a:	bd38      	pop	{r3, r4, r5, pc}

0801150c <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 801150c:	b538      	push	{r3, r4, r5, lr}
 801150e:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8011512:	4604      	mov	r4, r0
 8011514:	b1e3      	cbz	r3, 8011550 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8011516:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8011518:	b1d3      	cbz	r3, 8011550 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 801151a:	428b      	cmp	r3, r1
 801151c:	d125      	bne.n	801156a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 801151e:	4619      	mov	r1, r3
 8011520:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8011524:	f000 f9c0 	bl	80118a8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8011528:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801152c:	3901      	subs	r1, #1
 801152e:	b2c9      	uxtb	r1, r1
 8011530:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011534:	f7ff ff05 	bl	8011342 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8011538:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801153c:	b94d      	cbnz	r5, 8011552 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801153e:	6823      	ldr	r3, [r4, #0]
 8011540:	4620      	mov	r0, r4
 8011542:	695b      	ldr	r3, [r3, #20]
 8011544:	4798      	blx	r3
 8011546:	462a      	mov	r2, r5
 8011548:	4629      	mov	r1, r5
 801154a:	4620      	mov	r0, r4
 801154c:	f7ff fa46 	bl	80109dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011550:	bd38      	pop	{r3, r4, r5, pc}
 8011552:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8011556:	3d01      	subs	r5, #1
 8011558:	42a9      	cmp	r1, r5
 801155a:	bfa8      	it	ge
 801155c:	4629      	movge	r1, r5
 801155e:	4620      	mov	r0, r4
 8011560:	b2c9      	uxtb	r1, r1
 8011562:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011566:	f7ff bfa7 	b.w	80114b8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801156a:	699b      	ldr	r3, [r3, #24]
 801156c:	e7d4      	b.n	8011518 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801156e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801156e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011572:	4770      	bx	lr

08011574 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8011574:	b538      	push	{r3, r4, r5, lr}
 8011576:	7882      	ldrb	r2, [r0, #2]
 8011578:	6843      	ldr	r3, [r0, #4]
 801157a:	4604      	mov	r4, r0
 801157c:	460d      	mov	r5, r1
 801157e:	b98a      	cbnz	r2, 80115a4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8011580:	4299      	cmp	r1, r3
 8011582:	d101      	bne.n	8011588 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8011584:	2301      	movs	r3, #1
 8011586:	7083      	strb	r3, [r0, #2]
 8011588:	6863      	ldr	r3, [r4, #4]
 801158a:	42ab      	cmp	r3, r5
 801158c:	d009      	beq.n	80115a2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801158e:	7a23      	ldrb	r3, [r4, #8]
 8011590:	2b01      	cmp	r3, #1
 8011592:	d11b      	bne.n	80115cc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 8011594:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011598:	f9b4 2000 	ldrsh.w	r2, [r4]
 801159c:	429a      	cmp	r2, r3
 801159e:	bfb8      	it	lt
 80115a0:	8023      	strhlt	r3, [r4, #0]
 80115a2:	bd38      	pop	{r3, r4, r5, pc}
 80115a4:	7a02      	ldrb	r2, [r0, #8]
 80115a6:	2a01      	cmp	r2, #1
 80115a8:	d108      	bne.n	80115bc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 80115aa:	895b      	ldrh	r3, [r3, #10]
 80115ac:	88c9      	ldrh	r1, [r1, #6]
 80115ae:	1ac9      	subs	r1, r1, r3
 80115b0:	682b      	ldr	r3, [r5, #0]
 80115b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80115b4:	b209      	sxth	r1, r1
 80115b6:	4628      	mov	r0, r5
 80115b8:	4798      	blx	r3
 80115ba:	e7e5      	b.n	8011588 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80115bc:	2a02      	cmp	r2, #2
 80115be:	d1e3      	bne.n	8011588 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80115c0:	891b      	ldrh	r3, [r3, #8]
 80115c2:	8889      	ldrh	r1, [r1, #4]
 80115c4:	1ac9      	subs	r1, r1, r3
 80115c6:	682b      	ldr	r3, [r5, #0]
 80115c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80115ca:	e7f3      	b.n	80115b4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 80115cc:	2b02      	cmp	r3, #2
 80115ce:	d1e8      	bne.n	80115a2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80115d0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80115d4:	e7e0      	b.n	8011598 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

080115d6 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 80115d6:	4770      	bx	lr

080115d8 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 80115d8:	4770      	bx	lr

080115da <_ZN8touchgfx10ListLayoutD1Ev>:
 80115da:	4770      	bx	lr

080115dc <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 80115dc:	b430      	push	{r4, r5}
 80115de:	68c5      	ldr	r5, [r0, #12]
 80115e0:	6844      	ldr	r4, [r0, #4]
 80115e2:	106a      	asrs	r2, r5, #1
 80115e4:	4603      	mov	r3, r0
 80115e6:	07ed      	lsls	r5, r5, #31
 80115e8:	eb04 0002 	add.w	r0, r4, r2
 80115ec:	689b      	ldr	r3, [r3, #8]
 80115ee:	bf48      	it	mi
 80115f0:	58a2      	ldrmi	r2, [r4, r2]
 80115f2:	bc30      	pop	{r4, r5}
 80115f4:	bf48      	it	mi
 80115f6:	58d3      	ldrmi	r3, [r2, r3]
 80115f8:	4718      	bx	r3

080115fa <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 80115fa:	6843      	ldr	r3, [r0, #4]
 80115fc:	b12b      	cbz	r3, 801160a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 80115fe:	6883      	ldr	r3, [r0, #8]
 8011600:	b92b      	cbnz	r3, 801160e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8011602:	68c0      	ldr	r0, [r0, #12]
 8011604:	f000 0001 	and.w	r0, r0, #1
 8011608:	4770      	bx	lr
 801160a:	4618      	mov	r0, r3
 801160c:	4770      	bx	lr
 801160e:	2001      	movs	r0, #1
 8011610:	4770      	bx	lr

08011612 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8011612:	b430      	push	{r4, r5}
 8011614:	68c5      	ldr	r5, [r0, #12]
 8011616:	6844      	ldr	r4, [r0, #4]
 8011618:	106a      	asrs	r2, r5, #1
 801161a:	4603      	mov	r3, r0
 801161c:	07ed      	lsls	r5, r5, #31
 801161e:	eb04 0002 	add.w	r0, r4, r2
 8011622:	689b      	ldr	r3, [r3, #8]
 8011624:	bf48      	it	mi
 8011626:	58a2      	ldrmi	r2, [r4, r2]
 8011628:	bc30      	pop	{r4, r5}
 801162a:	bf48      	it	mi
 801162c:	58d3      	ldrmi	r3, [r2, r3]
 801162e:	4718      	bx	r3

08011630 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8011630:	6843      	ldr	r3, [r0, #4]
 8011632:	b12b      	cbz	r3, 8011640 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8011634:	6883      	ldr	r3, [r0, #8]
 8011636:	b92b      	cbnz	r3, 8011644 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8011638:	68c0      	ldr	r0, [r0, #12]
 801163a:	f000 0001 	and.w	r0, r0, #1
 801163e:	4770      	bx	lr
 8011640:	4618      	mov	r0, r3
 8011642:	4770      	bx	lr
 8011644:	2001      	movs	r0, #1
 8011646:	4770      	bx	lr

08011648 <_ZN8touchgfx10ListLayoutD0Ev>:
 8011648:	b510      	push	{r4, lr}
 801164a:	2130      	movs	r1, #48	; 0x30
 801164c:	4604      	mov	r4, r0
 801164e:	f019 fbec 	bl	802ae2a <_ZdlPvj>
 8011652:	4620      	mov	r0, r4
 8011654:	bd10      	pop	{r4, pc}

08011656 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8011656:	b510      	push	{r4, lr}
 8011658:	2110      	movs	r1, #16
 801165a:	4604      	mov	r4, r0
 801165c:	f019 fbe5 	bl	802ae2a <_ZdlPvj>
 8011660:	4620      	mov	r0, r4
 8011662:	bd10      	pop	{r4, pc}

08011664 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8011664:	b510      	push	{r4, lr}
 8011666:	2110      	movs	r1, #16
 8011668:	4604      	mov	r4, r0
 801166a:	f019 fbde 	bl	802ae2a <_ZdlPvj>
 801166e:	4620      	mov	r0, r4
 8011670:	bd10      	pop	{r4, pc}

08011672 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8011672:	4603      	mov	r3, r0
 8011674:	4608      	mov	r0, r1
 8011676:	789a      	ldrb	r2, [r3, #2]
 8011678:	b992      	cbnz	r2, 80116a0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801167a:	685a      	ldr	r2, [r3, #4]
 801167c:	428a      	cmp	r2, r1
 801167e:	d102      	bne.n	8011686 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8011680:	2201      	movs	r2, #1
 8011682:	709a      	strb	r2, [r3, #2]
 8011684:	4770      	bx	lr
 8011686:	7a1a      	ldrb	r2, [r3, #8]
 8011688:	2a01      	cmp	r2, #1
 801168a:	d104      	bne.n	8011696 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801168c:	88ca      	ldrh	r2, [r1, #6]
 801168e:	8949      	ldrh	r1, [r1, #10]
 8011690:	440a      	add	r2, r1
 8011692:	801a      	strh	r2, [r3, #0]
 8011694:	4770      	bx	lr
 8011696:	2a02      	cmp	r2, #2
 8011698:	d116      	bne.n	80116c8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 801169a:	888a      	ldrh	r2, [r1, #4]
 801169c:	8909      	ldrh	r1, [r1, #8]
 801169e:	e7f7      	b.n	8011690 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 80116a0:	7a1a      	ldrb	r2, [r3, #8]
 80116a2:	2a01      	cmp	r2, #1
 80116a4:	d107      	bne.n	80116b6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 80116a6:	685b      	ldr	r3, [r3, #4]
 80116a8:	8959      	ldrh	r1, [r3, #10]
 80116aa:	88c3      	ldrh	r3, [r0, #6]
 80116ac:	4419      	add	r1, r3
 80116ae:	6803      	ldr	r3, [r0, #0]
 80116b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80116b2:	b209      	sxth	r1, r1
 80116b4:	4718      	bx	r3
 80116b6:	2a02      	cmp	r2, #2
 80116b8:	d106      	bne.n	80116c8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80116ba:	685b      	ldr	r3, [r3, #4]
 80116bc:	8919      	ldrh	r1, [r3, #8]
 80116be:	8883      	ldrh	r3, [r0, #4]
 80116c0:	4419      	add	r1, r3
 80116c2:	6803      	ldr	r3, [r0, #0]
 80116c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80116c6:	e7f4      	b.n	80116b2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 80116c8:	4770      	bx	lr

080116ca <_ZN8touchgfx10ListLayout9removeAllEv>:
 80116ca:	2200      	movs	r2, #0
 80116cc:	b510      	push	{r4, lr}
 80116ce:	4611      	mov	r1, r2
 80116d0:	4604      	mov	r4, r0
 80116d2:	85c2      	strh	r2, [r0, #46]	; 0x2e
 80116d4:	f7ff f982 	bl	80109dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80116d8:	4620      	mov	r0, r4
 80116da:	f7ff fa26 	bl	8010b2a <_ZN8touchgfx9Container9removeAllEv>
 80116de:	6960      	ldr	r0, [r4, #20]
 80116e0:	b120      	cbz	r0, 80116ec <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 80116e2:	6803      	ldr	r3, [r0, #0]
 80116e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80116e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80116ea:	4718      	bx	r3
 80116ec:	bd10      	pop	{r4, pc}
	...

080116f0 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 80116f0:	b530      	push	{r4, r5, lr}
 80116f2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80116f6:	428b      	cmp	r3, r1
 80116f8:	b085      	sub	sp, #20
 80116fa:	4604      	mov	r4, r0
 80116fc:	d017      	beq.n	801172e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 80116fe:	2500      	movs	r5, #0
 8011700:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8011704:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8011706:	462a      	mov	r2, r5
 8011708:	4629      	mov	r1, r5
 801170a:	f7ff f967 	bl	80109dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801170e:	4b09      	ldr	r3, [pc, #36]	; (8011734 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8011710:	e9cd 3400 	strd	r3, r4, [sp]
 8011714:	4b08      	ldr	r3, [pc, #32]	; (8011738 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8011716:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801171a:	6823      	ldr	r3, [r4, #0]
 801171c:	4620      	mov	r0, r4
 801171e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011720:	4669      	mov	r1, sp
 8011722:	4798      	blx	r3
 8011724:	6960      	ldr	r0, [r4, #20]
 8011726:	b110      	cbz	r0, 801172e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8011728:	6803      	ldr	r3, [r0, #0]
 801172a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801172c:	4798      	blx	r3
 801172e:	b005      	add	sp, #20
 8011730:	bd30      	pop	{r4, r5, pc}
 8011732:	bf00      	nop
 8011734:	0802f770 	.word	0x0802f770
 8011738:	080117a1 	.word	0x080117a1

0801173c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801173c:	b538      	push	{r3, r4, r5, lr}
 801173e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011742:	2b01      	cmp	r3, #1
 8011744:	460d      	mov	r5, r1
 8011746:	4604      	mov	r4, r0
 8011748:	4611      	mov	r1, r2
 801174a:	d002      	beq.n	8011752 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801174c:	2b02      	cmp	r3, #2
 801174e:	d015      	beq.n	801177c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8011750:	bd38      	pop	{r3, r4, r5, pc}
 8011752:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011756:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801175a:	429a      	cmp	r2, r3
 801175c:	bfb8      	it	lt
 801175e:	8103      	strhlt	r3, [r0, #8]
 8011760:	896a      	ldrh	r2, [r5, #10]
 8011762:	8943      	ldrh	r3, [r0, #10]
 8011764:	4413      	add	r3, r2
 8011766:	8143      	strh	r3, [r0, #10]
 8011768:	460a      	mov	r2, r1
 801176a:	4628      	mov	r0, r5
 801176c:	2100      	movs	r1, #0
 801176e:	f7f1 f949 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8011772:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011774:	896a      	ldrh	r2, [r5, #10]
 8011776:	4413      	add	r3, r2
 8011778:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801177a:	e7e9      	b.n	8011750 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801177c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011780:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011784:	429a      	cmp	r2, r3
 8011786:	bfb8      	it	lt
 8011788:	8143      	strhlt	r3, [r0, #10]
 801178a:	892a      	ldrh	r2, [r5, #8]
 801178c:	8903      	ldrh	r3, [r0, #8]
 801178e:	4413      	add	r3, r2
 8011790:	8103      	strh	r3, [r0, #8]
 8011792:	2200      	movs	r2, #0
 8011794:	4628      	mov	r0, r5
 8011796:	f7f1 f935 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 801179a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801179c:	892a      	ldrh	r2, [r5, #8]
 801179e:	e7ea      	b.n	8011776 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

080117a0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 80117a0:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 80117a4:	f7ff bfca 	b.w	801173c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

080117a8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 80117a8:	b570      	push	{r4, r5, r6, lr}
 80117aa:	4604      	mov	r4, r0
 80117ac:	460d      	mov	r5, r1
 80117ae:	f7ff fff7 	bl	80117a0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 80117b2:	4620      	mov	r0, r4
 80117b4:	4629      	mov	r1, r5
 80117b6:	f7ff f9ab 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80117ba:	6960      	ldr	r0, [r4, #20]
 80117bc:	b120      	cbz	r0, 80117c8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 80117be:	6803      	ldr	r3, [r0, #0]
 80117c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80117c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80117c6:	4718      	bx	r3
 80117c8:	bd70      	pop	{r4, r5, r6, pc}
	...

080117cc <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 80117cc:	b530      	push	{r4, r5, lr}
 80117ce:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80117d0:	b089      	sub	sp, #36	; 0x24
 80117d2:	4604      	mov	r4, r0
 80117d4:	4615      	mov	r5, r2
 80117d6:	b92b      	cbnz	r3, 80117e4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 80117d8:	6803      	ldr	r3, [r0, #0]
 80117da:	4611      	mov	r1, r2
 80117dc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80117de:	4798      	blx	r3
 80117e0:	b009      	add	sp, #36	; 0x24
 80117e2:	bd30      	pop	{r4, r5, pc}
 80117e4:	f7ff f9ec 	bl	8010bc0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80117e8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80117ec:	f88d 200c 	strb.w	r2, [sp, #12]
 80117f0:	4a0f      	ldr	r2, [pc, #60]	; (8011830 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 80117f2:	9204      	str	r2, [sp, #16]
 80117f4:	aa01      	add	r2, sp, #4
 80117f6:	9205      	str	r2, [sp, #20]
 80117f8:	4a0e      	ldr	r2, [pc, #56]	; (8011834 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 80117fa:	9502      	str	r5, [sp, #8]
 80117fc:	2300      	movs	r3, #0
 80117fe:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8011802:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011806:	f88d 3006 	strb.w	r3, [sp, #6]
 801180a:	6823      	ldr	r3, [r4, #0]
 801180c:	a904      	add	r1, sp, #16
 801180e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011810:	4620      	mov	r0, r4
 8011812:	4798      	blx	r3
 8011814:	4620      	mov	r0, r4
 8011816:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801181a:	4629      	mov	r1, r5
 801181c:	f7ff ff8e 	bl	801173c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8011820:	6960      	ldr	r0, [r4, #20]
 8011822:	2800      	cmp	r0, #0
 8011824:	d0dc      	beq.n	80117e0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8011826:	6803      	ldr	r3, [r0, #0]
 8011828:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801182a:	4798      	blx	r3
 801182c:	e7d8      	b.n	80117e0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801182e:	bf00      	nop
 8011830:	0802f788 	.word	0x0802f788
 8011834:	08011673 	.word	0x08011673

08011838 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8011838:	b538      	push	{r3, r4, r5, lr}
 801183a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801183e:	2b01      	cmp	r3, #1
 8011840:	4604      	mov	r4, r0
 8011842:	460d      	mov	r5, r1
 8011844:	d002      	beq.n	801184c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8011846:	2b02      	cmp	r3, #2
 8011848:	d018      	beq.n	801187c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801184a:	bd38      	pop	{r3, r4, r5, pc}
 801184c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011850:	4293      	cmp	r3, r2
 8011852:	bfc8      	it	gt
 8011854:	8102      	strhgt	r2, [r0, #8]
 8011856:	894a      	ldrh	r2, [r1, #10]
 8011858:	8943      	ldrh	r3, [r0, #10]
 801185a:	1a9b      	subs	r3, r3, r2
 801185c:	8143      	strh	r3, [r0, #10]
 801185e:	680b      	ldr	r3, [r1, #0]
 8011860:	4628      	mov	r0, r5
 8011862:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011864:	2100      	movs	r1, #0
 8011866:	4798      	blx	r3
 8011868:	682b      	ldr	r3, [r5, #0]
 801186a:	2100      	movs	r1, #0
 801186c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801186e:	4628      	mov	r0, r5
 8011870:	4798      	blx	r3
 8011872:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011874:	896a      	ldrh	r2, [r5, #10]
 8011876:	1a9b      	subs	r3, r3, r2
 8011878:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801187a:	e7e6      	b.n	801184a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801187c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011880:	4293      	cmp	r3, r2
 8011882:	bfc8      	it	gt
 8011884:	8142      	strhgt	r2, [r0, #10]
 8011886:	890a      	ldrh	r2, [r1, #8]
 8011888:	8903      	ldrh	r3, [r0, #8]
 801188a:	1a9b      	subs	r3, r3, r2
 801188c:	8103      	strh	r3, [r0, #8]
 801188e:	680b      	ldr	r3, [r1, #0]
 8011890:	4628      	mov	r0, r5
 8011892:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011894:	2100      	movs	r1, #0
 8011896:	4798      	blx	r3
 8011898:	682b      	ldr	r3, [r5, #0]
 801189a:	2100      	movs	r1, #0
 801189c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801189e:	4628      	mov	r0, r5
 80118a0:	4798      	blx	r3
 80118a2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80118a4:	892a      	ldrh	r2, [r5, #8]
 80118a6:	e7e6      	b.n	8011876 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

080118a8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 80118a8:	b530      	push	{r4, r5, lr}
 80118aa:	b089      	sub	sp, #36	; 0x24
 80118ac:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80118b0:	f88d 200c 	strb.w	r2, [sp, #12]
 80118b4:	4a13      	ldr	r2, [pc, #76]	; (8011904 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 80118b6:	9204      	str	r2, [sp, #16]
 80118b8:	aa01      	add	r2, sp, #4
 80118ba:	9205      	str	r2, [sp, #20]
 80118bc:	4a12      	ldr	r2, [pc, #72]	; (8011908 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 80118be:	9102      	str	r1, [sp, #8]
 80118c0:	2300      	movs	r3, #0
 80118c2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80118c6:	f88d 3006 	strb.w	r3, [sp, #6]
 80118ca:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80118ce:	6803      	ldr	r3, [r0, #0]
 80118d0:	460d      	mov	r5, r1
 80118d2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80118d4:	a904      	add	r1, sp, #16
 80118d6:	4604      	mov	r4, r0
 80118d8:	4798      	blx	r3
 80118da:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80118de:	b14b      	cbz	r3, 80118f4 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80118e0:	4629      	mov	r1, r5
 80118e2:	4620      	mov	r0, r4
 80118e4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80118e8:	f7ff ffa6 	bl	8011838 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80118ec:	4629      	mov	r1, r5
 80118ee:	4620      	mov	r0, r4
 80118f0:	f7ff f94f 	bl	8010b92 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80118f4:	6960      	ldr	r0, [r4, #20]
 80118f6:	b110      	cbz	r0, 80118fe <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 80118f8:	6803      	ldr	r3, [r0, #0]
 80118fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80118fc:	4798      	blx	r3
 80118fe:	b009      	add	sp, #36	; 0x24
 8011900:	bd30      	pop	{r4, r5, pc}
 8011902:	bf00      	nop
 8011904:	0802f788 	.word	0x0802f788
 8011908:	08011575 	.word	0x08011575

0801190c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801190c:	b513      	push	{r0, r1, r4, lr}
 801190e:	6803      	ldr	r3, [r0, #0]
 8011910:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8011914:	2300      	movs	r3, #0
 8011916:	e9cd 3300 	strd	r3, r3, [sp]
 801191a:	466b      	mov	r3, sp
 801191c:	47a0      	blx	r4
 801191e:	b002      	add	sp, #8
 8011920:	bd10      	pop	{r4, pc}

08011922 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8011922:	2301      	movs	r3, #1
 8011924:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011928:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801192c:	4770      	bx	lr

0801192e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801192e:	2301      	movs	r3, #1
 8011930:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011934:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8011938:	4770      	bx	lr

0801193a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801193a:	6843      	ldr	r3, [r0, #4]
 801193c:	2201      	movs	r2, #1
 801193e:	725a      	strb	r2, [r3, #9]
 8011940:	6840      	ldr	r0, [r0, #4]
 8011942:	6803      	ldr	r3, [r0, #0]
 8011944:	691b      	ldr	r3, [r3, #16]
 8011946:	4718      	bx	r3

08011948 <_ZN8touchgfx3HAL8flushDMAEv>:
 8011948:	6840      	ldr	r0, [r0, #4]
 801194a:	6803      	ldr	r3, [r0, #0]
 801194c:	689b      	ldr	r3, [r3, #8]
 801194e:	4718      	bx	r3

08011950 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8011950:	b530      	push	{r4, r5, lr}
 8011952:	b08b      	sub	sp, #44	; 0x2c
 8011954:	6804      	ldr	r4, [r0, #0]
 8011956:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801195a:	9509      	str	r5, [sp, #36]	; 0x24
 801195c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011960:	9508      	str	r5, [sp, #32]
 8011962:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8011966:	9507      	str	r5, [sp, #28]
 8011968:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801196c:	9506      	str	r5, [sp, #24]
 801196e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8011972:	9505      	str	r5, [sp, #20]
 8011974:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8011978:	9504      	str	r5, [sp, #16]
 801197a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801197e:	9503      	str	r5, [sp, #12]
 8011980:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8011984:	9502      	str	r5, [sp, #8]
 8011986:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801198a:	e9cd 3500 	strd	r3, r5, [sp]
 801198e:	4613      	mov	r3, r2
 8011990:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8011992:	2200      	movs	r2, #0
 8011994:	47a0      	blx	r4
 8011996:	b00b      	add	sp, #44	; 0x2c
 8011998:	bd30      	pop	{r4, r5, pc}
	...

0801199c <_ZN8touchgfx3HAL10beginFrameEv>:
 801199c:	4b04      	ldr	r3, [pc, #16]	; (80119b0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801199e:	781b      	ldrb	r3, [r3, #0]
 80119a0:	b123      	cbz	r3, 80119ac <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80119a2:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80119a6:	f080 0001 	eor.w	r0, r0, #1
 80119aa:	4770      	bx	lr
 80119ac:	2001      	movs	r0, #1
 80119ae:	4770      	bx	lr
 80119b0:	20013832 	.word	0x20013832

080119b4 <_ZN8touchgfx3HAL8endFrameEv>:
 80119b4:	b510      	push	{r4, lr}
 80119b6:	4604      	mov	r4, r0
 80119b8:	6840      	ldr	r0, [r0, #4]
 80119ba:	6803      	ldr	r3, [r0, #0]
 80119bc:	689b      	ldr	r3, [r3, #8]
 80119be:	4798      	blx	r3
 80119c0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80119c4:	b113      	cbz	r3, 80119cc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80119c6:	2301      	movs	r3, #1
 80119c8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80119cc:	bd10      	pop	{r4, pc}

080119ce <_ZN8touchgfx3HAL10initializeEv>:
 80119ce:	b510      	push	{r4, lr}
 80119d0:	4604      	mov	r4, r0
 80119d2:	f7f0 fb7f 	bl	80020d4 <_ZN8touchgfx10OSWrappers10initializeEv>
 80119d6:	f7f0 fa8b 	bl	8001ef0 <_ZN8touchgfx4GPIO4initEv>
 80119da:	6860      	ldr	r0, [r4, #4]
 80119dc:	6803      	ldr	r3, [r0, #0]
 80119de:	68db      	ldr	r3, [r3, #12]
 80119e0:	4798      	blx	r3
 80119e2:	68e0      	ldr	r0, [r4, #12]
 80119e4:	6803      	ldr	r3, [r0, #0]
 80119e6:	689b      	ldr	r3, [r3, #8]
 80119e8:	4798      	blx	r3
 80119ea:	6823      	ldr	r3, [r4, #0]
 80119ec:	4620      	mov	r0, r4
 80119ee:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80119f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80119f4:	4718      	bx	r3
	...

080119f8 <_ZN8touchgfx3HAL4tickEv>:
 80119f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80119fa:	6803      	ldr	r3, [r0, #0]
 80119fc:	4d5b      	ldr	r5, [pc, #364]	; (8011b6c <_ZN8touchgfx3HAL4tickEv+0x174>)
 80119fe:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011a02:	4604      	mov	r4, r0
 8011a04:	4798      	blx	r3
 8011a06:	2800      	cmp	r0, #0
 8011a08:	f000 8095 	beq.w	8011b36 <_ZN8touchgfx3HAL4tickEv+0x13e>
 8011a0c:	2001      	movs	r0, #1
 8011a0e:	f7f0 fa21 	bl	8001e54 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011a12:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8011a16:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011a1a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8011a1e:	2600      	movs	r6, #0
 8011a20:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8011a24:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8011a28:	b133      	cbz	r3, 8011a38 <_ZN8touchgfx3HAL4tickEv+0x40>
 8011a2a:	6823      	ldr	r3, [r4, #0]
 8011a2c:	4620      	mov	r0, r4
 8011a2e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011a32:	4798      	blx	r3
 8011a34:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8011a38:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8011a3c:	6862      	ldr	r2, [r4, #4]
 8011a3e:	f083 0301 	eor.w	r3, r3, #1
 8011a42:	7253      	strb	r3, [r2, #9]
 8011a44:	2601      	movs	r6, #1
 8011a46:	702e      	strb	r6, [r5, #0]
 8011a48:	f005 f93a 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 8011a4c:	6803      	ldr	r3, [r0, #0]
 8011a4e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011a50:	4798      	blx	r3
 8011a52:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011a56:	b90b      	cbnz	r3, 8011a5c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011a58:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 8011a5c:	f005 f930 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 8011a60:	6803      	ldr	r3, [r0, #0]
 8011a62:	695b      	ldr	r3, [r3, #20]
 8011a64:	4798      	blx	r3
 8011a66:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011a68:	6803      	ldr	r3, [r0, #0]
 8011a6a:	691b      	ldr	r3, [r3, #16]
 8011a6c:	4798      	blx	r3
 8011a6e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011a72:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8011a76:	3b01      	subs	r3, #1
 8011a78:	b2db      	uxtb	r3, r3
 8011a7a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8011a7e:	b10a      	cbz	r2, 8011a84 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011a80:	2b00      	cmp	r3, #0
 8011a82:	d1eb      	bne.n	8011a5c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011a84:	4a3a      	ldr	r2, [pc, #232]	; (8011b70 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011a86:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 8011a8a:	7813      	ldrb	r3, [r2, #0]
 8011a8c:	3301      	adds	r3, #1
 8011a8e:	b25b      	sxtb	r3, r3
 8011a90:	4299      	cmp	r1, r3
 8011a92:	7013      	strb	r3, [r2, #0]
 8011a94:	dc10      	bgt.n	8011ab8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011a96:	68e0      	ldr	r0, [r4, #12]
 8011a98:	2300      	movs	r3, #0
 8011a9a:	7013      	strb	r3, [r2, #0]
 8011a9c:	6803      	ldr	r3, [r0, #0]
 8011a9e:	aa03      	add	r2, sp, #12
 8011aa0:	68db      	ldr	r3, [r3, #12]
 8011aa2:	a902      	add	r1, sp, #8
 8011aa4:	4798      	blx	r3
 8011aa6:	6823      	ldr	r3, [r4, #0]
 8011aa8:	2800      	cmp	r0, #0
 8011aaa:	d050      	beq.n	8011b4e <_ZN8touchgfx3HAL4tickEv+0x156>
 8011aac:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8011ab0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8011ab4:	4620      	mov	r0, r4
 8011ab6:	4798      	blx	r3
 8011ab8:	6960      	ldr	r0, [r4, #20]
 8011aba:	2300      	movs	r3, #0
 8011abc:	f88d 3007 	strb.w	r3, [sp, #7]
 8011ac0:	b158      	cbz	r0, 8011ada <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011ac2:	6803      	ldr	r3, [r0, #0]
 8011ac4:	f10d 0107 	add.w	r1, sp, #7
 8011ac8:	68db      	ldr	r3, [r3, #12]
 8011aca:	4798      	blx	r3
 8011acc:	b128      	cbz	r0, 8011ada <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011ace:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011ad0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011ad4:	6803      	ldr	r3, [r0, #0]
 8011ad6:	68db      	ldr	r3, [r3, #12]
 8011ad8:	4798      	blx	r3
 8011ada:	f104 001c 	add.w	r0, r4, #28
 8011ade:	f016 f8c3 	bl	8027c68 <_ZN8touchgfx8Gestures4tickEv>
 8011ae2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 8011ae6:	b30b      	cbz	r3, 8011b2c <_ZN8touchgfx3HAL4tickEv+0x134>
 8011ae8:	6920      	ldr	r0, [r4, #16]
 8011aea:	6803      	ldr	r3, [r0, #0]
 8011aec:	691b      	ldr	r3, [r3, #16]
 8011aee:	4798      	blx	r3
 8011af0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011af2:	4606      	mov	r6, r0
 8011af4:	b903      	cbnz	r3, 8011af8 <_ZN8touchgfx3HAL4tickEv+0x100>
 8011af6:	6760      	str	r0, [r4, #116]	; 0x74
 8011af8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011afa:	4a1e      	ldr	r2, [pc, #120]	; (8011b74 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8011afc:	1af3      	subs	r3, r6, r3
 8011afe:	4293      	cmp	r3, r2
 8011b00:	d914      	bls.n	8011b2c <_ZN8touchgfx3HAL4tickEv+0x134>
 8011b02:	6920      	ldr	r0, [r4, #16]
 8011b04:	6803      	ldr	r3, [r0, #0]
 8011b06:	699b      	ldr	r3, [r3, #24]
 8011b08:	4798      	blx	r3
 8011b0a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011b0c:	2264      	movs	r2, #100	; 0x64
 8011b0e:	1af3      	subs	r3, r6, r3
 8011b10:	fbb3 f3f2 	udiv	r3, r3, r2
 8011b14:	fbb0 f0f3 	udiv	r0, r0, r3
 8011b18:	2800      	cmp	r0, #0
 8011b1a:	dc1d      	bgt.n	8011b58 <_ZN8touchgfx3HAL4tickEv+0x160>
 8011b1c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011b20:	6920      	ldr	r0, [r4, #16]
 8011b22:	6803      	ldr	r3, [r0, #0]
 8011b24:	2100      	movs	r1, #0
 8011b26:	69db      	ldr	r3, [r3, #28]
 8011b28:	4798      	blx	r3
 8011b2a:	6766      	str	r6, [r4, #116]	; 0x74
 8011b2c:	f005 f8c8 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 8011b30:	6803      	ldr	r3, [r0, #0]
 8011b32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b34:	4798      	blx	r3
 8011b36:	6823      	ldr	r3, [r4, #0]
 8011b38:	4620      	mov	r0, r4
 8011b3a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8011b3e:	4798      	blx	r3
 8011b40:	2001      	movs	r0, #1
 8011b42:	f7f0 f99f 	bl	8001e84 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011b46:	2300      	movs	r3, #0
 8011b48:	702b      	strb	r3, [r5, #0]
 8011b4a:	b004      	add	sp, #16
 8011b4c:	bd70      	pop	{r4, r5, r6, pc}
 8011b4e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8011b52:	4620      	mov	r0, r4
 8011b54:	4798      	blx	r3
 8011b56:	e7af      	b.n	8011ab8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011b58:	2863      	cmp	r0, #99	; 0x63
 8011b5a:	bfcb      	itete	gt
 8011b5c:	2300      	movgt	r3, #0
 8011b5e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8011b62:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8011b66:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 8011b6a:	e7d9      	b.n	8011b20 <_ZN8touchgfx3HAL4tickEv+0x128>
 8011b6c:	20013838 	.word	0x20013838
 8011b70:	20013839 	.word	0x20013839
 8011b74:	05f5e100 	.word	0x05f5e100

08011b78 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011b78:	b510      	push	{r4, lr}
 8011b7a:	4604      	mov	r4, r0
 8011b7c:	f7f0 fada 	bl	8002134 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011b80:	6863      	ldr	r3, [r4, #4]
 8011b82:	2200      	movs	r2, #0
 8011b84:	729a      	strb	r2, [r3, #10]
 8011b86:	bd10      	pop	{r4, pc}

08011b88 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011b88:	65c1      	str	r1, [r0, #92]	; 0x5c
 8011b8a:	301c      	adds	r0, #28
 8011b8c:	f016 b86a 	b.w	8027c64 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011b90 <_ZN8touchgfx3HAL5touchEll>:
 8011b90:	b530      	push	{r4, r5, lr}
 8011b92:	b087      	sub	sp, #28
 8011b94:	4604      	mov	r4, r0
 8011b96:	a804      	add	r0, sp, #16
 8011b98:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8011b9c:	f004 fe5c 	bl	8016858 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011ba0:	9b04      	ldr	r3, [sp, #16]
 8011ba2:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011ba6:	a906      	add	r1, sp, #24
 8011ba8:	9b05      	ldr	r3, [sp, #20]
 8011baa:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8011bae:	a803      	add	r0, sp, #12
 8011bb0:	f004 fea4 	bl	80168fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8011bb4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8011bb8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011bbc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011bc0:	f104 001c 	add.w	r0, r4, #28
 8011bc4:	b189      	cbz	r1, 8011bea <_ZN8touchgfx3HAL5touchEll+0x5a>
 8011bc6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8011bca:	9300      	str	r3, [sp, #0]
 8011bcc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8011bd0:	4613      	mov	r3, r2
 8011bd2:	462a      	mov	r2, r5
 8011bd4:	f016 f856 	bl	8027c84 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8011bd8:	b128      	cbz	r0, 8011be6 <_ZN8touchgfx3HAL5touchEll+0x56>
 8011bda:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011bde:	6623      	str	r3, [r4, #96]	; 0x60
 8011be0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011be4:	6663      	str	r3, [r4, #100]	; 0x64
 8011be6:	b007      	add	sp, #28
 8011be8:	bd30      	pop	{r4, r5, pc}
 8011bea:	f016 f88b 	bl	8027d04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011bee:	2301      	movs	r3, #1
 8011bf0:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011bf4:	e7f1      	b.n	8011bda <_ZN8touchgfx3HAL5touchEll+0x4a>

08011bf6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8011bf6:	b510      	push	{r4, lr}
 8011bf8:	2b00      	cmp	r3, #0
 8011bfa:	d046      	beq.n	8011c8a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011bfc:	ea81 0002 	eor.w	r0, r1, r2
 8011c00:	07c4      	lsls	r4, r0, #31
 8011c02:	d508      	bpl.n	8011c16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8011c04:	440b      	add	r3, r1
 8011c06:	3a01      	subs	r2, #1
 8011c08:	428b      	cmp	r3, r1
 8011c0a:	d93e      	bls.n	8011c8a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011c0c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011c10:	f801 0b01 	strb.w	r0, [r1], #1
 8011c14:	e7f8      	b.n	8011c08 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011c16:	07d0      	lsls	r0, r2, #31
 8011c18:	bf42      	ittt	mi
 8011c1a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8011c1e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011c22:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011c26:	2b01      	cmp	r3, #1
 8011c28:	d911      	bls.n	8011c4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c2a:	ea81 0402 	eor.w	r4, r1, r2
 8011c2e:	07a4      	lsls	r4, r4, #30
 8011c30:	4610      	mov	r0, r2
 8011c32:	d022      	beq.n	8011c7a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011c34:	f023 0401 	bic.w	r4, r3, #1
 8011c38:	440c      	add	r4, r1
 8011c3a:	428c      	cmp	r4, r1
 8011c3c:	4602      	mov	r2, r0
 8011c3e:	d904      	bls.n	8011c4a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011c40:	8812      	ldrh	r2, [r2, #0]
 8011c42:	f821 2b02 	strh.w	r2, [r1], #2
 8011c46:	3002      	adds	r0, #2
 8011c48:	e7f7      	b.n	8011c3a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8011c4a:	f003 0301 	and.w	r3, r3, #1
 8011c4e:	f023 0003 	bic.w	r0, r3, #3
 8011c52:	4408      	add	r0, r1
 8011c54:	4288      	cmp	r0, r1
 8011c56:	4614      	mov	r4, r2
 8011c58:	d904      	bls.n	8011c64 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8011c5a:	6824      	ldr	r4, [r4, #0]
 8011c5c:	f841 4b04 	str.w	r4, [r1], #4
 8011c60:	3204      	adds	r2, #4
 8011c62:	e7f7      	b.n	8011c54 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011c64:	f003 0303 	and.w	r3, r3, #3
 8011c68:	440b      	add	r3, r1
 8011c6a:	3a01      	subs	r2, #1
 8011c6c:	428b      	cmp	r3, r1
 8011c6e:	d90c      	bls.n	8011c8a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011c70:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011c74:	f801 0b01 	strb.w	r0, [r1], #1
 8011c78:	e7f8      	b.n	8011c6c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8011c7a:	0790      	lsls	r0, r2, #30
 8011c7c:	d0e7      	beq.n	8011c4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c7e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011c82:	f821 0b02 	strh.w	r0, [r1], #2
 8011c86:	3b02      	subs	r3, #2
 8011c88:	e7e1      	b.n	8011c4e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c8a:	2001      	movs	r0, #1
 8011c8c:	bd10      	pop	{r4, pc}

08011c8e <_ZN8touchgfx3HAL7noTouchEv>:
 8011c8e:	b510      	push	{r4, lr}
 8011c90:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 8011c94:	4604      	mov	r4, r0
 8011c96:	b153      	cbz	r3, 8011cae <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011c98:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8011c9c:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8011ca0:	2101      	movs	r1, #1
 8011ca2:	301c      	adds	r0, #28
 8011ca4:	f016 f82e 	bl	8027d04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011ca8:	2300      	movs	r3, #0
 8011caa:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011cae:	bd10      	pop	{r4, pc}

08011cb0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011cb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011cb4:	b085      	sub	sp, #20
 8011cb6:	ad04      	add	r5, sp, #16
 8011cb8:	4604      	mov	r4, r0
 8011cba:	2000      	movs	r0, #0
 8011cbc:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011cc0:	69a0      	ldr	r0, [r4, #24]
 8011cc2:	6806      	ldr	r6, [r0, #0]
 8011cc4:	9501      	str	r5, [sp, #4]
 8011cc6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8011cca:	9500      	str	r5, [sp, #0]
 8011ccc:	6835      	ldr	r5, [r6, #0]
 8011cce:	4699      	mov	r9, r3
 8011cd0:	460f      	mov	r7, r1
 8011cd2:	4690      	mov	r8, r2
 8011cd4:	47a8      	blx	r5
 8011cd6:	4d10      	ldr	r5, [pc, #64]	; (8011d18 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011cd8:	4606      	mov	r6, r0
 8011cda:	f8a5 9000 	strh.w	r9, [r5]
 8011cde:	f7f2 fe17 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 8011ce2:	6803      	ldr	r3, [r0, #0]
 8011ce4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ce6:	4798      	blx	r3
 8011ce8:	b128      	cbz	r0, 8011cf6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8011cea:	2801      	cmp	r0, #1
 8011cec:	d00b      	beq.n	8011d06 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8011cee:	4630      	mov	r0, r6
 8011cf0:	b005      	add	sp, #20
 8011cf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011cf6:	882b      	ldrh	r3, [r5, #0]
 8011cf8:	fb08 7203 	mla	r2, r8, r3, r7
 8011cfc:	9b03      	ldr	r3, [sp, #12]
 8011cfe:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011d02:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011d04:	e7f3      	b.n	8011cee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011d06:	882a      	ldrh	r2, [r5, #0]
 8011d08:	9b03      	ldr	r3, [sp, #12]
 8011d0a:	fb08 7202 	mla	r2, r8, r2, r7
 8011d0e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011d12:	1a9a      	subs	r2, r3, r2
 8011d14:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011d16:	e7ea      	b.n	8011cee <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011d18:	2001382e 	.word	0x2001382e

08011d1c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8011d1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d1e:	b08b      	sub	sp, #44	; 0x2c
 8011d20:	4617      	mov	r7, r2
 8011d22:	4604      	mov	r4, r0
 8011d24:	460e      	mov	r6, r1
 8011d26:	461d      	mov	r5, r3
 8011d28:	f7f2 fdf2 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 8011d2c:	6803      	ldr	r3, [r0, #0]
 8011d2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d30:	4798      	blx	r3
 8011d32:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011d36:	9007      	str	r0, [sp, #28]
 8011d38:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011d3c:	4b0d      	ldr	r3, [pc, #52]	; (8011d74 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8011d3e:	6822      	ldr	r2, [r4, #0]
 8011d40:	881b      	ldrh	r3, [r3, #0]
 8011d42:	9306      	str	r3, [sp, #24]
 8011d44:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011d48:	9305      	str	r3, [sp, #20]
 8011d4a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8011d4e:	9304      	str	r3, [sp, #16]
 8011d50:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011d54:	9303      	str	r3, [sp, #12]
 8011d56:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011d5a:	9302      	str	r3, [sp, #8]
 8011d5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011d60:	e9cd 5300 	strd	r5, r3, [sp]
 8011d64:	4631      	mov	r1, r6
 8011d66:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011d68:	463b      	mov	r3, r7
 8011d6a:	2200      	movs	r2, #0
 8011d6c:	4620      	mov	r0, r4
 8011d6e:	47a8      	blx	r5
 8011d70:	b00b      	add	sp, #44	; 0x2c
 8011d72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d74:	2001382e 	.word	0x2001382e

08011d78 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011d78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d7c:	4698      	mov	r8, r3
 8011d7e:	6803      	ldr	r3, [r0, #0]
 8011d80:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8011d82:	4b15      	ldr	r3, [pc, #84]	; (8011dd8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011d84:	b08b      	sub	sp, #44	; 0x2c
 8011d86:	4617      	mov	r7, r2
 8011d88:	f8b3 9000 	ldrh.w	r9, [r3]
 8011d8c:	460e      	mov	r6, r1
 8011d8e:	4604      	mov	r4, r0
 8011d90:	f7f2 fdbe 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 8011d94:	6803      	ldr	r3, [r0, #0]
 8011d96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d98:	4798      	blx	r3
 8011d9a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011d9e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011da2:	2302      	movs	r3, #2
 8011da4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011da8:	2301      	movs	r3, #1
 8011daa:	9305      	str	r3, [sp, #20]
 8011dac:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011db0:	9304      	str	r3, [sp, #16]
 8011db2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011db6:	9303      	str	r3, [sp, #12]
 8011db8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011dbc:	9302      	str	r3, [sp, #8]
 8011dbe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011dc2:	2200      	movs	r2, #0
 8011dc4:	e9cd 8300 	strd	r8, r3, [sp]
 8011dc8:	4631      	mov	r1, r6
 8011dca:	463b      	mov	r3, r7
 8011dcc:	4620      	mov	r0, r4
 8011dce:	47a8      	blx	r5
 8011dd0:	b00b      	add	sp, #44	; 0x2c
 8011dd2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011dd6:	bf00      	nop
 8011dd8:	2001382e 	.word	0x2001382e

08011ddc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011ddc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011de0:	4698      	mov	r8, r3
 8011de2:	6803      	ldr	r3, [r0, #0]
 8011de4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8011de6:	4b11      	ldr	r3, [pc, #68]	; (8011e2c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011de8:	b087      	sub	sp, #28
 8011dea:	f8b3 9000 	ldrh.w	r9, [r3]
 8011dee:	460e      	mov	r6, r1
 8011df0:	4617      	mov	r7, r2
 8011df2:	4604      	mov	r4, r0
 8011df4:	f7f2 fd8c 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 8011df8:	6803      	ldr	r3, [r0, #0]
 8011dfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011dfc:	4798      	blx	r3
 8011dfe:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011e02:	f8cd 900c 	str.w	r9, [sp, #12]
 8011e06:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8011e0a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8011e0e:	9302      	str	r3, [sp, #8]
 8011e10:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011e14:	9301      	str	r3, [sp, #4]
 8011e16:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011e1a:	9300      	str	r3, [sp, #0]
 8011e1c:	463a      	mov	r2, r7
 8011e1e:	4643      	mov	r3, r8
 8011e20:	4631      	mov	r1, r6
 8011e22:	4620      	mov	r0, r4
 8011e24:	47a8      	blx	r5
 8011e26:	b007      	add	sp, #28
 8011e28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011e2c:	2001382e 	.word	0x2001382e

08011e30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011e30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e34:	4604      	mov	r4, r0
 8011e36:	b08f      	sub	sp, #60	; 0x3c
 8011e38:	4610      	mov	r0, r2
 8011e3a:	460d      	mov	r5, r1
 8011e3c:	4691      	mov	r9, r2
 8011e3e:	461e      	mov	r6, r3
 8011e40:	f008 fafa 	bl	801a438 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011e44:	2800      	cmp	r0, #0
 8011e46:	f000 809d 	beq.w	8011f84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8011e4a:	6823      	ldr	r3, [r4, #0]
 8011e4c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011fe8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011e50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011e52:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011fec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8011e56:	4f61      	ldr	r7, [pc, #388]	; (8011fdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011e58:	4620      	mov	r0, r4
 8011e5a:	4798      	blx	r3
 8011e5c:	6823      	ldr	r3, [r4, #0]
 8011e5e:	4620      	mov	r0, r4
 8011e60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e62:	4798      	blx	r3
 8011e64:	f8bb 3000 	ldrh.w	r3, [fp]
 8011e68:	9301      	str	r3, [sp, #4]
 8011e6a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8011e6e:	f8ba 3000 	ldrh.w	r3, [sl]
 8011e72:	9302      	str	r3, [sp, #8]
 8011e74:	883b      	ldrh	r3, [r7, #0]
 8011e76:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8011e7a:	9303      	str	r3, [sp, #12]
 8011e7c:	4b58      	ldr	r3, [pc, #352]	; (8011fe0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011e7e:	9305      	str	r3, [sp, #20]
 8011e80:	881a      	ldrh	r2, [r3, #0]
 8011e82:	9204      	str	r2, [sp, #16]
 8011e84:	4640      	mov	r0, r8
 8011e86:	f008 fb6b 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011e8a:	8038      	strh	r0, [r7, #0]
 8011e8c:	4640      	mov	r0, r8
 8011e8e:	f008 fb9b 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011e92:	9b05      	ldr	r3, [sp, #20]
 8011e94:	b280      	uxth	r0, r0
 8011e96:	8018      	strh	r0, [r3, #0]
 8011e98:	4b52      	ldr	r3, [pc, #328]	; (8011fe4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8011e9a:	781b      	ldrb	r3, [r3, #0]
 8011e9c:	2b00      	cmp	r3, #0
 8011e9e:	d174      	bne.n	8011f8a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011ea0:	883b      	ldrh	r3, [r7, #0]
 8011ea2:	f8ab 3000 	strh.w	r3, [fp]
 8011ea6:	f8aa 0000 	strh.w	r0, [sl]
 8011eaa:	4648      	mov	r0, r9
 8011eac:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8011eb0:	f008 fac2 	bl	801a438 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011eb4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8011eb8:	2200      	movs	r2, #0
 8011eba:	4611      	mov	r1, r2
 8011ebc:	4628      	mov	r0, r5
 8011ebe:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011ec2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011ec6:	f7f0 fd9d 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8011eca:	2301      	movs	r3, #1
 8011ecc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8011ed0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8011ed4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011ed8:	2b00      	cmp	r3, #0
 8011eda:	dd5c      	ble.n	8011f96 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011edc:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011ee0:	2b00      	cmp	r3, #0
 8011ee2:	dd58      	ble.n	8011f96 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011ee4:	462a      	mov	r2, r5
 8011ee6:	ab0a      	add	r3, sp, #40	; 0x28
 8011ee8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011eec:	6851      	ldr	r1, [r2, #4]
 8011eee:	c303      	stmia	r3!, {r0, r1}
 8011ef0:	4631      	mov	r1, r6
 8011ef2:	a80a      	add	r0, sp, #40	; 0x28
 8011ef4:	f7fe ff92 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 8011ef8:	4b38      	ldr	r3, [pc, #224]	; (8011fdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011efa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011efe:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011f02:	2100      	movs	r1, #0
 8011f04:	aa0a      	add	r2, sp, #40	; 0x28
 8011f06:	4b36      	ldr	r3, [pc, #216]	; (8011fe0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011f08:	910c      	str	r1, [sp, #48]	; 0x30
 8011f0a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011f0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011f12:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011f16:	ab08      	add	r3, sp, #32
 8011f18:	e883 0003 	stmia.w	r3, {r0, r1}
 8011f1c:	4618      	mov	r0, r3
 8011f1e:	a90c      	add	r1, sp, #48	; 0x30
 8011f20:	f7fe ff7c 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 8011f24:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011f26:	2b00      	cmp	r3, #0
 8011f28:	d13c      	bne.n	8011fa4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011f2a:	2000      	movs	r0, #0
 8011f2c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011f30:	2600      	movs	r6, #0
 8011f32:	682a      	ldr	r2, [r5, #0]
 8011f34:	696b      	ldr	r3, [r5, #20]
 8011f36:	616e      	str	r6, [r5, #20]
 8011f38:	9305      	str	r3, [sp, #20]
 8011f3a:	6892      	ldr	r2, [r2, #8]
 8011f3c:	a908      	add	r1, sp, #32
 8011f3e:	4628      	mov	r0, r5
 8011f40:	4790      	blx	r2
 8011f42:	9b05      	ldr	r3, [sp, #20]
 8011f44:	616b      	str	r3, [r5, #20]
 8011f46:	4652      	mov	r2, sl
 8011f48:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8011f4c:	4649      	mov	r1, r9
 8011f4e:	4628      	mov	r0, r5
 8011f50:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8011f54:	f7f0 fd56 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8011f58:	4b23      	ldr	r3, [pc, #140]	; (8011fe8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8011f5a:	9a01      	ldr	r2, [sp, #4]
 8011f5c:	801a      	strh	r2, [r3, #0]
 8011f5e:	4b23      	ldr	r3, [pc, #140]	; (8011fec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011f60:	9a02      	ldr	r2, [sp, #8]
 8011f62:	801a      	strh	r2, [r3, #0]
 8011f64:	4b1d      	ldr	r3, [pc, #116]	; (8011fdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011f66:	9a03      	ldr	r2, [sp, #12]
 8011f68:	801a      	strh	r2, [r3, #0]
 8011f6a:	4b1d      	ldr	r3, [pc, #116]	; (8011fe0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011f6c:	9a04      	ldr	r2, [sp, #16]
 8011f6e:	801a      	strh	r2, [r3, #0]
 8011f70:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8011f74:	6823      	ldr	r3, [r4, #0]
 8011f76:	4620      	mov	r0, r4
 8011f78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011f7a:	4798      	blx	r3
 8011f7c:	6823      	ldr	r3, [r4, #0]
 8011f7e:	4620      	mov	r0, r4
 8011f80:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f82:	4798      	blx	r3
 8011f84:	b00f      	add	sp, #60	; 0x3c
 8011f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f8a:	883b      	ldrh	r3, [r7, #0]
 8011f8c:	f8ab 0000 	strh.w	r0, [fp]
 8011f90:	f8aa 3000 	strh.w	r3, [sl]
 8011f94:	e789      	b.n	8011eaa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011f96:	462a      	mov	r2, r5
 8011f98:	ab0a      	add	r3, sp, #40	; 0x28
 8011f9a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011f9e:	6851      	ldr	r1, [r2, #4]
 8011fa0:	c303      	stmia	r3!, {r0, r1}
 8011fa2:	e7a9      	b.n	8011ef8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011fa4:	a807      	add	r0, sp, #28
 8011fa6:	f008 fc4b 	bl	801a840 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011faa:	4606      	mov	r6, r0
 8011fac:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011fae:	6803      	ldr	r3, [r0, #0]
 8011fb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fb2:	4798      	blx	r3
 8011fb4:	4286      	cmp	r6, r0
 8011fb6:	d1b8      	bne.n	8011f2a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011fb8:	f7f2 fcaa 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 8011fbc:	6803      	ldr	r3, [r0, #0]
 8011fbe:	4606      	mov	r6, r0
 8011fc0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011fc2:	9305      	str	r3, [sp, #20]
 8011fc4:	a807      	add	r0, sp, #28
 8011fc6:	f008 fc3b 	bl	801a840 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011fca:	9b05      	ldr	r3, [sp, #20]
 8011fcc:	4601      	mov	r1, r0
 8011fce:	4630      	mov	r0, r6
 8011fd0:	4798      	blx	r3
 8011fd2:	f080 0001 	eor.w	r0, r0, #1
 8011fd6:	b2c0      	uxtb	r0, r0
 8011fd8:	e7a8      	b.n	8011f2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8011fda:	bf00      	nop
 8011fdc:	20013828 	.word	0x20013828
 8011fe0:	2001382a 	.word	0x2001382a
 8011fe4:	2001382c 	.word	0x2001382c
 8011fe8:	2001382e 	.word	0x2001382e
 8011fec:	20013830 	.word	0x20013830

08011ff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011ff0:	b510      	push	{r4, lr}
 8011ff2:	4b07      	ldr	r3, [pc, #28]	; (8012010 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011ff4:	781b      	ldrb	r3, [r3, #0]
 8011ff6:	4604      	mov	r4, r0
 8011ff8:	b13b      	cbz	r3, 801200a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011ffa:	6803      	ldr	r3, [r0, #0]
 8011ffc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011ffe:	4798      	blx	r3
 8012000:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012002:	4283      	cmp	r3, r0
 8012004:	d101      	bne.n	801200a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012006:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8012008:	bd10      	pop	{r4, pc}
 801200a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801200c:	e7fc      	b.n	8012008 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 801200e:	bf00      	nop
 8012010:	20013832 	.word	0x20013832

08012014 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012014:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012018:	b08a      	sub	sp, #40	; 0x28
 801201a:	461d      	mov	r5, r3
 801201c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012020:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012024:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012028:	f8ad 3018 	strh.w	r3, [sp, #24]
 801202c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012030:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012034:	2400      	movs	r4, #0
 8012036:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801203a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801203e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012042:	4690      	mov	r8, r2
 8012044:	4607      	mov	r7, r0
 8012046:	9404      	str	r4, [sp, #16]
 8012048:	f88d 4020 	strb.w	r4, [sp, #32]
 801204c:	f7ff ffd0 	bl	8011ff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012050:	fb06 8505 	mla	r5, r6, r5, r8
 8012054:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012058:	6878      	ldr	r0, [r7, #4]
 801205a:	9505      	str	r5, [sp, #20]
 801205c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012060:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012064:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8012068:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801206c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8012070:	6803      	ldr	r3, [r0, #0]
 8012072:	a901      	add	r1, sp, #4
 8012074:	685b      	ldr	r3, [r3, #4]
 8012076:	4798      	blx	r3
 8012078:	b00a      	add	sp, #40	; 0x28
 801207a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801207e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801207e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012082:	b08b      	sub	sp, #44	; 0x2c
 8012084:	2400      	movs	r4, #0
 8012086:	461d      	mov	r5, r3
 8012088:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801208c:	4688      	mov	r8, r1
 801208e:	4691      	mov	r9, r2
 8012090:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8012094:	9404      	str	r4, [sp, #16]
 8012096:	4607      	mov	r7, r0
 8012098:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801209c:	f7ff ffa8 	bl	8011ff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80120a0:	fb06 9505 	mla	r5, r6, r5, r9
 80120a4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80120a8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80120ac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80120b0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80120b4:	6878      	ldr	r0, [r7, #4]
 80120b6:	9505      	str	r5, [sp, #20]
 80120b8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80120bc:	f8ad 401c 	strh.w	r4, [sp, #28]
 80120c0:	f8ad 601e 	strh.w	r6, [sp, #30]
 80120c4:	f8cd 8010 	str.w	r8, [sp, #16]
 80120c8:	f8ad 4020 	strh.w	r4, [sp, #32]
 80120cc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80120d0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80120d4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80120d8:	6803      	ldr	r3, [r0, #0]
 80120da:	a901      	add	r1, sp, #4
 80120dc:	685b      	ldr	r3, [r3, #4]
 80120de:	4798      	blx	r3
 80120e0:	b00b      	add	sp, #44	; 0x2c
 80120e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080120e8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80120e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120ec:	b08a      	sub	sp, #40	; 0x28
 80120ee:	4698      	mov	r8, r3
 80120f0:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80120f4:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80120f8:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80120fc:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8012100:	2300      	movs	r3, #0
 8012102:	2d0b      	cmp	r5, #11
 8012104:	4606      	mov	r6, r0
 8012106:	9304      	str	r3, [sp, #16]
 8012108:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801210c:	d138      	bne.n	8012180 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 801210e:	2380      	movs	r3, #128	; 0x80
 8012110:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012114:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012118:	f8ad 3018 	strh.w	r3, [sp, #24]
 801211c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8012120:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012124:	f88d 0020 	strb.w	r0, [sp, #32]
 8012128:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801212c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012130:	4630      	mov	r0, r6
 8012132:	9203      	str	r2, [sp, #12]
 8012134:	f7ff ff5c 	bl	8011ff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012138:	2c0b      	cmp	r4, #11
 801213a:	bf98      	it	ls
 801213c:	4b1b      	ldrls	r3, [pc, #108]	; (80121ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 801213e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8012142:	bf98      	it	ls
 8012144:	5d19      	ldrbls	r1, [r3, r4]
 8012146:	f8ad 701e 	strh.w	r7, [sp, #30]
 801214a:	bf88      	it	hi
 801214c:	2100      	movhi	r1, #0
 801214e:	fb02 8307 	mla	r3, r2, r7, r8
 8012152:	10c9      	asrs	r1, r1, #3
 8012154:	fb01 0003 	mla	r0, r1, r3, r0
 8012158:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 801215c:	9005      	str	r0, [sp, #20]
 801215e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8012162:	6870      	ldr	r0, [r6, #4]
 8012164:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8012168:	2300      	movs	r3, #0
 801216a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801216e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012172:	6803      	ldr	r3, [r0, #0]
 8012174:	a901      	add	r1, sp, #4
 8012176:	685b      	ldr	r3, [r3, #4]
 8012178:	4798      	blx	r3
 801217a:	b00a      	add	sp, #40	; 0x28
 801217c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012180:	2d02      	cmp	r5, #2
 8012182:	d109      	bne.n	8012198 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8012184:	28ff      	cmp	r0, #255	; 0xff
 8012186:	d105      	bne.n	8012194 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8012188:	f1bc 0f00 	cmp.w	ip, #0
 801218c:	bf14      	ite	ne
 801218e:	2340      	movne	r3, #64	; 0x40
 8012190:	2320      	moveq	r3, #32
 8012192:	e7bd      	b.n	8012110 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012194:	2340      	movs	r3, #64	; 0x40
 8012196:	e7bb      	b.n	8012110 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012198:	28ff      	cmp	r0, #255	; 0xff
 801219a:	d105      	bne.n	80121a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 801219c:	f1bc 0f00 	cmp.w	ip, #0
 80121a0:	bf14      	ite	ne
 80121a2:	2304      	movne	r3, #4
 80121a4:	2301      	moveq	r3, #1
 80121a6:	e7b3      	b.n	8012110 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80121a8:	2304      	movs	r3, #4
 80121aa:	e7b1      	b.n	8012110 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80121ac:	0802f830 	.word	0x0802f830

080121b0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80121b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121b4:	b08b      	sub	sp, #44	; 0x2c
 80121b6:	461d      	mov	r5, r3
 80121b8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80121bc:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 80121c0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 80121c4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80121c8:	bf14      	ite	ne
 80121ca:	2308      	movne	r3, #8
 80121cc:	2302      	moveq	r3, #2
 80121ce:	2400      	movs	r4, #0
 80121d0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80121d4:	4688      	mov	r8, r1
 80121d6:	4693      	mov	fp, r2
 80121d8:	9404      	str	r4, [sp, #16]
 80121da:	4607      	mov	r7, r0
 80121dc:	f7ff ff08 	bl	8011ff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80121e0:	2e0b      	cmp	r6, #11
 80121e2:	bf98      	it	ls
 80121e4:	4b15      	ldrls	r3, [pc, #84]	; (801223c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80121e6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80121ea:	bf98      	it	ls
 80121ec:	5d9c      	ldrbls	r4, [r3, r6]
 80121ee:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80121f2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80121f6:	fb05 b50a 	mla	r5, r5, sl, fp
 80121fa:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80121fe:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012202:	10e4      	asrs	r4, r4, #3
 8012204:	fb04 0405 	mla	r4, r4, r5, r0
 8012208:	2300      	movs	r3, #0
 801220a:	6878      	ldr	r0, [r7, #4]
 801220c:	9405      	str	r4, [sp, #20]
 801220e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012212:	f8ad a01e 	strh.w	sl, [sp, #30]
 8012216:	f8cd 8010 	str.w	r8, [sp, #16]
 801221a:	f88d 9020 	strb.w	r9, [sp, #32]
 801221e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8012222:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8012226:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 801222a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 801222e:	6803      	ldr	r3, [r0, #0]
 8012230:	a901      	add	r1, sp, #4
 8012232:	685b      	ldr	r3, [r3, #4]
 8012234:	4798      	blx	r3
 8012236:	b00b      	add	sp, #44	; 0x2c
 8012238:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801223c:	0802f830 	.word	0x0802f830

08012240 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012240:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012244:	461e      	mov	r6, r3
 8012246:	4b0a      	ldr	r3, [pc, #40]	; (8012270 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8012248:	460f      	mov	r7, r1
 801224a:	881d      	ldrh	r5, [r3, #0]
 801224c:	4690      	mov	r8, r2
 801224e:	f7f2 fb5f 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 8012252:	6803      	ldr	r3, [r0, #0]
 8012254:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012256:	4798      	blx	r3
 8012258:	280b      	cmp	r0, #11
 801225a:	bf9a      	itte	ls
 801225c:	4b05      	ldrls	r3, [pc, #20]	; (8012274 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801225e:	5c1c      	ldrbls	r4, [r3, r0]
 8012260:	2400      	movhi	r4, #0
 8012262:	fb08 7005 	mla	r0, r8, r5, r7
 8012266:	10e4      	asrs	r4, r4, #3
 8012268:	fb04 6000 	mla	r0, r4, r0, r6
 801226c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012270:	2001382e 	.word	0x2001382e
 8012274:	0802f830 	.word	0x0802f830

08012278 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012278:	b5f0      	push	{r4, r5, r6, r7, lr}
 801227a:	b08b      	sub	sp, #44	; 0x2c
 801227c:	461f      	mov	r7, r3
 801227e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8012282:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012286:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801228a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801228e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8012292:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012296:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801229a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801229e:	2500      	movs	r5, #0
 80122a0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80122a4:	f88d 3020 	strb.w	r3, [sp, #32]
 80122a8:	4604      	mov	r4, r0
 80122aa:	4616      	mov	r6, r2
 80122ac:	9504      	str	r5, [sp, #16]
 80122ae:	f7ff fe9f 	bl	8011ff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80122b2:	463a      	mov	r2, r7
 80122b4:	4631      	mov	r1, r6
 80122b6:	4603      	mov	r3, r0
 80122b8:	4620      	mov	r0, r4
 80122ba:	f7ff ffc1 	bl	8012240 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80122be:	4b0e      	ldr	r3, [pc, #56]	; (80122f8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80122c0:	9005      	str	r0, [sp, #20]
 80122c2:	881b      	ldrh	r3, [r3, #0]
 80122c4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80122c8:	f7f2 fb22 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 80122cc:	6803      	ldr	r3, [r0, #0]
 80122ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80122d0:	4798      	blx	r3
 80122d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80122d4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80122d8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80122dc:	9304      	str	r3, [sp, #16]
 80122de:	6860      	ldr	r0, [r4, #4]
 80122e0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80122e4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80122e8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80122ec:	6803      	ldr	r3, [r0, #0]
 80122ee:	a901      	add	r1, sp, #4
 80122f0:	685b      	ldr	r3, [r3, #4]
 80122f2:	4798      	blx	r3
 80122f4:	b00b      	add	sp, #44	; 0x2c
 80122f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122f8:	2001382e 	.word	0x2001382e

080122fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80122fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80122fe:	b08d      	sub	sp, #52	; 0x34
 8012300:	466b      	mov	r3, sp
 8012302:	e883 0006 	stmia.w	r3, {r1, r2}
 8012306:	2300      	movs	r3, #0
 8012308:	9306      	str	r3, [sp, #24]
 801230a:	6803      	ldr	r3, [r0, #0]
 801230c:	f8bd 6000 	ldrh.w	r6, [sp]
 8012310:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012312:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8012316:	2501      	movs	r5, #1
 8012318:	9503      	str	r5, [sp, #12]
 801231a:	4604      	mov	r4, r0
 801231c:	4798      	blx	r3
 801231e:	463a      	mov	r2, r7
 8012320:	4631      	mov	r1, r6
 8012322:	4603      	mov	r3, r0
 8012324:	4620      	mov	r0, r4
 8012326:	f7ff ff8b 	bl	8012240 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801232a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801232c:	9307      	str	r3, [sp, #28]
 801232e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012332:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012336:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801233a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801233e:	4b0f      	ldr	r3, [pc, #60]	; (801237c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8012340:	9004      	str	r0, [sp, #16]
 8012342:	881b      	ldrh	r3, [r3, #0]
 8012344:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8012348:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801234c:	f7f2 fae0 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 8012350:	6803      	ldr	r3, [r0, #0]
 8012352:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012354:	4798      	blx	r3
 8012356:	23ff      	movs	r3, #255	; 0xff
 8012358:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801235c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012360:	6860      	ldr	r0, [r4, #4]
 8012362:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8012366:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801236a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801236e:	6803      	ldr	r3, [r0, #0]
 8012370:	a903      	add	r1, sp, #12
 8012372:	685b      	ldr	r3, [r3, #4]
 8012374:	4798      	blx	r3
 8012376:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012378:	b00d      	add	sp, #52	; 0x34
 801237a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801237c:	2001382e 	.word	0x2001382e

08012380 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012384:	b08c      	sub	sp, #48	; 0x30
 8012386:	461e      	mov	r6, r3
 8012388:	466d      	mov	r5, sp
 801238a:	2300      	movs	r3, #0
 801238c:	e885 0006 	stmia.w	r5, {r1, r2}
 8012390:	9306      	str	r3, [sp, #24]
 8012392:	6803      	ldr	r3, [r0, #0]
 8012394:	f8bd 7000 	ldrh.w	r7, [sp]
 8012398:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801239a:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801239e:	2501      	movs	r5, #1
 80123a0:	9503      	str	r5, [sp, #12]
 80123a2:	4604      	mov	r4, r0
 80123a4:	4798      	blx	r3
 80123a6:	4642      	mov	r2, r8
 80123a8:	4639      	mov	r1, r7
 80123aa:	4603      	mov	r3, r0
 80123ac:	4620      	mov	r0, r4
 80123ae:	f7ff ff47 	bl	8012240 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80123b2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80123b6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80123ba:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80123be:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80123c2:	4b11      	ldr	r3, [pc, #68]	; (8012408 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80123c4:	9004      	str	r0, [sp, #16]
 80123c6:	881b      	ldrh	r3, [r3, #0]
 80123c8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80123cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80123ce:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80123d2:	9607      	str	r6, [sp, #28]
 80123d4:	f7f2 fa9c 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 80123d8:	6803      	ldr	r3, [r0, #0]
 80123da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80123dc:	4798      	blx	r3
 80123de:	23ff      	movs	r3, #255	; 0xff
 80123e0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80123e4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80123e8:	6860      	ldr	r0, [r4, #4]
 80123ea:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80123ee:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80123f2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80123f6:	6803      	ldr	r3, [r0, #0]
 80123f8:	a903      	add	r1, sp, #12
 80123fa:	685b      	ldr	r3, [r3, #4]
 80123fc:	4798      	blx	r3
 80123fe:	4630      	mov	r0, r6
 8012400:	b00c      	add	sp, #48	; 0x30
 8012402:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012406:	bf00      	nop
 8012408:	2001382e 	.word	0x2001382e

0801240c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 801240c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801240e:	b085      	sub	sp, #20
 8012410:	ac02      	add	r4, sp, #8
 8012412:	e884 0006 	stmia.w	r4, {r1, r2}
 8012416:	4605      	mov	r5, r0
 8012418:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 801241c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8012420:	f7ff fde6 	bl	8011ff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012424:	463a      	mov	r2, r7
 8012426:	4603      	mov	r3, r0
 8012428:	4631      	mov	r1, r6
 801242a:	4628      	mov	r0, r5
 801242c:	f7ff ff08 	bl	8012240 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012430:	4a05      	ldr	r2, [pc, #20]	; (8012448 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8012432:	682b      	ldr	r3, [r5, #0]
 8012434:	8812      	ldrh	r2, [r2, #0]
 8012436:	9200      	str	r2, [sp, #0]
 8012438:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801243a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801243e:	4603      	mov	r3, r0
 8012440:	4628      	mov	r0, r5
 8012442:	47b0      	blx	r6
 8012444:	b005      	add	sp, #20
 8012446:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012448:	2001382e 	.word	0x2001382e

0801244c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801244c:	b570      	push	{r4, r5, r6, lr}
 801244e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8012452:	4604      	mov	r4, r0
 8012454:	b19b      	cbz	r3, 801247e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8012456:	2002      	movs	r0, #2
 8012458:	f7ef fd2c 	bl	8001eb4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801245c:	2300      	movs	r3, #0
 801245e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8012462:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8012466:	6823      	ldr	r3, [r4, #0]
 8012468:	4620      	mov	r0, r4
 801246a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 801246e:	f7ff fdbf 	bl	8011ff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012472:	462b      	mov	r3, r5
 8012474:	4601      	mov	r1, r0
 8012476:	4620      	mov	r0, r4
 8012478:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801247c:	4718      	bx	r3
 801247e:	bd70      	pop	{r4, r5, r6, pc}

08012480 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8012480:	b538      	push	{r3, r4, r5, lr}
 8012482:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8012486:	428b      	cmp	r3, r1
 8012488:	4604      	mov	r4, r0
 801248a:	460d      	mov	r5, r1
 801248c:	d006      	beq.n	801249c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801248e:	6803      	ldr	r3, [r0, #0]
 8012490:	b929      	cbnz	r1, 801249e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8012492:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8012496:	4798      	blx	r3
 8012498:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 801249c:	bd38      	pop	{r3, r4, r5, pc}
 801249e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80124a2:	e7f8      	b.n	8012496 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080124a4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80124a4:	b510      	push	{r4, lr}
 80124a6:	4b0d      	ldr	r3, [pc, #52]	; (80124dc <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80124a8:	781b      	ldrb	r3, [r3, #0]
 80124aa:	4604      	mov	r4, r0
 80124ac:	b95b      	cbnz	r3, 80124c6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80124ae:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80124b2:	2b02      	cmp	r3, #2
 80124b4:	d007      	beq.n	80124c6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80124b6:	6840      	ldr	r0, [r0, #4]
 80124b8:	f000 f92c 	bl	8012714 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80124bc:	b118      	cbz	r0, 80124c6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80124be:	6862      	ldr	r2, [r4, #4]
 80124c0:	7a53      	ldrb	r3, [r2, #9]
 80124c2:	2b00      	cmp	r3, #0
 80124c4:	d0fc      	beq.n	80124c0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80124c6:	f7ef fe2d 	bl	8002124 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80124ca:	4620      	mov	r0, r4
 80124cc:	2100      	movs	r1, #0
 80124ce:	f7ff ffd7 	bl	8012480 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80124d2:	4620      	mov	r0, r4
 80124d4:	f7ff fd8c 	bl	8011ff0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80124d8:	bd10      	pop	{r4, pc}
 80124da:	bf00      	nop
 80124dc:	20013832 	.word	0x20013832

080124e0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80124e0:	b570      	push	{r4, r5, r6, lr}
 80124e2:	4604      	mov	r4, r0
 80124e4:	6803      	ldr	r3, [r0, #0]
 80124e6:	b919      	cbnz	r1, 80124f0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80124e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80124ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124ee:	4718      	bx	r3
 80124f0:	2200      	movs	r2, #0
 80124f2:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80124f6:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80124fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80124fc:	4798      	blx	r3
 80124fe:	6863      	ldr	r3, [r4, #4]
 8012500:	2101      	movs	r1, #1
 8012502:	4605      	mov	r5, r0
 8012504:	7299      	strb	r1, [r3, #10]
 8012506:	4620      	mov	r0, r4
 8012508:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 801250c:	f7ff ffb8 	bl	8012480 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8012510:	4628      	mov	r0, r5
 8012512:	bd70      	pop	{r4, r5, r6, pc}

08012514 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8012514:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8012518:	1a13      	subs	r3, r2, r0
 801251a:	4258      	negs	r0, r3
 801251c:	4158      	adcs	r0, r3
 801251e:	4770      	bx	lr

08012520 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8012520:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8012524:	1a9b      	subs	r3, r3, r2
 8012526:	2b00      	cmp	r3, #0
 8012528:	bfdc      	itt	le
 801252a:	6882      	ldrle	r2, [r0, #8]
 801252c:	189b      	addle	r3, r3, r2
 801252e:	2b01      	cmp	r3, #1
 8012530:	bfcc      	ite	gt
 8012532:	2000      	movgt	r0, #0
 8012534:	2001      	movle	r0, #1
 8012536:	4770      	bx	lr

08012538 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8012538:	6902      	ldr	r2, [r0, #16]
 801253a:	6843      	ldr	r3, [r0, #4]
 801253c:	2024      	movs	r0, #36	; 0x24
 801253e:	fb00 3002 	mla	r0, r0, r2, r3
 8012542:	4770      	bx	lr

08012544 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8012544:	6803      	ldr	r3, [r0, #0]
 8012546:	691b      	ldr	r3, [r3, #16]
 8012548:	4718      	bx	r3

0801254a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801254a:	b570      	push	{r4, r5, r6, lr}
 801254c:	2301      	movs	r3, #1
 801254e:	7203      	strb	r3, [r0, #8]
 8012550:	4604      	mov	r4, r0
 8012552:	6840      	ldr	r0, [r0, #4]
 8012554:	6803      	ldr	r3, [r0, #0]
 8012556:	699b      	ldr	r3, [r3, #24]
 8012558:	4798      	blx	r3
 801255a:	6803      	ldr	r3, [r0, #0]
 801255c:	2b40      	cmp	r3, #64	; 0x40
 801255e:	4605      	mov	r5, r0
 8012560:	d00c      	beq.n	801257c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012562:	d810      	bhi.n	8012586 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8012564:	2b04      	cmp	r3, #4
 8012566:	d01d      	beq.n	80125a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8012568:	d804      	bhi.n	8012574 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801256a:	2b01      	cmp	r3, #1
 801256c:	d006      	beq.n	801257c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801256e:	2b02      	cmp	r3, #2
 8012570:	d02c      	beq.n	80125cc <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8012572:	bd70      	pop	{r4, r5, r6, pc}
 8012574:	2b08      	cmp	r3, #8
 8012576:	d01d      	beq.n	80125b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8012578:	2b20      	cmp	r3, #32
 801257a:	d1fa      	bne.n	8012572 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801257c:	6823      	ldr	r3, [r4, #0]
 801257e:	4620      	mov	r0, r4
 8012580:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012582:	4798      	blx	r3
 8012584:	e013      	b.n	80125ae <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012586:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801258a:	d0f7      	beq.n	801257c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801258c:	d804      	bhi.n	8012598 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801258e:	2b80      	cmp	r3, #128	; 0x80
 8012590:	d0f4      	beq.n	801257c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012592:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8012596:	e7f0      	b.n	801257a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8012598:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801259c:	d0ee      	beq.n	801257c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801259e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80125a2:	e7e5      	b.n	8012570 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80125a4:	6823      	ldr	r3, [r4, #0]
 80125a6:	7f01      	ldrb	r1, [r0, #28]
 80125a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80125aa:	4620      	mov	r0, r4
 80125ac:	4798      	blx	r3
 80125ae:	6823      	ldr	r3, [r4, #0]
 80125b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80125b2:	e006      	b.n	80125c2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80125b4:	6823      	ldr	r3, [r4, #0]
 80125b6:	7f01      	ldrb	r1, [r0, #28]
 80125b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80125ba:	4620      	mov	r0, r4
 80125bc:	4798      	blx	r3
 80125be:	6823      	ldr	r3, [r4, #0]
 80125c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80125c2:	4629      	mov	r1, r5
 80125c4:	4620      	mov	r0, r4
 80125c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80125ca:	4718      	bx	r3
 80125cc:	6823      	ldr	r3, [r4, #0]
 80125ce:	4620      	mov	r0, r4
 80125d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80125d2:	4798      	blx	r3
 80125d4:	e7f3      	b.n	80125be <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080125d6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80125d6:	4770      	bx	lr

080125d8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80125d8:	4770      	bx	lr

080125da <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80125da:	4770      	bx	lr

080125dc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80125dc:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80125e0:	1ad2      	subs	r2, r2, r3
 80125e2:	2a00      	cmp	r2, #0
 80125e4:	b510      	push	{r4, lr}
 80125e6:	bfdc      	itt	le
 80125e8:	6884      	ldrle	r4, [r0, #8]
 80125ea:	1912      	addle	r2, r2, r4
 80125ec:	2a01      	cmp	r2, #1
 80125ee:	dd16      	ble.n	801261e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80125f0:	6842      	ldr	r2, [r0, #4]
 80125f2:	2424      	movs	r4, #36	; 0x24
 80125f4:	fb04 2303 	mla	r3, r4, r3, r2
 80125f8:	f101 0220 	add.w	r2, r1, #32
 80125fc:	f851 4b04 	ldr.w	r4, [r1], #4
 8012600:	f843 4b04 	str.w	r4, [r3], #4
 8012604:	4291      	cmp	r1, r2
 8012606:	d1f9      	bne.n	80125fc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8012608:	780a      	ldrb	r2, [r1, #0]
 801260a:	701a      	strb	r2, [r3, #0]
 801260c:	68c3      	ldr	r3, [r0, #12]
 801260e:	6882      	ldr	r2, [r0, #8]
 8012610:	f3bf 8f5b 	dmb	ish
 8012614:	3301      	adds	r3, #1
 8012616:	429a      	cmp	r2, r3
 8012618:	bfd8      	it	le
 801261a:	1a9b      	suble	r3, r3, r2
 801261c:	60c3      	str	r3, [r0, #12]
 801261e:	bd10      	pop	{r4, pc}

08012620 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8012620:	6903      	ldr	r3, [r0, #16]
 8012622:	6882      	ldr	r2, [r0, #8]
 8012624:	f3bf 8f5b 	dmb	ish
 8012628:	3301      	adds	r3, #1
 801262a:	429a      	cmp	r2, r3
 801262c:	bfd8      	it	le
 801262e:	1a9b      	suble	r3, r3, r2
 8012630:	6103      	str	r3, [r0, #16]
 8012632:	4770      	bx	lr

08012634 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8012634:	b570      	push	{r4, r5, r6, lr}
 8012636:	4604      	mov	r4, r0
 8012638:	460e      	mov	r6, r1
 801263a:	6860      	ldr	r0, [r4, #4]
 801263c:	6803      	ldr	r3, [r0, #0]
 801263e:	685b      	ldr	r3, [r3, #4]
 8012640:	4798      	blx	r3
 8012642:	2800      	cmp	r0, #0
 8012644:	d1f9      	bne.n	801263a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8012646:	4d0d      	ldr	r5, [pc, #52]	; (801267c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8012648:	6828      	ldr	r0, [r5, #0]
 801264a:	6803      	ldr	r3, [r0, #0]
 801264c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801264e:	4798      	blx	r3
 8012650:	f7ef fd76 	bl	8002140 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8012654:	6828      	ldr	r0, [r5, #0]
 8012656:	2101      	movs	r1, #1
 8012658:	f7ff ff12 	bl	8012480 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801265c:	6860      	ldr	r0, [r4, #4]
 801265e:	6803      	ldr	r3, [r0, #0]
 8012660:	4631      	mov	r1, r6
 8012662:	689b      	ldr	r3, [r3, #8]
 8012664:	4798      	blx	r3
 8012666:	6823      	ldr	r3, [r4, #0]
 8012668:	4620      	mov	r0, r4
 801266a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801266c:	4798      	blx	r3
 801266e:	6828      	ldr	r0, [r5, #0]
 8012670:	6803      	ldr	r3, [r0, #0]
 8012672:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012676:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012678:	4718      	bx	r3
 801267a:	bf00      	nop
 801267c:	20013834 	.word	0x20013834

08012680 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8012680:	b508      	push	{r3, lr}
 8012682:	f7ef fd4f 	bl	8002124 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012686:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801268a:	f7ef bd53 	b.w	8002134 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801268e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801268e:	b510      	push	{r4, lr}
 8012690:	2114      	movs	r1, #20
 8012692:	4604      	mov	r4, r0
 8012694:	f018 fbc9 	bl	802ae2a <_ZdlPvj>
 8012698:	4620      	mov	r0, r4
 801269a:	bd10      	pop	{r4, pc}

0801269c <_ZN8touchgfx13DMA_Interface5startEv>:
 801269c:	b510      	push	{r4, lr}
 801269e:	4604      	mov	r4, r0
 80126a0:	6840      	ldr	r0, [r0, #4]
 80126a2:	6803      	ldr	r3, [r0, #0]
 80126a4:	681b      	ldr	r3, [r3, #0]
 80126a6:	4798      	blx	r3
 80126a8:	b948      	cbnz	r0, 80126be <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80126aa:	7a63      	ldrb	r3, [r4, #9]
 80126ac:	b13b      	cbz	r3, 80126be <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80126ae:	7a23      	ldrb	r3, [r4, #8]
 80126b0:	b92b      	cbnz	r3, 80126be <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80126b2:	6823      	ldr	r3, [r4, #0]
 80126b4:	4620      	mov	r0, r4
 80126b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80126b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126bc:	4718      	bx	r3
 80126be:	bd10      	pop	{r4, pc}

080126c0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80126c0:	b570      	push	{r4, r5, r6, lr}
 80126c2:	4604      	mov	r4, r0
 80126c4:	6840      	ldr	r0, [r0, #4]
 80126c6:	6803      	ldr	r3, [r0, #0]
 80126c8:	681b      	ldr	r3, [r3, #0]
 80126ca:	4798      	blx	r3
 80126cc:	4605      	mov	r5, r0
 80126ce:	b930      	cbnz	r0, 80126de <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80126d0:	7a23      	ldrb	r3, [r4, #8]
 80126d2:	b123      	cbz	r3, 80126de <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80126d4:	6860      	ldr	r0, [r4, #4]
 80126d6:	6803      	ldr	r3, [r0, #0]
 80126d8:	695b      	ldr	r3, [r3, #20]
 80126da:	4798      	blx	r3
 80126dc:	7225      	strb	r5, [r4, #8]
 80126de:	6860      	ldr	r0, [r4, #4]
 80126e0:	6803      	ldr	r3, [r0, #0]
 80126e2:	681b      	ldr	r3, [r3, #0]
 80126e4:	4798      	blx	r3
 80126e6:	b928      	cbnz	r0, 80126f4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80126e8:	6823      	ldr	r3, [r4, #0]
 80126ea:	4620      	mov	r0, r4
 80126ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80126ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126f2:	4718      	bx	r3
 80126f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126f8:	f7ef bd2a 	b.w	8002150 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080126fc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80126fc:	b510      	push	{r4, lr}
 80126fe:	4c04      	ldr	r4, [pc, #16]	; (8012710 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8012700:	6082      	str	r2, [r0, #8]
 8012702:	2200      	movs	r2, #0
 8012704:	e9c0 4100 	strd	r4, r1, [r0]
 8012708:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801270c:	bd10      	pop	{r4, pc}
 801270e:	bf00      	nop
 8012710:	0802f844 	.word	0x0802f844

08012714 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8012714:	6840      	ldr	r0, [r0, #4]
 8012716:	6803      	ldr	r3, [r0, #0]
 8012718:	681b      	ldr	r3, [r3, #0]
 801271a:	4718      	bx	r3

0801271c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801271c:	4b06      	ldr	r3, [pc, #24]	; (8012738 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801271e:	60c1      	str	r1, [r0, #12]
 8012720:	094a      	lsrs	r2, r1, #5
 8012722:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8012726:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801272a:	4313      	orrs	r3, r2
 801272c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012730:	4319      	orrs	r1, r3
 8012732:	8201      	strh	r1, [r0, #16]
 8012734:	4770      	bx	lr
 8012736:	bf00      	nop
 8012738:	fffff800 	.word	0xfffff800

0801273c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801273c:	f1a0 0008 	sub.w	r0, r0, #8
 8012740:	e7ec      	b.n	801271c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8012742:	bf00      	nop

08012744 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8012744:	b508      	push	{r3, lr}
 8012746:	4b05      	ldr	r3, [pc, #20]	; (801275c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8012748:	6818      	ldr	r0, [r3, #0]
 801274a:	6803      	ldr	r3, [r0, #0]
 801274c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012750:	4798      	blx	r3
 8012752:	1e43      	subs	r3, r0, #1
 8012754:	4258      	negs	r0, r3
 8012756:	4158      	adcs	r0, r3
 8012758:	bd08      	pop	{r3, pc}
 801275a:	bf00      	nop
 801275c:	20013834 	.word	0x20013834

08012760 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8012760:	4770      	bx	lr

08012762 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8012762:	3808      	subs	r0, #8
 8012764:	4770      	bx	lr

08012766 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8012766:	b430      	push	{r4, r5}
 8012768:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801276c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8012770:	8a02      	ldrh	r2, [r0, #16]
 8012772:	9202      	str	r2, [sp, #8]
 8012774:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012778:	68c2      	ldr	r2, [r0, #12]
 801277a:	4629      	mov	r1, r5
 801277c:	4620      	mov	r0, r4
 801277e:	bc30      	pop	{r4, r5}
 8012780:	f7ef bfaa 	b.w	80026d8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08012784 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8012784:	f7ef bfa6 	b.w	80026d4 <_ZN8touchgfx5paint8tearDownEv>

08012788 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8012788:	b510      	push	{r4, lr}
 801278a:	2114      	movs	r1, #20
 801278c:	4604      	mov	r4, r0
 801278e:	f018 fb4c 	bl	802ae2a <_ZdlPvj>
 8012792:	4620      	mov	r0, r4
 8012794:	bd10      	pop	{r4, pc}

08012796 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8012796:	f1a0 0008 	sub.w	r0, r0, #8
 801279a:	e7f5      	b.n	8012788 <_ZN8touchgfx13PainterRGB565D0Ev>

0801279c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 801279c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801279e:	6803      	ldr	r3, [r0, #0]
 80127a0:	460d      	mov	r5, r1
 80127a2:	4604      	mov	r4, r0
 80127a4:	4601      	mov	r1, r0
 80127a6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80127a8:	a802      	add	r0, sp, #8
 80127aa:	4798      	blx	r3
 80127ac:	6828      	ldr	r0, [r5, #0]
 80127ae:	6869      	ldr	r1, [r5, #4]
 80127b0:	466b      	mov	r3, sp
 80127b2:	c303      	stmia	r3!, {r0, r1}
 80127b4:	4668      	mov	r0, sp
 80127b6:	4619      	mov	r1, r3
 80127b8:	f7fe fb30 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 80127bc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80127be:	b188      	cbz	r0, 80127e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127c0:	6803      	ldr	r3, [r0, #0]
 80127c2:	1d21      	adds	r1, r4, #4
 80127c4:	68db      	ldr	r3, [r3, #12]
 80127c6:	4798      	blx	r3
 80127c8:	b160      	cbz	r0, 80127e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127ca:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80127ce:	2b00      	cmp	r3, #0
 80127d0:	dd08      	ble.n	80127e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127d2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80127d6:	2d00      	cmp	r5, #0
 80127d8:	dd04      	ble.n	80127e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127da:	4a2b      	ldr	r2, [pc, #172]	; (8012888 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80127dc:	7812      	ldrb	r2, [r2, #0]
 80127de:	b11a      	cbz	r2, 80127e8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80127e0:	2a01      	cmp	r2, #1
 80127e2:	d029      	beq.n	8012838 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80127e4:	b004      	add	sp, #16
 80127e6:	bd70      	pop	{r4, r5, r6, pc}
 80127e8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80127ec:	441d      	add	r5, r3
 80127ee:	b2ad      	uxth	r5, r5
 80127f0:	b22e      	sxth	r6, r5
 80127f2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80127f6:	42b3      	cmp	r3, r6
 80127f8:	daf4      	bge.n	80127e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80127fa:	6823      	ldr	r3, [r4, #0]
 80127fc:	4669      	mov	r1, sp
 80127fe:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012800:	4620      	mov	r0, r4
 8012802:	4798      	blx	r3
 8012804:	b940      	cbnz	r0, 8012818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8012806:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801280a:	2b01      	cmp	r3, #1
 801280c:	d004      	beq.n	8012818 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801280e:	3301      	adds	r3, #1
 8012810:	105b      	asrs	r3, r3, #1
 8012812:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012816:	e7f0      	b.n	80127fa <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8012818:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801281c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012820:	4413      	add	r3, r2
 8012822:	b29b      	uxth	r3, r3
 8012824:	441a      	add	r2, r3
 8012826:	b212      	sxth	r2, r2
 8012828:	4296      	cmp	r6, r2
 801282a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801282e:	dae0      	bge.n	80127f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012830:	1aeb      	subs	r3, r5, r3
 8012832:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012836:	e7dc      	b.n	80127f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012838:	f8bd 5000 	ldrh.w	r5, [sp]
 801283c:	441d      	add	r5, r3
 801283e:	b2ad      	uxth	r5, r5
 8012840:	b22e      	sxth	r6, r5
 8012842:	f9bd 3000 	ldrsh.w	r3, [sp]
 8012846:	42b3      	cmp	r3, r6
 8012848:	dacc      	bge.n	80127e4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801284a:	6823      	ldr	r3, [r4, #0]
 801284c:	4669      	mov	r1, sp
 801284e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012850:	4620      	mov	r0, r4
 8012852:	4798      	blx	r3
 8012854:	b940      	cbnz	r0, 8012868 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8012856:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801285a:	2b01      	cmp	r3, #1
 801285c:	d004      	beq.n	8012868 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801285e:	3301      	adds	r3, #1
 8012860:	105b      	asrs	r3, r3, #1
 8012862:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012866:	e7f0      	b.n	801284a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8012868:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801286c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012870:	4413      	add	r3, r2
 8012872:	b29b      	uxth	r3, r3
 8012874:	441a      	add	r2, r3
 8012876:	b212      	sxth	r2, r2
 8012878:	4296      	cmp	r6, r2
 801287a:	f8ad 3000 	strh.w	r3, [sp]
 801287e:	dae0      	bge.n	8012842 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012880:	1aeb      	subs	r3, r5, r3
 8012882:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012886:	e7dc      	b.n	8012842 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012888:	2001382c 	.word	0x2001382c

0801288c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801288c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801288e:	6803      	ldr	r3, [r0, #0]
 8012890:	4604      	mov	r4, r0
 8012892:	4601      	mov	r1, r0
 8012894:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012896:	4668      	mov	r0, sp
 8012898:	4798      	blx	r3
 801289a:	2100      	movs	r1, #0
 801289c:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80128a0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80128a4:	9102      	str	r1, [sp, #8]
 80128a6:	4668      	mov	r0, sp
 80128a8:	a902      	add	r1, sp, #8
 80128aa:	f8ad 200c 	strh.w	r2, [sp, #12]
 80128ae:	f8ad 300e 	strh.w	r3, [sp, #14]
 80128b2:	f7fe fab3 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 80128b6:	6823      	ldr	r3, [r4, #0]
 80128b8:	4669      	mov	r1, sp
 80128ba:	691b      	ldr	r3, [r3, #16]
 80128bc:	4620      	mov	r0, r4
 80128be:	4798      	blx	r3
 80128c0:	b004      	add	sp, #16
 80128c2:	bd10      	pop	{r4, pc}

080128c4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80128c4:	2101      	movs	r1, #1
 80128c6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80128ca:	490b      	ldr	r1, [pc, #44]	; (80128f8 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80128cc:	6001      	str	r1, [r0, #0]
 80128ce:	2200      	movs	r2, #0
 80128d0:	21ff      	movs	r1, #255	; 0xff
 80128d2:	8082      	strh	r2, [r0, #4]
 80128d4:	80c2      	strh	r2, [r0, #6]
 80128d6:	8102      	strh	r2, [r0, #8]
 80128d8:	8142      	strh	r2, [r0, #10]
 80128da:	8182      	strh	r2, [r0, #12]
 80128dc:	81c2      	strh	r2, [r0, #14]
 80128de:	8202      	strh	r2, [r0, #16]
 80128e0:	8242      	strh	r2, [r0, #18]
 80128e2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80128e6:	61c2      	str	r2, [r0, #28]
 80128e8:	8402      	strh	r2, [r0, #32]
 80128ea:	8442      	strh	r2, [r0, #34]	; 0x22
 80128ec:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80128f0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80128f4:	6282      	str	r2, [r0, #40]	; 0x28
 80128f6:	4770      	bx	lr
 80128f8:	0802f8a0 	.word	0x0802f8a0

080128fc <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80128fc:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8012900:	4602      	mov	r2, r0
 8012902:	cb03      	ldmia	r3!, {r0, r1}
 8012904:	6010      	str	r0, [r2, #0]
 8012906:	6051      	str	r1, [r2, #4]
 8012908:	4610      	mov	r0, r2
 801290a:	4770      	bx	lr

0801290c <_ZN8touchgfx4LineD1Ev>:
 801290c:	4770      	bx	lr

0801290e <_ZN8touchgfx4LineD0Ev>:
 801290e:	b510      	push	{r4, lr}
 8012910:	2170      	movs	r1, #112	; 0x70
 8012912:	4604      	mov	r4, r0
 8012914:	f018 fa89 	bl	802ae2a <_ZdlPvj>
 8012918:	4620      	mov	r0, r4
 801291a:	bd10      	pop	{r4, pc}

0801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 801291c:	b507      	push	{r0, r1, r2, lr}
 801291e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8012922:	ab01      	add	r3, sp, #4
 8012924:	6809      	ldr	r1, [r1, #0]
 8012926:	6800      	ldr	r0, [r0, #0]
 8012928:	f005 fc80 	bl	801822c <_ZN8touchgfx6muldivElllRl>
 801292c:	b003      	add	sp, #12
 801292e:	f85d fb04 	ldr.w	pc, [sp], #4

08012932 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8012932:	6800      	ldr	r0, [r0, #0]
 8012934:	2800      	cmp	r0, #0
 8012936:	bfb9      	ittee	lt
 8012938:	2320      	movlt	r3, #32
 801293a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801293e:	301f      	addge	r0, #31
 8012940:	1140      	asrge	r0, r0, #5
 8012942:	4770      	bx	lr

08012944 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8012944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012948:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801294c:	b089      	sub	sp, #36	; 0x24
 801294e:	4604      	mov	r4, r0
 8012950:	b353      	cbz	r3, 80129a8 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8012952:	6803      	ldr	r3, [r0, #0]
 8012954:	4601      	mov	r1, r0
 8012956:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012958:	a802      	add	r0, sp, #8
 801295a:	4798      	blx	r3
 801295c:	2220      	movs	r2, #32
 801295e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8012962:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012964:	fb9a f0f2 	sdiv	r0, sl, r2
 8012968:	fb91 f5f2 	sdiv	r5, r1, r2
 801296c:	1b40      	subs	r0, r0, r5
 801296e:	2800      	cmp	r0, #0
 8012970:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012972:	fb93 f6f2 	sdiv	r6, r3, r2
 8012976:	bfb8      	it	lt
 8012978:	4240      	neglt	r0, r0
 801297a:	0076      	lsls	r6, r6, #1
 801297c:	4286      	cmp	r6, r0
 801297e:	f8d4 b000 	ldr.w	fp, [r4]
 8012982:	dc0c      	bgt.n	801299e <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8012984:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8012986:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801298a:	fb95 f0f2 	sdiv	r0, r5, r2
 801298e:	fb98 f7f2 	sdiv	r7, r8, r2
 8012992:	1bc0      	subs	r0, r0, r7
 8012994:	2800      	cmp	r0, #0
 8012996:	bfb8      	it	lt
 8012998:	4240      	neglt	r0, r0
 801299a:	4286      	cmp	r6, r0
 801299c:	dd07      	ble.n	80129ae <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 801299e:	f8db 3010 	ldr.w	r3, [fp, #16]
 80129a2:	a902      	add	r1, sp, #8
 80129a4:	4620      	mov	r0, r4
 80129a6:	4798      	blx	r3
 80129a8:	b009      	add	sp, #36	; 0x24
 80129aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80129ae:	3301      	adds	r3, #1
 80129b0:	2002      	movs	r0, #2
 80129b2:	f10d 0920 	add.w	r9, sp, #32
 80129b6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80129ba:	4103      	asrs	r3, r0
 80129bc:	f849 3d08 	str.w	r3, [r9, #-8]!
 80129c0:	eb01 060a 	add.w	r6, r1, sl
 80129c4:	eb08 0705 	add.w	r7, r8, r5
 80129c8:	fb96 f6f0 	sdiv	r6, r6, r0
 80129cc:	fb97 f7f0 	sdiv	r7, r7, r0
 80129d0:	4648      	mov	r0, r9
 80129d2:	9101      	str	r1, [sp, #4]
 80129d4:	b236      	sxth	r6, r6
 80129d6:	b23f      	sxth	r7, r7
 80129d8:	fb96 f6f2 	sdiv	r6, r6, r2
 80129dc:	fb97 f7f2 	sdiv	r7, r7, r2
 80129e0:	f7ff ffa7 	bl	8012932 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80129e4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80129e8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80129ec:	9901      	ldr	r1, [sp, #4]
 80129ee:	4293      	cmp	r3, r2
 80129f0:	fa1f fe87 	uxth.w	lr, r7
 80129f4:	fa1f fc86 	uxth.w	ip, r6
 80129f8:	eba1 0a0a 	sub.w	sl, r1, sl
 80129fc:	b280      	uxth	r0, r0
 80129fe:	da54      	bge.n	8012aaa <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8012a00:	ebac 0100 	sub.w	r1, ip, r0
 8012a04:	b289      	uxth	r1, r1
 8012a06:	4460      	add	r0, ip
 8012a08:	f1ba 0f00 	cmp.w	sl, #0
 8012a0c:	b20e      	sxth	r6, r1
 8012a0e:	b280      	uxth	r0, r0
 8012a10:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8012a14:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8012a18:	da29      	bge.n	8012a6e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8012a1a:	eba8 0505 	sub.w	r5, r8, r5
 8012a1e:	2d00      	cmp	r5, #0
 8012a20:	da2a      	bge.n	8012a78 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012a22:	fa1f f88a 	uxth.w	r8, sl
 8012a26:	eba0 0008 	sub.w	r0, r0, r8
 8012a2a:	fa1f f58c 	uxth.w	r5, ip
 8012a2e:	4443      	add	r3, r8
 8012a30:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012a34:	1a59      	subs	r1, r3, r1
 8012a36:	ebae 0005 	sub.w	r0, lr, r5
 8012a3a:	f8ad a010 	strh.w	sl, [sp, #16]
 8012a3e:	f8ad c012 	strh.w	ip, [sp, #18]
 8012a42:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012a46:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012a4a:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012a4e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012a52:	442a      	add	r2, r5
 8012a54:	eba2 0e0e 	sub.w	lr, r2, lr
 8012a58:	f8ad e01e 	strh.w	lr, [sp, #30]
 8012a5c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012a60:	a904      	add	r1, sp, #16
 8012a62:	4620      	mov	r0, r4
 8012a64:	4798      	blx	r3
 8012a66:	6823      	ldr	r3, [r4, #0]
 8012a68:	4649      	mov	r1, r9
 8012a6a:	691b      	ldr	r3, [r3, #16]
 8012a6c:	e79a      	b.n	80129a4 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8012a6e:	d003      	beq.n	8012a78 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012a70:	eba8 0505 	sub.w	r5, r8, r5
 8012a74:	2d00      	cmp	r5, #0
 8012a76:	dcd4      	bgt.n	8012a22 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8012a78:	fa1f f88a 	uxth.w	r8, sl
 8012a7c:	4443      	add	r3, r8
 8012a7e:	fa1f f58c 	uxth.w	r5, ip
 8012a82:	1a59      	subs	r1, r3, r1
 8012a84:	eba0 0008 	sub.w	r0, r0, r8
 8012a88:	ebae 0305 	sub.w	r3, lr, r5
 8012a8c:	f8ad 6010 	strh.w	r6, [sp, #16]
 8012a90:	f8ad c012 	strh.w	ip, [sp, #18]
 8012a94:	f8ad 1014 	strh.w	r1, [sp, #20]
 8012a98:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012a9c:	f8ad a018 	strh.w	sl, [sp, #24]
 8012aa0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012aa4:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012aa8:	e7d3      	b.n	8012a52 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8012aaa:	ebae 0100 	sub.w	r1, lr, r0
 8012aae:	b289      	uxth	r1, r1
 8012ab0:	4470      	add	r0, lr
 8012ab2:	f1ba 0f00 	cmp.w	sl, #0
 8012ab6:	b20f      	sxth	r7, r1
 8012ab8:	b280      	uxth	r0, r0
 8012aba:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8012abe:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8012ac2:	da20      	bge.n	8012b06 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8012ac4:	eba8 0505 	sub.w	r5, r8, r5
 8012ac8:	2d00      	cmp	r5, #0
 8012aca:	da21      	bge.n	8012b10 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012acc:	fa1f f88e 	uxth.w	r8, lr
 8012ad0:	fa1f f58a 	uxth.w	r5, sl
 8012ad4:	4443      	add	r3, r8
 8012ad6:	442a      	add	r2, r5
 8012ad8:	f8ad e010 	strh.w	lr, [sp, #16]
 8012adc:	1b40      	subs	r0, r0, r5
 8012ade:	ebac 0e08 	sub.w	lr, ip, r8
 8012ae2:	1a51      	subs	r1, r2, r1
 8012ae4:	eba3 0c0c 	sub.w	ip, r3, ip
 8012ae8:	f8ad a012 	strh.w	sl, [sp, #18]
 8012aec:	f8ad e014 	strh.w	lr, [sp, #20]
 8012af0:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012af4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012af8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012afc:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012b00:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012b04:	e7aa      	b.n	8012a5c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8012b06:	d003      	beq.n	8012b10 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012b08:	eba8 0505 	sub.w	r5, r8, r5
 8012b0c:	2d00      	cmp	r5, #0
 8012b0e:	dcdd      	bgt.n	8012acc <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8012b10:	fa1f f58e 	uxth.w	r5, lr
 8012b14:	fa1f f88a 	uxth.w	r8, sl
 8012b18:	4442      	add	r2, r8
 8012b1a:	442b      	add	r3, r5
 8012b1c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8012b20:	1a51      	subs	r1, r2, r1
 8012b22:	ebac 0705 	sub.w	r7, ip, r5
 8012b26:	eba0 0008 	sub.w	r0, r0, r8
 8012b2a:	eba3 0c0c 	sub.w	ip, r3, ip
 8012b2e:	f8ad e010 	strh.w	lr, [sp, #16]
 8012b32:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012b36:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012b3a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012b3e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8012b42:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012b46:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012b4a:	e787      	b.n	8012a5c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08012b4c <_ZN8touchgfx7CWRUtil4sineEi>:
 8012b4c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8012b50:	fb90 f2f3 	sdiv	r2, r0, r3
 8012b54:	fb02 0013 	mls	r0, r2, r3, r0
 8012b58:	2800      	cmp	r0, #0
 8012b5a:	bfb8      	it	lt
 8012b5c:	18c0      	addlt	r0, r0, r3
 8012b5e:	285a      	cmp	r0, #90	; 0x5a
 8012b60:	4b09      	ldr	r3, [pc, #36]	; (8012b88 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012b62:	dc02      	bgt.n	8012b6a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012b64:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012b68:	4770      	bx	lr
 8012b6a:	28b4      	cmp	r0, #180	; 0xb4
 8012b6c:	dc02      	bgt.n	8012b74 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8012b6e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8012b72:	e7f7      	b.n	8012b64 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012b74:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8012b78:	bfd4      	ite	le
 8012b7a:	38b4      	suble	r0, #180	; 0xb4
 8012b7c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8012b80:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012b84:	4240      	negs	r0, r0
 8012b86:	4770      	bx	lr
 8012b88:	0802f96c 	.word	0x0802f96c

08012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8012b8c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8012b90:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012b92:	fb90 f2f3 	sdiv	r2, r0, r3
 8012b96:	fb02 0013 	mls	r0, r2, r3, r0
 8012b9a:	2800      	cmp	r0, #0
 8012b9c:	bfb8      	it	lt
 8012b9e:	18c0      	addlt	r0, r0, r3
 8012ba0:	1144      	asrs	r4, r0, #5
 8012ba2:	f000 061f 	and.w	r6, r0, #31
 8012ba6:	4620      	mov	r0, r4
 8012ba8:	f7ff ffd0 	bl	8012b4c <_ZN8touchgfx7CWRUtil4sineEi>
 8012bac:	4605      	mov	r5, r0
 8012bae:	b90e      	cbnz	r6, 8012bb4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8012bb0:	b002      	add	sp, #8
 8012bb2:	bd70      	pop	{r4, r5, r6, pc}
 8012bb4:	1c60      	adds	r0, r4, #1
 8012bb6:	f7ff ffc9 	bl	8012b4c <_ZN8touchgfx7CWRUtil4sineEi>
 8012bba:	ab01      	add	r3, sp, #4
 8012bbc:	2220      	movs	r2, #32
 8012bbe:	4631      	mov	r1, r6
 8012bc0:	1b40      	subs	r0, r0, r5
 8012bc2:	f005 fb33 	bl	801822c <_ZN8touchgfx6muldivElllRl>
 8012bc6:	4428      	add	r0, r5
 8012bc8:	e7f2      	b.n	8012bb0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08012bca <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8012bca:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8012bce:	bf2c      	ite	cs
 8012bd0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8012bd4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8012bd8:	2300      	movs	r3, #0
 8012bda:	1899      	adds	r1, r3, r2
 8012bdc:	4288      	cmp	r0, r1
 8012bde:	bf24      	itt	cs
 8012be0:	1853      	addcs	r3, r2, r1
 8012be2:	1a40      	subcs	r0, r0, r1
 8012be4:	0892      	lsrs	r2, r2, #2
 8012be6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8012bea:	d1f6      	bne.n	8012bda <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8012bec:	4618      	mov	r0, r3
 8012bee:	4770      	bx	lr

08012bf0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012bf0:	b510      	push	{r4, lr}
 8012bf2:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8012bf6:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8012bfa:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8012bfe:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8012c02:	13a4      	asrs	r4, r4, #14
 8012c04:	139b      	asrs	r3, r3, #14
 8012c06:	429c      	cmp	r4, r3
 8012c08:	bfb8      	it	lt
 8012c0a:	461c      	movlt	r4, r3
 8012c0c:	2c01      	cmp	r4, #1
 8012c0e:	dd07      	ble.n	8012c20 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012c10:	fb91 f1f4 	sdiv	r1, r1, r4
 8012c14:	fb90 f0f4 	sdiv	r0, r0, r4
 8012c18:	f7ff ffea 	bl	8012bf0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012c1c:	4360      	muls	r0, r4
 8012c1e:	bd10      	pop	{r4, pc}
 8012c20:	4340      	muls	r0, r0
 8012c22:	fb01 0001 	mla	r0, r1, r1, r0
 8012c26:	f7ff ffd0 	bl	8012bca <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012c2a:	e7f8      	b.n	8012c1e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08012c2c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8012c2c:	2800      	cmp	r0, #0
 8012c2e:	b508      	push	{r3, lr}
 8012c30:	da05      	bge.n	8012c3e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8012c32:	4240      	negs	r0, r0
 8012c34:	f7ff fffa 	bl	8012c2c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012c38:	4240      	negs	r0, r0
 8012c3a:	b240      	sxtb	r0, r0
 8012c3c:	bd08      	pop	{r3, pc}
 8012c3e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8012c42:	dc11      	bgt.n	8012c68 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8012c44:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012c48:	dd09      	ble.n	8012c5e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8012c4a:	4340      	muls	r0, r0
 8012c4c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8012c50:	f7ff ffbb 	bl	8012bca <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012c54:	f7ff ffea 	bl	8012c2c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012c58:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012c5c:	e7ed      	b.n	8012c3a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8012c5e:	3003      	adds	r0, #3
 8012c60:	10c0      	asrs	r0, r0, #3
 8012c62:	4b02      	ldr	r3, [pc, #8]	; (8012c6c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8012c64:	5618      	ldrsb	r0, [r3, r0]
 8012c66:	e7e9      	b.n	8012c3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012c68:	2000      	movs	r0, #0
 8012c6a:	e7e7      	b.n	8012c3c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012c6c:	0802f910 	.word	0x0802f910

08012c70 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012c70:	4281      	cmp	r1, r0
 8012c72:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012c74:	460c      	mov	r4, r1
 8012c76:	4615      	mov	r5, r2
 8012c78:	dd07      	ble.n	8012c8a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8012c7a:	4601      	mov	r1, r0
 8012c7c:	4620      	mov	r0, r4
 8012c7e:	f7ff fff7 	bl	8012c70 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012c82:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012c86:	b003      	add	sp, #12
 8012c88:	bd30      	pop	{r4, r5, pc}
 8012c8a:	f7ff ffb1 	bl	8012bf0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012c8e:	6028      	str	r0, [r5, #0]
 8012c90:	2800      	cmp	r0, #0
 8012c92:	d0f8      	beq.n	8012c86 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8012c94:	4602      	mov	r2, r0
 8012c96:	ab01      	add	r3, sp, #4
 8012c98:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8012c9c:	4620      	mov	r0, r4
 8012c9e:	f005 fac5 	bl	801822c <_ZN8touchgfx6muldivElllRl>
 8012ca2:	f7ff ffc3 	bl	8012c2c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012ca6:	e7ee      	b.n	8012c86 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08012ca8 <_ZN8touchgfx4LineC1Ev>:
 8012ca8:	b510      	push	{r4, lr}
 8012caa:	4604      	mov	r4, r0
 8012cac:	f7ff fe0a 	bl	80128c4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8012cb0:	4b0c      	ldr	r3, [pc, #48]	; (8012ce4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8012cb2:	6023      	str	r3, [r4, #0]
 8012cb4:	2220      	movs	r2, #32
 8012cb6:	2300      	movs	r3, #0
 8012cb8:	63e2      	str	r2, [r4, #60]	; 0x3c
 8012cba:	2212      	movs	r2, #18
 8012cbc:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8012cc0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8012cc4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8012cc8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8012ccc:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8012cd0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8012cd4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8012cd8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8012cdc:	66e2      	str	r2, [r4, #108]	; 0x6c
 8012cde:	60a3      	str	r3, [r4, #8]
 8012ce0:	4620      	mov	r0, r4
 8012ce2:	bd10      	pop	{r4, pc}
 8012ce4:	0802fa2c 	.word	0x0802fa2c

08012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8012ce8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012cec:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8012cee:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012cf0:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012cf2:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8012cf4:	1aff      	subs	r7, r7, r3
 8012cf6:	4604      	mov	r4, r0
 8012cf8:	eba5 0502 	sub.w	r5, r5, r2
 8012cfc:	d142      	bne.n	8012d84 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8012cfe:	b955      	cbnz	r5, 8012d16 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012d00:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8012d04:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8012d08:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8012d0c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012d10:	b002      	add	sp, #8
 8012d12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012d16:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8012d1a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8012d1e:	4629      	mov	r1, r5
 8012d20:	4642      	mov	r2, r8
 8012d22:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012d24:	f005 faa1 	bl	801826a <_ZN8touchgfx6muldivElll>
 8012d28:	2502      	movs	r5, #2
 8012d2a:	4642      	mov	r2, r8
 8012d2c:	fb90 f6f5 	sdiv	r6, r0, r5
 8012d30:	4639      	mov	r1, r7
 8012d32:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012d34:	f005 fa99 	bl	801826a <_ZN8touchgfx6muldivElll>
 8012d38:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8012d3c:	fb90 f5f5 	sdiv	r5, r0, r5
 8012d40:	f1b9 0f00 	cmp.w	r9, #0
 8012d44:	d067      	beq.n	8012e16 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8012d46:	f1b9 0f02 	cmp.w	r9, #2
 8012d4a:	d878      	bhi.n	8012e3e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8012d4c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012d4e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012d50:	1b93      	subs	r3, r2, r6
 8012d52:	1b5b      	subs	r3, r3, r5
 8012d54:	6463      	str	r3, [r4, #68]	; 0x44
 8012d56:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012d58:	18e9      	adds	r1, r5, r3
 8012d5a:	1b89      	subs	r1, r1, r6
 8012d5c:	6561      	str	r1, [r4, #84]	; 0x54
 8012d5e:	1b81      	subs	r1, r0, r6
 8012d60:	4429      	add	r1, r5
 8012d62:	64a1      	str	r1, [r4, #72]	; 0x48
 8012d64:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012d66:	4430      	add	r0, r6
 8012d68:	186f      	adds	r7, r5, r1
 8012d6a:	4432      	add	r2, r6
 8012d6c:	1b49      	subs	r1, r1, r5
 8012d6e:	4437      	add	r7, r6
 8012d70:	4428      	add	r0, r5
 8012d72:	4431      	add	r1, r6
 8012d74:	1b52      	subs	r2, r2, r5
 8012d76:	1b5b      	subs	r3, r3, r5
 8012d78:	65a7      	str	r7, [r4, #88]	; 0x58
 8012d7a:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012d7c:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012d7e:	6522      	str	r2, [r4, #80]	; 0x50
 8012d80:	1b9b      	subs	r3, r3, r6
 8012d82:	e05b      	b.n	8012e3c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8012d84:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012d88:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8012d8c:	2d00      	cmp	r5, #0
 8012d8e:	d0c6      	beq.n	8012d1e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012d90:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8012d94:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8012d98:	fb93 f2f8 	sdiv	r2, r3, r8
 8012d9c:	fb08 3312 	mls	r3, r8, r2, r3
 8012da0:	b353      	cbz	r3, 8012df8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8012da2:	fb98 f2f3 	sdiv	r2, r8, r3
 8012da6:	fb03 8812 	mls	r8, r3, r2, r8
 8012daa:	f1b8 0f00 	cmp.w	r8, #0
 8012dae:	d1f3      	bne.n	8012d98 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8012db0:	2b01      	cmp	r3, #1
 8012db2:	bf1c      	itt	ne
 8012db4:	fb95 f5f3 	sdivne	r5, r5, r3
 8012db8:	fb97 f7f3 	sdivne	r7, r7, r3
 8012dbc:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8012dc0:	f24b 5104 	movw	r1, #46340	; 0xb504
 8012dc4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8012dc8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8012dcc:	428b      	cmp	r3, r1
 8012dce:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8012dd2:	4608      	mov	r0, r1
 8012dd4:	dd01      	ble.n	8012dda <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8012dd6:	428a      	cmp	r2, r1
 8012dd8:	dc10      	bgt.n	8012dfc <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8012dda:	fb90 f3f3 	sdiv	r3, r0, r3
 8012dde:	fb90 f2f2 	sdiv	r2, r0, r2
 8012de2:	4293      	cmp	r3, r2
 8012de4:	bfa8      	it	ge
 8012de6:	4613      	movge	r3, r2
 8012de8:	435f      	muls	r7, r3
 8012dea:	435d      	muls	r5, r3
 8012dec:	4629      	mov	r1, r5
 8012dee:	4638      	mov	r0, r7
 8012df0:	f7ff fefe 	bl	8012bf0 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012df4:	4680      	mov	r8, r0
 8012df6:	e792      	b.n	8012d1e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012df8:	4643      	mov	r3, r8
 8012dfa:	e7d9      	b.n	8012db0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8012dfc:	fb93 f3f1 	sdiv	r3, r3, r1
 8012e00:	fb92 f2f1 	sdiv	r2, r2, r1
 8012e04:	4293      	cmp	r3, r2
 8012e06:	bfcc      	ite	gt
 8012e08:	3301      	addgt	r3, #1
 8012e0a:	1c53      	addle	r3, r2, #1
 8012e0c:	fb97 f7f3 	sdiv	r7, r7, r3
 8012e10:	fb95 f5f3 	sdiv	r5, r5, r3
 8012e14:	e7ea      	b.n	8012dec <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012e16:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012e18:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012e1a:	1b93      	subs	r3, r2, r6
 8012e1c:	6463      	str	r3, [r4, #68]	; 0x44
 8012e1e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012e20:	18e9      	adds	r1, r5, r3
 8012e22:	6561      	str	r1, [r4, #84]	; 0x54
 8012e24:	1b81      	subs	r1, r0, r6
 8012e26:	64a1      	str	r1, [r4, #72]	; 0x48
 8012e28:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012e2a:	4430      	add	r0, r6
 8012e2c:	186f      	adds	r7, r5, r1
 8012e2e:	4432      	add	r2, r6
 8012e30:	1b49      	subs	r1, r1, r5
 8012e32:	65a7      	str	r7, [r4, #88]	; 0x58
 8012e34:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012e36:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012e38:	6522      	str	r2, [r4, #80]	; 0x50
 8012e3a:	1b5b      	subs	r3, r3, r5
 8012e3c:	6623      	str	r3, [r4, #96]	; 0x60
 8012e3e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012e40:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012e42:	9200      	str	r2, [sp, #0]
 8012e44:	9301      	str	r3, [sp, #4]
 8012e46:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8012e4a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8012e4e:	680f      	ldr	r7, [r1, #0]
 8012e50:	9800      	ldr	r0, [sp, #0]
 8012e52:	42ba      	cmp	r2, r7
 8012e54:	bfa8      	it	ge
 8012e56:	463a      	movge	r2, r7
 8012e58:	4287      	cmp	r7, r0
 8012e5a:	bfc8      	it	gt
 8012e5c:	9700      	strgt	r7, [sp, #0]
 8012e5e:	690f      	ldr	r7, [r1, #16]
 8012e60:	9801      	ldr	r0, [sp, #4]
 8012e62:	42bb      	cmp	r3, r7
 8012e64:	bfa8      	it	ge
 8012e66:	463b      	movge	r3, r7
 8012e68:	3104      	adds	r1, #4
 8012e6a:	4287      	cmp	r7, r0
 8012e6c:	bfc8      	it	gt
 8012e6e:	9701      	strgt	r7, [sp, #4]
 8012e70:	458c      	cmp	ip, r1
 8012e72:	d1ec      	bne.n	8012e4e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012e74:	4668      	mov	r0, sp
 8012e76:	2720      	movs	r7, #32
 8012e78:	fb92 f8f7 	sdiv	r8, r2, r7
 8012e7c:	fb93 f7f7 	sdiv	r7, r3, r7
 8012e80:	f7ff fd57 	bl	8012932 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012e84:	4682      	mov	sl, r0
 8012e86:	a801      	add	r0, sp, #4
 8012e88:	f7ff fd53 	bl	8012932 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012e8c:	ebaa 0208 	sub.w	r2, sl, r8
 8012e90:	1bc0      	subs	r0, r0, r7
 8012e92:	f1b9 0f01 	cmp.w	r9, #1
 8012e96:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8012e9a:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8012e9e:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8012ea2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8012ea6:	f47f af33 	bne.w	8012d10 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8012eaa:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8012eac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012eae:	1b83      	subs	r3, r0, r6
 8012eb0:	6463      	str	r3, [r4, #68]	; 0x44
 8012eb2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012eb4:	18ea      	adds	r2, r5, r3
 8012eb6:	6562      	str	r2, [r4, #84]	; 0x54
 8012eb8:	1b8a      	subs	r2, r1, r6
 8012eba:	64a2      	str	r2, [r4, #72]	; 0x48
 8012ebc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012ebe:	4431      	add	r1, r6
 8012ec0:	18af      	adds	r7, r5, r2
 8012ec2:	4406      	add	r6, r0
 8012ec4:	1b52      	subs	r2, r2, r5
 8012ec6:	1b5d      	subs	r5, r3, r5
 8012ec8:	65a7      	str	r7, [r4, #88]	; 0x58
 8012eca:	64e1      	str	r1, [r4, #76]	; 0x4c
 8012ecc:	65e2      	str	r2, [r4, #92]	; 0x5c
 8012ece:	6526      	str	r6, [r4, #80]	; 0x50
 8012ed0:	6625      	str	r5, [r4, #96]	; 0x60
 8012ed2:	e71d      	b.n	8012d10 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08012ed4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8012ed4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012ed6:	428b      	cmp	r3, r1
 8012ed8:	d102      	bne.n	8012ee0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8012eda:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012edc:	4293      	cmp	r3, r2
 8012ede:	d003      	beq.n	8012ee8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8012ee0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8012ee4:	f7ff bf00 	b.w	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012ee8:	4770      	bx	lr

08012eea <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8012eea:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8012eec:	428b      	cmp	r3, r1
 8012eee:	d102      	bne.n	8012ef6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012ef0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012ef2:	4293      	cmp	r3, r2
 8012ef4:	d003      	beq.n	8012efe <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8012ef6:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8012efa:	f7ff bef5 	b.w	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012efe:	4770      	bx	lr

08012f00 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012f00:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8012f04:	f7ff bef0 	b.w	8012ce8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012f08 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f0c:	b0a0      	sub	sp, #128	; 0x80
 8012f0e:	4604      	mov	r4, r0
 8012f10:	460a      	mov	r2, r1
 8012f12:	4601      	mov	r1, r0
 8012f14:	a804      	add	r0, sp, #16
 8012f16:	f015 f845 	bl	8027fa4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012f1a:	2300      	movs	r3, #0
 8012f1c:	9301      	str	r3, [sp, #4]
 8012f1e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8012f22:	2b01      	cmp	r3, #1
 8012f24:	d17c      	bne.n	8013020 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8012f26:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012f28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012f2a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012f2c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012f2e:	1ac0      	subs	r0, r0, r3
 8012f30:	eba1 0102 	sub.w	r1, r1, r2
 8012f34:	d437      	bmi.n	8012fa6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8012f36:	2900      	cmp	r1, #0
 8012f38:	aa01      	add	r2, sp, #4
 8012f3a:	db2e      	blt.n	8012f9a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012f3c:	f7ff fe98 	bl	8012c70 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012f40:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8012f44:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012f46:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012f48:	a804      	add	r0, sp, #16
 8012f4a:	f015 f9ab 	bl	80282a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012f4e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012f50:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012f52:	a804      	add	r0, sp, #16
 8012f54:	f015 f9f3 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012f58:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012f5a:	2db3      	cmp	r5, #179	; 0xb3
 8012f5c:	dc33      	bgt.n	8012fc6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8012f5e:	eba6 0805 	sub.w	r8, r6, r5
 8012f62:	4640      	mov	r0, r8
 8012f64:	f7ff fdf2 	bl	8012b4c <_ZN8touchgfx7CWRUtil4sineEi>
 8012f68:	a902      	add	r1, sp, #8
 8012f6a:	9002      	str	r0, [sp, #8]
 8012f6c:	a801      	add	r0, sp, #4
 8012f6e:	f7ff fcd5 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012f72:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012f74:	1847      	adds	r7, r0, r1
 8012f76:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012f7a:	f7ff fde7 	bl	8012b4c <_ZN8touchgfx7CWRUtil4sineEi>
 8012f7e:	a903      	add	r1, sp, #12
 8012f80:	9003      	str	r0, [sp, #12]
 8012f82:	a801      	add	r0, sp, #4
 8012f84:	f7ff fcca 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012f88:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012f8a:	4639      	mov	r1, r7
 8012f8c:	1a12      	subs	r2, r2, r0
 8012f8e:	a804      	add	r0, sp, #16
 8012f90:	f015 f9d5 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012f94:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012f96:	441d      	add	r5, r3
 8012f98:	e7df      	b.n	8012f5a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8012f9a:	4249      	negs	r1, r1
 8012f9c:	f7ff fe68 	bl	8012c70 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012fa0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8012fa4:	e7ce      	b.n	8012f44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012fa6:	2900      	cmp	r1, #0
 8012fa8:	f1c0 0000 	rsb	r0, r0, #0
 8012fac:	aa01      	add	r2, sp, #4
 8012fae:	db04      	blt.n	8012fba <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012fb0:	f7ff fe5e 	bl	8012c70 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012fb4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012fb8:	e7c4      	b.n	8012f44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012fba:	4249      	negs	r1, r1
 8012fbc:	f7ff fe58 	bl	8012c70 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012fc0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8012fc4:	e7be      	b.n	8012f44 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012fc6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012fc8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012fca:	a804      	add	r0, sp, #16
 8012fcc:	f015 f9b7 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012fd0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012fd2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012fd4:	a804      	add	r0, sp, #16
 8012fd6:	f015 f9b2 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012fda:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012fdc:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012fe0:	2d00      	cmp	r5, #0
 8012fe2:	dd31      	ble.n	8013048 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8012fe4:	eb05 0806 	add.w	r8, r5, r6
 8012fe8:	4640      	mov	r0, r8
 8012fea:	f7ff fdaf 	bl	8012b4c <_ZN8touchgfx7CWRUtil4sineEi>
 8012fee:	a902      	add	r1, sp, #8
 8012ff0:	9002      	str	r0, [sp, #8]
 8012ff2:	a801      	add	r0, sp, #4
 8012ff4:	f7ff fc92 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012ff8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012ffa:	1847      	adds	r7, r0, r1
 8012ffc:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8013000:	f7ff fda4 	bl	8012b4c <_ZN8touchgfx7CWRUtil4sineEi>
 8013004:	a903      	add	r1, sp, #12
 8013006:	9003      	str	r0, [sp, #12]
 8013008:	a801      	add	r0, sp, #4
 801300a:	f7ff fc87 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801300e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8013010:	4639      	mov	r1, r7
 8013012:	1a12      	subs	r2, r2, r0
 8013014:	a804      	add	r0, sp, #16
 8013016:	f015 f992 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801301a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 801301c:	1aed      	subs	r5, r5, r3
 801301e:	e7df      	b.n	8012fe0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8013020:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8013022:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8013024:	a804      	add	r0, sp, #16
 8013026:	f015 f93d 	bl	80282a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801302a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801302c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801302e:	a804      	add	r0, sp, #16
 8013030:	f015 f985 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013034:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8013036:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8013038:	a804      	add	r0, sp, #16
 801303a:	f015 f980 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801303e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8013040:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8013042:	a804      	add	r0, sp, #16
 8013044:	f015 f97b 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013048:	21ff      	movs	r1, #255	; 0xff
 801304a:	a804      	add	r0, sp, #16
 801304c:	f015 f866 	bl	802811c <_ZN8touchgfx6Canvas6renderEh>
 8013050:	4b04      	ldr	r3, [pc, #16]	; (8013064 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8013052:	9304      	str	r3, [sp, #16]
 8013054:	4604      	mov	r4, r0
 8013056:	a80c      	add	r0, sp, #48	; 0x30
 8013058:	f001 fa98 	bl	801458c <_ZN8touchgfx7OutlineD1Ev>
 801305c:	4620      	mov	r0, r4
 801305e:	b020      	add	sp, #128	; 0x80
 8013060:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013064:	080302d8 	.word	0x080302d8

08013068 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8013068:	2000      	movs	r0, #0
 801306a:	4770      	bx	lr

0801306c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 801306c:	4b07      	ldr	r3, [pc, #28]	; (801308c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801306e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013070:	881b      	ldrh	r3, [r3, #0]
 8013072:	4293      	cmp	r3, r2
 8013074:	bf81      	itttt	hi
 8013076:	4b06      	ldrhi	r3, [pc, #24]	; (8013090 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8013078:	681b      	ldrhi	r3, [r3, #0]
 801307a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801307e:	7858      	ldrbhi	r0, [r3, #1]
 8013080:	bf8c      	ite	hi
 8013082:	f000 0003 	andhi.w	r0, r0, #3
 8013086:	2000      	movls	r0, #0
 8013088:	4770      	bx	lr
 801308a:	bf00      	nop
 801308c:	20013890 	.word	0x20013890
 8013090:	2001388c 	.word	0x2001388c

08013094 <_ZN8touchgfx8TextAreaD1Ev>:
 8013094:	4770      	bx	lr
	...

08013098 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8013098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801309c:	4b10      	ldr	r3, [pc, #64]	; (80130e0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801309e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80130a0:	881b      	ldrh	r3, [r3, #0]
 80130a2:	428b      	cmp	r3, r1
 80130a4:	4604      	mov	r4, r0
 80130a6:	d918      	bls.n	80130da <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80130a8:	6803      	ldr	r3, [r0, #0]
 80130aa:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80130ac:	4b0d      	ldr	r3, [pc, #52]	; (80130e4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80130ae:	6818      	ldr	r0, [r3, #0]
 80130b0:	f7f5 fcac 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80130b4:	6823      	ldr	r3, [r4, #0]
 80130b6:	4606      	mov	r6, r0
 80130b8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80130ba:	4620      	mov	r0, r4
 80130bc:	4798      	blx	r3
 80130be:	6823      	ldr	r3, [r4, #0]
 80130c0:	4607      	mov	r7, r0
 80130c2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80130c6:	4620      	mov	r0, r4
 80130c8:	4798      	blx	r3
 80130ca:	463a      	mov	r2, r7
 80130cc:	4603      	mov	r3, r0
 80130ce:	4631      	mov	r1, r6
 80130d0:	4620      	mov	r0, r4
 80130d2:	46ac      	mov	ip, r5
 80130d4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80130d8:	4760      	bx	ip
 80130da:	2000      	movs	r0, #0
 80130dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80130e0:	20013890 	.word	0x20013890
 80130e4:	20013898 	.word	0x20013898

080130e8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80130e8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80130ec:	4b17      	ldr	r3, [pc, #92]	; (801314c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80130ee:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80130f0:	881b      	ldrh	r3, [r3, #0]
 80130f2:	428b      	cmp	r3, r1
 80130f4:	4604      	mov	r4, r0
 80130f6:	d926      	bls.n	8013146 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80130f8:	4b15      	ldr	r3, [pc, #84]	; (8013150 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80130fa:	681b      	ldr	r3, [r3, #0]
 80130fc:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8013100:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8013104:	4b13      	ldr	r3, [pc, #76]	; (8013154 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8013106:	7855      	ldrb	r5, [r2, #1]
 8013108:	681b      	ldr	r3, [r3, #0]
 801310a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801310e:	6833      	ldr	r3, [r6, #0]
 8013110:	69df      	ldr	r7, [r3, #28]
 8013112:	4b11      	ldr	r3, [pc, #68]	; (8013158 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8013114:	6818      	ldr	r0, [r3, #0]
 8013116:	f7f5 fc79 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 801311a:	6823      	ldr	r3, [r4, #0]
 801311c:	4680      	mov	r8, r0
 801311e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013120:	4620      	mov	r0, r4
 8013122:	4798      	blx	r3
 8013124:	6823      	ldr	r3, [r4, #0]
 8013126:	4681      	mov	r9, r0
 8013128:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801312c:	4620      	mov	r0, r4
 801312e:	4798      	blx	r3
 8013130:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8013134:	9000      	str	r0, [sp, #0]
 8013136:	464b      	mov	r3, r9
 8013138:	4642      	mov	r2, r8
 801313a:	4629      	mov	r1, r5
 801313c:	4630      	mov	r0, r6
 801313e:	47b8      	blx	r7
 8013140:	b003      	add	sp, #12
 8013142:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013146:	2000      	movs	r0, #0
 8013148:	e7fa      	b.n	8013140 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801314a:	bf00      	nop
 801314c:	20013890 	.word	0x20013890
 8013150:	2001388c 	.word	0x2001388c
 8013154:	20013894 	.word	0x20013894
 8013158:	20013898 	.word	0x20013898

0801315c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 801315c:	b40e      	push	{r1, r2, r3}
 801315e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013162:	4b2f      	ldr	r3, [pc, #188]	; (8013220 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8013164:	881a      	ldrh	r2, [r3, #0]
 8013166:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8013168:	429a      	cmp	r2, r3
 801316a:	b09d      	sub	sp, #116	; 0x74
 801316c:	4604      	mov	r4, r0
 801316e:	d954      	bls.n	801321a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8013170:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8013224 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8013174:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8013228 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8013178:	aa26      	add	r2, sp, #152	; 0x98
 801317a:	9202      	str	r2, [sp, #8]
 801317c:	f8d9 2000 	ldr.w	r2, [r9]
 8013180:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013184:	f8d8 3000 	ldr.w	r3, [r8]
 8013188:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801318c:	682b      	ldr	r3, [r5, #0]
 801318e:	4628      	mov	r0, r5
 8013190:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013192:	4798      	blx	r3
 8013194:	b207      	sxth	r7, r0
 8013196:	4606      	mov	r6, r0
 8013198:	a803      	add	r0, sp, #12
 801319a:	f005 fc61 	bl	8018a60 <_ZN8touchgfx12TextProviderC1Ev>
 801319e:	682b      	ldr	r3, [r5, #0]
 80131a0:	4628      	mov	r0, r5
 80131a2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80131a4:	4798      	blx	r3
 80131a6:	682b      	ldr	r3, [r5, #0]
 80131a8:	4682      	mov	sl, r0
 80131aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80131ac:	4628      	mov	r0, r5
 80131ae:	4798      	blx	r3
 80131b0:	4653      	mov	r3, sl
 80131b2:	9000      	str	r0, [sp, #0]
 80131b4:	9a02      	ldr	r2, [sp, #8]
 80131b6:	9925      	ldr	r1, [sp, #148]	; 0x94
 80131b8:	a803      	add	r0, sp, #12
 80131ba:	f005 fcac 	bl	8018b16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80131be:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80131c0:	f8d9 3000 	ldr.w	r3, [r9]
 80131c4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80131c8:	8925      	ldrh	r5, [r4, #8]
 80131ca:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80131ce:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80131d2:	eba5 050c 	sub.w	r5, r5, ip
 80131d6:	784a      	ldrb	r2, [r1, #1]
 80131d8:	f8d8 3000 	ldr.w	r3, [r8]
 80131dc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80131e0:	b22d      	sxth	r5, r5
 80131e2:	9500      	str	r5, [sp, #0]
 80131e4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 80131e8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80131ec:	a803      	add	r0, sp, #12
 80131ee:	f003 f8b9 	bl	8016364 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 80131f2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 80131f6:	18b9      	adds	r1, r7, r2
 80131f8:	2900      	cmp	r1, #0
 80131fa:	b203      	sxth	r3, r0
 80131fc:	dd0b      	ble.n	8013216 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 80131fe:	3b01      	subs	r3, #1
 8013200:	fb13 f302 	smulbb	r3, r3, r2
 8013204:	fb16 3300 	smlabb	r3, r6, r0, r3
 8013208:	b21f      	sxth	r7, r3
 801320a:	4638      	mov	r0, r7
 801320c:	b01d      	add	sp, #116	; 0x74
 801320e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013212:	b003      	add	sp, #12
 8013214:	4770      	bx	lr
 8013216:	2b00      	cmp	r3, #0
 8013218:	dcf7      	bgt.n	801320a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801321a:	2700      	movs	r7, #0
 801321c:	e7f5      	b.n	801320a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801321e:	bf00      	nop
 8013220:	20013890 	.word	0x20013890
 8013224:	2001388c 	.word	0x2001388c
 8013228:	20013894 	.word	0x20013894

0801322c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801322c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013230:	4bbc      	ldr	r3, [pc, #752]	; (8013524 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8013232:	460c      	mov	r4, r1
 8013234:	881b      	ldrh	r3, [r3, #0]
 8013236:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8013238:	428b      	cmp	r3, r1
 801323a:	b0a9      	sub	sp, #164	; 0xa4
 801323c:	4680      	mov	r8, r0
 801323e:	d809      	bhi.n	8013254 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8013240:	2300      	movs	r3, #0
 8013242:	f04f 32ff 	mov.w	r2, #4294967295
 8013246:	e9c0 3200 	strd	r3, r2, [r0]
 801324a:	6083      	str	r3, [r0, #8]
 801324c:	4640      	mov	r0, r8
 801324e:	b029      	add	sp, #164	; 0xa4
 8013250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013254:	4eb4      	ldr	r6, [pc, #720]	; (8013528 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8013256:	6833      	ldr	r3, [r6, #0]
 8013258:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801325c:	4bb3      	ldr	r3, [pc, #716]	; (801352c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801325e:	681b      	ldr	r3, [r3, #0]
 8013260:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8013264:	4bb2      	ldr	r3, [pc, #712]	; (8013530 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8013266:	6818      	ldr	r0, [r3, #0]
 8013268:	f7f5 fbd0 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 801326c:	682b      	ldr	r3, [r5, #0]
 801326e:	4681      	mov	r9, r0
 8013270:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013272:	4628      	mov	r0, r5
 8013274:	4798      	blx	r3
 8013276:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8013278:	b203      	sxth	r3, r0
 801327a:	4407      	add	r7, r0
 801327c:	9304      	str	r3, [sp, #16]
 801327e:	b2bb      	uxth	r3, r7
 8013280:	9303      	str	r3, [sp, #12]
 8013282:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013286:	4682      	mov	sl, r0
 8013288:	a80f      	add	r0, sp, #60	; 0x3c
 801328a:	2b00      	cmp	r3, #0
 801328c:	f040 80a6 	bne.w	80133dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8013290:	f005 fbe6 	bl	8018a60 <_ZN8touchgfx12TextProviderC1Ev>
 8013294:	682b      	ldr	r3, [r5, #0]
 8013296:	4628      	mov	r0, r5
 8013298:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801329a:	4798      	blx	r3
 801329c:	682b      	ldr	r3, [r5, #0]
 801329e:	4606      	mov	r6, r0
 80132a0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80132a2:	4628      	mov	r0, r5
 80132a4:	4798      	blx	r3
 80132a6:	6823      	ldr	r3, [r4, #0]
 80132a8:	4607      	mov	r7, r0
 80132aa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80132ac:	4620      	mov	r0, r4
 80132ae:	4798      	blx	r3
 80132b0:	6823      	ldr	r3, [r4, #0]
 80132b2:	4683      	mov	fp, r0
 80132b4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80132b8:	4620      	mov	r0, r4
 80132ba:	4798      	blx	r3
 80132bc:	463b      	mov	r3, r7
 80132be:	e9cd b000 	strd	fp, r0, [sp]
 80132c2:	4649      	mov	r1, r9
 80132c4:	4632      	mov	r2, r6
 80132c6:	a80f      	add	r0, sp, #60	; 0x3c
 80132c8:	f005 fc3a 	bl	8018b40 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80132cc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80132d0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8013528 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80132d4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80132d8:	f04f 0600 	mov.w	r6, #0
 80132dc:	bf0c      	ite	eq
 80132de:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80132e2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80132e6:	4637      	mov	r7, r6
 80132e8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80132ea:	f8db 3000 	ldr.w	r3, [fp]
 80132ee:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80132f2:	4629      	mov	r1, r5
 80132f4:	785b      	ldrb	r3, [r3, #1]
 80132f6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80132fa:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80132fe:	a80f      	add	r0, sp, #60	; 0x3c
 8013300:	f002 fd4b 	bl	8015d9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8013304:	9b03      	ldr	r3, [sp, #12]
 8013306:	4286      	cmp	r6, r0
 8013308:	bfb8      	it	lt
 801330a:	4606      	movlt	r6, r0
 801330c:	3701      	adds	r7, #1
 801330e:	eba9 0903 	sub.w	r9, r9, r3
 8013312:	a80f      	add	r0, sp, #60	; 0x3c
 8013314:	b236      	sxth	r6, r6
 8013316:	b2bf      	uxth	r7, r7
 8013318:	fa0f f989 	sxth.w	r9, r9
 801331c:	f005 fbc7 	bl	8018aae <_ZN8touchgfx12TextProvider11endOfStringEv>
 8013320:	b918      	cbnz	r0, 801332a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013322:	7a2b      	ldrb	r3, [r5, #8]
 8013324:	444b      	add	r3, r9
 8013326:	2b00      	cmp	r3, #0
 8013328:	dcde      	bgt.n	80132e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801332a:	9b03      	ldr	r3, [sp, #12]
 801332c:	9a04      	ldr	r2, [sp, #16]
 801332e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8013332:	fb13 f707 	smulbb	r7, r3, r7
 8013336:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013338:	1aff      	subs	r7, r7, r3
 801333a:	b2bf      	uxth	r7, r7
 801333c:	b23b      	sxth	r3, r7
 801333e:	429a      	cmp	r2, r3
 8013340:	bfa8      	it	ge
 8013342:	4657      	movge	r7, sl
 8013344:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013348:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801334c:	6823      	ldr	r3, [r4, #0]
 801334e:	bf08      	it	eq
 8013350:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8013354:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013356:	bf18      	it	ne
 8013358:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801335c:	4620      	mov	r0, r4
 801335e:	4798      	blx	r3
 8013360:	444f      	add	r7, r9
 8013362:	fa1f f987 	uxth.w	r9, r7
 8013366:	2801      	cmp	r0, #1
 8013368:	fa0f f789 	sxth.w	r7, r9
 801336c:	b2b3      	uxth	r3, r6
 801336e:	f000 80e1 	beq.w	8013534 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8013372:	2802      	cmp	r0, #2
 8013374:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8013378:	f000 80e2 	beq.w	8013540 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 801337c:	7aea      	ldrb	r2, [r5, #11]
 801337e:	7b2d      	ldrb	r5, [r5, #12]
 8013380:	b236      	sxth	r6, r6
 8013382:	1ab6      	subs	r6, r6, r2
 8013384:	442a      	add	r2, r5
 8013386:	4413      	add	r3, r2
 8013388:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801338c:	fa1f fa86 	uxth.w	sl, r6
 8013390:	b29b      	uxth	r3, r3
 8013392:	2a02      	cmp	r2, #2
 8013394:	fa0f fb8a 	sxth.w	fp, sl
 8013398:	b21e      	sxth	r6, r3
 801339a:	f000 80d5 	beq.w	8013548 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 801339e:	2a03      	cmp	r2, #3
 80133a0:	f000 80dd 	beq.w	801355e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80133a4:	2a01      	cmp	r2, #1
 80133a6:	f040 80e5 	bne.w	8013574 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80133aa:	8925      	ldrh	r5, [r4, #8]
 80133ac:	4633      	mov	r3, r6
 80133ae:	eba5 0909 	sub.w	r9, r5, r9
 80133b2:	463e      	mov	r6, r7
 80133b4:	465d      	mov	r5, fp
 80133b6:	461f      	mov	r7, r3
 80133b8:	fa0f fb89 	sxth.w	fp, r9
 80133bc:	4b5c      	ldr	r3, [pc, #368]	; (8013530 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80133be:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80133c0:	6818      	ldr	r0, [r3, #0]
 80133c2:	f7f5 fb23 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80133c6:	f8a8 b000 	strh.w	fp, [r8]
 80133ca:	f8a8 5002 	strh.w	r5, [r8, #2]
 80133ce:	f8a8 6004 	strh.w	r6, [r8, #4]
 80133d2:	f8a8 7006 	strh.w	r7, [r8, #6]
 80133d6:	f8c8 0008 	str.w	r0, [r8, #8]
 80133da:	e737      	b.n	801324c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80133dc:	f005 fb40 	bl	8018a60 <_ZN8touchgfx12TextProviderC1Ev>
 80133e0:	682b      	ldr	r3, [r5, #0]
 80133e2:	4628      	mov	r0, r5
 80133e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80133e6:	4798      	blx	r3
 80133e8:	682b      	ldr	r3, [r5, #0]
 80133ea:	4607      	mov	r7, r0
 80133ec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80133ee:	4628      	mov	r0, r5
 80133f0:	4798      	blx	r3
 80133f2:	6823      	ldr	r3, [r4, #0]
 80133f4:	4683      	mov	fp, r0
 80133f6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80133f8:	4620      	mov	r0, r4
 80133fa:	4798      	blx	r3
 80133fc:	6822      	ldr	r2, [r4, #0]
 80133fe:	9005      	str	r0, [sp, #20]
 8013400:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8013404:	4620      	mov	r0, r4
 8013406:	4790      	blx	r2
 8013408:	9b05      	ldr	r3, [sp, #20]
 801340a:	9001      	str	r0, [sp, #4]
 801340c:	463a      	mov	r2, r7
 801340e:	4649      	mov	r1, r9
 8013410:	9300      	str	r3, [sp, #0]
 8013412:	a80f      	add	r0, sp, #60	; 0x3c
 8013414:	465b      	mov	r3, fp
 8013416:	f005 fb93 	bl	8018b40 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801341a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801341e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8013422:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013424:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8013428:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801342c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013430:	bf0a      	itet	eq
 8013432:	464a      	moveq	r2, r9
 8013434:	461a      	movne	r2, r3
 8013436:	4699      	moveq	r9, r3
 8013438:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801343c:	1ad2      	subs	r2, r2, r3
 801343e:	6833      	ldr	r3, [r6, #0]
 8013440:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8013444:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013448:	af0f      	add	r7, sp, #60	; 0x3c
 801344a:	7859      	ldrb	r1, [r3, #1]
 801344c:	9707      	str	r7, [sp, #28]
 801344e:	2300      	movs	r3, #0
 8013450:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8013454:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013458:	f88d 1020 	strb.w	r1, [sp, #32]
 801345c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8013460:	9509      	str	r5, [sp, #36]	; 0x24
 8013462:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013466:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801346a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801346e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8013472:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8013476:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801347a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801347e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013482:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8013486:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801348a:	b350      	cbz	r0, 80134e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801348c:	682b      	ldr	r3, [r5, #0]
 801348e:	4628      	mov	r0, r5
 8013490:	695b      	ldr	r3, [r3, #20]
 8013492:	4798      	blx	r3
 8013494:	4607      	mov	r7, r0
 8013496:	b320      	cbz	r0, 80134e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8013498:	9809      	ldr	r0, [sp, #36]	; 0x24
 801349a:	6803      	ldr	r3, [r0, #0]
 801349c:	4639      	mov	r1, r7
 801349e:	68db      	ldr	r3, [r3, #12]
 80134a0:	4798      	blx	r3
 80134a2:	4606      	mov	r6, r0
 80134a4:	b1e8      	cbz	r0, 80134e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80134a6:	7b43      	ldrb	r3, [r0, #13]
 80134a8:	7a82      	ldrb	r2, [r0, #10]
 80134aa:	005b      	lsls	r3, r3, #1
 80134ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80134b0:	4313      	orrs	r3, r2
 80134b2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80134b6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80134ba:	2b06      	cmp	r3, #6
 80134bc:	d111      	bne.n	80134e2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80134be:	9809      	ldr	r0, [sp, #36]	; 0x24
 80134c0:	6803      	ldr	r3, [r0, #0]
 80134c2:	4632      	mov	r2, r6
 80134c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80134c6:	4639      	mov	r1, r7
 80134c8:	4798      	blx	r3
 80134ca:	7b73      	ldrb	r3, [r6, #13]
 80134cc:	005b      	lsls	r3, r3, #1
 80134ce:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80134d2:	7ab3      	ldrb	r3, [r6, #10]
 80134d4:	4313      	orrs	r3, r2
 80134d6:	4418      	add	r0, r3
 80134d8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80134dc:	4418      	add	r0, r3
 80134de:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80134e2:	2600      	movs	r6, #0
 80134e4:	4637      	mov	r7, r6
 80134e6:	a806      	add	r0, sp, #24
 80134e8:	f002 fe38 	bl	801615c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80134ec:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 80134f0:	9b03      	ldr	r3, [sp, #12]
 80134f2:	4286      	cmp	r6, r0
 80134f4:	eba9 0903 	sub.w	r9, r9, r3
 80134f8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80134fc:	bfb8      	it	lt
 80134fe:	4606      	movlt	r6, r0
 8013500:	3701      	adds	r7, #1
 8013502:	b236      	sxth	r6, r6
 8013504:	b2bf      	uxth	r7, r7
 8013506:	fa0f f989 	sxth.w	r9, r9
 801350a:	2b00      	cmp	r3, #0
 801350c:	f43f af0d 	beq.w	801332a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013510:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8013514:	2b00      	cmp	r3, #0
 8013516:	f47f af08 	bne.w	801332a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801351a:	7a2b      	ldrb	r3, [r5, #8]
 801351c:	444b      	add	r3, r9
 801351e:	2b00      	cmp	r3, #0
 8013520:	dce1      	bgt.n	80134e6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8013522:	e702      	b.n	801332a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013524:	20013890 	.word	0x20013890
 8013528:	2001388c 	.word	0x2001388c
 801352c:	20013894 	.word	0x20013894
 8013530:	20013898 	.word	0x20013898
 8013534:	ebaa 0606 	sub.w	r6, sl, r6
 8013538:	2002      	movs	r0, #2
 801353a:	fb96 f6f0 	sdiv	r6, r6, r0
 801353e:	e71d      	b.n	801337c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013540:	441e      	add	r6, r3
 8013542:	ebaa 0606 	sub.w	r6, sl, r6
 8013546:	e719      	b.n	801337c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013548:	8925      	ldrh	r5, [r4, #8]
 801354a:	1aed      	subs	r5, r5, r3
 801354c:	eba5 050a 	sub.w	r5, r5, sl
 8013550:	fa0f fb85 	sxth.w	fp, r5
 8013554:	8965      	ldrh	r5, [r4, #10]
 8013556:	eba5 0509 	sub.w	r5, r5, r9
 801355a:	b22d      	sxth	r5, r5
 801355c:	e72e      	b.n	80133bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801355e:	8965      	ldrh	r5, [r4, #10]
 8013560:	1aed      	subs	r5, r5, r3
 8013562:	eba5 050a 	sub.w	r5, r5, sl
 8013566:	4633      	mov	r3, r6
 8013568:	b22d      	sxth	r5, r5
 801356a:	463e      	mov	r6, r7
 801356c:	f04f 0b00 	mov.w	fp, #0
 8013570:	461f      	mov	r7, r3
 8013572:	e723      	b.n	80133bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8013574:	2500      	movs	r5, #0
 8013576:	e721      	b.n	80133bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08013578 <_ZN8touchgfx8TextAreaD0Ev>:
 8013578:	b510      	push	{r4, lr}
 801357a:	2148      	movs	r1, #72	; 0x48
 801357c:	4604      	mov	r4, r0
 801357e:	f017 fc54 	bl	802ae2a <_ZdlPvj>
 8013582:	4620      	mov	r0, r4
 8013584:	bd10      	pop	{r4, pc}
	...

08013588 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8013588:	b513      	push	{r0, r1, r4, lr}
 801358a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801358e:	4604      	mov	r4, r0
 8013590:	b1fb      	cbz	r3, 80135d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8013592:	4b16      	ldr	r3, [pc, #88]	; (80135ec <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8013594:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8013596:	881b      	ldrh	r3, [r3, #0]
 8013598:	428b      	cmp	r3, r1
 801359a:	d91a      	bls.n	80135d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801359c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80135a0:	2b00      	cmp	r3, #0
 80135a2:	dd16      	ble.n	80135d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80135a4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80135a8:	2b00      	cmp	r3, #0
 80135aa:	dd12      	ble.n	80135d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80135ac:	4b10      	ldr	r3, [pc, #64]	; (80135f0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80135ae:	6818      	ldr	r0, [r3, #0]
 80135b0:	f7f5 fa2c 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80135b4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80135b8:	6822      	ldr	r2, [r4, #0]
 80135ba:	2b00      	cmp	r3, #0
 80135bc:	db06      	blt.n	80135cc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80135be:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80135c2:	2b00      	cmp	r3, #0
 80135c4:	db02      	blt.n	80135cc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80135c6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80135c8:	4298      	cmp	r0, r3
 80135ca:	d004      	beq.n	80135d6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80135cc:	6953      	ldr	r3, [r2, #20]
 80135ce:	4620      	mov	r0, r4
 80135d0:	4798      	blx	r3
 80135d2:	b002      	add	sp, #8
 80135d4:	bd10      	pop	{r4, pc}
 80135d6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80135da:	c903      	ldmia	r1, {r0, r1}
 80135dc:	466b      	mov	r3, sp
 80135de:	e883 0003 	stmia.w	r3, {r0, r1}
 80135e2:	6912      	ldr	r2, [r2, #16]
 80135e4:	4619      	mov	r1, r3
 80135e6:	4620      	mov	r0, r4
 80135e8:	4790      	blx	r2
 80135ea:	e7f2      	b.n	80135d2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80135ec:	20013890 	.word	0x20013890
 80135f0:	20013898 	.word	0x20013898

080135f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80135f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135f8:	4b44      	ldr	r3, [pc, #272]	; (801370c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80135fa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80135fc:	881b      	ldrh	r3, [r3, #0]
 80135fe:	4293      	cmp	r3, r2
 8013600:	b08e      	sub	sp, #56	; 0x38
 8013602:	4604      	mov	r4, r0
 8013604:	d97e      	bls.n	8013704 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013606:	6808      	ldr	r0, [r1, #0]
 8013608:	4d41      	ldr	r5, [pc, #260]	; (8013710 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801360a:	6849      	ldr	r1, [r1, #4]
 801360c:	ab05      	add	r3, sp, #20
 801360e:	c303      	stmia	r3!, {r0, r1}
 8013610:	4611      	mov	r1, r2
 8013612:	6828      	ldr	r0, [r5, #0]
 8013614:	f7f5 f9fa 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 8013618:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801361c:	2b00      	cmp	r3, #0
 801361e:	db11      	blt.n	8013644 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013620:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8013624:	2b00      	cmp	r3, #0
 8013626:	db0d      	blt.n	8013644 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013628:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801362a:	4298      	cmp	r0, r3
 801362c:	d10a      	bne.n	8013644 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801362e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8013632:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013636:	ab09      	add	r3, sp, #36	; 0x24
 8013638:	e883 0003 	stmia.w	r3, {r0, r1}
 801363c:	4619      	mov	r1, r3
 801363e:	a805      	add	r0, sp, #20
 8013640:	f7fd fbec 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 8013644:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013648:	2b00      	cmp	r3, #0
 801364a:	dd5b      	ble.n	8013704 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801364c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013650:	2b00      	cmp	r3, #0
 8013652:	dd57      	ble.n	8013704 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013654:	4f2f      	ldr	r7, [pc, #188]	; (8013714 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8013656:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013658:	683b      	ldr	r3, [r7, #0]
 801365a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801365e:	4b2e      	ldr	r3, [pc, #184]	; (8013718 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8013660:	681b      	ldr	r3, [r3, #0]
 8013662:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013666:	2e00      	cmp	r6, #0
 8013668:	d04c      	beq.n	8013704 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801366a:	6823      	ldr	r3, [r4, #0]
 801366c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8013670:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013672:	4620      	mov	r0, r4
 8013674:	4798      	blx	r3
 8013676:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013678:	683b      	ldr	r3, [r7, #0]
 801367a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801367e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8013682:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8013686:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013688:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801368c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8013690:	785b      	ldrb	r3, [r3, #1]
 8013692:	9609      	str	r6, [sp, #36]	; 0x24
 8013694:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013698:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801369c:	4b1f      	ldr	r3, [pc, #124]	; (801371c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801369e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80136a2:	681b      	ldr	r3, [r3, #0]
 80136a4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80136a8:	910b      	str	r1, [sp, #44]	; 0x2c
 80136aa:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80136ae:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80136b2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80136b6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80136ba:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80136be:	b10a      	cbz	r2, 80136c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80136c0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80136c2:	b906      	cbnz	r6, 80136c6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80136c4:	689e      	ldr	r6, [r3, #8]
 80136c6:	af07      	add	r7, sp, #28
 80136c8:	4621      	mov	r1, r4
 80136ca:	4638      	mov	r0, r7
 80136cc:	f004 fc7c 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80136d0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80136d2:	6828      	ldr	r0, [r5, #0]
 80136d4:	f7f5 f99a 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80136d8:	6823      	ldr	r3, [r4, #0]
 80136da:	4605      	mov	r5, r0
 80136dc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80136de:	4620      	mov	r0, r4
 80136e0:	4798      	blx	r3
 80136e2:	6823      	ldr	r3, [r4, #0]
 80136e4:	4680      	mov	r8, r0
 80136e6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80136ea:	4620      	mov	r0, r4
 80136ec:	4798      	blx	r3
 80136ee:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80136f2:	ab09      	add	r3, sp, #36	; 0x24
 80136f4:	9300      	str	r3, [sp, #0]
 80136f6:	9501      	str	r5, [sp, #4]
 80136f8:	ab05      	add	r3, sp, #20
 80136fa:	e897 0006 	ldmia.w	r7, {r1, r2}
 80136fe:	4630      	mov	r0, r6
 8013700:	f7f5 f936 	bl	8008970 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013704:	b00e      	add	sp, #56	; 0x38
 8013706:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801370a:	bf00      	nop
 801370c:	20013890 	.word	0x20013890
 8013710:	20013898 	.word	0x20013898
 8013714:	2001388c 	.word	0x2001388c
 8013718:	20013894 	.word	0x20013894
 801371c:	20013834 	.word	0x20013834

08013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8013720:	b538      	push	{r3, r4, r5, lr}
 8013722:	4b0e      	ldr	r3, [pc, #56]	; (801375c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8013724:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013726:	881b      	ldrh	r3, [r3, #0]
 8013728:	429a      	cmp	r2, r3
 801372a:	4604      	mov	r4, r0
 801372c:	d214      	bcs.n	8013758 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801372e:	6803      	ldr	r3, [r0, #0]
 8013730:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013732:	4798      	blx	r3
 8013734:	6823      	ldr	r3, [r4, #0]
 8013736:	4605      	mov	r5, r0
 8013738:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801373a:	4620      	mov	r0, r4
 801373c:	4798      	blx	r3
 801373e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013742:	b22d      	sxth	r5, r5
 8013744:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013748:	4601      	mov	r1, r0
 801374a:	bf06      	itte	eq
 801374c:	4602      	moveq	r2, r0
 801374e:	4629      	moveq	r1, r5
 8013750:	462a      	movne	r2, r5
 8013752:	4620      	mov	r0, r4
 8013754:	f7fd f942 	bl	80109dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013758:	bd38      	pop	{r3, r4, r5, pc}
 801375a:	bf00      	nop
 801375c:	20013890 	.word	0x20013890

08013760 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013760:	b530      	push	{r4, r5, lr}
 8013762:	888b      	ldrh	r3, [r1, #4]
 8013764:	8583      	strh	r3, [r0, #44]	; 0x2c
 8013766:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801376a:	b085      	sub	sp, #20
 801376c:	4604      	mov	r4, r0
 801376e:	b923      	cbnz	r3, 801377a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013770:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013774:	b90b      	cbnz	r3, 801377a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013776:	f7ff ffd3 	bl	8013720 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801377a:	6823      	ldr	r3, [r4, #0]
 801377c:	466d      	mov	r5, sp
 801377e:	4621      	mov	r1, r4
 8013780:	4628      	mov	r0, r5
 8013782:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013786:	4798      	blx	r3
 8013788:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801378c:	343c      	adds	r4, #60	; 0x3c
 801378e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8013792:	b005      	add	sp, #20
 8013794:	bd30      	pop	{r4, r5, pc}

08013796 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8013796:	2300      	movs	r3, #0
 8013798:	8083      	strh	r3, [r0, #4]
 801379a:	80c3      	strh	r3, [r0, #6]
 801379c:	8003      	strh	r3, [r0, #0]
 801379e:	8043      	strh	r3, [r0, #2]
 80137a0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80137a4:	2bff      	cmp	r3, #255	; 0xff
 80137a6:	bf01      	itttt	eq
 80137a8:	890b      	ldrheq	r3, [r1, #8]
 80137aa:	8083      	strheq	r3, [r0, #4]
 80137ac:	894b      	ldrheq	r3, [r1, #10]
 80137ae:	80c3      	strheq	r3, [r0, #6]
 80137b0:	4770      	bx	lr
	...

080137b4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80137b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80137b6:	4604      	mov	r4, r0
 80137b8:	6808      	ldr	r0, [r1, #0]
 80137ba:	6849      	ldr	r1, [r1, #4]
 80137bc:	466b      	mov	r3, sp
 80137be:	c303      	stmia	r3!, {r0, r1}
 80137c0:	6823      	ldr	r3, [r4, #0]
 80137c2:	4669      	mov	r1, sp
 80137c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80137c6:	4620      	mov	r0, r4
 80137c8:	4798      	blx	r3
 80137ca:	4b08      	ldr	r3, [pc, #32]	; (80137ec <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80137cc:	681b      	ldr	r3, [r3, #0]
 80137ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80137d2:	b10a      	cbz	r2, 80137d8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80137d4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80137d6:	b900      	cbnz	r0, 80137da <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80137d8:	6898      	ldr	r0, [r3, #8]
 80137da:	6803      	ldr	r3, [r0, #0]
 80137dc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80137de:	6a1d      	ldr	r5, [r3, #32]
 80137e0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80137e4:	4669      	mov	r1, sp
 80137e6:	47a8      	blx	r5
 80137e8:	b003      	add	sp, #12
 80137ea:	bd30      	pop	{r4, r5, pc}
 80137ec:	20013834 	.word	0x20013834

080137f0 <_ZN8touchgfx3BoxD1Ev>:
 80137f0:	4770      	bx	lr

080137f2 <_ZN8touchgfx3BoxD0Ev>:
 80137f2:	b510      	push	{r4, lr}
 80137f4:	212c      	movs	r1, #44	; 0x2c
 80137f6:	4604      	mov	r4, r0
 80137f8:	f017 fb17 	bl	802ae2a <_ZdlPvj>
 80137fc:	4620      	mov	r0, r4
 80137fe:	bd10      	pop	{r4, pc}

08013800 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8013800:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8013804:	b12a      	cbz	r2, 8013812 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013806:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801380a:	b112      	cbz	r2, 8013812 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801380c:	6803      	ldr	r3, [r0, #0]
 801380e:	695b      	ldr	r3, [r3, #20]
 8013810:	4718      	bx	r3
 8013812:	4770      	bx	lr

08013814 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8013814:	b570      	push	{r4, r5, r6, lr}
 8013816:	6803      	ldr	r3, [r0, #0]
 8013818:	4604      	mov	r4, r0
 801381a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801381c:	4615      	mov	r5, r2
 801381e:	4798      	blx	r3
 8013820:	6823      	ldr	r3, [r4, #0]
 8013822:	4629      	mov	r1, r5
 8013824:	4620      	mov	r0, r4
 8013826:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013828:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801382c:	4718      	bx	r3

0801382e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801382e:	b570      	push	{r4, r5, r6, lr}
 8013830:	6803      	ldr	r3, [r0, #0]
 8013832:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013834:	4604      	mov	r4, r0
 8013836:	460e      	mov	r6, r1
 8013838:	4615      	mov	r5, r2
 801383a:	4798      	blx	r3
 801383c:	8030      	strh	r0, [r6, #0]
 801383e:	6823      	ldr	r3, [r4, #0]
 8013840:	4620      	mov	r0, r4
 8013842:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013844:	4798      	blx	r3
 8013846:	8028      	strh	r0, [r5, #0]
 8013848:	bd70      	pop	{r4, r5, r6, pc}

0801384a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801384a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801384e:	4770      	bx	lr

08013850 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8013850:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8013854:	4770      	bx	lr

08013856 <_ZN8touchgfx10TiledImageD1Ev>:
 8013856:	4770      	bx	lr

08013858 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8013858:	b510      	push	{r4, lr}
 801385a:	4604      	mov	r4, r0
 801385c:	f000 fd31 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013860:	6823      	ldr	r3, [r4, #0]
 8013862:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8013866:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801386a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801386c:	4620      	mov	r0, r4
 801386e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013872:	4718      	bx	r3

08013874 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8013874:	b538      	push	{r3, r4, r5, lr}
 8013876:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801387a:	4604      	mov	r4, r0
 801387c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801387e:	4628      	mov	r0, r5
 8013880:	f006 fe6e 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013884:	b188      	cbz	r0, 80138aa <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8013886:	4628      	mov	r0, r5
 8013888:	f006 fe6a 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801388c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 8013890:	fb92 f3f0 	sdiv	r3, r2, r0
 8013894:	fb03 2010 	mls	r0, r3, r0, r2
 8013898:	2800      	cmp	r0, #0
 801389a:	8560      	strh	r0, [r4, #42]	; 0x2a
 801389c:	da05      	bge.n	80138aa <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 801389e:	4628      	mov	r0, r5
 80138a0:	f006 fe5e 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80138a4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80138a6:	4418      	add	r0, r3
 80138a8:	8560      	strh	r0, [r4, #42]	; 0x2a
 80138aa:	bd38      	pop	{r3, r4, r5, pc}

080138ac <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 80138ac:	b538      	push	{r3, r4, r5, lr}
 80138ae:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80138b2:	4604      	mov	r4, r0
 80138b4:	8581      	strh	r1, [r0, #44]	; 0x2c
 80138b6:	4628      	mov	r0, r5
 80138b8:	f006 fe86 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138bc:	b188      	cbz	r0, 80138e2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80138be:	4628      	mov	r0, r5
 80138c0:	f006 fe82 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138c4:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80138c8:	fb92 f3f0 	sdiv	r3, r2, r0
 80138cc:	fb03 2010 	mls	r0, r3, r0, r2
 80138d0:	2800      	cmp	r0, #0
 80138d2:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80138d4:	da05      	bge.n	80138e2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80138d6:	4628      	mov	r0, r5
 80138d8:	f006 fe76 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138dc:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80138de:	4418      	add	r0, r3
 80138e0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80138e2:	bd38      	pop	{r3, r4, r5, pc}

080138e4 <_ZN8touchgfx10TiledImageD0Ev>:
 80138e4:	b510      	push	{r4, lr}
 80138e6:	2130      	movs	r1, #48	; 0x30
 80138e8:	4604      	mov	r4, r0
 80138ea:	f017 fa9e 	bl	802ae2a <_ZdlPvj>
 80138ee:	4620      	mov	r0, r4
 80138f0:	bd10      	pop	{r4, pc}
	...

080138f4 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 80138f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138f8:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 80138fc:	b093      	sub	sp, #76	; 0x4c
 80138fe:	4607      	mov	r7, r0
 8013900:	4658      	mov	r0, fp
 8013902:	460e      	mov	r6, r1
 8013904:	f006 fe2c 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013908:	4681      	mov	r9, r0
 801390a:	4658      	mov	r0, fp
 801390c:	f006 fe5c 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013910:	4605      	mov	r5, r0
 8013912:	f1b9 0f00 	cmp.w	r9, #0
 8013916:	f000 80c4 	beq.w	8013aa2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 801391a:	2800      	cmp	r0, #0
 801391c:	f000 80c1 	beq.w	8013aa2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013920:	2300      	movs	r3, #0
 8013922:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8013926:	683b      	ldr	r3, [r7, #0]
 8013928:	a90e      	add	r1, sp, #56	; 0x38
 801392a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801392c:	4638      	mov	r0, r7
 801392e:	4798      	blx	r3
 8013930:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8013934:	f9b6 3000 	ldrsh.w	r3, [r6]
 8013938:	88b1      	ldrh	r1, [r6, #4]
 801393a:	fa1f f889 	uxth.w	r8, r9
 801393e:	189c      	adds	r4, r3, r2
 8013940:	440b      	add	r3, r1
 8013942:	fa02 f383 	sxtah	r3, r2, r3
 8013946:	fb94 f4f9 	sdiv	r4, r4, r9
 801394a:	fb14 f408 	smulbb	r4, r4, r8
 801394e:	1aa4      	subs	r4, r4, r2
 8013950:	3b01      	subs	r3, #1
 8013952:	b2aa      	uxth	r2, r5
 8013954:	fb93 f3f9 	sdiv	r3, r3, r9
 8013958:	fb13 f308 	smulbb	r3, r3, r8
 801395c:	b21b      	sxth	r3, r3
 801395e:	9205      	str	r2, [sp, #20]
 8013960:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8013964:	9805      	ldr	r0, [sp, #20]
 8013966:	930b      	str	r3, [sp, #44]	; 0x2c
 8013968:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801396c:	185a      	adds	r2, r3, r1
 801396e:	fb92 f2f5 	sdiv	r2, r2, r5
 8013972:	fb12 f200 	smulbb	r2, r2, r0
 8013976:	1a52      	subs	r2, r2, r1
 8013978:	b212      	sxth	r2, r2
 801397a:	920c      	str	r2, [sp, #48]	; 0x30
 801397c:	88f2      	ldrh	r2, [r6, #6]
 801397e:	4413      	add	r3, r2
 8013980:	fa01 f383 	sxtah	r3, r1, r3
 8013984:	3b01      	subs	r3, #1
 8013986:	fb93 f3f5 	sdiv	r3, r3, r5
 801398a:	fb13 f300 	smulbb	r3, r3, r0
 801398e:	b2a4      	uxth	r4, r4
 8013990:	b21b      	sxth	r3, r3
 8013992:	930d      	str	r3, [sp, #52]	; 0x34
 8013994:	eb08 0504 	add.w	r5, r8, r4
 8013998:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801399a:	b223      	sxth	r3, r4
 801399c:	4293      	cmp	r3, r2
 801399e:	b2ad      	uxth	r5, r5
 80139a0:	9306      	str	r3, [sp, #24]
 80139a2:	dc7e      	bgt.n	8013aa2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80139a4:	b22b      	sxth	r3, r5
 80139a6:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80139aa:	930a      	str	r3, [sp, #40]	; 0x28
 80139ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139ae:	4599      	cmp	r9, r3
 80139b0:	dd03      	ble.n	80139ba <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 80139b2:	4444      	add	r4, r8
 80139b4:	b2a4      	uxth	r4, r4
 80139b6:	4445      	add	r5, r8
 80139b8:	e7ee      	b.n	8013998 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 80139ba:	f9b6 c000 	ldrsh.w	ip, [r6]
 80139be:	88b2      	ldrh	r2, [r6, #4]
 80139c0:	9806      	ldr	r0, [sp, #24]
 80139c2:	9905      	ldr	r1, [sp, #20]
 80139c4:	4462      	add	r2, ip
 80139c6:	b292      	uxth	r2, r2
 80139c8:	b213      	sxth	r3, r2
 80139ca:	9308      	str	r3, [sp, #32]
 80139cc:	fa1f f389 	uxth.w	r3, r9
 80139d0:	4419      	add	r1, r3
 80139d2:	9307      	str	r3, [sp, #28]
 80139d4:	4603      	mov	r3, r0
 80139d6:	9808      	ldr	r0, [sp, #32]
 80139d8:	b289      	uxth	r1, r1
 80139da:	4283      	cmp	r3, r0
 80139dc:	fa0f fa81 	sxth.w	sl, r1
 80139e0:	da5b      	bge.n	8013a9a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80139e2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80139e4:	4584      	cmp	ip, r0
 80139e6:	da58      	bge.n	8013a9a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80139e8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80139ec:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 80139f0:	4486      	add	lr, r0
 80139f2:	fa1f fe8e 	uxth.w	lr, lr
 80139f6:	fa0f f38e 	sxth.w	r3, lr
 80139fa:	4599      	cmp	r9, r3
 80139fc:	9309      	str	r3, [sp, #36]	; 0x24
 80139fe:	da4c      	bge.n	8013a9a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013a00:	4550      	cmp	r0, sl
 8013a02:	da4a      	bge.n	8013a9a <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013a04:	9b06      	ldr	r3, [sp, #24]
 8013a06:	459c      	cmp	ip, r3
 8013a08:	bfb8      	it	lt
 8013a0a:	469c      	movlt	ip, r3
 8013a0c:	9b08      	ldr	r3, [sp, #32]
 8013a0e:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8013a12:	4548      	cmp	r0, r9
 8013a14:	bfb8      	it	lt
 8013a16:	4648      	movlt	r0, r9
 8013a18:	4699      	mov	r9, r3
 8013a1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013a1c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8013a20:	4599      	cmp	r9, r3
 8013a22:	bfc8      	it	gt
 8013a24:	462a      	movgt	r2, r5
 8013a26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a28:	4553      	cmp	r3, sl
 8013a2a:	bfd8      	it	le
 8013a2c:	4671      	movle	r1, lr
 8013a2e:	eba2 020c 	sub.w	r2, r2, ip
 8013a32:	1a09      	subs	r1, r1, r0
 8013a34:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8013a38:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 8013a3c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013a40:	9b07      	ldr	r3, [sp, #28]
 8013a42:	1b12      	subs	r2, r2, r4
 8013a44:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013a48:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8013a4c:	1ad2      	subs	r2, r2, r3
 8013a4e:	4b16      	ldr	r3, [pc, #88]	; (8013aa8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8013a50:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8013a54:	681a      	ldr	r2, [r3, #0]
 8013a56:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 8013a5a:	b109      	cbz	r1, 8013a60 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 8013a5c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 8013a5e:	b900      	cbnz	r0, 8013a62 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8013a60:	6890      	ldr	r0, [r2, #8]
 8013a62:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013a66:	9b07      	ldr	r3, [sp, #28]
 8013a68:	6801      	ldr	r1, [r0, #0]
 8013a6a:	f04f 0c01 	mov.w	ip, #1
 8013a6e:	f8cd c008 	str.w	ip, [sp, #8]
 8013a72:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8013a76:	f8cd c004 	str.w	ip, [sp, #4]
 8013a7a:	4413      	add	r3, r2
 8013a7c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8013a80:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8013a84:	f8cd c000 	str.w	ip, [sp]
 8013a88:	4422      	add	r2, r4
 8013a8a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 8013a8e:	b21b      	sxth	r3, r3
 8013a90:	b212      	sxth	r2, r2
 8013a92:	4659      	mov	r1, fp
 8013a94:	47c8      	blx	r9
 8013a96:	46d1      	mov	r9, sl
 8013a98:	e788      	b.n	80139ac <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 8013a9a:	2300      	movs	r3, #0
 8013a9c:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8013aa0:	e7cc      	b.n	8013a3c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 8013aa2:	b013      	add	sp, #76	; 0x4c
 8013aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013aa8:	20013834 	.word	0x20013834

08013aac <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 8013aac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ab0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013ab4:	2bff      	cmp	r3, #255	; 0xff
 8013ab6:	4606      	mov	r6, r0
 8013ab8:	4689      	mov	r9, r1
 8013aba:	d008      	beq.n	8013ace <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 8013abc:	2300      	movs	r3, #0
 8013abe:	8003      	strh	r3, [r0, #0]
 8013ac0:	8043      	strh	r3, [r0, #2]
 8013ac2:	8083      	strh	r3, [r0, #4]
 8013ac4:	4630      	mov	r0, r6
 8013ac6:	80f3      	strh	r3, [r6, #6]
 8013ac8:	b003      	add	sp, #12
 8013aca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ace:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 8013ad2:	4659      	mov	r1, fp
 8013ad4:	4668      	mov	r0, sp
 8013ad6:	f006 fdab 	bl	801a630 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013ada:	4658      	mov	r0, fp
 8013adc:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 8013ae0:	f9bd 7000 	ldrsh.w	r7, [sp]
 8013ae4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 8013ae8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 8013aec:	f006 fd38 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013af0:	4284      	cmp	r4, r0
 8013af2:	d10d      	bne.n	8013b10 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8013af4:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8013af8:	4658      	mov	r0, fp
 8013afa:	f006 fd65 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013afe:	4580      	cmp	r8, r0
 8013b00:	d129      	bne.n	8013b56 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8013b02:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8013b06:	8037      	strh	r7, [r6, #0]
 8013b08:	f8a6 a002 	strh.w	sl, [r6, #2]
 8013b0c:	80b5      	strh	r5, [r6, #4]
 8013b0e:	e7d9      	b.n	8013ac4 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8013b10:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8013b14:	4658      	mov	r0, fp
 8013b16:	f006 fd23 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013b1a:	1b7f      	subs	r7, r7, r5
 8013b1c:	b2bd      	uxth	r5, r7
 8013b1e:	b22f      	sxth	r7, r5
 8013b20:	4428      	add	r0, r5
 8013b22:	2f00      	cmp	r7, #0
 8013b24:	b2a3      	uxth	r3, r4
 8013b26:	b280      	uxth	r0, r0
 8013b28:	bfb8      	it	lt
 8013b2a:	18ed      	addlt	r5, r5, r3
 8013b2c:	4403      	add	r3, r0
 8013b2e:	b29b      	uxth	r3, r3
 8013b30:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8013b34:	bfb8      	it	lt
 8013b36:	b22d      	sxthlt	r5, r5
 8013b38:	b219      	sxth	r1, r3
 8013b3a:	bfae      	itee	ge
 8013b3c:	4625      	movge	r5, r4
 8013b3e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8013b42:	2700      	movlt	r7, #0
 8013b44:	4291      	cmp	r1, r2
 8013b46:	bfc4      	itt	gt
 8013b48:	1a9c      	subgt	r4, r3, r2
 8013b4a:	b224      	sxthgt	r4, r4
 8013b4c:	42ac      	cmp	r4, r5
 8013b4e:	bfc4      	itt	gt
 8013b50:	b207      	sxthgt	r7, r0
 8013b52:	4625      	movgt	r5, r4
 8013b54:	e7d0      	b.n	8013af8 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8013b56:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 8013b5a:	4658      	mov	r0, fp
 8013b5c:	f006 fd34 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013b60:	ebaa 0404 	sub.w	r4, sl, r4
 8013b64:	b2a4      	uxth	r4, r4
 8013b66:	fa0f fa84 	sxth.w	sl, r4
 8013b6a:	4420      	add	r0, r4
 8013b6c:	f1ba 0f00 	cmp.w	sl, #0
 8013b70:	fa1f f288 	uxth.w	r2, r8
 8013b74:	b280      	uxth	r0, r0
 8013b76:	bfb8      	it	lt
 8013b78:	18a3      	addlt	r3, r4, r2
 8013b7a:	4402      	add	r2, r0
 8013b7c:	b292      	uxth	r2, r2
 8013b7e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8013b82:	bfb8      	it	lt
 8013b84:	b21b      	sxthlt	r3, r3
 8013b86:	b214      	sxth	r4, r2
 8013b88:	bfae      	itee	ge
 8013b8a:	4643      	movge	r3, r8
 8013b8c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013b90:	f04f 0a00 	movlt.w	sl, #0
 8013b94:	428c      	cmp	r4, r1
 8013b96:	bfc4      	itt	gt
 8013b98:	eba2 0801 	subgt.w	r8, r2, r1
 8013b9c:	fa0f f888 	sxthgt.w	r8, r8
 8013ba0:	4598      	cmp	r8, r3
 8013ba2:	bfc4      	itt	gt
 8013ba4:	fa0f fa80 	sxthgt.w	sl, r0
 8013ba8:	4643      	movgt	r3, r8
 8013baa:	e7ac      	b.n	8013b06 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

08013bac <_ZNK8touchgfx5Image17invalidateContentEv>:
 8013bac:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8013bb0:	b12a      	cbz	r2, 8013bbe <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013bb2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013bb6:	b112      	cbz	r2, 8013bbe <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8013bb8:	6803      	ldr	r3, [r0, #0]
 8013bba:	695b      	ldr	r3, [r3, #20]
 8013bbc:	4718      	bx	r3
 8013bbe:	4770      	bx	lr

08013bc0 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8013bc0:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8013bc4:	600b      	str	r3, [r1, #0]
 8013bc6:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8013bca:	6013      	str	r3, [r2, #0]
 8013bcc:	4770      	bx	lr

08013bce <_ZN8touchgfx5Gauge8setWidthEs>:
 8013bce:	8101      	strh	r1, [r0, #8]
 8013bd0:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8013bd4:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8013bd8:	4770      	bx	lr

08013bda <_ZN8touchgfx5Gauge9setHeightEs>:
 8013bda:	8141      	strh	r1, [r0, #10]
 8013bdc:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8013be0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8013be4:	4770      	bx	lr

08013be6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8013be6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8013bea:	4770      	bx	lr

08013bec <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8013bec:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8013bf0:	4770      	bx	lr

08013bf2 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8013bf2:	4770      	bx	lr

08013bf4 <_ZN8touchgfx5GaugeD1Ev>:
 8013bf4:	4770      	bx	lr

08013bf6 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8013bf6:	b538      	push	{r3, r4, r5, lr}
 8013bf8:	4604      	mov	r4, r0
 8013bfa:	460d      	mov	r5, r1
 8013bfc:	f7fc fe07 	bl	801080e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8013c00:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8013c04:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8013c08:	bd38      	pop	{r3, r4, r5, pc}

08013c0a <_ZN8touchgfx5GaugeD0Ev>:
 8013c0a:	b510      	push	{r4, lr}
 8013c0c:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8013c10:	4604      	mov	r4, r0
 8013c12:	f017 f90a 	bl	802ae2a <_ZdlPvj>
 8013c16:	4620      	mov	r0, r4
 8013c18:	bd10      	pop	{r4, pc}

08013c1a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8013c1a:	b510      	push	{r4, lr}
 8013c1c:	6803      	ldr	r3, [r0, #0]
 8013c1e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013c22:	4604      	mov	r4, r0
 8013c24:	4798      	blx	r3
 8013c26:	b170      	cbz	r0, 8013c46 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013c28:	6823      	ldr	r3, [r4, #0]
 8013c2a:	4620      	mov	r0, r4
 8013c2c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013c30:	4798      	blx	r3
 8013c32:	b140      	cbz	r0, 8013c46 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013c34:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013c38:	b12b      	cbz	r3, 8013c46 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013c3a:	6823      	ldr	r3, [r4, #0]
 8013c3c:	4620      	mov	r0, r4
 8013c3e:	695b      	ldr	r3, [r3, #20]
 8013c40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c44:	4718      	bx	r3
 8013c46:	bd10      	pop	{r4, pc}

08013c48 <_ZN8touchgfx5GaugeC1Ev>:
 8013c48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013c4a:	4604      	mov	r4, r0
 8013c4c:	4626      	mov	r6, r4
 8013c4e:	f7fc feff 	bl	8010a50 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8013c52:	4b18      	ldr	r3, [pc, #96]	; (8013cb4 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8013c54:	f846 3bb4 	str.w	r3, [r6], #180
 8013c58:	a902      	add	r1, sp, #8
 8013c5a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013c5e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8013c62:	4630      	mov	r0, r6
 8013c64:	f015 f9a4 	bl	8028fb0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8013c68:	2500      	movs	r5, #0
 8013c6a:	2301      	movs	r3, #1
 8013c6c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8013c70:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8013c74:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8013c78:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8013c7c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8013c80:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8013c84:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8013c88:	4638      	mov	r0, r7
 8013c8a:	f014 fbd5 	bl	8028438 <_ZN8touchgfx6CircleC1Ev>
 8013c8e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8013c92:	4620      	mov	r0, r4
 8013c94:	f7fc ff7d 	bl	8010b92 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8013c98:	4639      	mov	r1, r7
 8013c9a:	4620      	mov	r0, r4
 8013c9c:	f7fc ff38 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013ca0:	4620      	mov	r0, r4
 8013ca2:	4631      	mov	r1, r6
 8013ca4:	f7fc ff34 	bl	8010b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8013ca8:	4620      	mov	r0, r4
 8013caa:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8013cae:	b003      	add	sp, #12
 8013cb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013cb2:	bf00      	nop
 8013cb4:	0802fc20 	.word	0x0802fc20

08013cb8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8013cb8:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8013cbc:	4770      	bx	lr

08013cbe <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8013cbe:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8013cc2:	4770      	bx	lr

08013cc4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8013cc4:	b538      	push	{r3, r4, r5, lr}
 8013cc6:	8902      	ldrh	r2, [r0, #8]
 8013cc8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013ccc:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8013cd0:	4604      	mov	r4, r0
 8013cd2:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8013cd6:	2200      	movs	r2, #0
 8013cd8:	4611      	mov	r1, r2
 8013cda:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8013cde:	4628      	mov	r0, r5
 8013ce0:	f7ee fe90 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8013ce4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8013ce8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013cec:	1a9b      	subs	r3, r3, r2
 8013cee:	ee07 3a90 	vmov	s15, r3
 8013cf2:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8013cf6:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8013cfa:	1a9b      	subs	r3, r3, r2
 8013cfc:	ee07 3a10 	vmov	s14, r3
 8013d00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013d04:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013d08:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8013d0c:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8013d10:	4628      	mov	r0, r5
 8013d12:	f015 f999 	bl	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d16:	4b16      	ldr	r3, [pc, #88]	; (8013d70 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8013d18:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8013d1c:	4628      	mov	r0, r5
 8013d1e:	f015 f993 	bl	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d22:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013d26:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8013d2a:	ee07 3a90 	vmov	s15, r3
 8013d2e:	ee07 2a10 	vmov	s14, r2
 8013d32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013d36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013d3a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8013d3e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8013d42:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8013d46:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8013d4a:	4628      	mov	r0, r5
 8013d4c:	f015 f97c 	bl	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d50:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8013d54:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8013d58:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8013d5c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8013d60:	4628      	mov	r0, r5
 8013d62:	f015 f971 	bl	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013d66:	2301      	movs	r3, #1
 8013d68:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013d6c:	bd38      	pop	{r3, r4, r5, pc}
 8013d6e:	bf00      	nop
 8013d70:	43960000 	.word	0x43960000

08013d74 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8013d74:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013d76:	4604      	mov	r4, r0
 8013d78:	a802      	add	r0, sp, #8
 8013d7a:	4616      	mov	r6, r2
 8013d7c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8013d80:	461d      	mov	r5, r3
 8013d82:	4601      	mov	r1, r0
 8013d84:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013d88:	f015 fab4 	bl	80292f4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8013d8c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8013d90:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8013d94:	4620      	mov	r0, r4
 8013d96:	f7ff ff95 	bl	8013cc4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8013d9a:	b002      	add	sp, #8
 8013d9c:	bd70      	pop	{r4, r5, r6, pc}

08013d9e <_ZN8touchgfx5Gauge9setCenterEii>:
 8013d9e:	b570      	push	{r4, r5, r6, lr}
 8013da0:	4606      	mov	r6, r0
 8013da2:	460d      	mov	r5, r1
 8013da4:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8013da8:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8013dac:	4614      	mov	r4, r2
 8013dae:	f7ff ff89 	bl	8013cc4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8013db2:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8013db6:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8013dba:	1aa4      	subs	r4, r4, r2
 8013dbc:	1a6d      	subs	r5, r5, r1
 8013dbe:	0164      	lsls	r4, r4, #5
 8013dc0:	016d      	lsls	r5, r5, #5
 8013dc2:	3410      	adds	r4, #16
 8013dc4:	3510      	adds	r5, #16
 8013dc6:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8013dca:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8013dce:	bd70      	pop	{r4, r5, r6, pc}

08013dd0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8013dd0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013dd2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8013dd4:	0149      	lsls	r1, r1, #5
 8013dd6:	4299      	cmp	r1, r3
 8013dd8:	4604      	mov	r4, r0
 8013dda:	9101      	str	r1, [sp, #4]
 8013ddc:	d00b      	beq.n	8013df6 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8013dde:	4601      	mov	r1, r0
 8013de0:	aa01      	add	r2, sp, #4
 8013de2:	a802      	add	r0, sp, #8
 8013de4:	f014 fd26 	bl	8028834 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8013de8:	9b01      	ldr	r3, [sp, #4]
 8013dea:	63e3      	str	r3, [r4, #60]	; 0x3c
 8013dec:	6823      	ldr	r3, [r4, #0]
 8013dee:	a902      	add	r1, sp, #8
 8013df0:	691b      	ldr	r3, [r3, #16]
 8013df2:	4620      	mov	r0, r4
 8013df4:	4798      	blx	r3
 8013df6:	b004      	add	sp, #16
 8013df8:	bd10      	pop	{r4, pc}
	...

08013dfc <_ZN8touchgfx5Gauge8setValueEi>:
 8013dfc:	b570      	push	{r4, r5, r6, lr}
 8013dfe:	4604      	mov	r4, r0
 8013e00:	f7fc fd58 	bl	80108b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8013e04:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8013e08:	429a      	cmp	r2, r3
 8013e0a:	bfac      	ite	ge
 8013e0c:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8013e10:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8013e14:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013e18:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8013e1c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013e20:	1ac9      	subs	r1, r1, r3
 8013e22:	2900      	cmp	r1, #0
 8013e24:	bfb8      	it	lt
 8013e26:	4249      	neglt	r1, r1
 8013e28:	b289      	uxth	r1, r1
 8013e2a:	4620      	mov	r0, r4
 8013e2c:	f7fc fd64 	bl	80108f8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8013e30:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013e34:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8013e38:	eddf 6a19 	vldr	s13, [pc, #100]	; 8013ea0 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8013e3c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8013ea4 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8013e40:	429a      	cmp	r2, r3
 8013e42:	4605      	mov	r5, r0
 8013e44:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8013e48:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013e4c:	da15      	bge.n	8013e7a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8013e4e:	1b5b      	subs	r3, r3, r5
 8013e50:	ee07 3a90 	vmov	s15, r3
 8013e54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013e58:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013e5c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013e60:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013e64:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013e68:	f015 f85d 	bl	8028f26 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013e6c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013e70:	1b49      	subs	r1, r1, r5
 8013e72:	4630      	mov	r0, r6
 8013e74:	f7ff ffac 	bl	8013dd0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8013e78:	bd70      	pop	{r4, r5, r6, pc}
 8013e7a:	442b      	add	r3, r5
 8013e7c:	ee07 3a90 	vmov	s15, r3
 8013e80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013e84:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013e88:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013e8c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013e90:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013e94:	f015 f847 	bl	8028f26 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8013e98:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013e9c:	4429      	add	r1, r5
 8013e9e:	e7e8      	b.n	8013e72 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8013ea0:	43340000 	.word	0x43340000
 8013ea4:	40490fdb 	.word	0x40490fdb

08013ea8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8013ea8:	b510      	push	{r4, lr}
 8013eaa:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8013eae:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8013eb2:	0149      	lsls	r1, r1, #5
 8013eb4:	0152      	lsls	r2, r2, #5
 8013eb6:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8013eba:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8013ebe:	4604      	mov	r4, r0
 8013ec0:	f7fc fca2 	bl	8010808 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8013ec4:	4601      	mov	r1, r0
 8013ec6:	4620      	mov	r0, r4
 8013ec8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013ecc:	f7ff bf96 	b.w	8013dfc <_ZN8touchgfx5Gauge8setValueEi>

08013ed0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8013ed0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8013ed4:	4770      	bx	lr

08013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8013ed6:	b570      	push	{r4, r5, r6, lr}
 8013ed8:	880b      	ldrh	r3, [r1, #0]
 8013eda:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8013edc:	4605      	mov	r5, r0
 8013ede:	8813      	ldrh	r3, [r2, #0]
 8013ee0:	f825 3f30 	strh.w	r3, [r5, #48]!
 8013ee4:	4604      	mov	r4, r0
 8013ee6:	4628      	mov	r0, r5
 8013ee8:	f006 fb3a 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013eec:	4606      	mov	r6, r0
 8013eee:	4628      	mov	r0, r5
 8013ef0:	f006 fb6a 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013ef4:	6823      	ldr	r3, [r4, #0]
 8013ef6:	4605      	mov	r5, r0
 8013ef8:	4631      	mov	r1, r6
 8013efa:	4620      	mov	r0, r4
 8013efc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013efe:	4798      	blx	r3
 8013f00:	6823      	ldr	r3, [r4, #0]
 8013f02:	4629      	mov	r1, r5
 8013f04:	4620      	mov	r0, r4
 8013f06:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013f08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013f0c:	4718      	bx	r3

08013f0e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8013f0e:	b510      	push	{r4, lr}
 8013f10:	4604      	mov	r4, r0
 8013f12:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013f14:	b150      	cbz	r0, 8013f2c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013f16:	6803      	ldr	r3, [r0, #0]
 8013f18:	68db      	ldr	r3, [r3, #12]
 8013f1a:	4798      	blx	r3
 8013f1c:	b130      	cbz	r0, 8013f2c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013f1e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8013f20:	6803      	ldr	r3, [r0, #0]
 8013f22:	4621      	mov	r1, r4
 8013f24:	689b      	ldr	r3, [r3, #8]
 8013f26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f2a:	4718      	bx	r3
 8013f2c:	bd10      	pop	{r4, pc}

08013f2e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8013f2e:	b510      	push	{r4, lr}
 8013f30:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8013f34:	2bff      	cmp	r3, #255	; 0xff
 8013f36:	4604      	mov	r4, r0
 8013f38:	d006      	beq.n	8013f48 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8013f3a:	2300      	movs	r3, #0
 8013f3c:	8003      	strh	r3, [r0, #0]
 8013f3e:	8043      	strh	r3, [r0, #2]
 8013f40:	8083      	strh	r3, [r0, #4]
 8013f42:	80c3      	strh	r3, [r0, #6]
 8013f44:	4620      	mov	r0, r4
 8013f46:	bd10      	pop	{r4, pc}
 8013f48:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013f4c:	b11b      	cbz	r3, 8013f56 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013f4e:	3130      	adds	r1, #48	; 0x30
 8013f50:	f006 fb6e 	bl	801a630 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013f54:	e7f6      	b.n	8013f44 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8013f56:	312e      	adds	r1, #46	; 0x2e
 8013f58:	e7fa      	b.n	8013f50 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08013f5c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013f5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f60:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013f64:	b08a      	sub	sp, #40	; 0x28
 8013f66:	4604      	mov	r4, r0
 8013f68:	4688      	mov	r8, r1
 8013f6a:	2b00      	cmp	r3, #0
 8013f6c:	d066      	beq.n	801403c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8013f6e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013f70:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013f74:	a805      	add	r0, sp, #20
 8013f76:	f006 faf3 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013f7a:	4607      	mov	r7, r0
 8013f7c:	a805      	add	r0, sp, #20
 8013f7e:	f006 fb23 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013f82:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013f86:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8013f8a:	4432      	add	r2, r6
 8013f8c:	b292      	uxth	r2, r2
 8013f8e:	2300      	movs	r3, #0
 8013f90:	fa0f fc82 	sxth.w	ip, r2
 8013f94:	459c      	cmp	ip, r3
 8013f96:	9306      	str	r3, [sp, #24]
 8013f98:	dd52      	ble.n	8014040 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013f9a:	42b7      	cmp	r7, r6
 8013f9c:	dd50      	ble.n	8014040 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013f9e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013fa2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013fa6:	442b      	add	r3, r5
 8013fa8:	b29b      	uxth	r3, r3
 8013faa:	b219      	sxth	r1, r3
 8013fac:	2900      	cmp	r1, #0
 8013fae:	dd47      	ble.n	8014040 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013fb0:	42a8      	cmp	r0, r5
 8013fb2:	dd45      	ble.n	8014040 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013fb4:	4567      	cmp	r7, ip
 8013fb6:	bfb8      	it	lt
 8013fb8:	b2ba      	uxthlt	r2, r7
 8013fba:	4288      	cmp	r0, r1
 8013fbc:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013fc0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013fc4:	bfb8      	it	lt
 8013fc6:	b283      	uxthlt	r3, r0
 8013fc8:	1b92      	subs	r2, r2, r6
 8013fca:	1b5b      	subs	r3, r3, r5
 8013fcc:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013fd0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013fd4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013fd8:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013fdc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013fe0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013fe4:	429a      	cmp	r2, r3
 8013fe6:	d026      	beq.n	8014036 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013fe8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013fec:	2b00      	cmp	r3, #0
 8013fee:	dd22      	ble.n	8014036 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013ff0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013ff4:	2b00      	cmp	r3, #0
 8013ff6:	dd1e      	ble.n	8014036 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013ff8:	2300      	movs	r3, #0
 8013ffa:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8013ffe:	6823      	ldr	r3, [r4, #0]
 8014000:	a908      	add	r1, sp, #32
 8014002:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014004:	4620      	mov	r0, r4
 8014006:	4798      	blx	r3
 8014008:	4b0f      	ldr	r3, [pc, #60]	; (8014048 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801400a:	681b      	ldr	r3, [r3, #0]
 801400c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014010:	b10a      	cbz	r2, 8014016 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8014012:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014014:	b900      	cbnz	r0, 8014018 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8014016:	6898      	ldr	r0, [r3, #8]
 8014018:	6801      	ldr	r1, [r0, #0]
 801401a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801401e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8014022:	2501      	movs	r5, #1
 8014024:	9502      	str	r5, [sp, #8]
 8014026:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801402a:	9401      	str	r4, [sp, #4]
 801402c:	ac06      	add	r4, sp, #24
 801402e:	9400      	str	r4, [sp, #0]
 8014030:	688c      	ldr	r4, [r1, #8]
 8014032:	a905      	add	r1, sp, #20
 8014034:	47a0      	blx	r4
 8014036:	b00a      	add	sp, #40	; 0x28
 8014038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801403c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801403e:	e797      	b.n	8013f70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8014040:	2300      	movs	r3, #0
 8014042:	9307      	str	r3, [sp, #28]
 8014044:	e7ca      	b.n	8013fdc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8014046:	bf00      	nop
 8014048:	20013834 	.word	0x20013834

0801404c <_ZNK8touchgfx6Button17invalidateContentEv>:
 801404c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8014050:	b12a      	cbz	r2, 801405e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8014052:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8014056:	b112      	cbz	r2, 801405e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8014058:	6803      	ldr	r3, [r0, #0]
 801405a:	695b      	ldr	r3, [r3, #20]
 801405c:	4718      	bx	r3
 801405e:	4770      	bx	lr

08014060 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8014060:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014064:	4b2f      	ldr	r3, [pc, #188]	; (8014124 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8014066:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8014068:	881b      	ldrh	r3, [r3, #0]
 801406a:	4293      	cmp	r3, r2
 801406c:	b08d      	sub	sp, #52	; 0x34
 801406e:	4604      	mov	r4, r0
 8014070:	460f      	mov	r7, r1
 8014072:	d954      	bls.n	801411e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8014074:	4b2c      	ldr	r3, [pc, #176]	; (8014128 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8014076:	6819      	ldr	r1, [r3, #0]
 8014078:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801407c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8014080:	4a2a      	ldr	r2, [pc, #168]	; (801412c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8014082:	6812      	ldr	r2, [r2, #0]
 8014084:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8014088:	2900      	cmp	r1, #0
 801408a:	d048      	beq.n	801411e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801408c:	785a      	ldrb	r2, [r3, #1]
 801408e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8014092:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8014096:	4b26      	ldr	r3, [pc, #152]	; (8014130 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8014098:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801409c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80140a0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80140a4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80140a6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80140aa:	9107      	str	r1, [sp, #28]
 80140ac:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80140b0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80140b4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80140b8:	681a      	ldr	r2, [r3, #0]
 80140ba:	f88d 8020 	strb.w	r8, [sp, #32]
 80140be:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 80140c2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80140c6:	9609      	str	r6, [sp, #36]	; 0x24
 80140c8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80140cc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 80140d0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 80140d4:	b10b      	cbz	r3, 80140da <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80140d6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 80140d8:	b905      	cbnz	r5, 80140dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80140da:	6895      	ldr	r5, [r2, #8]
 80140dc:	ae05      	add	r6, sp, #20
 80140de:	4621      	mov	r1, r4
 80140e0:	4630      	mov	r0, r6
 80140e2:	f003 ff71 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80140e6:	4b13      	ldr	r3, [pc, #76]	; (8014134 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80140e8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80140ea:	6818      	ldr	r0, [r3, #0]
 80140ec:	f7f4 fc8e 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80140f0:	6823      	ldr	r3, [r4, #0]
 80140f2:	4680      	mov	r8, r0
 80140f4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80140f6:	4620      	mov	r0, r4
 80140f8:	4798      	blx	r3
 80140fa:	6823      	ldr	r3, [r4, #0]
 80140fc:	4681      	mov	r9, r0
 80140fe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8014102:	4620      	mov	r0, r4
 8014104:	4798      	blx	r3
 8014106:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801410a:	ab07      	add	r3, sp, #28
 801410c:	9300      	str	r3, [sp, #0]
 801410e:	f8cd 8004 	str.w	r8, [sp, #4]
 8014112:	463b      	mov	r3, r7
 8014114:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014118:	4628      	mov	r0, r5
 801411a:	f7f4 fc29 	bl	8008970 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801411e:	b00d      	add	sp, #52	; 0x34
 8014120:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014124:	20013890 	.word	0x20013890
 8014128:	2001388c 	.word	0x2001388c
 801412c:	20013894 	.word	0x20013894
 8014130:	20013834 	.word	0x20013834
 8014134:	20013898 	.word	0x20013898

08014138 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8014138:	4770      	bx	lr

0801413a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 801413a:	4770      	bx	lr

0801413c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 801413c:	b510      	push	{r4, lr}
 801413e:	213c      	movs	r1, #60	; 0x3c
 8014140:	4604      	mov	r4, r0
 8014142:	f016 fe72 	bl	802ae2a <_ZdlPvj>
 8014146:	4620      	mov	r0, r4
 8014148:	bd10      	pop	{r4, pc}

0801414a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 801414a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801414e:	461c      	mov	r4, r3
 8014150:	4606      	mov	r6, r0
 8014152:	9f06      	ldr	r7, [sp, #24]
 8014154:	f7ff febf 	bl	8013ed6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8014158:	8823      	ldrh	r3, [r4, #0]
 801415a:	86b3      	strh	r3, [r6, #52]	; 0x34
 801415c:	883b      	ldrh	r3, [r7, #0]
 801415e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8014160:	4638      	mov	r0, r7
 8014162:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8014166:	f006 f9fb 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801416a:	f04f 0802 	mov.w	r8, #2
 801416e:	fb95 f5f8 	sdiv	r5, r5, r8
 8014172:	b2ad      	uxth	r5, r5
 8014174:	fb90 f0f8 	sdiv	r0, r0, r8
 8014178:	1a2d      	subs	r5, r5, r0
 801417a:	8735      	strh	r5, [r6, #56]	; 0x38
 801417c:	4638      	mov	r0, r7
 801417e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8014182:	fb94 f4f8 	sdiv	r4, r4, r8
 8014186:	f006 fa1f 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801418a:	b2a4      	uxth	r4, r4
 801418c:	fb90 f0f8 	sdiv	r0, r0, r8
 8014190:	1a24      	subs	r4, r4, r0
 8014192:	8774      	strh	r4, [r6, #58]	; 0x3a
 8014194:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014198 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8014198:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801419c:	4604      	mov	r4, r0
 801419e:	b08c      	sub	sp, #48	; 0x30
 80141a0:	460d      	mov	r5, r1
 80141a2:	f7ff fedb 	bl	8013f5c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80141a6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80141aa:	2b00      	cmp	r3, #0
 80141ac:	d05d      	beq.n	801426a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 80141ae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80141b0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80141b4:	a805      	add	r0, sp, #20
 80141b6:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 80141ba:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 80141be:	f006 f9cf 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80141c2:	4606      	mov	r6, r0
 80141c4:	a805      	add	r0, sp, #20
 80141c6:	f006 f9ff 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80141ca:	6869      	ldr	r1, [r5, #4]
 80141cc:	f8ad 001e 	strh.w	r0, [sp, #30]
 80141d0:	6828      	ldr	r0, [r5, #0]
 80141d2:	f8ad 8018 	strh.w	r8, [sp, #24]
 80141d6:	ab08      	add	r3, sp, #32
 80141d8:	ad08      	add	r5, sp, #32
 80141da:	c303      	stmia	r3!, {r0, r1}
 80141dc:	a906      	add	r1, sp, #24
 80141de:	4628      	mov	r0, r5
 80141e0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80141e4:	f8ad 601c 	strh.w	r6, [sp, #28]
 80141e8:	f7fc fe18 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 80141ec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80141f0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80141f4:	429a      	cmp	r2, r3
 80141f6:	d035      	beq.n	8014264 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80141f8:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80141fc:	2b00      	cmp	r3, #0
 80141fe:	dd31      	ble.n	8014264 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014200:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8014204:	2b00      	cmp	r3, #0
 8014206:	dd2d      	ble.n	8014264 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8014208:	2300      	movs	r3, #0
 801420a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801420e:	6823      	ldr	r3, [r4, #0]
 8014210:	a90a      	add	r1, sp, #40	; 0x28
 8014212:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014214:	4620      	mov	r0, r4
 8014216:	4798      	blx	r3
 8014218:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801421c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801421e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8014222:	1a9b      	subs	r3, r3, r2
 8014224:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014228:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 801422a:	1ac9      	subs	r1, r1, r3
 801422c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8014230:	490f      	ldr	r1, [pc, #60]	; (8014270 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8014232:	6809      	ldr	r1, [r1, #0]
 8014234:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8014238:	b108      	cbz	r0, 801423e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 801423a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 801423c:	b900      	cbnz	r0, 8014240 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 801423e:	6888      	ldr	r0, [r1, #8]
 8014240:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8014244:	440b      	add	r3, r1
 8014246:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801424a:	2601      	movs	r6, #1
 801424c:	440a      	add	r2, r1
 801424e:	6801      	ldr	r1, [r0, #0]
 8014250:	9602      	str	r6, [sp, #8]
 8014252:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8014256:	e9cd 5400 	strd	r5, r4, [sp]
 801425a:	b21b      	sxth	r3, r3
 801425c:	688c      	ldr	r4, [r1, #8]
 801425e:	b212      	sxth	r2, r2
 8014260:	a905      	add	r1, sp, #20
 8014262:	47a0      	blx	r4
 8014264:	b00c      	add	sp, #48	; 0x30
 8014266:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801426a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801426c:	e7a0      	b.n	80141b0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801426e:	bf00      	nop
 8014270:	20013834 	.word	0x20013834

08014274 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8014274:	b510      	push	{r4, lr}
 8014276:	2101      	movs	r1, #1
 8014278:	2200      	movs	r2, #0
 801427a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801427e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8014282:	4c0e      	ldr	r4, [pc, #56]	; (80142bc <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8014284:	8082      	strh	r2, [r0, #4]
 8014286:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801428a:	80c2      	strh	r2, [r0, #6]
 801428c:	8102      	strh	r2, [r0, #8]
 801428e:	8142      	strh	r2, [r0, #10]
 8014290:	8182      	strh	r2, [r0, #12]
 8014292:	81c2      	strh	r2, [r0, #14]
 8014294:	8202      	strh	r2, [r0, #16]
 8014296:	8242      	strh	r2, [r0, #18]
 8014298:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801429c:	61c2      	str	r2, [r0, #28]
 801429e:	8402      	strh	r2, [r0, #32]
 80142a0:	8442      	strh	r2, [r0, #34]	; 0x22
 80142a2:	6282      	str	r2, [r0, #40]	; 0x28
 80142a4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80142a8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80142aa:	8601      	strh	r1, [r0, #48]	; 0x30
 80142ac:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80142b0:	6004      	str	r4, [r0, #0]
 80142b2:	8681      	strh	r1, [r0, #52]	; 0x34
 80142b4:	86c1      	strh	r1, [r0, #54]	; 0x36
 80142b6:	8702      	strh	r2, [r0, #56]	; 0x38
 80142b8:	8742      	strh	r2, [r0, #58]	; 0x3a
 80142ba:	bd10      	pop	{r4, pc}
 80142bc:	0802fd08 	.word	0x0802fd08

080142c0 <_ZN8touchgfx5ImageD1Ev>:
 80142c0:	4770      	bx	lr

080142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80142c2:	b570      	push	{r4, r5, r6, lr}
 80142c4:	880b      	ldrh	r3, [r1, #0]
 80142c6:	84c3      	strh	r3, [r0, #38]	; 0x26
 80142c8:	4604      	mov	r4, r0
 80142ca:	4608      	mov	r0, r1
 80142cc:	460d      	mov	r5, r1
 80142ce:	f006 f947 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80142d2:	4606      	mov	r6, r0
 80142d4:	4628      	mov	r0, r5
 80142d6:	f006 f977 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80142da:	6823      	ldr	r3, [r4, #0]
 80142dc:	4605      	mov	r5, r0
 80142de:	4631      	mov	r1, r6
 80142e0:	4620      	mov	r0, r4
 80142e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80142e4:	4798      	blx	r3
 80142e6:	6823      	ldr	r3, [r4, #0]
 80142e8:	4629      	mov	r1, r5
 80142ea:	4620      	mov	r0, r4
 80142ec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80142ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142f2:	4718      	bx	r3

080142f4 <_ZN8touchgfx5ImageD0Ev>:
 80142f4:	b510      	push	{r4, lr}
 80142f6:	212c      	movs	r1, #44	; 0x2c
 80142f8:	4604      	mov	r4, r0
 80142fa:	f016 fd96 	bl	802ae2a <_ZdlPvj>
 80142fe:	4620      	mov	r0, r4
 8014300:	bd10      	pop	{r4, pc}

08014302 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8014302:	b510      	push	{r4, lr}
 8014304:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8014308:	2bff      	cmp	r3, #255	; 0xff
 801430a:	4604      	mov	r4, r0
 801430c:	d006      	beq.n	801431c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801430e:	2300      	movs	r3, #0
 8014310:	8003      	strh	r3, [r0, #0]
 8014312:	8043      	strh	r3, [r0, #2]
 8014314:	8083      	strh	r3, [r0, #4]
 8014316:	80c3      	strh	r3, [r0, #6]
 8014318:	4620      	mov	r0, r4
 801431a:	bd10      	pop	{r4, pc}
 801431c:	3126      	adds	r1, #38	; 0x26
 801431e:	f006 f987 	bl	801a630 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014322:	e7f9      	b.n	8014318 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08014324 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8014324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014328:	4604      	mov	r4, r0
 801432a:	b088      	sub	sp, #32
 801432c:	f854 3b26 	ldr.w	r3, [r4], #38
 8014330:	2500      	movs	r5, #0
 8014332:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014334:	460f      	mov	r7, r1
 8014336:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801433a:	a904      	add	r1, sp, #16
 801433c:	4606      	mov	r6, r0
 801433e:	4798      	blx	r3
 8014340:	4620      	mov	r0, r4
 8014342:	f006 f90d 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014346:	4680      	mov	r8, r0
 8014348:	4620      	mov	r0, r4
 801434a:	f006 f93d 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801434e:	9506      	str	r5, [sp, #24]
 8014350:	ad06      	add	r5, sp, #24
 8014352:	f8ad 001e 	strh.w	r0, [sp, #30]
 8014356:	4639      	mov	r1, r7
 8014358:	4628      	mov	r0, r5
 801435a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801435e:	f7fc fd5d 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 8014362:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8014366:	2b00      	cmp	r3, #0
 8014368:	dd19      	ble.n	801439e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801436a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801436e:	2b00      	cmp	r3, #0
 8014370:	dd15      	ble.n	801439e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014372:	4b0c      	ldr	r3, [pc, #48]	; (80143a4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8014374:	681b      	ldr	r3, [r3, #0]
 8014376:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801437a:	b10a      	cbz	r2, 8014380 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801437c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801437e:	b900      	cbnz	r0, 8014382 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8014380:	6898      	ldr	r0, [r3, #8]
 8014382:	6801      	ldr	r1, [r0, #0]
 8014384:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014388:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801438c:	2701      	movs	r7, #1
 801438e:	9702      	str	r7, [sp, #8]
 8014390:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8014394:	e9cd 5600 	strd	r5, r6, [sp]
 8014398:	688d      	ldr	r5, [r1, #8]
 801439a:	4621      	mov	r1, r4
 801439c:	47a8      	blx	r5
 801439e:	b008      	add	sp, #32
 80143a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80143a4:	20013834 	.word	0x20013834

080143a8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80143a8:	4770      	bx	lr

080143aa <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80143aa:	b510      	push	{r4, lr}
 80143ac:	2148      	movs	r1, #72	; 0x48
 80143ae:	4604      	mov	r4, r0
 80143b0:	f016 fd3b 	bl	802ae2a <_ZdlPvj>
 80143b4:	4620      	mov	r0, r4
 80143b6:	bd10      	pop	{r4, pc}

080143b8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80143b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80143bc:	b08d      	sub	sp, #52	; 0x34
 80143be:	4604      	mov	r4, r0
 80143c0:	460f      	mov	r7, r1
 80143c2:	f7ff fdcb 	bl	8013f5c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80143c6:	4a55      	ldr	r2, [pc, #340]	; (801451c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80143c8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80143ca:	8812      	ldrh	r2, [r2, #0]
 80143cc:	429a      	cmp	r2, r3
 80143ce:	f240 8082 	bls.w	80144d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80143d2:	4d53      	ldr	r5, [pc, #332]	; (8014520 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80143d4:	682a      	ldr	r2, [r5, #0]
 80143d6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80143da:	4b52      	ldr	r3, [pc, #328]	; (8014524 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80143dc:	681b      	ldr	r3, [r3, #0]
 80143de:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80143e2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80143e6:	2200      	movs	r2, #0
 80143e8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80143ec:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80143f0:	2a03      	cmp	r2, #3
 80143f2:	d811      	bhi.n	8014418 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80143f4:	e8df f002 	tbb	[pc, r2]
 80143f8:	89727902 	.word	0x89727902
 80143fc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8014400:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8014404:	1ad2      	subs	r2, r2, r3
 8014406:	2002      	movs	r0, #2
 8014408:	f8ad 1010 	strh.w	r1, [sp, #16]
 801440c:	fb92 f2f0 	sdiv	r2, r2, r0
 8014410:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014414:	f8ad 200e 	strh.w	r2, [sp, #14]
 8014418:	f10d 080c 	add.w	r8, sp, #12
 801441c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014420:	f10d 0914 	add.w	r9, sp, #20
 8014424:	e889 0003 	stmia.w	r9, {r0, r1}
 8014428:	4639      	mov	r1, r7
 801442a:	4648      	mov	r0, r9
 801442c:	f7fc fcf6 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 8014430:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8014434:	2b00      	cmp	r3, #0
 8014436:	dd4e      	ble.n	80144d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014438:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801443c:	2b00      	cmp	r3, #0
 801443e:	dd4a      	ble.n	80144d6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8014440:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014444:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8014448:	1a9b      	subs	r3, r3, r2
 801444a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801444e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8014452:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8014456:	1a9b      	subs	r3, r3, r2
 8014458:	f8ad 3016 	strh.w	r3, [sp, #22]
 801445c:	6823      	ldr	r3, [r4, #0]
 801445e:	4641      	mov	r1, r8
 8014460:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014462:	4620      	mov	r0, r4
 8014464:	4798      	blx	r3
 8014466:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801446a:	2b00      	cmp	r3, #0
 801446c:	d053      	beq.n	8014516 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 801446e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8014470:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8014472:	682b      	ldr	r3, [r5, #0]
 8014474:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8014478:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801447c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8014480:	785b      	ldrb	r3, [r3, #1]
 8014482:	9209      	str	r2, [sp, #36]	; 0x24
 8014484:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8014488:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801448c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8014490:	2300      	movs	r3, #0
 8014492:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8014496:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801449a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801449e:	4b22      	ldr	r3, [pc, #136]	; (8014528 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80144a0:	9607      	str	r6, [sp, #28]
 80144a2:	681b      	ldr	r3, [r3, #0]
 80144a4:	f88d 5020 	strb.w	r5, [sp, #32]
 80144a8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80144ac:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80144b0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80144b4:	b10a      	cbz	r2, 80144ba <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80144b6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80144b8:	b904      	cbnz	r4, 80144bc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80144ba:	689c      	ldr	r4, [r3, #8]
 80144bc:	4b1b      	ldr	r3, [pc, #108]	; (801452c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80144be:	6818      	ldr	r0, [r3, #0]
 80144c0:	f7f4 faa4 	bl	8008a0c <_ZNK8touchgfx5Texts7getTextEt>
 80144c4:	ab07      	add	r3, sp, #28
 80144c6:	9001      	str	r0, [sp, #4]
 80144c8:	9300      	str	r3, [sp, #0]
 80144ca:	e898 0006 	ldmia.w	r8, {r1, r2}
 80144ce:	464b      	mov	r3, r9
 80144d0:	4620      	mov	r0, r4
 80144d2:	f7f4 fa4d 	bl	8008970 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80144d6:	b00d      	add	sp, #52	; 0x34
 80144d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80144dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80144e0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80144e4:	1ad2      	subs	r2, r2, r3
 80144e6:	3201      	adds	r2, #1
 80144e8:	e78d      	b.n	8014406 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80144ea:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80144ee:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80144f2:	1ad2      	subs	r2, r2, r3
 80144f4:	3201      	adds	r2, #1
 80144f6:	2002      	movs	r0, #2
 80144f8:	f8ad 3010 	strh.w	r3, [sp, #16]
 80144fc:	fb92 f2f0 	sdiv	r2, r2, r0
 8014500:	f8ad 1012 	strh.w	r1, [sp, #18]
 8014504:	f8ad 200c 	strh.w	r2, [sp, #12]
 8014508:	e786      	b.n	8014418 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801450a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801450e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014512:	1ad2      	subs	r2, r2, r3
 8014514:	e7ef      	b.n	80144f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8014516:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8014518:	e7aa      	b.n	8014470 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801451a:	bf00      	nop
 801451c:	20013890 	.word	0x20013890
 8014520:	2001388c 	.word	0x2001388c
 8014524:	20013894 	.word	0x20013894
 8014528:	20013834 	.word	0x20013834
 801452c:	20013898 	.word	0x20013898

08014530 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8014530:	b510      	push	{r4, lr}
 8014532:	2101      	movs	r1, #1
 8014534:	4c13      	ldr	r4, [pc, #76]	; (8014584 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8014536:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801453a:	2200      	movs	r2, #0
 801453c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8014540:	6004      	str	r4, [r0, #0]
 8014542:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8014546:	4c10      	ldr	r4, [pc, #64]	; (8014588 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8014548:	8082      	strh	r2, [r0, #4]
 801454a:	80c2      	strh	r2, [r0, #6]
 801454c:	8102      	strh	r2, [r0, #8]
 801454e:	8142      	strh	r2, [r0, #10]
 8014550:	8182      	strh	r2, [r0, #12]
 8014552:	81c2      	strh	r2, [r0, #14]
 8014554:	8202      	strh	r2, [r0, #16]
 8014556:	8242      	strh	r2, [r0, #18]
 8014558:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801455c:	61c2      	str	r2, [r0, #28]
 801455e:	8402      	strh	r2, [r0, #32]
 8014560:	8442      	strh	r2, [r0, #34]	; 0x22
 8014562:	6282      	str	r2, [r0, #40]	; 0x28
 8014564:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8014568:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801456a:	8601      	strh	r1, [r0, #48]	; 0x30
 801456c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8014570:	6344      	str	r4, [r0, #52]	; 0x34
 8014572:	8701      	strh	r1, [r0, #56]	; 0x38
 8014574:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8014578:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801457c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8014580:	bd10      	pop	{r4, pc}
 8014582:	bf00      	nop
 8014584:	0802fdec 	.word	0x0802fdec
 8014588:	0802d5e0 	.word	0x0802d5e0

0801458c <_ZN8touchgfx7OutlineD1Ev>:
 801458c:	4770      	bx	lr

0801458e <_ZN8touchgfx7OutlineD0Ev>:
 801458e:	b510      	push	{r4, lr}
 8014590:	2130      	movs	r1, #48	; 0x30
 8014592:	4604      	mov	r4, r0
 8014594:	f016 fc49 	bl	802ae2a <_ZdlPvj>
 8014598:	4620      	mov	r0, r4
 801459a:	bd10      	pop	{r4, pc}

0801459c <_ZN8touchgfx7Outline5resetEv>:
 801459c:	b510      	push	{r4, lr}
 801459e:	4604      	mov	r4, r0
 80145a0:	f000 fe96 	bl	80152d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80145a4:	60e0      	str	r0, [r4, #12]
 80145a6:	f000 fe99 	bl	80152dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80145aa:	68e3      	ldr	r3, [r4, #12]
 80145ac:	6123      	str	r3, [r4, #16]
 80145ae:	08c0      	lsrs	r0, r0, #3
 80145b0:	2200      	movs	r2, #0
 80145b2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80145b6:	3801      	subs	r0, #1
 80145b8:	6060      	str	r0, [r4, #4]
 80145ba:	60a2      	str	r2, [r4, #8]
 80145bc:	8019      	strh	r1, [r3, #0]
 80145be:	8059      	strh	r1, [r3, #2]
 80145c0:	809a      	strh	r2, [r3, #4]
 80145c2:	80da      	strh	r2, [r3, #6]
 80145c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80145c6:	f023 0301 	bic.w	r3, r3, #1
 80145ca:	f043 0302 	orr.w	r3, r3, #2
 80145ce:	6263      	str	r3, [r4, #36]	; 0x24
 80145d0:	bd10      	pop	{r4, pc}
	...

080145d4 <_ZN8touchgfx7OutlineC1Ev>:
 80145d4:	b510      	push	{r4, lr}
 80145d6:	4b0a      	ldr	r3, [pc, #40]	; (8014600 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80145d8:	6003      	str	r3, [r0, #0]
 80145da:	2300      	movs	r3, #0
 80145dc:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80145e0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80145e4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80145e8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80145ec:	6243      	str	r3, [r0, #36]	; 0x24
 80145ee:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80145f2:	4604      	mov	r4, r0
 80145f4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80145f8:	f7ff ffd0 	bl	801459c <_ZN8touchgfx7Outline5resetEv>
 80145fc:	4620      	mov	r0, r4
 80145fe:	bd10      	pop	{r4, pc}
 8014600:	0802fe60 	.word	0x0802fe60

08014604 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8014604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014608:	b093      	sub	sp, #76	; 0x4c
 801460a:	1156      	asrs	r6, r2, #5
 801460c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801460e:	9305      	str	r3, [sp, #20]
 8014610:	f004 051f 	and.w	r5, r4, #31
 8014614:	1153      	asrs	r3, r2, #5
 8014616:	9504      	str	r5, [sp, #16]
 8014618:	1165      	asrs	r5, r4, #5
 801461a:	9303      	str	r3, [sp, #12]
 801461c:	42ae      	cmp	r6, r5
 801461e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8014622:	9306      	str	r3, [sp, #24]
 8014624:	f002 031f 	and.w	r3, r2, #31
 8014628:	f040 80f8 	bne.w	801481c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801462c:	9c04      	ldr	r4, [sp, #16]
 801462e:	9a05      	ldr	r2, [sp, #20]
 8014630:	42a3      	cmp	r3, r4
 8014632:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8014636:	6902      	ldr	r2, [r0, #16]
 8014638:	d125      	bne.n	8014686 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801463a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801463e:	459e      	cmp	lr, r3
 8014640:	d103      	bne.n	801464a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8014642:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014646:	429e      	cmp	r6, r3
 8014648:	d035      	beq.n	80146b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801464a:	88d1      	ldrh	r1, [r2, #6]
 801464c:	8893      	ldrh	r3, [r2, #4]
 801464e:	430b      	orrs	r3, r1
 8014650:	d010      	beq.n	8014674 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014652:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014656:	2b00      	cmp	r3, #0
 8014658:	db0c      	blt.n	8014674 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801465a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801465c:	428b      	cmp	r3, r1
 801465e:	da09      	bge.n	8014674 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014660:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014664:	428b      	cmp	r3, r1
 8014666:	bf38      	it	cc
 8014668:	3208      	addcc	r2, #8
 801466a:	f103 0301 	add.w	r3, r3, #1
 801466e:	bf38      	it	cc
 8014670:	6102      	strcc	r2, [r0, #16]
 8014672:	6083      	str	r3, [r0, #8]
 8014674:	6903      	ldr	r3, [r0, #16]
 8014676:	9a03      	ldr	r2, [sp, #12]
 8014678:	f8a3 e000 	strh.w	lr, [r3]
 801467c:	805a      	strh	r2, [r3, #2]
 801467e:	2200      	movs	r2, #0
 8014680:	809a      	strh	r2, [r3, #4]
 8014682:	80da      	strh	r2, [r3, #6]
 8014684:	e017      	b.n	80146b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014686:	9c05      	ldr	r4, [sp, #20]
 8014688:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801468c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8014690:	f004 041f 	and.w	r4, r4, #31
 8014694:	114e      	asrs	r6, r1, #5
 8014696:	9402      	str	r4, [sp, #8]
 8014698:	9c04      	ldr	r4, [sp, #16]
 801469a:	4576      	cmp	r6, lr
 801469c:	f001 0c1f 	and.w	ip, r1, #31
 80146a0:	eba4 0403 	sub.w	r4, r4, r3
 80146a4:	d10a      	bne.n	80146bc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80146a6:	9b02      	ldr	r3, [sp, #8]
 80146a8:	449c      	add	ip, r3
 80146aa:	44a0      	add	r8, r4
 80146ac:	fb04 a40c 	mla	r4, r4, ip, sl
 80146b0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80146b4:	80d4      	strh	r4, [r2, #6]
 80146b6:	b013      	add	sp, #76	; 0x4c
 80146b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146bc:	9d05      	ldr	r5, [sp, #20]
 80146be:	1a69      	subs	r1, r5, r1
 80146c0:	bf5b      	ittet	pl
 80146c2:	f1cc 0520 	rsbpl	r5, ip, #32
 80146c6:	436c      	mulpl	r4, r5
 80146c8:	2500      	movmi	r5, #0
 80146ca:	2520      	movpl	r5, #32
 80146cc:	bf44      	itt	mi
 80146ce:	fb04 f40c 	mulmi.w	r4, r4, ip
 80146d2:	4249      	negmi	r1, r1
 80146d4:	9501      	str	r5, [sp, #4]
 80146d6:	9f01      	ldr	r7, [sp, #4]
 80146d8:	fb94 f5f1 	sdiv	r5, r4, r1
 80146dc:	fb01 4415 	mls	r4, r1, r5, r4
 80146e0:	bf54      	ite	pl
 80146e2:	f04f 0901 	movpl.w	r9, #1
 80146e6:	f04f 39ff 	movmi.w	r9, #4294967295
 80146ea:	2c00      	cmp	r4, #0
 80146ec:	bfb8      	it	lt
 80146ee:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80146f2:	44bc      	add	ip, r7
 80146f4:	44a8      	add	r8, r5
 80146f6:	fb05 ac0c 	mla	ip, r5, ip, sl
 80146fa:	f8a2 8004 	strh.w	r8, [r2, #4]
 80146fe:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014702:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014706:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801470a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801470e:	bfb8      	it	lt
 8014710:	1864      	addlt	r4, r4, r1
 8014712:	ea58 0202 	orrs.w	r2, r8, r2
 8014716:	444e      	add	r6, r9
 8014718:	d011      	beq.n	801473e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801471a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801471e:	f1b8 0f00 	cmp.w	r8, #0
 8014722:	db0c      	blt.n	801473e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014724:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014726:	4590      	cmp	r8, r2
 8014728:	da09      	bge.n	801473e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801472a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801472e:	4590      	cmp	r8, r2
 8014730:	bf3c      	itt	cc
 8014732:	f10c 0208 	addcc.w	r2, ip, #8
 8014736:	6102      	strcc	r2, [r0, #16]
 8014738:	f108 0201 	add.w	r2, r8, #1
 801473c:	6082      	str	r2, [r0, #8]
 801473e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014742:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014746:	f8ac 6000 	strh.w	r6, [ip]
 801474a:	2700      	movs	r7, #0
 801474c:	45b6      	cmp	lr, r6
 801474e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8014752:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014756:	f8ac 7006 	strh.w	r7, [ip, #6]
 801475a:	442b      	add	r3, r5
 801475c:	d04d      	beq.n	80147fa <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801475e:	9f04      	ldr	r7, [sp, #16]
 8014760:	1aff      	subs	r7, r7, r3
 8014762:	443d      	add	r5, r7
 8014764:	016d      	lsls	r5, r5, #5
 8014766:	fb95 f8f1 	sdiv	r8, r5, r1
 801476a:	fb01 5518 	mls	r5, r1, r8, r5
 801476e:	2d00      	cmp	r5, #0
 8014770:	bfb8      	it	lt
 8014772:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014776:	f108 0701 	add.w	r7, r8, #1
 801477a:	bfb8      	it	lt
 801477c:	186d      	addlt	r5, r5, r1
 801477e:	1a64      	subs	r4, r4, r1
 8014780:	9703      	str	r7, [sp, #12]
 8014782:	f04f 0a00 	mov.w	sl, #0
 8014786:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801478a:	1964      	adds	r4, r4, r5
 801478c:	bf58      	it	pl
 801478e:	9f03      	ldrpl	r7, [sp, #12]
 8014790:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014794:	bf48      	it	mi
 8014796:	4647      	movmi	r7, r8
 8014798:	44bb      	add	fp, r7
 801479a:	f8ac b004 	strh.w	fp, [ip, #4]
 801479e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80147a2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80147a6:	f8ac b006 	strh.w	fp, [ip, #6]
 80147aa:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80147ae:	443b      	add	r3, r7
 80147b0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80147b4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80147b8:	bf58      	it	pl
 80147ba:	1a64      	subpl	r4, r4, r1
 80147bc:	ea5b 0707 	orrs.w	r7, fp, r7
 80147c0:	444e      	add	r6, r9
 80147c2:	d011      	beq.n	80147e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80147c4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80147c8:	f1bb 0f00 	cmp.w	fp, #0
 80147cc:	db0c      	blt.n	80147e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80147ce:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80147d0:	45bb      	cmp	fp, r7
 80147d2:	da09      	bge.n	80147e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80147d4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80147d8:	45bb      	cmp	fp, r7
 80147da:	bf3c      	itt	cc
 80147dc:	f10c 0708 	addcc.w	r7, ip, #8
 80147e0:	6107      	strcc	r7, [r0, #16]
 80147e2:	f10b 0701 	add.w	r7, fp, #1
 80147e6:	6087      	str	r7, [r0, #8]
 80147e8:	6907      	ldr	r7, [r0, #16]
 80147ea:	45b6      	cmp	lr, r6
 80147ec:	803e      	strh	r6, [r7, #0]
 80147ee:	807a      	strh	r2, [r7, #2]
 80147f0:	f8a7 a004 	strh.w	sl, [r7, #4]
 80147f4:	f8a7 a006 	strh.w	sl, [r7, #6]
 80147f8:	d1c5      	bne.n	8014786 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80147fa:	9a04      	ldr	r2, [sp, #16]
 80147fc:	1ad3      	subs	r3, r2, r3
 80147fe:	6902      	ldr	r2, [r0, #16]
 8014800:	8891      	ldrh	r1, [r2, #4]
 8014802:	88d6      	ldrh	r6, [r2, #6]
 8014804:	4419      	add	r1, r3
 8014806:	8091      	strh	r1, [r2, #4]
 8014808:	9902      	ldr	r1, [sp, #8]
 801480a:	f101 0c20 	add.w	ip, r1, #32
 801480e:	9901      	ldr	r1, [sp, #4]
 8014810:	ebac 0c01 	sub.w	ip, ip, r1
 8014814:	fb03 630c 	mla	r3, r3, ip, r6
 8014818:	80d3      	strh	r3, [r2, #6]
 801481a:	e74c      	b.n	80146b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801481c:	9d05      	ldr	r5, [sp, #20]
 801481e:	1aa2      	subs	r2, r4, r2
 8014820:	eba5 0501 	sub.w	r5, r5, r1
 8014824:	9508      	str	r5, [sp, #32]
 8014826:	9202      	str	r2, [sp, #8]
 8014828:	f140 8128 	bpl.w	8014a7c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801482c:	9a03      	ldr	r2, [sp, #12]
 801482e:	2a00      	cmp	r2, #0
 8014830:	f6ff af41 	blt.w	80146b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014834:	9a02      	ldr	r2, [sp, #8]
 8014836:	4252      	negs	r2, r2
 8014838:	9202      	str	r2, [sp, #8]
 801483a:	9a06      	ldr	r2, [sp, #24]
 801483c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014840:	f04f 34ff 	mov.w	r4, #4294967295
 8014844:	9206      	str	r2, [sp, #24]
 8014846:	462a      	mov	r2, r5
 8014848:	940b      	str	r4, [sp, #44]	; 0x2c
 801484a:	435a      	muls	r2, r3
 801484c:	2400      	movs	r4, #0
 801484e:	9d02      	ldr	r5, [sp, #8]
 8014850:	9401      	str	r4, [sp, #4]
 8014852:	9c02      	ldr	r4, [sp, #8]
 8014854:	fb92 f4f4 	sdiv	r4, r2, r4
 8014858:	fb05 2214 	mls	r2, r5, r4, r2
 801485c:	2a00      	cmp	r2, #0
 801485e:	9207      	str	r2, [sp, #28]
 8014860:	bfbc      	itt	lt
 8014862:	1952      	addlt	r2, r2, r5
 8014864:	9207      	strlt	r2, [sp, #28]
 8014866:	9a01      	ldr	r2, [sp, #4]
 8014868:	6905      	ldr	r5, [r0, #16]
 801486a:	bfb8      	it	lt
 801486c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014870:	eb04 0901 	add.w	r9, r4, r1
 8014874:	429a      	cmp	r2, r3
 8014876:	ea4f 1669 	mov.w	r6, r9, asr #5
 801487a:	f040 8112 	bne.w	8014aa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801487e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014882:	429e      	cmp	r6, r3
 8014884:	d104      	bne.n	8014890 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8014886:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801488a:	9a03      	ldr	r2, [sp, #12]
 801488c:	429a      	cmp	r2, r3
 801488e:	d01b      	beq.n	80148c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014890:	88ea      	ldrh	r2, [r5, #6]
 8014892:	88ab      	ldrh	r3, [r5, #4]
 8014894:	4313      	orrs	r3, r2
 8014896:	d010      	beq.n	80148ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8014898:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801489c:	2a00      	cmp	r2, #0
 801489e:	db0c      	blt.n	80148ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80148a0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80148a2:	429a      	cmp	r2, r3
 80148a4:	da09      	bge.n	80148ba <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80148a6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80148aa:	429a      	cmp	r2, r3
 80148ac:	bf38      	it	cc
 80148ae:	3508      	addcc	r5, #8
 80148b0:	f102 0201 	add.w	r2, r2, #1
 80148b4:	bf38      	it	cc
 80148b6:	6105      	strcc	r5, [r0, #16]
 80148b8:	6082      	str	r2, [r0, #8]
 80148ba:	6903      	ldr	r3, [r0, #16]
 80148bc:	9a03      	ldr	r2, [sp, #12]
 80148be:	805a      	strh	r2, [r3, #2]
 80148c0:	2200      	movs	r2, #0
 80148c2:	801e      	strh	r6, [r3, #0]
 80148c4:	809a      	strh	r2, [r3, #4]
 80148c6:	80da      	strh	r2, [r3, #6]
 80148c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80148ca:	9a03      	ldr	r2, [sp, #12]
 80148cc:	6901      	ldr	r1, [r0, #16]
 80148ce:	441a      	add	r2, r3
 80148d0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80148d4:	42b3      	cmp	r3, r6
 80148d6:	d103      	bne.n	80148e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80148d8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80148dc:	429a      	cmp	r2, r3
 80148de:	d01a      	beq.n	8014916 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80148e0:	88cc      	ldrh	r4, [r1, #6]
 80148e2:	888b      	ldrh	r3, [r1, #4]
 80148e4:	4323      	orrs	r3, r4
 80148e6:	d010      	beq.n	801490a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80148e8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80148ec:	2c00      	cmp	r4, #0
 80148ee:	db0c      	blt.n	801490a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80148f0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80148f2:	429c      	cmp	r4, r3
 80148f4:	da09      	bge.n	801490a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80148f6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80148fa:	429c      	cmp	r4, r3
 80148fc:	bf38      	it	cc
 80148fe:	3108      	addcc	r1, #8
 8014900:	f104 0401 	add.w	r4, r4, #1
 8014904:	bf38      	it	cc
 8014906:	6101      	strcc	r1, [r0, #16]
 8014908:	6084      	str	r4, [r0, #8]
 801490a:	6903      	ldr	r3, [r0, #16]
 801490c:	2100      	movs	r1, #0
 801490e:	801e      	strh	r6, [r3, #0]
 8014910:	805a      	strh	r2, [r3, #2]
 8014912:	8099      	strh	r1, [r3, #4]
 8014914:	80d9      	strh	r1, [r3, #6]
 8014916:	9b06      	ldr	r3, [sp, #24]
 8014918:	4293      	cmp	r3, r2
 801491a:	f000 8082 	beq.w	8014a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801491e:	9b08      	ldr	r3, [sp, #32]
 8014920:	9c02      	ldr	r4, [sp, #8]
 8014922:	9902      	ldr	r1, [sp, #8]
 8014924:	015b      	lsls	r3, r3, #5
 8014926:	fb93 f1f1 	sdiv	r1, r3, r1
 801492a:	fb04 3311 	mls	r3, r4, r1, r3
 801492e:	2b00      	cmp	r3, #0
 8014930:	9103      	str	r1, [sp, #12]
 8014932:	9308      	str	r3, [sp, #32]
 8014934:	da04      	bge.n	8014940 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8014936:	1e4b      	subs	r3, r1, #1
 8014938:	9303      	str	r3, [sp, #12]
 801493a:	9b08      	ldr	r3, [sp, #32]
 801493c:	4423      	add	r3, r4
 801493e:	9308      	str	r3, [sp, #32]
 8014940:	9b07      	ldr	r3, [sp, #28]
 8014942:	9902      	ldr	r1, [sp, #8]
 8014944:	1a5b      	subs	r3, r3, r1
 8014946:	9307      	str	r3, [sp, #28]
 8014948:	9b01      	ldr	r3, [sp, #4]
 801494a:	f1c3 0320 	rsb	r3, r3, #32
 801494e:	930e      	str	r3, [sp, #56]	; 0x38
 8014950:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014952:	9b01      	ldr	r3, [sp, #4]
 8014954:	1a5b      	subs	r3, r3, r1
 8014956:	464f      	mov	r7, r9
 8014958:	930a      	str	r3, [sp, #40]	; 0x28
 801495a:	2600      	movs	r6, #0
 801495c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014960:	185b      	adds	r3, r3, r1
 8014962:	bf58      	it	pl
 8014964:	9902      	ldrpl	r1, [sp, #8]
 8014966:	9307      	str	r3, [sp, #28]
 8014968:	bf5d      	ittte	pl
 801496a:	1a5b      	subpl	r3, r3, r1
 801496c:	9307      	strpl	r3, [sp, #28]
 801496e:	9b03      	ldrpl	r3, [sp, #12]
 8014970:	9903      	ldrmi	r1, [sp, #12]
 8014972:	bf58      	it	pl
 8014974:	1c59      	addpl	r1, r3, #1
 8014976:	4489      	add	r9, r1
 8014978:	2a00      	cmp	r2, #0
 801497a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801497e:	db2e      	blt.n	80149de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014980:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014982:	4293      	cmp	r3, r2
 8014984:	dd2b      	ble.n	80149de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014986:	9c01      	ldr	r4, [sp, #4]
 8014988:	6905      	ldr	r5, [r0, #16]
 801498a:	46a0      	mov	r8, r4
 801498c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801498e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8014992:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8014996:	45a0      	cmp	r8, r4
 8014998:	f040 814f 	bne.w	8014c3a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801499c:	f9b5 1000 	ldrsh.w	r1, [r5]
 80149a0:	4551      	cmp	r1, sl
 80149a2:	d103      	bne.n	80149ac <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80149a4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80149a8:	4291      	cmp	r1, r2
 80149aa:	d018      	beq.n	80149de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80149ac:	ea5c 010e 	orrs.w	r1, ip, lr
 80149b0:	d00f      	beq.n	80149d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80149b2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80149b6:	2900      	cmp	r1, #0
 80149b8:	db0b      	blt.n	80149d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80149ba:	428b      	cmp	r3, r1
 80149bc:	dd09      	ble.n	80149d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80149be:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80149c2:	4299      	cmp	r1, r3
 80149c4:	bf38      	it	cc
 80149c6:	3508      	addcc	r5, #8
 80149c8:	f101 0101 	add.w	r1, r1, #1
 80149cc:	bf38      	it	cc
 80149ce:	6105      	strcc	r5, [r0, #16]
 80149d0:	6081      	str	r1, [r0, #8]
 80149d2:	6903      	ldr	r3, [r0, #16]
 80149d4:	f8a3 a000 	strh.w	sl, [r3]
 80149d8:	805a      	strh	r2, [r3, #2]
 80149da:	809e      	strh	r6, [r3, #4]
 80149dc:	80de      	strh	r6, [r3, #6]
 80149de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80149e0:	6901      	ldr	r1, [r0, #16]
 80149e2:	441a      	add	r2, r3
 80149e4:	88cc      	ldrh	r4, [r1, #6]
 80149e6:	888b      	ldrh	r3, [r1, #4]
 80149e8:	4323      	orrs	r3, r4
 80149ea:	d010      	beq.n	8014a0e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80149ec:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80149f0:	2c00      	cmp	r4, #0
 80149f2:	db0c      	blt.n	8014a0e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80149f4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80149f6:	429c      	cmp	r4, r3
 80149f8:	da09      	bge.n	8014a0e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80149fa:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80149fe:	429c      	cmp	r4, r3
 8014a00:	bf38      	it	cc
 8014a02:	3108      	addcc	r1, #8
 8014a04:	f104 0401 	add.w	r4, r4, #1
 8014a08:	bf38      	it	cc
 8014a0a:	6101      	strcc	r1, [r0, #16]
 8014a0c:	6084      	str	r4, [r0, #8]
 8014a0e:	6903      	ldr	r3, [r0, #16]
 8014a10:	f8a3 a000 	strh.w	sl, [r3]
 8014a14:	805a      	strh	r2, [r3, #2]
 8014a16:	809e      	strh	r6, [r3, #4]
 8014a18:	80de      	strh	r6, [r3, #6]
 8014a1a:	9b06      	ldr	r3, [sp, #24]
 8014a1c:	4293      	cmp	r3, r2
 8014a1e:	464f      	mov	r7, r9
 8014a20:	d19c      	bne.n	801495c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8014a22:	9b01      	ldr	r3, [sp, #4]
 8014a24:	6907      	ldr	r7, [r0, #16]
 8014a26:	f1c3 0620 	rsb	r6, r3, #32
 8014a2a:	9b05      	ldr	r3, [sp, #20]
 8014a2c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014a30:	9b04      	ldr	r3, [sp, #16]
 8014a32:	429e      	cmp	r6, r3
 8014a34:	f040 81cc 	bne.w	8014dd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8014a38:	f9b7 3000 	ldrsh.w	r3, [r7]
 8014a3c:	459e      	cmp	lr, r3
 8014a3e:	d104      	bne.n	8014a4a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8014a40:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014a44:	429a      	cmp	r2, r3
 8014a46:	f43f ae36 	beq.w	80146b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014a4a:	88f9      	ldrh	r1, [r7, #6]
 8014a4c:	88bb      	ldrh	r3, [r7, #4]
 8014a4e:	430b      	orrs	r3, r1
 8014a50:	d010      	beq.n	8014a74 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014a52:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014a56:	2b00      	cmp	r3, #0
 8014a58:	db0c      	blt.n	8014a74 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014a5a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8014a5c:	428b      	cmp	r3, r1
 8014a5e:	da09      	bge.n	8014a74 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014a60:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014a64:	428b      	cmp	r3, r1
 8014a66:	bf38      	it	cc
 8014a68:	3708      	addcc	r7, #8
 8014a6a:	f103 0301 	add.w	r3, r3, #1
 8014a6e:	bf38      	it	cc
 8014a70:	6107      	strcc	r7, [r0, #16]
 8014a72:	6083      	str	r3, [r0, #8]
 8014a74:	6903      	ldr	r3, [r0, #16]
 8014a76:	f8a3 e000 	strh.w	lr, [r3]
 8014a7a:	e5ff      	b.n	801467c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8014a7c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014a7e:	9c03      	ldr	r4, [sp, #12]
 8014a80:	42a2      	cmp	r2, r4
 8014a82:	f6ff ae18 	blt.w	80146b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014a86:	9c06      	ldr	r4, [sp, #24]
 8014a88:	42a2      	cmp	r2, r4
 8014a8a:	bfb8      	it	lt
 8014a8c:	3201      	addlt	r2, #1
 8014a8e:	9c08      	ldr	r4, [sp, #32]
 8014a90:	bfb8      	it	lt
 8014a92:	9206      	strlt	r2, [sp, #24]
 8014a94:	f1c3 0220 	rsb	r2, r3, #32
 8014a98:	4362      	muls	r2, r4
 8014a9a:	2401      	movs	r4, #1
 8014a9c:	940b      	str	r4, [sp, #44]	; 0x2c
 8014a9e:	2420      	movs	r4, #32
 8014aa0:	e6d5      	b.n	801484e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8014aa2:	f009 021f 	and.w	r2, r9, #31
 8014aa6:	ea4f 1861 	mov.w	r8, r1, asr #5
 8014aaa:	920c      	str	r2, [sp, #48]	; 0x30
 8014aac:	9a01      	ldr	r2, [sp, #4]
 8014aae:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8014ab2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8014ab6:	45b0      	cmp	r8, r6
 8014ab8:	f001 011f 	and.w	r1, r1, #31
 8014abc:	eba2 0203 	sub.w	r2, r2, r3
 8014ac0:	d108      	bne.n	8014ad4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8014ac2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014ac4:	4419      	add	r1, r3
 8014ac6:	4496      	add	lr, r2
 8014ac8:	fb02 a101 	mla	r1, r2, r1, sl
 8014acc:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014ad0:	80e9      	strh	r1, [r5, #6]
 8014ad2:	e6f9      	b.n	80148c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014ad4:	2c00      	cmp	r4, #0
 8014ad6:	f2c0 80a9 	blt.w	8014c2c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8014ada:	2701      	movs	r7, #1
 8014adc:	f1c1 0c20 	rsb	ip, r1, #32
 8014ae0:	970a      	str	r7, [sp, #40]	; 0x28
 8014ae2:	fb02 f20c 	mul.w	r2, r2, ip
 8014ae6:	2720      	movs	r7, #32
 8014ae8:	9709      	str	r7, [sp, #36]	; 0x24
 8014aea:	fb92 fcf4 	sdiv	ip, r2, r4
 8014aee:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014af0:	fb04 221c 	mls	r2, r4, ip, r2
 8014af4:	2a00      	cmp	r2, #0
 8014af6:	bfb8      	it	lt
 8014af8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8014afc:	4439      	add	r1, r7
 8014afe:	fb0c a101 	mla	r1, ip, r1, sl
 8014b02:	80e9      	strh	r1, [r5, #6]
 8014b04:	44e6      	add	lr, ip
 8014b06:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014b08:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014b0c:	eb08 0501 	add.w	r5, r8, r1
 8014b10:	6901      	ldr	r1, [r0, #16]
 8014b12:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8014b16:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8014b1a:	bfb8      	it	lt
 8014b1c:	1912      	addlt	r2, r2, r4
 8014b1e:	ea58 070e 	orrs.w	r7, r8, lr
 8014b22:	d010      	beq.n	8014b46 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014b24:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8014b28:	f1be 0f00 	cmp.w	lr, #0
 8014b2c:	db0b      	blt.n	8014b46 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014b2e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014b30:	45be      	cmp	lr, r7
 8014b32:	da08      	bge.n	8014b46 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014b34:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014b38:	45be      	cmp	lr, r7
 8014b3a:	bf3c      	itt	cc
 8014b3c:	3108      	addcc	r1, #8
 8014b3e:	6101      	strcc	r1, [r0, #16]
 8014b40:	f10e 0101 	add.w	r1, lr, #1
 8014b44:	6081      	str	r1, [r0, #8]
 8014b46:	6901      	ldr	r1, [r0, #16]
 8014b48:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014b4c:	800d      	strh	r5, [r1, #0]
 8014b4e:	f04f 0e00 	mov.w	lr, #0
 8014b52:	42ae      	cmp	r6, r5
 8014b54:	f8a1 8002 	strh.w	r8, [r1, #2]
 8014b58:	f8a1 e004 	strh.w	lr, [r1, #4]
 8014b5c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014b60:	4463      	add	r3, ip
 8014b62:	d054      	beq.n	8014c0e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8014b64:	9901      	ldr	r1, [sp, #4]
 8014b66:	1ac9      	subs	r1, r1, r3
 8014b68:	4461      	add	r1, ip
 8014b6a:	0149      	lsls	r1, r1, #5
 8014b6c:	fb91 fef4 	sdiv	lr, r1, r4
 8014b70:	fb04 111e 	mls	r1, r4, lr, r1
 8014b74:	2900      	cmp	r1, #0
 8014b76:	bfb8      	it	lt
 8014b78:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8014b7c:	f10e 0701 	add.w	r7, lr, #1
 8014b80:	bfb8      	it	lt
 8014b82:	1909      	addlt	r1, r1, r4
 8014b84:	1b12      	subs	r2, r2, r4
 8014b86:	970d      	str	r7, [sp, #52]	; 0x34
 8014b88:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8014b8c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8014b8e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8014b92:	1852      	adds	r2, r2, r1
 8014b94:	bf54      	ite	pl
 8014b96:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8014b9a:	46f4      	movmi	ip, lr
 8014b9c:	44e3      	add	fp, ip
 8014b9e:	f8aa b004 	strh.w	fp, [sl, #4]
 8014ba2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8014ba6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8014baa:	f8aa b006 	strh.w	fp, [sl, #6]
 8014bae:	4463      	add	r3, ip
 8014bb0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014bb4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014bb8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8014bbc:	bf58      	it	pl
 8014bbe:	1b12      	subpl	r2, r2, r4
 8014bc0:	443d      	add	r5, r7
 8014bc2:	ea5b 070a 	orrs.w	r7, fp, sl
 8014bc6:	d014      	beq.n	8014bf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014bc8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8014bcc:	f1ba 0f00 	cmp.w	sl, #0
 8014bd0:	db0f      	blt.n	8014bf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014bd2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014bd4:	45ba      	cmp	sl, r7
 8014bd6:	da0c      	bge.n	8014bf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8014bd8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8014bdc:	45ba      	cmp	sl, r7
 8014bde:	bf38      	it	cc
 8014be0:	f10c 0c08 	addcc.w	ip, ip, #8
 8014be4:	f10a 0a01 	add.w	sl, sl, #1
 8014be8:	bf38      	it	cc
 8014bea:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8014bee:	f8c0 a008 	str.w	sl, [r0, #8]
 8014bf2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014bf6:	f04f 0700 	mov.w	r7, #0
 8014bfa:	42ae      	cmp	r6, r5
 8014bfc:	f8ac 5000 	strh.w	r5, [ip]
 8014c00:	f8ac 8002 	strh.w	r8, [ip, #2]
 8014c04:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014c08:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014c0c:	d1bc      	bne.n	8014b88 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8014c0e:	6904      	ldr	r4, [r0, #16]
 8014c10:	9a01      	ldr	r2, [sp, #4]
 8014c12:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014c14:	1ad3      	subs	r3, r2, r3
 8014c16:	88a2      	ldrh	r2, [r4, #4]
 8014c18:	441a      	add	r2, r3
 8014c1a:	80a2      	strh	r2, [r4, #4]
 8014c1c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014c1e:	3120      	adds	r1, #32
 8014c20:	1a89      	subs	r1, r1, r2
 8014c22:	88e2      	ldrh	r2, [r4, #6]
 8014c24:	fb03 2301 	mla	r3, r3, r1, r2
 8014c28:	80e3      	strh	r3, [r4, #6]
 8014c2a:	e64d      	b.n	80148c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8014c2c:	f04f 37ff 	mov.w	r7, #4294967295
 8014c30:	970a      	str	r7, [sp, #40]	; 0x28
 8014c32:	434a      	muls	r2, r1
 8014c34:	4264      	negs	r4, r4
 8014c36:	2700      	movs	r7, #0
 8014c38:	e756      	b.n	8014ae8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8014c3a:	ea4f 1867 	mov.w	r8, r7, asr #5
 8014c3e:	f009 031f 	and.w	r3, r9, #31
 8014c42:	45d0      	cmp	r8, sl
 8014c44:	f007 071f 	and.w	r7, r7, #31
 8014c48:	930f      	str	r3, [sp, #60]	; 0x3c
 8014c4a:	fa1f fc8c 	uxth.w	ip, ip
 8014c4e:	fa1f fe8e 	uxth.w	lr, lr
 8014c52:	d10a      	bne.n	8014c6a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8014c54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014c56:	449c      	add	ip, r3
 8014c58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014c5a:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014c5e:	441f      	add	r7, r3
 8014c60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014c62:	fb03 e707 	mla	r7, r3, r7, lr
 8014c66:	80ef      	strh	r7, [r5, #6]
 8014c68:	e6b9      	b.n	80149de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014c6a:	2900      	cmp	r1, #0
 8014c6c:	f2c0 80a8 	blt.w	8014dc0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8014c70:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014c72:	f1c7 0320 	rsb	r3, r7, #32
 8014c76:	4363      	muls	r3, r4
 8014c78:	2401      	movs	r4, #1
 8014c7a:	940d      	str	r4, [sp, #52]	; 0x34
 8014c7c:	2420      	movs	r4, #32
 8014c7e:	940c      	str	r4, [sp, #48]	; 0x30
 8014c80:	fb93 f4f1 	sdiv	r4, r3, r1
 8014c84:	fb01 3b14 	mls	fp, r1, r4, r3
 8014c88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c8a:	f1bb 0f00 	cmp.w	fp, #0
 8014c8e:	bfb8      	it	lt
 8014c90:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014c94:	441f      	add	r7, r3
 8014c96:	fb04 e707 	mla	r7, r4, r7, lr
 8014c9a:	44a4      	add	ip, r4
 8014c9c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014ca0:	80ef      	strh	r7, [r5, #6]
 8014ca2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014ca6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014ca8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8014cac:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014cb0:	bfb8      	it	lt
 8014cb2:	448b      	addlt	fp, r1
 8014cb4:	eb08 0503 	add.w	r5, r8, r3
 8014cb8:	ea5e 0307 	orrs.w	r3, lr, r7
 8014cbc:	d011      	beq.n	8014ce2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014cbe:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8014cc2:	f1be 0f00 	cmp.w	lr, #0
 8014cc6:	db0c      	blt.n	8014ce2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014cc8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014cca:	45be      	cmp	lr, r7
 8014ccc:	da09      	bge.n	8014ce2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8014cce:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014cd2:	45be      	cmp	lr, r7
 8014cd4:	bf3c      	itt	cc
 8014cd6:	f10c 0708 	addcc.w	r7, ip, #8
 8014cda:	6107      	strcc	r7, [r0, #16]
 8014cdc:	f10e 0701 	add.w	r7, lr, #1
 8014ce0:	6087      	str	r7, [r0, #8]
 8014ce2:	6907      	ldr	r7, [r0, #16]
 8014ce4:	b213      	sxth	r3, r2
 8014ce6:	9310      	str	r3, [sp, #64]	; 0x40
 8014ce8:	807b      	strh	r3, [r7, #2]
 8014cea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014cec:	803d      	strh	r5, [r7, #0]
 8014cee:	4555      	cmp	r5, sl
 8014cf0:	80be      	strh	r6, [r7, #4]
 8014cf2:	80fe      	strh	r6, [r7, #6]
 8014cf4:	eb04 0c03 	add.w	ip, r4, r3
 8014cf8:	d051      	beq.n	8014d9e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8014cfa:	9b01      	ldr	r3, [sp, #4]
 8014cfc:	eba3 070c 	sub.w	r7, r3, ip
 8014d00:	443c      	add	r4, r7
 8014d02:	0164      	lsls	r4, r4, #5
 8014d04:	fb94 f8f1 	sdiv	r8, r4, r1
 8014d08:	fb01 4418 	mls	r4, r1, r8, r4
 8014d0c:	2c00      	cmp	r4, #0
 8014d0e:	bfb8      	it	lt
 8014d10:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014d14:	ebab 0301 	sub.w	r3, fp, r1
 8014d18:	f108 0701 	add.w	r7, r8, #1
 8014d1c:	bfb8      	it	lt
 8014d1e:	1864      	addlt	r4, r4, r1
 8014d20:	9309      	str	r3, [sp, #36]	; 0x24
 8014d22:	9711      	str	r7, [sp, #68]	; 0x44
 8014d24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d26:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014d2a:	191b      	adds	r3, r3, r4
 8014d2c:	bf58      	it	pl
 8014d2e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8014d30:	f8be b004 	ldrh.w	fp, [lr, #4]
 8014d34:	9309      	str	r3, [sp, #36]	; 0x24
 8014d36:	bf48      	it	mi
 8014d38:	4647      	movmi	r7, r8
 8014d3a:	44bb      	add	fp, r7
 8014d3c:	f8ae b004 	strh.w	fp, [lr, #4]
 8014d40:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014d44:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014d48:	f8ae b006 	strh.w	fp, [lr, #6]
 8014d4c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014d50:	44bc      	add	ip, r7
 8014d52:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014d54:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014d58:	443d      	add	r5, r7
 8014d5a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8014d5e:	bf5c      	itt	pl
 8014d60:	1a5b      	subpl	r3, r3, r1
 8014d62:	9309      	strpl	r3, [sp, #36]	; 0x24
 8014d64:	ea5b 0307 	orrs.w	r3, fp, r7
 8014d68:	d011      	beq.n	8014d8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014d6a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8014d6e:	f1bb 0f00 	cmp.w	fp, #0
 8014d72:	db0c      	blt.n	8014d8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014d74:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014d76:	45bb      	cmp	fp, r7
 8014d78:	da09      	bge.n	8014d8e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014d7a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014d7e:	45bb      	cmp	fp, r7
 8014d80:	bf3c      	itt	cc
 8014d82:	f10e 0708 	addcc.w	r7, lr, #8
 8014d86:	6107      	strcc	r7, [r0, #16]
 8014d88:	f10b 0701 	add.w	r7, fp, #1
 8014d8c:	6087      	str	r7, [r0, #8]
 8014d8e:	6907      	ldr	r7, [r0, #16]
 8014d90:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014d92:	803d      	strh	r5, [r7, #0]
 8014d94:	4555      	cmp	r5, sl
 8014d96:	807b      	strh	r3, [r7, #2]
 8014d98:	80be      	strh	r6, [r7, #4]
 8014d9a:	80fe      	strh	r6, [r7, #6]
 8014d9c:	d1c2      	bne.n	8014d24 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8014d9e:	9b01      	ldr	r3, [sp, #4]
 8014da0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8014da2:	eba3 0c0c 	sub.w	ip, r3, ip
 8014da6:	6903      	ldr	r3, [r0, #16]
 8014da8:	8899      	ldrh	r1, [r3, #4]
 8014daa:	4461      	add	r1, ip
 8014dac:	8099      	strh	r1, [r3, #4]
 8014dae:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014db0:	3720      	adds	r7, #32
 8014db2:	1a7f      	subs	r7, r7, r1
 8014db4:	88d9      	ldrh	r1, [r3, #6]
 8014db6:	fb0c 1c07 	mla	ip, ip, r7, r1
 8014dba:	f8a3 c006 	strh.w	ip, [r3, #6]
 8014dbe:	e60e      	b.n	80149de <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014dc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014dc2:	f04f 34ff 	mov.w	r4, #4294967295
 8014dc6:	940d      	str	r4, [sp, #52]	; 0x34
 8014dc8:	437b      	muls	r3, r7
 8014dca:	4249      	negs	r1, r1
 8014dcc:	2400      	movs	r4, #0
 8014dce:	e756      	b.n	8014c7e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8014dd0:	9905      	ldr	r1, [sp, #20]
 8014dd2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8014dd6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8014dda:	f001 011f 	and.w	r1, r1, #31
 8014dde:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8014de2:	9102      	str	r1, [sp, #8]
 8014de4:	9904      	ldr	r1, [sp, #16]
 8014de6:	45f3      	cmp	fp, lr
 8014de8:	f009 0c1f 	and.w	ip, r9, #31
 8014dec:	eba1 0406 	sub.w	r4, r1, r6
 8014df0:	d108      	bne.n	8014e04 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8014df2:	9b02      	ldr	r3, [sp, #8]
 8014df4:	449c      	add	ip, r3
 8014df6:	44a0      	add	r8, r4
 8014df8:	fb04 a40c 	mla	r4, r4, ip, sl
 8014dfc:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014e00:	80fc      	strh	r4, [r7, #6]
 8014e02:	e458      	b.n	80146b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014e04:	9905      	ldr	r1, [sp, #20]
 8014e06:	ebb1 0109 	subs.w	r1, r1, r9
 8014e0a:	bf5b      	ittet	pl
 8014e0c:	f1cc 0520 	rsbpl	r5, ip, #32
 8014e10:	436c      	mulpl	r4, r5
 8014e12:	2500      	movmi	r5, #0
 8014e14:	2520      	movpl	r5, #32
 8014e16:	bf44      	itt	mi
 8014e18:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014e1c:	4249      	negmi	r1, r1
 8014e1e:	9501      	str	r5, [sp, #4]
 8014e20:	9b01      	ldr	r3, [sp, #4]
 8014e22:	fb94 f5f1 	sdiv	r5, r4, r1
 8014e26:	fb01 4415 	mls	r4, r1, r5, r4
 8014e2a:	bf54      	ite	pl
 8014e2c:	f04f 0901 	movpl.w	r9, #1
 8014e30:	f04f 39ff 	movmi.w	r9, #4294967295
 8014e34:	2c00      	cmp	r4, #0
 8014e36:	bfb8      	it	lt
 8014e38:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014e3c:	449c      	add	ip, r3
 8014e3e:	44a8      	add	r8, r5
 8014e40:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014e44:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014e48:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014e4c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014e50:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014e54:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014e58:	bfb8      	it	lt
 8014e5a:	1864      	addlt	r4, r4, r1
 8014e5c:	ea58 0707 	orrs.w	r7, r8, r7
 8014e60:	eb0b 0309 	add.w	r3, fp, r9
 8014e64:	d011      	beq.n	8014e8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014e66:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014e6a:	f1b8 0f00 	cmp.w	r8, #0
 8014e6e:	db0c      	blt.n	8014e8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014e70:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014e72:	45b8      	cmp	r8, r7
 8014e74:	da09      	bge.n	8014e8a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014e76:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8014e7a:	45b8      	cmp	r8, r7
 8014e7c:	bf3c      	itt	cc
 8014e7e:	f10c 0708 	addcc.w	r7, ip, #8
 8014e82:	6107      	strcc	r7, [r0, #16]
 8014e84:	f108 0701 	add.w	r7, r8, #1
 8014e88:	6087      	str	r7, [r0, #8]
 8014e8a:	6907      	ldr	r7, [r0, #16]
 8014e8c:	f04f 0c00 	mov.w	ip, #0
 8014e90:	b212      	sxth	r2, r2
 8014e92:	459e      	cmp	lr, r3
 8014e94:	803b      	strh	r3, [r7, #0]
 8014e96:	807a      	strh	r2, [r7, #2]
 8014e98:	f8a7 c004 	strh.w	ip, [r7, #4]
 8014e9c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014ea0:	442e      	add	r6, r5
 8014ea2:	d04d      	beq.n	8014f40 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8014ea4:	9f04      	ldr	r7, [sp, #16]
 8014ea6:	1bbf      	subs	r7, r7, r6
 8014ea8:	443d      	add	r5, r7
 8014eaa:	016d      	lsls	r5, r5, #5
 8014eac:	fb95 f8f1 	sdiv	r8, r5, r1
 8014eb0:	fb01 5518 	mls	r5, r1, r8, r5
 8014eb4:	4565      	cmp	r5, ip
 8014eb6:	bfb8      	it	lt
 8014eb8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014ebc:	f108 0701 	add.w	r7, r8, #1
 8014ec0:	bfb8      	it	lt
 8014ec2:	186d      	addlt	r5, r5, r1
 8014ec4:	1a64      	subs	r4, r4, r1
 8014ec6:	9703      	str	r7, [sp, #12]
 8014ec8:	f04f 0a00 	mov.w	sl, #0
 8014ecc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014ed0:	1964      	adds	r4, r4, r5
 8014ed2:	bf58      	it	pl
 8014ed4:	9f03      	ldrpl	r7, [sp, #12]
 8014ed6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014eda:	bf48      	it	mi
 8014edc:	4647      	movmi	r7, r8
 8014ede:	44bb      	add	fp, r7
 8014ee0:	f8ac b004 	strh.w	fp, [ip, #4]
 8014ee4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014ee8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014eec:	f8ac b006 	strh.w	fp, [ip, #6]
 8014ef0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014ef4:	443e      	add	r6, r7
 8014ef6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014efa:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014efe:	bf58      	it	pl
 8014f00:	1a64      	subpl	r4, r4, r1
 8014f02:	ea5b 0707 	orrs.w	r7, fp, r7
 8014f06:	444b      	add	r3, r9
 8014f08:	d011      	beq.n	8014f2e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014f0a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014f0e:	f1bb 0f00 	cmp.w	fp, #0
 8014f12:	db0c      	blt.n	8014f2e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014f14:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014f16:	45bb      	cmp	fp, r7
 8014f18:	da09      	bge.n	8014f2e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014f1a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014f1e:	45bb      	cmp	fp, r7
 8014f20:	bf3c      	itt	cc
 8014f22:	f10c 0708 	addcc.w	r7, ip, #8
 8014f26:	6107      	strcc	r7, [r0, #16]
 8014f28:	f10b 0701 	add.w	r7, fp, #1
 8014f2c:	6087      	str	r7, [r0, #8]
 8014f2e:	6907      	ldr	r7, [r0, #16]
 8014f30:	459e      	cmp	lr, r3
 8014f32:	803b      	strh	r3, [r7, #0]
 8014f34:	807a      	strh	r2, [r7, #2]
 8014f36:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014f3a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014f3e:	d1c5      	bne.n	8014ecc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014f40:	9b04      	ldr	r3, [sp, #16]
 8014f42:	1b9e      	subs	r6, r3, r6
 8014f44:	6903      	ldr	r3, [r0, #16]
 8014f46:	889a      	ldrh	r2, [r3, #4]
 8014f48:	4432      	add	r2, r6
 8014f4a:	809a      	strh	r2, [r3, #4]
 8014f4c:	9a02      	ldr	r2, [sp, #8]
 8014f4e:	f102 0c20 	add.w	ip, r2, #32
 8014f52:	9a01      	ldr	r2, [sp, #4]
 8014f54:	ebac 0c02 	sub.w	ip, ip, r2
 8014f58:	88da      	ldrh	r2, [r3, #6]
 8014f5a:	fb06 260c 	mla	r6, r6, ip, r2
 8014f5e:	80de      	strh	r6, [r3, #6]
 8014f60:	f7ff bba9 	b.w	80146b6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08014f64 <_ZN8touchgfx7Outline6lineToEii>:
 8014f64:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014f66:	079b      	lsls	r3, r3, #30
 8014f68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014f6a:	460e      	mov	r6, r1
 8014f6c:	4615      	mov	r5, r2
 8014f6e:	d511      	bpl.n	8014f94 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014f70:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8014f74:	ea86 0701 	eor.w	r7, r6, r1
 8014f78:	ea85 0302 	eor.w	r3, r5, r2
 8014f7c:	433b      	orrs	r3, r7
 8014f7e:	d009      	beq.n	8014f94 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014f80:	4633      	mov	r3, r6
 8014f82:	9500      	str	r5, [sp, #0]
 8014f84:	f7ff fb3e 	bl	8014604 <_ZN8touchgfx7Outline10renderLineEiiii>
 8014f88:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014f8a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8014f8e:	f043 0301 	orr.w	r3, r3, #1
 8014f92:	6243      	str	r3, [r0, #36]	; 0x24
 8014f94:	b003      	add	sp, #12
 8014f96:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014f98 <_ZN8touchgfx7Outline6moveToEii>:
 8014f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014f9a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014f9c:	4615      	mov	r5, r2
 8014f9e:	079a      	lsls	r2, r3, #30
 8014fa0:	4604      	mov	r4, r0
 8014fa2:	460e      	mov	r6, r1
 8014fa4:	d401      	bmi.n	8014faa <_ZN8touchgfx7Outline6moveToEii+0x12>
 8014fa6:	f7ff faf9 	bl	801459c <_ZN8touchgfx7Outline5resetEv>
 8014faa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014fac:	07db      	lsls	r3, r3, #31
 8014fae:	d504      	bpl.n	8014fba <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014fb0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014fb4:	4620      	mov	r0, r4
 8014fb6:	f7ff ffd5 	bl	8014f64 <_ZN8touchgfx7Outline6lineToEii>
 8014fba:	6923      	ldr	r3, [r4, #16]
 8014fbc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014fc0:	1170      	asrs	r0, r6, #5
 8014fc2:	4290      	cmp	r0, r2
 8014fc4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014fc8:	d103      	bne.n	8014fd2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8014fca:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014fce:	4291      	cmp	r1, r2
 8014fd0:	d01a      	beq.n	8015008 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014fd2:	88df      	ldrh	r7, [r3, #6]
 8014fd4:	889a      	ldrh	r2, [r3, #4]
 8014fd6:	433a      	orrs	r2, r7
 8014fd8:	d010      	beq.n	8014ffc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014fda:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014fde:	2a00      	cmp	r2, #0
 8014fe0:	db0c      	blt.n	8014ffc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014fe2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014fe4:	42ba      	cmp	r2, r7
 8014fe6:	da09      	bge.n	8014ffc <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014fe8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8014fec:	42ba      	cmp	r2, r7
 8014fee:	bf38      	it	cc
 8014ff0:	3308      	addcc	r3, #8
 8014ff2:	f102 0201 	add.w	r2, r2, #1
 8014ff6:	bf38      	it	cc
 8014ff8:	6123      	strcc	r3, [r4, #16]
 8014ffa:	60a2      	str	r2, [r4, #8]
 8014ffc:	6923      	ldr	r3, [r4, #16]
 8014ffe:	2200      	movs	r2, #0
 8015000:	8018      	strh	r0, [r3, #0]
 8015002:	8059      	strh	r1, [r3, #2]
 8015004:	809a      	strh	r2, [r3, #4]
 8015006:	80da      	strh	r2, [r3, #6]
 8015008:	6166      	str	r6, [r4, #20]
 801500a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801500e:	6225      	str	r5, [r4, #32]
 8015010:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015012 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8015012:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8015016:	b0d0      	sub	sp, #320	; 0x140
 8015018:	466c      	mov	r4, sp
 801501a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801501e:	4627      	mov	r7, r4
 8015020:	1a0d      	subs	r5, r1, r0
 8015022:	2d48      	cmp	r5, #72	; 0x48
 8015024:	f100 0308 	add.w	r3, r0, #8
 8015028:	f340 80d5 	ble.w	80151d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801502c:	112d      	asrs	r5, r5, #4
 801502e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8015032:	f9b0 9000 	ldrsh.w	r9, [r0]
 8015036:	6816      	ldr	r6, [r2, #0]
 8015038:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801503c:	6006      	str	r6, [r0, #0]
 801503e:	6856      	ldr	r6, [r2, #4]
 8015040:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8015044:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8015048:	6046      	str	r6, [r0, #4]
 801504a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801504e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8015052:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015056:	f8a2 c006 	strh.w	ip, [r2, #6]
 801505a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801505e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8015062:	4565      	cmp	r5, ip
 8015064:	f1a1 0208 	sub.w	r2, r1, #8
 8015068:	db06      	blt.n	8015078 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801506a:	d119      	bne.n	80150a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801506c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8015070:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8015074:	42ae      	cmp	r6, r5
 8015076:	dd13      	ble.n	80150a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8015078:	460e      	mov	r6, r1
 801507a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801507e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015082:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8015086:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801508a:	601d      	str	r5, [r3, #0]
 801508c:	6875      	ldr	r5, [r6, #4]
 801508e:	605d      	str	r5, [r3, #4]
 8015090:	f821 9c08 	strh.w	r9, [r1, #-8]
 8015094:	f821 cc06 	strh.w	ip, [r1, #-6]
 8015098:	f821 8c04 	strh.w	r8, [r1, #-4]
 801509c:	f821 ec02 	strh.w	lr, [r1, #-2]
 80150a0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80150a4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 80150a8:	42ae      	cmp	r6, r5
 80150aa:	db06      	blt.n	80150ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 80150ac:	d116      	bne.n	80150dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80150ae:	f9b0 c000 	ldrsh.w	ip, [r0]
 80150b2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 80150b6:	45ac      	cmp	ip, r5
 80150b8:	da10      	bge.n	80150dc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80150ba:	681d      	ldr	r5, [r3, #0]
 80150bc:	f9b0 8000 	ldrsh.w	r8, [r0]
 80150c0:	6005      	str	r5, [r0, #0]
 80150c2:	685d      	ldr	r5, [r3, #4]
 80150c4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80150c8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80150cc:	f8a0 8008 	strh.w	r8, [r0, #8]
 80150d0:	6045      	str	r5, [r0, #4]
 80150d2:	8146      	strh	r6, [r0, #10]
 80150d4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80150d8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80150dc:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80150e0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80150e4:	4565      	cmp	r5, ip
 80150e6:	db06      	blt.n	80150f6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80150e8:	d119      	bne.n	801511e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80150ea:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80150ee:	f9b0 5000 	ldrsh.w	r5, [r0]
 80150f2:	42ae      	cmp	r6, r5
 80150f4:	da13      	bge.n	801511e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80150f6:	460e      	mov	r6, r1
 80150f8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80150fc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8015100:	6005      	str	r5, [r0, #0]
 8015102:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8015106:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801510a:	6875      	ldr	r5, [r6, #4]
 801510c:	6045      	str	r5, [r0, #4]
 801510e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8015112:	f821 cc06 	strh.w	ip, [r1, #-6]
 8015116:	f821 8c04 	strh.w	r8, [r1, #-4]
 801511a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801511e:	3308      	adds	r3, #8
 8015120:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8015124:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8015128:	45e6      	cmp	lr, ip
 801512a:	dbf8      	blt.n	801511e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801512c:	d105      	bne.n	801513a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801512e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015132:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015136:	42ae      	cmp	r6, r5
 8015138:	dbf1      	blt.n	801511e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801513a:	4615      	mov	r5, r2
 801513c:	3a08      	subs	r2, #8
 801513e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8015142:	45b4      	cmp	ip, r6
 8015144:	dbf9      	blt.n	801513a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015146:	d105      	bne.n	8015154 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8015148:	f9b0 8000 	ldrsh.w	r8, [r0]
 801514c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8015150:	45b0      	cmp	r8, r6
 8015152:	dbf2      	blt.n	801513a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015154:	4293      	cmp	r3, r2
 8015156:	f1a5 0608 	sub.w	r6, r5, #8
 801515a:	d816      	bhi.n	801518a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801515c:	f8d6 c000 	ldr.w	ip, [r6]
 8015160:	f9b3 a000 	ldrsh.w	sl, [r3]
 8015164:	f8c3 c000 	str.w	ip, [r3]
 8015168:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801516c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8015170:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8015174:	f8c3 c004 	str.w	ip, [r3, #4]
 8015178:	f825 ac08 	strh.w	sl, [r5, #-8]
 801517c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8015180:	f825 9c04 	strh.w	r9, [r5, #-4]
 8015184:	f825 8c02 	strh.w	r8, [r5, #-2]
 8015188:	e7c9      	b.n	801511e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801518a:	f8d6 e000 	ldr.w	lr, [r6]
 801518e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8015192:	f8c0 e000 	str.w	lr, [r0]
 8015196:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801519a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801519e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80151a2:	f8c0 e004 	str.w	lr, [r0, #4]
 80151a6:	f825 ac08 	strh.w	sl, [r5, #-8]
 80151aa:	f825 cc06 	strh.w	ip, [r5, #-6]
 80151ae:	f825 9c04 	strh.w	r9, [r5, #-4]
 80151b2:	f825 8c02 	strh.w	r8, [r5, #-2]
 80151b6:	1acd      	subs	r5, r1, r3
 80151b8:	1a16      	subs	r6, r2, r0
 80151ba:	10ed      	asrs	r5, r5, #3
 80151bc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80151c0:	bfb5      	itete	lt
 80151c2:	e9c4 0200 	strdlt	r0, r2, [r4]
 80151c6:	e9c4 3100 	strdge	r3, r1, [r4]
 80151ca:	460a      	movlt	r2, r1
 80151cc:	4603      	movge	r3, r0
 80151ce:	3408      	adds	r4, #8
 80151d0:	4618      	mov	r0, r3
 80151d2:	4611      	mov	r1, r2
 80151d4:	e724      	b.n	8015020 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80151d6:	4299      	cmp	r1, r3
 80151d8:	d928      	bls.n	801522c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80151da:	f1a3 0210 	sub.w	r2, r3, #16
 80151de:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80151e2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80151e6:	45ac      	cmp	ip, r5
 80151e8:	db06      	blt.n	80151f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80151ea:	d11d      	bne.n	8015228 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80151ec:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80151f0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80151f4:	42ae      	cmp	r6, r5
 80151f6:	da17      	bge.n	8015228 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80151f8:	4615      	mov	r5, r2
 80151fa:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80151fe:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8015202:	6116      	str	r6, [r2, #16]
 8015204:	686e      	ldr	r6, [r5, #4]
 8015206:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801520a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801520e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8015212:	42a8      	cmp	r0, r5
 8015214:	6156      	str	r6, [r2, #20]
 8015216:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801521a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801521e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8015222:	f1a2 0208 	sub.w	r2, r2, #8
 8015226:	d1da      	bne.n	80151de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8015228:	3308      	adds	r3, #8
 801522a:	e7d4      	b.n	80151d6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801522c:	42bc      	cmp	r4, r7
 801522e:	d903      	bls.n	8015238 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8015230:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8015234:	3c08      	subs	r4, #8
 8015236:	e6f3      	b.n	8015020 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8015238:	b050      	add	sp, #320	; 0x140
 801523a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801523e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801523e:	b510      	push	{r4, lr}
 8015240:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015242:	07da      	lsls	r2, r3, #31
 8015244:	4604      	mov	r4, r0
 8015246:	d507      	bpl.n	8015258 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8015248:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801524c:	f7ff fe8a 	bl	8014f64 <_ZN8touchgfx7Outline6lineToEii>
 8015250:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8015252:	f023 0301 	bic.w	r3, r3, #1
 8015256:	6243      	str	r3, [r0, #36]	; 0x24
 8015258:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801525a:	079b      	lsls	r3, r3, #30
 801525c:	d521      	bpl.n	80152a2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801525e:	6923      	ldr	r3, [r4, #16]
 8015260:	88d9      	ldrh	r1, [r3, #6]
 8015262:	889a      	ldrh	r2, [r3, #4]
 8015264:	430a      	orrs	r2, r1
 8015266:	d010      	beq.n	801528a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015268:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801526c:	2a00      	cmp	r2, #0
 801526e:	db0c      	blt.n	801528a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015270:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8015272:	428a      	cmp	r2, r1
 8015274:	da09      	bge.n	801528a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015276:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801527a:	4291      	cmp	r1, r2
 801527c:	bf88      	it	hi
 801527e:	3308      	addhi	r3, #8
 8015280:	f102 0201 	add.w	r2, r2, #1
 8015284:	bf88      	it	hi
 8015286:	6123      	strhi	r3, [r4, #16]
 8015288:	60a2      	str	r2, [r4, #8]
 801528a:	68a1      	ldr	r1, [r4, #8]
 801528c:	b129      	cbz	r1, 801529a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801528e:	6863      	ldr	r3, [r4, #4]
 8015290:	4299      	cmp	r1, r3
 8015292:	d802      	bhi.n	801529a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8015294:	68e0      	ldr	r0, [r4, #12]
 8015296:	f7ff febc 	bl	8015012 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801529a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801529c:	f023 0302 	bic.w	r3, r3, #2
 80152a0:	6263      	str	r3, [r4, #36]	; 0x24
 80152a2:	68e0      	ldr	r0, [r4, #12]
 80152a4:	bd10      	pop	{r4, pc}
	...

080152a8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80152a8:	4b02      	ldr	r3, [pc, #8]	; (80152b4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80152aa:	6018      	str	r0, [r3, #0]
 80152ac:	4b02      	ldr	r3, [pc, #8]	; (80152b8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80152ae:	6019      	str	r1, [r3, #0]
 80152b0:	4770      	bx	lr
 80152b2:	bf00      	nop
 80152b4:	2001383c 	.word	0x2001383c
 80152b8:	20013840 	.word	0x20013840

080152bc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80152bc:	4a02      	ldr	r2, [pc, #8]	; (80152c8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80152be:	2300      	movs	r3, #0
 80152c0:	6013      	str	r3, [r2, #0]
 80152c2:	4a02      	ldr	r2, [pc, #8]	; (80152cc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80152c4:	6013      	str	r3, [r2, #0]
 80152c6:	4770      	bx	lr
 80152c8:	2001383c 	.word	0x2001383c
 80152cc:	20013840 	.word	0x20013840

080152d0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80152d0:	4b01      	ldr	r3, [pc, #4]	; (80152d8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80152d2:	6818      	ldr	r0, [r3, #0]
 80152d4:	4770      	bx	lr
 80152d6:	bf00      	nop
 80152d8:	2001383c 	.word	0x2001383c

080152dc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80152dc:	4b01      	ldr	r3, [pc, #4]	; (80152e4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80152de:	6818      	ldr	r0, [r3, #0]
 80152e0:	4770      	bx	lr
 80152e2:	bf00      	nop
 80152e4:	20013840 	.word	0x20013840

080152e8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80152e8:	b510      	push	{r4, lr}
 80152ea:	6803      	ldr	r3, [r0, #0]
 80152ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80152ee:	460c      	mov	r4, r1
 80152f0:	4798      	blx	r3
 80152f2:	1b03      	subs	r3, r0, r4
 80152f4:	4258      	negs	r0, r3
 80152f6:	4158      	adcs	r0, r3
 80152f8:	bd10      	pop	{r4, pc}
	...

080152fc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80152fc:	4b01      	ldr	r3, [pc, #4]	; (8015304 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80152fe:	6019      	str	r1, [r3, #0]
 8015300:	4770      	bx	lr
 8015302:	bf00      	nop
 8015304:	20013844 	.word	0x20013844

08015308 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8015308:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801530c:	4696      	mov	lr, r2
 801530e:	4605      	mov	r5, r0
 8015310:	4614      	mov	r4, r2
 8015312:	460e      	mov	r6, r1
 8015314:	461f      	mov	r7, r3
 8015316:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801531a:	b097      	sub	sp, #92	; 0x5c
 801531c:	f10d 0c1c 	add.w	ip, sp, #28
 8015320:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015324:	f8de 3000 	ldr.w	r3, [lr]
 8015328:	f8cc 3000 	str.w	r3, [ip]
 801532c:	f104 0e14 	add.w	lr, r4, #20
 8015330:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015334:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015338:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801533c:	f8de 3000 	ldr.w	r3, [lr]
 8015340:	f8cc 3000 	str.w	r3, [ip]
 8015344:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8015348:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801534c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8015350:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015354:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8015358:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801535c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8015360:	f8de 3000 	ldr.w	r3, [lr]
 8015364:	f8cc 3000 	str.w	r3, [ip]
 8015368:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801536a:	682b      	ldr	r3, [r5, #0]
 801536c:	9201      	str	r2, [sp, #4]
 801536e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8015372:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015374:	9200      	str	r2, [sp, #0]
 8015376:	f8cd 8008 	str.w	r8, [sp, #8]
 801537a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801537e:	aa07      	add	r2, sp, #28
 8015380:	463b      	mov	r3, r7
 8015382:	4631      	mov	r1, r6
 8015384:	4628      	mov	r0, r5
 8015386:	47d8      	blx	fp
 8015388:	46a6      	mov	lr, r4
 801538a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801538e:	f10d 0c1c 	add.w	ip, sp, #28
 8015392:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015396:	f8de 3000 	ldr.w	r3, [lr]
 801539a:	f8cc 3000 	str.w	r3, [ip]
 801539e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80153a2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80153a6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80153aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80153ae:	343c      	adds	r4, #60	; 0x3c
 80153b0:	f8de 3000 	ldr.w	r3, [lr]
 80153b4:	f8cc 3000 	str.w	r3, [ip]
 80153b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80153ba:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80153be:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80153c2:	6823      	ldr	r3, [r4, #0]
 80153c4:	f8cc 3000 	str.w	r3, [ip]
 80153c8:	682b      	ldr	r3, [r5, #0]
 80153ca:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80153ce:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80153d0:	9201      	str	r2, [sp, #4]
 80153d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80153d4:	9200      	str	r2, [sp, #0]
 80153d6:	f8cd 8008 	str.w	r8, [sp, #8]
 80153da:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80153dc:	aa07      	add	r2, sp, #28
 80153de:	463b      	mov	r3, r7
 80153e0:	4631      	mov	r1, r6
 80153e2:	4628      	mov	r0, r5
 80153e4:	47a0      	blx	r4
 80153e6:	b017      	add	sp, #92	; 0x5c
 80153e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153ec <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80153ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153f0:	b08d      	sub	sp, #52	; 0x34
 80153f2:	4688      	mov	r8, r1
 80153f4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80153f6:	f8d3 c000 	ldr.w	ip, [r3]
 80153fa:	680f      	ldr	r7, [r1, #0]
 80153fc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8015400:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8015404:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8015408:	edd3 6a07 	vldr	s13, [r3, #28]
 801540c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801540e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8015412:	f9b1 9000 	ldrsh.w	r9, [r1]
 8015416:	f9ba 1000 	ldrsh.w	r1, [sl]
 801541a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801541e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8015422:	eba7 070c 	sub.w	r7, r7, ip
 8015426:	42bc      	cmp	r4, r7
 8015428:	bfa8      	it	ge
 801542a:	463c      	movge	r4, r7
 801542c:	ee07 4a90 	vmov	s15, r4
 8015430:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8015434:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8015438:	ee25 4a04 	vmul.f32	s8, s10, s8
 801543c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8015440:	ee25 5a27 	vmul.f32	s10, s10, s15
 8015444:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8015448:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801544c:	eb09 0e0c 	add.w	lr, r9, ip
 8015450:	4571      	cmp	r1, lr
 8015452:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8015456:	ee32 1a05 	vadd.f32	s2, s4, s10
 801545a:	ee36 0a84 	vadd.f32	s0, s13, s8
 801545e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015462:	ee22 2a07 	vmul.f32	s4, s4, s14
 8015466:	f340 808d 	ble.w	8015584 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801546a:	eba1 060e 	sub.w	r6, r1, lr
 801546e:	fb96 f5f4 	sdiv	r5, r6, r4
 8015472:	ee07 5a10 	vmov	s14, r5
 8015476:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801547a:	2d00      	cmp	r5, #0
 801547c:	fb04 6615 	mls	r6, r4, r5, r6
 8015480:	eea7 0a04 	vfma.f32	s0, s14, s8
 8015484:	eee7 0a24 	vfma.f32	s1, s14, s9
 8015488:	eea7 1a05 	vfma.f32	s2, s14, s10
 801548c:	dd13      	ble.n	80154b6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801548e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8015492:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8015496:	eef5 6a40 	vcmp.f32	s13, #0.0
 801549a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801549e:	bf18      	it	ne
 80154a0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80154a4:	ee31 2a45 	vsub.f32	s4, s2, s10
 80154a8:	bf08      	it	eq
 80154aa:	eeb0 7a67 	vmoveq.f32	s14, s15
 80154ae:	ee61 1a87 	vmul.f32	s3, s3, s14
 80154b2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80154b6:	fb05 f204 	mul.w	r2, r5, r4
 80154ba:	1abf      	subs	r7, r7, r2
 80154bc:	4494      	add	ip, r2
 80154be:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80154c2:	4411      	add	r1, r2
 80154c4:	eb09 020c 	add.w	r2, r9, ip
 80154c8:	443a      	add	r2, r7
 80154ca:	b209      	sxth	r1, r1
 80154cc:	428a      	cmp	r2, r1
 80154ce:	bfc4      	itt	gt
 80154d0:	eba1 0209 	subgt.w	r2, r1, r9
 80154d4:	eba2 070c 	subgt.w	r7, r2, ip
 80154d8:	2f00      	cmp	r7, #0
 80154da:	dd50      	ble.n	801557e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80154dc:	fb97 f1f4 	sdiv	r1, r7, r4
 80154e0:	fb04 7211 	mls	r2, r4, r1, r7
 80154e4:	b90a      	cbnz	r2, 80154ea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80154e6:	3901      	subs	r1, #1
 80154e8:	4622      	mov	r2, r4
 80154ea:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80154ee:	6840      	ldr	r0, [r0, #4]
 80154f0:	900b      	str	r0, [sp, #44]	; 0x2c
 80154f2:	f8d0 a000 	ldr.w	sl, [r0]
 80154f6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80154f8:	9008      	str	r0, [sp, #32]
 80154fa:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80154fe:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015500:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8015504:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8015508:	695b      	ldr	r3, [r3, #20]
 801550a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801550c:	445b      	add	r3, fp
 801550e:	eef0 6a42 	vmov.f32	s13, s4
 8015512:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8015516:	ee21 3a23 	vmul.f32	s6, s2, s7
 801551a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801551e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015522:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015526:	9307      	str	r3, [sp, #28]
 8015528:	ee17 7a90 	vmov	r7, s15
 801552c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8015530:	eeb0 7a61 	vmov.f32	s14, s3
 8015534:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015538:	ee16 3a90 	vmov	r3, s13
 801553c:	fb97 f7f4 	sdiv	r7, r7, r4
 8015540:	ee17 ca90 	vmov	ip, s15
 8015544:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015548:	fb9c fcf4 	sdiv	ip, ip, r4
 801554c:	fb0c 3306 	mla	r3, ip, r6, r3
 8015550:	9302      	str	r3, [sp, #8]
 8015552:	ee17 3a10 	vmov	r3, s14
 8015556:	44b6      	add	lr, r6
 8015558:	fb04 e505 	mla	r5, r4, r5, lr
 801555c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8015560:	fb07 3706 	mla	r7, r7, r6, r3
 8015564:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8015568:	e9cd 4700 	strd	r4, r7, [sp]
 801556c:	2900      	cmp	r1, #0
 801556e:	bfcc      	ite	gt
 8015570:	46a1      	movgt	r9, r4
 8015572:	4691      	movle	r9, r2
 8015574:	eba9 0306 	sub.w	r3, r9, r6
 8015578:	f8da 4008 	ldr.w	r4, [sl, #8]
 801557c:	47a0      	blx	r4
 801557e:	b00d      	add	sp, #52	; 0x34
 8015580:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015584:	2500      	movs	r5, #0
 8015586:	462e      	mov	r6, r5
 8015588:	e799      	b.n	80154be <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801558c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801558c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015590:	b0db      	sub	sp, #364	; 0x16c
 8015592:	461d      	mov	r5, r3
 8015594:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8015598:	930a      	str	r3, [sp, #40]	; 0x28
 801559a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801559e:	930b      	str	r3, [sp, #44]	; 0x2c
 80155a0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80155a4:	9310      	str	r3, [sp, #64]	; 0x40
 80155a6:	6803      	ldr	r3, [r0, #0]
 80155a8:	910f      	str	r1, [sp, #60]	; 0x3c
 80155aa:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80155ac:	9009      	str	r0, [sp, #36]	; 0x24
 80155ae:	4614      	mov	r4, r2
 80155b0:	4629      	mov	r1, r5
 80155b2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80155b6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80155ba:	47b8      	blx	r7
 80155bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155be:	6058      	str	r0, [r3, #4]
 80155c0:	2800      	cmp	r0, #0
 80155c2:	f000 83a1 	beq.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155c6:	682b      	ldr	r3, [r5, #0]
 80155c8:	9314      	str	r3, [sp, #80]	; 0x50
 80155ca:	686b      	ldr	r3, [r5, #4]
 80155cc:	9315      	str	r3, [sp, #84]	; 0x54
 80155ce:	4bc4      	ldr	r3, [pc, #784]	; (80158e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80155d0:	ed94 7a02 	vldr	s14, [r4, #8]
 80155d4:	7819      	ldrb	r1, [r3, #0]
 80155d6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80155da:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80155de:	2900      	cmp	r1, #0
 80155e0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80155e4:	bf16      	itet	ne
 80155e6:	4619      	movne	r1, r3
 80155e8:	4611      	moveq	r1, r2
 80155ea:	4613      	movne	r3, r2
 80155ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155f0:	9116      	str	r1, [sp, #88]	; 0x58
 80155f2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80155f6:	f240 8387 	bls.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155fa:	ed94 7a07 	vldr	s14, [r4, #28]
 80155fe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015606:	f240 837f 	bls.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801560a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801560e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015612:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015616:	f240 8377 	bls.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801561a:	6822      	ldr	r2, [r4, #0]
 801561c:	4bb1      	ldr	r3, [pc, #708]	; (80158e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801561e:	429a      	cmp	r2, r3
 8015620:	f2c0 8372 	blt.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015624:	49b0      	ldr	r1, [pc, #704]	; (80158e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8015626:	6963      	ldr	r3, [r4, #20]
 8015628:	428a      	cmp	r2, r1
 801562a:	f300 836d 	bgt.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801562e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015632:	48ae      	ldr	r0, [pc, #696]	; (80158ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015634:	33ff      	adds	r3, #255	; 0xff
 8015636:	4283      	cmp	r3, r0
 8015638:	f200 8366 	bhi.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801563c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801563e:	4dac      	ldr	r5, [pc, #688]	; (80158f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015640:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015644:	33ff      	adds	r3, #255	; 0xff
 8015646:	42ab      	cmp	r3, r5
 8015648:	f200 835e 	bhi.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801564c:	6862      	ldr	r2, [r4, #4]
 801564e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8015652:	33ff      	adds	r3, #255	; 0xff
 8015654:	4283      	cmp	r3, r0
 8015656:	f200 8357 	bhi.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801565a:	69a1      	ldr	r1, [r4, #24]
 801565c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8015660:	33ff      	adds	r3, #255	; 0xff
 8015662:	4283      	cmp	r3, r0
 8015664:	f200 8350 	bhi.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015668:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801566a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801566e:	30ff      	adds	r0, #255	; 0xff
 8015670:	42a8      	cmp	r0, r5
 8015672:	f200 8349 	bhi.w	8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015676:	428a      	cmp	r2, r1
 8015678:	f280 8110 	bge.w	801589c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801567c:	429a      	cmp	r2, r3
 801567e:	f300 8119 	bgt.w	80158b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015682:	4299      	cmp	r1, r3
 8015684:	f280 811d 	bge.w	80158c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015688:	2502      	movs	r5, #2
 801568a:	2701      	movs	r7, #1
 801568c:	46a9      	mov	r9, r5
 801568e:	46b8      	mov	r8, r7
 8015690:	f04f 0a00 	mov.w	sl, #0
 8015694:	4621      	mov	r1, r4
 8015696:	a849      	add	r0, sp, #292	; 0x124
 8015698:	f003 ff2a 	bl	80194f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801569c:	4622      	mov	r2, r4
 801569e:	4653      	mov	r3, sl
 80156a0:	a949      	add	r1, sp, #292	; 0x124
 80156a2:	f8cd 9000 	str.w	r9, [sp]
 80156a6:	a819      	add	r0, sp, #100	; 0x64
 80156a8:	f004 f852 	bl	8019750 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80156ac:	4622      	mov	r2, r4
 80156ae:	4653      	mov	r3, sl
 80156b0:	a949      	add	r1, sp, #292	; 0x124
 80156b2:	f8cd 8000 	str.w	r8, [sp]
 80156b6:	a829      	add	r0, sp, #164	; 0xa4
 80156b8:	f004 f84a 	bl	8019750 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80156bc:	4643      	mov	r3, r8
 80156be:	4622      	mov	r2, r4
 80156c0:	a949      	add	r1, sp, #292	; 0x124
 80156c2:	f8cd 9000 	str.w	r9, [sp]
 80156c6:	a839      	add	r0, sp, #228	; 0xe4
 80156c8:	f004 f842 	bl	8019750 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80156cc:	42af      	cmp	r7, r5
 80156ce:	bfb5      	itete	lt
 80156d0:	2300      	movlt	r3, #0
 80156d2:	2301      	movge	r3, #1
 80156d4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80156d6:	930e      	strge	r3, [sp, #56]	; 0x38
 80156d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80156da:	e893 0003 	ldmia.w	r3, {r0, r1}
 80156de:	af12      	add	r7, sp, #72	; 0x48
 80156e0:	bfb9      	ittee	lt
 80156e2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80156e4:	ac19      	addlt	r4, sp, #100	; 0x64
 80156e6:	ad19      	addge	r5, sp, #100	; 0x64
 80156e8:	ac29      	addge	r4, sp, #164	; 0xa4
 80156ea:	e887 0003 	stmia.w	r7, {r0, r1}
 80156ee:	b928      	cbnz	r0, 80156fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80156f0:	4b80      	ldr	r3, [pc, #512]	; (80158f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80156f2:	6818      	ldr	r0, [r3, #0]
 80156f4:	6803      	ldr	r3, [r0, #0]
 80156f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80156f8:	4798      	blx	r3
 80156fa:	6038      	str	r0, [r7, #0]
 80156fc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80156fe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015702:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015706:	930c      	str	r3, [sp, #48]	; 0x30
 8015708:	990c      	ldr	r1, [sp, #48]	; 0x30
 801570a:	6963      	ldr	r3, [r4, #20]
 801570c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801570e:	440b      	add	r3, r1
 8015710:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015714:	4408      	add	r0, r1
 8015716:	b200      	sxth	r0, r0
 8015718:	4283      	cmp	r3, r0
 801571a:	900d      	str	r0, [sp, #52]	; 0x34
 801571c:	f280 80dd 	bge.w	80158da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015720:	428b      	cmp	r3, r1
 8015722:	da08      	bge.n	8015736 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015724:	2a00      	cmp	r2, #0
 8015726:	dd06      	ble.n	8015736 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015728:	1acb      	subs	r3, r1, r3
 801572a:	429a      	cmp	r2, r3
 801572c:	f2c0 80e4 	blt.w	80158f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015730:	2b00      	cmp	r3, #0
 8015732:	f300 80e2 	bgt.w	80158fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015736:	6967      	ldr	r7, [r4, #20]
 8015738:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801573a:	443b      	add	r3, r7
 801573c:	461f      	mov	r7, r3
 801573e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015740:	1bdf      	subs	r7, r3, r7
 8015742:	4297      	cmp	r7, r2
 8015744:	bfa8      	it	ge
 8015746:	4617      	movge	r7, r2
 8015748:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801574c:	2f00      	cmp	r7, #0
 801574e:	f340 8166 	ble.w	8015a1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015752:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015754:	6829      	ldr	r1, [r5, #0]
 8015756:	f9b3 2000 	ldrsh.w	r2, [r3]
 801575a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801575e:	6820      	ldr	r0, [r4, #0]
 8015760:	4411      	add	r1, r2
 8015762:	4299      	cmp	r1, r3
 8015764:	dd1a      	ble.n	801579c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015766:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801576a:	440b      	add	r3, r1
 801576c:	4402      	add	r2, r0
 801576e:	b21b      	sxth	r3, r3
 8015770:	429a      	cmp	r2, r3
 8015772:	dc13      	bgt.n	801579c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015774:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015776:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015778:	681b      	ldr	r3, [r3, #0]
 801577a:	9206      	str	r2, [sp, #24]
 801577c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801577e:	9205      	str	r2, [sp, #20]
 8015780:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015782:	9500      	str	r5, [sp, #0]
 8015784:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015788:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801578a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801578c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015790:	a912      	add	r1, sp, #72	; 0x48
 8015792:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015796:	aa49      	add	r2, sp, #292	; 0x124
 8015798:	4623      	mov	r3, r4
 801579a:	47c8      	blx	r9
 801579c:	e9d4 2300 	ldrd	r2, r3, [r4]
 80157a0:	441a      	add	r2, r3
 80157a2:	6963      	ldr	r3, [r4, #20]
 80157a4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80157a8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80157ac:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80157b0:	68a1      	ldr	r1, [r4, #8]
 80157b2:	ed94 6a08 	vldr	s12, [r4, #32]
 80157b6:	6022      	str	r2, [r4, #0]
 80157b8:	3301      	adds	r3, #1
 80157ba:	6163      	str	r3, [r4, #20]
 80157bc:	69a3      	ldr	r3, [r4, #24]
 80157be:	ee37 7a27 	vadd.f32	s14, s14, s15
 80157c2:	3b01      	subs	r3, #1
 80157c4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80157c8:	61a3      	str	r3, [r4, #24]
 80157ca:	6923      	ldr	r3, [r4, #16]
 80157cc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80157d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80157d4:	edd4 6a07 	vldr	s13, [r4, #28]
 80157d8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80157dc:	440b      	add	r3, r1
 80157de:	68e1      	ldr	r1, [r4, #12]
 80157e0:	6123      	str	r3, [r4, #16]
 80157e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80157e6:	428b      	cmp	r3, r1
 80157e8:	edc4 6a07 	vstr	s13, [r4, #28]
 80157ec:	db15      	blt.n	801581a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80157ee:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80157f2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80157f6:	3201      	adds	r2, #1
 80157f8:	edc4 6a07 	vstr	s13, [r4, #28]
 80157fc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015800:	6022      	str	r2, [r4, #0]
 8015802:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015806:	1a5b      	subs	r3, r3, r1
 8015808:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801580c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015810:	6123      	str	r3, [r4, #16]
 8015812:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015816:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801581a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801581e:	441a      	add	r2, r3
 8015820:	696b      	ldr	r3, [r5, #20]
 8015822:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015826:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801582a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801582e:	68a9      	ldr	r1, [r5, #8]
 8015830:	ed95 6a08 	vldr	s12, [r5, #32]
 8015834:	602a      	str	r2, [r5, #0]
 8015836:	3301      	adds	r3, #1
 8015838:	616b      	str	r3, [r5, #20]
 801583a:	69ab      	ldr	r3, [r5, #24]
 801583c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015840:	3b01      	subs	r3, #1
 8015842:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015846:	61ab      	str	r3, [r5, #24]
 8015848:	692b      	ldr	r3, [r5, #16]
 801584a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801584e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015852:	edd5 6a07 	vldr	s13, [r5, #28]
 8015856:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801585a:	440b      	add	r3, r1
 801585c:	68e9      	ldr	r1, [r5, #12]
 801585e:	612b      	str	r3, [r5, #16]
 8015860:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015864:	428b      	cmp	r3, r1
 8015866:	edc5 6a07 	vstr	s13, [r5, #28]
 801586a:	db15      	blt.n	8015898 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801586c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015870:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015874:	3201      	adds	r2, #1
 8015876:	edc5 6a07 	vstr	s13, [r5, #28]
 801587a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801587e:	602a      	str	r2, [r5, #0]
 8015880:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015884:	1a5b      	subs	r3, r3, r1
 8015886:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801588a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801588e:	612b      	str	r3, [r5, #16]
 8015890:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015894:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015898:	3f01      	subs	r7, #1
 801589a:	e757      	b.n	801574c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801589c:	4299      	cmp	r1, r3
 801589e:	dc13      	bgt.n	80158c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80158a0:	429a      	cmp	r2, r3
 80158a2:	da14      	bge.n	80158ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80158a4:	2502      	movs	r5, #2
 80158a6:	2703      	movs	r7, #3
 80158a8:	46a9      	mov	r9, r5
 80158aa:	f04f 0800 	mov.w	r8, #0
 80158ae:	f04f 0a01 	mov.w	sl, #1
 80158b2:	e6ef      	b.n	8015694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80158b4:	2501      	movs	r5, #1
 80158b6:	2700      	movs	r7, #0
 80158b8:	46a9      	mov	r9, r5
 80158ba:	46b8      	mov	r8, r7
 80158bc:	f04f 0a02 	mov.w	sl, #2
 80158c0:	e6e8      	b.n	8015694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80158c2:	2501      	movs	r5, #1
 80158c4:	2702      	movs	r7, #2
 80158c6:	e6e1      	b.n	801568c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80158c8:	2500      	movs	r5, #0
 80158ca:	2701      	movs	r7, #1
 80158cc:	e7f4      	b.n	80158b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80158ce:	2702      	movs	r7, #2
 80158d0:	2503      	movs	r5, #3
 80158d2:	f04f 0900 	mov.w	r9, #0
 80158d6:	46b8      	mov	r8, r7
 80158d8:	e7e9      	b.n	80158ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80158da:	4613      	mov	r3, r2
 80158dc:	e728      	b.n	8015730 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80158de:	bf00      	nop
 80158e0:	2001382c 	.word	0x2001382c
 80158e4:	fffd8f01 	.word	0xfffd8f01
 80158e8:	00027100 	.word	0x00027100
 80158ec:	0004e1ff 	.word	0x0004e1ff
 80158f0:	0004e1fe 	.word	0x0004e1fe
 80158f4:	20013834 	.word	0x20013834
 80158f8:	4613      	mov	r3, r2
 80158fa:	992b      	ldr	r1, [sp, #172]	; 0xac
 80158fc:	9111      	str	r1, [sp, #68]	; 0x44
 80158fe:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8015902:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8015906:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8015908:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801590c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8015910:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8015914:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8015918:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801591c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015920:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8015924:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8015928:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801592c:	469e      	mov	lr, r3
 801592e:	469c      	mov	ip, r3
 8015930:	f04f 0900 	mov.w	r9, #0
 8015934:	f1bc 0f00 	cmp.w	ip, #0
 8015938:	d147      	bne.n	80159ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801593a:	eb03 0c07 	add.w	ip, r3, r7
 801593e:	1ad7      	subs	r7, r2, r3
 8015940:	f1b9 0f00 	cmp.w	r9, #0
 8015944:	d009      	beq.n	801595a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015946:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801594a:	9029      	str	r0, [sp, #164]	; 0xa4
 801594c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8015950:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8015954:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8015958:	912d      	str	r1, [sp, #180]	; 0xb4
 801595a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801595c:	9111      	str	r1, [sp, #68]	; 0x44
 801595e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015962:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015966:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801596a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801596e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015972:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015976:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801597a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801597e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015982:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015986:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801598a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801598e:	f04f 0800 	mov.w	r8, #0
 8015992:	f1be 0f00 	cmp.w	lr, #0
 8015996:	d031      	beq.n	80159fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8015998:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801599a:	4431      	add	r1, r6
 801599c:	4549      	cmp	r1, r9
 801599e:	4450      	add	r0, sl
 80159a0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80159a4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80159a8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80159ac:	db08      	blt.n	80159c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80159ae:	ee77 7a85 	vadd.f32	s15, s15, s10
 80159b2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80159b6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80159ba:	3001      	adds	r0, #1
 80159bc:	eba1 0109 	sub.w	r1, r1, r9
 80159c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80159c4:	f04f 0801 	mov.w	r8, #1
 80159c8:	e7e3      	b.n	8015992 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80159ca:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80159cc:	4431      	add	r1, r6
 80159ce:	4541      	cmp	r1, r8
 80159d0:	4450      	add	r0, sl
 80159d2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80159d6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80159da:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80159de:	db08      	blt.n	80159f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80159e0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80159e4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80159e8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80159ec:	3001      	adds	r0, #1
 80159ee:	eba1 0108 	sub.w	r1, r1, r8
 80159f2:	f10c 3cff 	add.w	ip, ip, #4294967295
 80159f6:	f04f 0901 	mov.w	r9, #1
 80159fa:	e79b      	b.n	8015934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80159fc:	449c      	add	ip, r3
 80159fe:	1aff      	subs	r7, r7, r3
 8015a00:	f1b8 0f00 	cmp.w	r8, #0
 8015a04:	d009      	beq.n	8015a1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8015a06:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015a0a:	9019      	str	r0, [sp, #100]	; 0x64
 8015a0c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015a10:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015a14:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015a18:	911d      	str	r1, [sp, #116]	; 0x74
 8015a1a:	1ad2      	subs	r2, r2, r3
 8015a1c:	e68b      	b.n	8015736 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015a1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a20:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8015a22:	2b00      	cmp	r3, #0
 8015a24:	f000 80d1 	beq.w	8015bca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015a28:	ad19      	add	r5, sp, #100	; 0x64
 8015a2a:	ac39      	add	r4, sp, #228	; 0xe4
 8015a2c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015a2e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015a32:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015a36:	930c      	str	r3, [sp, #48]	; 0x30
 8015a38:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015a3a:	6963      	ldr	r3, [r4, #20]
 8015a3c:	440b      	add	r3, r1
 8015a3e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015a42:	4408      	add	r0, r1
 8015a44:	b200      	sxth	r0, r0
 8015a46:	4283      	cmp	r3, r0
 8015a48:	900d      	str	r0, [sp, #52]	; 0x34
 8015a4a:	f280 80c1 	bge.w	8015bd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8015a4e:	428b      	cmp	r3, r1
 8015a50:	da08      	bge.n	8015a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015a52:	2a00      	cmp	r2, #0
 8015a54:	dd06      	ble.n	8015a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015a56:	1acb      	subs	r3, r1, r3
 8015a58:	429a      	cmp	r2, r3
 8015a5a:	f2c0 80bb 	blt.w	8015bd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8015a5e:	2b00      	cmp	r3, #0
 8015a60:	f300 80b9 	bgt.w	8015bd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015a64:	6967      	ldr	r7, [r4, #20]
 8015a66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015a68:	443b      	add	r3, r7
 8015a6a:	461f      	mov	r7, r3
 8015a6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015a6e:	1bdf      	subs	r7, r3, r7
 8015a70:	4297      	cmp	r7, r2
 8015a72:	bfa8      	it	ge
 8015a74:	4617      	movge	r7, r2
 8015a76:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8015a7a:	2f00      	cmp	r7, #0
 8015a7c:	f340 813c 	ble.w	8015cf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015a80:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015a82:	6829      	ldr	r1, [r5, #0]
 8015a84:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a88:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015a8c:	6820      	ldr	r0, [r4, #0]
 8015a8e:	4411      	add	r1, r2
 8015a90:	4299      	cmp	r1, r3
 8015a92:	dd1a      	ble.n	8015aca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015a94:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015a98:	440b      	add	r3, r1
 8015a9a:	4402      	add	r2, r0
 8015a9c:	b21b      	sxth	r3, r3
 8015a9e:	429a      	cmp	r2, r3
 8015aa0:	dc13      	bgt.n	8015aca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015aa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015aa4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015aa6:	681b      	ldr	r3, [r3, #0]
 8015aa8:	9206      	str	r2, [sp, #24]
 8015aaa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015aac:	9205      	str	r2, [sp, #20]
 8015aae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015ab0:	9500      	str	r5, [sp, #0]
 8015ab2:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015ab6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8015ab8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8015aba:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015abe:	a912      	add	r1, sp, #72	; 0x48
 8015ac0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8015ac4:	aa49      	add	r2, sp, #292	; 0x124
 8015ac6:	4623      	mov	r3, r4
 8015ac8:	47c8      	blx	r9
 8015aca:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015ace:	441a      	add	r2, r3
 8015ad0:	6963      	ldr	r3, [r4, #20]
 8015ad2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8015ad6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8015ada:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8015ade:	68a1      	ldr	r1, [r4, #8]
 8015ae0:	ed94 6a08 	vldr	s12, [r4, #32]
 8015ae4:	6022      	str	r2, [r4, #0]
 8015ae6:	3301      	adds	r3, #1
 8015ae8:	6163      	str	r3, [r4, #20]
 8015aea:	69a3      	ldr	r3, [r4, #24]
 8015aec:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015af0:	3b01      	subs	r3, #1
 8015af2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015af6:	61a3      	str	r3, [r4, #24]
 8015af8:	6923      	ldr	r3, [r4, #16]
 8015afa:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015afe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015b02:	edd4 6a07 	vldr	s13, [r4, #28]
 8015b06:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015b0a:	440b      	add	r3, r1
 8015b0c:	68e1      	ldr	r1, [r4, #12]
 8015b0e:	6123      	str	r3, [r4, #16]
 8015b10:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015b14:	428b      	cmp	r3, r1
 8015b16:	edc4 6a07 	vstr	s13, [r4, #28]
 8015b1a:	db15      	blt.n	8015b48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8015b1c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015b20:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015b24:	3201      	adds	r2, #1
 8015b26:	edc4 6a07 	vstr	s13, [r4, #28]
 8015b2a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015b2e:	6022      	str	r2, [r4, #0]
 8015b30:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015b34:	1a5b      	subs	r3, r3, r1
 8015b36:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8015b3a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015b3e:	6123      	str	r3, [r4, #16]
 8015b40:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015b44:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015b48:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015b4c:	441a      	add	r2, r3
 8015b4e:	696b      	ldr	r3, [r5, #20]
 8015b50:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015b54:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8015b58:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8015b5c:	68a9      	ldr	r1, [r5, #8]
 8015b5e:	ed95 6a08 	vldr	s12, [r5, #32]
 8015b62:	602a      	str	r2, [r5, #0]
 8015b64:	3301      	adds	r3, #1
 8015b66:	616b      	str	r3, [r5, #20]
 8015b68:	69ab      	ldr	r3, [r5, #24]
 8015b6a:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015b6e:	3b01      	subs	r3, #1
 8015b70:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015b74:	61ab      	str	r3, [r5, #24]
 8015b76:	692b      	ldr	r3, [r5, #16]
 8015b78:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015b7c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015b80:	edd5 6a07 	vldr	s13, [r5, #28]
 8015b84:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015b88:	440b      	add	r3, r1
 8015b8a:	68e9      	ldr	r1, [r5, #12]
 8015b8c:	612b      	str	r3, [r5, #16]
 8015b8e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015b92:	428b      	cmp	r3, r1
 8015b94:	edc5 6a07 	vstr	s13, [r5, #28]
 8015b98:	db15      	blt.n	8015bc6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8015b9a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015b9e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015ba2:	3201      	adds	r2, #1
 8015ba4:	edc5 6a07 	vstr	s13, [r5, #28]
 8015ba8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8015bac:	602a      	str	r2, [r5, #0]
 8015bae:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015bb2:	1a5b      	subs	r3, r3, r1
 8015bb4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8015bb8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8015bbc:	612b      	str	r3, [r5, #16]
 8015bbe:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015bc2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015bc6:	3f01      	subs	r7, #1
 8015bc8:	e757      	b.n	8015a7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8015bca:	ad39      	add	r5, sp, #228	; 0xe4
 8015bcc:	ac19      	add	r4, sp, #100	; 0x64
 8015bce:	e72d      	b.n	8015a2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015bd0:	4613      	mov	r3, r2
 8015bd2:	e744      	b.n	8015a5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8015bd4:	4613      	mov	r3, r2
 8015bd6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8015bda:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8015bdc:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8015be0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8015be4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8015be8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8015bec:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015bf0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8015bf4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015bf8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8015bfa:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8015bfe:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8015c02:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8015c06:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8015c0a:	960e      	str	r6, [sp, #56]	; 0x38
 8015c0c:	469e      	mov	lr, r3
 8015c0e:	461f      	mov	r7, r3
 8015c10:	f04f 0900 	mov.w	r9, #0
 8015c14:	2f00      	cmp	r7, #0
 8015c16:	d146      	bne.n	8015ca6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015c18:	449c      	add	ip, r3
 8015c1a:	1ad7      	subs	r7, r2, r3
 8015c1c:	f1b9 0f00 	cmp.w	r9, #0
 8015c20:	d009      	beq.n	8015c36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015c22:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8015c26:	9039      	str	r0, [sp, #228]	; 0xe4
 8015c28:	913d      	str	r1, [sp, #244]	; 0xf4
 8015c2a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8015c2e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8015c32:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8015c36:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015c38:	910e      	str	r1, [sp, #56]	; 0x38
 8015c3a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015c3e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015c42:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015c46:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8015c4a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015c4e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015c52:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8015c56:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8015c5a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015c5e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015c62:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015c66:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8015c6a:	f04f 0800 	mov.w	r8, #0
 8015c6e:	f1be 0f00 	cmp.w	lr, #0
 8015c72:	d030      	beq.n	8015cd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015c74:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015c76:	4431      	add	r1, r6
 8015c78:	4549      	cmp	r1, r9
 8015c7a:	4450      	add	r0, sl
 8015c7c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015c80:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015c84:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015c88:	db08      	blt.n	8015c9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8015c8a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015c8e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015c92:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015c96:	3001      	adds	r0, #1
 8015c98:	eba1 0109 	sub.w	r1, r1, r9
 8015c9c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015ca0:	f04f 0801 	mov.w	r8, #1
 8015ca4:	e7e3      	b.n	8015c6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8015ca6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015ca8:	4431      	add	r1, r6
 8015caa:	4541      	cmp	r1, r8
 8015cac:	4450      	add	r0, sl
 8015cae:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015cb2:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015cb6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015cba:	db08      	blt.n	8015cce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8015cbc:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015cc0:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015cc4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015cc8:	3001      	adds	r0, #1
 8015cca:	eba1 0108 	sub.w	r1, r1, r8
 8015cce:	3f01      	subs	r7, #1
 8015cd0:	f04f 0901 	mov.w	r9, #1
 8015cd4:	e79e      	b.n	8015c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8015cd6:	449c      	add	ip, r3
 8015cd8:	1aff      	subs	r7, r7, r3
 8015cda:	f1b8 0f00 	cmp.w	r8, #0
 8015cde:	d009      	beq.n	8015cf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8015ce0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8015ce4:	9019      	str	r0, [sp, #100]	; 0x64
 8015ce6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015cea:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015cee:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015cf2:	911d      	str	r1, [sp, #116]	; 0x74
 8015cf4:	1ad2      	subs	r2, r2, r3
 8015cf6:	e6b5      	b.n	8015a64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015cf8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015cfa:	681b      	ldr	r3, [r3, #0]
 8015cfc:	b923      	cbnz	r3, 8015d08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015cfe:	4b04      	ldr	r3, [pc, #16]	; (8015d10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015d00:	6818      	ldr	r0, [r3, #0]
 8015d02:	6803      	ldr	r3, [r0, #0]
 8015d04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015d06:	4798      	blx	r3
 8015d08:	b05b      	add	sp, #364	; 0x16c
 8015d0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d0e:	bf00      	nop
 8015d10:	20013834 	.word	0x20013834

08015d14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8015d14:	b570      	push	{r4, r5, r6, lr}
 8015d16:	4604      	mov	r4, r0
 8015d18:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8015d1c:	9805      	ldr	r0, [sp, #20]
 8015d1e:	6061      	str	r1, [r4, #4]
 8015d20:	2500      	movs	r5, #0
 8015d22:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8015d26:	8263      	strh	r3, [r4, #18]
 8015d28:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015d2c:	8025      	strh	r5, [r4, #0]
 8015d2e:	7221      	strb	r1, [r4, #8]
 8015d30:	7266      	strb	r6, [r4, #9]
 8015d32:	60e0      	str	r0, [r4, #12]
 8015d34:	8222      	strh	r2, [r4, #16]
 8015d36:	82a3      	strh	r3, [r4, #20]
 8015d38:	82e5      	strh	r5, [r4, #22]
 8015d3a:	8325      	strh	r5, [r4, #24]
 8015d3c:	8365      	strh	r5, [r4, #26]
 8015d3e:	83a5      	strh	r5, [r4, #28]
 8015d40:	83e5      	strh	r5, [r4, #30]
 8015d42:	8425      	strh	r5, [r4, #32]
 8015d44:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8015d48:	b32e      	cbz	r6, 8015d96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d4a:	6803      	ldr	r3, [r0, #0]
 8015d4c:	695b      	ldr	r3, [r3, #20]
 8015d4e:	4798      	blx	r3
 8015d50:	4606      	mov	r6, r0
 8015d52:	b300      	cbz	r0, 8015d96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d54:	68e0      	ldr	r0, [r4, #12]
 8015d56:	6803      	ldr	r3, [r0, #0]
 8015d58:	4631      	mov	r1, r6
 8015d5a:	68db      	ldr	r3, [r3, #12]
 8015d5c:	4798      	blx	r3
 8015d5e:	4605      	mov	r5, r0
 8015d60:	b1c8      	cbz	r0, 8015d96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d62:	7b43      	ldrb	r3, [r0, #13]
 8015d64:	7a82      	ldrb	r2, [r0, #10]
 8015d66:	005b      	lsls	r3, r3, #1
 8015d68:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015d6c:	4313      	orrs	r3, r2
 8015d6e:	8423      	strh	r3, [r4, #32]
 8015d70:	7a63      	ldrb	r3, [r4, #9]
 8015d72:	2b06      	cmp	r3, #6
 8015d74:	d10f      	bne.n	8015d96 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015d76:	68e0      	ldr	r0, [r4, #12]
 8015d78:	6803      	ldr	r3, [r0, #0]
 8015d7a:	462a      	mov	r2, r5
 8015d7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015d7e:	4631      	mov	r1, r6
 8015d80:	4798      	blx	r3
 8015d82:	7b6b      	ldrb	r3, [r5, #13]
 8015d84:	005b      	lsls	r3, r3, #1
 8015d86:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015d8a:	7aab      	ldrb	r3, [r5, #10]
 8015d8c:	4313      	orrs	r3, r2
 8015d8e:	4418      	add	r0, r3
 8015d90:	8c23      	ldrh	r3, [r4, #32]
 8015d92:	4418      	add	r0, r3
 8015d94:	8420      	strh	r0, [r4, #32]
 8015d96:	4620      	mov	r0, r4
 8015d98:	bd70      	pop	{r4, r5, r6, pc}

08015d9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8015d9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d9e:	2400      	movs	r4, #0
 8015da0:	b085      	sub	sp, #20
 8015da2:	4681      	mov	r9, r0
 8015da4:	4688      	mov	r8, r1
 8015da6:	4692      	mov	sl, r2
 8015da8:	469b      	mov	fp, r3
 8015daa:	4627      	mov	r7, r4
 8015dac:	4625      	mov	r5, r4
 8015dae:	4626      	mov	r6, r4
 8015db0:	4554      	cmp	r4, sl
 8015db2:	da2a      	bge.n	8015e0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015db4:	2300      	movs	r3, #0
 8015db6:	9303      	str	r3, [sp, #12]
 8015db8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015dbc:	429d      	cmp	r5, r3
 8015dbe:	d004      	beq.n	8015dca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8015dc0:	f242 030b 	movw	r3, #8203	; 0x200b
 8015dc4:	429d      	cmp	r5, r3
 8015dc6:	bf18      	it	ne
 8015dc8:	462f      	movne	r7, r5
 8015dca:	ab03      	add	r3, sp, #12
 8015dcc:	4642      	mov	r2, r8
 8015dce:	4659      	mov	r1, fp
 8015dd0:	4648      	mov	r0, r9
 8015dd2:	f003 f9a3 	bl	801911c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015dd6:	4605      	mov	r5, r0
 8015dd8:	b1b8      	cbz	r0, 8015e0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015dda:	280a      	cmp	r0, #10
 8015ddc:	d015      	beq.n	8015e0a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8015dde:	9a03      	ldr	r2, [sp, #12]
 8015de0:	b18a      	cbz	r2, 8015e06 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8015de2:	7b50      	ldrb	r0, [r2, #13]
 8015de4:	7a93      	ldrb	r3, [r2, #10]
 8015de6:	8895      	ldrh	r5, [r2, #4]
 8015de8:	0040      	lsls	r0, r0, #1
 8015dea:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015dee:	4303      	orrs	r3, r0
 8015df0:	9301      	str	r3, [sp, #4]
 8015df2:	f8d8 3000 	ldr.w	r3, [r8]
 8015df6:	4639      	mov	r1, r7
 8015df8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015dfa:	4640      	mov	r0, r8
 8015dfc:	4798      	blx	r3
 8015dfe:	9b01      	ldr	r3, [sp, #4]
 8015e00:	4418      	add	r0, r3
 8015e02:	4406      	add	r6, r0
 8015e04:	b2b6      	uxth	r6, r6
 8015e06:	3401      	adds	r4, #1
 8015e08:	e7d2      	b.n	8015db0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8015e0a:	4630      	mov	r0, r6
 8015e0c:	b005      	add	sp, #20
 8015e0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8015e12:	2a02      	cmp	r2, #2
 8015e14:	b530      	push	{r4, r5, lr}
 8015e16:	d011      	beq.n	8015e3c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8015e18:	2a03      	cmp	r2, #3
 8015e1a:	d01c      	beq.n	8015e56 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8015e1c:	2a01      	cmp	r2, #1
 8015e1e:	d10c      	bne.n	8015e3a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015e20:	888b      	ldrh	r3, [r1, #4]
 8015e22:	8801      	ldrh	r1, [r0, #0]
 8015e24:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8015e28:	8844      	ldrh	r4, [r0, #2]
 8015e2a:	8004      	strh	r4, [r0, #0]
 8015e2c:	1a5b      	subs	r3, r3, r1
 8015e2e:	1a9b      	subs	r3, r3, r2
 8015e30:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015e34:	8043      	strh	r3, [r0, #2]
 8015e36:	8081      	strh	r1, [r0, #4]
 8015e38:	80c2      	strh	r2, [r0, #6]
 8015e3a:	bd30      	pop	{r4, r5, pc}
 8015e3c:	88cb      	ldrh	r3, [r1, #6]
 8015e3e:	8842      	ldrh	r2, [r0, #2]
 8015e40:	1a9b      	subs	r3, r3, r2
 8015e42:	88c2      	ldrh	r2, [r0, #6]
 8015e44:	1a9b      	subs	r3, r3, r2
 8015e46:	888a      	ldrh	r2, [r1, #4]
 8015e48:	8801      	ldrh	r1, [r0, #0]
 8015e4a:	8043      	strh	r3, [r0, #2]
 8015e4c:	1a52      	subs	r2, r2, r1
 8015e4e:	8881      	ldrh	r1, [r0, #4]
 8015e50:	1a52      	subs	r2, r2, r1
 8015e52:	8002      	strh	r2, [r0, #0]
 8015e54:	e7f1      	b.n	8015e3a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015e56:	88cb      	ldrh	r3, [r1, #6]
 8015e58:	8841      	ldrh	r1, [r0, #2]
 8015e5a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8015e5e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015e62:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015e66:	8045      	strh	r5, [r0, #2]
 8015e68:	1a5b      	subs	r3, r3, r1
 8015e6a:	1a9b      	subs	r3, r3, r2
 8015e6c:	8003      	strh	r3, [r0, #0]
 8015e6e:	8082      	strh	r2, [r0, #4]
 8015e70:	80c4      	strh	r4, [r0, #6]
 8015e72:	e7e2      	b.n	8015e3a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08015e74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8015e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e78:	b09f      	sub	sp, #124	; 0x7c
 8015e7a:	9116      	str	r1, [sp, #88]	; 0x58
 8015e7c:	9317      	str	r3, [sp, #92]	; 0x5c
 8015e7e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015e80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015e82:	8809      	ldrh	r1, [r1, #0]
 8015e84:	889b      	ldrh	r3, [r3, #4]
 8015e86:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8015e8a:	9212      	str	r2, [sp, #72]	; 0x48
 8015e8c:	440b      	add	r3, r1
 8015e8e:	b21b      	sxth	r3, r3
 8015e90:	9310      	str	r3, [sp, #64]	; 0x40
 8015e92:	f8d8 3000 	ldr.w	r3, [r8]
 8015e96:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8015e9a:	7b19      	ldrb	r1, [r3, #12]
 8015e9c:	7adb      	ldrb	r3, [r3, #11]
 8015e9e:	9011      	str	r0, [sp, #68]	; 0x44
 8015ea0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8015ea4:	9114      	str	r1, [sp, #80]	; 0x50
 8015ea6:	9315      	str	r3, [sp, #84]	; 0x54
 8015ea8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8015eac:	2a00      	cmp	r2, #0
 8015eae:	d06a      	beq.n	8015f86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8015eb0:	f898 3010 	ldrb.w	r3, [r8, #16]
 8015eb4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015eb6:	2b06      	cmp	r3, #6
 8015eb8:	bf14      	ite	ne
 8015eba:	2301      	movne	r3, #1
 8015ebc:	2302      	moveq	r3, #2
 8015ebe:	4413      	add	r3, r2
 8015ec0:	f04f 0900 	mov.w	r9, #0
 8015ec4:	930f      	str	r3, [sp, #60]	; 0x3c
 8015ec6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8015eca:	464c      	mov	r4, r9
 8015ecc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8015ed0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8015ed4:	4293      	cmp	r3, r2
 8015ed6:	f280 808f 	bge.w	8015ff8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015eda:	2300      	movs	r3, #0
 8015edc:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8015ee0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8015ee4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015ee8:	429c      	cmp	r4, r3
 8015eea:	d006      	beq.n	8015efa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8015eec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015eee:	f242 020b 	movw	r2, #8203	; 0x200b
 8015ef2:	4294      	cmp	r4, r2
 8015ef4:	bf18      	it	ne
 8015ef6:	4623      	movne	r3, r4
 8015ef8:	930d      	str	r3, [sp, #52]	; 0x34
 8015efa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015efc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015efe:	f8d8 2000 	ldr.w	r2, [r8]
 8015f02:	428b      	cmp	r3, r1
 8015f04:	db41      	blt.n	8015f8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8015f06:	6813      	ldr	r3, [r2, #0]
 8015f08:	4610      	mov	r0, r2
 8015f0a:	695b      	ldr	r3, [r3, #20]
 8015f0c:	4798      	blx	r3
 8015f0e:	4604      	mov	r4, r0
 8015f10:	f8d8 0000 	ldr.w	r0, [r8]
 8015f14:	6803      	ldr	r3, [r0, #0]
 8015f16:	aa1d      	add	r2, sp, #116	; 0x74
 8015f18:	689d      	ldr	r5, [r3, #8]
 8015f1a:	4621      	mov	r1, r4
 8015f1c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015f20:	47a8      	blx	r5
 8015f22:	901c      	str	r0, [sp, #112]	; 0x70
 8015f24:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015f28:	429c      	cmp	r4, r3
 8015f2a:	f000 80eb 	beq.w	8016104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015f2e:	f242 030b 	movw	r3, #8203	; 0x200b
 8015f32:	429c      	cmp	r4, r3
 8015f34:	f000 80e6 	beq.w	8016104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015f38:	2c00      	cmp	r4, #0
 8015f3a:	f000 80f8 	beq.w	801612e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015f3e:	2c0a      	cmp	r4, #10
 8015f40:	d060      	beq.n	8016004 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015f42:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015f44:	b36a      	cbz	r2, 8015fa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8015f46:	8894      	ldrh	r4, [r2, #4]
 8015f48:	f1bb 0f00 	cmp.w	fp, #0
 8015f4c:	d03b      	beq.n	8015fc6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8015f4e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8015f52:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015f56:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8015f5a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8015f5e:	f1bb 0f01 	cmp.w	fp, #1
 8015f62:	ea49 0903 	orr.w	r9, r9, r3
 8015f66:	d134      	bne.n	8015fd2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8015f68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015f6a:	eba6 0609 	sub.w	r6, r6, r9
 8015f6e:	2b00      	cmp	r3, #0
 8015f70:	d14f      	bne.n	8016012 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015f72:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015f74:	eb09 0306 	add.w	r3, r9, r6
 8015f78:	4413      	add	r3, r2
 8015f7a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015f7c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015f80:	4293      	cmp	r3, r2
 8015f82:	da51      	bge.n	8016028 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015f84:	e038      	b.n	8015ff8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015f86:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015f88:	e79a      	b.n	8015ec0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8015f8a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015f8e:	9301      	str	r3, [sp, #4]
 8015f90:	ab1d      	add	r3, sp, #116	; 0x74
 8015f92:	9300      	str	r3, [sp, #0]
 8015f94:	4659      	mov	r1, fp
 8015f96:	ab1c      	add	r3, sp, #112	; 0x70
 8015f98:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015f9a:	f003 f908 	bl	80191ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8015f9e:	4604      	mov	r4, r0
 8015fa0:	e7c0      	b.n	8015f24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8015fa2:	f8d8 0000 	ldr.w	r0, [r8]
 8015fa6:	6803      	ldr	r3, [r0, #0]
 8015fa8:	691b      	ldr	r3, [r3, #16]
 8015faa:	4798      	blx	r3
 8015fac:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015fb0:	4298      	cmp	r0, r3
 8015fb2:	f000 80a7 	beq.w	8016104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015fb6:	f242 030b 	movw	r3, #8203	; 0x200b
 8015fba:	4298      	cmp	r0, r3
 8015fbc:	f000 80a2 	beq.w	8016104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015fc0:	f1bb 0f00 	cmp.w	fp, #0
 8015fc4:	d100      	bne.n	8015fc8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8015fc6:	444e      	add	r6, r9
 8015fc8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015fca:	2a00      	cmp	r2, #0
 8015fcc:	d1bf      	bne.n	8015f4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8015fce:	4691      	mov	r9, r2
 8015fd0:	e098      	b.n	8016104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015fd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015fd4:	2b00      	cmp	r3, #0
 8015fd6:	f000 80ac 	beq.w	8016132 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8015fda:	f1bb 0f00 	cmp.w	fp, #0
 8015fde:	d118      	bne.n	8016012 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015fe0:	f8d8 0000 	ldr.w	r0, [r8]
 8015fe4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015fe6:	6803      	ldr	r3, [r0, #0]
 8015fe8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015fea:	4798      	blx	r3
 8015fec:	4406      	add	r6, r0
 8015fee:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015ff0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015ff2:	1af3      	subs	r3, r6, r3
 8015ff4:	4293      	cmp	r3, r2
 8015ff6:	dd17      	ble.n	8016028 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015ff8:	2c00      	cmp	r4, #0
 8015ffa:	f000 8098 	beq.w	801612e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015ffe:	2c0a      	cmp	r4, #10
 8016000:	f040 8086 	bne.w	8016110 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8016004:	240a      	movs	r4, #10
 8016006:	fab4 f084 	clz	r0, r4
 801600a:	0940      	lsrs	r0, r0, #5
 801600c:	b01f      	add	sp, #124	; 0x7c
 801600e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016012:	f8d8 0000 	ldr.w	r0, [r8]
 8016016:	990d      	ldr	r1, [sp, #52]	; 0x34
 8016018:	6803      	ldr	r3, [r0, #0]
 801601a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801601c:	4798      	blx	r3
 801601e:	f1bb 0f01 	cmp.w	fp, #1
 8016022:	eba6 0600 	sub.w	r6, r6, r0
 8016026:	d0a4      	beq.n	8015f72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8016028:	981c      	ldr	r0, [sp, #112]	; 0x70
 801602a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801602c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8016030:	f9b3 7000 	ldrsh.w	r7, [r3]
 8016034:	7b43      	ldrb	r3, [r0, #13]
 8016036:	015b      	lsls	r3, r3, #5
 8016038:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801603c:	7983      	ldrb	r3, [r0, #6]
 801603e:	4431      	add	r1, r6
 8016040:	4313      	orrs	r3, r2
 8016042:	440b      	add	r3, r1
 8016044:	42bb      	cmp	r3, r7
 8016046:	db5d      	blt.n	8016104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8016048:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801604a:	4299      	cmp	r1, r3
 801604c:	da5a      	bge.n	8016104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801604e:	f8d8 0000 	ldr.w	r0, [r8]
 8016052:	6803      	ldr	r3, [r0, #0]
 8016054:	42b7      	cmp	r7, r6
 8016056:	bfc8      	it	gt
 8016058:	1bbf      	subgt	r7, r7, r6
 801605a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801605c:	bfcc      	ite	gt
 801605e:	b2bf      	uxthgt	r7, r7
 8016060:	2700      	movle	r7, #0
 8016062:	4798      	blx	r3
 8016064:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016066:	7b5a      	ldrb	r2, [r3, #13]
 8016068:	00d1      	lsls	r1, r2, #3
 801606a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801606e:	7a19      	ldrb	r1, [r3, #8]
 8016070:	4329      	orrs	r1, r5
 8016072:	0655      	lsls	r5, r2, #25
 8016074:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8016076:	bf44      	itt	mi
 8016078:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801607c:	b209      	sxthmi	r1, r1
 801607e:	1945      	adds	r5, r0, r5
 8016080:	1a6d      	subs	r5, r5, r1
 8016082:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8016084:	b2ad      	uxth	r5, r5
 8016086:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801608a:	fa0f fa85 	sxth.w	sl, r5
 801608e:	4551      	cmp	r1, sl
 8016090:	dd3c      	ble.n	801610c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8016092:	0112      	lsls	r2, r2, #4
 8016094:	79d8      	ldrb	r0, [r3, #7]
 8016096:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801609a:	4302      	orrs	r2, r0
 801609c:	4492      	add	sl, r2
 801609e:	4551      	cmp	r1, sl
 80160a0:	dc30      	bgt.n	8016104 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80160a2:	1b4d      	subs	r5, r1, r5
 80160a4:	b22d      	sxth	r5, r5
 80160a6:	468a      	mov	sl, r1
 80160a8:	9319      	str	r3, [sp, #100]	; 0x64
 80160aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80160ac:	f8d8 0000 	ldr.w	r0, [r8]
 80160b0:	681a      	ldr	r2, [r3, #0]
 80160b2:	6801      	ldr	r1, [r0, #0]
 80160b4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80160b6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80160b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80160ba:	9218      	str	r2, [sp, #96]	; 0x60
 80160bc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80160be:	4788      	blx	r1
 80160c0:	f898 1006 	ldrb.w	r1, [r8, #6]
 80160c4:	910b      	str	r1, [sp, #44]	; 0x2c
 80160c6:	f898 100e 	ldrb.w	r1, [r8, #14]
 80160ca:	910a      	str	r1, [sp, #40]	; 0x28
 80160cc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80160d0:	9109      	str	r1, [sp, #36]	; 0x24
 80160d2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80160d6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80160d8:	9305      	str	r3, [sp, #20]
 80160da:	b2ad      	uxth	r5, r5
 80160dc:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80160e0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80160e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80160e6:	9304      	str	r3, [sp, #16]
 80160e8:	4437      	add	r7, r6
 80160ea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80160ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80160ee:	9206      	str	r2, [sp, #24]
 80160f0:	b23f      	sxth	r7, r7
 80160f2:	f8cd a004 	str.w	sl, [sp, #4]
 80160f6:	9700      	str	r7, [sp, #0]
 80160f8:	681a      	ldr	r2, [r3, #0]
 80160fa:	9916      	ldr	r1, [sp, #88]	; 0x58
 80160fc:	685b      	ldr	r3, [r3, #4]
 80160fe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016100:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016102:	47a8      	blx	r5
 8016104:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016106:	3301      	adds	r3, #1
 8016108:	930e      	str	r3, [sp, #56]	; 0x38
 801610a:	e6e1      	b.n	8015ed0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801610c:	2500      	movs	r5, #0
 801610e:	e7cb      	b.n	80160a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8016110:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8016112:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016114:	3501      	adds	r5, #1
 8016116:	429d      	cmp	r5, r3
 8016118:	f6bf af75 	bge.w	8016006 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801611c:	4659      	mov	r1, fp
 801611e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8016120:	f7f2 fbe2 	bl	80088e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016124:	4604      	mov	r4, r0
 8016126:	b110      	cbz	r0, 801612e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8016128:	280a      	cmp	r0, #10
 801612a:	d1f2      	bne.n	8016112 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 801612c:	e76a      	b.n	8016004 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801612e:	2400      	movs	r4, #0
 8016130:	e769      	b.n	8016006 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8016132:	f1bb 0f00 	cmp.w	fp, #0
 8016136:	f43f af5a 	beq.w	8015fee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801613a:	e775      	b.n	8016028 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801613c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801613c:	b530      	push	{r4, r5, lr}
 801613e:	8ac4      	ldrh	r4, [r0, #22]
 8016140:	8b45      	ldrh	r5, [r0, #26]
 8016142:	8343      	strh	r3, [r0, #26]
 8016144:	442c      	add	r4, r5
 8016146:	1ae4      	subs	r4, r4, r3
 8016148:	82c4      	strh	r4, [r0, #22]
 801614a:	8b83      	ldrh	r3, [r0, #28]
 801614c:	8b04      	ldrh	r4, [r0, #24]
 801614e:	4422      	add	r2, r4
 8016150:	440c      	add	r4, r1
 8016152:	1a59      	subs	r1, r3, r1
 8016154:	83c2      	strh	r2, [r0, #30]
 8016156:	8304      	strh	r4, [r0, #24]
 8016158:	8381      	strh	r1, [r0, #28]
 801615a:	bd30      	pop	{r4, r5, pc}

0801615c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801615c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016160:	4604      	mov	r4, r0
 8016162:	8a47      	ldrh	r7, [r0, #18]
 8016164:	68c0      	ldr	r0, [r0, #12]
 8016166:	6803      	ldr	r3, [r0, #0]
 8016168:	b085      	sub	sp, #20
 801616a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801616c:	4798      	blx	r3
 801616e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8016172:	7a63      	ldrb	r3, [r4, #9]
 8016174:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8016178:	42b7      	cmp	r7, r6
 801617a:	f103 33ff 	add.w	r3, r3, #4294967295
 801617e:	bfac      	ite	ge
 8016180:	f04f 0900 	movge.w	r9, #0
 8016184:	f04f 0901 	movlt.w	r9, #1
 8016188:	2b05      	cmp	r3, #5
 801618a:	d804      	bhi.n	8016196 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801618c:	e8df f003 	tbb	[pc, r3]
 8016190:	470e0854 	.word	0x470e0854
 8016194:	4c4c      	.short	0x4c4c
 8016196:	2500      	movs	r5, #0
 8016198:	46a9      	mov	r9, r5
 801619a:	462e      	mov	r6, r5
 801619c:	462f      	mov	r7, r5
 801619e:	e00d      	b.n	80161bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80161a0:	42b7      	cmp	r7, r6
 80161a2:	bfb4      	ite	lt
 80161a4:	2600      	movlt	r6, #0
 80161a6:	2601      	movge	r6, #1
 80161a8:	2500      	movs	r5, #0
 80161aa:	e7f7      	b.n	801619c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80161ac:	42b7      	cmp	r7, r6
 80161ae:	464d      	mov	r5, r9
 80161b0:	f04f 0900 	mov.w	r9, #0
 80161b4:	bfb4      	ite	lt
 80161b6:	2600      	movlt	r6, #0
 80161b8:	2601      	movge	r6, #1
 80161ba:	464f      	mov	r7, r9
 80161bc:	f04f 0800 	mov.w	r8, #0
 80161c0:	f8a4 8016 	strh.w	r8, [r4, #22]
 80161c4:	f8a4 8018 	strh.w	r8, [r4, #24]
 80161c8:	f8cd 8004 	str.w	r8, [sp, #4]
 80161cc:	2300      	movs	r3, #0
 80161ce:	9303      	str	r3, [sp, #12]
 80161d0:	8823      	ldrh	r3, [r4, #0]
 80161d2:	2b20      	cmp	r3, #32
 80161d4:	d034      	beq.n	8016240 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80161d6:	f242 010b 	movw	r1, #8203	; 0x200b
 80161da:	1a5a      	subs	r2, r3, r1
 80161dc:	f1d2 0a00 	rsbs	sl, r2, #0
 80161e0:	eb4a 0a02 	adc.w	sl, sl, r2
 80161e4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80161e8:	4293      	cmp	r3, r2
 80161ea:	d009      	beq.n	8016200 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80161ec:	428b      	cmp	r3, r1
 80161ee:	9a01      	ldr	r2, [sp, #4]
 80161f0:	bf18      	it	ne
 80161f2:	461a      	movne	r2, r3
 80161f4:	9201      	str	r2, [sp, #4]
 80161f6:	bf0c      	ite	eq
 80161f8:	f04f 0a01 	moveq.w	sl, #1
 80161fc:	f04f 0a00 	movne.w	sl, #0
 8016200:	ab03      	add	r3, sp, #12
 8016202:	68e2      	ldr	r2, [r4, #12]
 8016204:	7a21      	ldrb	r1, [r4, #8]
 8016206:	6860      	ldr	r0, [r4, #4]
 8016208:	f002 ff88 	bl	801911c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801620c:	8020      	strh	r0, [r4, #0]
 801620e:	b9d8      	cbnz	r0, 8016248 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8016210:	8ba2      	ldrh	r2, [r4, #28]
 8016212:	2300      	movs	r3, #0
 8016214:	4611      	mov	r1, r2
 8016216:	4620      	mov	r0, r4
 8016218:	f7ff ff90 	bl	801613c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801621c:	e06e      	b.n	80162fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801621e:	2500      	movs	r5, #0
 8016220:	46a9      	mov	r9, r5
 8016222:	462e      	mov	r6, r5
 8016224:	2701      	movs	r7, #1
 8016226:	e7c9      	b.n	80161bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016228:	42b7      	cmp	r7, r6
 801622a:	f04f 0500 	mov.w	r5, #0
 801622e:	bfb4      	ite	lt
 8016230:	2700      	movlt	r7, #0
 8016232:	2701      	movge	r7, #1
 8016234:	462e      	mov	r6, r5
 8016236:	e7c1      	b.n	80161bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8016238:	2500      	movs	r5, #0
 801623a:	46a9      	mov	r9, r5
 801623c:	2601      	movs	r6, #1
 801623e:	e7ad      	b.n	801619c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8016240:	9301      	str	r3, [sp, #4]
 8016242:	f04f 0a01 	mov.w	sl, #1
 8016246:	e7db      	b.n	8016200 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8016248:	8b63      	ldrh	r3, [r4, #26]
 801624a:	280a      	cmp	r0, #10
 801624c:	f103 0301 	add.w	r3, r3, #1
 8016250:	8363      	strh	r3, [r4, #26]
 8016252:	d0dd      	beq.n	8016210 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8016254:	9a03      	ldr	r2, [sp, #12]
 8016256:	bb62      	cbnz	r2, 80162b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8016258:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801625c:	4298      	cmp	r0, r3
 801625e:	d003      	beq.n	8016268 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8016260:	f242 030b 	movw	r3, #8203	; 0x200b
 8016264:	4298      	cmp	r0, r3
 8016266:	d1b1      	bne.n	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016268:	8823      	ldrh	r3, [r4, #0]
 801626a:	8ba1      	ldrh	r1, [r4, #28]
 801626c:	2b20      	cmp	r3, #32
 801626e:	d003      	beq.n	8016278 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8016270:	f242 000b 	movw	r0, #8203	; 0x200b
 8016274:	4283      	cmp	r3, r0
 8016276:	d131      	bne.n	80162dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8016278:	f1ba 0f00 	cmp.w	sl, #0
 801627c:	bf0a      	itet	eq
 801627e:	4688      	moveq	r8, r1
 8016280:	4650      	movne	r0, sl
 8016282:	2001      	moveq	r0, #1
 8016284:	440a      	add	r2, r1
 8016286:	8b23      	ldrh	r3, [r4, #24]
 8016288:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801628c:	b292      	uxth	r2, r2
 801628e:	83a2      	strh	r2, [r4, #28]
 8016290:	4413      	add	r3, r2
 8016292:	f1b9 0f00 	cmp.w	r9, #0
 8016296:	d102      	bne.n	801629e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8016298:	2d00      	cmp	r5, #0
 801629a:	d042      	beq.n	8016322 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801629c:	b300      	cbz	r0, 80162e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801629e:	8c21      	ldrh	r1, [r4, #32]
 80162a0:	4419      	add	r1, r3
 80162a2:	458c      	cmp	ip, r1
 80162a4:	da37      	bge.n	8016316 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80162a6:	8ae1      	ldrh	r1, [r4, #22]
 80162a8:	2900      	cmp	r1, #0
 80162aa:	d034      	beq.n	8016316 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80162ac:	4563      	cmp	r3, ip
 80162ae:	dd8d      	ble.n	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80162b0:	e01d      	b.n	80162ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80162b2:	8893      	ldrh	r3, [r2, #4]
 80162b4:	8023      	strh	r3, [r4, #0]
 80162b6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80162ba:	9901      	ldr	r1, [sp, #4]
 80162bc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80162c0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80162c4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80162c8:	ea4b 0b00 	orr.w	fp, fp, r0
 80162cc:	68e0      	ldr	r0, [r4, #12]
 80162ce:	6803      	ldr	r3, [r0, #0]
 80162d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80162d2:	4798      	blx	r3
 80162d4:	eb0b 0200 	add.w	r2, fp, r0
 80162d8:	b292      	uxth	r2, r2
 80162da:	e7c5      	b.n	8016268 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80162dc:	2000      	movs	r0, #0
 80162de:	e7d1      	b.n	8016284 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80162e0:	4563      	cmp	r3, ip
 80162e2:	f77f af73 	ble.w	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80162e6:	8ae3      	ldrh	r3, [r4, #22]
 80162e8:	2b00      	cmp	r3, #0
 80162ea:	f43f af6f 	beq.w	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80162ee:	2301      	movs	r3, #1
 80162f0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80162f4:	8c22      	ldrh	r2, [r4, #32]
 80162f6:	8be3      	ldrh	r3, [r4, #30]
 80162f8:	4413      	add	r3, r2
 80162fa:	83e3      	strh	r3, [r4, #30]
 80162fc:	68e0      	ldr	r0, [r4, #12]
 80162fe:	6803      	ldr	r3, [r0, #0]
 8016300:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016302:	4798      	blx	r3
 8016304:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8016308:	4418      	add	r0, r3
 801630a:	8a63      	ldrh	r3, [r4, #18]
 801630c:	1a18      	subs	r0, r3, r0
 801630e:	8260      	strh	r0, [r4, #18]
 8016310:	b005      	add	sp, #20
 8016312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016316:	2300      	movs	r3, #0
 8016318:	4611      	mov	r1, r2
 801631a:	4620      	mov	r0, r4
 801631c:	f7ff ff0e 	bl	801613c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8016320:	e754      	b.n	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016322:	4563      	cmp	r3, ip
 8016324:	dd14      	ble.n	8016350 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8016326:	b117      	cbz	r7, 801632e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8016328:	2301      	movs	r3, #1
 801632a:	460a      	mov	r2, r1
 801632c:	e772      	b.n	8016214 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801632e:	2e00      	cmp	r6, #0
 8016330:	f43f af4c 	beq.w	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016334:	2800      	cmp	r0, #0
 8016336:	f47f af49 	bne.w	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801633a:	f1ba 0f00 	cmp.w	sl, #0
 801633e:	d002      	beq.n	8016346 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8016340:	2301      	movs	r3, #1
 8016342:	4642      	mov	r2, r8
 8016344:	e767      	b.n	8016216 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8016346:	8ae3      	ldrh	r3, [r4, #22]
 8016348:	2b00      	cmp	r3, #0
 801634a:	f43f af3f 	beq.w	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801634e:	e7d5      	b.n	80162fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8016350:	2800      	cmp	r0, #0
 8016352:	f47f af3b 	bne.w	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8016356:	f1ba 0f00 	cmp.w	sl, #0
 801635a:	f43f af37 	beq.w	80161cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801635e:	2301      	movs	r3, #1
 8016360:	4642      	mov	r2, r8
 8016362:	e7da      	b.n	801631a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08016364 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8016364:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016366:	4605      	mov	r5, r0
 8016368:	b08f      	sub	sp, #60	; 0x3c
 801636a:	4617      	mov	r7, r2
 801636c:	461c      	mov	r4, r3
 801636e:	460e      	mov	r6, r1
 8016370:	b1d1      	cbz	r1, 80163a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8016372:	681b      	ldr	r3, [r3, #0]
 8016374:	4620      	mov	r0, r4
 8016376:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016378:	4798      	blx	r3
 801637a:	4240      	negs	r0, r0
 801637c:	b200      	sxth	r0, r0
 801637e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8016382:	9603      	str	r6, [sp, #12]
 8016384:	9700      	str	r7, [sp, #0]
 8016386:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801638a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801638e:	4629      	mov	r1, r5
 8016390:	a805      	add	r0, sp, #20
 8016392:	f7ff fcbf 	bl	8015d14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8016396:	2401      	movs	r4, #1
 8016398:	a805      	add	r0, sp, #20
 801639a:	f7ff fedf 	bl	801615c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801639e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80163a2:	b163      	cbz	r3, 80163be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80163a4:	3401      	adds	r4, #1
 80163a6:	e7f7      	b.n	8016398 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80163a8:	f002 ff86 	bl	80192b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80163ac:	2401      	movs	r4, #1
 80163ae:	280a      	cmp	r0, #10
 80163b0:	4628      	mov	r0, r5
 80163b2:	bf08      	it	eq
 80163b4:	3401      	addeq	r4, #1
 80163b6:	f002 ff7f 	bl	80192b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80163ba:	2800      	cmp	r0, #0
 80163bc:	d1f7      	bne.n	80163ae <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80163be:	b2a0      	uxth	r0, r4
 80163c0:	b00f      	add	sp, #60	; 0x3c
 80163c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080163c4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80163c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163c8:	b0e3      	sub	sp, #396	; 0x18c
 80163ca:	461c      	mov	r4, r3
 80163cc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80163ce:	4683      	mov	fp, r0
 80163d0:	4688      	mov	r8, r1
 80163d2:	2b00      	cmp	r3, #0
 80163d4:	f000 8112 	beq.w	80165fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80163d8:	6823      	ldr	r3, [r4, #0]
 80163da:	2b00      	cmp	r3, #0
 80163dc:	f000 810e 	beq.w	80165fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80163e0:	7ba3      	ldrb	r3, [r4, #14]
 80163e2:	2b00      	cmp	r3, #0
 80163e4:	f000 810a 	beq.w	80165fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80163e8:	6810      	ldr	r0, [r2, #0]
 80163ea:	6851      	ldr	r1, [r2, #4]
 80163ec:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80163f0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80163f4:	ad0a      	add	r5, sp, #40	; 0x28
 80163f6:	462b      	mov	r3, r5
 80163f8:	c303      	stmia	r3!, {r0, r1}
 80163fa:	2100      	movs	r1, #0
 80163fc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8016400:	910c      	str	r1, [sp, #48]	; 0x30
 8016402:	79a2      	ldrb	r2, [r4, #6]
 8016404:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8016408:	a90c      	add	r1, sp, #48	; 0x30
 801640a:	4628      	mov	r0, r5
 801640c:	f7ff fd01 	bl	8015e12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8016410:	a90c      	add	r1, sp, #48	; 0x30
 8016412:	4608      	mov	r0, r1
 8016414:	79a2      	ldrb	r2, [r4, #6]
 8016416:	f7ff fcfc 	bl	8015e12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801641a:	a817      	add	r0, sp, #92	; 0x5c
 801641c:	f002 fb20 	bl	8018a60 <_ZN8touchgfx12TextProviderC1Ev>
 8016420:	6820      	ldr	r0, [r4, #0]
 8016422:	6803      	ldr	r3, [r0, #0]
 8016424:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016426:	4798      	blx	r3
 8016428:	4606      	mov	r6, r0
 801642a:	6820      	ldr	r0, [r4, #0]
 801642c:	6803      	ldr	r3, [r0, #0]
 801642e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016430:	4798      	blx	r3
 8016432:	4633      	mov	r3, r6
 8016434:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8016436:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8016438:	9000      	str	r0, [sp, #0]
 801643a:	a817      	add	r0, sp, #92	; 0x5c
 801643c:	f002 fb6b 	bl	8018b16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016440:	6820      	ldr	r0, [r4, #0]
 8016442:	f894 a004 	ldrb.w	sl, [r4, #4]
 8016446:	6803      	ldr	r3, [r0, #0]
 8016448:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801644a:	4798      	blx	r3
 801644c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8016450:	6823      	ldr	r3, [r4, #0]
 8016452:	4607      	mov	r7, r0
 8016454:	4406      	add	r6, r0
 8016456:	a830      	add	r0, sp, #192	; 0xc0
 8016458:	f893 9009 	ldrb.w	r9, [r3, #9]
 801645c:	f002 fb00 	bl	8018a60 <_ZN8touchgfx12TextProviderC1Ev>
 8016460:	7c23      	ldrb	r3, [r4, #16]
 8016462:	b17b      	cbz	r3, 8016484 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8016464:	6820      	ldr	r0, [r4, #0]
 8016466:	6803      	ldr	r3, [r0, #0]
 8016468:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801646a:	4798      	blx	r3
 801646c:	9009      	str	r0, [sp, #36]	; 0x24
 801646e:	6820      	ldr	r0, [r4, #0]
 8016470:	6802      	ldr	r2, [r0, #0]
 8016472:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8016474:	4790      	blx	r2
 8016476:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016478:	9000      	str	r0, [sp, #0]
 801647a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801647c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801647e:	a830      	add	r0, sp, #192	; 0xc0
 8016480:	f002 fb49 	bl	8018b16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016484:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8016488:	7be2      	ldrb	r2, [r4, #15]
 801648a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801648e:	1a8a      	subs	r2, r1, r2
 8016490:	7c21      	ldrb	r1, [r4, #16]
 8016492:	9103      	str	r1, [sp, #12]
 8016494:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8016498:	9102      	str	r1, [sp, #8]
 801649a:	6821      	ldr	r1, [r4, #0]
 801649c:	9101      	str	r1, [sp, #4]
 801649e:	7961      	ldrb	r1, [r4, #5]
 80164a0:	9100      	str	r1, [sp, #0]
 80164a2:	b292      	uxth	r2, r2
 80164a4:	a930      	add	r1, sp, #192	; 0xc0
 80164a6:	a80e      	add	r0, sp, #56	; 0x38
 80164a8:	f7ff fc34 	bl	8015d14 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80164ac:	2e00      	cmp	r6, #0
 80164ae:	dc5b      	bgt.n	8016568 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80164b0:	af17      	add	r7, sp, #92	; 0x5c
 80164b2:	f04f 0900 	mov.w	r9, #0
 80164b6:	7c23      	ldrb	r3, [r4, #16]
 80164b8:	2b00      	cmp	r3, #0
 80164ba:	f000 80b1 	beq.w	8016620 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80164be:	a80e      	add	r0, sp, #56	; 0x38
 80164c0:	f7ff fe4c 	bl	801615c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80164c4:	f1ba 0f00 	cmp.w	sl, #0
 80164c8:	f000 80a5 	beq.w	8016616 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80164cc:	7c23      	ldrb	r3, [r4, #16]
 80164ce:	9309      	str	r3, [sp, #36]	; 0x24
 80164d0:	2264      	movs	r2, #100	; 0x64
 80164d2:	4639      	mov	r1, r7
 80164d4:	a849      	add	r0, sp, #292	; 0x124
 80164d6:	f015 fde6 	bl	802c0a6 <memcpy>
 80164da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80164dc:	2b00      	cmp	r3, #0
 80164de:	f000 80a7 	beq.w	8016630 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80164e2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80164e6:	7922      	ldrb	r2, [r4, #4]
 80164e8:	2a01      	cmp	r2, #1
 80164ea:	f040 808a 	bne.w	8016602 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80164ee:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80164f2:	1ac0      	subs	r0, r0, r3
 80164f4:	2302      	movs	r3, #2
 80164f6:	fb90 f0f3 	sdiv	r0, r0, r3
 80164fa:	b200      	sxth	r0, r0
 80164fc:	7c23      	ldrb	r3, [r4, #16]
 80164fe:	2b00      	cmp	r3, #0
 8016500:	f000 808b 	beq.w	801661a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8016504:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8016508:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801650c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016510:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8016514:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8016518:	4410      	add	r0, r2
 801651a:	b200      	sxth	r0, r0
 801651c:	9000      	str	r0, [sp, #0]
 801651e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8016522:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8016526:	4642      	mov	r2, r8
 8016528:	2100      	movs	r1, #0
 801652a:	4658      	mov	r0, fp
 801652c:	f7ff fca2 	bl	8015e74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8016530:	2800      	cmp	r0, #0
 8016532:	d163      	bne.n	80165fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016534:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8016538:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801653c:	b2b2      	uxth	r2, r6
 801653e:	4413      	add	r3, r2
 8016540:	1a8a      	subs	r2, r1, r2
 8016542:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8016546:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801654a:	b21b      	sxth	r3, r3
 801654c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016550:	2a00      	cmp	r2, #0
 8016552:	d153      	bne.n	80165fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016554:	6822      	ldr	r2, [r4, #0]
 8016556:	8869      	ldrh	r1, [r5, #2]
 8016558:	7a12      	ldrb	r2, [r2, #8]
 801655a:	1a9b      	subs	r3, r3, r2
 801655c:	88ea      	ldrh	r2, [r5, #6]
 801655e:	440a      	add	r2, r1
 8016560:	b212      	sxth	r2, r2
 8016562:	4293      	cmp	r3, r2
 8016564:	dda7      	ble.n	80164b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8016566:	e049      	b.n	80165fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016568:	7c23      	ldrb	r3, [r4, #16]
 801656a:	444f      	add	r7, r9
 801656c:	b1c3      	cbz	r3, 80165a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801656e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8016572:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016576:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801657a:	443b      	add	r3, r7
 801657c:	4293      	cmp	r3, r2
 801657e:	da97      	bge.n	80164b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016580:	a80e      	add	r0, sp, #56	; 0x38
 8016582:	f7ff fdeb 	bl	801615c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016586:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801658a:	3b01      	subs	r3, #1
 801658c:	b29b      	uxth	r3, r3
 801658e:	454b      	cmp	r3, r9
 8016590:	9309      	str	r3, [sp, #36]	; 0x24
 8016592:	d021      	beq.n	80165d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8016594:	7961      	ldrb	r1, [r4, #5]
 8016596:	a817      	add	r0, sp, #92	; 0x5c
 8016598:	f7f2 f9a6 	bl	80088e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801659c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801659e:	e7f4      	b.n	801658a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80165a0:	fa1f f986 	uxth.w	r9, r6
 80165a4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80165a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80165ac:	443b      	add	r3, r7
 80165ae:	4293      	cmp	r3, r2
 80165b0:	f6bf af7e 	bge.w	80164b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80165b4:	a817      	add	r0, sp, #92	; 0x5c
 80165b6:	f002 fe7f 	bl	80192b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80165ba:	b1f8      	cbz	r0, 80165fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80165bc:	280a      	cmp	r0, #10
 80165be:	d1f1      	bne.n	80165a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80165c0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80165c4:	444b      	add	r3, r9
 80165c6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80165ca:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80165ce:	eba3 0309 	sub.w	r3, r3, r9
 80165d2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80165d6:	e7e5      	b.n	80165a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80165d8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80165dc:	b2b3      	uxth	r3, r6
 80165de:	441a      	add	r2, r3
 80165e0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80165e4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80165e8:	1ad3      	subs	r3, r2, r3
 80165ea:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80165ee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80165f2:	b11b      	cbz	r3, 80165fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80165f4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80165f8:	2b00      	cmp	r3, #0
 80165fa:	d0ba      	beq.n	8016572 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80165fc:	b063      	add	sp, #396	; 0x18c
 80165fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016602:	2a02      	cmp	r2, #2
 8016604:	d105      	bne.n	8016612 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8016606:	7be2      	ldrb	r2, [r4, #15]
 8016608:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801660c:	1a80      	subs	r0, r0, r2
 801660e:	1ac0      	subs	r0, r0, r3
 8016610:	e773      	b.n	80164fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8016612:	2000      	movs	r0, #0
 8016614:	e772      	b.n	80164fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016616:	7be0      	ldrb	r0, [r4, #15]
 8016618:	e770      	b.n	80164fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801661a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801661e:	e773      	b.n	8016508 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8016620:	f1ba 0f00 	cmp.w	sl, #0
 8016624:	d0f7      	beq.n	8016616 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8016626:	2264      	movs	r2, #100	; 0x64
 8016628:	4639      	mov	r1, r7
 801662a:	a849      	add	r0, sp, #292	; 0x124
 801662c:	f015 fd3b 	bl	802c0a6 <memcpy>
 8016630:	2300      	movs	r3, #0
 8016632:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8016636:	6821      	ldr	r1, [r4, #0]
 8016638:	a849      	add	r0, sp, #292	; 0x124
 801663a:	f7ff fbae 	bl	8015d9a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801663e:	b203      	sxth	r3, r0
 8016640:	e751      	b.n	80164e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08016642 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8016642:	2b03      	cmp	r3, #3
 8016644:	d818      	bhi.n	8016678 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8016646:	e8df f003 	tbb	[pc, r3]
 801664a:	0602      	.short	0x0602
 801664c:	130d      	.short	0x130d
 801664e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016652:	1850      	adds	r0, r2, r1
 8016654:	4770      	bx	lr
 8016656:	8803      	ldrh	r3, [r0, #0]
 8016658:	8880      	ldrh	r0, [r0, #4]
 801665a:	4418      	add	r0, r3
 801665c:	b200      	sxth	r0, r0
 801665e:	1a80      	subs	r0, r0, r2
 8016660:	3801      	subs	r0, #1
 8016662:	4770      	bx	lr
 8016664:	8803      	ldrh	r3, [r0, #0]
 8016666:	8880      	ldrh	r0, [r0, #4]
 8016668:	4418      	add	r0, r3
 801666a:	b200      	sxth	r0, r0
 801666c:	1a40      	subs	r0, r0, r1
 801666e:	e7f7      	b.n	8016660 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8016670:	f9b0 0000 	ldrsh.w	r0, [r0]
 8016674:	4410      	add	r0, r2
 8016676:	4770      	bx	lr
 8016678:	2000      	movs	r0, #0
 801667a:	4770      	bx	lr

0801667c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801667c:	2b03      	cmp	r3, #3
 801667e:	d817      	bhi.n	80166b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8016680:	e8df f003 	tbb	[pc, r3]
 8016684:	10090602 	.word	0x10090602
 8016688:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801668c:	1850      	adds	r0, r2, r1
 801668e:	4770      	bx	lr
 8016690:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016694:	e7fa      	b.n	801668c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8016696:	8843      	ldrh	r3, [r0, #2]
 8016698:	88c0      	ldrh	r0, [r0, #6]
 801669a:	4418      	add	r0, r3
 801669c:	b200      	sxth	r0, r0
 801669e:	1a80      	subs	r0, r0, r2
 80166a0:	3801      	subs	r0, #1
 80166a2:	4770      	bx	lr
 80166a4:	8843      	ldrh	r3, [r0, #2]
 80166a6:	88c0      	ldrh	r0, [r0, #6]
 80166a8:	4418      	add	r0, r3
 80166aa:	b200      	sxth	r0, r0
 80166ac:	1a40      	subs	r0, r0, r1
 80166ae:	e7f7      	b.n	80166a0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80166b0:	2000      	movs	r0, #0
 80166b2:	4770      	bx	lr

080166b4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80166b4:	4b01      	ldr	r3, [pc, #4]	; (80166bc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80166b6:	2200      	movs	r2, #0
 80166b8:	601a      	str	r2, [r3, #0]
 80166ba:	4770      	bx	lr
 80166bc:	20013844 	.word	0x20013844

080166c0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80166c0:	4603      	mov	r3, r0
 80166c2:	b1c8      	cbz	r0, 80166f8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80166c4:	0c02      	lsrs	r2, r0, #16
 80166c6:	0412      	lsls	r2, r2, #16
 80166c8:	b9a2      	cbnz	r2, 80166f4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80166ca:	0403      	lsls	r3, r0, #16
 80166cc:	2010      	movs	r0, #16
 80166ce:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80166d2:	bf04      	itt	eq
 80166d4:	021b      	lsleq	r3, r3, #8
 80166d6:	3008      	addeq	r0, #8
 80166d8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80166dc:	bf04      	itt	eq
 80166de:	011b      	lsleq	r3, r3, #4
 80166e0:	3004      	addeq	r0, #4
 80166e2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80166e6:	bf04      	itt	eq
 80166e8:	009b      	lsleq	r3, r3, #2
 80166ea:	3002      	addeq	r0, #2
 80166ec:	2b00      	cmp	r3, #0
 80166ee:	db04      	blt.n	80166fa <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80166f0:	3001      	adds	r0, #1
 80166f2:	4770      	bx	lr
 80166f4:	2000      	movs	r0, #0
 80166f6:	e7ea      	b.n	80166ce <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80166f8:	2020      	movs	r0, #32
 80166fa:	4770      	bx	lr

080166fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80166fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016700:	b087      	sub	sp, #28
 8016702:	460d      	mov	r5, r1
 8016704:	4616      	mov	r6, r2
 8016706:	4698      	mov	r8, r3
 8016708:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801670c:	4601      	mov	r1, r0
 801670e:	b120      	cbz	r0, 801671a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016710:	b11a      	cbz	r2, 801671a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016712:	2d1f      	cmp	r5, #31
 8016714:	d801      	bhi.n	801671a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016716:	2b1f      	cmp	r3, #31
 8016718:	d904      	bls.n	8016724 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801671a:	2000      	movs	r0, #0
 801671c:	6038      	str	r0, [r7, #0]
 801671e:	b007      	add	sp, #28
 8016720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016724:	b97d      	cbnz	r5, 8016746 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8016726:	b143      	cbz	r3, 801673a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8016728:	4602      	mov	r2, r0
 801672a:	e9cd 4700 	strd	r4, r7, [sp]
 801672e:	462b      	mov	r3, r5
 8016730:	4641      	mov	r1, r8
 8016732:	4630      	mov	r0, r6
 8016734:	f7ff ffe2 	bl	80166fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016738:	e7f1      	b.n	801671e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801673a:	f04f 33ff 	mov.w	r3, #4294967295
 801673e:	603b      	str	r3, [r7, #0]
 8016740:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016744:	e7eb      	b.n	801671e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016746:	fa32 fa05 	lsrs.w	sl, r2, r5
 801674a:	d106      	bne.n	801675a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801674c:	4346      	muls	r6, r0
 801674e:	fbb6 f0f4 	udiv	r0, r6, r4
 8016752:	fb04 6610 	mls	r6, r4, r0, r6
 8016756:	603e      	str	r6, [r7, #0]
 8016758:	e7e1      	b.n	801671e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801675a:	2201      	movs	r2, #1
 801675c:	40aa      	lsls	r2, r5
 801675e:	3a01      	subs	r2, #1
 8016760:	4016      	ands	r6, r2
 8016762:	fa00 fb05 	lsl.w	fp, r0, r5
 8016766:	4630      	mov	r0, r6
 8016768:	fbbb f9f4 	udiv	r9, fp, r4
 801676c:	fb0a f309 	mul.w	r3, sl, r9
 8016770:	9303      	str	r3, [sp, #12]
 8016772:	f7ff ffa5 	bl	80166c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016776:	462b      	mov	r3, r5
 8016778:	460a      	mov	r2, r1
 801677a:	e9cd 4700 	strd	r4, r7, [sp]
 801677e:	4601      	mov	r1, r0
 8016780:	4630      	mov	r0, r6
 8016782:	f7ff ffbb 	bl	80166fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016786:	fb04 b919 	mls	r9, r4, r9, fp
 801678a:	4606      	mov	r6, r0
 801678c:	4648      	mov	r0, r9
 801678e:	eb05 0108 	add.w	r1, r5, r8
 8016792:	f7ff ff95 	bl	80166c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016796:	ab05      	add	r3, sp, #20
 8016798:	e9cd 4300 	strd	r4, r3, [sp]
 801679c:	464a      	mov	r2, r9
 801679e:	4603      	mov	r3, r0
 80167a0:	4650      	mov	r0, sl
 80167a2:	f7ff ffab 	bl	80166fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80167a6:	6839      	ldr	r1, [r7, #0]
 80167a8:	9a05      	ldr	r2, [sp, #20]
 80167aa:	9b03      	ldr	r3, [sp, #12]
 80167ac:	4411      	add	r1, r2
 80167ae:	fbb1 f2f4 	udiv	r2, r1, r4
 80167b2:	18d3      	adds	r3, r2, r3
 80167b4:	441e      	add	r6, r3
 80167b6:	fb04 1412 	mls	r4, r4, r2, r1
 80167ba:	4430      	add	r0, r6
 80167bc:	603c      	str	r4, [r7, #0]
 80167be:	e7ae      	b.n	801671e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080167c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80167c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80167c4:	b085      	sub	sp, #20
 80167c6:	f1b0 0900 	subs.w	r9, r0, #0
 80167ca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80167cc:	461d      	mov	r5, r3
 80167ce:	bfbf      	itttt	lt
 80167d0:	6823      	ldrlt	r3, [r4, #0]
 80167d2:	425b      	neglt	r3, r3
 80167d4:	f1c9 0900 	rsblt	r9, r9, #0
 80167d8:	6023      	strlt	r3, [r4, #0]
 80167da:	bfb4      	ite	lt
 80167dc:	f04f 36ff 	movlt.w	r6, #4294967295
 80167e0:	2601      	movge	r6, #1
 80167e2:	2a00      	cmp	r2, #0
 80167e4:	4617      	mov	r7, r2
 80167e6:	da04      	bge.n	80167f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80167e8:	6823      	ldr	r3, [r4, #0]
 80167ea:	425b      	negs	r3, r3
 80167ec:	4257      	negs	r7, r2
 80167ee:	4276      	negs	r6, r6
 80167f0:	6023      	str	r3, [r4, #0]
 80167f2:	2d00      	cmp	r5, #0
 80167f4:	4638      	mov	r0, r7
 80167f6:	bfba      	itte	lt
 80167f8:	426d      	neglt	r5, r5
 80167fa:	f04f 38ff 	movlt.w	r8, #4294967295
 80167fe:	f04f 0801 	movge.w	r8, #1
 8016802:	f7ff ff5d 	bl	80166c0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016806:	ab03      	add	r3, sp, #12
 8016808:	e9cd 5300 	strd	r5, r3, [sp]
 801680c:	463a      	mov	r2, r7
 801680e:	4603      	mov	r3, r0
 8016810:	4648      	mov	r0, r9
 8016812:	f7ff ff73 	bl	80166fc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016816:	6823      	ldr	r3, [r4, #0]
 8016818:	9a03      	ldr	r2, [sp, #12]
 801681a:	4546      	cmp	r6, r8
 801681c:	441a      	add	r2, r3
 801681e:	fb92 f3f5 	sdiv	r3, r2, r5
 8016822:	4418      	add	r0, r3
 8016824:	bf18      	it	ne
 8016826:	4240      	negne	r0, r0
 8016828:	fb05 2313 	mls	r3, r5, r3, r2
 801682c:	1c72      	adds	r2, r6, #1
 801682e:	6023      	str	r3, [r4, #0]
 8016830:	d105      	bne.n	801683e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8016832:	2b00      	cmp	r3, #0
 8016834:	f1c3 0200 	rsb	r2, r3, #0
 8016838:	db0b      	blt.n	8016852 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801683a:	6022      	str	r2, [r4, #0]
 801683c:	e006      	b.n	801684c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801683e:	2e01      	cmp	r6, #1
 8016840:	d104      	bne.n	801684c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016842:	2b00      	cmp	r3, #0
 8016844:	da02      	bge.n	801684c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016846:	442b      	add	r3, r5
 8016848:	3801      	subs	r0, #1
 801684a:	6023      	str	r3, [r4, #0]
 801684c:	b005      	add	sp, #20
 801684e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016852:	3801      	subs	r0, #1
 8016854:	1b52      	subs	r2, r2, r5
 8016856:	e7f0      	b.n	801683a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08016858 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8016858:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801685c:	4c1c      	ldr	r4, [pc, #112]	; (80168d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801685e:	6807      	ldr	r7, [r0, #0]
 8016860:	69a3      	ldr	r3, [r4, #24]
 8016862:	4605      	mov	r5, r0
 8016864:	b92b      	cbnz	r3, 8016872 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8016866:	6840      	ldr	r0, [r0, #4]
 8016868:	e9c5 7000 	strd	r7, r0, [r5]
 801686c:	b004      	add	sp, #16
 801686e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016872:	68a2      	ldr	r2, [r4, #8]
 8016874:	6820      	ldr	r0, [r4, #0]
 8016876:	ae04      	add	r6, sp, #16
 8016878:	f04f 0802 	mov.w	r8, #2
 801687c:	fb93 f1f8 	sdiv	r1, r3, r8
 8016880:	440a      	add	r2, r1
 8016882:	f846 2d04 	str.w	r2, [r6, #-4]!
 8016886:	69e1      	ldr	r1, [r4, #28]
 8016888:	9600      	str	r6, [sp, #0]
 801688a:	463a      	mov	r2, r7
 801688c:	f7ff ff98 	bl	80167c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8016890:	69a3      	ldr	r3, [r4, #24]
 8016892:	686a      	ldr	r2, [r5, #4]
 8016894:	6a21      	ldr	r1, [r4, #32]
 8016896:	9600      	str	r6, [sp, #0]
 8016898:	4607      	mov	r7, r0
 801689a:	6860      	ldr	r0, [r4, #4]
 801689c:	f7ff ff90 	bl	80167c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80168a0:	6962      	ldr	r2, [r4, #20]
 80168a2:	69a3      	ldr	r3, [r4, #24]
 80168a4:	fb93 f8f8 	sdiv	r8, r3, r8
 80168a8:	4442      	add	r2, r8
 80168aa:	9203      	str	r2, [sp, #12]
 80168ac:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80168ae:	682a      	ldr	r2, [r5, #0]
 80168b0:	9600      	str	r6, [sp, #0]
 80168b2:	4407      	add	r7, r0
 80168b4:	68e0      	ldr	r0, [r4, #12]
 80168b6:	f7ff ff83 	bl	80167c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80168ba:	9600      	str	r6, [sp, #0]
 80168bc:	4680      	mov	r8, r0
 80168be:	69a3      	ldr	r3, [r4, #24]
 80168c0:	686a      	ldr	r2, [r5, #4]
 80168c2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80168c4:	6920      	ldr	r0, [r4, #16]
 80168c6:	f7ff ff7b 	bl	80167c0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80168ca:	4440      	add	r0, r8
 80168cc:	e7cc      	b.n	8016868 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80168ce:	bf00      	nop
 80168d0:	20013848 	.word	0x20013848

080168d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80168d4:	4b07      	ldr	r3, [pc, #28]	; (80168f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80168d6:	781b      	ldrb	r3, [r3, #0]
 80168d8:	2b01      	cmp	r3, #1
 80168da:	d109      	bne.n	80168f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80168dc:	f9b1 3000 	ldrsh.w	r3, [r1]
 80168e0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80168e4:	8003      	strh	r3, [r0, #0]
 80168e6:	4b04      	ldr	r3, [pc, #16]	; (80168f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80168e8:	881b      	ldrh	r3, [r3, #0]
 80168ea:	3b01      	subs	r3, #1
 80168ec:	1a9b      	subs	r3, r3, r2
 80168ee:	800b      	strh	r3, [r1, #0]
 80168f0:	4770      	bx	lr
 80168f2:	bf00      	nop
 80168f4:	2001382c 	.word	0x2001382c
 80168f8:	20013828 	.word	0x20013828

080168fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80168fc:	b510      	push	{r4, lr}
 80168fe:	4b07      	ldr	r3, [pc, #28]	; (801691c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8016900:	781b      	ldrb	r3, [r3, #0]
 8016902:	2b01      	cmp	r3, #1
 8016904:	d108      	bne.n	8016918 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8016906:	4b06      	ldr	r3, [pc, #24]	; (8016920 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8016908:	880c      	ldrh	r4, [r1, #0]
 801690a:	881b      	ldrh	r3, [r3, #0]
 801690c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016910:	3b01      	subs	r3, #1
 8016912:	1b1b      	subs	r3, r3, r4
 8016914:	8003      	strh	r3, [r0, #0]
 8016916:	800a      	strh	r2, [r1, #0]
 8016918:	bd10      	pop	{r4, pc}
 801691a:	bf00      	nop
 801691c:	2001382c 	.word	0x2001382c
 8016920:	20013828 	.word	0x20013828

08016924 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016924:	b510      	push	{r4, lr}
 8016926:	4b0a      	ldr	r3, [pc, #40]	; (8016950 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016928:	781b      	ldrb	r3, [r3, #0]
 801692a:	2b01      	cmp	r3, #1
 801692c:	d10e      	bne.n	801694c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801692e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016932:	8843      	ldrh	r3, [r0, #2]
 8016934:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016938:	8044      	strh	r4, [r0, #2]
 801693a:	18ca      	adds	r2, r1, r3
 801693c:	4b05      	ldr	r3, [pc, #20]	; (8016954 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801693e:	881b      	ldrh	r3, [r3, #0]
 8016940:	1a9b      	subs	r3, r3, r2
 8016942:	8003      	strh	r3, [r0, #0]
 8016944:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016948:	80c3      	strh	r3, [r0, #6]
 801694a:	8081      	strh	r1, [r0, #4]
 801694c:	bd10      	pop	{r4, pc}
 801694e:	bf00      	nop
 8016950:	2001382c 	.word	0x2001382c
 8016954:	20013828 	.word	0x20013828

08016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8016958:	4b08      	ldr	r3, [pc, #32]	; (801697c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801695a:	781b      	ldrb	r3, [r3, #0]
 801695c:	2b01      	cmp	r3, #1
 801695e:	d10c      	bne.n	801697a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016960:	8803      	ldrh	r3, [r0, #0]
 8016962:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8016966:	8842      	ldrh	r2, [r0, #2]
 8016968:	8002      	strh	r2, [r0, #0]
 801696a:	185a      	adds	r2, r3, r1
 801696c:	4b04      	ldr	r3, [pc, #16]	; (8016980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801696e:	881b      	ldrh	r3, [r3, #0]
 8016970:	1a9b      	subs	r3, r3, r2
 8016972:	8043      	strh	r3, [r0, #2]
 8016974:	88c3      	ldrh	r3, [r0, #6]
 8016976:	8083      	strh	r3, [r0, #4]
 8016978:	80c1      	strh	r1, [r0, #6]
 801697a:	4770      	bx	lr
 801697c:	2001382c 	.word	0x2001382c
 8016980:	20013828 	.word	0x20013828

08016984 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016984:	b510      	push	{r4, lr}
 8016986:	4b07      	ldr	r3, [pc, #28]	; (80169a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8016988:	781b      	ldrb	r3, [r3, #0]
 801698a:	2b01      	cmp	r3, #1
 801698c:	d108      	bne.n	80169a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801698e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8016992:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016996:	8003      	strh	r3, [r0, #0]
 8016998:	8893      	ldrh	r3, [r2, #4]
 801699a:	3b01      	subs	r3, #1
 801699c:	1b1b      	subs	r3, r3, r4
 801699e:	800b      	strh	r3, [r1, #0]
 80169a0:	bd10      	pop	{r4, pc}
 80169a2:	bf00      	nop
 80169a4:	2001382c 	.word	0x2001382c

080169a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80169a8:	4b0b      	ldr	r3, [pc, #44]	; (80169d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80169aa:	781b      	ldrb	r3, [r3, #0]
 80169ac:	2b01      	cmp	r3, #1
 80169ae:	d111      	bne.n	80169d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80169b0:	680b      	ldr	r3, [r1, #0]
 80169b2:	ed90 7a00 	vldr	s14, [r0]
 80169b6:	6003      	str	r3, [r0, #0]
 80169b8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80169bc:	eddf 6a07 	vldr	s13, [pc, #28]	; 80169dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80169c0:	ee07 3a90 	vmov	s15, r3
 80169c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80169c8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80169cc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80169d0:	edc1 7a00 	vstr	s15, [r1]
 80169d4:	4770      	bx	lr
 80169d6:	bf00      	nop
 80169d8:	2001382c 	.word	0x2001382c
 80169dc:	38d1b717 	.word	0x38d1b717

080169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80169e0:	b510      	push	{r4, lr}
 80169e2:	4b0a      	ldr	r3, [pc, #40]	; (8016a0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80169e4:	781b      	ldrb	r3, [r3, #0]
 80169e6:	2b01      	cmp	r3, #1
 80169e8:	460a      	mov	r2, r1
 80169ea:	d10d      	bne.n	8016a08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80169ec:	8881      	ldrh	r1, [r0, #4]
 80169ee:	8803      	ldrh	r3, [r0, #0]
 80169f0:	440b      	add	r3, r1
 80169f2:	4601      	mov	r1, r0
 80169f4:	3b01      	subs	r3, #1
 80169f6:	f821 3b02 	strh.w	r3, [r1], #2
 80169fa:	f7ff ffc3 	bl	8016984 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 80169fe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016a02:	88c2      	ldrh	r2, [r0, #6]
 8016a04:	8082      	strh	r2, [r0, #4]
 8016a06:	80c3      	strh	r3, [r0, #6]
 8016a08:	bd10      	pop	{r4, pc}
 8016a0a:	bf00      	nop
 8016a0c:	2001382c 	.word	0x2001382c

08016a10 <_ZN8touchgfx11Application13requestRedrawEv>:
 8016a10:	4b06      	ldr	r3, [pc, #24]	; (8016a2c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8016a12:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016a16:	4b06      	ldr	r3, [pc, #24]	; (8016a30 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8016a18:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8016a1c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016a20:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8016a24:	2100      	movs	r1, #0
 8016a26:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8016a2a:	4770      	bx	lr
 8016a2c:	20013828 	.word	0x20013828
 8016a30:	2001382a 	.word	0x2001382a

08016a34 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8016a34:	4b03      	ldr	r3, [pc, #12]	; (8016a44 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8016a36:	6818      	ldr	r0, [r3, #0]
 8016a38:	b110      	cbz	r0, 8016a40 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8016a3a:	6803      	ldr	r3, [r0, #0]
 8016a3c:	699b      	ldr	r3, [r3, #24]
 8016a3e:	4718      	bx	r3
 8016a40:	4770      	bx	lr
 8016a42:	bf00      	nop
 8016a44:	20013878 	.word	0x20013878

08016a48 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8016a48:	4770      	bx	lr
	...

08016a4c <_ZN8touchgfx11Application4drawEv>:
 8016a4c:	b507      	push	{r0, r1, r2, lr}
 8016a4e:	4b09      	ldr	r3, [pc, #36]	; (8016a74 <_ZN8touchgfx11Application4drawEv+0x28>)
 8016a50:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016a54:	4b08      	ldr	r3, [pc, #32]	; (8016a78 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8016a56:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016a5a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016a5e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016a62:	6803      	ldr	r3, [r0, #0]
 8016a64:	2100      	movs	r1, #0
 8016a66:	9100      	str	r1, [sp, #0]
 8016a68:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016a6a:	4669      	mov	r1, sp
 8016a6c:	4798      	blx	r3
 8016a6e:	b003      	add	sp, #12
 8016a70:	f85d fb04 	ldr.w	pc, [sp], #4
 8016a74:	20013828 	.word	0x20013828
 8016a78:	2001382a 	.word	0x2001382a

08016a7c <_ZN8touchgfx11Application10invalidateEv>:
 8016a7c:	4b09      	ldr	r3, [pc, #36]	; (8016aa4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8016a7e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016a82:	4b09      	ldr	r3, [pc, #36]	; (8016aa8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016a84:	b082      	sub	sp, #8
 8016a86:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016a8a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016a8e:	2100      	movs	r1, #0
 8016a90:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016a94:	9100      	str	r1, [sp, #0]
 8016a96:	6803      	ldr	r3, [r0, #0]
 8016a98:	aa02      	add	r2, sp, #8
 8016a9a:	e912 0006 	ldmdb	r2, {r1, r2}
 8016a9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016aa0:	b002      	add	sp, #8
 8016aa2:	4718      	bx	r3
 8016aa4:	20013828 	.word	0x20013828
 8016aa8:	2001382a 	.word	0x2001382a

08016aac <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8016aac:	4b03      	ldr	r3, [pc, #12]	; (8016abc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8016aae:	6818      	ldr	r0, [r3, #0]
 8016ab0:	b110      	cbz	r0, 8016ab8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8016ab2:	6803      	ldr	r3, [r0, #0]
 8016ab4:	69db      	ldr	r3, [r3, #28]
 8016ab6:	4718      	bx	r3
 8016ab8:	4770      	bx	lr
 8016aba:	bf00      	nop
 8016abc:	20013878 	.word	0x20013878

08016ac0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8016ac0:	4b03      	ldr	r3, [pc, #12]	; (8016ad0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8016ac2:	6818      	ldr	r0, [r3, #0]
 8016ac4:	b110      	cbz	r0, 8016acc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8016ac6:	6803      	ldr	r3, [r0, #0]
 8016ac8:	6a1b      	ldr	r3, [r3, #32]
 8016aca:	4718      	bx	r3
 8016acc:	4770      	bx	lr
 8016ace:	bf00      	nop
 8016ad0:	20013878 	.word	0x20013878

08016ad4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8016ad4:	2300      	movs	r3, #0
 8016ad6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8016ada:	4770      	bx	lr

08016adc <_ZN8touchgfx11Application14handleKeyEventEh>:
 8016adc:	4b03      	ldr	r3, [pc, #12]	; (8016aec <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8016ade:	6818      	ldr	r0, [r3, #0]
 8016ae0:	b110      	cbz	r0, 8016ae8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8016ae2:	6803      	ldr	r3, [r0, #0]
 8016ae4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016ae6:	4718      	bx	r3
 8016ae8:	4770      	bx	lr
 8016aea:	bf00      	nop
 8016aec:	20013878 	.word	0x20013878

08016af0 <_ZN8touchgfx11ApplicationD1Ev>:
 8016af0:	4770      	bx	lr

08016af2 <_ZN8touchgfx11ApplicationD0Ev>:
 8016af2:	b510      	push	{r4, lr}
 8016af4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8016af8:	4604      	mov	r4, r0
 8016afa:	f014 f996 	bl	802ae2a <_ZdlPvj>
 8016afe:	4620      	mov	r0, r4
 8016b00:	bd10      	pop	{r4, pc}

08016b02 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8016b02:	b510      	push	{r4, lr}
 8016b04:	f9b1 4000 	ldrsh.w	r4, [r1]
 8016b08:	888a      	ldrh	r2, [r1, #4]
 8016b0a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016b0e:	4422      	add	r2, r4
 8016b10:	b212      	sxth	r2, r2
 8016b12:	4293      	cmp	r3, r2
 8016b14:	da15      	bge.n	8016b42 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016b16:	8882      	ldrh	r2, [r0, #4]
 8016b18:	4413      	add	r3, r2
 8016b1a:	b21b      	sxth	r3, r3
 8016b1c:	429c      	cmp	r4, r3
 8016b1e:	da10      	bge.n	8016b42 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016b20:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016b24:	88c9      	ldrh	r1, [r1, #6]
 8016b26:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016b2a:	4419      	add	r1, r3
 8016b2c:	b209      	sxth	r1, r1
 8016b2e:	428a      	cmp	r2, r1
 8016b30:	da07      	bge.n	8016b42 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016b32:	88c0      	ldrh	r0, [r0, #6]
 8016b34:	4410      	add	r0, r2
 8016b36:	b200      	sxth	r0, r0
 8016b38:	4283      	cmp	r3, r0
 8016b3a:	bfac      	ite	ge
 8016b3c:	2000      	movge	r0, #0
 8016b3e:	2001      	movlt	r0, #1
 8016b40:	bd10      	pop	{r4, pc}
 8016b42:	2000      	movs	r0, #0
 8016b44:	e7fc      	b.n	8016b40 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08016b46 <_ZN8touchgfx4Rect10restrictToEss>:
 8016b46:	f9b0 3000 	ldrsh.w	r3, [r0]
 8016b4a:	2b00      	cmp	r3, #0
 8016b4c:	b510      	push	{r4, lr}
 8016b4e:	da04      	bge.n	8016b5a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016b50:	8884      	ldrh	r4, [r0, #4]
 8016b52:	4423      	add	r3, r4
 8016b54:	8083      	strh	r3, [r0, #4]
 8016b56:	2300      	movs	r3, #0
 8016b58:	8003      	strh	r3, [r0, #0]
 8016b5a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016b5e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016b62:	1b09      	subs	r1, r1, r4
 8016b64:	428b      	cmp	r3, r1
 8016b66:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8016b6a:	bfc8      	it	gt
 8016b6c:	8081      	strhgt	r1, [r0, #4]
 8016b6e:	2b00      	cmp	r3, #0
 8016b70:	da04      	bge.n	8016b7c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016b72:	88c1      	ldrh	r1, [r0, #6]
 8016b74:	440b      	add	r3, r1
 8016b76:	80c3      	strh	r3, [r0, #6]
 8016b78:	2300      	movs	r3, #0
 8016b7a:	8043      	strh	r3, [r0, #2]
 8016b7c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016b80:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016b84:	1a52      	subs	r2, r2, r1
 8016b86:	4293      	cmp	r3, r2
 8016b88:	bfc8      	it	gt
 8016b8a:	80c2      	strhgt	r2, [r0, #6]
 8016b8c:	bd10      	pop	{r4, pc}
	...

08016b90 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8016b90:	b510      	push	{r4, lr}
 8016b92:	4b10      	ldr	r3, [pc, #64]	; (8016bd4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8016b94:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016b98:	4b0f      	ldr	r3, [pc, #60]	; (8016bd8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8016b9a:	460c      	mov	r4, r1
 8016b9c:	4620      	mov	r0, r4
 8016b9e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016ba2:	f7ff ffd0 	bl	8016b46 <_ZN8touchgfx4Rect10restrictToEss>
 8016ba6:	4b0d      	ldr	r3, [pc, #52]	; (8016bdc <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8016ba8:	6818      	ldr	r0, [r3, #0]
 8016baa:	b190      	cbz	r0, 8016bd2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8016bac:	6803      	ldr	r3, [r0, #0]
 8016bae:	4621      	mov	r1, r4
 8016bb0:	689b      	ldr	r3, [r3, #8]
 8016bb2:	4798      	blx	r3
 8016bb4:	4b0a      	ldr	r3, [pc, #40]	; (8016be0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8016bb6:	6818      	ldr	r0, [r3, #0]
 8016bb8:	b118      	cbz	r0, 8016bc2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8016bba:	6803      	ldr	r3, [r0, #0]
 8016bbc:	4621      	mov	r1, r4
 8016bbe:	689b      	ldr	r3, [r3, #8]
 8016bc0:	4798      	blx	r3
 8016bc2:	4b08      	ldr	r3, [pc, #32]	; (8016be4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8016bc4:	6818      	ldr	r0, [r3, #0]
 8016bc6:	6803      	ldr	r3, [r0, #0]
 8016bc8:	4621      	mov	r1, r4
 8016bca:	69db      	ldr	r3, [r3, #28]
 8016bcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016bd0:	4718      	bx	r3
 8016bd2:	bd10      	pop	{r4, pc}
 8016bd4:	2001382a 	.word	0x2001382a
 8016bd8:	20013828 	.word	0x20013828
 8016bdc:	20013878 	.word	0x20013878
 8016be0:	20013874 	.word	0x20013874
 8016be4:	20013834 	.word	0x20013834

08016be8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8016be8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016bea:	4606      	mov	r6, r0
 8016bec:	4608      	mov	r0, r1
 8016bee:	460f      	mov	r7, r1
 8016bf0:	f7fa f957 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016bf4:	b9e8      	cbnz	r0, 8016c32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016bf6:	f9b7 5000 	ldrsh.w	r5, [r7]
 8016bfa:	f9b6 4000 	ldrsh.w	r4, [r6]
 8016bfe:	42a5      	cmp	r5, r4
 8016c00:	db17      	blt.n	8016c32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016c02:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8016c06:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8016c0a:	429a      	cmp	r2, r3
 8016c0c:	db11      	blt.n	8016c32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016c0e:	88b9      	ldrh	r1, [r7, #4]
 8016c10:	440d      	add	r5, r1
 8016c12:	88b1      	ldrh	r1, [r6, #4]
 8016c14:	440c      	add	r4, r1
 8016c16:	b22d      	sxth	r5, r5
 8016c18:	b224      	sxth	r4, r4
 8016c1a:	42a5      	cmp	r5, r4
 8016c1c:	dc09      	bgt.n	8016c32 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016c1e:	88f8      	ldrh	r0, [r7, #6]
 8016c20:	4410      	add	r0, r2
 8016c22:	88f2      	ldrh	r2, [r6, #6]
 8016c24:	4413      	add	r3, r2
 8016c26:	b200      	sxth	r0, r0
 8016c28:	b21b      	sxth	r3, r3
 8016c2a:	4298      	cmp	r0, r3
 8016c2c:	bfcc      	ite	gt
 8016c2e:	2000      	movgt	r0, #0
 8016c30:	2001      	movle	r0, #1
 8016c32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016c34 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016c34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016c36:	4604      	mov	r4, r0
 8016c38:	4608      	mov	r0, r1
 8016c3a:	460d      	mov	r5, r1
 8016c3c:	f7fa f931 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016c40:	b978      	cbnz	r0, 8016c62 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8016c42:	4620      	mov	r0, r4
 8016c44:	f7fa f92d 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016c48:	f9b5 6000 	ldrsh.w	r6, [r5]
 8016c4c:	b150      	cbz	r0, 8016c64 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8016c4e:	8026      	strh	r6, [r4, #0]
 8016c50:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016c54:	8063      	strh	r3, [r4, #2]
 8016c56:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8016c5a:	80a3      	strh	r3, [r4, #4]
 8016c5c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016c60:	80e3      	strh	r3, [r4, #6]
 8016c62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016c64:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016c68:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8016c6c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8016c70:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016c74:	88ed      	ldrh	r5, [r5, #6]
 8016c76:	42b1      	cmp	r1, r6
 8016c78:	460f      	mov	r7, r1
 8016c7a:	bfa8      	it	ge
 8016c7c:	4637      	movge	r7, r6
 8016c7e:	4293      	cmp	r3, r2
 8016c80:	4618      	mov	r0, r3
 8016c82:	4466      	add	r6, ip
 8016c84:	bfa8      	it	ge
 8016c86:	4610      	movge	r0, r2
 8016c88:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016c8c:	8027      	strh	r7, [r4, #0]
 8016c8e:	442a      	add	r2, r5
 8016c90:	88e5      	ldrh	r5, [r4, #6]
 8016c92:	8060      	strh	r0, [r4, #2]
 8016c94:	4461      	add	r1, ip
 8016c96:	442b      	add	r3, r5
 8016c98:	b236      	sxth	r6, r6
 8016c9a:	b209      	sxth	r1, r1
 8016c9c:	b212      	sxth	r2, r2
 8016c9e:	b21b      	sxth	r3, r3
 8016ca0:	428e      	cmp	r6, r1
 8016ca2:	bfac      	ite	ge
 8016ca4:	ebc7 0106 	rsbge	r1, r7, r6
 8016ca8:	ebc7 0101 	rsblt	r1, r7, r1
 8016cac:	429a      	cmp	r2, r3
 8016cae:	bfac      	ite	ge
 8016cb0:	ebc0 0202 	rsbge	r2, r0, r2
 8016cb4:	ebc0 0203 	rsblt	r2, r0, r3
 8016cb8:	80a1      	strh	r1, [r4, #4]
 8016cba:	80e2      	strh	r2, [r4, #6]
 8016cbc:	e7d1      	b.n	8016c62 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08016cc0 <_ZN8touchgfx11Application11getInstanceEv>:
 8016cc0:	4b01      	ldr	r3, [pc, #4]	; (8016cc8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8016cc2:	6818      	ldr	r0, [r3, #0]
 8016cc4:	4770      	bx	lr
 8016cc6:	bf00      	nop
 8016cc8:	20013888 	.word	0x20013888

08016ccc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8016ccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016cce:	4b10      	ldr	r3, [pc, #64]	; (8016d10 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8016cd0:	781b      	ldrb	r3, [r3, #0]
 8016cd2:	4605      	mov	r5, r0
 8016cd4:	b1d3      	cbz	r3, 8016d0c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8016cd6:	4b0f      	ldr	r3, [pc, #60]	; (8016d14 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8016cd8:	4f0f      	ldr	r7, [pc, #60]	; (8016d18 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8016cda:	881c      	ldrh	r4, [r3, #0]
 8016cdc:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8016ce0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8016ce4:	42a3      	cmp	r3, r4
 8016ce6:	d90e      	bls.n	8016d06 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8016ce8:	683b      	ldr	r3, [r7, #0]
 8016cea:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8016cee:	b10a      	cbz	r2, 8016cf4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8016cf0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016cf2:	b900      	cbnz	r0, 8016cf6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8016cf4:	6898      	ldr	r0, [r3, #8]
 8016cf6:	6803      	ldr	r3, [r0, #0]
 8016cf8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8016cfc:	69db      	ldr	r3, [r3, #28]
 8016cfe:	3401      	adds	r4, #1
 8016d00:	4798      	blx	r3
 8016d02:	b2a4      	uxth	r4, r4
 8016d04:	e7ec      	b.n	8016ce0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8016d06:	2300      	movs	r3, #0
 8016d08:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8016d0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016d0e:	bf00      	nop
 8016d10:	20013832 	.word	0x20013832
 8016d14:	20000088 	.word	0x20000088
 8016d18:	20013834 	.word	0x20013834

08016d1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8016d1c:	b510      	push	{r4, lr}
 8016d1e:	2300      	movs	r3, #0
 8016d20:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8016d24:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016d28:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016d2c:	4604      	mov	r4, r0
 8016d2e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016d32:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8016d36:	429a      	cmp	r2, r3
 8016d38:	d90e      	bls.n	8016d58 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8016d3a:	18e2      	adds	r2, r4, r3
 8016d3c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8016d40:	b122      	cbz	r2, 8016d4c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8016d42:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8016d46:	6803      	ldr	r3, [r0, #0]
 8016d48:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016d4a:	4798      	blx	r3
 8016d4c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016d50:	3301      	adds	r3, #1
 8016d52:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016d56:	e7ea      	b.n	8016d2e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8016d58:	bd10      	pop	{r4, pc}

08016d5a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8016d5a:	b530      	push	{r4, r5, lr}
 8016d5c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8016d60:	2200      	movs	r2, #0
 8016d62:	b293      	uxth	r3, r2
 8016d64:	429d      	cmp	r5, r3
 8016d66:	d90e      	bls.n	8016d86 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016d68:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8016d6c:	428b      	cmp	r3, r1
 8016d6e:	d10b      	bne.n	8016d88 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016d70:	1884      	adds	r4, r0, r2
 8016d72:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8016d76:	b13b      	cbz	r3, 8016d88 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016d78:	3b01      	subs	r3, #1
 8016d7a:	b2db      	uxtb	r3, r3
 8016d7c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8016d80:	b90b      	cbnz	r3, 8016d86 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016d82:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8016d86:	bd30      	pop	{r4, r5, pc}
 8016d88:	3201      	adds	r2, #1
 8016d8a:	e7ea      	b.n	8016d62 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8016d8c:	2300      	movs	r3, #0
 8016d8e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016d92:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8016d96:	30a4      	adds	r0, #164	; 0xa4
 8016d98:	f802 3b01 	strb.w	r3, [r2], #1
 8016d9c:	4282      	cmp	r2, r0
 8016d9e:	d1fb      	bne.n	8016d98 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8016da0:	4770      	bx	lr
	...

08016da4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8016da4:	b570      	push	{r4, r5, r6, lr}
 8016da6:	4c0b      	ldr	r4, [pc, #44]	; (8016dd4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8016da8:	4605      	mov	r5, r0
 8016daa:	6820      	ldr	r0, [r4, #0]
 8016dac:	460e      	mov	r6, r1
 8016dae:	b110      	cbz	r0, 8016db6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8016db0:	6803      	ldr	r3, [r0, #0]
 8016db2:	695b      	ldr	r3, [r3, #20]
 8016db4:	4798      	blx	r3
 8016db6:	1d28      	adds	r0, r5, #4
 8016db8:	f7ff ffe8 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016dbc:	6026      	str	r6, [r4, #0]
 8016dbe:	6833      	ldr	r3, [r6, #0]
 8016dc0:	4630      	mov	r0, r6
 8016dc2:	68db      	ldr	r3, [r3, #12]
 8016dc4:	4798      	blx	r3
 8016dc6:	682b      	ldr	r3, [r5, #0]
 8016dc8:	4628      	mov	r0, r5
 8016dca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016dcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016dd0:	4718      	bx	r3
 8016dd2:	bf00      	nop
 8016dd4:	20013878 	.word	0x20013878

08016dd8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8016dd8:	2300      	movs	r3, #0
 8016dda:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8016dde:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8016de2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016de4:	461a      	mov	r2, r3
 8016de6:	461c      	mov	r4, r3
 8016de8:	461d      	mov	r5, r3
 8016dea:	459c      	cmp	ip, r3
 8016dec:	dd1a      	ble.n	8016e24 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8016dee:	18c6      	adds	r6, r0, r3
 8016df0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8016df4:	b16e      	cbz	r6, 8016e12 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8016df6:	429a      	cmp	r2, r3
 8016df8:	d008      	beq.n	8016e0c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8016dfa:	fa1f fe82 	uxth.w	lr, r2
 8016dfe:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8016e02:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8016e06:	1887      	adds	r7, r0, r2
 8016e08:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8016e0c:	3201      	adds	r2, #1
 8016e0e:	3301      	adds	r3, #1
 8016e10:	e7eb      	b.n	8016dea <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8016e12:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8016e16:	4299      	cmp	r1, r3
 8016e18:	bfa8      	it	ge
 8016e1a:	3501      	addge	r5, #1
 8016e1c:	429e      	cmp	r6, r3
 8016e1e:	bfc8      	it	gt
 8016e20:	3401      	addgt	r4, #1
 8016e22:	e7f4      	b.n	8016e0e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8016e24:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8016e28:	1b49      	subs	r1, r1, r5
 8016e2a:	1b1b      	subs	r3, r3, r4
 8016e2c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8016e30:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016e34:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016e38:	4293      	cmp	r3, r2
 8016e3a:	dd03      	ble.n	8016e44 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8016e3c:	3b01      	subs	r3, #1
 8016e3e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016e42:	e7f7      	b.n	8016e34 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8016e44:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016e48 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016e48:	b570      	push	{r4, r5, r6, lr}
 8016e4a:	4d16      	ldr	r5, [pc, #88]	; (8016ea4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8016e4c:	4604      	mov	r4, r0
 8016e4e:	6828      	ldr	r0, [r5, #0]
 8016e50:	b140      	cbz	r0, 8016e64 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016e52:	7a03      	ldrb	r3, [r0, #8]
 8016e54:	b933      	cbnz	r3, 8016e64 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016e56:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016e5a:	6803      	ldr	r3, [r0, #0]
 8016e5c:	689b      	ldr	r3, [r3, #8]
 8016e5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016e62:	4718      	bx	r3
 8016e64:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8016e68:	4e0f      	ldr	r6, [pc, #60]	; (8016ea8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8016e6a:	b973      	cbnz	r3, 8016e8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016e6c:	b168      	cbz	r0, 8016e8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016e6e:	7a03      	ldrb	r3, [r0, #8]
 8016e70:	b15b      	cbz	r3, 8016e8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016e72:	6830      	ldr	r0, [r6, #0]
 8016e74:	b110      	cbz	r0, 8016e7c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8016e76:	6803      	ldr	r3, [r0, #0]
 8016e78:	691b      	ldr	r3, [r3, #16]
 8016e7a:	4798      	blx	r3
 8016e7c:	6828      	ldr	r0, [r5, #0]
 8016e7e:	6803      	ldr	r3, [r0, #0]
 8016e80:	68db      	ldr	r3, [r3, #12]
 8016e82:	4798      	blx	r3
 8016e84:	2301      	movs	r3, #1
 8016e86:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8016e8a:	3404      	adds	r4, #4
 8016e8c:	4620      	mov	r0, r4
 8016e8e:	f7ff ff45 	bl	8016d1c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8016e92:	4620      	mov	r0, r4
 8016e94:	f7ff ffa0 	bl	8016dd8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016e98:	6830      	ldr	r0, [r6, #0]
 8016e9a:	b110      	cbz	r0, 8016ea2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8016e9c:	6803      	ldr	r3, [r0, #0]
 8016e9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016ea0:	e7dd      	b.n	8016e5e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8016ea2:	bd70      	pop	{r4, r5, r6, pc}
 8016ea4:	2001387c 	.word	0x2001387c
 8016ea8:	20013878 	.word	0x20013878

08016eac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8016eac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016eae:	2300      	movs	r3, #0
 8016eb0:	4604      	mov	r4, r0
 8016eb2:	460d      	mov	r5, r1
 8016eb4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8016eb8:	4618      	mov	r0, r3
 8016eba:	b29a      	uxth	r2, r3
 8016ebc:	4291      	cmp	r1, r2
 8016ebe:	d911      	bls.n	8016ee4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8016ec0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8016ec4:	18e6      	adds	r6, r4, r3
 8016ec6:	42af      	cmp	r7, r5
 8016ec8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8016ecc:	d105      	bne.n	8016eda <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8016ece:	2aff      	cmp	r2, #255	; 0xff
 8016ed0:	d002      	beq.n	8016ed8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016ed2:	3201      	adds	r2, #1
 8016ed4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8016ed8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016eda:	2a00      	cmp	r2, #0
 8016edc:	bf08      	it	eq
 8016ede:	2001      	moveq	r0, #1
 8016ee0:	3301      	adds	r3, #1
 8016ee2:	e7ea      	b.n	8016eba <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8016ee4:	b120      	cbz	r0, 8016ef0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016ee6:	2920      	cmp	r1, #32
 8016ee8:	d102      	bne.n	8016ef0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8016eea:	4620      	mov	r0, r4
 8016eec:	f7ff ff74 	bl	8016dd8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016ef0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8016ef4:	2b1f      	cmp	r3, #31
 8016ef6:	d8ef      	bhi.n	8016ed8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016ef8:	18e2      	adds	r2, r4, r3
 8016efa:	2101      	movs	r1, #1
 8016efc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8016f00:	185a      	adds	r2, r3, r1
 8016f02:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8016f06:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8016f0a:	e7e5      	b.n	8016ed8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08016f0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8016f0c:	4603      	mov	r3, r0
 8016f0e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8016f12:	2200      	movs	r2, #0
 8016f14:	801a      	strh	r2, [r3, #0]
 8016f16:	805a      	strh	r2, [r3, #2]
 8016f18:	809a      	strh	r2, [r3, #4]
 8016f1a:	80da      	strh	r2, [r3, #6]
 8016f1c:	3308      	adds	r3, #8
 8016f1e:	428b      	cmp	r3, r1
 8016f20:	d1f8      	bne.n	8016f14 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8016f22:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8016f26:	4770      	bx	lr

08016f28 <_ZN8touchgfx11ApplicationC1Ev>:
 8016f28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016f2a:	4606      	mov	r6, r0
 8016f2c:	4b1c      	ldr	r3, [pc, #112]	; (8016fa0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8016f2e:	f846 3b04 	str.w	r3, [r6], #4
 8016f32:	4604      	mov	r4, r0
 8016f34:	2500      	movs	r5, #0
 8016f36:	22a8      	movs	r2, #168	; 0xa8
 8016f38:	2100      	movs	r1, #0
 8016f3a:	4630      	mov	r0, r6
 8016f3c:	f014 ff8d 	bl	802be5a <memset>
 8016f40:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8016f44:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016f48:	f7ff ffe0 	bl	8016f0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016f4c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016f50:	f7ff ffdc 	bl	8016f0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016f54:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8016f58:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8016f5c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8016f60:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8016f64:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8016f68:	490e      	ldr	r1, [pc, #56]	; (8016fa4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8016f6a:	480f      	ldr	r0, [pc, #60]	; (8016fa8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8016f6c:	4f0f      	ldr	r7, [pc, #60]	; (8016fac <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8016f6e:	f010 fe27 	bl	8027bc0 <CRC_Lock>
 8016f72:	4b0f      	ldr	r3, [pc, #60]	; (8016fb0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016f74:	b158      	cbz	r0, 8016f8e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8016f76:	801d      	strh	r5, [r3, #0]
 8016f78:	4a0e      	ldr	r2, [pc, #56]	; (8016fb4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8016f7a:	2300      	movs	r3, #0
 8016f7c:	6013      	str	r3, [r2, #0]
 8016f7e:	4a0e      	ldr	r2, [pc, #56]	; (8016fb8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016f80:	603b      	str	r3, [r7, #0]
 8016f82:	4630      	mov	r0, r6
 8016f84:	6013      	str	r3, [r2, #0]
 8016f86:	f7ff ff01 	bl	8016d8c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016f8a:	4620      	mov	r0, r4
 8016f8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016f8e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016f92:	2002      	movs	r0, #2
 8016f94:	801a      	strh	r2, [r3, #0]
 8016f96:	6038      	str	r0, [r7, #0]
 8016f98:	f001 fb4a 	bl	8018630 <_ZN8touchgfx6Screen4drawEv>
 8016f9c:	e7ec      	b.n	8016f78 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8016f9e:	bf00      	nop
 8016fa0:	0802fe70 	.word	0x0802fe70
 8016fa4:	b5e8b5cd 	.word	0xb5e8b5cd
 8016fa8:	f407a5c2 	.word	0xf407a5c2
 8016fac:	20013878 	.word	0x20013878
 8016fb0:	20000088 	.word	0x20000088
 8016fb4:	20013888 	.word	0x20013888
 8016fb8:	2001387c 	.word	0x2001387c

08016fbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016fbc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016fc0:	3b01      	subs	r3, #1
 8016fc2:	b29b      	uxth	r3, r3
 8016fc4:	428b      	cmp	r3, r1
 8016fc6:	b510      	push	{r4, lr}
 8016fc8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8016fcc:	d908      	bls.n	8016fe0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016fce:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016fd2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016fd6:	681a      	ldr	r2, [r3, #0]
 8016fd8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016fdc:	685a      	ldr	r2, [r3, #4]
 8016fde:	6062      	str	r2, [r4, #4]
 8016fe0:	bd10      	pop	{r4, pc}
	...

08016fe4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fe8:	4b8f      	ldr	r3, [pc, #572]	; (8017228 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8016fea:	b08f      	sub	sp, #60	; 0x3c
 8016fec:	ac0a      	add	r4, sp, #40	; 0x28
 8016fee:	e884 0006 	stmia.w	r4, {r1, r2}
 8016ff2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016ff6:	4b8d      	ldr	r3, [pc, #564]	; (801722c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016ff8:	4683      	mov	fp, r0
 8016ffa:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016ffe:	4620      	mov	r0, r4
 8017000:	f7ff fda1 	bl	8016b46 <_ZN8touchgfx4Rect10restrictToEss>
 8017004:	4620      	mov	r0, r4
 8017006:	f7f9 ff4c 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801700a:	2800      	cmp	r0, #0
 801700c:	d16a      	bne.n	80170e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801700e:	9403      	str	r4, [sp, #12]
 8017010:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8017014:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8017018:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 801701c:	35a4      	adds	r5, #164	; 0xa4
 801701e:	9301      	str	r3, [sp, #4]
 8017020:	b15c      	cbz	r4, 801703a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8017022:	4629      	mov	r1, r5
 8017024:	9803      	ldr	r0, [sp, #12]
 8017026:	f7ff fddf 	bl	8016be8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801702a:	3c01      	subs	r4, #1
 801702c:	b118      	cbz	r0, 8017036 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801702e:	b2a1      	uxth	r1, r4
 8017030:	9801      	ldr	r0, [sp, #4]
 8017032:	f7ff ffc3 	bl	8016fbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017036:	3d08      	subs	r5, #8
 8017038:	e7f2      	b.n	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801703a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 801703e:	f8cd a010 	str.w	sl, [sp, #16]
 8017042:	f10a 33ff 	add.w	r3, sl, #4294967295
 8017046:	9302      	str	r3, [sp, #8]
 8017048:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801704c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8017050:	9306      	str	r3, [sp, #24]
 8017052:	445c      	add	r4, fp
 8017054:	2500      	movs	r5, #0
 8017056:	4626      	mov	r6, r4
 8017058:	f8cd a014 	str.w	sl, [sp, #20]
 801705c:	462f      	mov	r7, r5
 801705e:	9b05      	ldr	r3, [sp, #20]
 8017060:	2b00      	cmp	r3, #0
 8017062:	d073      	beq.n	801714c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8017064:	9903      	ldr	r1, [sp, #12]
 8017066:	4630      	mov	r0, r6
 8017068:	f7ff fd4b 	bl	8016b02 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801706c:	b350      	cbz	r0, 80170c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801706e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8017072:	f9b6 c000 	ldrsh.w	ip, [r6]
 8017076:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801707a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801707e:	45e6      	cmp	lr, ip
 8017080:	db33      	blt.n	80170ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8017082:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8017086:	88b3      	ldrh	r3, [r6, #4]
 8017088:	4472      	add	r2, lr
 801708a:	4463      	add	r3, ip
 801708c:	b212      	sxth	r2, r2
 801708e:	b21b      	sxth	r3, r3
 8017090:	429a      	cmp	r2, r3
 8017092:	dc2a      	bgt.n	80170ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8017094:	88f3      	ldrh	r3, [r6, #6]
 8017096:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801709a:	fa1f f289 	uxth.w	r2, r9
 801709e:	4413      	add	r3, r2
 80170a0:	b29b      	uxth	r3, r3
 80170a2:	45c8      	cmp	r8, r9
 80170a4:	fa1f fc88 	uxth.w	ip, r8
 80170a8:	fa0f fe83 	sxth.w	lr, r3
 80170ac:	db0f      	blt.n	80170ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 80170ae:	eba3 030c 	sub.w	r3, r3, ip
 80170b2:	1ac9      	subs	r1, r1, r3
 80170b4:	b209      	sxth	r1, r1
 80170b6:	2900      	cmp	r1, #0
 80170b8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80170bc:	dd12      	ble.n	80170e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80170be:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80170c2:	4605      	mov	r5, r0
 80170c4:	9b05      	ldr	r3, [sp, #20]
 80170c6:	3b01      	subs	r3, #1
 80170c8:	9305      	str	r3, [sp, #20]
 80170ca:	3e08      	subs	r6, #8
 80170cc:	e7c7      	b.n	801705e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80170ce:	4461      	add	r1, ip
 80170d0:	b209      	sxth	r1, r1
 80170d2:	4571      	cmp	r1, lr
 80170d4:	dc38      	bgt.n	8017148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80170d6:	eba2 020c 	sub.w	r2, r2, ip
 80170da:	b212      	sxth	r2, r2
 80170dc:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80170e0:	2a00      	cmp	r2, #0
 80170e2:	dcee      	bgt.n	80170c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80170e4:	b00f      	add	sp, #60	; 0x3c
 80170e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170ea:	45c8      	cmp	r8, r9
 80170ec:	db2c      	blt.n	8017148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80170ee:	88f3      	ldrh	r3, [r6, #6]
 80170f0:	4499      	add	r9, r3
 80170f2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80170f6:	4498      	add	r8, r3
 80170f8:	fa0f f989 	sxth.w	r9, r9
 80170fc:	fa0f f888 	sxth.w	r8, r8
 8017100:	45c1      	cmp	r9, r8
 8017102:	db21      	blt.n	8017148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8017104:	88b3      	ldrh	r3, [r6, #4]
 8017106:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801710a:	fa1f f28c 	uxth.w	r2, ip
 801710e:	4413      	add	r3, r2
 8017110:	b29b      	uxth	r3, r3
 8017112:	45e6      	cmp	lr, ip
 8017114:	fa1f f88e 	uxth.w	r8, lr
 8017118:	fa0f f983 	sxth.w	r9, r3
 801711c:	db0a      	blt.n	8017134 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801711e:	eba3 0308 	sub.w	r3, r3, r8
 8017122:	1ac9      	subs	r1, r1, r3
 8017124:	b209      	sxth	r1, r1
 8017126:	2900      	cmp	r1, #0
 8017128:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801712c:	ddda      	ble.n	80170e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801712e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8017132:	e7c6      	b.n	80170c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8017134:	4441      	add	r1, r8
 8017136:	b209      	sxth	r1, r1
 8017138:	4549      	cmp	r1, r9
 801713a:	dc05      	bgt.n	8017148 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801713c:	eba2 0208 	sub.w	r2, r2, r8
 8017140:	b212      	sxth	r2, r2
 8017142:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8017146:	e7cb      	b.n	80170e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8017148:	4607      	mov	r7, r0
 801714a:	e7bb      	b.n	80170c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801714c:	2d00      	cmp	r5, #0
 801714e:	d181      	bne.n	8017054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8017150:	2f00      	cmp	r7, #0
 8017152:	f000 81dd 	beq.w	8017510 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017156:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801715a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801715e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8017162:	b2b3      	uxth	r3, r6
 8017164:	9305      	str	r3, [sp, #20]
 8017166:	9a05      	ldr	r2, [sp, #20]
 8017168:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801716c:	4413      	add	r3, r2
 801716e:	b2ba      	uxth	r2, r7
 8017170:	4492      	add	sl, r2
 8017172:	b29b      	uxth	r3, r3
 8017174:	fa1f fa8a 	uxth.w	sl, sl
 8017178:	fa0f f883 	sxth.w	r8, r3
 801717c:	fa0f f98a 	sxth.w	r9, sl
 8017180:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8017184:	9b04      	ldr	r3, [sp, #16]
 8017186:	2b00      	cmp	r3, #0
 8017188:	d052      	beq.n	8017230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801718a:	9903      	ldr	r1, [sp, #12]
 801718c:	4620      	mov	r0, r4
 801718e:	f7ff fcb8 	bl	8016b02 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017192:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8017196:	b1c0      	cbz	r0, 80171ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017198:	f9b4 e000 	ldrsh.w	lr, [r4]
 801719c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80171a0:	4576      	cmp	r6, lr
 80171a2:	dc22      	bgt.n	80171ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80171a4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80171a8:	44f4      	add	ip, lr
 80171aa:	fa0f fc8c 	sxth.w	ip, ip
 80171ae:	45e0      	cmp	r8, ip
 80171b0:	db1b      	blt.n	80171ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80171b2:	428f      	cmp	r7, r1
 80171b4:	fa1f fc81 	uxth.w	ip, r1
 80171b8:	88e1      	ldrh	r1, [r4, #6]
 80171ba:	dc0d      	bgt.n	80171d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80171bc:	ebaa 0c0c 	sub.w	ip, sl, ip
 80171c0:	eba1 010c 	sub.w	r1, r1, ip
 80171c4:	f8a4 9002 	strh.w	r9, [r4, #2]
 80171c8:	80e1      	strh	r1, [r4, #6]
 80171ca:	4628      	mov	r0, r5
 80171cc:	9904      	ldr	r1, [sp, #16]
 80171ce:	3901      	subs	r1, #1
 80171d0:	9104      	str	r1, [sp, #16]
 80171d2:	3c08      	subs	r4, #8
 80171d4:	4605      	mov	r5, r0
 80171d6:	e7d3      	b.n	8017180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80171d8:	4461      	add	r1, ip
 80171da:	b209      	sxth	r1, r1
 80171dc:	4549      	cmp	r1, r9
 80171de:	dcf5      	bgt.n	80171cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80171e0:	eba2 0c0c 	sub.w	ip, r2, ip
 80171e4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80171e8:	e7ef      	b.n	80171ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80171ea:	428f      	cmp	r7, r1
 80171ec:	dcee      	bgt.n	80171cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80171ee:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80171f2:	4461      	add	r1, ip
 80171f4:	b209      	sxth	r1, r1
 80171f6:	4589      	cmp	r9, r1
 80171f8:	dbe8      	blt.n	80171cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80171fa:	4576      	cmp	r6, lr
 80171fc:	fa1f fc8e 	uxth.w	ip, lr
 8017200:	88a1      	ldrh	r1, [r4, #4]
 8017202:	dc07      	bgt.n	8017214 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8017204:	eba3 0c0c 	sub.w	ip, r3, ip
 8017208:	eba1 010c 	sub.w	r1, r1, ip
 801720c:	f8a4 8000 	strh.w	r8, [r4]
 8017210:	80a1      	strh	r1, [r4, #4]
 8017212:	e7da      	b.n	80171ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017214:	4461      	add	r1, ip
 8017216:	b209      	sxth	r1, r1
 8017218:	4588      	cmp	r8, r1
 801721a:	dbd7      	blt.n	80171cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801721c:	9905      	ldr	r1, [sp, #20]
 801721e:	eba1 0c0c 	sub.w	ip, r1, ip
 8017222:	f8a4 c004 	strh.w	ip, [r4, #4]
 8017226:	e7d0      	b.n	80171ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8017228:	2001382a 	.word	0x2001382a
 801722c:	20013828 	.word	0x20013828
 8017230:	2d00      	cmp	r5, #0
 8017232:	f000 816d 	beq.w	8017510 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017236:	9b06      	ldr	r3, [sp, #24]
 8017238:	445b      	add	r3, fp
 801723a:	461c      	mov	r4, r3
 801723c:	9b02      	ldr	r3, [sp, #8]
 801723e:	3301      	adds	r3, #1
 8017240:	f000 8166 	beq.w	8017510 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8017244:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8017248:	4629      	mov	r1, r5
 801724a:	9803      	ldr	r0, [sp, #12]
 801724c:	f7ff fccc 	bl	8016be8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8017250:	b120      	cbz	r0, 801725c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8017252:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017256:	9801      	ldr	r0, [sp, #4]
 8017258:	f7ff feb0 	bl	8016fbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801725c:	9903      	ldr	r1, [sp, #12]
 801725e:	4628      	mov	r0, r5
 8017260:	f7ff fc4f 	bl	8016b02 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017264:	2800      	cmp	r0, #0
 8017266:	f000 809c 	beq.w	80173a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801726a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801726e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017272:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8017276:	9309      	str	r3, [sp, #36]	; 0x24
 8017278:	fa1f f189 	uxth.w	r1, r9
 801727c:	eb01 0c03 	add.w	ip, r1, r3
 8017280:	fa1f fa8c 	uxth.w	sl, ip
 8017284:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8017288:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801728c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8017290:	b283      	uxth	r3, r0
 8017292:	eb03 050c 	add.w	r5, r3, ip
 8017296:	b2ad      	uxth	r5, r5
 8017298:	9505      	str	r5, [sp, #20]
 801729a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801729e:	9504      	str	r5, [sp, #16]
 80172a0:	4548      	cmp	r0, r9
 80172a2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80172a6:	f340 8099 	ble.w	80173dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80172aa:	1a5b      	subs	r3, r3, r1
 80172ac:	b29b      	uxth	r3, r3
 80172ae:	4596      	cmp	lr, r2
 80172b0:	fa0f f08a 	sxth.w	r0, sl
 80172b4:	b21e      	sxth	r6, r3
 80172b6:	dd2e      	ble.n	8017316 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80172b8:	9f02      	ldr	r7, [sp, #8]
 80172ba:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80172be:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80172c2:	9f04      	ldr	r7, [sp, #16]
 80172c4:	1a3f      	subs	r7, r7, r0
 80172c6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80172ca:	fa1f fe8e 	uxth.w	lr, lr
 80172ce:	b292      	uxth	r2, r2
 80172d0:	ebae 0102 	sub.w	r1, lr, r2
 80172d4:	44a6      	add	lr, r4
 80172d6:	4402      	add	r2, r0
 80172d8:	b289      	uxth	r1, r1
 80172da:	fa0f fe8e 	sxth.w	lr, lr
 80172de:	b212      	sxth	r2, r2
 80172e0:	b20d      	sxth	r5, r1
 80172e2:	ebae 0202 	sub.w	r2, lr, r2
 80172e6:	436f      	muls	r7, r5
 80172e8:	4372      	muls	r2, r6
 80172ea:	4297      	cmp	r7, r2
 80172ec:	db09      	blt.n	8017302 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80172ee:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80172f2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80172f6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80172fa:	449c      	add	ip, r3
 80172fc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8017300:	e686      	b.n	8017010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017302:	4421      	add	r1, r4
 8017304:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8017308:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801730c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8017310:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017314:	e67c      	b.n	8017010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017316:	9f04      	ldr	r7, [sp, #16]
 8017318:	42b8      	cmp	r0, r7
 801731a:	da27      	bge.n	801736c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801731c:	9902      	ldr	r1, [sp, #8]
 801731e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8017322:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8017326:	eb05 010e 	add.w	r1, r5, lr
 801732a:	fa1f f881 	uxth.w	r8, r1
 801732e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8017332:	4411      	add	r1, r2
 8017334:	eba1 0108 	sub.w	r1, r1, r8
 8017338:	b289      	uxth	r1, r1
 801733a:	fa0f f988 	sxth.w	r9, r8
 801733e:	eba2 020e 	sub.w	r2, r2, lr
 8017342:	fa0f f881 	sxth.w	r8, r1
 8017346:	1a3f      	subs	r7, r7, r0
 8017348:	4372      	muls	r2, r6
 801734a:	fb08 f707 	mul.w	r7, r8, r7
 801734e:	42ba      	cmp	r2, r7
 8017350:	dc06      	bgt.n	8017360 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8017352:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8017356:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801735a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801735e:	e7ca      	b.n	80172f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8017360:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8017364:	4429      	add	r1, r5
 8017366:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801736a:	e651      	b.n	8017010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801736c:	9805      	ldr	r0, [sp, #20]
 801736e:	ebaa 0000 	sub.w	r0, sl, r0
 8017372:	b280      	uxth	r0, r0
 8017374:	2d06      	cmp	r5, #6
 8017376:	fa0f fe80 	sxth.w	lr, r0
 801737a:	d817      	bhi.n	80173ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801737c:	9b04      	ldr	r3, [sp, #16]
 801737e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8017382:	1c6b      	adds	r3, r5, #1
 8017384:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8017388:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801738c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8017390:	9b01      	ldr	r3, [sp, #4]
 8017392:	9801      	ldr	r0, [sp, #4]
 8017394:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8017398:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801739c:	805a      	strh	r2, [r3, #2]
 801739e:	809e      	strh	r6, [r3, #4]
 80173a0:	80d9      	strh	r1, [r3, #6]
 80173a2:	9b02      	ldr	r3, [sp, #8]
 80173a4:	3b01      	subs	r3, #1
 80173a6:	9302      	str	r3, [sp, #8]
 80173a8:	3c08      	subs	r4, #8
 80173aa:	e747      	b.n	801723c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80173ac:	9a02      	ldr	r2, [sp, #8]
 80173ae:	45b6      	cmp	lr, r6
 80173b0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80173b4:	db0d      	blt.n	80173d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80173b6:	449c      	add	ip, r3
 80173b8:	fa1f fc8c 	uxth.w	ip, ip
 80173bc:	445a      	add	r2, fp
 80173be:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80173c2:	448c      	add	ip, r1
 80173c4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80173c8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80173cc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80173d0:	e61e      	b.n	8017010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80173d2:	445a      	add	r2, fp
 80173d4:	4484      	add	ip, r0
 80173d6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80173da:	e78f      	b.n	80172fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80173dc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80173e0:	fa1f f18e 	uxth.w	r1, lr
 80173e4:	eb01 0806 	add.w	r8, r1, r6
 80173e8:	b293      	uxth	r3, r2
 80173ea:	fa1f f888 	uxth.w	r8, r8
 80173ee:	9306      	str	r3, [sp, #24]
 80173f0:	fa0f f388 	sxth.w	r3, r8
 80173f4:	9307      	str	r3, [sp, #28]
 80173f6:	9f06      	ldr	r7, [sp, #24]
 80173f8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80173fc:	443b      	add	r3, r7
 80173fe:	b29b      	uxth	r3, r3
 8017400:	4596      	cmp	lr, r2
 8017402:	9308      	str	r3, [sp, #32]
 8017404:	da24      	bge.n	8017450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8017406:	9905      	ldr	r1, [sp, #20]
 8017408:	eba3 0308 	sub.w	r3, r3, r8
 801740c:	ebaa 0401 	sub.w	r4, sl, r1
 8017410:	b2a4      	uxth	r4, r4
 8017412:	b29b      	uxth	r3, r3
 8017414:	b225      	sxth	r5, r4
 8017416:	b219      	sxth	r1, r3
 8017418:	eba2 020e 	sub.w	r2, r2, lr
 801741c:	eba9 0000 	sub.w	r0, r9, r0
 8017420:	436a      	muls	r2, r5
 8017422:	4348      	muls	r0, r1
 8017424:	4282      	cmp	r2, r0
 8017426:	9a02      	ldr	r2, [sp, #8]
 8017428:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801742c:	445a      	add	r2, fp
 801742e:	dc06      	bgt.n	801743e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8017430:	9b07      	ldr	r3, [sp, #28]
 8017432:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8017436:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 801743a:	44a4      	add	ip, r4
 801743c:	e75e      	b.n	80172fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801743e:	9904      	ldr	r1, [sp, #16]
 8017440:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8017444:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8017448:	4433      	add	r3, r6
 801744a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801744e:	e5df      	b.n	8017010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017450:	9f06      	ldr	r7, [sp, #24]
 8017452:	9b04      	ldr	r3, [sp, #16]
 8017454:	1bc9      	subs	r1, r1, r7
 8017456:	fa0f f78a 	sxth.w	r7, sl
 801745a:	b289      	uxth	r1, r1
 801745c:	429f      	cmp	r7, r3
 801745e:	fa0f fe81 	sxth.w	lr, r1
 8017462:	dd23      	ble.n	80174ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8017464:	9a05      	ldr	r2, [sp, #20]
 8017466:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801746a:	9d07      	ldr	r5, [sp, #28]
 801746c:	ebaa 0202 	sub.w	r2, sl, r2
 8017470:	b292      	uxth	r2, r2
 8017472:	eba5 0a03 	sub.w	sl, r5, r3
 8017476:	b214      	sxth	r4, r2
 8017478:	eba9 0000 	sub.w	r0, r9, r0
 801747c:	9b02      	ldr	r3, [sp, #8]
 801747e:	fb0e f000 	mul.w	r0, lr, r0
 8017482:	fb04 fa0a 	mul.w	sl, r4, sl
 8017486:	00db      	lsls	r3, r3, #3
 8017488:	4550      	cmp	r0, sl
 801748a:	445b      	add	r3, fp
 801748c:	db03      	blt.n	8017496 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801748e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8017492:	4494      	add	ip, r2
 8017494:	e732      	b.n	80172fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8017496:	9a04      	ldr	r2, [sp, #16]
 8017498:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801749c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80174a0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80174a4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80174a8:	4431      	add	r1, r6
 80174aa:	e75c      	b.n	8017366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80174ac:	9b08      	ldr	r3, [sp, #32]
 80174ae:	eba3 0308 	sub.w	r3, r3, r8
 80174b2:	b29b      	uxth	r3, r3
 80174b4:	2d06      	cmp	r5, #6
 80174b6:	b218      	sxth	r0, r3
 80174b8:	d813      	bhi.n	80174e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80174ba:	9b07      	ldr	r3, [sp, #28]
 80174bc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80174c0:	1c6b      	adds	r3, r5, #1
 80174c2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80174c6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80174ca:	9b01      	ldr	r3, [sp, #4]
 80174cc:	9901      	ldr	r1, [sp, #4]
 80174ce:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80174d2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80174d6:	805a      	strh	r2, [r3, #2]
 80174d8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80174da:	809a      	strh	r2, [r3, #4]
 80174dc:	f8a3 e006 	strh.w	lr, [r3, #6]
 80174e0:	e75f      	b.n	80173a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80174e2:	9c02      	ldr	r4, [sp, #8]
 80174e4:	4570      	cmp	r0, lr
 80174e6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80174ea:	db0d      	blt.n	8017508 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80174ec:	4431      	add	r1, r6
 80174ee:	9b06      	ldr	r3, [sp, #24]
 80174f0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80174f4:	b289      	uxth	r1, r1
 80174f6:	445c      	add	r4, fp
 80174f8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80174fc:	4419      	add	r1, r3
 80174fe:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8017502:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8017506:	e583      	b.n	8017010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017508:	445c      	add	r4, fp
 801750a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801750e:	e79b      	b.n	8017448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8017510:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8017514:	1e65      	subs	r5, r4, #1
 8017516:	b2ad      	uxth	r5, r5
 8017518:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801751c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8017520:	42b5      	cmp	r5, r6
 8017522:	d044      	beq.n	80175ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8017524:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017528:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801752c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017530:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8017534:	4282      	cmp	r2, r0
 8017536:	d11f      	bne.n	8017578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017538:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801753c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017540:	459c      	cmp	ip, r3
 8017542:	d119      	bne.n	8017578 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017544:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8017548:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801754c:	19d8      	adds	r0, r3, r7
 801754e:	b200      	sxth	r0, r0
 8017550:	4288      	cmp	r0, r1
 8017552:	d109      	bne.n	8017568 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8017554:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8017558:	4413      	add	r3, r2
 801755a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801755e:	4629      	mov	r1, r5
 8017560:	9801      	ldr	r0, [sp, #4]
 8017562:	f7ff fd2b 	bl	8016fbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017566:	e003      	b.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017568:	4411      	add	r1, r2
 801756a:	b209      	sxth	r1, r1
 801756c:	42b9      	cmp	r1, r7
 801756e:	d0f3      	beq.n	8017558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8017570:	3d01      	subs	r5, #1
 8017572:	b2ad      	uxth	r5, r5
 8017574:	3c08      	subs	r4, #8
 8017576:	e7d3      	b.n	8017520 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8017578:	42b9      	cmp	r1, r7
 801757a:	d1f9      	bne.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801757c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8017580:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017584:	4299      	cmp	r1, r3
 8017586:	d1f3      	bne.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017588:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801758c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8017590:	181f      	adds	r7, r3, r0
 8017592:	b23f      	sxth	r7, r7
 8017594:	42ba      	cmp	r2, r7
 8017596:	d105      	bne.n	80175a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8017598:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801759c:	440b      	add	r3, r1
 801759e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80175a2:	e7dc      	b.n	801755e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80175a4:	440a      	add	r2, r1
 80175a6:	b212      	sxth	r2, r2
 80175a8:	4290      	cmp	r0, r2
 80175aa:	d1e1      	bne.n	8017570 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80175ac:	e7f6      	b.n	801759c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80175ae:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80175b2:	2e07      	cmp	r6, #7
 80175b4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80175b8:	d812      	bhi.n	80175e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80175ba:	1c75      	adds	r5, r6, #1
 80175bc:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80175c0:	9d01      	ldr	r5, [sp, #4]
 80175c2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80175c6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80175ca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80175ce:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80175d2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80175d6:	442c      	add	r4, r5
 80175d8:	8061      	strh	r1, [r4, #2]
 80175da:	80a2      	strh	r2, [r4, #4]
 80175dc:	80e3      	strh	r3, [r4, #6]
 80175de:	e581      	b.n	80170e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80175e0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80175e4:	3e01      	subs	r6, #1
 80175e6:	445c      	add	r4, fp
 80175e8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80175ec:	f04f 37ff 	mov.w	r7, #4294967295
 80175f0:	2500      	movs	r5, #0
 80175f2:	9305      	str	r3, [sp, #20]
 80175f4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80175f8:	9302      	str	r3, [sp, #8]
 80175fa:	1e72      	subs	r2, r6, #1
 80175fc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017600:	9304      	str	r3, [sp, #16]
 8017602:	4691      	mov	r9, r2
 8017604:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8017608:	f1b9 3fff 	cmp.w	r9, #4294967295
 801760c:	bf14      	ite	ne
 801760e:	9905      	ldrne	r1, [sp, #20]
 8017610:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8017614:	6818      	ldr	r0, [r3, #0]
 8017616:	9207      	str	r2, [sp, #28]
 8017618:	bf18      	it	ne
 801761a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801761e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017622:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8017626:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801762a:	9306      	str	r3, [sp, #24]
 801762c:	fb18 f801 	smulbb	r8, r8, r1
 8017630:	6859      	ldr	r1, [r3, #4]
 8017632:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017636:	4671      	mov	r1, lr
 8017638:	a80c      	add	r0, sp, #48	; 0x30
 801763a:	f7ff fafb 	bl	8016c34 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801763e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8017642:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8017646:	9b04      	ldr	r3, [sp, #16]
 8017648:	9a02      	ldr	r2, [sp, #8]
 801764a:	fb10 f001 	smulbb	r0, r0, r1
 801764e:	fb02 8803 	mla	r8, r2, r3, r8
 8017652:	eba0 0108 	sub.w	r1, r0, r8
 8017656:	f04f 0c08 	mov.w	ip, #8
 801765a:	fb90 f0fc 	sdiv	r0, r0, ip
 801765e:	4288      	cmp	r0, r1
 8017660:	dc20      	bgt.n	80176a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8017662:	4551      	cmp	r1, sl
 8017664:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8017668:	da03      	bge.n	8017672 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801766a:	b1d9      	cbz	r1, 80176a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801766c:	468a      	mov	sl, r1
 801766e:	464f      	mov	r7, r9
 8017670:	4635      	mov	r5, r6
 8017672:	f109 39ff 	add.w	r9, r9, #4294967295
 8017676:	f119 0f02 	cmn.w	r9, #2
 801767a:	d1c5      	bne.n	8017608 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801767c:	4616      	mov	r6, r2
 801767e:	3201      	adds	r2, #1
 8017680:	f1a4 0408 	sub.w	r4, r4, #8
 8017684:	d1b6      	bne.n	80175f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8017686:	9b01      	ldr	r3, [sp, #4]
 8017688:	b2ac      	uxth	r4, r5
 801768a:	00ed      	lsls	r5, r5, #3
 801768c:	1958      	adds	r0, r3, r5
 801768e:	1c7b      	adds	r3, r7, #1
 8017690:	d10b      	bne.n	80176aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8017692:	4601      	mov	r1, r0
 8017694:	9803      	ldr	r0, [sp, #12]
 8017696:	f7ff facd 	bl	8016c34 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801769a:	4621      	mov	r1, r4
 801769c:	9801      	ldr	r0, [sp, #4]
 801769e:	f7ff fc8d 	bl	8016fbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80176a2:	e4b5      	b.n	8017010 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80176a4:	464f      	mov	r7, r9
 80176a6:	4635      	mov	r5, r6
 80176a8:	e7ed      	b.n	8017686 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80176aa:	9b01      	ldr	r3, [sp, #4]
 80176ac:	00ff      	lsls	r7, r7, #3
 80176ae:	19d9      	adds	r1, r3, r7
 80176b0:	f7ff fac0 	bl	8016c34 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80176b4:	9b03      	ldr	r3, [sp, #12]
 80176b6:	cb03      	ldmia	r3!, {r0, r1}
 80176b8:	445f      	add	r7, fp
 80176ba:	445d      	add	r5, fp
 80176bc:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80176c0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80176c4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80176c8:	9b03      	ldr	r3, [sp, #12]
 80176ca:	6869      	ldr	r1, [r5, #4]
 80176cc:	c303      	stmia	r3!, {r0, r1}
 80176ce:	e7e4      	b.n	801769a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080176d0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80176d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176d4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80176d8:	b09b      	sub	sp, #108	; 0x6c
 80176da:	4604      	mov	r4, r0
 80176dc:	4630      	mov	r0, r6
 80176de:	f7f9 fbe0 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80176e2:	4605      	mov	r5, r0
 80176e4:	b948      	cbnz	r0, 80176fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80176e6:	6823      	ldr	r3, [r4, #0]
 80176e8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80176ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80176ee:	4620      	mov	r0, r4
 80176f0:	4798      	blx	r3
 80176f2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80176f6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80176fa:	4bc6      	ldr	r3, [pc, #792]	; (8017a14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80176fc:	681b      	ldr	r3, [r3, #0]
 80176fe:	2b00      	cmp	r3, #0
 8017700:	d03f      	beq.n	8017782 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017702:	4dc5      	ldr	r5, [pc, #788]	; (8017a18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8017704:	4628      	mov	r0, r5
 8017706:	f7f9 fbcc 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801770a:	4606      	mov	r6, r0
 801770c:	2800      	cmp	r0, #0
 801770e:	d138      	bne.n	8017782 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017710:	4628      	mov	r0, r5
 8017712:	f7ff f907 	bl	8016924 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017716:	6823      	ldr	r3, [r4, #0]
 8017718:	6829      	ldr	r1, [r5, #0]
 801771a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801771c:	686a      	ldr	r2, [r5, #4]
 801771e:	4620      	mov	r0, r4
 8017720:	4798      	blx	r3
 8017722:	802e      	strh	r6, [r5, #0]
 8017724:	806e      	strh	r6, [r5, #2]
 8017726:	80ae      	strh	r6, [r5, #4]
 8017728:	80ee      	strh	r6, [r5, #6]
 801772a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801772e:	4dbb      	ldr	r5, [pc, #748]	; (8017a1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8017730:	4640      	mov	r0, r8
 8017732:	f7ff fbeb 	bl	8016f0c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017736:	882e      	ldrh	r6, [r5, #0]
 8017738:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801773c:	4633      	mov	r3, r6
 801773e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8017742:	42bb      	cmp	r3, r7
 8017744:	d224      	bcs.n	8017790 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017746:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801774a:	2907      	cmp	r1, #7
 801774c:	d816      	bhi.n	801777c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801774e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017752:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8017756:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801775a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801775e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8017762:	1c4a      	adds	r2, r1, #1
 8017764:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8017768:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801776c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8017770:	f8a2 a002 	strh.w	sl, [r2, #2]
 8017774:	f8a2 e004 	strh.w	lr, [r2, #4]
 8017778:	f8a2 c006 	strh.w	ip, [r2, #6]
 801777c:	3301      	adds	r3, #1
 801777e:	b29b      	uxth	r3, r3
 8017780:	e7df      	b.n	8017742 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8017782:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017786:	2b00      	cmp	r3, #0
 8017788:	d1cf      	bne.n	801772a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801778a:	b01b      	add	sp, #108	; 0x6c
 801778c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017790:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8017794:	42b3      	cmp	r3, r6
 8017796:	d90c      	bls.n	80177b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8017798:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801779c:	6822      	ldr	r2, [r4, #0]
 801779e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80177a2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80177a4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80177a8:	4620      	mov	r0, r4
 80177aa:	3601      	adds	r6, #1
 80177ac:	47b8      	blx	r7
 80177ae:	b2b6      	uxth	r6, r6
 80177b0:	e7ee      	b.n	8017790 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80177b2:	4a9b      	ldr	r2, [pc, #620]	; (8017a20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80177b4:	6813      	ldr	r3, [r2, #0]
 80177b6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80177ba:	2b01      	cmp	r3, #1
 80177bc:	4691      	mov	r9, r2
 80177be:	f040 80e2 	bne.w	8017986 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80177c2:	8829      	ldrh	r1, [r5, #0]
 80177c4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80177c8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80177cc:	33ae      	adds	r3, #174	; 0xae
 80177ce:	2600      	movs	r6, #0
 80177d0:	428f      	cmp	r7, r1
 80177d2:	f103 0308 	add.w	r3, r3, #8
 80177d6:	dd0a      	ble.n	80177ee <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80177d8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80177dc:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80177e0:	4402      	add	r2, r0
 80177e2:	b212      	sxth	r2, r2
 80177e4:	4296      	cmp	r6, r2
 80177e6:	bfb8      	it	lt
 80177e8:	4616      	movlt	r6, r2
 80177ea:	3101      	adds	r1, #1
 80177ec:	e7f0      	b.n	80177d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80177ee:	4b8d      	ldr	r3, [pc, #564]	; (8017a24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80177f0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8017a20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80177f4:	881b      	ldrh	r3, [r3, #0]
 80177f6:	2b0f      	cmp	r3, #15
 80177f8:	bf88      	it	hi
 80177fa:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80177fe:	f04f 0300 	mov.w	r3, #0
 8017802:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8017806:	bf98      	it	ls
 8017808:	f04f 0b01 	movls.w	fp, #1
 801780c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8017810:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8017814:	4b82      	ldr	r3, [pc, #520]	; (8017a20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017816:	4438      	add	r0, r7
 8017818:	b207      	sxth	r7, r0
 801781a:	6818      	ldr	r0, [r3, #0]
 801781c:	42b7      	cmp	r7, r6
 801781e:	6803      	ldr	r3, [r0, #0]
 8017820:	f280 8083 	bge.w	801792a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8017824:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8017828:	4798      	blx	r3
 801782a:	eb07 030b 	add.w	r3, r7, fp
 801782e:	4298      	cmp	r0, r3
 8017830:	da07      	bge.n	8017842 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017832:	42b0      	cmp	r0, r6
 8017834:	da05      	bge.n	8017842 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017836:	4287      	cmp	r7, r0
 8017838:	dd6c      	ble.n	8017914 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801783a:	2f00      	cmp	r7, #0
 801783c:	dd6a      	ble.n	8017914 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801783e:	4630      	mov	r0, r6
 8017840:	e004      	b.n	801784c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8017842:	4287      	cmp	r7, r0
 8017844:	dcfb      	bgt.n	801783e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8017846:	42b0      	cmp	r0, r6
 8017848:	bfa8      	it	ge
 801784a:	4630      	movge	r0, r6
 801784c:	4b76      	ldr	r3, [pc, #472]	; (8017a28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801784e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8017852:	1bc0      	subs	r0, r0, r7
 8017854:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017858:	882f      	ldrh	r7, [r5, #0]
 801785a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801785e:	2200      	movs	r2, #0
 8017860:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017864:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017868:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801786c:	42bb      	cmp	r3, r7
 801786e:	d9cd      	bls.n	801780c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017870:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8017874:	ab07      	add	r3, sp, #28
 8017876:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801787a:	6851      	ldr	r1, [r2, #4]
 801787c:	c303      	stmia	r3!, {r0, r1}
 801787e:	a905      	add	r1, sp, #20
 8017880:	a807      	add	r0, sp, #28
 8017882:	f7ff f93e 	bl	8016b02 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017886:	2800      	cmp	r0, #0
 8017888:	d04c      	beq.n	8017924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801788a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801788e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8017892:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8017896:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801789a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801789e:	9302      	str	r3, [sp, #8]
 80178a0:	4686      	mov	lr, r0
 80178a2:	4290      	cmp	r0, r2
 80178a4:	4450      	add	r0, sl
 80178a6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80178aa:	bfb8      	it	lt
 80178ac:	4696      	movlt	lr, r2
 80178ae:	4452      	add	r2, sl
 80178b0:	4299      	cmp	r1, r3
 80178b2:	b280      	uxth	r0, r0
 80178b4:	b292      	uxth	r2, r2
 80178b6:	468c      	mov	ip, r1
 80178b8:	fa0f fa82 	sxth.w	sl, r2
 80178bc:	bfb8      	it	lt
 80178be:	469c      	movlt	ip, r3
 80178c0:	b203      	sxth	r3, r0
 80178c2:	4553      	cmp	r3, sl
 80178c4:	bfb8      	it	lt
 80178c6:	4602      	movlt	r2, r0
 80178c8:	eba2 020e 	sub.w	r2, r2, lr
 80178cc:	f8ad 2020 	strh.w	r2, [sp, #32]
 80178d0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80178d4:	9b02      	ldr	r3, [sp, #8]
 80178d6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80178da:	4411      	add	r1, r2
 80178dc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80178e0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80178e4:	4413      	add	r3, r2
 80178e6:	b289      	uxth	r1, r1
 80178e8:	b29b      	uxth	r3, r3
 80178ea:	b208      	sxth	r0, r1
 80178ec:	b21a      	sxth	r2, r3
 80178ee:	4290      	cmp	r0, r2
 80178f0:	bfb8      	it	lt
 80178f2:	460b      	movlt	r3, r1
 80178f4:	eba3 030c 	sub.w	r3, r3, ip
 80178f8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80178fc:	a807      	add	r0, sp, #28
 80178fe:	f7f9 fad0 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017902:	b920      	cbnz	r0, 801790e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8017904:	6823      	ldr	r3, [r4, #0]
 8017906:	a907      	add	r1, sp, #28
 8017908:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801790a:	4620      	mov	r0, r4
 801790c:	4798      	blx	r3
 801790e:	3701      	adds	r7, #1
 8017910:	b2bf      	uxth	r7, r7
 8017912:	e7a9      	b.n	8017868 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8017914:	f8d9 0000 	ldr.w	r0, [r9]
 8017918:	6803      	ldr	r3, [r0, #0]
 801791a:	2101      	movs	r1, #1
 801791c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8017920:	4798      	blx	r3
 8017922:	e773      	b.n	801780c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017924:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8017928:	e7e8      	b.n	80178fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801792a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801792c:	4798      	blx	r3
 801792e:	4b3f      	ldr	r3, [pc, #252]	; (8017a2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8017930:	781b      	ldrb	r3, [r3, #0]
 8017932:	2b00      	cmp	r3, #0
 8017934:	f43f af29 	beq.w	801778a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017938:	2300      	movs	r3, #0
 801793a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801793e:	882b      	ldrh	r3, [r5, #0]
 8017940:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8017944:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8017948:	42ab      	cmp	r3, r5
 801794a:	f4bf af1e 	bcs.w	801778a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801794e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8017952:	2907      	cmp	r1, #7
 8017954:	d814      	bhi.n	8017980 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8017956:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801795a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801795e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8017962:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8017966:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801796a:	1c4a      	adds	r2, r1, #1
 801796c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8017970:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017974:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8017978:	f8a2 c002 	strh.w	ip, [r2, #2]
 801797c:	8097      	strh	r7, [r2, #4]
 801797e:	80d6      	strh	r6, [r2, #6]
 8017980:	3301      	adds	r3, #1
 8017982:	b29b      	uxth	r3, r3
 8017984:	e7e0      	b.n	8017948 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8017986:	2b02      	cmp	r3, #2
 8017988:	f040 8133 	bne.w	8017bf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801798c:	4b28      	ldr	r3, [pc, #160]	; (8017a30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801798e:	781b      	ldrb	r3, [r3, #0]
 8017990:	2b01      	cmp	r3, #1
 8017992:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8017996:	f000 8098 	beq.w	8017aca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801799a:	882a      	ldrh	r2, [r5, #0]
 801799c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80179a0:	3201      	adds	r2, #1
 80179a2:	b292      	uxth	r2, r2
 80179a4:	2900      	cmp	r1, #0
 80179a6:	d0c2      	beq.n	801792e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80179a8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80179ac:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80179b0:	441e      	add	r6, r3
 80179b2:	b236      	sxth	r6, r6
 80179b4:	4694      	mov	ip, r2
 80179b6:	f04f 0900 	mov.w	r9, #0
 80179ba:	fa1f f38c 	uxth.w	r3, ip
 80179be:	4299      	cmp	r1, r3
 80179c0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80179c4:	f240 80bf 	bls.w	8017b46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80179c8:	4427      	add	r7, r4
 80179ca:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80179ce:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80179d2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80179d6:	4283      	cmp	r3, r0
 80179d8:	f340 80a1 	ble.w	8017b1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80179dc:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80179e0:	4406      	add	r6, r0
 80179e2:	b236      	sxth	r6, r6
 80179e4:	429e      	cmp	r6, r3
 80179e6:	bfa8      	it	ge
 80179e8:	461e      	movge	r6, r3
 80179ea:	46e1      	mov	r9, ip
 80179ec:	f10c 0c01 	add.w	ip, ip, #1
 80179f0:	e7e3      	b.n	80179ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 80179f2:	d10a      	bne.n	8017a0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 80179f4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 80179f8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 80179fc:	4562      	cmp	r2, ip
 80179fe:	bfb8      	it	lt
 8017a00:	4662      	movlt	r2, ip
 8017a02:	4288      	cmp	r0, r1
 8017a04:	bfb8      	it	lt
 8017a06:	461f      	movlt	r7, r3
 8017a08:	e087      	b.n	8017b1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017a0a:	428a      	cmp	r2, r1
 8017a0c:	bfb8      	it	lt
 8017a0e:	460a      	movlt	r2, r1
 8017a10:	e083      	b.n	8017b1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017a12:	bf00      	nop
 8017a14:	20013874 	.word	0x20013874
 8017a18:	20013880 	.word	0x20013880
 8017a1c:	20000088 	.word	0x20000088
 8017a20:	20013834 	.word	0x20013834
 8017a24:	2001382a 	.word	0x2001382a
 8017a28:	20013828 	.word	0x20013828
 8017a2c:	20013832 	.word	0x20013832
 8017a30:	2001382c 	.word	0x2001382c
 8017a34:	19a1      	adds	r1, r4, r6
 8017a36:	ab07      	add	r3, sp, #28
 8017a38:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8017a3c:	6849      	ldr	r1, [r1, #4]
 8017a3e:	c303      	stmia	r3!, {r0, r1}
 8017a40:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017a44:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017a48:	2b13      	cmp	r3, #19
 8017a4a:	bfd8      	it	le
 8017a4c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8017a50:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017a54:	440b      	add	r3, r1
 8017a56:	1a9b      	subs	r3, r3, r2
 8017a58:	a807      	add	r0, sp, #28
 8017a5a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017a5e:	f7fe ff7b 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a62:	a807      	add	r0, sp, #28
 8017a64:	f7f9 fa1d 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017a68:	bb78      	cbnz	r0, 8017aca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017a6a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8017a6e:	f8d9 0000 	ldr.w	r0, [r9]
 8017a72:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017a76:	f8d0 e000 	ldr.w	lr, [r0]
 8017a7a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8017a7e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017a82:	f1bc 0f14 	cmp.w	ip, #20
 8017a86:	bfa8      	it	ge
 8017a88:	f04f 0c14 	movge.w	ip, #20
 8017a8c:	fa1f fc8c 	uxth.w	ip, ip
 8017a90:	f8cd c000 	str.w	ip, [sp]
 8017a94:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8017a98:	47d8      	blx	fp
 8017a9a:	4683      	mov	fp, r0
 8017a9c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017aa0:	a807      	add	r0, sp, #28
 8017aa2:	f7fe ff3f 	bl	8016924 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017aa6:	6823      	ldr	r3, [r4, #0]
 8017aa8:	4426      	add	r6, r4
 8017aaa:	4620      	mov	r0, r4
 8017aac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017aae:	a907      	add	r1, sp, #28
 8017ab0:	4798      	blx	r3
 8017ab2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8017ab6:	eba0 000b 	sub.w	r0, r0, fp
 8017aba:	b200      	sxth	r0, r0
 8017abc:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8017ac0:	b918      	cbnz	r0, 8017aca <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8017ac2:	b2b9      	uxth	r1, r7
 8017ac4:	4650      	mov	r0, sl
 8017ac6:	f7ff fa79 	bl	8016fbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017aca:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8017ace:	f1bb 0f00 	cmp.w	fp, #0
 8017ad2:	f43f af2c 	beq.w	801792e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017ad6:	882b      	ldrh	r3, [r5, #0]
 8017ad8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8017adc:	3301      	adds	r3, #1
 8017ade:	b29b      	uxth	r3, r3
 8017ae0:	2700      	movs	r7, #0
 8017ae2:	b299      	uxth	r1, r3
 8017ae4:	458b      	cmp	fp, r1
 8017ae6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8017aea:	d9a3      	bls.n	8017a34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8017aec:	4426      	add	r6, r4
 8017aee:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8017af2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8017af6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8017afa:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8017afe:	4408      	add	r0, r1
 8017b00:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8017b04:	4461      	add	r1, ip
 8017b06:	b200      	sxth	r0, r0
 8017b08:	b209      	sxth	r1, r1
 8017b0a:	4288      	cmp	r0, r1
 8017b0c:	f6bf af71 	bge.w	80179f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8017b10:	4584      	cmp	ip, r0
 8017b12:	4662      	mov	r2, ip
 8017b14:	461f      	mov	r7, r3
 8017b16:	bfb8      	it	lt
 8017b18:	4602      	movlt	r2, r0
 8017b1a:	3301      	adds	r3, #1
 8017b1c:	e7e1      	b.n	8017ae2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8017b1e:	d10e      	bne.n	8017b3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8017b20:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8017b24:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8017b28:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8017b2c:	4473      	add	r3, lr
 8017b2e:	b21b      	sxth	r3, r3
 8017b30:	429e      	cmp	r6, r3
 8017b32:	bfa8      	it	ge
 8017b34:	461e      	movge	r6, r3
 8017b36:	4287      	cmp	r7, r0
 8017b38:	bfb8      	it	lt
 8017b3a:	46e1      	movlt	r9, ip
 8017b3c:	e756      	b.n	80179ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017b3e:	4286      	cmp	r6, r0
 8017b40:	bfa8      	it	ge
 8017b42:	4606      	movge	r6, r0
 8017b44:	e752      	b.n	80179ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017b46:	eb0a 0007 	add.w	r0, sl, r7
 8017b4a:	4427      	add	r7, r4
 8017b4c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017b50:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8017b54:	f1bb 0f13 	cmp.w	fp, #19
 8017b58:	bfde      	ittt	le
 8017b5a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8017b5e:	445e      	addle	r6, fp
 8017b60:	b236      	sxthle	r6, r6
 8017b62:	f7f9 f99e 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017b66:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8017b6a:	2800      	cmp	r0, #0
 8017b6c:	f47f af1a 	bne.w	80179a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8017b70:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8017b74:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017b78:	482a      	ldr	r0, [pc, #168]	; (8017c24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8017b7a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8017b7e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8017b82:	6800      	ldr	r0, [r0, #0]
 8017b84:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017b88:	1ab6      	subs	r6, r6, r2
 8017b8a:	2e14      	cmp	r6, #20
 8017b8c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8017b90:	f8ad 3020 	strh.w	r3, [sp, #32]
 8017b94:	bfa8      	it	ge
 8017b96:	2614      	movge	r6, #20
 8017b98:	f8d0 c000 	ldr.w	ip, [r0]
 8017b9c:	b2b6      	uxth	r6, r6
 8017b9e:	fa1f fb8b 	uxth.w	fp, fp
 8017ba2:	455e      	cmp	r6, fp
 8017ba4:	bf94      	ite	ls
 8017ba6:	9600      	strls	r6, [sp, #0]
 8017ba8:	f8cd b000 	strhi.w	fp, [sp]
 8017bac:	b292      	uxth	r2, r2
 8017bae:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8017bb2:	b29b      	uxth	r3, r3
 8017bb4:	b289      	uxth	r1, r1
 8017bb6:	47b0      	blx	r6
 8017bb8:	6823      	ldr	r3, [r4, #0]
 8017bba:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017bbe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017bc0:	a907      	add	r1, sp, #28
 8017bc2:	4620      	mov	r0, r4
 8017bc4:	4798      	blx	r3
 8017bc6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8017bca:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8017bce:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8017bd2:	1a5b      	subs	r3, r3, r1
 8017bd4:	440a      	add	r2, r1
 8017bd6:	b21b      	sxth	r3, r3
 8017bd8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8017bdc:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8017be0:	2b00      	cmp	r3, #0
 8017be2:	f47f aeda 	bne.w	801799a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017be6:	fa1f f189 	uxth.w	r1, r9
 8017bea:	4650      	mov	r0, sl
 8017bec:	f7ff f9e6 	bl	8016fbc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017bf0:	e6d3      	b.n	801799a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017bf2:	882e      	ldrh	r6, [r5, #0]
 8017bf4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017bf8:	42b3      	cmp	r3, r6
 8017bfa:	f67f ae98 	bls.w	801792e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8017bfe:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8017c02:	ab07      	add	r3, sp, #28
 8017c04:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8017c08:	6851      	ldr	r1, [r2, #4]
 8017c0a:	c303      	stmia	r3!, {r0, r1}
 8017c0c:	a807      	add	r0, sp, #28
 8017c0e:	f7f9 f948 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017c12:	b920      	cbnz	r0, 8017c1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8017c14:	6823      	ldr	r3, [r4, #0]
 8017c16:	a907      	add	r1, sp, #28
 8017c18:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017c1a:	4620      	mov	r0, r4
 8017c1c:	4798      	blx	r3
 8017c1e:	3601      	adds	r6, #1
 8017c20:	b2b6      	uxth	r6, r6
 8017c22:	e7e7      	b.n	8017bf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8017c24:	20013834 	.word	0x20013834

08017c28 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017c28:	4b03      	ldr	r3, [pc, #12]	; (8017c38 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8017c2a:	2200      	movs	r2, #0
 8017c2c:	801a      	strh	r2, [r3, #0]
 8017c2e:	805a      	strh	r2, [r3, #2]
 8017c30:	809a      	strh	r2, [r3, #4]
 8017c32:	80da      	strh	r2, [r3, #6]
 8017c34:	4770      	bx	lr
 8017c36:	bf00      	nop
 8017c38:	20013880 	.word	0x20013880

08017c3c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8017c3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c40:	4606      	mov	r6, r0
 8017c42:	b09d      	sub	sp, #116	; 0x74
 8017c44:	a803      	add	r0, sp, #12
 8017c46:	4614      	mov	r4, r2
 8017c48:	468a      	mov	sl, r1
 8017c4a:	461d      	mov	r5, r3
 8017c4c:	f000 ff08 	bl	8018a60 <_ZN8touchgfx12TextProviderC1Ev>
 8017c50:	6833      	ldr	r3, [r6, #0]
 8017c52:	4630      	mov	r0, r6
 8017c54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017c56:	4798      	blx	r3
 8017c58:	6833      	ldr	r3, [r6, #0]
 8017c5a:	4607      	mov	r7, r0
 8017c5c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017c5e:	4630      	mov	r0, r6
 8017c60:	4798      	blx	r3
 8017c62:	462a      	mov	r2, r5
 8017c64:	9000      	str	r0, [sp, #0]
 8017c66:	4621      	mov	r1, r4
 8017c68:	463b      	mov	r3, r7
 8017c6a:	a803      	add	r0, sp, #12
 8017c6c:	f000 ff53 	bl	8018b16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017c70:	2500      	movs	r5, #0
 8017c72:	462c      	mov	r4, r5
 8017c74:	46a9      	mov	r9, r5
 8017c76:	46a8      	mov	r8, r5
 8017c78:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8017c7c:	2300      	movs	r3, #0
 8017c7e:	9302      	str	r3, [sp, #8]
 8017c80:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017c84:	429c      	cmp	r4, r3
 8017c86:	d002      	beq.n	8017c8e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017c88:	455c      	cmp	r4, fp
 8017c8a:	bf18      	it	ne
 8017c8c:	4625      	movne	r5, r4
 8017c8e:	ab02      	add	r3, sp, #8
 8017c90:	4632      	mov	r2, r6
 8017c92:	4651      	mov	r1, sl
 8017c94:	a803      	add	r0, sp, #12
 8017c96:	f001 fa41 	bl	801911c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017c9a:	4604      	mov	r4, r0
 8017c9c:	b108      	cbz	r0, 8017ca2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8017c9e:	280a      	cmp	r0, #10
 8017ca0:	d10a      	bne.n	8017cb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8017ca2:	45c1      	cmp	r9, r8
 8017ca4:	bf38      	it	cc
 8017ca6:	46c1      	movcc	r9, r8
 8017ca8:	f04f 0800 	mov.w	r8, #0
 8017cac:	2c00      	cmp	r4, #0
 8017cae:	d1e5      	bne.n	8017c7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017cb0:	4648      	mov	r0, r9
 8017cb2:	b01d      	add	sp, #116	; 0x74
 8017cb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017cb8:	9a02      	ldr	r2, [sp, #8]
 8017cba:	2a00      	cmp	r2, #0
 8017cbc:	d0de      	beq.n	8017c7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017cbe:	7b57      	ldrb	r7, [r2, #13]
 8017cc0:	6833      	ldr	r3, [r6, #0]
 8017cc2:	8894      	ldrh	r4, [r2, #4]
 8017cc4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017cc6:	007f      	lsls	r7, r7, #1
 8017cc8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8017ccc:	7a97      	ldrb	r7, [r2, #10]
 8017cce:	4629      	mov	r1, r5
 8017cd0:	4307      	orrs	r7, r0
 8017cd2:	4630      	mov	r0, r6
 8017cd4:	4798      	blx	r3
 8017cd6:	4438      	add	r0, r7
 8017cd8:	4480      	add	r8, r0
 8017cda:	fa1f f888 	uxth.w	r8, r8
 8017cde:	e7e5      	b.n	8017cac <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08017ce0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8017ce0:	b508      	push	{r3, lr}
 8017ce2:	6803      	ldr	r3, [r0, #0]
 8017ce4:	68db      	ldr	r3, [r3, #12]
 8017ce6:	4798      	blx	r3
 8017ce8:	b128      	cbz	r0, 8017cf6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8017cea:	7b43      	ldrb	r3, [r0, #13]
 8017cec:	7a80      	ldrb	r0, [r0, #10]
 8017cee:	005b      	lsls	r3, r3, #1
 8017cf0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017cf4:	4318      	orrs	r0, r3
 8017cf6:	bd08      	pop	{r3, pc}

08017cf8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017cf8:	b40e      	push	{r1, r2, r3}
 8017cfa:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017cfc:	b09e      	sub	sp, #120	; 0x78
 8017cfe:	ab23      	add	r3, sp, #140	; 0x8c
 8017d00:	4605      	mov	r5, r0
 8017d02:	f853 4b04 	ldr.w	r4, [r3], #4
 8017d06:	9303      	str	r3, [sp, #12]
 8017d08:	a805      	add	r0, sp, #20
 8017d0a:	f000 fea9 	bl	8018a60 <_ZN8touchgfx12TextProviderC1Ev>
 8017d0e:	682b      	ldr	r3, [r5, #0]
 8017d10:	4628      	mov	r0, r5
 8017d12:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017d14:	4798      	blx	r3
 8017d16:	682b      	ldr	r3, [r5, #0]
 8017d18:	4606      	mov	r6, r0
 8017d1a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017d1c:	4628      	mov	r0, r5
 8017d1e:	4798      	blx	r3
 8017d20:	4633      	mov	r3, r6
 8017d22:	ae1e      	add	r6, sp, #120	; 0x78
 8017d24:	4621      	mov	r1, r4
 8017d26:	9000      	str	r0, [sp, #0]
 8017d28:	9a03      	ldr	r2, [sp, #12]
 8017d2a:	2400      	movs	r4, #0
 8017d2c:	a805      	add	r0, sp, #20
 8017d2e:	f000 fef2 	bl	8018b16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017d32:	f846 4d68 	str.w	r4, [r6, #-104]!
 8017d36:	462a      	mov	r2, r5
 8017d38:	4633      	mov	r3, r6
 8017d3a:	4621      	mov	r1, r4
 8017d3c:	a805      	add	r0, sp, #20
 8017d3e:	f001 f9ed 	bl	801911c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017d42:	b1f0      	cbz	r0, 8017d82 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8017d44:	280a      	cmp	r0, #10
 8017d46:	d018      	beq.n	8017d7a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017d48:	9f04      	ldr	r7, [sp, #16]
 8017d4a:	b1b7      	cbz	r7, 8017d7a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017d4c:	7b78      	ldrb	r0, [r7, #13]
 8017d4e:	7a3b      	ldrb	r3, [r7, #8]
 8017d50:	88ea      	ldrh	r2, [r5, #6]
 8017d52:	00c1      	lsls	r1, r0, #3
 8017d54:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017d58:	4319      	orrs	r1, r3
 8017d5a:	0643      	lsls	r3, r0, #25
 8017d5c:	bf44      	itt	mi
 8017d5e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8017d62:	b219      	sxthmi	r1, r3
 8017d64:	0100      	lsls	r0, r0, #4
 8017d66:	79fb      	ldrb	r3, [r7, #7]
 8017d68:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8017d6c:	4303      	orrs	r3, r0
 8017d6e:	4413      	add	r3, r2
 8017d70:	1a5b      	subs	r3, r3, r1
 8017d72:	b21b      	sxth	r3, r3
 8017d74:	429c      	cmp	r4, r3
 8017d76:	bfb8      	it	lt
 8017d78:	461c      	movlt	r4, r3
 8017d7a:	4633      	mov	r3, r6
 8017d7c:	462a      	mov	r2, r5
 8017d7e:	2100      	movs	r1, #0
 8017d80:	e7dc      	b.n	8017d3c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017d82:	b2a0      	uxth	r0, r4
 8017d84:	b01e      	add	sp, #120	; 0x78
 8017d86:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017d8a:	b003      	add	sp, #12
 8017d8c:	4770      	bx	lr

08017d8e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8017d8e:	7a43      	ldrb	r3, [r0, #9]
 8017d90:	8880      	ldrh	r0, [r0, #4]
 8017d92:	4418      	add	r0, r3
 8017d94:	b280      	uxth	r0, r0
 8017d96:	4770      	bx	lr

08017d98 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8017d98:	6803      	ldr	r3, [r0, #0]
 8017d9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017d9c:	4718      	bx	r3

08017d9e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8017d9e:	b40e      	push	{r1, r2, r3}
 8017da0:	b570      	push	{r4, r5, r6, lr}
 8017da2:	b09d      	sub	sp, #116	; 0x74
 8017da4:	ab21      	add	r3, sp, #132	; 0x84
 8017da6:	4604      	mov	r4, r0
 8017da8:	f853 5b04 	ldr.w	r5, [r3], #4
 8017dac:	9302      	str	r3, [sp, #8]
 8017dae:	a803      	add	r0, sp, #12
 8017db0:	f000 fe56 	bl	8018a60 <_ZN8touchgfx12TextProviderC1Ev>
 8017db4:	6823      	ldr	r3, [r4, #0]
 8017db6:	4620      	mov	r0, r4
 8017db8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017dba:	4798      	blx	r3
 8017dbc:	6823      	ldr	r3, [r4, #0]
 8017dbe:	4606      	mov	r6, r0
 8017dc0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017dc2:	4620      	mov	r0, r4
 8017dc4:	4798      	blx	r3
 8017dc6:	4633      	mov	r3, r6
 8017dc8:	9000      	str	r0, [sp, #0]
 8017dca:	9a02      	ldr	r2, [sp, #8]
 8017dcc:	4629      	mov	r1, r5
 8017dce:	a803      	add	r0, sp, #12
 8017dd0:	f000 fea1 	bl	8018b16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017dd4:	a803      	add	r0, sp, #12
 8017dd6:	f001 fa6f 	bl	80192b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017dda:	2401      	movs	r4, #1
 8017ddc:	b2a3      	uxth	r3, r4
 8017dde:	b140      	cbz	r0, 8017df2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8017de0:	280a      	cmp	r0, #10
 8017de2:	bf08      	it	eq
 8017de4:	3301      	addeq	r3, #1
 8017de6:	a803      	add	r0, sp, #12
 8017de8:	bf08      	it	eq
 8017dea:	b21c      	sxtheq	r4, r3
 8017dec:	f001 fa64 	bl	80192b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017df0:	e7f4      	b.n	8017ddc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8017df2:	4618      	mov	r0, r3
 8017df4:	b01d      	add	sp, #116	; 0x74
 8017df6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017dfa:	b003      	add	sp, #12
 8017dfc:	4770      	bx	lr

08017dfe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8017dfe:	b40e      	push	{r1, r2, r3}
 8017e00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017e02:	b09e      	sub	sp, #120	; 0x78
 8017e04:	ab23      	add	r3, sp, #140	; 0x8c
 8017e06:	4604      	mov	r4, r0
 8017e08:	f853 5b04 	ldr.w	r5, [r3], #4
 8017e0c:	9303      	str	r3, [sp, #12]
 8017e0e:	a805      	add	r0, sp, #20
 8017e10:	f000 fe26 	bl	8018a60 <_ZN8touchgfx12TextProviderC1Ev>
 8017e14:	6823      	ldr	r3, [r4, #0]
 8017e16:	4620      	mov	r0, r4
 8017e18:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017e1a:	4798      	blx	r3
 8017e1c:	6823      	ldr	r3, [r4, #0]
 8017e1e:	4606      	mov	r6, r0
 8017e20:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017e22:	4620      	mov	r0, r4
 8017e24:	4798      	blx	r3
 8017e26:	4633      	mov	r3, r6
 8017e28:	4629      	mov	r1, r5
 8017e2a:	9000      	str	r0, [sp, #0]
 8017e2c:	9a03      	ldr	r2, [sp, #12]
 8017e2e:	a805      	add	r0, sp, #20
 8017e30:	ad1e      	add	r5, sp, #120	; 0x78
 8017e32:	f000 fe70 	bl	8018b16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017e36:	2100      	movs	r1, #0
 8017e38:	f845 1d68 	str.w	r1, [r5, #-104]!
 8017e3c:	4622      	mov	r2, r4
 8017e3e:	462b      	mov	r3, r5
 8017e40:	a805      	add	r0, sp, #20
 8017e42:	f001 f96b 	bl	801911c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017e46:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8017e4a:	b1d8      	cbz	r0, 8017e84 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8017e4c:	280a      	cmp	r0, #10
 8017e4e:	d012      	beq.n	8017e76 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017e50:	9804      	ldr	r0, [sp, #16]
 8017e52:	b180      	cbz	r0, 8017e76 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017e54:	7b47      	ldrb	r7, [r0, #13]
 8017e56:	88e2      	ldrh	r2, [r4, #6]
 8017e58:	00fb      	lsls	r3, r7, #3
 8017e5a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017e5e:	7a03      	ldrb	r3, [r0, #8]
 8017e60:	430b      	orrs	r3, r1
 8017e62:	0679      	lsls	r1, r7, #25
 8017e64:	bf44      	itt	mi
 8017e66:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017e6a:	b21b      	sxthmi	r3, r3
 8017e6c:	1ad3      	subs	r3, r2, r3
 8017e6e:	b21b      	sxth	r3, r3
 8017e70:	429e      	cmp	r6, r3
 8017e72:	bfa8      	it	ge
 8017e74:	461e      	movge	r6, r3
 8017e76:	462b      	mov	r3, r5
 8017e78:	4622      	mov	r2, r4
 8017e7a:	2100      	movs	r1, #0
 8017e7c:	a805      	add	r0, sp, #20
 8017e7e:	f001 f94d 	bl	801911c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017e82:	e7e2      	b.n	8017e4a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8017e84:	4630      	mov	r0, r6
 8017e86:	b01e      	add	sp, #120	; 0x78
 8017e88:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8017e8c:	b003      	add	sp, #12
 8017e8e:	4770      	bx	lr

08017e90 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8017e90:	b513      	push	{r0, r1, r4, lr}
 8017e92:	6803      	ldr	r3, [r0, #0]
 8017e94:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017e98:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017e9c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017ea0:	2400      	movs	r4, #0
 8017ea2:	9400      	str	r4, [sp, #0]
 8017ea4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017ea8:	691b      	ldr	r3, [r3, #16]
 8017eaa:	4669      	mov	r1, sp
 8017eac:	4798      	blx	r3
 8017eae:	b002      	add	sp, #8
 8017eb0:	bd10      	pop	{r4, pc}

08017eb2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8017eb2:	b538      	push	{r3, r4, r5, lr}
 8017eb4:	680b      	ldr	r3, [r1, #0]
 8017eb6:	460c      	mov	r4, r1
 8017eb8:	68db      	ldr	r3, [r3, #12]
 8017eba:	4605      	mov	r5, r0
 8017ebc:	4798      	blx	r3
 8017ebe:	6823      	ldr	r3, [r4, #0]
 8017ec0:	4620      	mov	r0, r4
 8017ec2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ec4:	4629      	mov	r1, r5
 8017ec6:	4798      	blx	r3
 8017ec8:	4628      	mov	r0, r5
 8017eca:	bd38      	pop	{r3, r4, r5, pc}

08017ecc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8017ecc:	b410      	push	{r4}
 8017ece:	880a      	ldrh	r2, [r1, #0]
 8017ed0:	8884      	ldrh	r4, [r0, #4]
 8017ed2:	4422      	add	r2, r4
 8017ed4:	800a      	strh	r2, [r1, #0]
 8017ed6:	88c4      	ldrh	r4, [r0, #6]
 8017ed8:	884a      	ldrh	r2, [r1, #2]
 8017eda:	4422      	add	r2, r4
 8017edc:	804a      	strh	r2, [r1, #2]
 8017ede:	6940      	ldr	r0, [r0, #20]
 8017ee0:	b120      	cbz	r0, 8017eec <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8017ee2:	6803      	ldr	r3, [r0, #0]
 8017ee4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017ee8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017eea:	4718      	bx	r3
 8017eec:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017ef0:	4770      	bx	lr

08017ef2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8017ef2:	b570      	push	{r4, r5, r6, lr}
 8017ef4:	8882      	ldrh	r2, [r0, #4]
 8017ef6:	880b      	ldrh	r3, [r1, #0]
 8017ef8:	4413      	add	r3, r2
 8017efa:	800b      	strh	r3, [r1, #0]
 8017efc:	88c2      	ldrh	r2, [r0, #6]
 8017efe:	884b      	ldrh	r3, [r1, #2]
 8017f00:	460c      	mov	r4, r1
 8017f02:	4413      	add	r3, r2
 8017f04:	804b      	strh	r3, [r1, #2]
 8017f06:	4605      	mov	r5, r0
 8017f08:	1d01      	adds	r1, r0, #4
 8017f0a:	4620      	mov	r0, r4
 8017f0c:	f7f8 ff86 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 8017f10:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017f14:	2b00      	cmp	r3, #0
 8017f16:	dd0b      	ble.n	8017f30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017f18:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017f1c:	2b00      	cmp	r3, #0
 8017f1e:	dd07      	ble.n	8017f30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017f20:	6968      	ldr	r0, [r5, #20]
 8017f22:	b128      	cbz	r0, 8017f30 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017f24:	6803      	ldr	r3, [r0, #0]
 8017f26:	4621      	mov	r1, r4
 8017f28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017f2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f2e:	4718      	bx	r3
 8017f30:	bd70      	pop	{r4, r5, r6, pc}
	...

08017f34 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017f34:	b570      	push	{r4, r5, r6, lr}
 8017f36:	8882      	ldrh	r2, [r0, #4]
 8017f38:	880b      	ldrh	r3, [r1, #0]
 8017f3a:	4413      	add	r3, r2
 8017f3c:	800b      	strh	r3, [r1, #0]
 8017f3e:	88c2      	ldrh	r2, [r0, #6]
 8017f40:	884b      	ldrh	r3, [r1, #2]
 8017f42:	460c      	mov	r4, r1
 8017f44:	4413      	add	r3, r2
 8017f46:	804b      	strh	r3, [r1, #2]
 8017f48:	4605      	mov	r5, r0
 8017f4a:	1d01      	adds	r1, r0, #4
 8017f4c:	4620      	mov	r0, r4
 8017f4e:	f7f8 ff65 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 8017f52:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017f56:	2b00      	cmp	r3, #0
 8017f58:	dd19      	ble.n	8017f8e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017f5a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017f5e:	2b00      	cmp	r3, #0
 8017f60:	dd15      	ble.n	8017f8e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017f62:	6968      	ldr	r0, [r5, #20]
 8017f64:	b128      	cbz	r0, 8017f72 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017f66:	6803      	ldr	r3, [r0, #0]
 8017f68:	4621      	mov	r1, r4
 8017f6a:	691b      	ldr	r3, [r3, #16]
 8017f6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f70:	4718      	bx	r3
 8017f72:	4b07      	ldr	r3, [pc, #28]	; (8017f90 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017f74:	681b      	ldr	r3, [r3, #0]
 8017f76:	3304      	adds	r3, #4
 8017f78:	429d      	cmp	r5, r3
 8017f7a:	d108      	bne.n	8017f8e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017f7c:	f7fe fea0 	bl	8016cc0 <_ZN8touchgfx11Application11getInstanceEv>
 8017f80:	6803      	ldr	r3, [r0, #0]
 8017f82:	6821      	ldr	r1, [r4, #0]
 8017f84:	6862      	ldr	r2, [r4, #4]
 8017f86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017f88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f8c:	4718      	bx	r3
 8017f8e:	bd70      	pop	{r4, r5, r6, pc}
 8017f90:	20013878 	.word	0x20013878

08017f94 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017f94:	b570      	push	{r4, r5, r6, lr}
 8017f96:	4604      	mov	r4, r0
 8017f98:	4616      	mov	r6, r2
 8017f9a:	460d      	mov	r5, r1
 8017f9c:	b901      	cbnz	r1, 8017fa0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8017f9e:	b192      	cbz	r2, 8017fc6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017fa0:	6823      	ldr	r3, [r4, #0]
 8017fa2:	4620      	mov	r0, r4
 8017fa4:	699b      	ldr	r3, [r3, #24]
 8017fa6:	4798      	blx	r3
 8017fa8:	88e2      	ldrh	r2, [r4, #6]
 8017faa:	88a1      	ldrh	r1, [r4, #4]
 8017fac:	4432      	add	r2, r6
 8017fae:	4429      	add	r1, r5
 8017fb0:	4620      	mov	r0, r4
 8017fb2:	b212      	sxth	r2, r2
 8017fb4:	b209      	sxth	r1, r1
 8017fb6:	f7ea fd25 	bl	8002a04 <_ZN8touchgfx8Drawable5setXYEss>
 8017fba:	6823      	ldr	r3, [r4, #0]
 8017fbc:	4620      	mov	r0, r4
 8017fbe:	699b      	ldr	r3, [r3, #24]
 8017fc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017fc4:	4718      	bx	r3
 8017fc6:	bd70      	pop	{r4, r5, r6, pc}

08017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017fc8:	b510      	push	{r4, lr}
 8017fca:	4604      	mov	r4, r0
 8017fcc:	4608      	mov	r0, r1
 8017fce:	2300      	movs	r3, #0
 8017fd0:	8023      	strh	r3, [r4, #0]
 8017fd2:	8063      	strh	r3, [r4, #2]
 8017fd4:	6803      	ldr	r3, [r0, #0]
 8017fd6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017fda:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017fde:	80a1      	strh	r1, [r4, #4]
 8017fe0:	80e2      	strh	r2, [r4, #6]
 8017fe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017fe4:	4621      	mov	r1, r4
 8017fe6:	4798      	blx	r3
 8017fe8:	4620      	mov	r0, r4
 8017fea:	bd10      	pop	{r4, pc}

08017fec <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8017fec:	b530      	push	{r4, r5, lr}
 8017fee:	8083      	strh	r3, [r0, #4]
 8017ff0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017ff4:	80c3      	strh	r3, [r0, #6]
 8017ff6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8017ffa:	7203      	strb	r3, [r0, #8]
 8017ffc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8018000:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8018004:	7243      	strb	r3, [r0, #9]
 8018006:	7a83      	ldrb	r3, [r0, #10]
 8018008:	6141      	str	r1, [r0, #20]
 801800a:	f365 0306 	bfi	r3, r5, #0, #7
 801800e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8018012:	8302      	strh	r2, [r0, #24]
 8018014:	f365 13c7 	bfi	r3, r5, #7, #1
 8018018:	7283      	strb	r3, [r0, #10]
 801801a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801801e:	72c3      	strb	r3, [r0, #11]
 8018020:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8018024:	7303      	strb	r3, [r0, #12]
 8018026:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801802a:	81c3      	strh	r3, [r0, #14]
 801802c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8018030:	8203      	strh	r3, [r0, #16]
 8018032:	4b01      	ldr	r3, [pc, #4]	; (8018038 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8018034:	6003      	str	r3, [r0, #0]
 8018036:	bd30      	pop	{r4, r5, pc}
 8018038:	0802ff2c 	.word	0x0802ff2c

0801803c <_ZNK8touchgfx9ConstFont4findEt>:
 801803c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801803e:	6944      	ldr	r4, [r0, #20]
 8018040:	b3bc      	cbz	r4, 80180b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018042:	88a3      	ldrh	r3, [r4, #4]
 8018044:	8b02      	ldrh	r2, [r0, #24]
 8018046:	1acb      	subs	r3, r1, r3
 8018048:	f102 32ff 	add.w	r2, r2, #4294967295
 801804c:	d431      	bmi.n	80180b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801804e:	4293      	cmp	r3, r2
 8018050:	dd0c      	ble.n	801806c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8018052:	230e      	movs	r3, #14
 8018054:	fb03 4302 	mla	r3, r3, r2, r4
 8018058:	889b      	ldrh	r3, [r3, #4]
 801805a:	1a5b      	subs	r3, r3, r1
 801805c:	1ad3      	subs	r3, r2, r3
 801805e:	429a      	cmp	r2, r3
 8018060:	db27      	blt.n	80180b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018062:	2b00      	cmp	r3, #0
 8018064:	bfbc      	itt	lt
 8018066:	2302      	movlt	r3, #2
 8018068:	fb92 f3f3 	sdivlt	r3, r2, r3
 801806c:	2500      	movs	r5, #0
 801806e:	260e      	movs	r6, #14
 8018070:	4295      	cmp	r5, r2
 8018072:	dc1e      	bgt.n	80180b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018074:	fb06 4003 	mla	r0, r6, r3, r4
 8018078:	8887      	ldrh	r7, [r0, #4]
 801807a:	42b9      	cmp	r1, r7
 801807c:	d01a      	beq.n	80180b4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801807e:	d20d      	bcs.n	801809c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8018080:	1e5a      	subs	r2, r3, #1
 8018082:	4295      	cmp	r5, r2
 8018084:	dc15      	bgt.n	80180b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018086:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801808a:	1a5b      	subs	r3, r3, r1
 801808c:	1ad3      	subs	r3, r2, r3
 801808e:	429a      	cmp	r2, r3
 8018090:	db0f      	blt.n	80180b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8018092:	429d      	cmp	r5, r3
 8018094:	ddec      	ble.n	8018070 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8018096:	1953      	adds	r3, r2, r5
 8018098:	105b      	asrs	r3, r3, #1
 801809a:	e7e9      	b.n	8018070 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801809c:	1c5d      	adds	r5, r3, #1
 801809e:	42aa      	cmp	r2, r5
 80180a0:	db07      	blt.n	80180b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80180a2:	8a43      	ldrh	r3, [r0, #18]
 80180a4:	1acb      	subs	r3, r1, r3
 80180a6:	442b      	add	r3, r5
 80180a8:	429d      	cmp	r5, r3
 80180aa:	dc02      	bgt.n	80180b2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80180ac:	429a      	cmp	r2, r3
 80180ae:	dadf      	bge.n	8018070 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80180b0:	e7f1      	b.n	8018096 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80180b2:	2000      	movs	r0, #0
 80180b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080180b6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80180b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80180b8:	4604      	mov	r4, r0
 80180ba:	4617      	mov	r7, r2
 80180bc:	461e      	mov	r6, r3
 80180be:	b911      	cbnz	r1, 80180c6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80180c0:	2500      	movs	r5, #0
 80180c2:	4628      	mov	r0, r5
 80180c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80180c6:	290a      	cmp	r1, #10
 80180c8:	d0fa      	beq.n	80180c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180ca:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80180ce:	4291      	cmp	r1, r2
 80180d0:	d0f6      	beq.n	80180c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180d2:	f242 020b 	movw	r2, #8203	; 0x200b
 80180d6:	4291      	cmp	r1, r2
 80180d8:	d0f2      	beq.n	80180c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180da:	f7ff ffaf 	bl	801803c <_ZNK8touchgfx9ConstFont4findEt>
 80180de:	4605      	mov	r5, r0
 80180e0:	b950      	cbnz	r0, 80180f8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80180e2:	6823      	ldr	r3, [r4, #0]
 80180e4:	4620      	mov	r0, r4
 80180e6:	691b      	ldr	r3, [r3, #16]
 80180e8:	4798      	blx	r3
 80180ea:	4601      	mov	r1, r0
 80180ec:	4620      	mov	r0, r4
 80180ee:	f7ff ffa5 	bl	801803c <_ZNK8touchgfx9ConstFont4findEt>
 80180f2:	4605      	mov	r5, r0
 80180f4:	2800      	cmp	r0, #0
 80180f6:	d0e3      	beq.n	80180c0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80180f8:	6823      	ldr	r3, [r4, #0]
 80180fa:	4629      	mov	r1, r5
 80180fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80180fe:	4620      	mov	r0, r4
 8018100:	4798      	blx	r3
 8018102:	6038      	str	r0, [r7, #0]
 8018104:	6823      	ldr	r3, [r4, #0]
 8018106:	4620      	mov	r0, r4
 8018108:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801810a:	4798      	blx	r3
 801810c:	7030      	strb	r0, [r6, #0]
 801810e:	e7d8      	b.n	80180c2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08018110 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8018110:	b538      	push	{r3, r4, r5, lr}
 8018112:	4605      	mov	r5, r0
 8018114:	f002 fb94 	bl	801a840 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018118:	4604      	mov	r4, r0
 801811a:	4628      	mov	r0, r5
 801811c:	f002 fad4 	bl	801a6c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018120:	2800      	cmp	r0, #0
 8018122:	bf14      	ite	ne
 8018124:	2002      	movne	r0, #2
 8018126:	2000      	moveq	r0, #0
 8018128:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801812c:	b280      	uxth	r0, r0
 801812e:	bd38      	pop	{r3, r4, r5, pc}

08018130 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8018130:	b538      	push	{r3, r4, r5, lr}
 8018132:	4605      	mov	r5, r0
 8018134:	f002 fb84 	bl	801a840 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018138:	4604      	mov	r4, r0
 801813a:	4628      	mov	r0, r5
 801813c:	f002 fac4 	bl	801a6c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018140:	2800      	cmp	r0, #0
 8018142:	bf14      	ite	ne
 8018144:	2002      	movne	r0, #2
 8018146:	2000      	moveq	r0, #0
 8018148:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801814c:	f040 0001 	orr.w	r0, r0, #1
 8018150:	b280      	uxth	r0, r0
 8018152:	bd38      	pop	{r3, r4, r5, pc}

08018154 <_ZN8touchgfx4clzuEm>:
 8018154:	4603      	mov	r3, r0
 8018156:	b1c8      	cbz	r0, 801818c <_ZN8touchgfx4clzuEm+0x38>
 8018158:	0c02      	lsrs	r2, r0, #16
 801815a:	0412      	lsls	r2, r2, #16
 801815c:	b9a2      	cbnz	r2, 8018188 <_ZN8touchgfx4clzuEm+0x34>
 801815e:	0403      	lsls	r3, r0, #16
 8018160:	2010      	movs	r0, #16
 8018162:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8018166:	bf04      	itt	eq
 8018168:	021b      	lsleq	r3, r3, #8
 801816a:	3008      	addeq	r0, #8
 801816c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8018170:	bf04      	itt	eq
 8018172:	011b      	lsleq	r3, r3, #4
 8018174:	3004      	addeq	r0, #4
 8018176:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801817a:	bf04      	itt	eq
 801817c:	009b      	lsleq	r3, r3, #2
 801817e:	3002      	addeq	r0, #2
 8018180:	2b00      	cmp	r3, #0
 8018182:	db04      	blt.n	801818e <_ZN8touchgfx4clzuEm+0x3a>
 8018184:	3001      	adds	r0, #1
 8018186:	4770      	bx	lr
 8018188:	2000      	movs	r0, #0
 801818a:	e7ea      	b.n	8018162 <_ZN8touchgfx4clzuEm+0xe>
 801818c:	2020      	movs	r0, #32
 801818e:	4770      	bx	lr

08018190 <_ZN8touchgfx7muldivuEmmmRm>:
 8018190:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8018194:	460f      	mov	r7, r1
 8018196:	4615      	mov	r5, r2
 8018198:	461e      	mov	r6, r3
 801819a:	4601      	mov	r1, r0
 801819c:	b100      	cbz	r0, 80181a0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801819e:	b927      	cbnz	r7, 80181aa <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80181a0:	2000      	movs	r0, #0
 80181a2:	6030      	str	r0, [r6, #0]
 80181a4:	b002      	add	sp, #8
 80181a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80181aa:	f7ff ffd3 	bl	8018154 <_ZN8touchgfx4clzuEm>
 80181ae:	b980      	cbnz	r0, 80181d2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80181b0:	4638      	mov	r0, r7
 80181b2:	f7ff ffcf 	bl	8018154 <_ZN8touchgfx4clzuEm>
 80181b6:	2800      	cmp	r0, #0
 80181b8:	dd05      	ble.n	80181c6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80181ba:	4633      	mov	r3, r6
 80181bc:	462a      	mov	r2, r5
 80181be:	4638      	mov	r0, r7
 80181c0:	f7ff ffe6 	bl	8018190 <_ZN8touchgfx7muldivuEmmmRm>
 80181c4:	e7ee      	b.n	80181a4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80181c6:	f04f 33ff 	mov.w	r3, #4294967295
 80181ca:	6033      	str	r3, [r6, #0]
 80181cc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80181d0:	e7e8      	b.n	80181a4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80181d2:	fa37 f800 	lsrs.w	r8, r7, r0
 80181d6:	fb07 f301 	mul.w	r3, r7, r1
 80181da:	d105      	bne.n	80181e8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80181dc:	fbb3 f0f5 	udiv	r0, r3, r5
 80181e0:	fb05 3510 	mls	r5, r5, r0, r3
 80181e4:	6035      	str	r5, [r6, #0]
 80181e6:	e7dd      	b.n	80181a4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80181e8:	2301      	movs	r3, #1
 80181ea:	fa01 fa00 	lsl.w	sl, r1, r0
 80181ee:	fa03 f000 	lsl.w	r0, r3, r0
 80181f2:	3801      	subs	r0, #1
 80181f4:	462a      	mov	r2, r5
 80181f6:	4633      	mov	r3, r6
 80181f8:	4038      	ands	r0, r7
 80181fa:	f7ff ffc9 	bl	8018190 <_ZN8touchgfx7muldivuEmmmRm>
 80181fe:	fbba f9f5 	udiv	r9, sl, r5
 8018202:	462a      	mov	r2, r5
 8018204:	4607      	mov	r7, r0
 8018206:	ab01      	add	r3, sp, #4
 8018208:	fb05 a119 	mls	r1, r5, r9, sl
 801820c:	4640      	mov	r0, r8
 801820e:	f7ff ffbf 	bl	8018190 <_ZN8touchgfx7muldivuEmmmRm>
 8018212:	9b01      	ldr	r3, [sp, #4]
 8018214:	6832      	ldr	r2, [r6, #0]
 8018216:	fb08 f409 	mul.w	r4, r8, r9
 801821a:	441a      	add	r2, r3
 801821c:	fbb2 f3f5 	udiv	r3, r2, r5
 8018220:	441c      	add	r4, r3
 8018222:	443c      	add	r4, r7
 8018224:	4420      	add	r0, r4
 8018226:	fb05 2513 	mls	r5, r5, r3, r2
 801822a:	e7db      	b.n	80181e4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

0801822c <_ZN8touchgfx6muldivElllRl>:
 801822c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801822e:	2800      	cmp	r0, #0
 8018230:	bfba      	itte	lt
 8018232:	4240      	neglt	r0, r0
 8018234:	f04f 34ff 	movlt.w	r4, #4294967295
 8018238:	2401      	movge	r4, #1
 801823a:	2900      	cmp	r1, #0
 801823c:	bfbc      	itt	lt
 801823e:	4249      	neglt	r1, r1
 8018240:	4264      	neglt	r4, r4
 8018242:	2a00      	cmp	r2, #0
 8018244:	bfb6      	itet	lt
 8018246:	4265      	neglt	r5, r4
 8018248:	4625      	movge	r5, r4
 801824a:	4252      	neglt	r2, r2
 801824c:	4288      	cmp	r0, r1
 801824e:	461e      	mov	r6, r3
 8018250:	bfc2      	ittt	gt
 8018252:	4603      	movgt	r3, r0
 8018254:	4608      	movgt	r0, r1
 8018256:	4619      	movgt	r1, r3
 8018258:	ab01      	add	r3, sp, #4
 801825a:	f7ff ff99 	bl	8018190 <_ZN8touchgfx7muldivuEmmmRm>
 801825e:	9b01      	ldr	r3, [sp, #4]
 8018260:	4368      	muls	r0, r5
 8018262:	435c      	muls	r4, r3
 8018264:	6034      	str	r4, [r6, #0]
 8018266:	b002      	add	sp, #8
 8018268:	bd70      	pop	{r4, r5, r6, pc}

0801826a <_ZN8touchgfx6muldivElll>:
 801826a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801826c:	4606      	mov	r6, r0
 801826e:	ab01      	add	r3, sp, #4
 8018270:	460d      	mov	r5, r1
 8018272:	4614      	mov	r4, r2
 8018274:	f7ff ffda 	bl	801822c <_ZN8touchgfx6muldivElllRl>
 8018278:	2e00      	cmp	r6, #0
 801827a:	db20      	blt.n	80182be <_ZN8touchgfx6muldivElll+0x54>
 801827c:	bf14      	ite	ne
 801827e:	2301      	movne	r3, #1
 8018280:	2300      	moveq	r3, #0
 8018282:	2d00      	cmp	r5, #0
 8018284:	db1e      	blt.n	80182c4 <_ZN8touchgfx6muldivElll+0x5a>
 8018286:	bf14      	ite	ne
 8018288:	2201      	movne	r2, #1
 801828a:	2200      	moveq	r2, #0
 801828c:	2c00      	cmp	r4, #0
 801828e:	fb03 f202 	mul.w	r2, r3, r2
 8018292:	db1a      	blt.n	80182ca <_ZN8touchgfx6muldivElll+0x60>
 8018294:	bf14      	ite	ne
 8018296:	2301      	movne	r3, #1
 8018298:	2300      	moveq	r3, #0
 801829a:	4353      	muls	r3, r2
 801829c:	2b01      	cmp	r3, #1
 801829e:	d117      	bne.n	80182d0 <_ZN8touchgfx6muldivElll+0x66>
 80182a0:	9b01      	ldr	r3, [sp, #4]
 80182a2:	2c00      	cmp	r4, #0
 80182a4:	bfb8      	it	lt
 80182a6:	4264      	neglt	r4, r4
 80182a8:	2b00      	cmp	r3, #0
 80182aa:	f104 0401 	add.w	r4, r4, #1
 80182ae:	bfb8      	it	lt
 80182b0:	425b      	neglt	r3, r3
 80182b2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80182b6:	db00      	blt.n	80182ba <_ZN8touchgfx6muldivElll+0x50>
 80182b8:	3001      	adds	r0, #1
 80182ba:	b002      	add	sp, #8
 80182bc:	bd70      	pop	{r4, r5, r6, pc}
 80182be:	f04f 33ff 	mov.w	r3, #4294967295
 80182c2:	e7de      	b.n	8018282 <_ZN8touchgfx6muldivElll+0x18>
 80182c4:	f04f 32ff 	mov.w	r2, #4294967295
 80182c8:	e7e0      	b.n	801828c <_ZN8touchgfx6muldivElll+0x22>
 80182ca:	f04f 33ff 	mov.w	r3, #4294967295
 80182ce:	e7e4      	b.n	801829a <_ZN8touchgfx6muldivElll+0x30>
 80182d0:	3301      	adds	r3, #1
 80182d2:	d1f2      	bne.n	80182ba <_ZN8touchgfx6muldivElll+0x50>
 80182d4:	9b01      	ldr	r3, [sp, #4]
 80182d6:	2c00      	cmp	r4, #0
 80182d8:	bfb8      	it	lt
 80182da:	4264      	neglt	r4, r4
 80182dc:	2b00      	cmp	r3, #0
 80182de:	bfb8      	it	lt
 80182e0:	425b      	neglt	r3, r3
 80182e2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80182e6:	bfc8      	it	gt
 80182e8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80182ec:	e7e5      	b.n	80182ba <_ZN8touchgfx6muldivElll+0x50>

080182ee <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80182ee:	2000      	movs	r0, #0
 80182f0:	4770      	bx	lr

080182f2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80182f2:	2001      	movs	r0, #1
 80182f4:	4770      	bx	lr

080182f6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80182f6:	2002      	movs	r0, #2
 80182f8:	4770      	bx	lr

080182fa <_ZN8touchgfx6ScreenD1Ev>:
 80182fa:	4770      	bx	lr

080182fc <_ZN8touchgfx12GestureEventD1Ev>:
 80182fc:	4770      	bx	lr

080182fe <_ZN8touchgfx9DragEventD1Ev>:
 80182fe:	4770      	bx	lr

08018300 <_ZN8touchgfx10ClickEventD1Ev>:
 8018300:	4770      	bx	lr

08018302 <_ZN8touchgfx10ClickEventD0Ev>:
 8018302:	b510      	push	{r4, lr}
 8018304:	210c      	movs	r1, #12
 8018306:	4604      	mov	r4, r0
 8018308:	f012 fd8f 	bl	802ae2a <_ZdlPvj>
 801830c:	4620      	mov	r0, r4
 801830e:	bd10      	pop	{r4, pc}

08018310 <_ZN8touchgfx9DragEventD0Ev>:
 8018310:	b510      	push	{r4, lr}
 8018312:	2110      	movs	r1, #16
 8018314:	4604      	mov	r4, r0
 8018316:	f012 fd88 	bl	802ae2a <_ZdlPvj>
 801831a:	4620      	mov	r0, r4
 801831c:	bd10      	pop	{r4, pc}

0801831e <_ZN8touchgfx12GestureEventD0Ev>:
 801831e:	b510      	push	{r4, lr}
 8018320:	210c      	movs	r1, #12
 8018322:	4604      	mov	r4, r0
 8018324:	f012 fd81 	bl	802ae2a <_ZdlPvj>
 8018328:	4620      	mov	r0, r4
 801832a:	bd10      	pop	{r4, pc}

0801832c <_ZN8touchgfx6ScreenD0Ev>:
 801832c:	b510      	push	{r4, lr}
 801832e:	213c      	movs	r1, #60	; 0x3c
 8018330:	4604      	mov	r4, r0
 8018332:	f012 fd7a 	bl	802ae2a <_ZdlPvj>
 8018336:	4620      	mov	r0, r4
 8018338:	bd10      	pop	{r4, pc}
	...

0801833c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801833c:	b530      	push	{r4, r5, lr}
 801833e:	460d      	mov	r5, r1
 8018340:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018342:	b087      	sub	sp, #28
 8018344:	4604      	mov	r4, r0
 8018346:	b301      	cbz	r1, 801838a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8018348:	a801      	add	r0, sp, #4
 801834a:	f7ff fe3d 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801834e:	892a      	ldrh	r2, [r5, #8]
 8018350:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8018354:	7928      	ldrb	r0, [r5, #4]
 8018356:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801835a:	f88d 0010 	strb.w	r0, [sp, #16]
 801835e:	1ad2      	subs	r2, r2, r3
 8018360:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8018362:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8018364:	f8ad 1012 	strh.w	r1, [sp, #18]
 8018368:	441a      	add	r2, r3
 801836a:	896b      	ldrh	r3, [r5, #10]
 801836c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8018370:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018374:	1b5b      	subs	r3, r3, r5
 8018376:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8018378:	442b      	add	r3, r5
 801837a:	4d05      	ldr	r5, [pc, #20]	; (8018390 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801837c:	9503      	str	r5, [sp, #12]
 801837e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8018382:	6803      	ldr	r3, [r0, #0]
 8018384:	a903      	add	r1, sp, #12
 8018386:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8018388:	4798      	blx	r3
 801838a:	b007      	add	sp, #28
 801838c:	bd30      	pop	{r4, r5, pc}
 801838e:	bf00      	nop
 8018390:	0802ffb4 	.word	0x0802ffb4

08018394 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8018394:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018398:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801839a:	b08a      	sub	sp, #40	; 0x28
 801839c:	4604      	mov	r4, r0
 801839e:	460d      	mov	r5, r1
 80183a0:	b113      	cbz	r3, 80183a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80183a2:	790b      	ldrb	r3, [r1, #4]
 80183a4:	2b00      	cmp	r3, #0
 80183a6:	d044      	beq.n	8018432 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80183a8:	f104 0804 	add.w	r8, r4, #4
 80183ac:	4641      	mov	r1, r8
 80183ae:	a803      	add	r0, sp, #12
 80183b0:	f7ff fe0a 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80183b4:	792b      	ldrb	r3, [r5, #4]
 80183b6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80183ba:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80183be:	b983      	cbnz	r3, 80183e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80183c0:	892a      	ldrh	r2, [r5, #8]
 80183c2:	88e9      	ldrh	r1, [r5, #6]
 80183c4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80183c8:	1b92      	subs	r2, r2, r6
 80183ca:	1bc9      	subs	r1, r1, r7
 80183cc:	9301      	str	r3, [sp, #4]
 80183ce:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80183d2:	9300      	str	r3, [sp, #0]
 80183d4:	b212      	sxth	r2, r2
 80183d6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80183da:	b209      	sxth	r1, r1
 80183dc:	4640      	mov	r0, r8
 80183de:	f7f8 fc39 	bl	8010c54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80183e2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80183e4:	b329      	cbz	r1, 8018432 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80183e6:	a805      	add	r0, sp, #20
 80183e8:	f7ff fdee 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80183ec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80183f0:	792b      	ldrb	r3, [r5, #4]
 80183f2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80183f4:	f88d 3020 	strb.w	r3, [sp, #32]
 80183f8:	1abf      	subs	r7, r7, r2
 80183fa:	88ea      	ldrh	r2, [r5, #6]
 80183fc:	4417      	add	r7, r2
 80183fe:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8018400:	4417      	add	r7, r2
 8018402:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8018406:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801840a:	1ab6      	subs	r6, r6, r2
 801840c:	892a      	ldrh	r2, [r5, #8]
 801840e:	4416      	add	r6, r2
 8018410:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018412:	4416      	add	r6, r2
 8018414:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8018418:	4a07      	ldr	r2, [pc, #28]	; (8018438 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801841a:	9207      	str	r2, [sp, #28]
 801841c:	2600      	movs	r6, #0
 801841e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8018422:	6803      	ldr	r3, [r0, #0]
 8018424:	a907      	add	r1, sp, #28
 8018426:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8018428:	4798      	blx	r3
 801842a:	792b      	ldrb	r3, [r5, #4]
 801842c:	b10b      	cbz	r3, 8018432 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801842e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8018432:	b00a      	add	sp, #40	; 0x28
 8018434:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018438:	0802ff8c 	.word	0x0802ff8c

0801843c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801843c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018440:	460c      	mov	r4, r1
 8018442:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018444:	b088      	sub	sp, #32
 8018446:	4605      	mov	r5, r0
 8018448:	2900      	cmp	r1, #0
 801844a:	d06d      	beq.n	8018528 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801844c:	4668      	mov	r0, sp
 801844e:	f7ff fdbb 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018452:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8018454:	88e3      	ldrh	r3, [r4, #6]
 8018456:	f9bd 8000 	ldrsh.w	r8, [sp]
 801845a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801845e:	440b      	add	r3, r1
 8018460:	b21b      	sxth	r3, r3
 8018462:	4543      	cmp	r3, r8
 8018464:	db31      	blt.n	80184ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018466:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801846a:	44c4      	add	ip, r8
 801846c:	fa0f fc8c 	sxth.w	ip, ip
 8018470:	4563      	cmp	r3, ip
 8018472:	da2a      	bge.n	80184ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018474:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8018476:	8926      	ldrh	r6, [r4, #8]
 8018478:	4416      	add	r6, r2
 801847a:	b236      	sxth	r6, r6
 801847c:	42be      	cmp	r6, r7
 801847e:	db24      	blt.n	80184ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8018480:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8018484:	4438      	add	r0, r7
 8018486:	b200      	sxth	r0, r0
 8018488:	4286      	cmp	r6, r0
 801848a:	da1e      	bge.n	80184ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801848c:	8963      	ldrh	r3, [r4, #10]
 801848e:	4419      	add	r1, r3
 8018490:	b209      	sxth	r1, r1
 8018492:	4541      	cmp	r1, r8
 8018494:	db08      	blt.n	80184a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8018496:	4561      	cmp	r1, ip
 8018498:	da06      	bge.n	80184a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801849a:	89a3      	ldrh	r3, [r4, #12]
 801849c:	441a      	add	r2, r3
 801849e:	b212      	sxth	r2, r2
 80184a0:	42ba      	cmp	r2, r7
 80184a2:	db01      	blt.n	80184a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80184a4:	4282      	cmp	r2, r0
 80184a6:	db10      	blt.n	80184ca <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80184a8:	4b21      	ldr	r3, [pc, #132]	; (8018530 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80184aa:	9304      	str	r3, [sp, #16]
 80184ac:	2302      	movs	r3, #2
 80184ae:	f88d 3014 	strb.w	r3, [sp, #20]
 80184b2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80184b4:	2300      	movs	r3, #0
 80184b6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80184ba:	f8ad 3018 	strh.w	r3, [sp, #24]
 80184be:	f8ad 301a 	strh.w	r3, [sp, #26]
 80184c2:	6803      	ldr	r3, [r0, #0]
 80184c4:	a904      	add	r1, sp, #16
 80184c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80184c8:	4798      	blx	r3
 80184ca:	1d29      	adds	r1, r5, #4
 80184cc:	a802      	add	r0, sp, #8
 80184ce:	f7ff fd7b 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80184d2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80184d6:	88e0      	ldrh	r0, [r4, #6]
 80184d8:	7921      	ldrb	r1, [r4, #4]
 80184da:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80184de:	8922      	ldrh	r2, [r4, #8]
 80184e0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80184e2:	f88d 1014 	strb.w	r1, [sp, #20]
 80184e6:	eba3 0808 	sub.w	r8, r3, r8
 80184ea:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80184ee:	1bdf      	subs	r7, r3, r7
 80184f0:	b2bb      	uxth	r3, r7
 80184f2:	fa1f f888 	uxth.w	r8, r8
 80184f6:	8967      	ldrh	r7, [r4, #10]
 80184f8:	89a4      	ldrh	r4, [r4, #12]
 80184fa:	4440      	add	r0, r8
 80184fc:	4460      	add	r0, ip
 80184fe:	441a      	add	r2, r3
 8018500:	44b8      	add	r8, r7
 8018502:	4423      	add	r3, r4
 8018504:	f8ad 0016 	strh.w	r0, [sp, #22]
 8018508:	4433      	add	r3, r6
 801850a:	4432      	add	r2, r6
 801850c:	44e0      	add	r8, ip
 801850e:	4c09      	ldr	r4, [pc, #36]	; (8018534 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8018510:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018512:	9404      	str	r4, [sp, #16]
 8018514:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018518:	f8ad 801a 	strh.w	r8, [sp, #26]
 801851c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018520:	6803      	ldr	r3, [r0, #0]
 8018522:	a904      	add	r1, sp, #16
 8018524:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018526:	4798      	blx	r3
 8018528:	b008      	add	sp, #32
 801852a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801852e:	bf00      	nop
 8018530:	0802ff8c 	.word	0x0802ff8c
 8018534:	0802ffa0 	.word	0x0802ffa0

08018538 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8018538:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801853a:	4604      	mov	r4, r0
 801853c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8018540:	3201      	adds	r2, #1
 8018542:	d112      	bne.n	801856a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8018544:	6803      	ldr	r3, [r0, #0]
 8018546:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801854a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801854e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018552:	2500      	movs	r5, #0
 8018554:	9500      	str	r5, [sp, #0]
 8018556:	466d      	mov	r5, sp
 8018558:	4629      	mov	r1, r5
 801855a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801855e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018560:	4798      	blx	r3
 8018562:	e895 0003 	ldmia.w	r5, {r0, r1}
 8018566:	e884 0003 	stmia.w	r4, {r0, r1}
 801856a:	4620      	mov	r0, r4
 801856c:	b003      	add	sp, #12
 801856e:	bd30      	pop	{r4, r5, pc}

08018570 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8018570:	b513      	push	{r0, r1, r4, lr}
 8018572:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8018576:	3301      	adds	r3, #1
 8018578:	4604      	mov	r4, r0
 801857a:	d109      	bne.n	8018590 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801857c:	4601      	mov	r1, r0
 801857e:	4668      	mov	r0, sp
 8018580:	f7ff fd22 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018584:	f8bd 3000 	ldrh.w	r3, [sp]
 8018588:	8423      	strh	r3, [r4, #32]
 801858a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801858e:	8463      	strh	r3, [r4, #34]	; 0x22
 8018590:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8018594:	b002      	add	sp, #8
 8018596:	bd10      	pop	{r4, pc}

08018598 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8018598:	b513      	push	{r0, r1, r4, lr}
 801859a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801859e:	3301      	adds	r3, #1
 80185a0:	4604      	mov	r4, r0
 80185a2:	d109      	bne.n	80185b8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80185a4:	4601      	mov	r1, r0
 80185a6:	4668      	mov	r0, sp
 80185a8:	f7ff fd0e 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80185ac:	f8bd 3000 	ldrh.w	r3, [sp]
 80185b0:	8423      	strh	r3, [r4, #32]
 80185b2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80185b6:	8463      	strh	r3, [r4, #34]	; 0x22
 80185b8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80185bc:	b002      	add	sp, #8
 80185be:	bd10      	pop	{r4, pc}

080185c0 <_ZN8touchgfx6ScreenC1Ev>:
 80185c0:	b570      	push	{r4, r5, r6, lr}
 80185c2:	4605      	mov	r5, r0
 80185c4:	4b16      	ldr	r3, [pc, #88]	; (8018620 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80185c6:	f845 3b04 	str.w	r3, [r5], #4
 80185ca:	2300      	movs	r3, #0
 80185cc:	8103      	strh	r3, [r0, #8]
 80185ce:	8143      	strh	r3, [r0, #10]
 80185d0:	8183      	strh	r3, [r0, #12]
 80185d2:	81c3      	strh	r3, [r0, #14]
 80185d4:	8203      	strh	r3, [r0, #16]
 80185d6:	8243      	strh	r3, [r0, #18]
 80185d8:	8283      	strh	r3, [r0, #20]
 80185da:	82c3      	strh	r3, [r0, #22]
 80185dc:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80185e0:	6203      	str	r3, [r0, #32]
 80185e2:	8483      	strh	r3, [r0, #36]	; 0x24
 80185e4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80185e6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80185ea:	4a0e      	ldr	r2, [pc, #56]	; (8018624 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80185ec:	6343      	str	r3, [r0, #52]	; 0x34
 80185ee:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80185f2:	4b0d      	ldr	r3, [pc, #52]	; (8018628 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80185f4:	6042      	str	r2, [r0, #4]
 80185f6:	f9b3 6000 	ldrsh.w	r6, [r3]
 80185fa:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80185fc:	4a0b      	ldr	r2, [pc, #44]	; (801862c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80185fe:	4604      	mov	r4, r0
 8018600:	2101      	movs	r1, #1
 8018602:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8018606:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801860a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801860e:	4628      	mov	r0, r5
 8018610:	4798      	blx	r3
 8018612:	6863      	ldr	r3, [r4, #4]
 8018614:	4628      	mov	r0, r5
 8018616:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018618:	4631      	mov	r1, r6
 801861a:	4798      	blx	r3
 801861c:	4620      	mov	r0, r4
 801861e:	bd70      	pop	{r4, r5, r6, pc}
 8018620:	0802ffc8 	.word	0x0802ffc8
 8018624:	0802f64c 	.word	0x0802f64c
 8018628:	2001382a 	.word	0x2001382a
 801862c:	20013828 	.word	0x20013828

08018630 <_ZN8touchgfx6Screen4drawEv>:
 8018630:	b507      	push	{r0, r1, r2, lr}
 8018632:	4b09      	ldr	r3, [pc, #36]	; (8018658 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8018634:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018638:	4b08      	ldr	r3, [pc, #32]	; (801865c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801863a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801863e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018642:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018646:	6803      	ldr	r3, [r0, #0]
 8018648:	2100      	movs	r1, #0
 801864a:	9100      	str	r1, [sp, #0]
 801864c:	689b      	ldr	r3, [r3, #8]
 801864e:	4669      	mov	r1, sp
 8018650:	4798      	blx	r3
 8018652:	b003      	add	sp, #12
 8018654:	f85d fb04 	ldr.w	pc, [sp], #4
 8018658:	20013828 	.word	0x20013828
 801865c:	2001382a 	.word	0x2001382a

08018660 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8018660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018664:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8018668:	2b00      	cmp	r3, #0
 801866a:	b089      	sub	sp, #36	; 0x24
 801866c:	4680      	mov	r8, r0
 801866e:	460c      	mov	r4, r1
 8018670:	4615      	mov	r5, r2
 8018672:	dd0e      	ble.n	8018692 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018674:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8018678:	2b00      	cmp	r3, #0
 801867a:	dd0a      	ble.n	8018692 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801867c:	4628      	mov	r0, r5
 801867e:	f7ff ff5b 	bl	8018538 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018682:	4621      	mov	r1, r4
 8018684:	f7fe fa3d 	bl	8016b02 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018688:	69eb      	ldr	r3, [r5, #28]
 801868a:	b928      	cbnz	r0, 8018698 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801868c:	461d      	mov	r5, r3
 801868e:	2b00      	cmp	r3, #0
 8018690:	d1f4      	bne.n	801867c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8018692:	b009      	add	sp, #36	; 0x24
 8018694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018698:	ae04      	add	r6, sp, #16
 801869a:	2b00      	cmp	r3, #0
 801869c:	f000 80b5 	beq.w	801880a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80186a0:	682b      	ldr	r3, [r5, #0]
 80186a2:	4629      	mov	r1, r5
 80186a4:	68db      	ldr	r3, [r3, #12]
 80186a6:	a802      	add	r0, sp, #8
 80186a8:	4798      	blx	r3
 80186aa:	4628      	mov	r0, r5
 80186ac:	f7ff ff60 	bl	8018570 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80186b0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80186b4:	4407      	add	r7, r0
 80186b6:	4628      	mov	r0, r5
 80186b8:	f7ff ff6e 	bl	8018598 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80186bc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80186c0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80186c4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80186c8:	4418      	add	r0, r3
 80186ca:	4621      	mov	r1, r4
 80186cc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80186d0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80186d4:	b23f      	sxth	r7, r7
 80186d6:	4630      	mov	r0, r6
 80186d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80186dc:	f8ad 7010 	strh.w	r7, [sp, #16]
 80186e0:	f7f8 fb9c 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 80186e4:	4628      	mov	r0, r5
 80186e6:	f7ff ff27 	bl	8018538 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80186ea:	4602      	mov	r2, r0
 80186ec:	e896 0003 	ldmia.w	r6, {r0, r1}
 80186f0:	ab06      	add	r3, sp, #24
 80186f2:	e883 0003 	stmia.w	r3, {r0, r1}
 80186f6:	4611      	mov	r1, r2
 80186f8:	4618      	mov	r0, r3
 80186fa:	f7f8 fb8f 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 80186fe:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018702:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018706:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801870a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801870e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8018712:	4299      	cmp	r1, r3
 8018714:	d10b      	bne.n	801872e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018716:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801871a:	4552      	cmp	r2, sl
 801871c:	d107      	bne.n	801872e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801871e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018722:	455a      	cmp	r2, fp
 8018724:	d103      	bne.n	801872e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018726:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801872a:	454a      	cmp	r2, r9
 801872c:	d06d      	beq.n	801880a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801872e:	f1bb 0f00 	cmp.w	fp, #0
 8018732:	dd65      	ble.n	8018800 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018734:	f1b9 0f00 	cmp.w	r9, #0
 8018738:	dd62      	ble.n	8018800 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801873a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801873e:	fa1f f08a 	uxth.w	r0, sl
 8018742:	4552      	cmp	r2, sl
 8018744:	9000      	str	r0, [sp, #0]
 8018746:	da12      	bge.n	801876e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8018748:	9301      	str	r3, [sp, #4]
 801874a:	9b00      	ldr	r3, [sp, #0]
 801874c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018750:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018754:	1a9a      	subs	r2, r3, r2
 8018756:	f8ad 1010 	strh.w	r1, [sp, #16]
 801875a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801875e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8018762:	69ea      	ldr	r2, [r5, #28]
 8018764:	4631      	mov	r1, r6
 8018766:	4640      	mov	r0, r8
 8018768:	f7ff ff7a 	bl	8018660 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801876c:	9b01      	ldr	r3, [sp, #4]
 801876e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018772:	429a      	cmp	r2, r3
 8018774:	b29f      	uxth	r7, r3
 8018776:	da0d      	bge.n	8018794 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8018778:	f8ad 2010 	strh.w	r2, [sp, #16]
 801877c:	1aba      	subs	r2, r7, r2
 801877e:	f8ad a012 	strh.w	sl, [sp, #18]
 8018782:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018786:	f8ad 9016 	strh.w	r9, [sp, #22]
 801878a:	69ea      	ldr	r2, [r5, #28]
 801878c:	4631      	mov	r1, r6
 801878e:	4640      	mov	r0, r8
 8018790:	f7ff ff66 	bl	8018660 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8018794:	8822      	ldrh	r2, [r4, #0]
 8018796:	88a3      	ldrh	r3, [r4, #4]
 8018798:	445f      	add	r7, fp
 801879a:	4413      	add	r3, r2
 801879c:	b29b      	uxth	r3, r3
 801879e:	b2bf      	uxth	r7, r7
 80187a0:	b23a      	sxth	r2, r7
 80187a2:	b219      	sxth	r1, r3
 80187a4:	4291      	cmp	r1, r2
 80187a6:	dd0d      	ble.n	80187c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80187a8:	1bdb      	subs	r3, r3, r7
 80187aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80187ae:	f8ad a012 	strh.w	sl, [sp, #18]
 80187b2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80187b6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80187ba:	69ea      	ldr	r2, [r5, #28]
 80187bc:	4631      	mov	r1, r6
 80187be:	4640      	mov	r0, r8
 80187c0:	f7ff ff4e 	bl	8018660 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80187c4:	88e2      	ldrh	r2, [r4, #6]
 80187c6:	8863      	ldrh	r3, [r4, #2]
 80187c8:	4413      	add	r3, r2
 80187ca:	9a00      	ldr	r2, [sp, #0]
 80187cc:	444a      	add	r2, r9
 80187ce:	b29b      	uxth	r3, r3
 80187d0:	fa1f f982 	uxth.w	r9, r2
 80187d4:	fa0f f289 	sxth.w	r2, r9
 80187d8:	b219      	sxth	r1, r3
 80187da:	428a      	cmp	r2, r1
 80187dc:	da15      	bge.n	801880a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80187de:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80187e2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80187e6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80187ea:	eba3 0309 	sub.w	r3, r3, r9
 80187ee:	f8ad 0010 	strh.w	r0, [sp, #16]
 80187f2:	f8ad 2012 	strh.w	r2, [sp, #18]
 80187f6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80187fa:	69ea      	ldr	r2, [r5, #28]
 80187fc:	4631      	mov	r1, r6
 80187fe:	e001      	b.n	8018804 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8018800:	69ea      	ldr	r2, [r5, #28]
 8018802:	4621      	mov	r1, r4
 8018804:	4640      	mov	r0, r8
 8018806:	f7ff ff2b 	bl	8018660 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801880a:	4628      	mov	r0, r5
 801880c:	f7ff fe94 	bl	8018538 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018810:	6861      	ldr	r1, [r4, #4]
 8018812:	4602      	mov	r2, r0
 8018814:	6820      	ldr	r0, [r4, #0]
 8018816:	4633      	mov	r3, r6
 8018818:	c303      	stmia	r3!, {r0, r1}
 801881a:	4611      	mov	r1, r2
 801881c:	4630      	mov	r0, r6
 801881e:	f7f8 fafd 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 8018822:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8018826:	2b00      	cmp	r3, #0
 8018828:	f77f af33 	ble.w	8018692 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801882c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018830:	2b00      	cmp	r3, #0
 8018832:	f77f af2e 	ble.w	8018692 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018836:	4628      	mov	r0, r5
 8018838:	f7ff fe9a 	bl	8018570 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801883c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018840:	1a18      	subs	r0, r3, r0
 8018842:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018846:	4628      	mov	r0, r5
 8018848:	f7ff fea6 	bl	8018598 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801884c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018850:	1a18      	subs	r0, r3, r0
 8018852:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018856:	682b      	ldr	r3, [r5, #0]
 8018858:	4631      	mov	r1, r6
 801885a:	689b      	ldr	r3, [r3, #8]
 801885c:	4628      	mov	r0, r5
 801885e:	4798      	blx	r3
 8018860:	e717      	b.n	8018692 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018862 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018862:	b570      	push	{r4, r5, r6, lr}
 8018864:	460c      	mov	r4, r1
 8018866:	b086      	sub	sp, #24
 8018868:	1d06      	adds	r6, r0, #4
 801886a:	2300      	movs	r3, #0
 801886c:	4631      	mov	r1, r6
 801886e:	4605      	mov	r5, r0
 8018870:	a802      	add	r0, sp, #8
 8018872:	9301      	str	r3, [sp, #4]
 8018874:	f7ff fba8 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018878:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801887c:	8822      	ldrh	r2, [r4, #0]
 801887e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018882:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018886:	f8ad 0014 	strh.w	r0, [sp, #20]
 801888a:	1ad2      	subs	r2, r2, r3
 801888c:	8863      	ldrh	r3, [r4, #2]
 801888e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018892:	1a5b      	subs	r3, r3, r1
 8018894:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8018898:	f8ad 1016 	strh.w	r1, [sp, #22]
 801889c:	aa01      	add	r2, sp, #4
 801889e:	a904      	add	r1, sp, #16
 80188a0:	4630      	mov	r0, r6
 80188a2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80188a6:	f7f8 fb91 	bl	8010fcc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80188aa:	9a01      	ldr	r2, [sp, #4]
 80188ac:	b11a      	cbz	r2, 80188b6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80188ae:	4621      	mov	r1, r4
 80188b0:	4628      	mov	r0, r5
 80188b2:	f7ff fed5 	bl	8018660 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80188b6:	b006      	add	sp, #24
 80188b8:	bd70      	pop	{r4, r5, r6, pc}

080188ba <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80188ba:	b530      	push	{r4, r5, lr}
 80188bc:	4602      	mov	r2, r0
 80188be:	4604      	mov	r4, r0
 80188c0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80188c4:	b085      	sub	sp, #20
 80188c6:	460d      	mov	r5, r1
 80188c8:	6851      	ldr	r1, [r2, #4]
 80188ca:	466b      	mov	r3, sp
 80188cc:	c303      	stmia	r3!, {r0, r1}
 80188ce:	4629      	mov	r1, r5
 80188d0:	4668      	mov	r0, sp
 80188d2:	f7f8 faa3 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 80188d6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80188da:	b12b      	cbz	r3, 80188e8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80188dc:	4669      	mov	r1, sp
 80188de:	4620      	mov	r0, r4
 80188e0:	f7ff ffbf 	bl	8018862 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80188e4:	b005      	add	sp, #20
 80188e6:	bd30      	pop	{r4, r5, pc}
 80188e8:	3404      	adds	r4, #4
 80188ea:	4621      	mov	r1, r4
 80188ec:	a802      	add	r0, sp, #8
 80188ee:	f7ff fb6b 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80188f2:	f8bd 3000 	ldrh.w	r3, [sp]
 80188f6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80188fa:	1a9b      	subs	r3, r3, r2
 80188fc:	f8ad 3000 	strh.w	r3, [sp]
 8018900:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018904:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018908:	4669      	mov	r1, sp
 801890a:	1a9b      	subs	r3, r3, r2
 801890c:	4620      	mov	r0, r4
 801890e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018912:	f7f8 fb22 	bl	8010f5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8018916:	e7e5      	b.n	80188e4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08018918 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8018918:	680a      	ldr	r2, [r1, #0]
 801891a:	460b      	mov	r3, r1
 801891c:	6992      	ldr	r2, [r2, #24]
 801891e:	1d01      	adds	r1, r0, #4
 8018920:	4618      	mov	r0, r3
 8018922:	4710      	bx	r2

08018924 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8018924:	4298      	cmp	r0, r3
 8018926:	d200      	bcs.n	801892a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8018928:	b913      	cbnz	r3, 8018930 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801892a:	440a      	add	r2, r1
 801892c:	b210      	sxth	r0, r2
 801892e:	4770      	bx	lr
 8018930:	ee07 0a90 	vmov	s15, r0
 8018934:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018938:	ee07 3a90 	vmov	s15, r3
 801893c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018940:	eddf 4a15 	vldr	s9, [pc, #84]	; 8018998 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8018944:	eddf 5a15 	vldr	s11, [pc, #84]	; 801899c <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8018948:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801894c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018950:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018954:	ee07 2a90 	vmov	s15, r2
 8018958:	eee7 5a24 	vfma.f32	s11, s14, s9
 801895c:	ee27 5a07 	vmul.f32	s10, s14, s14
 8018960:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018964:	eee5 6a25 	vfma.f32	s13, s10, s11
 8018968:	ee07 1a90 	vmov	s15, r1
 801896c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018970:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018974:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018978:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801897c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018980:	bfcc      	ite	gt
 8018982:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018986:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801898a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801898e:	ee17 3a90 	vmov	r3, s15
 8018992:	b218      	sxth	r0, r3
 8018994:	4770      	bx	lr
 8018996:	bf00      	nop
 8018998:	402ce6b0 	.word	0x402ce6b0
 801899c:	3fd9cd60 	.word	0x3fd9cd60

080189a0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80189a0:	4298      	cmp	r0, r3
 80189a2:	d200      	bcs.n	80189a6 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80189a4:	b913      	cbnz	r3, 80189ac <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80189a6:	440a      	add	r2, r1
 80189a8:	b210      	sxth	r0, r2
 80189aa:	4770      	bx	lr
 80189ac:	ee07 0a90 	vmov	s15, r0
 80189b0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80189b4:	ee07 3a90 	vmov	s15, r3
 80189b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80189bc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80189c0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80189c4:	ee37 7a66 	vsub.f32	s14, s14, s13
 80189c8:	ee07 2a90 	vmov	s15, r2
 80189cc:	ee67 5a07 	vmul.f32	s11, s14, s14
 80189d0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80189d4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80189d8:	ee07 1a90 	vmov	s15, r1
 80189dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80189e0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80189e4:	eee6 7a26 	vfma.f32	s15, s12, s13
 80189e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80189ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80189f0:	bfcc      	ite	gt
 80189f2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80189f6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80189fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80189fe:	ee17 3a90 	vmov	r3, s15
 8018a02:	b218      	sxth	r0, r3
 8018a04:	4770      	bx	lr

08018a06 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8018a06:	4298      	cmp	r0, r3
 8018a08:	d200      	bcs.n	8018a0c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8018a0a:	b913      	cbnz	r3, 8018a12 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8018a0c:	440a      	add	r2, r1
 8018a0e:	b210      	sxth	r0, r2
 8018a10:	4770      	bx	lr
 8018a12:	ee07 2a90 	vmov	s15, r2
 8018a16:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8018a1a:	ee07 0a90 	vmov	s15, r0
 8018a1e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8018a22:	ee67 7a27 	vmul.f32	s15, s14, s15
 8018a26:	ee07 3a10 	vmov	s14, r3
 8018a2a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8018a2e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018a32:	ee07 1a90 	vmov	s15, r1
 8018a36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018a3a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8018a3e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018a42:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018a46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018a4a:	bfcc      	ite	gt
 8018a4c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018a50:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018a54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018a58:	ee17 3a90 	vmov	r3, s15
 8018a5c:	b218      	sxth	r0, r3
 8018a5e:	4770      	bx	lr

08018a60 <_ZN8touchgfx12TextProviderC1Ev>:
 8018a60:	b538      	push	{r3, r4, r5, lr}
 8018a62:	2500      	movs	r5, #0
 8018a64:	2302      	movs	r3, #2
 8018a66:	4604      	mov	r4, r0
 8018a68:	e9c0 5500 	strd	r5, r5, [r0]
 8018a6c:	7403      	strb	r3, [r0, #16]
 8018a6e:	6145      	str	r5, [r0, #20]
 8018a70:	7605      	strb	r5, [r0, #24]
 8018a72:	83c5      	strh	r5, [r0, #30]
 8018a74:	8405      	strh	r5, [r0, #32]
 8018a76:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018a78:	8705      	strh	r5, [r0, #56]	; 0x38
 8018a7a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8018a7c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8018a80:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8018a84:	220e      	movs	r2, #14
 8018a86:	4629      	mov	r1, r5
 8018a88:	304c      	adds	r0, #76	; 0x4c
 8018a8a:	f013 f9e6 	bl	802be5a <memset>
 8018a8e:	2301      	movs	r3, #1
 8018a90:	4620      	mov	r0, r4
 8018a92:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8018a96:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018a9a:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8018a9e:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8018aa2:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8018aa6:	f7ef ff61 	bl	800896c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8018aaa:	4620      	mov	r0, r4
 8018aac:	bd38      	pop	{r3, r4, r5, pc}

08018aae <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8018aae:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018ab0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ab4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8018ab6:	fab0 f080 	clz	r0, r0
 8018aba:	0940      	lsrs	r0, r0, #5
 8018abc:	4770      	bx	lr

08018abe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8018abe:	b530      	push	{r4, r5, lr}
 8018ac0:	2500      	movs	r5, #0
 8018ac2:	2401      	movs	r4, #1
 8018ac4:	6843      	ldr	r3, [r0, #4]
 8018ac6:	b913      	cbnz	r3, 8018ace <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8018ac8:	6803      	ldr	r3, [r0, #0]
 8018aca:	b313      	cbz	r3, 8018b12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018acc:	6043      	str	r3, [r0, #4]
 8018ace:	7e03      	ldrb	r3, [r0, #24]
 8018ad0:	b143      	cbz	r3, 8018ae4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8018ad2:	6943      	ldr	r3, [r0, #20]
 8018ad4:	b12b      	cbz	r3, 8018ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018ad6:	881a      	ldrh	r2, [r3, #0]
 8018ad8:	b11a      	cbz	r2, 8018ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8018ada:	1c9a      	adds	r2, r3, #2
 8018adc:	6142      	str	r2, [r0, #20]
 8018ade:	8818      	ldrh	r0, [r3, #0]
 8018ae0:	bd30      	pop	{r4, r5, pc}
 8018ae2:	7605      	strb	r5, [r0, #24]
 8018ae4:	6843      	ldr	r3, [r0, #4]
 8018ae6:	8819      	ldrh	r1, [r3, #0]
 8018ae8:	b199      	cbz	r1, 8018b12 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8018aea:	1c9a      	adds	r2, r3, #2
 8018aec:	2902      	cmp	r1, #2
 8018aee:	6042      	str	r2, [r0, #4]
 8018af0:	d1f5      	bne.n	8018ade <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8018af2:	7c03      	ldrb	r3, [r0, #16]
 8018af4:	2b01      	cmp	r3, #1
 8018af6:	d8e5      	bhi.n	8018ac4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018af8:	1c5a      	adds	r2, r3, #1
 8018afa:	3302      	adds	r3, #2
 8018afc:	7402      	strb	r2, [r0, #16]
 8018afe:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8018b02:	6143      	str	r3, [r0, #20]
 8018b04:	2b00      	cmp	r3, #0
 8018b06:	d0dd      	beq.n	8018ac4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018b08:	881b      	ldrh	r3, [r3, #0]
 8018b0a:	2b00      	cmp	r3, #0
 8018b0c:	d0da      	beq.n	8018ac4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018b0e:	7604      	strb	r4, [r0, #24]
 8018b10:	e7d8      	b.n	8018ac4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018b12:	2000      	movs	r0, #0
 8018b14:	e7e4      	b.n	8018ae0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08018b16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8018b16:	b430      	push	{r4, r5}
 8018b18:	6001      	str	r1, [r0, #0]
 8018b1a:	2100      	movs	r1, #0
 8018b1c:	6041      	str	r1, [r0, #4]
 8018b1e:	6815      	ldr	r5, [r2, #0]
 8018b20:	6085      	str	r5, [r0, #8]
 8018b22:	6852      	ldr	r2, [r2, #4]
 8018b24:	6443      	str	r3, [r0, #68]	; 0x44
 8018b26:	9b02      	ldr	r3, [sp, #8]
 8018b28:	60c2      	str	r2, [r0, #12]
 8018b2a:	7401      	strb	r1, [r0, #16]
 8018b2c:	6141      	str	r1, [r0, #20]
 8018b2e:	7601      	strb	r1, [r0, #24]
 8018b30:	8701      	strh	r1, [r0, #56]	; 0x38
 8018b32:	8401      	strh	r1, [r0, #32]
 8018b34:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8018b38:	6483      	str	r3, [r0, #72]	; 0x48
 8018b3a:	bc30      	pop	{r4, r5}
 8018b3c:	f7ef bf16 	b.w	800896c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08018b40 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8018b40:	b408      	push	{r3}
 8018b42:	b510      	push	{r4, lr}
 8018b44:	b085      	sub	sp, #20
 8018b46:	ac07      	add	r4, sp, #28
 8018b48:	f854 3b04 	ldr.w	r3, [r4], #4
 8018b4c:	9300      	str	r3, [sp, #0]
 8018b4e:	4613      	mov	r3, r2
 8018b50:	4622      	mov	r2, r4
 8018b52:	9403      	str	r4, [sp, #12]
 8018b54:	f7ff ffdf 	bl	8018b16 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018b58:	b005      	add	sp, #20
 8018b5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018b5e:	b001      	add	sp, #4
 8018b60:	4770      	bx	lr

08018b62 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018b62:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018b64:	4605      	mov	r5, r0
 8018b66:	4608      	mov	r0, r1
 8018b68:	b1e9      	cbz	r1, 8018ba6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8018b6a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8018b6e:	460b      	mov	r3, r1
 8018b70:	f101 0708 	add.w	r7, r1, #8
 8018b74:	4622      	mov	r2, r4
 8018b76:	6818      	ldr	r0, [r3, #0]
 8018b78:	6859      	ldr	r1, [r3, #4]
 8018b7a:	4626      	mov	r6, r4
 8018b7c:	c603      	stmia	r6!, {r0, r1}
 8018b7e:	3308      	adds	r3, #8
 8018b80:	42bb      	cmp	r3, r7
 8018b82:	4634      	mov	r4, r6
 8018b84:	d1f7      	bne.n	8018b76 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018b86:	6818      	ldr	r0, [r3, #0]
 8018b88:	6030      	str	r0, [r6, #0]
 8018b8a:	889b      	ldrh	r3, [r3, #4]
 8018b8c:	80b3      	strh	r3, [r6, #4]
 8018b8e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8018b92:	015b      	lsls	r3, r3, #5
 8018b94:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018b98:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8018b9c:	430b      	orrs	r3, r1
 8018b9e:	425b      	negs	r3, r3
 8018ba0:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8018ba4:	4610      	mov	r0, r2
 8018ba6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018ba8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8018ba8:	b538      	push	{r3, r4, r5, lr}
 8018baa:	460c      	mov	r4, r1
 8018bac:	6811      	ldr	r1, [r2, #0]
 8018bae:	4610      	mov	r0, r2
 8018bb0:	68cd      	ldr	r5, [r1, #12]
 8018bb2:	4619      	mov	r1, r3
 8018bb4:	47a8      	blx	r5
 8018bb6:	2800      	cmp	r0, #0
 8018bb8:	bf08      	it	eq
 8018bba:	4620      	moveq	r0, r4
 8018bbc:	bd38      	pop	{r3, r4, r5, pc}
	...

08018bc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8018bc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018bc2:	4604      	mov	r4, r0
 8018bc4:	4615      	mov	r5, r2
 8018bc6:	4608      	mov	r0, r1
 8018bc8:	b93a      	cbnz	r2, 8018bda <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8018bca:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018bce:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8018bd2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8018bd6:	4628      	mov	r0, r5
 8018bd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8018bda:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8018bde:	8893      	ldrh	r3, [r2, #4]
 8018be0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8018be4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018be8:	79ee      	ldrb	r6, [r5, #7]
 8018bea:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8018bee:	4316      	orrs	r6, r2
 8018bf0:	19da      	adds	r2, r3, r7
 8018bf2:	b291      	uxth	r1, r2
 8018bf4:	291d      	cmp	r1, #29
 8018bf6:	b2b7      	uxth	r7, r6
 8018bf8:	d87a      	bhi.n	8018cf0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018bfa:	2201      	movs	r2, #1
 8018bfc:	408a      	lsls	r2, r1
 8018bfe:	4975      	ldr	r1, [pc, #468]	; (8018dd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8018c00:	420a      	tst	r2, r1
 8018c02:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8018c06:	d12d      	bne.n	8018c64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8018c08:	f412 7f60 	tst.w	r2, #896	; 0x380
 8018c0c:	d070      	beq.n	8018cf0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8018c0e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8018c12:	462b      	mov	r3, r5
 8018c14:	f105 0e08 	add.w	lr, r5, #8
 8018c18:	4615      	mov	r5, r2
 8018c1a:	6818      	ldr	r0, [r3, #0]
 8018c1c:	6859      	ldr	r1, [r3, #4]
 8018c1e:	4694      	mov	ip, r2
 8018c20:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8018c24:	3308      	adds	r3, #8
 8018c26:	4573      	cmp	r3, lr
 8018c28:	4662      	mov	r2, ip
 8018c2a:	d1f6      	bne.n	8018c1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8018c2c:	6818      	ldr	r0, [r3, #0]
 8018c2e:	f8cc 0000 	str.w	r0, [ip]
 8018c32:	889b      	ldrh	r3, [r3, #4]
 8018c34:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018c38:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8018c3c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8018c40:	b2b3      	uxth	r3, r6
 8018c42:	1aca      	subs	r2, r1, r3
 8018c44:	b292      	uxth	r2, r2
 8018c46:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8018c4a:	10d2      	asrs	r2, r2, #3
 8018c4c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8018c50:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8018c54:	4302      	orrs	r2, r0
 8018c56:	1bcf      	subs	r7, r1, r7
 8018c58:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8018c5c:	1afb      	subs	r3, r7, r3
 8018c5e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018c62:	e7b8      	b.n	8018bd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018c64:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018c66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018c6a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8018c6c:	f640 6333 	movw	r3, #3635	; 0xe33
 8018c70:	4299      	cmp	r1, r3
 8018c72:	d110      	bne.n	8018c96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8018c74:	6803      	ldr	r3, [r0, #0]
 8018c76:	68db      	ldr	r3, [r3, #12]
 8018c78:	4798      	blx	r3
 8018c7a:	7b41      	ldrb	r1, [r0, #13]
 8018c7c:	00cb      	lsls	r3, r1, #3
 8018c7e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018c82:	7a03      	ldrb	r3, [r0, #8]
 8018c84:	0648      	lsls	r0, r1, #25
 8018c86:	ea43 0302 	orr.w	r3, r3, r2
 8018c8a:	bf44      	itt	mi
 8018c8c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018c90:	b21b      	sxthmi	r3, r3
 8018c92:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018c96:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8018c9a:	443b      	add	r3, r7
 8018c9c:	4433      	add	r3, r6
 8018c9e:	b29b      	uxth	r3, r3
 8018ca0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8018ca4:	462a      	mov	r2, r5
 8018ca6:	f105 0c08 	add.w	ip, r5, #8
 8018caa:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018cae:	4635      	mov	r5, r6
 8018cb0:	6810      	ldr	r0, [r2, #0]
 8018cb2:	6851      	ldr	r1, [r2, #4]
 8018cb4:	4637      	mov	r7, r6
 8018cb6:	c703      	stmia	r7!, {r0, r1}
 8018cb8:	3208      	adds	r2, #8
 8018cba:	4562      	cmp	r2, ip
 8018cbc:	463e      	mov	r6, r7
 8018cbe:	d1f7      	bne.n	8018cb0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8018cc0:	6810      	ldr	r0, [r2, #0]
 8018cc2:	6038      	str	r0, [r7, #0]
 8018cc4:	8892      	ldrh	r2, [r2, #4]
 8018cc6:	80ba      	strh	r2, [r7, #4]
 8018cc8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018ccc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018cd0:	10db      	asrs	r3, r3, #3
 8018cd2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018cd6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018cda:	4313      	orrs	r3, r2
 8018cdc:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018ce0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8018ce4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8018ce8:	1a9b      	subs	r3, r3, r2
 8018cea:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8018cee:	e772      	b.n	8018bd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018cf0:	f023 0204 	bic.w	r2, r3, #4
 8018cf4:	f640 611b 	movw	r1, #3611	; 0xe1b
 8018cf8:	428a      	cmp	r2, r1
 8018cfa:	d003      	beq.n	8018d04 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8018cfc:	f640 621d 	movw	r2, #3613	; 0xe1d
 8018d00:	4293      	cmp	r3, r2
 8018d02:	d120      	bne.n	8018d46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8018d04:	3b01      	subs	r3, #1
 8018d06:	4602      	mov	r2, r0
 8018d08:	b29b      	uxth	r3, r3
 8018d0a:	4629      	mov	r1, r5
 8018d0c:	4620      	mov	r0, r4
 8018d0e:	f7ff ff4b 	bl	8018ba8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018d12:	7b41      	ldrb	r1, [r0, #13]
 8018d14:	00cb      	lsls	r3, r1, #3
 8018d16:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018d1a:	7a03      	ldrb	r3, [r0, #8]
 8018d1c:	0649      	lsls	r1, r1, #25
 8018d1e:	ea43 0302 	orr.w	r3, r3, r2
 8018d22:	bf44      	itt	mi
 8018d24:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018d28:	b21b      	sxthmi	r3, r3
 8018d2a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018d2e:	7b6b      	ldrb	r3, [r5, #13]
 8018d30:	7aaa      	ldrb	r2, [r5, #10]
 8018d32:	005b      	lsls	r3, r3, #1
 8018d34:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018d38:	4313      	orrs	r3, r2
 8018d3a:	115a      	asrs	r2, r3, #5
 8018d3c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8018d40:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018d44:	e036      	b.n	8018db4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8018d46:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8018d4a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8018d4e:	7a2a      	ldrb	r2, [r5, #8]
 8018d50:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8018d54:	ea42 0201 	orr.w	r2, r2, r1
 8018d58:	bf1c      	itt	ne
 8018d5a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8018d5e:	b212      	sxthne	r2, r2
 8018d60:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018d64:	f640 6109 	movw	r1, #3593	; 0xe09
 8018d68:	f023 0210 	bic.w	r2, r3, #16
 8018d6c:	428a      	cmp	r2, r1
 8018d6e:	d003      	beq.n	8018d78 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8018d70:	f640 6213 	movw	r2, #3603	; 0xe13
 8018d74:	4293      	cmp	r3, r2
 8018d76:	d12a      	bne.n	8018dce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8018d78:	7b6e      	ldrb	r6, [r5, #13]
 8018d7a:	0076      	lsls	r6, r6, #1
 8018d7c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018d80:	7aae      	ldrb	r6, [r5, #10]
 8018d82:	4316      	orrs	r6, r2
 8018d84:	f640 6213 	movw	r2, #3603	; 0xe13
 8018d88:	4293      	cmp	r3, r2
 8018d8a:	bf18      	it	ne
 8018d8c:	f103 33ff 	addne.w	r3, r3, #4294967295
 8018d90:	4602      	mov	r2, r0
 8018d92:	bf14      	ite	ne
 8018d94:	b29b      	uxthne	r3, r3
 8018d96:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8018d9a:	4629      	mov	r1, r5
 8018d9c:	4620      	mov	r0, r4
 8018d9e:	f7ff ff03 	bl	8018ba8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018da2:	7b43      	ldrb	r3, [r0, #13]
 8018da4:	7a82      	ldrb	r2, [r0, #10]
 8018da6:	005b      	lsls	r3, r3, #1
 8018da8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018dac:	4313      	orrs	r3, r2
 8018dae:	1af6      	subs	r6, r6, r3
 8018db0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8018db4:	7b69      	ldrb	r1, [r5, #13]
 8018db6:	00cb      	lsls	r3, r1, #3
 8018db8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018dbc:	7a2b      	ldrb	r3, [r5, #8]
 8018dbe:	4313      	orrs	r3, r2
 8018dc0:	064a      	lsls	r2, r1, #25
 8018dc2:	bf44      	itt	mi
 8018dc4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018dc8:	b21b      	sxthmi	r3, r3
 8018dca:	1bdb      	subs	r3, r3, r7
 8018dcc:	e747      	b.n	8018c5e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8018dce:	2300      	movs	r3, #0
 8018dd0:	e7b6      	b.n	8018d40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8018dd2:	bf00      	nop
 8018dd4:	3fc00079 	.word	0x3fc00079

08018dd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8018dd8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018ddc:	4604      	mov	r4, r0
 8018dde:	b942      	cbnz	r2, 8018df2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8018de0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8018de4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8018de8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8018dec:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018df0:	e047      	b.n	8018e82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018df2:	7b51      	ldrb	r1, [r2, #13]
 8018df4:	8893      	ldrh	r3, [r2, #4]
 8018df6:	010d      	lsls	r5, r1, #4
 8018df8:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8018dfc:	79d5      	ldrb	r5, [r2, #7]
 8018dfe:	4305      	orrs	r5, r0
 8018e00:	2d04      	cmp	r5, #4
 8018e02:	bfcc      	ite	gt
 8018e04:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8018e08:	f04f 0e01 	movle.w	lr, #1
 8018e0c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8018e10:	f200 80ab 	bhi.w	8018f6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8018e14:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8018e18:	4283      	cmp	r3, r0
 8018e1a:	d216      	bcs.n	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018e1c:	f240 605b 	movw	r0, #1627	; 0x65b
 8018e20:	4283      	cmp	r3, r0
 8018e22:	d859      	bhi.n	8018ed8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8018e24:	f240 6057 	movw	r0, #1623	; 0x657
 8018e28:	4283      	cmp	r3, r0
 8018e2a:	d20e      	bcs.n	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018e2c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018e30:	d24a      	bcs.n	8018ec8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8018e32:	f240 604e 	movw	r0, #1614	; 0x64e
 8018e36:	4283      	cmp	r3, r0
 8018e38:	d207      	bcs.n	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018e3a:	f240 601a 	movw	r0, #1562	; 0x61a
 8018e3e:	4283      	cmp	r3, r0
 8018e40:	d02a      	beq.n	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018e42:	d821      	bhi.n	8018e88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8018e44:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8018e48:	d35b      	bcc.n	8018f02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018e4a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8018e4e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018e52:	f040 80d0 	bne.w	8018ff6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018e56:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8018e5a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018e5e:	f040 80ca 	bne.w	8018ff6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018e62:	00cb      	lsls	r3, r1, #3
 8018e64:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018e68:	7a13      	ldrb	r3, [r2, #8]
 8018e6a:	0649      	lsls	r1, r1, #25
 8018e6c:	ea43 0300 	orr.w	r3, r3, r0
 8018e70:	bf44      	itt	mi
 8018e72:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018e76:	b21b      	sxthmi	r3, r3
 8018e78:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018e7c:	1b5d      	subs	r5, r3, r5
 8018e7e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018e82:	4610      	mov	r0, r2
 8018e84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018e88:	f240 604b 	movw	r0, #1611	; 0x64b
 8018e8c:	4283      	cmp	r3, r0
 8018e8e:	d338      	bcc.n	8018f02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018e90:	f240 604c 	movw	r0, #1612	; 0x64c
 8018e94:	4283      	cmp	r3, r0
 8018e96:	d9d8      	bls.n	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018e98:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8018e9c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8018ea0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018ea4:	f040 80f2 	bne.w	801908c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018ea8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018eac:	f040 80ee 	bne.w	801908c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8018eb0:	00cb      	lsls	r3, r1, #3
 8018eb2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018eb6:	7a13      	ldrb	r3, [r2, #8]
 8018eb8:	064e      	lsls	r6, r1, #25
 8018eba:	ea43 0300 	orr.w	r3, r3, r0
 8018ebe:	bf44      	itt	mi
 8018ec0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018ec4:	b21b      	sxthmi	r3, r3
 8018ec6:	e7d9      	b.n	8018e7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8018ec8:	f240 6054 	movw	r0, #1620	; 0x654
 8018ecc:	4283      	cmp	r3, r0
 8018ece:	d8e3      	bhi.n	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ed0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018ed4:	d9e0      	bls.n	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ed6:	e7b8      	b.n	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ed8:	f240 6074 	movw	r0, #1652	; 0x674
 8018edc:	4283      	cmp	r3, r0
 8018ede:	d0b4      	beq.n	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ee0:	d82d      	bhi.n	8018f3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8018ee2:	f240 605e 	movw	r0, #1630	; 0x65e
 8018ee6:	4283      	cmp	r3, r0
 8018ee8:	d804      	bhi.n	8018ef4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8018eea:	f240 605d 	movw	r0, #1629	; 0x65d
 8018eee:	4283      	cmp	r3, r0
 8018ef0:	d3d2      	bcc.n	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ef2:	e7aa      	b.n	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ef4:	f240 605f 	movw	r0, #1631	; 0x65f
 8018ef8:	4283      	cmp	r3, r0
 8018efa:	d0cd      	beq.n	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018efc:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8018f00:	d0a3      	beq.n	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f02:	00cb      	lsls	r3, r1, #3
 8018f04:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018f08:	7a13      	ldrb	r3, [r2, #8]
 8018f0a:	0649      	lsls	r1, r1, #25
 8018f0c:	ea43 0300 	orr.w	r3, r3, r0
 8018f10:	bf44      	itt	mi
 8018f12:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018f16:	b21b      	sxthmi	r3, r3
 8018f18:	1b5d      	subs	r5, r3, r5
 8018f1a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018f1e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018f22:	7b53      	ldrb	r3, [r2, #13]
 8018f24:	015b      	lsls	r3, r3, #5
 8018f26:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018f2a:	7993      	ldrb	r3, [r2, #6]
 8018f2c:	430b      	orrs	r3, r1
 8018f2e:	005b      	lsls	r3, r3, #1
 8018f30:	2105      	movs	r1, #5
 8018f32:	fb93 f3f1 	sdiv	r3, r3, r1
 8018f36:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8018f3a:	440b      	add	r3, r1
 8018f3c:	e756      	b.n	8018dec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018f3e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8018f42:	4283      	cmp	r3, r0
 8018f44:	d809      	bhi.n	8018f5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8018f46:	f240 60df 	movw	r0, #1759	; 0x6df
 8018f4a:	4283      	cmp	r3, r0
 8018f4c:	f4bf af7d 	bcs.w	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f50:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8018f54:	2b05      	cmp	r3, #5
 8018f56:	d8d4      	bhi.n	8018f02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018f58:	e777      	b.n	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f5a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8018f5e:	4283      	cmp	r3, r0
 8018f60:	d09a      	beq.n	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018f62:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8018f66:	4283      	cmp	r3, r0
 8018f68:	e7ca      	b.n	8018f00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8018f6a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8018f6e:	d22b      	bcs.n	8018fc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8018f70:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8018f74:	4283      	cmp	r3, r0
 8018f76:	d28f      	bcs.n	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018f78:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8018f7c:	4283      	cmp	r3, r0
 8018f7e:	d816      	bhi.n	8018fae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8018f80:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8018f84:	4283      	cmp	r3, r0
 8018f86:	f4bf af60 	bcs.w	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f8a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8018f8e:	4283      	cmp	r3, r0
 8018f90:	d80a      	bhi.n	8018fa8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8018f92:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8018f96:	4283      	cmp	r3, r0
 8018f98:	f4bf af57 	bcs.w	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018f9c:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018fa0:	4283      	cmp	r3, r0
 8018fa2:	f43f af79 	beq.w	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fa6:	e7ac      	b.n	8018f02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018fa8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8018fac:	e7f8      	b.n	8018fa0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8018fae:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8018fb2:	4283      	cmp	r3, r0
 8018fb4:	d802      	bhi.n	8018fbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8018fb6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8018fba:	e798      	b.n	8018eee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018fbc:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018fc0:	4283      	cmp	r3, r0
 8018fc2:	f47f af42 	bne.w	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018fc6:	e767      	b.n	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fc8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018fcc:	4283      	cmp	r3, r0
 8018fce:	f43f af63 	beq.w	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fd2:	d802      	bhi.n	8018fda <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018fd4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018fd8:	e7f2      	b.n	8018fc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8018fda:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018fde:	4283      	cmp	r3, r0
 8018fe0:	d805      	bhi.n	8018fee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018fe2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8018fe6:	4283      	cmp	r3, r0
 8018fe8:	f4ff af2f 	bcc.w	8018e4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018fec:	e754      	b.n	8018e98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018fee:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018ff2:	4283      	cmp	r3, r0
 8018ff4:	e7af      	b.n	8018f56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8018ff6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018ffa:	4617      	mov	r7, r2
 8018ffc:	f102 0808 	add.w	r8, r2, #8
 8019000:	4666      	mov	r6, ip
 8019002:	6838      	ldr	r0, [r7, #0]
 8019004:	6879      	ldr	r1, [r7, #4]
 8019006:	46e6      	mov	lr, ip
 8019008:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801900c:	3708      	adds	r7, #8
 801900e:	4547      	cmp	r7, r8
 8019010:	46f4      	mov	ip, lr
 8019012:	d1f6      	bne.n	8019002 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8019014:	6838      	ldr	r0, [r7, #0]
 8019016:	f8ce 0000 	str.w	r0, [lr]
 801901a:	88b9      	ldrh	r1, [r7, #4]
 801901c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8019020:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8019024:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8019028:	d009      	beq.n	801903e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801902a:	7b51      	ldrb	r1, [r2, #13]
 801902c:	7992      	ldrb	r2, [r2, #6]
 801902e:	0149      	lsls	r1, r1, #5
 8019030:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8019034:	4311      	orrs	r1, r2
 8019036:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801903a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801903e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8019042:	b2ad      	uxth	r5, r5
 8019044:	d00d      	beq.n	8019062 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8019046:	442b      	add	r3, r5
 8019048:	b29b      	uxth	r3, r3
 801904a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801904e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8019052:	10db      	asrs	r3, r3, #3
 8019054:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8019058:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801905c:	4313      	orrs	r3, r2
 801905e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8019062:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8019066:	00cb      	lsls	r3, r1, #3
 8019068:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801906c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8019070:	064f      	lsls	r7, r1, #25
 8019072:	ea43 0302 	orr.w	r3, r3, r2
 8019076:	bf44      	itt	mi
 8019078:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801907c:	b21b      	sxthmi	r3, r3
 801907e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8019082:	1b5b      	subs	r3, r3, r5
 8019084:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8019088:	4632      	mov	r2, r6
 801908a:	e6fa      	b.n	8018e82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801908c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8019090:	4617      	mov	r7, r2
 8019092:	f102 0908 	add.w	r9, r2, #8
 8019096:	4666      	mov	r6, ip
 8019098:	6838      	ldr	r0, [r7, #0]
 801909a:	6879      	ldr	r1, [r7, #4]
 801909c:	46e0      	mov	r8, ip
 801909e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80190a2:	3708      	adds	r7, #8
 80190a4:	454f      	cmp	r7, r9
 80190a6:	46c4      	mov	ip, r8
 80190a8:	d1f6      	bne.n	8019098 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80190aa:	6838      	ldr	r0, [r7, #0]
 80190ac:	f8c8 0000 	str.w	r0, [r8]
 80190b0:	88b9      	ldrh	r1, [r7, #4]
 80190b2:	f8a8 1004 	strh.w	r1, [r8, #4]
 80190b6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80190ba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80190be:	d009      	beq.n	80190d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80190c0:	7b51      	ldrb	r1, [r2, #13]
 80190c2:	7992      	ldrb	r2, [r2, #6]
 80190c4:	0149      	lsls	r1, r1, #5
 80190c6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80190ca:	4311      	orrs	r1, r2
 80190cc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80190d0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80190d4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80190d8:	d00e      	beq.n	80190f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80190da:	eba3 030e 	sub.w	r3, r3, lr
 80190de:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80190e2:	b29b      	uxth	r3, r3
 80190e4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80190e8:	10db      	asrs	r3, r3, #3
 80190ea:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80190ee:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80190f2:	4313      	orrs	r3, r2
 80190f4:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80190f8:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80190fc:	00cb      	lsls	r3, r1, #3
 80190fe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8019102:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8019106:	0648      	lsls	r0, r1, #25
 8019108:	ea43 0302 	orr.w	r3, r3, r2
 801910c:	bf44      	itt	mi
 801910e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8019112:	b21b      	sxthmi	r3, r3
 8019114:	1b5d      	subs	r5, r3, r5
 8019116:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801911a:	e7b5      	b.n	8019088 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0801911c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801911c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019120:	461e      	mov	r6, r3
 8019122:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8019124:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019128:	4604      	mov	r4, r0
 801912a:	4617      	mov	r7, r2
 801912c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8019130:	f7ef fbda 	bl	80088e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8019134:	4605      	mov	r5, r0
 8019136:	b918      	cbnz	r0, 8019140 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8019138:	6030      	str	r0, [r6, #0]
 801913a:	4628      	mov	r0, r5
 801913c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019140:	683b      	ldr	r3, [r7, #0]
 8019142:	4601      	mov	r1, r0
 8019144:	68db      	ldr	r3, [r3, #12]
 8019146:	4638      	mov	r0, r7
 8019148:	4798      	blx	r3
 801914a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801914e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8019152:	4602      	mov	r2, r0
 8019154:	6030      	str	r0, [r6, #0]
 8019156:	d213      	bcs.n	8019180 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8019158:	4643      	mov	r3, r8
 801915a:	4639      	mov	r1, r7
 801915c:	4620      	mov	r0, r4
 801915e:	f7ff fe3b 	bl	8018dd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8019162:	6030      	str	r0, [r6, #0]
 8019164:	6833      	ldr	r3, [r6, #0]
 8019166:	b143      	cbz	r3, 801917a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8019168:	7b5a      	ldrb	r2, [r3, #13]
 801916a:	7a9b      	ldrb	r3, [r3, #10]
 801916c:	0052      	lsls	r2, r2, #1
 801916e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8019172:	4313      	orrs	r3, r2
 8019174:	bf0c      	ite	eq
 8019176:	2301      	moveq	r3, #1
 8019178:	2300      	movne	r3, #0
 801917a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801917e:	e7dc      	b.n	801913a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8019180:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8019184:	b29b      	uxth	r3, r3
 8019186:	2b7f      	cmp	r3, #127	; 0x7f
 8019188:	d804      	bhi.n	8019194 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801918a:	4639      	mov	r1, r7
 801918c:	4620      	mov	r0, r4
 801918e:	f7ff fd17 	bl	8018bc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8019192:	e7e6      	b.n	8019162 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8019194:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8019198:	2b00      	cmp	r3, #0
 801919a:	d0e3      	beq.n	8019164 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801919c:	f640 1302 	movw	r3, #2306	; 0x902
 80191a0:	429d      	cmp	r5, r3
 80191a2:	d1df      	bne.n	8019164 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80191a4:	4601      	mov	r1, r0
 80191a6:	4620      	mov	r0, r4
 80191a8:	f7ff fcdb 	bl	8018b62 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80191ac:	e7d9      	b.n	8019162 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080191ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80191ae:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80191b2:	461e      	mov	r6, r3
 80191b4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80191b6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80191ba:	4604      	mov	r4, r0
 80191bc:	4617      	mov	r7, r2
 80191be:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80191c2:	f7ef fb91 	bl	80088e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80191c6:	4605      	mov	r5, r0
 80191c8:	b918      	cbnz	r0, 80191d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80191ca:	6030      	str	r0, [r6, #0]
 80191cc:	4628      	mov	r0, r5
 80191ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80191d2:	683b      	ldr	r3, [r7, #0]
 80191d4:	4601      	mov	r1, r0
 80191d6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80191da:	4638      	mov	r0, r7
 80191dc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80191e0:	47c8      	blx	r9
 80191e2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80191e6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80191ea:	4602      	mov	r2, r0
 80191ec:	6030      	str	r0, [r6, #0]
 80191ee:	d213      	bcs.n	8019218 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80191f0:	4643      	mov	r3, r8
 80191f2:	4639      	mov	r1, r7
 80191f4:	4620      	mov	r0, r4
 80191f6:	f7ff fdef 	bl	8018dd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80191fa:	6030      	str	r0, [r6, #0]
 80191fc:	6833      	ldr	r3, [r6, #0]
 80191fe:	b143      	cbz	r3, 8019212 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8019200:	7b5a      	ldrb	r2, [r3, #13]
 8019202:	7a9b      	ldrb	r3, [r3, #10]
 8019204:	0052      	lsls	r2, r2, #1
 8019206:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801920a:	4313      	orrs	r3, r2
 801920c:	bf0c      	ite	eq
 801920e:	2301      	moveq	r3, #1
 8019210:	2300      	movne	r3, #0
 8019212:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8019216:	e7d9      	b.n	80191cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8019218:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801921c:	b29b      	uxth	r3, r3
 801921e:	2b7f      	cmp	r3, #127	; 0x7f
 8019220:	d804      	bhi.n	801922c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8019222:	4639      	mov	r1, r7
 8019224:	4620      	mov	r0, r4
 8019226:	f7ff fccb 	bl	8018bc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801922a:	e7e6      	b.n	80191fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 801922c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8019230:	2b00      	cmp	r3, #0
 8019232:	d0e3      	beq.n	80191fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8019234:	f640 1302 	movw	r3, #2306	; 0x902
 8019238:	429d      	cmp	r5, r3
 801923a:	d1df      	bne.n	80191fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 801923c:	4601      	mov	r1, r0
 801923e:	4620      	mov	r0, r4
 8019240:	f7ff fc8f 	bl	8018b62 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8019244:	e7d9      	b.n	80191fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08019246 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8019246:	b510      	push	{r4, lr}
 8019248:	4604      	mov	r4, r0
 801924a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801924e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8019250:	b1f1      	cbz	r1, 8019290 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8019252:	2b0a      	cmp	r3, #10
 8019254:	d02f      	beq.n	80192b6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8019256:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8019258:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801925c:	3901      	subs	r1, #1
 801925e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8019260:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8019264:	1c51      	adds	r1, r2, #1
 8019266:	b289      	uxth	r1, r1
 8019268:	2901      	cmp	r1, #1
 801926a:	bf84      	itt	hi
 801926c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8019270:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8019272:	f103 0201 	add.w	r2, r3, #1
 8019276:	8722      	strh	r2, [r4, #56]	; 0x38
 8019278:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801927a:	bf98      	it	ls
 801927c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801927e:	4413      	add	r3, r2
 8019280:	b29b      	uxth	r3, r3
 8019282:	2b09      	cmp	r3, #9
 8019284:	bf88      	it	hi
 8019286:	3b0a      	subhi	r3, #10
 8019288:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801928c:	8458      	strh	r0, [r3, #34]	; 0x22
 801928e:	e7dc      	b.n	801924a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8019290:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8019292:	2b0a      	cmp	r3, #10
 8019294:	d00f      	beq.n	80192b6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8019296:	4620      	mov	r0, r4
 8019298:	f7ff fc11 	bl	8018abe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801929c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801929e:	1c5a      	adds	r2, r3, #1
 80192a0:	8722      	strh	r2, [r4, #56]	; 0x38
 80192a2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80192a4:	4413      	add	r3, r2
 80192a6:	b29b      	uxth	r3, r3
 80192a8:	2b09      	cmp	r3, #9
 80192aa:	bf88      	it	hi
 80192ac:	3b0a      	subhi	r3, #10
 80192ae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80192b2:	8458      	strh	r0, [r3, #34]	; 0x22
 80192b4:	e7ec      	b.n	8019290 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80192b6:	bd10      	pop	{r4, pc}

080192b8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80192b8:	b538      	push	{r3, r4, r5, lr}
 80192ba:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80192bc:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80192c0:	4604      	mov	r4, r0
 80192c2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80192c4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80192c6:	3a01      	subs	r2, #1
 80192c8:	8702      	strh	r2, [r0, #56]	; 0x38
 80192ca:	1c5a      	adds	r2, r3, #1
 80192cc:	b292      	uxth	r2, r2
 80192ce:	2a09      	cmp	r2, #9
 80192d0:	bf86      	itte	hi
 80192d2:	3b09      	subhi	r3, #9
 80192d4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80192d6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80192d8:	f7ff ffb5 	bl	8019246 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80192dc:	8c23      	ldrh	r3, [r4, #32]
 80192de:	2b01      	cmp	r3, #1
 80192e0:	bf9c      	itt	ls
 80192e2:	3301      	addls	r3, #1
 80192e4:	8423      	strhls	r3, [r4, #32]
 80192e6:	8be3      	ldrh	r3, [r4, #30]
 80192e8:	b90b      	cbnz	r3, 80192ee <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80192ea:	2302      	movs	r3, #2
 80192ec:	83e3      	strh	r3, [r4, #30]
 80192ee:	8be3      	ldrh	r3, [r4, #30]
 80192f0:	3b01      	subs	r3, #1
 80192f2:	b29b      	uxth	r3, r3
 80192f4:	83e3      	strh	r3, [r4, #30]
 80192f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80192fa:	4628      	mov	r0, r5
 80192fc:	8365      	strh	r5, [r4, #26]
 80192fe:	bd38      	pop	{r3, r4, r5, pc}

08019300 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8019300:	428a      	cmp	r2, r1
 8019302:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019306:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8019308:	d931      	bls.n	801936e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801930a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 801930c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8019310:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8019314:	19ee      	adds	r6, r5, r7
 8019316:	1a54      	subs	r4, r2, r1
 8019318:	3e01      	subs	r6, #1
 801931a:	fa1f fe84 	uxth.w	lr, r4
 801931e:	b2b4      	uxth	r4, r6
 8019320:	eba4 090e 	sub.w	r9, r4, lr
 8019324:	fa1f f989 	uxth.w	r9, r9
 8019328:	2c09      	cmp	r4, #9
 801932a:	4626      	mov	r6, r4
 801932c:	bf88      	it	hi
 801932e:	f1a4 060a 	subhi.w	r6, r4, #10
 8019332:	f1bc 0f00 	cmp.w	ip, #0
 8019336:	bf08      	it	eq
 8019338:	f04f 0c02 	moveq.w	ip, #2
 801933c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019340:	f10c 3cff 	add.w	ip, ip, #4294967295
 8019344:	fa1f fc8c 	uxth.w	ip, ip
 8019348:	3c01      	subs	r4, #1
 801934a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801934e:	b2a4      	uxth	r4, r4
 8019350:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8019354:	454c      	cmp	r4, r9
 8019356:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801935a:	d1e5      	bne.n	8019328 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801935c:	eba5 050e 	sub.w	r5, r5, lr
 8019360:	eb0e 0408 	add.w	r4, lr, r8
 8019364:	8705      	strh	r5, [r0, #56]	; 0x38
 8019366:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801936a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801936e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8019370:	1a64      	subs	r4, r4, r1
 8019372:	4439      	add	r1, r7
 8019374:	b289      	uxth	r1, r1
 8019376:	2909      	cmp	r1, #9
 8019378:	bf88      	it	hi
 801937a:	390a      	subhi	r1, #10
 801937c:	8704      	strh	r4, [r0, #56]	; 0x38
 801937e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8019380:	250a      	movs	r5, #10
 8019382:	b18a      	cbz	r2, 80193a8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8019384:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8019386:	3a01      	subs	r2, #1
 8019388:	b292      	uxth	r2, r2
 801938a:	3101      	adds	r1, #1
 801938c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8019390:	8701      	strh	r1, [r0, #56]	; 0x38
 8019392:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8019394:	b901      	cbnz	r1, 8019398 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8019396:	86c5      	strh	r5, [r0, #54]	; 0x36
 8019398:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801939a:	3901      	subs	r1, #1
 801939c:	b289      	uxth	r1, r1
 801939e:	86c1      	strh	r1, [r0, #54]	; 0x36
 80193a0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80193a4:	844c      	strh	r4, [r1, #34]	; 0x22
 80193a6:	e7ec      	b.n	8019382 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80193a8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80193ac:	f7ff bf4b 	b.w	8019246 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080193b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80193b0:	b570      	push	{r4, r5, r6, lr}
 80193b2:	2500      	movs	r5, #0
 80193b4:	4295      	cmp	r5, r2
 80193b6:	d011      	beq.n	80193dc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80193b8:	8bc4      	ldrh	r4, [r0, #30]
 80193ba:	f831 6b02 	ldrh.w	r6, [r1], #2
 80193be:	4414      	add	r4, r2
 80193c0:	3c01      	subs	r4, #1
 80193c2:	1b64      	subs	r4, r4, r5
 80193c4:	b2a4      	uxth	r4, r4
 80193c6:	2c01      	cmp	r4, #1
 80193c8:	bf88      	it	hi
 80193ca:	3c02      	subhi	r4, #2
 80193cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80193d0:	8b64      	ldrh	r4, [r4, #26]
 80193d2:	42b4      	cmp	r4, r6
 80193d4:	d117      	bne.n	8019406 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80193d6:	3501      	adds	r5, #1
 80193d8:	b2ad      	uxth	r5, r5
 80193da:	e7eb      	b.n	80193b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80193dc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80193e0:	2400      	movs	r4, #0
 80193e2:	4413      	add	r3, r2
 80193e4:	b2a2      	uxth	r2, r4
 80193e6:	429a      	cmp	r2, r3
 80193e8:	da0f      	bge.n	801940a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80193ea:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80193ec:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80193f0:	4432      	add	r2, r6
 80193f2:	b292      	uxth	r2, r2
 80193f4:	2a09      	cmp	r2, #9
 80193f6:	bf88      	it	hi
 80193f8:	3a0a      	subhi	r2, #10
 80193fa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80193fe:	3401      	adds	r4, #1
 8019400:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8019402:	42aa      	cmp	r2, r5
 8019404:	d0ee      	beq.n	80193e4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8019406:	2000      	movs	r0, #0
 8019408:	bd70      	pop	{r4, r5, r6, pc}
 801940a:	2001      	movs	r0, #1
 801940c:	e7fc      	b.n	8019408 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801940e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801940e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019412:	4605      	mov	r5, r0
 8019414:	4616      	mov	r6, r2
 8019416:	1c8c      	adds	r4, r1, #2
 8019418:	8809      	ldrh	r1, [r1, #0]
 801941a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801941e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8019422:	42b3      	cmp	r3, r6
 8019424:	d124      	bne.n	8019470 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8019426:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801942a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801942e:	f001 070f 	and.w	r7, r1, #15
 8019432:	f8cd 8000 	str.w	r8, [sp]
 8019436:	464b      	mov	r3, r9
 8019438:	4652      	mov	r2, sl
 801943a:	4621      	mov	r1, r4
 801943c:	4628      	mov	r0, r5
 801943e:	f7ff ffb7 	bl	80193b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8019442:	4683      	mov	fp, r0
 8019444:	b168      	cbz	r0, 8019462 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8019446:	eb0a 0109 	add.w	r1, sl, r9
 801944a:	4441      	add	r1, r8
 801944c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8019450:	463a      	mov	r2, r7
 8019452:	4649      	mov	r1, r9
 8019454:	4628      	mov	r0, r5
 8019456:	f7ff ff53 	bl	8019300 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801945a:	4658      	mov	r0, fp
 801945c:	b003      	add	sp, #12
 801945e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019462:	eb07 010a 	add.w	r1, r7, sl
 8019466:	4449      	add	r1, r9
 8019468:	4441      	add	r1, r8
 801946a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801946e:	e7d2      	b.n	8019416 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8019470:	f04f 0b00 	mov.w	fp, #0
 8019474:	e7f1      	b.n	801945a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08019476 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8019476:	b570      	push	{r4, r5, r6, lr}
 8019478:	8810      	ldrh	r0, [r2, #0]
 801947a:	4298      	cmp	r0, r3
 801947c:	d817      	bhi.n	80194ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801947e:	1e48      	subs	r0, r1, #1
 8019480:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8019484:	4298      	cmp	r0, r3
 8019486:	d312      	bcc.n	80194ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8019488:	2400      	movs	r4, #0
 801948a:	428c      	cmp	r4, r1
 801948c:	d20f      	bcs.n	80194ae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801948e:	1860      	adds	r0, r4, r1
 8019490:	1040      	asrs	r0, r0, #1
 8019492:	0085      	lsls	r5, r0, #2
 8019494:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8019498:	42b3      	cmp	r3, r6
 801949a:	d902      	bls.n	80194a2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801949c:	3001      	adds	r0, #1
 801949e:	b284      	uxth	r4, r0
 80194a0:	e7f3      	b.n	801948a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80194a2:	d201      	bcs.n	80194a8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80194a4:	b281      	uxth	r1, r0
 80194a6:	e7f0      	b.n	801948a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80194a8:	442a      	add	r2, r5
 80194aa:	8850      	ldrh	r0, [r2, #2]
 80194ac:	bd70      	pop	{r4, r5, r6, pc}
 80194ae:	2000      	movs	r0, #0
 80194b0:	e7fc      	b.n	80194ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080194b2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80194b2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80194b6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80194b8:	886f      	ldrh	r7, [r5, #2]
 80194ba:	4604      	mov	r4, r0
 80194bc:	087f      	lsrs	r7, r7, #1
 80194be:	260b      	movs	r6, #11
 80194c0:	3e01      	subs	r6, #1
 80194c2:	d013      	beq.n	80194ec <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80194c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80194c6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80194ca:	462a      	mov	r2, r5
 80194cc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80194d0:	4639      	mov	r1, r7
 80194d2:	4643      	mov	r3, r8
 80194d4:	4620      	mov	r0, r4
 80194d6:	f7ff ffce 	bl	8019476 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80194da:	b138      	cbz	r0, 80194ec <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80194dc:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80194e0:	4642      	mov	r2, r8
 80194e2:	4620      	mov	r0, r4
 80194e4:	f7ff ff93 	bl	801940e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80194e8:	2800      	cmp	r0, #0
 80194ea:	d1e9      	bne.n	80194c0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80194ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080194f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80194f0:	b570      	push	{r4, r5, r6, lr}
 80194f2:	694a      	ldr	r2, [r1, #20]
 80194f4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80194f6:	684b      	ldr	r3, [r1, #4]
 80194f8:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80194fa:	1b54      	subs	r4, r2, r5
 80194fc:	f000 8106 	beq.w	801970c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8019500:	1b9b      	subs	r3, r3, r6
 8019502:	d003      	beq.n	801950c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019504:	4363      	muls	r3, r4
 8019506:	2210      	movs	r2, #16
 8019508:	fb93 f3f2 	sdiv	r3, r3, r2
 801950c:	680c      	ldr	r4, [r1, #0]
 801950e:	698a      	ldr	r2, [r1, #24]
 8019510:	1b65      	subs	r5, r4, r5
 8019512:	f000 80fd 	beq.w	8019710 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8019516:	1b92      	subs	r2, r2, r6
 8019518:	d003      	beq.n	8019522 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801951a:	436a      	muls	r2, r5
 801951c:	2410      	movs	r4, #16
 801951e:	fb92 f2f4 	sdiv	r2, r2, r4
 8019522:	1a9b      	subs	r3, r3, r2
 8019524:	ee07 3a90 	vmov	s15, r3
 8019528:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801974c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801952c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019530:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019534:	ee67 7a84 	vmul.f32	s15, s15, s8
 8019538:	460a      	mov	r2, r1
 801953a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801953e:	4603      	mov	r3, r0
 8019540:	f100 040c 	add.w	r4, r0, #12
 8019544:	eeb1 6a43 	vneg.f32	s12, s6
 8019548:	edd2 7a02 	vldr	s15, [r2, #8]
 801954c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8019550:	3214      	adds	r2, #20
 8019552:	ece3 6a01 	vstmia	r3!, {s13}
 8019556:	ed52 7a02 	vldr	s15, [r2, #-8]
 801955a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801955e:	429c      	cmp	r4, r3
 8019560:	edc3 7a02 	vstr	s15, [r3, #8]
 8019564:	ed52 7a01 	vldr	s15, [r2, #-4]
 8019568:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801956c:	edc3 7a05 	vstr	s15, [r3, #20]
 8019570:	d1ea      	bne.n	8019548 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8019572:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019574:	698b      	ldr	r3, [r1, #24]
 8019576:	edd0 4a02 	vldr	s9, [r0, #8]
 801957a:	edd0 3a00 	vldr	s7, [r0]
 801957e:	edd0 6a01 	vldr	s13, [r0, #4]
 8019582:	ed90 5a05 	vldr	s10, [r0, #20]
 8019586:	ed90 2a03 	vldr	s4, [r0, #12]
 801958a:	edd0 5a04 	vldr	s11, [r0, #16]
 801958e:	ed90 1a07 	vldr	s2, [r0, #28]
 8019592:	edd0 2a06 	vldr	s5, [r0, #24]
 8019596:	1a9b      	subs	r3, r3, r2
 8019598:	ee07 3a90 	vmov	s15, r3
 801959c:	684b      	ldr	r3, [r1, #4]
 801959e:	1a9b      	subs	r3, r3, r2
 80195a0:	ee07 3a10 	vmov	s14, r3
 80195a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80195a8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80195ac:	ee67 7a84 	vmul.f32	s15, s15, s8
 80195b0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80195b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80195b8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80195bc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80195c0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80195c4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80195c8:	ee32 5a45 	vsub.f32	s10, s4, s10
 80195cc:	ee67 7a83 	vmul.f32	s15, s15, s6
 80195d0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80195d4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80195d6:	694a      	ldr	r2, [r1, #20]
 80195d8:	1b13      	subs	r3, r2, r4
 80195da:	ee07 3a10 	vmov	s14, r3
 80195de:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80195e2:	680b      	ldr	r3, [r1, #0]
 80195e4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80195e8:	1b1b      	subs	r3, r3, r4
 80195ea:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80195ee:	ee07 3a10 	vmov	s14, r3
 80195f2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80195f6:	ee27 7a04 	vmul.f32	s14, s14, s8
 80195fa:	eee6 4a87 	vfma.f32	s9, s13, s14
 80195fe:	ee64 4a86 	vmul.f32	s9, s9, s12
 8019602:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8019606:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019608:	698b      	ldr	r3, [r1, #24]
 801960a:	1a9b      	subs	r3, r3, r2
 801960c:	ee06 3a90 	vmov	s13, r3
 8019610:	684b      	ldr	r3, [r1, #4]
 8019612:	1a9b      	subs	r3, r3, r2
 8019614:	ee07 3a10 	vmov	s14, r3
 8019618:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801961c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019620:	ee66 6a84 	vmul.f32	s13, s13, s8
 8019624:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019628:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801962c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8019630:	ee66 6a83 	vmul.f32	s13, s13, s6
 8019634:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8019638:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801963a:	694a      	ldr	r2, [r1, #20]
 801963c:	1b13      	subs	r3, r2, r4
 801963e:	ee07 3a10 	vmov	s14, r3
 8019642:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019646:	680b      	ldr	r3, [r1, #0]
 8019648:	ee27 7a04 	vmul.f32	s14, s14, s8
 801964c:	1b1b      	subs	r3, r3, r4
 801964e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8019652:	ee07 3a10 	vmov	s14, r3
 8019656:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801965a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801965e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8019662:	edd0 5a08 	vldr	s11, [r0, #32]
 8019666:	ee25 5a06 	vmul.f32	s10, s10, s12
 801966a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801966e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8019672:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019674:	698b      	ldr	r3, [r1, #24]
 8019676:	1a9b      	subs	r3, r3, r2
 8019678:	ee07 3a10 	vmov	s14, r3
 801967c:	684b      	ldr	r3, [r1, #4]
 801967e:	1a9b      	subs	r3, r3, r2
 8019680:	ee01 3a90 	vmov	s3, r3
 8019684:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019688:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801968c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019690:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8019694:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8019698:	ee61 1a84 	vmul.f32	s3, s3, s8
 801969c:	eea1 7a21 	vfma.f32	s14, s2, s3
 80196a0:	ee27 7a03 	vmul.f32	s14, s14, s6
 80196a4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80196a8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80196aa:	694a      	ldr	r2, [r1, #20]
 80196ac:	1b13      	subs	r3, r2, r4
 80196ae:	ee03 3a10 	vmov	s6, r3
 80196b2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80196b6:	680b      	ldr	r3, [r1, #0]
 80196b8:	ee23 3a04 	vmul.f32	s6, s6, s8
 80196bc:	1b1b      	subs	r3, r3, r4
 80196be:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80196c2:	ee03 3a10 	vmov	s6, r3
 80196c6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80196ca:	ee23 4a04 	vmul.f32	s8, s6, s8
 80196ce:	eee1 5a04 	vfma.f32	s11, s2, s8
 80196d2:	ee25 6a86 	vmul.f32	s12, s11, s12
 80196d6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80196da:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80196de:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80196e2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80196e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80196ea:	dd13      	ble.n	8019714 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80196ec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80196f0:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80196f4:	63c3      	str	r3, [r0, #60]	; 0x3c
 80196f6:	eee3 7a87 	vfma.f32	s15, s7, s14
 80196fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80196fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019702:	dd15      	ble.n	8019730 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8019704:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019708:	6403      	str	r3, [r0, #64]	; 0x40
 801970a:	bd70      	pop	{r4, r5, r6, pc}
 801970c:	4623      	mov	r3, r4
 801970e:	e6fd      	b.n	801950c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019710:	462a      	mov	r2, r5
 8019712:	e706      	b.n	8019522 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019714:	d502      	bpl.n	801971c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8019716:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801971a:	e7e9      	b.n	80196f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801971c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8019720:	eea3 2a85 	vfma.f32	s4, s7, s10
 8019724:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8019728:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801972c:	dade      	bge.n	80196ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801972e:	e7f2      	b.n	8019716 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8019730:	d502      	bpl.n	8019738 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8019732:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8019736:	e7e7      	b.n	8019708 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8019738:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801973c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8019740:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8019744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019748:	dadc      	bge.n	8019704 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801974a:	e7f2      	b.n	8019732 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801974c:	3d800000 	.word	0x3d800000

08019750 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8019750:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019754:	2714      	movs	r7, #20
 8019756:	435f      	muls	r7, r3
 8019758:	eb02 0c07 	add.w	ip, r2, r7
 801975c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8019760:	f115 0e0f 	adds.w	lr, r5, #15
 8019764:	f100 80a2 	bmi.w	80198ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8019768:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801976c:	9c08      	ldr	r4, [sp, #32]
 801976e:	f8c0 e014 	str.w	lr, [r0, #20]
 8019772:	2614      	movs	r6, #20
 8019774:	4366      	muls	r6, r4
 8019776:	eb02 0806 	add.w	r8, r2, r6
 801977a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801977e:	f115 040f 	adds.w	r4, r5, #15
 8019782:	f100 809f 	bmi.w	80198c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8019786:	1124      	asrs	r4, r4, #4
 8019788:	eba4 040e 	sub.w	r4, r4, lr
 801978c:	6184      	str	r4, [r0, #24]
 801978e:	2c00      	cmp	r4, #0
 8019790:	f000 808a 	beq.w	80198a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8019794:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8019798:	f8d8 4004 	ldr.w	r4, [r8, #4]
 801979c:	5995      	ldr	r5, [r2, r6]
 801979e:	eba4 0809 	sub.w	r8, r4, r9
 80197a2:	59d4      	ldr	r4, [r2, r7]
 80197a4:	eba5 0a04 	sub.w	sl, r5, r4
 80197a8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80197ac:	fb0e fe05 	mul.w	lr, lr, r5
 80197b0:	fb0a ee19 	mls	lr, sl, r9, lr
 80197b4:	fb08 e404 	mla	r4, r8, r4, lr
 80197b8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80197bc:	3c01      	subs	r4, #1
 80197be:	19a4      	adds	r4, r4, r6
 80197c0:	f100 808c 	bmi.w	80198dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80197c4:	fb94 fef6 	sdiv	lr, r4, r6
 80197c8:	f8c0 e000 	str.w	lr, [r0]
 80197cc:	fb06 441e 	mls	r4, r6, lr, r4
 80197d0:	6104      	str	r4, [r0, #16]
 80197d2:	2d00      	cmp	r5, #0
 80197d4:	f2c0 8095 	blt.w	8019902 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80197d8:	fb95 f4f6 	sdiv	r4, r5, r6
 80197dc:	6044      	str	r4, [r0, #4]
 80197de:	fb06 5514 	mls	r5, r6, r4, r5
 80197e2:	6085      	str	r5, [r0, #8]
 80197e4:	60c6      	str	r6, [r0, #12]
 80197e6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80197ea:	6945      	ldr	r5, [r0, #20]
 80197ec:	59d2      	ldr	r2, [r2, r7]
 80197ee:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8019924 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80197f2:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80197f6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80197fa:	ee07 4a10 	vmov	s14, r4
 80197fe:	6804      	ldr	r4, [r0, #0]
 8019800:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8019804:	ee07 2a90 	vmov	s15, r2
 8019808:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801980c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019810:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019814:	ee27 7a26 	vmul.f32	s14, s14, s13
 8019818:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801981c:	edd3 6a00 	vldr	s13, [r3]
 8019820:	eee6 6a07 	vfma.f32	s13, s12, s14
 8019824:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8019828:	eee6 6a27 	vfma.f32	s13, s12, s15
 801982c:	edc0 6a07 	vstr	s13, [r0, #28]
 8019830:	edd0 6a01 	vldr	s13, [r0, #4]
 8019834:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8019838:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801983c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019840:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019844:	ed80 6a08 	vstr	s12, [r0, #32]
 8019848:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801984a:	6242      	str	r2, [r0, #36]	; 0x24
 801984c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8019850:	ed93 6a03 	vldr	s12, [r3, #12]
 8019854:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019858:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801985c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019860:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8019864:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8019868:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801986c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019870:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8019874:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019876:	6302      	str	r2, [r0, #48]	; 0x30
 8019878:	ed93 6a06 	vldr	s12, [r3, #24]
 801987c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8019880:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019884:	eeb0 7a46 	vmov.f32	s14, s12
 8019888:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801988c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8019890:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8019894:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8019898:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 801989c:	eee6 7a87 	vfma.f32	s15, s13, s14
 80198a0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80198a4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80198a6:	63c3      	str	r3, [r0, #60]	; 0x3c
 80198a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80198ac:	f1c5 0501 	rsb	r5, r5, #1
 80198b0:	f015 050f 	ands.w	r5, r5, #15
 80198b4:	bf18      	it	ne
 80198b6:	2501      	movne	r5, #1
 80198b8:	2410      	movs	r4, #16
 80198ba:	fb9e fef4 	sdiv	lr, lr, r4
 80198be:	ebae 0e05 	sub.w	lr, lr, r5
 80198c2:	e753      	b.n	801976c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80198c4:	f1c5 0501 	rsb	r5, r5, #1
 80198c8:	f015 050f 	ands.w	r5, r5, #15
 80198cc:	bf18      	it	ne
 80198ce:	2501      	movne	r5, #1
 80198d0:	f04f 0910 	mov.w	r9, #16
 80198d4:	fb94 f4f9 	sdiv	r4, r4, r9
 80198d8:	1b64      	subs	r4, r4, r5
 80198da:	e755      	b.n	8019788 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80198dc:	4264      	negs	r4, r4
 80198de:	fb94 fef6 	sdiv	lr, r4, r6
 80198e2:	f1ce 0800 	rsb	r8, lr, #0
 80198e6:	fb06 441e 	mls	r4, r6, lr, r4
 80198ea:	f8c0 8000 	str.w	r8, [r0]
 80198ee:	6104      	str	r4, [r0, #16]
 80198f0:	2c00      	cmp	r4, #0
 80198f2:	f43f af6e 	beq.w	80197d2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80198f6:	ea6f 0e0e 	mvn.w	lr, lr
 80198fa:	f8c0 e000 	str.w	lr, [r0]
 80198fe:	1b34      	subs	r4, r6, r4
 8019900:	e766      	b.n	80197d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8019902:	426d      	negs	r5, r5
 8019904:	fb95 f4f6 	sdiv	r4, r5, r6
 8019908:	f1c4 0e00 	rsb	lr, r4, #0
 801990c:	fb06 5514 	mls	r5, r6, r4, r5
 8019910:	f8c0 e004 	str.w	lr, [r0, #4]
 8019914:	6085      	str	r5, [r0, #8]
 8019916:	2d00      	cmp	r5, #0
 8019918:	f43f af64 	beq.w	80197e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801991c:	43e4      	mvns	r4, r4
 801991e:	6044      	str	r4, [r0, #4]
 8019920:	1b75      	subs	r5, r6, r5
 8019922:	e75e      	b.n	80197e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8019924:	3d800000 	.word	0x3d800000

08019928 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019928:	4602      	mov	r2, r0
 801992a:	b148      	cbz	r0, 8019940 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801992c:	2300      	movs	r3, #0
 801992e:	b298      	uxth	r0, r3
 8019930:	3301      	adds	r3, #1
 8019932:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019936:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801993a:	2900      	cmp	r1, #0
 801993c:	d1f7      	bne.n	801992e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801993e:	4770      	bx	lr
 8019940:	4770      	bx	lr

08019942 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019942:	b530      	push	{r4, r5, lr}
 8019944:	4604      	mov	r4, r0
 8019946:	b159      	cbz	r1, 8019960 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019948:	b148      	cbz	r0, 801995e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801994a:	2300      	movs	r3, #0
 801994c:	b298      	uxth	r0, r3
 801994e:	4282      	cmp	r2, r0
 8019950:	d905      	bls.n	801995e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019952:	5ccd      	ldrb	r5, [r1, r3]
 8019954:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019958:	3301      	adds	r3, #1
 801995a:	2d00      	cmp	r5, #0
 801995c:	d1f6      	bne.n	801994c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801995e:	bd30      	pop	{r4, r5, pc}
 8019960:	4608      	mov	r0, r1
 8019962:	e7fc      	b.n	801995e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019964 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8019964:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019966:	b08b      	sub	sp, #44	; 0x2c
 8019968:	468c      	mov	ip, r1
 801996a:	2100      	movs	r1, #0
 801996c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019970:	4604      	mov	r4, r0
 8019972:	261f      	movs	r6, #31
 8019974:	af01      	add	r7, sp, #4
 8019976:	fb94 fef3 	sdiv	lr, r4, r3
 801997a:	fb03 441e 	mls	r4, r3, lr, r4
 801997e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8019982:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8019986:	b2ec      	uxtb	r4, r5
 8019988:	2d09      	cmp	r5, #9
 801998a:	bfd4      	ite	le
 801998c:	3430      	addle	r4, #48	; 0x30
 801998e:	3457      	addgt	r4, #87	; 0x57
 8019990:	b2e4      	uxtb	r4, r4
 8019992:	55bc      	strb	r4, [r7, r6]
 8019994:	4674      	mov	r4, lr
 8019996:	1e71      	subs	r1, r6, #1
 8019998:	b974      	cbnz	r4, 80199b8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801999a:	2800      	cmp	r0, #0
 801999c:	da05      	bge.n	80199aa <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801999e:	ab0a      	add	r3, sp, #40	; 0x28
 80199a0:	4419      	add	r1, r3
 80199a2:	232d      	movs	r3, #45	; 0x2d
 80199a4:	f801 3c24 	strb.w	r3, [r1, #-36]
 80199a8:	1eb1      	subs	r1, r6, #2
 80199aa:	3101      	adds	r1, #1
 80199ac:	4439      	add	r1, r7
 80199ae:	4660      	mov	r0, ip
 80199b0:	f7ff ffc7 	bl	8019942 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80199b4:	b00b      	add	sp, #44	; 0x2c
 80199b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80199b8:	460e      	mov	r6, r1
 80199ba:	e7dc      	b.n	8019976 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080199bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80199bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80199be:	b08b      	sub	sp, #44	; 0x2c
 80199c0:	468c      	mov	ip, r1
 80199c2:	2100      	movs	r1, #0
 80199c4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80199c8:	ae01      	add	r6, sp, #4
 80199ca:	211f      	movs	r1, #31
 80199cc:	fbb0 f7f3 	udiv	r7, r0, r3
 80199d0:	fb03 0517 	mls	r5, r3, r7, r0
 80199d4:	b2ec      	uxtb	r4, r5
 80199d6:	2d09      	cmp	r5, #9
 80199d8:	bfd4      	ite	le
 80199da:	3430      	addle	r4, #48	; 0x30
 80199dc:	3457      	addgt	r4, #87	; 0x57
 80199de:	b2e4      	uxtb	r4, r4
 80199e0:	558c      	strb	r4, [r1, r6]
 80199e2:	4638      	mov	r0, r7
 80199e4:	1e4c      	subs	r4, r1, #1
 80199e6:	b92f      	cbnz	r7, 80199f4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80199e8:	4431      	add	r1, r6
 80199ea:	4660      	mov	r0, ip
 80199ec:	f7ff ffa9 	bl	8019942 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80199f0:	b00b      	add	sp, #44	; 0x2c
 80199f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80199f4:	4621      	mov	r1, r4
 80199f6:	e7e9      	b.n	80199cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080199f8 <_ZN8touchgfx7Unicode4itoaElPtti>:
 80199f8:	b410      	push	{r4}
 80199fa:	b131      	cbz	r1, 8019a0a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80199fc:	1e9c      	subs	r4, r3, #2
 80199fe:	2c22      	cmp	r4, #34	; 0x22
 8019a00:	d803      	bhi.n	8019a0a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8019a02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019a06:	f7ff bfad 	b.w	8019964 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019a0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019a0e:	4770      	bx	lr

08019a10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019a10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a14:	4691      	mov	r9, r2
 8019a16:	b085      	sub	sp, #20
 8019a18:	6802      	ldr	r2, [r0, #0]
 8019a1a:	9201      	str	r2, [sp, #4]
 8019a1c:	4688      	mov	r8, r1
 8019a1e:	4683      	mov	fp, r0
 8019a20:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8019a24:	9103      	str	r1, [sp, #12]
 8019a26:	4610      	mov	r0, r2
 8019a28:	461c      	mov	r4, r3
 8019a2a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8019a2e:	9302      	str	r3, [sp, #8]
 8019a30:	f7ff ff7a 	bl	8019928 <_ZN8touchgfx7Unicode6strlenEPKt>
 8019a34:	f1b8 0f00 	cmp.w	r8, #0
 8019a38:	bf0c      	ite	eq
 8019a3a:	4684      	moveq	ip, r0
 8019a3c:	f100 0c01 	addne.w	ip, r0, #1
 8019a40:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8019a44:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8019a48:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8019a4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a4c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8019a50:	9903      	ldr	r1, [sp, #12]
 8019a52:	fa1f fc8c 	uxth.w	ip, ip
 8019a56:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8019a5a:	d041      	beq.n	8019ae0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019a5c:	d834      	bhi.n	8019ac8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8019a5e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8019a62:	d059      	beq.n	8019b18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019a64:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8019a68:	d03a      	beq.n	8019ae0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8019a6a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8019a6e:	d034      	beq.n	8019ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019a70:	2400      	movs	r4, #0
 8019a72:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8019a76:	3a01      	subs	r2, #1
 8019a78:	b169      	cbz	r1, 8019a96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019a7a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019a7c:	458c      	cmp	ip, r1
 8019a7e:	da09      	bge.n	8019a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019a80:	eba1 010c 	sub.w	r1, r1, ip
 8019a84:	b289      	uxth	r1, r1
 8019a86:	b933      	cbnz	r3, 8019a96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019a88:	2e00      	cmp	r6, #0
 8019a8a:	d051      	beq.n	8019b30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019a8c:	2800      	cmp	r0, #0
 8019a8e:	d04f      	beq.n	8019b30 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8019a90:	440c      	add	r4, r1
 8019a92:	b2a4      	uxth	r4, r4
 8019a94:	2100      	movs	r1, #0
 8019a96:	682b      	ldr	r3, [r5, #0]
 8019a98:	4293      	cmp	r3, r2
 8019a9a:	da07      	bge.n	8019aac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019a9c:	f1b8 0f00 	cmp.w	r8, #0
 8019aa0:	d004      	beq.n	8019aac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8019aa2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8019aa6:	682b      	ldr	r3, [r5, #0]
 8019aa8:	3301      	adds	r3, #1
 8019aaa:	602b      	str	r3, [r5, #0]
 8019aac:	2730      	movs	r7, #48	; 0x30
 8019aae:	2c00      	cmp	r4, #0
 8019ab0:	d04e      	beq.n	8019b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019ab2:	682e      	ldr	r6, [r5, #0]
 8019ab4:	3c01      	subs	r4, #1
 8019ab6:	42b2      	cmp	r2, r6
 8019ab8:	b2a4      	uxth	r4, r4
 8019aba:	dd49      	ble.n	8019b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019abc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019ac0:	682b      	ldr	r3, [r5, #0]
 8019ac2:	3301      	adds	r3, #1
 8019ac4:	602b      	str	r3, [r5, #0]
 8019ac6:	e7f2      	b.n	8019aae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8019ac8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8019acc:	d01d      	beq.n	8019b0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8019ace:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8019ad2:	d002      	beq.n	8019ada <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019ad4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8019ad8:	e7c9      	b.n	8019a6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8019ada:	4684      	mov	ip, r0
 8019adc:	f04f 0800 	mov.w	r8, #0
 8019ae0:	2c00      	cmp	r4, #0
 8019ae2:	d0c6      	beq.n	8019a72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019ae4:	b947      	cbnz	r7, 8019af8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019ae6:	2801      	cmp	r0, #1
 8019ae8:	d106      	bne.n	8019af8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8019aea:	8814      	ldrh	r4, [r2, #0]
 8019aec:	2c30      	cmp	r4, #48	; 0x30
 8019aee:	bf02      	ittt	eq
 8019af0:	3202      	addeq	r2, #2
 8019af2:	f8cb 2000 	streq.w	r2, [fp]
 8019af6:	4638      	moveq	r0, r7
 8019af8:	45bc      	cmp	ip, r7
 8019afa:	da14      	bge.n	8019b26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8019afc:	b2bf      	uxth	r7, r7
 8019afe:	eba7 040c 	sub.w	r4, r7, ip
 8019b02:	b2a4      	uxth	r4, r4
 8019b04:	46bc      	mov	ip, r7
 8019b06:	2600      	movs	r6, #0
 8019b08:	e7b3      	b.n	8019a72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019b0a:	4684      	mov	ip, r0
 8019b0c:	b16c      	cbz	r4, 8019b2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8019b0e:	42b8      	cmp	r0, r7
 8019b10:	dd00      	ble.n	8019b14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8019b12:	b2b8      	uxth	r0, r7
 8019b14:	2400      	movs	r4, #0
 8019b16:	e003      	b.n	8019b20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019b18:	f04f 0c01 	mov.w	ip, #1
 8019b1c:	2400      	movs	r4, #0
 8019b1e:	4660      	mov	r0, ip
 8019b20:	4626      	mov	r6, r4
 8019b22:	46a0      	mov	r8, r4
 8019b24:	e7a5      	b.n	8019a72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019b26:	2400      	movs	r4, #0
 8019b28:	e7ed      	b.n	8019b06 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8019b2a:	4626      	mov	r6, r4
 8019b2c:	46a0      	mov	r8, r4
 8019b2e:	e7a0      	b.n	8019a72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019b30:	2900      	cmp	r1, #0
 8019b32:	d0b0      	beq.n	8019a96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019b34:	2720      	movs	r7, #32
 8019b36:	682e      	ldr	r6, [r5, #0]
 8019b38:	2900      	cmp	r1, #0
 8019b3a:	d0ac      	beq.n	8019a96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019b3c:	3901      	subs	r1, #1
 8019b3e:	4296      	cmp	r6, r2
 8019b40:	b289      	uxth	r1, r1
 8019b42:	daa7      	bge.n	8019a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019b44:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019b48:	682b      	ldr	r3, [r5, #0]
 8019b4a:	3301      	adds	r3, #1
 8019b4c:	602b      	str	r3, [r5, #0]
 8019b4e:	e7f2      	b.n	8019b36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019b50:	b188      	cbz	r0, 8019b76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019b52:	682b      	ldr	r3, [r5, #0]
 8019b54:	3801      	subs	r0, #1
 8019b56:	429a      	cmp	r2, r3
 8019b58:	b280      	uxth	r0, r0
 8019b5a:	dd0c      	ble.n	8019b76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019b5c:	f8db 3000 	ldr.w	r3, [fp]
 8019b60:	1c9c      	adds	r4, r3, #2
 8019b62:	f8cb 4000 	str.w	r4, [fp]
 8019b66:	881c      	ldrh	r4, [r3, #0]
 8019b68:	682b      	ldr	r3, [r5, #0]
 8019b6a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8019b6e:	682b      	ldr	r3, [r5, #0]
 8019b70:	3301      	adds	r3, #1
 8019b72:	602b      	str	r3, [r5, #0]
 8019b74:	e7ec      	b.n	8019b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019b76:	2620      	movs	r6, #32
 8019b78:	b151      	cbz	r1, 8019b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019b7a:	6828      	ldr	r0, [r5, #0]
 8019b7c:	3901      	subs	r1, #1
 8019b7e:	4282      	cmp	r2, r0
 8019b80:	b289      	uxth	r1, r1
 8019b82:	dd05      	ble.n	8019b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019b84:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8019b88:	682b      	ldr	r3, [r5, #0]
 8019b8a:	3301      	adds	r3, #1
 8019b8c:	602b      	str	r3, [r5, #0]
 8019b8e:	e7f3      	b.n	8019b78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8019b90:	b005      	add	sp, #20
 8019b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8019b96:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019b9a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8019b9e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8019ba2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8019ba6:	2400      	movs	r4, #0
 8019ba8:	8014      	strh	r4, [r2, #0]
 8019baa:	701c      	strb	r4, [r3, #0]
 8019bac:	f888 4000 	strb.w	r4, [r8]
 8019bb0:	f88c 4000 	strb.w	r4, [ip]
 8019bb4:	f88e 4000 	strb.w	r4, [lr]
 8019bb8:	703c      	strb	r4, [r7, #0]
 8019bba:	6804      	ldr	r4, [r0, #0]
 8019bbc:	b1a4      	cbz	r4, 8019be8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8019bbe:	8824      	ldrh	r4, [r4, #0]
 8019bc0:	f04f 0901 	mov.w	r9, #1
 8019bc4:	b314      	cbz	r4, 8019c0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019bc6:	2c2b      	cmp	r4, #43	; 0x2b
 8019bc8:	d001      	beq.n	8019bce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8019bca:	2c20      	cmp	r4, #32
 8019bcc:	d110      	bne.n	8019bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8019bce:	8014      	strh	r4, [r2, #0]
 8019bd0:	6804      	ldr	r4, [r0, #0]
 8019bd2:	b10c      	cbz	r4, 8019bd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8019bd4:	3402      	adds	r4, #2
 8019bd6:	6004      	str	r4, [r0, #0]
 8019bd8:	680c      	ldr	r4, [r1, #0]
 8019bda:	b10c      	cbz	r4, 8019be0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8019bdc:	3401      	adds	r4, #1
 8019bde:	600c      	str	r4, [r1, #0]
 8019be0:	6804      	ldr	r4, [r0, #0]
 8019be2:	b17c      	cbz	r4, 8019c04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8019be4:	8824      	ldrh	r4, [r4, #0]
 8019be6:	e7ed      	b.n	8019bc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019be8:	680c      	ldr	r4, [r1, #0]
 8019bea:	b17c      	cbz	r4, 8019c0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019bec:	7824      	ldrb	r4, [r4, #0]
 8019bee:	e7e7      	b.n	8019bc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019bf0:	2c2d      	cmp	r4, #45	; 0x2d
 8019bf2:	d102      	bne.n	8019bfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8019bf4:	f883 9000 	strb.w	r9, [r3]
 8019bf8:	e7ea      	b.n	8019bd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019bfa:	2c23      	cmp	r4, #35	; 0x23
 8019bfc:	d107      	bne.n	8019c0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8019bfe:	f888 9000 	strb.w	r9, [r8]
 8019c02:	e7e5      	b.n	8019bd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019c04:	680c      	ldr	r4, [r1, #0]
 8019c06:	b10c      	cbz	r4, 8019c0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019c08:	7824      	ldrb	r4, [r4, #0]
 8019c0a:	e7db      	b.n	8019bc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8019c0c:	2400      	movs	r4, #0
 8019c0e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8019c12:	2b09      	cmp	r3, #9
 8019c14:	d901      	bls.n	8019c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8019c16:	2c2a      	cmp	r4, #42	; 0x2a
 8019c18:	d122      	bne.n	8019c60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019c1a:	2301      	movs	r3, #1
 8019c1c:	2c30      	cmp	r4, #48	; 0x30
 8019c1e:	f88e 3000 	strb.w	r3, [lr]
 8019c22:	d10d      	bne.n	8019c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019c24:	f88c 3000 	strb.w	r3, [ip]
 8019c28:	6803      	ldr	r3, [r0, #0]
 8019c2a:	b10b      	cbz	r3, 8019c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8019c2c:	3302      	adds	r3, #2
 8019c2e:	6003      	str	r3, [r0, #0]
 8019c30:	680b      	ldr	r3, [r1, #0]
 8019c32:	b10b      	cbz	r3, 8019c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8019c34:	3301      	adds	r3, #1
 8019c36:	600b      	str	r3, [r1, #0]
 8019c38:	6803      	ldr	r3, [r0, #0]
 8019c3a:	2b00      	cmp	r3, #0
 8019c3c:	d02f      	beq.n	8019c9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8019c3e:	881c      	ldrh	r4, [r3, #0]
 8019c40:	2c2a      	cmp	r4, #42	; 0x2a
 8019c42:	d135      	bne.n	8019cb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019c44:	f04f 33ff 	mov.w	r3, #4294967295
 8019c48:	6033      	str	r3, [r6, #0]
 8019c4a:	6803      	ldr	r3, [r0, #0]
 8019c4c:	b10b      	cbz	r3, 8019c52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8019c4e:	3302      	adds	r3, #2
 8019c50:	6003      	str	r3, [r0, #0]
 8019c52:	680b      	ldr	r3, [r1, #0]
 8019c54:	b10b      	cbz	r3, 8019c5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8019c56:	3301      	adds	r3, #1
 8019c58:	600b      	str	r3, [r1, #0]
 8019c5a:	6803      	ldr	r3, [r0, #0]
 8019c5c:	b31b      	cbz	r3, 8019ca6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8019c5e:	881c      	ldrh	r4, [r3, #0]
 8019c60:	2c2e      	cmp	r4, #46	; 0x2e
 8019c62:	d11a      	bne.n	8019c9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019c64:	2301      	movs	r3, #1
 8019c66:	703b      	strb	r3, [r7, #0]
 8019c68:	6803      	ldr	r3, [r0, #0]
 8019c6a:	b10b      	cbz	r3, 8019c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8019c6c:	3302      	adds	r3, #2
 8019c6e:	6003      	str	r3, [r0, #0]
 8019c70:	680b      	ldr	r3, [r1, #0]
 8019c72:	b10b      	cbz	r3, 8019c78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8019c74:	3301      	adds	r3, #1
 8019c76:	600b      	str	r3, [r1, #0]
 8019c78:	6803      	ldr	r3, [r0, #0]
 8019c7a:	2b00      	cmp	r3, #0
 8019c7c:	d036      	beq.n	8019cec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8019c7e:	881b      	ldrh	r3, [r3, #0]
 8019c80:	2b2a      	cmp	r3, #42	; 0x2a
 8019c82:	d137      	bne.n	8019cf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019c84:	f04f 33ff 	mov.w	r3, #4294967295
 8019c88:	602b      	str	r3, [r5, #0]
 8019c8a:	6803      	ldr	r3, [r0, #0]
 8019c8c:	b10b      	cbz	r3, 8019c92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8019c8e:	3302      	adds	r3, #2
 8019c90:	6003      	str	r3, [r0, #0]
 8019c92:	680b      	ldr	r3, [r1, #0]
 8019c94:	b10b      	cbz	r3, 8019c9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019c96:	3301      	adds	r3, #1
 8019c98:	600b      	str	r3, [r1, #0]
 8019c9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019c9e:	680c      	ldr	r4, [r1, #0]
 8019ca0:	b134      	cbz	r4, 8019cb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019ca2:	7824      	ldrb	r4, [r4, #0]
 8019ca4:	e7cc      	b.n	8019c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019ca6:	680b      	ldr	r3, [r1, #0]
 8019ca8:	2b00      	cmp	r3, #0
 8019caa:	d0f6      	beq.n	8019c9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019cac:	781c      	ldrb	r4, [r3, #0]
 8019cae:	e7d7      	b.n	8019c60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019cb0:	2300      	movs	r3, #0
 8019cb2:	6033      	str	r3, [r6, #0]
 8019cb4:	220a      	movs	r2, #10
 8019cb6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8019cba:	fa1f f38c 	uxth.w	r3, ip
 8019cbe:	2b09      	cmp	r3, #9
 8019cc0:	d8ce      	bhi.n	8019c60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8019cc2:	6833      	ldr	r3, [r6, #0]
 8019cc4:	fb02 c303 	mla	r3, r2, r3, ip
 8019cc8:	6033      	str	r3, [r6, #0]
 8019cca:	6803      	ldr	r3, [r0, #0]
 8019ccc:	b10b      	cbz	r3, 8019cd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8019cce:	3302      	adds	r3, #2
 8019cd0:	6003      	str	r3, [r0, #0]
 8019cd2:	680b      	ldr	r3, [r1, #0]
 8019cd4:	b10b      	cbz	r3, 8019cda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8019cd6:	3301      	adds	r3, #1
 8019cd8:	600b      	str	r3, [r1, #0]
 8019cda:	6803      	ldr	r3, [r0, #0]
 8019cdc:	b10b      	cbz	r3, 8019ce2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8019cde:	881c      	ldrh	r4, [r3, #0]
 8019ce0:	e7e9      	b.n	8019cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019ce2:	680c      	ldr	r4, [r1, #0]
 8019ce4:	2c00      	cmp	r4, #0
 8019ce6:	d0e6      	beq.n	8019cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019ce8:	7824      	ldrb	r4, [r4, #0]
 8019cea:	e7e4      	b.n	8019cb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8019cec:	680b      	ldr	r3, [r1, #0]
 8019cee:	b10b      	cbz	r3, 8019cf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019cf0:	781b      	ldrb	r3, [r3, #0]
 8019cf2:	e7c5      	b.n	8019c80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8019cf4:	2200      	movs	r2, #0
 8019cf6:	602a      	str	r2, [r5, #0]
 8019cf8:	240a      	movs	r4, #10
 8019cfa:	3b30      	subs	r3, #48	; 0x30
 8019cfc:	b29e      	uxth	r6, r3
 8019cfe:	2e09      	cmp	r6, #9
 8019d00:	682a      	ldr	r2, [r5, #0]
 8019d02:	d813      	bhi.n	8019d2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8019d04:	fb04 3302 	mla	r3, r4, r2, r3
 8019d08:	602b      	str	r3, [r5, #0]
 8019d0a:	6803      	ldr	r3, [r0, #0]
 8019d0c:	b10b      	cbz	r3, 8019d12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8019d0e:	3302      	adds	r3, #2
 8019d10:	6003      	str	r3, [r0, #0]
 8019d12:	680b      	ldr	r3, [r1, #0]
 8019d14:	b10b      	cbz	r3, 8019d1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8019d16:	3301      	adds	r3, #1
 8019d18:	600b      	str	r3, [r1, #0]
 8019d1a:	6803      	ldr	r3, [r0, #0]
 8019d1c:	b10b      	cbz	r3, 8019d22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8019d1e:	881b      	ldrh	r3, [r3, #0]
 8019d20:	e7eb      	b.n	8019cfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019d22:	680b      	ldr	r3, [r1, #0]
 8019d24:	2b00      	cmp	r3, #0
 8019d26:	d0e8      	beq.n	8019cfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019d28:	781b      	ldrb	r3, [r3, #0]
 8019d2a:	e7e6      	b.n	8019cfa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019d2c:	2a06      	cmp	r2, #6
 8019d2e:	bfa8      	it	ge
 8019d30:	2206      	movge	r2, #6
 8019d32:	602a      	str	r2, [r5, #0]
 8019d34:	e7b1      	b.n	8019c9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08019d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8019d36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d3a:	b0a3      	sub	sp, #140	; 0x8c
 8019d3c:	2600      	movs	r6, #0
 8019d3e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8019d42:	4607      	mov	r7, r0
 8019d44:	4688      	mov	r8, r1
 8019d46:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019d4a:	4631      	mov	r1, r6
 8019d4c:	2242      	movs	r2, #66	; 0x42
 8019d4e:	4648      	mov	r0, r9
 8019d50:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019d52:	960d      	str	r6, [sp, #52]	; 0x34
 8019d54:	f012 f881 	bl	802be5a <memset>
 8019d58:	b15f      	cbz	r7, 8019d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8019d5a:	f108 3aff 	add.w	sl, r8, #4294967295
 8019d5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019d60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019d62:	b152      	cbz	r2, 8019d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8019d64:	8812      	ldrh	r2, [r2, #0]
 8019d66:	b10a      	cbz	r2, 8019d6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019d68:	459a      	cmp	sl, r3
 8019d6a:	dc2e      	bgt.n	8019dca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8019d6c:	2200      	movs	r2, #0
 8019d6e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019d72:	4638      	mov	r0, r7
 8019d74:	b023      	add	sp, #140	; 0x8c
 8019d76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d7a:	9a08      	ldr	r2, [sp, #32]
 8019d7c:	2a00      	cmp	r2, #0
 8019d7e:	d0f5      	beq.n	8019d6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019d80:	7812      	ldrb	r2, [r2, #0]
 8019d82:	e7f0      	b.n	8019d66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8019d84:	2d00      	cmp	r5, #0
 8019d86:	d0ea      	beq.n	8019d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019d88:	782a      	ldrb	r2, [r5, #0]
 8019d8a:	b142      	cbz	r2, 8019d9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8019d8c:	2a25      	cmp	r2, #37	; 0x25
 8019d8e:	d001      	beq.n	8019d94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8019d90:	459a      	cmp	sl, r3
 8019d92:	dc08      	bgt.n	8019da6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8019d94:	f1bb 0f00 	cmp.w	fp, #0
 8019d98:	d121      	bne.n	8019dde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8019d9a:	2d00      	cmp	r5, #0
 8019d9c:	d0df      	beq.n	8019d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019d9e:	782a      	ldrb	r2, [r5, #0]
 8019da0:	f04f 0b00 	mov.w	fp, #0
 8019da4:	e01d      	b.n	8019de2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8019da6:	f1bb 0f00 	cmp.w	fp, #0
 8019daa:	d078      	beq.n	8019e9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8019dac:	f8bb 2000 	ldrh.w	r2, [fp]
 8019db0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019db4:	f1bb 0f00 	cmp.w	fp, #0
 8019db8:	d002      	beq.n	8019dc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8019dba:	f10b 0202 	add.w	r2, fp, #2
 8019dbe:	9209      	str	r2, [sp, #36]	; 0x24
 8019dc0:	b10d      	cbz	r5, 8019dc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8019dc2:	3501      	adds	r5, #1
 8019dc4:	9508      	str	r5, [sp, #32]
 8019dc6:	3301      	adds	r3, #1
 8019dc8:	930d      	str	r3, [sp, #52]	; 0x34
 8019dca:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8019dce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019dd0:	f1bb 0f00 	cmp.w	fp, #0
 8019dd4:	d0d6      	beq.n	8019d84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8019dd6:	f8bb 2000 	ldrh.w	r2, [fp]
 8019dda:	2a00      	cmp	r2, #0
 8019ddc:	d1d6      	bne.n	8019d8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8019dde:	f8bb 2000 	ldrh.w	r2, [fp]
 8019de2:	2a00      	cmp	r2, #0
 8019de4:	d0bb      	beq.n	8019d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019de6:	459a      	cmp	sl, r3
 8019de8:	ddb9      	ble.n	8019d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019dea:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8019dee:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8019df2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8019df6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8019dfa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8019dfe:	960e      	str	r6, [sp, #56]	; 0x38
 8019e00:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8019e04:	960f      	str	r6, [sp, #60]	; 0x3c
 8019e06:	f1bb 0f00 	cmp.w	fp, #0
 8019e0a:	d002      	beq.n	8019e12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8019e0c:	f10b 0302 	add.w	r3, fp, #2
 8019e10:	9309      	str	r3, [sp, #36]	; 0x24
 8019e12:	b10d      	cbz	r5, 8019e18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8019e14:	1c6b      	adds	r3, r5, #1
 8019e16:	9308      	str	r3, [sp, #32]
 8019e18:	ab0f      	add	r3, sp, #60	; 0x3c
 8019e1a:	9305      	str	r3, [sp, #20]
 8019e1c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019e20:	9304      	str	r3, [sp, #16]
 8019e22:	ab0e      	add	r3, sp, #56	; 0x38
 8019e24:	9303      	str	r3, [sp, #12]
 8019e26:	ab0c      	add	r3, sp, #48	; 0x30
 8019e28:	9302      	str	r3, [sp, #8]
 8019e2a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019e2e:	9301      	str	r3, [sp, #4]
 8019e30:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019e34:	9300      	str	r3, [sp, #0]
 8019e36:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019e3a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019e3e:	a908      	add	r1, sp, #32
 8019e40:	a809      	add	r0, sp, #36	; 0x24
 8019e42:	f7ff fea8 	bl	8019b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019e46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e48:	2b00      	cmp	r3, #0
 8019e4a:	bfbe      	ittt	lt
 8019e4c:	6823      	ldrlt	r3, [r4, #0]
 8019e4e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019e52:	930e      	strlt	r3, [sp, #56]	; 0x38
 8019e54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019e56:	bfb8      	it	lt
 8019e58:	3404      	addlt	r4, #4
 8019e5a:	2b00      	cmp	r3, #0
 8019e5c:	bfb8      	it	lt
 8019e5e:	6823      	ldrlt	r3, [r4, #0]
 8019e60:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019e64:	bfbe      	ittt	lt
 8019e66:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019e6a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8019e6c:	3404      	addlt	r4, #4
 8019e6e:	b1d9      	cbz	r1, 8019ea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019e70:	880b      	ldrh	r3, [r1, #0]
 8019e72:	2b69      	cmp	r3, #105	; 0x69
 8019e74:	d01f      	beq.n	8019eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019e76:	d82f      	bhi.n	8019ed8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019e78:	2b58      	cmp	r3, #88	; 0x58
 8019e7a:	d01c      	beq.n	8019eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019e7c:	d818      	bhi.n	8019eb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8019e7e:	2b25      	cmp	r3, #37	; 0x25
 8019e80:	d034      	beq.n	8019eec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8019e82:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8019e86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019e88:	f1bb 0f00 	cmp.w	fp, #0
 8019e8c:	f000 80b8 	beq.w	801a000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8019e90:	f8bb 5000 	ldrh.w	r5, [fp]
 8019e94:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8019e98:	3301      	adds	r3, #1
 8019e9a:	930d      	str	r3, [sp, #52]	; 0x34
 8019e9c:	e029      	b.n	8019ef2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019e9e:	b10d      	cbz	r5, 8019ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8019ea0:	782a      	ldrb	r2, [r5, #0]
 8019ea2:	e785      	b.n	8019db0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019ea4:	462a      	mov	r2, r5
 8019ea6:	e783      	b.n	8019db0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8019ea8:	2a00      	cmp	r2, #0
 8019eaa:	d0ea      	beq.n	8019e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019eac:	7813      	ldrb	r3, [r2, #0]
 8019eae:	e7e0      	b.n	8019e72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8019eb0:	3b63      	subs	r3, #99	; 0x63
 8019eb2:	2b01      	cmp	r3, #1
 8019eb4:	d8e5      	bhi.n	8019e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019eb6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8019eba:	b329      	cbz	r1, 8019f08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8019ebc:	880b      	ldrh	r3, [r1, #0]
 8019ebe:	2b69      	cmp	r3, #105	; 0x69
 8019ec0:	d063      	beq.n	8019f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019ec2:	d825      	bhi.n	8019f10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8019ec4:	2b63      	cmp	r3, #99	; 0x63
 8019ec6:	d038      	beq.n	8019f3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8019ec8:	2b64      	cmp	r3, #100	; 0x64
 8019eca:	d05e      	beq.n	8019f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8019ecc:	2b58      	cmp	r3, #88	; 0x58
 8019ece:	d07b      	beq.n	8019fc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8019ed0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8019ed4:	4625      	mov	r5, r4
 8019ed6:	e036      	b.n	8019f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019ed8:	2b73      	cmp	r3, #115	; 0x73
 8019eda:	d0ec      	beq.n	8019eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019edc:	d802      	bhi.n	8019ee4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8019ede:	2b6f      	cmp	r3, #111	; 0x6f
 8019ee0:	d1cf      	bne.n	8019e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8019ee2:	e7e8      	b.n	8019eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ee4:	2b75      	cmp	r3, #117	; 0x75
 8019ee6:	d0e6      	beq.n	8019eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019ee8:	2b78      	cmp	r3, #120	; 0x78
 8019eea:	e7f9      	b.n	8019ee0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8019eec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019eee:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8019ef2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ef4:	b10b      	cbz	r3, 8019efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8019ef6:	3302      	adds	r3, #2
 8019ef8:	9309      	str	r3, [sp, #36]	; 0x24
 8019efa:	9b08      	ldr	r3, [sp, #32]
 8019efc:	2b00      	cmp	r3, #0
 8019efe:	f43f af2e 	beq.w	8019d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019f02:	3301      	adds	r3, #1
 8019f04:	9308      	str	r3, [sp, #32]
 8019f06:	e72a      	b.n	8019d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019f08:	2a00      	cmp	r2, #0
 8019f0a:	d0e1      	beq.n	8019ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019f0c:	7813      	ldrb	r3, [r2, #0]
 8019f0e:	e7d6      	b.n	8019ebe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019f10:	2b73      	cmp	r3, #115	; 0x73
 8019f12:	d036      	beq.n	8019f82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8019f14:	d807      	bhi.n	8019f26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8019f16:	2b6f      	cmp	r3, #111	; 0x6f
 8019f18:	d1da      	bne.n	8019ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019f1a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019f1c:	1d25      	adds	r5, r4, #4
 8019f1e:	eba8 0202 	sub.w	r2, r8, r2
 8019f22:	2308      	movs	r3, #8
 8019f24:	e04a      	b.n	8019fbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019f26:	2b75      	cmp	r3, #117	; 0x75
 8019f28:	d043      	beq.n	8019fb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8019f2a:	2b78      	cmp	r3, #120	; 0x78
 8019f2c:	d1d0      	bne.n	8019ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019f2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019f30:	1d25      	adds	r5, r4, #4
 8019f32:	eba8 0202 	sub.w	r2, r8, r2
 8019f36:	2310      	movs	r3, #16
 8019f38:	e040      	b.n	8019fbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019f3a:	6823      	ldr	r3, [r4, #0]
 8019f3c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019f40:	1d25      	adds	r5, r4, #4
 8019f42:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8019f46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f48:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019f4c:	2b00      	cmp	r3, #0
 8019f4e:	d052      	beq.n	8019ff6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019f50:	881a      	ldrh	r2, [r3, #0]
 8019f52:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019f56:	a80d      	add	r0, sp, #52	; 0x34
 8019f58:	9005      	str	r0, [sp, #20]
 8019f5a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019f5e:	9004      	str	r0, [sp, #16]
 8019f60:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019f62:	9003      	str	r0, [sp, #12]
 8019f64:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019f68:	9002      	str	r0, [sp, #8]
 8019f6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019f6c:	9001      	str	r0, [sp, #4]
 8019f6e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019f72:	9000      	str	r0, [sp, #0]
 8019f74:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8019f78:	a810      	add	r0, sp, #64	; 0x40
 8019f7a:	f7ff fd49 	bl	8019a10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019f7e:	462c      	mov	r4, r5
 8019f80:	e7b7      	b.n	8019ef2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019f82:	6823      	ldr	r3, [r4, #0]
 8019f84:	1d25      	adds	r5, r4, #4
 8019f86:	9310      	str	r3, [sp, #64]	; 0x40
 8019f88:	e7dd      	b.n	8019f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019f8a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019f8c:	6820      	ldr	r0, [r4, #0]
 8019f8e:	eba8 0202 	sub.w	r2, r8, r2
 8019f92:	230a      	movs	r3, #10
 8019f94:	b292      	uxth	r2, r2
 8019f96:	4649      	mov	r1, r9
 8019f98:	f7ff fce4 	bl	8019964 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019f9c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019fa0:	2b2d      	cmp	r3, #45	; 0x2d
 8019fa2:	f104 0504 	add.w	r5, r4, #4
 8019fa6:	d1ce      	bne.n	8019f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019fa8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019fac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019fae:	3302      	adds	r3, #2
 8019fb0:	e7e9      	b.n	8019f86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8019fb2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019fb4:	1d25      	adds	r5, r4, #4
 8019fb6:	eba8 0202 	sub.w	r2, r8, r2
 8019fba:	230a      	movs	r3, #10
 8019fbc:	b292      	uxth	r2, r2
 8019fbe:	4649      	mov	r1, r9
 8019fc0:	6820      	ldr	r0, [r4, #0]
 8019fc2:	f7ff fcfb 	bl	80199bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019fc6:	e7be      	b.n	8019f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019fc8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019fca:	6820      	ldr	r0, [r4, #0]
 8019fcc:	eba8 0202 	sub.w	r2, r8, r2
 8019fd0:	b292      	uxth	r2, r2
 8019fd2:	2310      	movs	r3, #16
 8019fd4:	4649      	mov	r1, r9
 8019fd6:	f7ff fcf1 	bl	80199bc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019fda:	1d25      	adds	r5, r4, #4
 8019fdc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019fe0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019fe4:	2b00      	cmp	r3, #0
 8019fe6:	d0ae      	beq.n	8019f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019fe8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8019fec:	2919      	cmp	r1, #25
 8019fee:	d8f7      	bhi.n	8019fe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019ff0:	3b20      	subs	r3, #32
 8019ff2:	8013      	strh	r3, [r2, #0]
 8019ff4:	e7f4      	b.n	8019fe0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019ff6:	9a08      	ldr	r2, [sp, #32]
 8019ff8:	2a00      	cmp	r2, #0
 8019ffa:	d0aa      	beq.n	8019f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019ffc:	7812      	ldrb	r2, [r2, #0]
 8019ffe:	e7a8      	b.n	8019f52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801a000:	2d00      	cmp	r5, #0
 801a002:	f43f af47 	beq.w	8019e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 801a006:	782d      	ldrb	r5, [r5, #0]
 801a008:	e744      	b.n	8019e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801a00a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801a00a:	b507      	push	{r0, r1, r2, lr}
 801a00c:	9300      	str	r3, [sp, #0]
 801a00e:	4613      	mov	r3, r2
 801a010:	2200      	movs	r2, #0
 801a012:	f7ff fe90 	bl	8019d36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801a016:	b003      	add	sp, #12
 801a018:	f85d fb04 	ldr.w	pc, [sp], #4

0801a01c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801a01c:	b40c      	push	{r2, r3}
 801a01e:	b507      	push	{r0, r1, r2, lr}
 801a020:	ab04      	add	r3, sp, #16
 801a022:	f853 2b04 	ldr.w	r2, [r3], #4
 801a026:	9301      	str	r3, [sp, #4]
 801a028:	f7ff ffef 	bl	801a00a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801a02c:	b003      	add	sp, #12
 801a02e:	f85d eb04 	ldr.w	lr, [sp], #4
 801a032:	b002      	add	sp, #8
 801a034:	4770      	bx	lr
	...

0801a038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801a038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a03c:	b0c5      	sub	sp, #276	; 0x114
 801a03e:	2400      	movs	r4, #0
 801a040:	af11      	add	r7, sp, #68	; 0x44
 801a042:	4606      	mov	r6, r0
 801a044:	468a      	mov	sl, r1
 801a046:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801a04a:	4621      	mov	r1, r4
 801a04c:	22c8      	movs	r2, #200	; 0xc8
 801a04e:	4638      	mov	r0, r7
 801a050:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 801a054:	940d      	str	r4, [sp, #52]	; 0x34
 801a056:	f011 ff00 	bl	802be5a <memset>
 801a05a:	b16e      	cbz	r6, 801a078 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801a05c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801a300 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 801a060:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a062:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a064:	b162      	cbz	r2, 801a080 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801a066:	8812      	ldrh	r2, [r2, #0]
 801a068:	b11a      	cbz	r2, 801a072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801a06a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801a06e:	4299      	cmp	r1, r3
 801a070:	dc2e      	bgt.n	801a0d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 801a072:	2200      	movs	r2, #0
 801a074:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a078:	4630      	mov	r0, r6
 801a07a:	b045      	add	sp, #276	; 0x114
 801a07c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a080:	9a08      	ldr	r2, [sp, #32]
 801a082:	2a00      	cmp	r2, #0
 801a084:	d0f5      	beq.n	801a072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801a086:	7812      	ldrb	r2, [r2, #0]
 801a088:	e7ee      	b.n	801a068 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801a08a:	2d00      	cmp	r5, #0
 801a08c:	d0e8      	beq.n	801a060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a08e:	782a      	ldrb	r2, [r5, #0]
 801a090:	b142      	cbz	r2, 801a0a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 801a092:	2a25      	cmp	r2, #37	; 0x25
 801a094:	d001      	beq.n	801a09a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801a096:	4299      	cmp	r1, r3
 801a098:	dc08      	bgt.n	801a0ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801a09a:	f1b8 0f00 	cmp.w	r8, #0
 801a09e:	d121      	bne.n	801a0e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801a0a0:	2d00      	cmp	r5, #0
 801a0a2:	d0dd      	beq.n	801a060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a0a4:	782a      	ldrb	r2, [r5, #0]
 801a0a6:	f04f 0800 	mov.w	r8, #0
 801a0aa:	e01d      	b.n	801a0e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801a0ac:	f1b8 0f00 	cmp.w	r8, #0
 801a0b0:	d07f      	beq.n	801a1b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801a0b2:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0b6:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a0ba:	f1b8 0f00 	cmp.w	r8, #0
 801a0be:	d002      	beq.n	801a0c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801a0c0:	f108 0202 	add.w	r2, r8, #2
 801a0c4:	9209      	str	r2, [sp, #36]	; 0x24
 801a0c6:	b10d      	cbz	r5, 801a0cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801a0c8:	3501      	adds	r5, #1
 801a0ca:	9508      	str	r5, [sp, #32]
 801a0cc:	3301      	adds	r3, #1
 801a0ce:	930d      	str	r3, [sp, #52]	; 0x34
 801a0d0:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 801a0d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a0d6:	f1b8 0f00 	cmp.w	r8, #0
 801a0da:	d0d6      	beq.n	801a08a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801a0dc:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0e0:	2a00      	cmp	r2, #0
 801a0e2:	d1d6      	bne.n	801a092 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 801a0e4:	f8b8 2000 	ldrh.w	r2, [r8]
 801a0e8:	2a00      	cmp	r2, #0
 801a0ea:	d0b9      	beq.n	801a060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a0ec:	4299      	cmp	r1, r3
 801a0ee:	ddb7      	ble.n	801a060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a0f0:	2300      	movs	r3, #0
 801a0f2:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801a0f6:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 801a0fa:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801a0fe:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801a102:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801a106:	930e      	str	r3, [sp, #56]	; 0x38
 801a108:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801a10c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a10e:	f1b8 0f00 	cmp.w	r8, #0
 801a112:	d002      	beq.n	801a11a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 801a114:	f108 0302 	add.w	r3, r8, #2
 801a118:	9309      	str	r3, [sp, #36]	; 0x24
 801a11a:	b10d      	cbz	r5, 801a120 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 801a11c:	1c6b      	adds	r3, r5, #1
 801a11e:	9308      	str	r3, [sp, #32]
 801a120:	ab0f      	add	r3, sp, #60	; 0x3c
 801a122:	9305      	str	r3, [sp, #20]
 801a124:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801a128:	9304      	str	r3, [sp, #16]
 801a12a:	ab0e      	add	r3, sp, #56	; 0x38
 801a12c:	9303      	str	r3, [sp, #12]
 801a12e:	ab0c      	add	r3, sp, #48	; 0x30
 801a130:	9302      	str	r3, [sp, #8]
 801a132:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801a136:	9301      	str	r3, [sp, #4]
 801a138:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801a13c:	9300      	str	r3, [sp, #0]
 801a13e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801a142:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801a146:	a908      	add	r1, sp, #32
 801a148:	a809      	add	r0, sp, #36	; 0x24
 801a14a:	f7ff fd24 	bl	8019b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801a14e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a150:	2b00      	cmp	r3, #0
 801a152:	da0b      	bge.n	801a16c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 801a154:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a158:	edd3 7a00 	vldr	s15, [r3]
 801a15c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a160:	3401      	adds	r4, #1
 801a162:	ee17 3a90 	vmov	r3, s15
 801a166:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a16a:	930e      	str	r3, [sp, #56]	; 0x38
 801a16c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a16e:	2b00      	cmp	r3, #0
 801a170:	da0b      	bge.n	801a18a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801a172:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a176:	edd3 7a00 	vldr	s15, [r3]
 801a17a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801a17e:	3401      	adds	r4, #1
 801a180:	ee17 3a90 	vmov	r3, s15
 801a184:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a188:	930f      	str	r3, [sp, #60]	; 0x3c
 801a18a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a18c:	b1b3      	cbz	r3, 801a1bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801a18e:	881a      	ldrh	r2, [r3, #0]
 801a190:	2a25      	cmp	r2, #37	; 0x25
 801a192:	d018      	beq.n	801a1c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 801a194:	2a66      	cmp	r2, #102	; 0x66
 801a196:	d01c      	beq.n	801a1d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801a198:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801a19c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a19e:	f1b8 0f00 	cmp.w	r8, #0
 801a1a2:	f000 8121 	beq.w	801a3e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 801a1a6:	f8b8 5000 	ldrh.w	r5, [r8]
 801a1aa:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801a1ae:	3301      	adds	r3, #1
 801a1b0:	e00d      	b.n	801a1ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801a1b2:	b10d      	cbz	r5, 801a1b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 801a1b4:	782a      	ldrb	r2, [r5, #0]
 801a1b6:	e77e      	b.n	801a0b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801a1b8:	462a      	mov	r2, r5
 801a1ba:	e77c      	b.n	801a0b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801a1bc:	9b08      	ldr	r3, [sp, #32]
 801a1be:	2b00      	cmp	r3, #0
 801a1c0:	d0ea      	beq.n	801a198 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801a1c2:	781a      	ldrb	r2, [r3, #0]
 801a1c4:	e7e4      	b.n	801a190 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801a1c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a1c8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801a1cc:	3302      	adds	r3, #2
 801a1ce:	930d      	str	r3, [sp, #52]	; 0x34
 801a1d0:	e041      	b.n	801a256 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801a1d2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801a1d6:	edd3 7a00 	vldr	s15, [r3]
 801a1da:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801a1de:	9710      	str	r7, [sp, #64]	; 0x40
 801a1e0:	3401      	adds	r4, #1
 801a1e2:	b923      	cbnz	r3, 801a1ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 801a1e4:	2301      	movs	r3, #1
 801a1e6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 801a1ea:	2306      	movs	r3, #6
 801a1ec:	930f      	str	r3, [sp, #60]	; 0x3c
 801a1ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801a1f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a1f6:	bf48      	it	mi
 801a1f8:	eef1 7a67 	vnegmi.f32	s15, s15
 801a1fc:	eeb0 7ae7 	vabs.f32	s14, s15
 801a200:	bf48      	it	mi
 801a202:	232d      	movmi	r3, #45	; 0x2d
 801a204:	eeb4 7a45 	vcmp.f32	s14, s10
 801a208:	bf48      	it	mi
 801a20a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801a20e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a212:	dd2b      	ble.n	801a26c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 801a214:	4b3b      	ldr	r3, [pc, #236]	; (801a304 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801a216:	9311      	str	r3, [sp, #68]	; 0x44
 801a218:	2366      	movs	r3, #102	; 0x66
 801a21a:	9312      	str	r3, [sp, #72]	; 0x48
 801a21c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a21e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801a222:	2b00      	cmp	r3, #0
 801a224:	f000 80da 	beq.w	801a3dc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801a228:	881a      	ldrh	r2, [r3, #0]
 801a22a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801a22e:	a80d      	add	r0, sp, #52	; 0x34
 801a230:	9005      	str	r0, [sp, #20]
 801a232:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801a236:	9004      	str	r0, [sp, #16]
 801a238:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a23a:	9003      	str	r0, [sp, #12]
 801a23c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801a240:	9002      	str	r0, [sp, #8]
 801a242:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801a244:	9001      	str	r0, [sp, #4]
 801a246:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801a24a:	9000      	str	r0, [sp, #0]
 801a24c:	e9cd a606 	strd	sl, r6, [sp, #24]
 801a250:	a810      	add	r0, sp, #64	; 0x40
 801a252:	f7ff fbdd 	bl	8019a10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801a256:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a258:	b10b      	cbz	r3, 801a25e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801a25a:	3302      	adds	r3, #2
 801a25c:	9309      	str	r3, [sp, #36]	; 0x24
 801a25e:	9b08      	ldr	r3, [sp, #32]
 801a260:	2b00      	cmp	r3, #0
 801a262:	f43f aefd 	beq.w	801a060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a266:	3301      	adds	r3, #1
 801a268:	9308      	str	r3, [sp, #32]
 801a26a:	e6f9      	b.n	801a060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801a26c:	eef4 7a67 	vcmp.f32	s15, s15
 801a270:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a274:	d63a      	bvs.n	801a2ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801a276:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801a27a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801a27e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801a282:	eeb0 6a67 	vmov.f32	s12, s15
 801a286:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a28a:	eef0 5a47 	vmov.f32	s11, s14
 801a28e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801a292:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a296:	da2d      	bge.n	801a2f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801a298:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a29a:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801a29e:	2100      	movs	r1, #0
 801a2a0:	eef0 4a46 	vmov.f32	s9, s12
 801a2a4:	ebaa 0202 	sub.w	r2, sl, r2
 801a2a8:	eef4 6ac6 	vcmpe.f32	s13, s12
 801a2ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a2b0:	b28d      	uxth	r5, r1
 801a2b2:	db2c      	blt.n	801a30e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801a2b4:	1a53      	subs	r3, r2, r1
 801a2b6:	2b00      	cmp	r3, #0
 801a2b8:	dd29      	ble.n	801a30e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801a2ba:	3101      	adds	r1, #1
 801a2bc:	2964      	cmp	r1, #100	; 0x64
 801a2be:	d025      	beq.n	801a30c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801a2c0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801a2c4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801a2c8:	ee17 3a10 	vmov	r3, s14
 801a2cc:	2b09      	cmp	r3, #9
 801a2ce:	bfa8      	it	ge
 801a2d0:	2309      	movge	r3, #9
 801a2d2:	ee07 3a10 	vmov	s14, r3
 801a2d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a2da:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801a2de:	eee7 7a66 	vfms.f32	s15, s14, s13
 801a2e2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 801a2e6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801a2ea:	e7dd      	b.n	801a2a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801a2ec:	4b06      	ldr	r3, [pc, #24]	; (801a308 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801a2ee:	9311      	str	r3, [sp, #68]	; 0x44
 801a2f0:	236e      	movs	r3, #110	; 0x6e
 801a2f2:	e792      	b.n	801a21a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 801a2f4:	ee66 6a87 	vmul.f32	s13, s13, s14
 801a2f8:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801a2fc:	e7c7      	b.n	801a28e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801a2fe:	bf00      	nop
 801a300:	7f7fffff 	.word	0x7f7fffff
 801a304:	006e0069 	.word	0x006e0069
 801a308:	0061006e 	.word	0x0061006e
 801a30c:	2563      	movs	r5, #99	; 0x63
 801a30e:	2a63      	cmp	r2, #99	; 0x63
 801a310:	bfd4      	ite	le
 801a312:	ebc5 0202 	rsble	r2, r5, r2
 801a316:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801a31a:	2a00      	cmp	r2, #0
 801a31c:	dd43      	ble.n	801a3a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801a31e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a320:	2b00      	cmp	r3, #0
 801a322:	dd40      	ble.n	801a3a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801a324:	f04f 0901 	mov.w	r9, #1
 801a328:	210a      	movs	r1, #10
 801a32a:	f113 33ff 	adds.w	r3, r3, #4294967295
 801a32e:	d30c      	bcc.n	801a34a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801a330:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801a334:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801a338:	ee17 0a10 	vmov	r0, s14
 801a33c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801a340:	fb01 0909 	mla	r9, r1, r9, r0
 801a344:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801a348:	e7ef      	b.n	801a32a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801a34a:	3501      	adds	r5, #1
 801a34c:	930f      	str	r3, [sp, #60]	; 0x3c
 801a34e:	b292      	uxth	r2, r2
 801a350:	230a      	movs	r3, #10
 801a352:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801a356:	4648      	mov	r0, r9
 801a358:	f7ff fb4e 	bl	80199f8 <_ZN8touchgfx7Unicode4itoaElPtti>
 801a35c:	f1b9 0f01 	cmp.w	r9, #1
 801a360:	dc1f      	bgt.n	801a3a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801a362:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801a366:	2b00      	cmp	r3, #0
 801a368:	bf0c      	ite	eq
 801a36a:	2300      	moveq	r3, #0
 801a36c:	232e      	movne	r3, #46	; 0x2e
 801a36e:	aa44      	add	r2, sp, #272	; 0x110
 801a370:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a374:	eef4 7ae4 	vcmpe.f32	s15, s9
 801a378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801a37c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801a380:	f6ff af4c 	blt.w	801a21c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a384:	2300      	movs	r3, #0
 801a386:	f838 2b02 	ldrh.w	r2, [r8], #2
 801a38a:	1c59      	adds	r1, r3, #1
 801a38c:	b98a      	cbnz	r2, 801a3b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801a38e:	b29b      	uxth	r3, r3
 801a390:	2130      	movs	r1, #48	; 0x30
 801a392:	b983      	cbnz	r3, 801a3b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 801a394:	2331      	movs	r3, #49	; 0x31
 801a396:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801a39a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a39c:	3b02      	subs	r3, #2
 801a39e:	9310      	str	r3, [sp, #64]	; 0x40
 801a3a0:	e73c      	b.n	801a21c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a3a2:	232e      	movs	r3, #46	; 0x2e
 801a3a4:	e7e3      	b.n	801a36e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 801a3a6:	ab44      	add	r3, sp, #272	; 0x110
 801a3a8:	3501      	adds	r5, #1
 801a3aa:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801a3ae:	2300      	movs	r3, #0
 801a3b0:	e7e0      	b.n	801a374 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801a3b2:	460b      	mov	r3, r1
 801a3b4:	e7e7      	b.n	801a386 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 801a3b6:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 801a3ba:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801a3be:	2808      	cmp	r0, #8
 801a3c0:	d806      	bhi.n	801a3d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801a3c2:	a944      	add	r1, sp, #272	; 0x110
 801a3c4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 801a3c8:	3201      	adds	r2, #1
 801a3ca:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801a3ce:	e725      	b.n	801a21c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801a3d0:	2a39      	cmp	r2, #57	; 0x39
 801a3d2:	bf08      	it	eq
 801a3d4:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 801a3d8:	3b01      	subs	r3, #1
 801a3da:	e7da      	b.n	801a392 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 801a3dc:	9a08      	ldr	r2, [sp, #32]
 801a3de:	2a00      	cmp	r2, #0
 801a3e0:	f43f af23 	beq.w	801a22a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801a3e4:	7812      	ldrb	r2, [r2, #0]
 801a3e6:	e720      	b.n	801a22a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 801a3e8:	2d00      	cmp	r5, #0
 801a3ea:	f43f aede 	beq.w	801a1aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801a3ee:	782d      	ldrb	r5, [r5, #0]
 801a3f0:	e6db      	b.n	801a1aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801a3f2:	bf00      	nop

0801a3f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 801a3f4:	b507      	push	{r0, r1, r2, lr}
 801a3f6:	9300      	str	r3, [sp, #0]
 801a3f8:	4613      	mov	r3, r2
 801a3fa:	2200      	movs	r2, #0
 801a3fc:	f7ff fe1c 	bl	801a038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801a400:	b003      	add	sp, #12
 801a402:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801a408 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801a408:	4b01      	ldr	r3, [pc, #4]	; (801a410 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801a40a:	6018      	str	r0, [r3, #0]
 801a40c:	4770      	bx	lr
 801a40e:	bf00      	nop
 801a410:	2001389c 	.word	0x2001389c

0801a414 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801a414:	4b06      	ldr	r3, [pc, #24]	; (801a430 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801a416:	881a      	ldrh	r2, [r3, #0]
 801a418:	4282      	cmp	r2, r0
 801a41a:	d807      	bhi.n	801a42c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801a41c:	4b05      	ldr	r3, [pc, #20]	; (801a434 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801a41e:	881b      	ldrh	r3, [r3, #0]
 801a420:	4413      	add	r3, r2
 801a422:	4298      	cmp	r0, r3
 801a424:	bfac      	ite	ge
 801a426:	2000      	movge	r0, #0
 801a428:	2001      	movlt	r0, #1
 801a42a:	4770      	bx	lr
 801a42c:	2000      	movs	r0, #0
 801a42e:	4770      	bx	lr
 801a430:	200138bc 	.word	0x200138bc
 801a434:	200138c0 	.word	0x200138c0

0801a438 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801a438:	b508      	push	{r3, lr}
 801a43a:	4601      	mov	r1, r0
 801a43c:	f7ff ffea 	bl	801a414 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801a440:	b118      	cbz	r0, 801a44a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801a442:	4b02      	ldr	r3, [pc, #8]	; (801a44c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801a444:	681b      	ldr	r3, [r3, #0]
 801a446:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801a44a:	bd08      	pop	{r3, pc}
 801a44c:	200138a0 	.word	0x200138a0

0801a450 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801a450:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a452:	4c24      	ldr	r4, [pc, #144]	; (801a4e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801a454:	6823      	ldr	r3, [r4, #0]
 801a456:	2b00      	cmp	r3, #0
 801a458:	d042      	beq.n	801a4e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a45a:	4a23      	ldr	r2, [pc, #140]	; (801a4e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 801a45c:	4d23      	ldr	r5, [pc, #140]	; (801a4ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801a45e:	8811      	ldrh	r1, [r2, #0]
 801a460:	f8b5 c000 	ldrh.w	ip, [r5]
 801a464:	4822      	ldr	r0, [pc, #136]	; (801a4f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801a466:	4461      	add	r1, ip
 801a468:	1c4a      	adds	r2, r1, #1
 801a46a:	f022 0201 	bic.w	r2, r2, #1
 801a46e:	008f      	lsls	r7, r1, #2
 801a470:	0412      	lsls	r2, r2, #16
 801a472:	19de      	adds	r6, r3, r7
 801a474:	0c12      	lsrs	r2, r2, #16
 801a476:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801a47a:	6006      	str	r6, [r0, #0]
 801a47c:	4e1d      	ldr	r6, [pc, #116]	; (801a4f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801a47e:	19da      	adds	r2, r3, r7
 801a480:	6032      	str	r2, [r6, #0]
 801a482:	220e      	movs	r2, #14
 801a484:	fb02 f20c 	mul.w	r2, r2, ip
 801a488:	3203      	adds	r2, #3
 801a48a:	f022 0203 	bic.w	r2, r2, #3
 801a48e:	443a      	add	r2, r7
 801a490:	4f19      	ldr	r7, [pc, #100]	; (801a4f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801a492:	4413      	add	r3, r2
 801a494:	603b      	str	r3, [r7, #0]
 801a496:	4f19      	ldr	r7, [pc, #100]	; (801a4fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801a498:	2300      	movs	r3, #0
 801a49a:	803b      	strh	r3, [r7, #0]
 801a49c:	4f18      	ldr	r7, [pc, #96]	; (801a500 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801a49e:	683f      	ldr	r7, [r7, #0]
 801a4a0:	1aba      	subs	r2, r7, r2
 801a4a2:	4f18      	ldr	r7, [pc, #96]	; (801a504 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801a4a4:	603a      	str	r2, [r7, #0]
 801a4a6:	4a18      	ldr	r2, [pc, #96]	; (801a508 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801a4a8:	469c      	mov	ip, r3
 801a4aa:	8013      	strh	r3, [r2, #0]
 801a4ac:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801a4b0:	428b      	cmp	r3, r1
 801a4b2:	d10d      	bne.n	801a4d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 801a4b4:	882d      	ldrh	r5, [r5, #0]
 801a4b6:	6830      	ldr	r0, [r6, #0]
 801a4b8:	2300      	movs	r3, #0
 801a4ba:	240e      	movs	r4, #14
 801a4bc:	429d      	cmp	r5, r3
 801a4be:	d90f      	bls.n	801a4e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801a4c0:	fb04 0203 	mla	r2, r4, r3, r0
 801a4c4:	3301      	adds	r3, #1
 801a4c6:	7b11      	ldrb	r1, [r2, #12]
 801a4c8:	f36f 1145 	bfc	r1, #5, #1
 801a4cc:	7311      	strb	r1, [r2, #12]
 801a4ce:	e7f5      	b.n	801a4bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801a4d0:	6822      	ldr	r2, [r4, #0]
 801a4d2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801a4d6:	6802      	ldr	r2, [r0, #0]
 801a4d8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801a4dc:	3301      	adds	r3, #1
 801a4de:	e7e7      	b.n	801a4b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801a4e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a4e2:	bf00      	nop
 801a4e4:	200138a0 	.word	0x200138a0
 801a4e8:	200138bc 	.word	0x200138bc
 801a4ec:	200138c0 	.word	0x200138c0
 801a4f0:	200138b4 	.word	0x200138b4
 801a4f4:	200138a4 	.word	0x200138a4
 801a4f8:	200138ac 	.word	0x200138ac
 801a4fc:	200138be 	.word	0x200138be
 801a500:	200138a8 	.word	0x200138a8
 801a504:	200138b8 	.word	0x200138b8
 801a508:	200138b0 	.word	0x200138b0

0801a50c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801a50c:	4b06      	ldr	r3, [pc, #24]	; (801a528 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801a50e:	681b      	ldr	r3, [r3, #0]
 801a510:	b943      	cbnz	r3, 801a524 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a512:	b139      	cbz	r1, 801a524 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a514:	4b05      	ldr	r3, [pc, #20]	; (801a52c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801a516:	801a      	strh	r2, [r3, #0]
 801a518:	4b05      	ldr	r3, [pc, #20]	; (801a530 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801a51a:	6019      	str	r1, [r3, #0]
 801a51c:	4b05      	ldr	r3, [pc, #20]	; (801a534 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801a51e:	6018      	str	r0, [r3, #0]
 801a520:	f7ff bf96 	b.w	801a450 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801a524:	4770      	bx	lr
 801a526:	bf00      	nop
 801a528:	200138ac 	.word	0x200138ac
 801a52c:	200138c0 	.word	0x200138c0
 801a530:	200138a8 	.word	0x200138a8
 801a534:	200138a0 	.word	0x200138a0

0801a538 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801a538:	b470      	push	{r4, r5, r6}
 801a53a:	4c07      	ldr	r4, [pc, #28]	; (801a558 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801a53c:	6826      	ldr	r6, [r4, #0]
 801a53e:	4605      	mov	r5, r0
 801a540:	4610      	mov	r0, r2
 801a542:	9a03      	ldr	r2, [sp, #12]
 801a544:	b936      	cbnz	r6, 801a554 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801a546:	6025      	str	r5, [r4, #0]
 801a548:	4c04      	ldr	r4, [pc, #16]	; (801a55c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801a54a:	8021      	strh	r1, [r4, #0]
 801a54c:	bc70      	pop	{r4, r5, r6}
 801a54e:	4619      	mov	r1, r3
 801a550:	f7ff bfdc 	b.w	801a50c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801a554:	bc70      	pop	{r4, r5, r6}
 801a556:	4770      	bx	lr
 801a558:	200138c4 	.word	0x200138c4
 801a55c:	200138bc 	.word	0x200138bc

0801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801a560:	4a12      	ldr	r2, [pc, #72]	; (801a5ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801a562:	8803      	ldrh	r3, [r0, #0]
 801a564:	8812      	ldrh	r2, [r2, #0]
 801a566:	4293      	cmp	r3, r2
 801a568:	d207      	bcs.n	801a57a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801a56a:	4a11      	ldr	r2, [pc, #68]	; (801a5b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801a56c:	6812      	ldr	r2, [r2, #0]
 801a56e:	2114      	movs	r1, #20
 801a570:	fb01 2303 	mla	r3, r1, r3, r2
 801a574:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801a578:	4770      	bx	lr
 801a57a:	490e      	ldr	r1, [pc, #56]	; (801a5b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801a57c:	8809      	ldrh	r1, [r1, #0]
 801a57e:	4411      	add	r1, r2
 801a580:	428b      	cmp	r3, r1
 801a582:	da04      	bge.n	801a58e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801a584:	1a9b      	subs	r3, r3, r2
 801a586:	4a0c      	ldr	r2, [pc, #48]	; (801a5b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801a588:	210e      	movs	r1, #14
 801a58a:	6812      	ldr	r2, [r2, #0]
 801a58c:	e7f0      	b.n	801a570 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801a58e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a592:	4293      	cmp	r3, r2
 801a594:	d108      	bne.n	801a5a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801a596:	4b09      	ldr	r3, [pc, #36]	; (801a5bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801a598:	781b      	ldrb	r3, [r3, #0]
 801a59a:	b91b      	cbnz	r3, 801a5a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801a59c:	4b08      	ldr	r3, [pc, #32]	; (801a5c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801a59e:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a5a2:	4770      	bx	lr
 801a5a4:	4b07      	ldr	r3, [pc, #28]	; (801a5c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801a5a6:	e7fa      	b.n	801a59e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801a5a8:	2000      	movs	r0, #0
 801a5aa:	4770      	bx	lr
 801a5ac:	200138bc 	.word	0x200138bc
 801a5b0:	200138c4 	.word	0x200138c4
 801a5b4:	200138c0 	.word	0x200138c0
 801a5b8:	200138a4 	.word	0x200138a4
 801a5bc:	2001382c 	.word	0x2001382c
 801a5c0:	2001382e 	.word	0x2001382e
 801a5c4:	20013830 	.word	0x20013830

0801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801a5c8:	4a12      	ldr	r2, [pc, #72]	; (801a614 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801a5ca:	8803      	ldrh	r3, [r0, #0]
 801a5cc:	8812      	ldrh	r2, [r2, #0]
 801a5ce:	4293      	cmp	r3, r2
 801a5d0:	d207      	bcs.n	801a5e2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801a5d2:	4a11      	ldr	r2, [pc, #68]	; (801a618 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801a5d4:	6812      	ldr	r2, [r2, #0]
 801a5d6:	2114      	movs	r1, #20
 801a5d8:	fb01 2303 	mla	r3, r1, r3, r2
 801a5dc:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801a5e0:	4770      	bx	lr
 801a5e2:	490e      	ldr	r1, [pc, #56]	; (801a61c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801a5e4:	8809      	ldrh	r1, [r1, #0]
 801a5e6:	4411      	add	r1, r2
 801a5e8:	428b      	cmp	r3, r1
 801a5ea:	da04      	bge.n	801a5f6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801a5ec:	1a9b      	subs	r3, r3, r2
 801a5ee:	4a0c      	ldr	r2, [pc, #48]	; (801a620 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801a5f0:	210e      	movs	r1, #14
 801a5f2:	6812      	ldr	r2, [r2, #0]
 801a5f4:	e7f0      	b.n	801a5d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801a5f6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a5fa:	4293      	cmp	r3, r2
 801a5fc:	d108      	bne.n	801a610 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801a5fe:	4b09      	ldr	r3, [pc, #36]	; (801a624 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801a600:	781b      	ldrb	r3, [r3, #0]
 801a602:	b91b      	cbnz	r3, 801a60c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801a604:	4b08      	ldr	r3, [pc, #32]	; (801a628 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801a606:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a60a:	4770      	bx	lr
 801a60c:	4b07      	ldr	r3, [pc, #28]	; (801a62c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801a60e:	e7fa      	b.n	801a606 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801a610:	2000      	movs	r0, #0
 801a612:	4770      	bx	lr
 801a614:	200138bc 	.word	0x200138bc
 801a618:	200138c4 	.word	0x200138c4
 801a61c:	200138c0 	.word	0x200138c0
 801a620:	200138a4 	.word	0x200138a4
 801a624:	2001382c 	.word	0x2001382c
 801a628:	20013830 	.word	0x20013830
 801a62c:	2001382e 	.word	0x2001382e

0801a630 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801a630:	b510      	push	{r4, lr}
 801a632:	4a1f      	ldr	r2, [pc, #124]	; (801a6b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801a634:	880b      	ldrh	r3, [r1, #0]
 801a636:	8812      	ldrh	r2, [r2, #0]
 801a638:	4293      	cmp	r3, r2
 801a63a:	d213      	bcs.n	801a664 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801a63c:	4a1d      	ldr	r2, [pc, #116]	; (801a6b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801a63e:	6812      	ldr	r2, [r2, #0]
 801a640:	2114      	movs	r1, #20
 801a642:	fb01 2303 	mla	r3, r1, r3, r2
 801a646:	8a1a      	ldrh	r2, [r3, #16]
 801a648:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801a64c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801a650:	8a5b      	ldrh	r3, [r3, #18]
 801a652:	8004      	strh	r4, [r0, #0]
 801a654:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a658:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801a65c:	8041      	strh	r1, [r0, #2]
 801a65e:	8082      	strh	r2, [r0, #4]
 801a660:	80c3      	strh	r3, [r0, #6]
 801a662:	e00e      	b.n	801a682 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a664:	4914      	ldr	r1, [pc, #80]	; (801a6b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801a666:	8809      	ldrh	r1, [r1, #0]
 801a668:	4411      	add	r1, r2
 801a66a:	428b      	cmp	r3, r1
 801a66c:	da0a      	bge.n	801a684 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801a66e:	1a9b      	subs	r3, r3, r2
 801a670:	4a12      	ldr	r2, [pc, #72]	; (801a6bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801a672:	6812      	ldr	r2, [r2, #0]
 801a674:	210e      	movs	r1, #14
 801a676:	fb01 2303 	mla	r3, r1, r3, r2
 801a67a:	681a      	ldr	r2, [r3, #0]
 801a67c:	6002      	str	r2, [r0, #0]
 801a67e:	685a      	ldr	r2, [r3, #4]
 801a680:	6042      	str	r2, [r0, #4]
 801a682:	bd10      	pop	{r4, pc}
 801a684:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a688:	4293      	cmp	r3, r2
 801a68a:	d10b      	bne.n	801a6a4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801a68c:	4b0c      	ldr	r3, [pc, #48]	; (801a6c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801a68e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801a692:	4b0c      	ldr	r3, [pc, #48]	; (801a6c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801a694:	8081      	strh	r1, [r0, #4]
 801a696:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a69a:	80c2      	strh	r2, [r0, #6]
 801a69c:	2300      	movs	r3, #0
 801a69e:	8003      	strh	r3, [r0, #0]
 801a6a0:	8043      	strh	r3, [r0, #2]
 801a6a2:	e7ee      	b.n	801a682 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a6a4:	2300      	movs	r3, #0
 801a6a6:	8003      	strh	r3, [r0, #0]
 801a6a8:	8043      	strh	r3, [r0, #2]
 801a6aa:	8083      	strh	r3, [r0, #4]
 801a6ac:	e7d8      	b.n	801a660 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801a6ae:	bf00      	nop
 801a6b0:	200138bc 	.word	0x200138bc
 801a6b4:	200138c4 	.word	0x200138c4
 801a6b8:	200138c0 	.word	0x200138c0
 801a6bc:	200138a4 	.word	0x200138a4
 801a6c0:	20013828 	.word	0x20013828
 801a6c4:	2001382a 	.word	0x2001382a

0801a6c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801a6c8:	4a17      	ldr	r2, [pc, #92]	; (801a728 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801a6ca:	8803      	ldrh	r3, [r0, #0]
 801a6cc:	8812      	ldrh	r2, [r2, #0]
 801a6ce:	4293      	cmp	r3, r2
 801a6d0:	d213      	bcs.n	801a6fa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801a6d2:	4a16      	ldr	r2, [pc, #88]	; (801a72c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801a6d4:	6812      	ldr	r2, [r2, #0]
 801a6d6:	2114      	movs	r1, #20
 801a6d8:	fb01 2303 	mla	r3, r1, r3, r2
 801a6dc:	8a1a      	ldrh	r2, [r3, #16]
 801a6de:	8919      	ldrh	r1, [r3, #8]
 801a6e0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a6e4:	428a      	cmp	r2, r1
 801a6e6:	db1d      	blt.n	801a724 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a6e8:	8a58      	ldrh	r0, [r3, #18]
 801a6ea:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801a6ee:	895b      	ldrh	r3, [r3, #10]
 801a6f0:	4298      	cmp	r0, r3
 801a6f2:	bfac      	ite	ge
 801a6f4:	2000      	movge	r0, #0
 801a6f6:	2001      	movlt	r0, #1
 801a6f8:	4770      	bx	lr
 801a6fa:	490d      	ldr	r1, [pc, #52]	; (801a730 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801a6fc:	8809      	ldrh	r1, [r1, #0]
 801a6fe:	4411      	add	r1, r2
 801a700:	428b      	cmp	r3, r1
 801a702:	da0d      	bge.n	801a720 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801a704:	1a9b      	subs	r3, r3, r2
 801a706:	4a0b      	ldr	r2, [pc, #44]	; (801a734 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801a708:	6812      	ldr	r2, [r2, #0]
 801a70a:	210e      	movs	r1, #14
 801a70c:	fb01 2303 	mla	r3, r1, r3, r2
 801a710:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801a714:	891a      	ldrh	r2, [r3, #8]
 801a716:	4291      	cmp	r1, r2
 801a718:	db04      	blt.n	801a724 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a71a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801a71e:	e7e6      	b.n	801a6ee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801a720:	2000      	movs	r0, #0
 801a722:	4770      	bx	lr
 801a724:	2001      	movs	r0, #1
 801a726:	4770      	bx	lr
 801a728:	200138bc 	.word	0x200138bc
 801a72c:	200138c4 	.word	0x200138c4
 801a730:	200138c0 	.word	0x200138c0
 801a734:	200138a4 	.word	0x200138a4

0801a738 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801a738:	4a12      	ldr	r2, [pc, #72]	; (801a784 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801a73a:	8803      	ldrh	r3, [r0, #0]
 801a73c:	8811      	ldrh	r1, [r2, #0]
 801a73e:	428b      	cmp	r3, r1
 801a740:	d20b      	bcs.n	801a75a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801a742:	4a11      	ldr	r2, [pc, #68]	; (801a788 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a744:	6812      	ldr	r2, [r2, #0]
 801a746:	b112      	cbz	r2, 801a74e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801a748:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a74c:	b9c0      	cbnz	r0, 801a780 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801a74e:	4a0f      	ldr	r2, [pc, #60]	; (801a78c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801a750:	6811      	ldr	r1, [r2, #0]
 801a752:	2214      	movs	r2, #20
 801a754:	4353      	muls	r3, r2
 801a756:	58c8      	ldr	r0, [r1, r3]
 801a758:	4770      	bx	lr
 801a75a:	4a0d      	ldr	r2, [pc, #52]	; (801a790 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801a75c:	8812      	ldrh	r2, [r2, #0]
 801a75e:	440a      	add	r2, r1
 801a760:	4293      	cmp	r3, r2
 801a762:	da04      	bge.n	801a76e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801a764:	4a08      	ldr	r2, [pc, #32]	; (801a788 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a766:	6812      	ldr	r2, [r2, #0]
 801a768:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a76c:	4770      	bx	lr
 801a76e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a772:	4293      	cmp	r3, r2
 801a774:	d103      	bne.n	801a77e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801a776:	4b07      	ldr	r3, [pc, #28]	; (801a794 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801a778:	681b      	ldr	r3, [r3, #0]
 801a77a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801a77c:	4770      	bx	lr
 801a77e:	2000      	movs	r0, #0
 801a780:	4770      	bx	lr
 801a782:	bf00      	nop
 801a784:	200138bc 	.word	0x200138bc
 801a788:	200138a0 	.word	0x200138a0
 801a78c:	200138c4 	.word	0x200138c4
 801a790:	200138c0 	.word	0x200138c0
 801a794:	20013834 	.word	0x20013834

0801a798 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801a798:	4b24      	ldr	r3, [pc, #144]	; (801a82c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801a79a:	8802      	ldrh	r2, [r0, #0]
 801a79c:	8818      	ldrh	r0, [r3, #0]
 801a79e:	4282      	cmp	r2, r0
 801a7a0:	d221      	bcs.n	801a7e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801a7a2:	4b23      	ldr	r3, [pc, #140]	; (801a830 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801a7a4:	6819      	ldr	r1, [r3, #0]
 801a7a6:	2314      	movs	r3, #20
 801a7a8:	fb03 1302 	mla	r3, r3, r2, r1
 801a7ac:	6858      	ldr	r0, [r3, #4]
 801a7ae:	2800      	cmp	r0, #0
 801a7b0:	d03a      	beq.n	801a828 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a7b2:	4920      	ldr	r1, [pc, #128]	; (801a834 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a7b4:	6809      	ldr	r1, [r1, #0]
 801a7b6:	2900      	cmp	r1, #0
 801a7b8:	d036      	beq.n	801a828 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a7ba:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801a7be:	2900      	cmp	r1, #0
 801a7c0:	d032      	beq.n	801a828 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a7c2:	891a      	ldrh	r2, [r3, #8]
 801a7c4:	8958      	ldrh	r0, [r3, #10]
 801a7c6:	4350      	muls	r0, r2
 801a7c8:	7c5a      	ldrb	r2, [r3, #17]
 801a7ca:	7cdb      	ldrb	r3, [r3, #19]
 801a7cc:	0952      	lsrs	r2, r2, #5
 801a7ce:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801a7d2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801a7d6:	2b0b      	cmp	r3, #11
 801a7d8:	bf18      	it	ne
 801a7da:	0040      	lslne	r0, r0, #1
 801a7dc:	3003      	adds	r0, #3
 801a7de:	f020 0003 	bic.w	r0, r0, #3
 801a7e2:	4408      	add	r0, r1
 801a7e4:	4770      	bx	lr
 801a7e6:	4b14      	ldr	r3, [pc, #80]	; (801a838 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801a7e8:	881b      	ldrh	r3, [r3, #0]
 801a7ea:	4403      	add	r3, r0
 801a7ec:	429a      	cmp	r2, r3
 801a7ee:	da1a      	bge.n	801a826 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a7f0:	4b12      	ldr	r3, [pc, #72]	; (801a83c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801a7f2:	681b      	ldr	r3, [r3, #0]
 801a7f4:	1a10      	subs	r0, r2, r0
 801a7f6:	210e      	movs	r1, #14
 801a7f8:	fb01 3000 	mla	r0, r1, r0, r3
 801a7fc:	7b03      	ldrb	r3, [r0, #12]
 801a7fe:	f003 031f 	and.w	r3, r3, #31
 801a802:	2b0b      	cmp	r3, #11
 801a804:	d10b      	bne.n	801a81e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801a806:	8903      	ldrh	r3, [r0, #8]
 801a808:	8940      	ldrh	r0, [r0, #10]
 801a80a:	4358      	muls	r0, r3
 801a80c:	4b09      	ldr	r3, [pc, #36]	; (801a834 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a80e:	6819      	ldr	r1, [r3, #0]
 801a810:	3003      	adds	r0, #3
 801a812:	f020 0303 	bic.w	r3, r0, #3
 801a816:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801a81a:	4418      	add	r0, r3
 801a81c:	4770      	bx	lr
 801a81e:	2b0d      	cmp	r3, #13
 801a820:	d101      	bne.n	801a826 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a822:	300d      	adds	r0, #13
 801a824:	4770      	bx	lr
 801a826:	2000      	movs	r0, #0
 801a828:	4770      	bx	lr
 801a82a:	bf00      	nop
 801a82c:	200138bc 	.word	0x200138bc
 801a830:	200138c4 	.word	0x200138c4
 801a834:	200138a0 	.word	0x200138a0
 801a838:	200138c0 	.word	0x200138c0
 801a83c:	200138a4 	.word	0x200138a4

0801a840 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801a840:	b510      	push	{r4, lr}
 801a842:	4a17      	ldr	r2, [pc, #92]	; (801a8a0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801a844:	8803      	ldrh	r3, [r0, #0]
 801a846:	8812      	ldrh	r2, [r2, #0]
 801a848:	4293      	cmp	r3, r2
 801a84a:	d20c      	bcs.n	801a866 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801a84c:	4a15      	ldr	r2, [pc, #84]	; (801a8a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801a84e:	6812      	ldr	r2, [r2, #0]
 801a850:	2114      	movs	r1, #20
 801a852:	fb01 2303 	mla	r3, r1, r3, r2
 801a856:	7c58      	ldrb	r0, [r3, #17]
 801a858:	0942      	lsrs	r2, r0, #5
 801a85a:	7cd8      	ldrb	r0, [r3, #19]
 801a85c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801a860:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801a864:	bd10      	pop	{r4, pc}
 801a866:	4910      	ldr	r1, [pc, #64]	; (801a8a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801a868:	8809      	ldrh	r1, [r1, #0]
 801a86a:	4411      	add	r1, r2
 801a86c:	428b      	cmp	r3, r1
 801a86e:	da09      	bge.n	801a884 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801a870:	1a9b      	subs	r3, r3, r2
 801a872:	4a0e      	ldr	r2, [pc, #56]	; (801a8ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801a874:	6812      	ldr	r2, [r2, #0]
 801a876:	210e      	movs	r1, #14
 801a878:	fb01 2303 	mla	r3, r1, r3, r2
 801a87c:	7b18      	ldrb	r0, [r3, #12]
 801a87e:	f000 001f 	and.w	r0, r0, #31
 801a882:	e7ef      	b.n	801a864 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a884:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a888:	4293      	cmp	r3, r2
 801a88a:	d106      	bne.n	801a89a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801a88c:	f7ea f840 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 801a890:	6803      	ldr	r3, [r0, #0]
 801a892:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a898:	4718      	bx	r3
 801a89a:	2000      	movs	r0, #0
 801a89c:	e7e2      	b.n	801a864 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a89e:	bf00      	nop
 801a8a0:	200138bc 	.word	0x200138bc
 801a8a4:	200138c4 	.word	0x200138c4
 801a8a8:	200138c0 	.word	0x200138c0
 801a8ac:	200138a4 	.word	0x200138a4

0801a8b0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801a8b0:	2010      	movs	r0, #16
 801a8b2:	4770      	bx	lr

0801a8b4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801a8b4:	2000      	movs	r0, #0
 801a8b6:	4770      	bx	lr

0801a8b8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801a8b8:	4b02      	ldr	r3, [pc, #8]	; (801a8c4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801a8ba:	8818      	ldrh	r0, [r3, #0]
 801a8bc:	0040      	lsls	r0, r0, #1
 801a8be:	b280      	uxth	r0, r0
 801a8c0:	4770      	bx	lr
 801a8c2:	bf00      	nop
 801a8c4:	2001382e 	.word	0x2001382e

0801a8c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801a8c8:	2bff      	cmp	r3, #255	; 0xff
 801a8ca:	d050      	beq.n	801a96e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801a8cc:	2a0b      	cmp	r2, #11
 801a8ce:	d04a      	beq.n	801a966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a8d0:	d80e      	bhi.n	801a8f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801a8d2:	2a03      	cmp	r2, #3
 801a8d4:	d03f      	beq.n	801a956 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801a8d6:	d804      	bhi.n	801a8e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801a8d8:	2a01      	cmp	r2, #1
 801a8da:	d03e      	beq.n	801a95a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801a8dc:	d93f      	bls.n	801a95e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801a8de:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801a8e0:	4770      	bx	lr
 801a8e2:	2a09      	cmp	r2, #9
 801a8e4:	d03f      	beq.n	801a966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a8e6:	d83c      	bhi.n	801a962 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a8e8:	2a08      	cmp	r2, #8
 801a8ea:	d03a      	beq.n	801a962 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a8ec:	2000      	movs	r0, #0
 801a8ee:	4770      	bx	lr
 801a8f0:	2a2f      	cmp	r2, #47	; 0x2f
 801a8f2:	d024      	beq.n	801a93e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801a8f4:	d80d      	bhi.n	801a912 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801a8f6:	2a2d      	cmp	r2, #45	; 0x2d
 801a8f8:	d014      	beq.n	801a924 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801a8fa:	d826      	bhi.n	801a94a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801a8fc:	2a2c      	cmp	r2, #44	; 0x2c
 801a8fe:	d1f5      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a900:	684b      	ldr	r3, [r1, #4]
 801a902:	781b      	ldrb	r3, [r3, #0]
 801a904:	2b01      	cmp	r3, #1
 801a906:	d018      	beq.n	801a93a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801a908:	d323      	bcc.n	801a952 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801a90a:	2b02      	cmp	r3, #2
 801a90c:	d1ee      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a90e:	6880      	ldr	r0, [r0, #8]
 801a910:	4770      	bx	lr
 801a912:	2a31      	cmp	r2, #49	; 0x31
 801a914:	d004      	beq.n	801a920 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801a916:	d328      	bcc.n	801a96a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a918:	2a32      	cmp	r2, #50	; 0x32
 801a91a:	d026      	beq.n	801a96a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a91c:	2a33      	cmp	r2, #51	; 0x33
 801a91e:	d1e5      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a920:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801a922:	4770      	bx	lr
 801a924:	684b      	ldr	r3, [r1, #4]
 801a926:	781b      	ldrb	r3, [r3, #0]
 801a928:	2b01      	cmp	r3, #1
 801a92a:	d004      	beq.n	801a936 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801a92c:	d30b      	bcc.n	801a946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a92e:	2b02      	cmp	r3, #2
 801a930:	d1dc      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a932:	6900      	ldr	r0, [r0, #16]
 801a934:	4770      	bx	lr
 801a936:	6a00      	ldr	r0, [r0, #32]
 801a938:	4770      	bx	lr
 801a93a:	6980      	ldr	r0, [r0, #24]
 801a93c:	4770      	bx	lr
 801a93e:	684b      	ldr	r3, [r1, #4]
 801a940:	781b      	ldrb	r3, [r3, #0]
 801a942:	2b00      	cmp	r3, #0
 801a944:	d1d2      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a946:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801a948:	4770      	bx	lr
 801a94a:	684b      	ldr	r3, [r1, #4]
 801a94c:	781b      	ldrb	r3, [r3, #0]
 801a94e:	2b00      	cmp	r3, #0
 801a950:	d1cc      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a952:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801a954:	4770      	bx	lr
 801a956:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801a958:	4770      	bx	lr
 801a95a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801a95c:	4770      	bx	lr
 801a95e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801a960:	4770      	bx	lr
 801a962:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801a964:	4770      	bx	lr
 801a966:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801a968:	4770      	bx	lr
 801a96a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801a96c:	4770      	bx	lr
 801a96e:	2a0b      	cmp	r2, #11
 801a970:	d049      	beq.n	801aa06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a972:	d80e      	bhi.n	801a992 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801a974:	2a03      	cmp	r2, #3
 801a976:	d040      	beq.n	801a9fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801a978:	d804      	bhi.n	801a984 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801a97a:	2a01      	cmp	r2, #1
 801a97c:	d03f      	beq.n	801a9fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801a97e:	d940      	bls.n	801aa02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801a980:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801a982:	4770      	bx	lr
 801a984:	2a09      	cmp	r2, #9
 801a986:	d03e      	beq.n	801aa06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a988:	d801      	bhi.n	801a98e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801a98a:	2a08      	cmp	r2, #8
 801a98c:	d1ae      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a98e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801a990:	4770      	bx	lr
 801a992:	2a2f      	cmp	r2, #47	; 0x2f
 801a994:	d024      	beq.n	801a9e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801a996:	d80d      	bhi.n	801a9b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801a998:	2a2d      	cmp	r2, #45	; 0x2d
 801a99a:	d014      	beq.n	801a9c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801a99c:	d826      	bhi.n	801a9ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801a99e:	2a2c      	cmp	r2, #44	; 0x2c
 801a9a0:	d1a4      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9a2:	684b      	ldr	r3, [r1, #4]
 801a9a4:	781b      	ldrb	r3, [r3, #0]
 801a9a6:	2b01      	cmp	r3, #1
 801a9a8:	d018      	beq.n	801a9dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801a9aa:	d324      	bcc.n	801a9f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801a9ac:	2b02      	cmp	r3, #2
 801a9ae:	d19d      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9b0:	68c0      	ldr	r0, [r0, #12]
 801a9b2:	4770      	bx	lr
 801a9b4:	2a31      	cmp	r2, #49	; 0x31
 801a9b6:	d004      	beq.n	801a9c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801a9b8:	d327      	bcc.n	801aa0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a9ba:	2a32      	cmp	r2, #50	; 0x32
 801a9bc:	d025      	beq.n	801aa0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a9be:	2a33      	cmp	r2, #51	; 0x33
 801a9c0:	d194      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9c2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801a9c4:	4770      	bx	lr
 801a9c6:	684b      	ldr	r3, [r1, #4]
 801a9c8:	781b      	ldrb	r3, [r3, #0]
 801a9ca:	2b01      	cmp	r3, #1
 801a9cc:	d004      	beq.n	801a9d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801a9ce:	d30b      	bcc.n	801a9e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801a9d0:	2b02      	cmp	r3, #2
 801a9d2:	d18b      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9d4:	6940      	ldr	r0, [r0, #20]
 801a9d6:	4770      	bx	lr
 801a9d8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801a9da:	4770      	bx	lr
 801a9dc:	69c0      	ldr	r0, [r0, #28]
 801a9de:	4770      	bx	lr
 801a9e0:	684b      	ldr	r3, [r1, #4]
 801a9e2:	781b      	ldrb	r3, [r3, #0]
 801a9e4:	2b00      	cmp	r3, #0
 801a9e6:	d181      	bne.n	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9e8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801a9ea:	4770      	bx	lr
 801a9ec:	684b      	ldr	r3, [r1, #4]
 801a9ee:	781b      	ldrb	r3, [r3, #0]
 801a9f0:	2b00      	cmp	r3, #0
 801a9f2:	f47f af7b 	bne.w	801a8ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a9f6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801a9f8:	4770      	bx	lr
 801a9fa:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801a9fc:	4770      	bx	lr
 801a9fe:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801aa00:	4770      	bx	lr
 801aa02:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801aa04:	4770      	bx	lr
 801aa06:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801aa08:	4770      	bx	lr
 801aa0a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801aa0c:	4770      	bx	lr

0801aa0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa12:	b087      	sub	sp, #28
 801aa14:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aa16:	9205      	str	r2, [sp, #20]
 801aa18:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801aa1c:	9202      	str	r2, [sp, #8]
 801aa1e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801aa22:	9101      	str	r1, [sp, #4]
 801aa24:	6841      	ldr	r1, [r0, #4]
 801aa26:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801aa2a:	fb01 2404 	mla	r4, r1, r4, r2
 801aa2e:	6802      	ldr	r2, [r0, #0]
 801aa30:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aa34:	f8de 2000 	ldr.w	r2, [lr]
 801aa38:	9203      	str	r2, [sp, #12]
 801aa3a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801aa3e:	3204      	adds	r2, #4
 801aa40:	9204      	str	r2, [sp, #16]
 801aa42:	9a02      	ldr	r2, [sp, #8]
 801aa44:	43d6      	mvns	r6, r2
 801aa46:	b2f6      	uxtb	r6, r6
 801aa48:	9a01      	ldr	r2, [sp, #4]
 801aa4a:	2a00      	cmp	r2, #0
 801aa4c:	dc03      	bgt.n	801aa56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801aa4e:	9a05      	ldr	r2, [sp, #20]
 801aa50:	2a00      	cmp	r2, #0
 801aa52:	f340 8129 	ble.w	801aca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801aa56:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aa58:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801aa5c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801aa60:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa64:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aa66:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801aa6a:	2b00      	cmp	r3, #0
 801aa6c:	dd0e      	ble.n	801aa8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801aa6e:	1408      	asrs	r0, r1, #16
 801aa70:	d405      	bmi.n	801aa7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa72:	4560      	cmp	r0, ip
 801aa74:	da03      	bge.n	801aa7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa76:	1410      	asrs	r0, r2, #16
 801aa78:	d401      	bmi.n	801aa7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa7a:	42b8      	cmp	r0, r7
 801aa7c:	db07      	blt.n	801aa8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801aa7e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801aa80:	4401      	add	r1, r0
 801aa82:	9814      	ldr	r0, [sp, #80]	; 0x50
 801aa84:	3b01      	subs	r3, #1
 801aa86:	4402      	add	r2, r0
 801aa88:	3402      	adds	r4, #2
 801aa8a:	e7ee      	b.n	801aa6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801aa8c:	d071      	beq.n	801ab72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aa8e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aa90:	1e58      	subs	r0, r3, #1
 801aa92:	fb05 1500 	mla	r5, r5, r0, r1
 801aa96:	142d      	asrs	r5, r5, #16
 801aa98:	d45f      	bmi.n	801ab5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aa9a:	4565      	cmp	r5, ip
 801aa9c:	da5d      	bge.n	801ab5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aa9e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aaa0:	fb05 2000 	mla	r0, r5, r0, r2
 801aaa4:	1400      	asrs	r0, r0, #16
 801aaa6:	d458      	bmi.n	801ab5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aaa8:	42b8      	cmp	r0, r7
 801aaaa:	da56      	bge.n	801ab5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801aaac:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801aab0:	4699      	mov	r9, r3
 801aab2:	46a2      	mov	sl, r4
 801aab4:	f1b9 0f00 	cmp.w	r9, #0
 801aab8:	dd57      	ble.n	801ab6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801aaba:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801aabe:	9803      	ldr	r0, [sp, #12]
 801aac0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801aac4:	140d      	asrs	r5, r1, #16
 801aac6:	fb07 000c 	mla	r0, r7, ip, r0
 801aaca:	f109 39ff 	add.w	r9, r9, #4294967295
 801aace:	5d40      	ldrb	r0, [r0, r5]
 801aad0:	9d04      	ldr	r5, [sp, #16]
 801aad2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801aad6:	f8ba 5000 	ldrh.w	r5, [sl]
 801aada:	122f      	asrs	r7, r5, #8
 801aadc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801aae0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aae4:	fb17 f706 	smulbb	r7, r7, r6
 801aae8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801aaec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801aaf0:	00ed      	lsls	r5, r5, #3
 801aaf2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801aaf6:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801aafa:	10c7      	asrs	r7, r0, #3
 801aafc:	b2ed      	uxtb	r5, r5
 801aafe:	00c0      	lsls	r0, r0, #3
 801ab00:	fb18 f806 	smulbb	r8, r8, r6
 801ab04:	fb15 f506 	smulbb	r5, r5, r6
 801ab08:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ab0c:	b2c0      	uxtb	r0, r0
 801ab0e:	fa1f fc8c 	uxth.w	ip, ip
 801ab12:	fb07 870b 	mla	r7, r7, fp, r8
 801ab16:	fb00 500b 	mla	r0, r0, fp, r5
 801ab1a:	b280      	uxth	r0, r0
 801ab1c:	b2bf      	uxth	r7, r7
 801ab1e:	f10c 0501 	add.w	r5, ip, #1
 801ab22:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ab26:	f107 0801 	add.w	r8, r7, #1
 801ab2a:	1c45      	adds	r5, r0, #1
 801ab2c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ab30:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ab34:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ab36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ab3a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ab3e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ab42:	ea45 0c0c 	orr.w	ip, r5, ip
 801ab46:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ab4a:	4401      	add	r1, r0
 801ab4c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ab4e:	ea4c 0c08 	orr.w	ip, ip, r8
 801ab52:	f82a cb02 	strh.w	ip, [sl], #2
 801ab56:	4402      	add	r2, r0
 801ab58:	e7ac      	b.n	801aab4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ab5a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801ab5e:	f04f 0800 	mov.w	r8, #0
 801ab62:	eb03 0008 	add.w	r0, r3, r8
 801ab66:	2800      	cmp	r0, #0
 801ab68:	dc41      	bgt.n	801abee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ab6a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ab6e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ab72:	9b01      	ldr	r3, [sp, #4]
 801ab74:	2b00      	cmp	r3, #0
 801ab76:	f340 8097 	ble.w	801aca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ab7a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab7e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ab82:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ab86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab88:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ab8c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ab90:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ab94:	eef0 6a62 	vmov.f32	s13, s5
 801ab98:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ab9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aba0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aba4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801aba8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abac:	eef0 6a43 	vmov.f32	s13, s6
 801abb0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abb4:	ee12 2a90 	vmov	r2, s5
 801abb8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abbc:	fb92 f3f3 	sdiv	r3, r2, r3
 801abc0:	ee13 2a10 	vmov	r2, s6
 801abc4:	9313      	str	r3, [sp, #76]	; 0x4c
 801abc6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abc8:	fb92 f3f3 	sdiv	r3, r2, r3
 801abcc:	9314      	str	r3, [sp, #80]	; 0x50
 801abce:	9b01      	ldr	r3, [sp, #4]
 801abd0:	9a05      	ldr	r2, [sp, #20]
 801abd2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abd6:	3b01      	subs	r3, #1
 801abd8:	9301      	str	r3, [sp, #4]
 801abda:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801abde:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801abe0:	eeb0 3a67 	vmov.f32	s6, s15
 801abe4:	bf08      	it	eq
 801abe6:	4613      	moveq	r3, r2
 801abe8:	eef0 2a47 	vmov.f32	s5, s14
 801abec:	e72c      	b.n	801aa48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801abee:	140f      	asrs	r7, r1, #16
 801abf0:	d453      	bmi.n	801ac9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801abf2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801abf6:	42bd      	cmp	r5, r7
 801abf8:	dd4f      	ble.n	801ac9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801abfa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801abfe:	d44c      	bmi.n	801ac9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ac00:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ac04:	4560      	cmp	r0, ip
 801ac06:	dd48      	ble.n	801ac9a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ac08:	9803      	ldr	r0, [sp, #12]
 801ac0a:	b22d      	sxth	r5, r5
 801ac0c:	fb0c 0505 	mla	r5, ip, r5, r0
 801ac10:	5de8      	ldrb	r0, [r5, r7]
 801ac12:	9d04      	ldr	r5, [sp, #16]
 801ac14:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ac18:	f06f 0501 	mvn.w	r5, #1
 801ac1c:	fb05 fb08 	mul.w	fp, r5, r8
 801ac20:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ac24:	f834 500b 	ldrh.w	r5, [r4, fp]
 801ac28:	122f      	asrs	r7, r5, #8
 801ac2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ac2e:	fb17 f706 	smulbb	r7, r7, r6
 801ac32:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ac36:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac3a:	00ed      	lsls	r5, r5, #3
 801ac3c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801ac40:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ac44:	10c7      	asrs	r7, r0, #3
 801ac46:	b2ed      	uxtb	r5, r5
 801ac48:	00c0      	lsls	r0, r0, #3
 801ac4a:	fb19 f906 	smulbb	r9, r9, r6
 801ac4e:	fb15 f506 	smulbb	r5, r5, r6
 801ac52:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ac56:	b2c0      	uxtb	r0, r0
 801ac58:	fa1f fc8c 	uxth.w	ip, ip
 801ac5c:	fb07 970a 	mla	r7, r7, sl, r9
 801ac60:	fb00 500a 	mla	r0, r0, sl, r5
 801ac64:	b2bf      	uxth	r7, r7
 801ac66:	b280      	uxth	r0, r0
 801ac68:	f10c 0501 	add.w	r5, ip, #1
 801ac6c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ac70:	f107 0901 	add.w	r9, r7, #1
 801ac74:	1c45      	adds	r5, r0, #1
 801ac76:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ac7a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ac7e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac82:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ac86:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ac8a:	ea45 0c0c 	orr.w	ip, r5, ip
 801ac8e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ac92:	ea4c 0c09 	orr.w	ip, ip, r9
 801ac96:	f824 c00b 	strh.w	ip, [r4, fp]
 801ac9a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ac9c:	4401      	add	r1, r0
 801ac9e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801aca0:	f108 38ff 	add.w	r8, r8, #4294967295
 801aca4:	4402      	add	r2, r0
 801aca6:	e75c      	b.n	801ab62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801aca8:	b007      	add	sp, #28
 801acaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801acae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801acae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acb2:	b085      	sub	sp, #20
 801acb4:	4693      	mov	fp, r2
 801acb6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801acb8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801acba:	6870      	ldr	r0, [r6, #4]
 801acbc:	9100      	str	r1, [sp, #0]
 801acbe:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801acc2:	fb00 2404 	mla	r4, r0, r4, r2
 801acc6:	6832      	ldr	r2, [r6, #0]
 801acc8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801accc:	682a      	ldr	r2, [r5, #0]
 801acce:	9201      	str	r2, [sp, #4]
 801acd0:	686a      	ldr	r2, [r5, #4]
 801acd2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801acd6:	3204      	adds	r2, #4
 801acd8:	9202      	str	r2, [sp, #8]
 801acda:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801acde:	9a00      	ldr	r2, [sp, #0]
 801ace0:	2a00      	cmp	r2, #0
 801ace2:	dc03      	bgt.n	801acec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ace4:	f1bb 0f00 	cmp.w	fp, #0
 801ace8:	f340 80a0 	ble.w	801ae2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801acec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801acee:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801acf2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801acf6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801acfa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801acfc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ad00:	2b00      	cmp	r3, #0
 801ad02:	dd0c      	ble.n	801ad1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ad04:	1406      	asrs	r6, r0, #16
 801ad06:	d405      	bmi.n	801ad14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad08:	454e      	cmp	r6, r9
 801ad0a:	da03      	bge.n	801ad14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad0c:	1416      	asrs	r6, r2, #16
 801ad0e:	d401      	bmi.n	801ad14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ad10:	4546      	cmp	r6, r8
 801ad12:	db05      	blt.n	801ad20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ad14:	4470      	add	r0, lr
 801ad16:	4462      	add	r2, ip
 801ad18:	3b01      	subs	r3, #1
 801ad1a:	3402      	adds	r4, #2
 801ad1c:	e7f0      	b.n	801ad00 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ad1e:	d00f      	beq.n	801ad40 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ad20:	1e5e      	subs	r6, r3, #1
 801ad22:	fb0e 0706 	mla	r7, lr, r6, r0
 801ad26:	143f      	asrs	r7, r7, #16
 801ad28:	d541      	bpl.n	801adae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801ad2a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801ad2e:	4698      	mov	r8, r3
 801ad30:	9603      	str	r6, [sp, #12]
 801ad32:	f1b8 0f00 	cmp.w	r8, #0
 801ad36:	dc59      	bgt.n	801adec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801ad38:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad3c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ad40:	9b00      	ldr	r3, [sp, #0]
 801ad42:	2b00      	cmp	r3, #0
 801ad44:	dd72      	ble.n	801ae2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ad46:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad4e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad54:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad58:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad5c:	eeb0 6a62 	vmov.f32	s12, s5
 801ad60:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad68:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad6c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801ad70:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad74:	eeb0 6a43 	vmov.f32	s12, s6
 801ad78:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad7c:	ee12 2a90 	vmov	r2, s5
 801ad80:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad84:	fb92 fef3 	sdiv	lr, r2, r3
 801ad88:	ee13 2a10 	vmov	r2, s6
 801ad8c:	fb92 fcf3 	sdiv	ip, r2, r3
 801ad90:	9b00      	ldr	r3, [sp, #0]
 801ad92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad96:	3b01      	subs	r3, #1
 801ad98:	9300      	str	r3, [sp, #0]
 801ad9a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ad9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ada0:	eeb0 3a67 	vmov.f32	s6, s15
 801ada4:	bf08      	it	eq
 801ada6:	465b      	moveq	r3, fp
 801ada8:	eef0 2a47 	vmov.f32	s5, s14
 801adac:	e797      	b.n	801acde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801adae:	454f      	cmp	r7, r9
 801adb0:	dabb      	bge.n	801ad2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801adb2:	fb0c 2606 	mla	r6, ip, r6, r2
 801adb6:	1436      	asrs	r6, r6, #16
 801adb8:	d4b7      	bmi.n	801ad2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801adba:	4546      	cmp	r6, r8
 801adbc:	dab5      	bge.n	801ad2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801adbe:	461e      	mov	r6, r3
 801adc0:	46a0      	mov	r8, r4
 801adc2:	2e00      	cmp	r6, #0
 801adc4:	ddb8      	ble.n	801ad38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801adc6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801adca:	9901      	ldr	r1, [sp, #4]
 801adcc:	1417      	asrs	r7, r2, #16
 801adce:	ea4f 4920 	mov.w	r9, r0, asr #16
 801add2:	fb0a 1707 	mla	r7, sl, r7, r1
 801add6:	9902      	ldr	r1, [sp, #8]
 801add8:	f817 7009 	ldrb.w	r7, [r7, r9]
 801addc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801ade0:	f828 7b02 	strh.w	r7, [r8], #2
 801ade4:	4470      	add	r0, lr
 801ade6:	4462      	add	r2, ip
 801ade8:	3e01      	subs	r6, #1
 801adea:	e7ea      	b.n	801adc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801adec:	ea5f 4920 	movs.w	r9, r0, asr #16
 801adf0:	d417      	bmi.n	801ae22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801adf2:	68ae      	ldr	r6, [r5, #8]
 801adf4:	454e      	cmp	r6, r9
 801adf6:	dd14      	ble.n	801ae22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801adf8:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801adfc:	d411      	bmi.n	801ae22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801adfe:	68ef      	ldr	r7, [r5, #12]
 801ae00:	4557      	cmp	r7, sl
 801ae02:	dd0e      	ble.n	801ae22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ae04:	9f01      	ldr	r7, [sp, #4]
 801ae06:	b236      	sxth	r6, r6
 801ae08:	fb0a 7606 	mla	r6, sl, r6, r7
 801ae0c:	9f02      	ldr	r7, [sp, #8]
 801ae0e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801ae12:	f06f 0101 	mvn.w	r1, #1
 801ae16:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801ae1a:	fb01 f608 	mul.w	r6, r1, r8
 801ae1e:	9903      	ldr	r1, [sp, #12]
 801ae20:	538f      	strh	r7, [r1, r6]
 801ae22:	4470      	add	r0, lr
 801ae24:	4462      	add	r2, ip
 801ae26:	f108 38ff 	add.w	r8, r8, #4294967295
 801ae2a:	e782      	b.n	801ad32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ae2c:	b005      	add	sp, #20
 801ae2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ae32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ae32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae36:	b087      	sub	sp, #28
 801ae38:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae3a:	9205      	str	r2, [sp, #20]
 801ae3c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ae40:	9203      	str	r2, [sp, #12]
 801ae42:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801ae46:	9102      	str	r1, [sp, #8]
 801ae48:	6861      	ldr	r1, [r4, #4]
 801ae4a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801ae4e:	fb01 2000 	mla	r0, r1, r0, r2
 801ae52:	6822      	ldr	r2, [r4, #0]
 801ae54:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801ae58:	9200      	str	r2, [sp, #0]
 801ae5a:	f8dc 2000 	ldr.w	r2, [ip]
 801ae5e:	9204      	str	r2, [sp, #16]
 801ae60:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801ae64:	3204      	adds	r2, #4
 801ae66:	9201      	str	r2, [sp, #4]
 801ae68:	9a03      	ldr	r2, [sp, #12]
 801ae6a:	43d5      	mvns	r5, r2
 801ae6c:	b2ed      	uxtb	r5, r5
 801ae6e:	9a02      	ldr	r2, [sp, #8]
 801ae70:	2a00      	cmp	r2, #0
 801ae72:	dc03      	bgt.n	801ae7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ae74:	9a05      	ldr	r2, [sp, #20]
 801ae76:	2a00      	cmp	r2, #0
 801ae78:	f340 812c 	ble.w	801b0d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ae7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ae7e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801ae82:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801ae86:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ae8a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ae8c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ae90:	2b00      	cmp	r3, #0
 801ae92:	dd10      	ble.n	801aeb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ae94:	140c      	asrs	r4, r1, #16
 801ae96:	d405      	bmi.n	801aea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ae98:	4574      	cmp	r4, lr
 801ae9a:	da03      	bge.n	801aea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ae9c:	1414      	asrs	r4, r2, #16
 801ae9e:	d401      	bmi.n	801aea4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801aea0:	42bc      	cmp	r4, r7
 801aea2:	db09      	blt.n	801aeb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801aea4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aea6:	9800      	ldr	r0, [sp, #0]
 801aea8:	4421      	add	r1, r4
 801aeaa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801aeac:	3002      	adds	r0, #2
 801aeae:	4422      	add	r2, r4
 801aeb0:	3b01      	subs	r3, #1
 801aeb2:	9000      	str	r0, [sp, #0]
 801aeb4:	e7ec      	b.n	801ae90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801aeb6:	d071      	beq.n	801af9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801aeb8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801aeba:	1e5c      	subs	r4, r3, #1
 801aebc:	fb06 1604 	mla	r6, r6, r4, r1
 801aec0:	1436      	asrs	r6, r6, #16
 801aec2:	d45d      	bmi.n	801af80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aec4:	4576      	cmp	r6, lr
 801aec6:	da5b      	bge.n	801af80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aec8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801aeca:	fb06 2404 	mla	r4, r6, r4, r2
 801aece:	1424      	asrs	r4, r4, #16
 801aed0:	d456      	bmi.n	801af80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aed2:	42bc      	cmp	r4, r7
 801aed4:	da54      	bge.n	801af80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801aed6:	f8dd 9000 	ldr.w	r9, [sp]
 801aeda:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801aede:	4698      	mov	r8, r3
 801aee0:	f1b8 0f00 	cmp.w	r8, #0
 801aee4:	dd54      	ble.n	801af90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801aee6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801aeea:	9804      	ldr	r0, [sp, #16]
 801aeec:	1414      	asrs	r4, r2, #16
 801aeee:	fb07 0404 	mla	r4, r7, r4, r0
 801aef2:	140e      	asrs	r6, r1, #16
 801aef4:	9801      	ldr	r0, [sp, #4]
 801aef6:	f814 e006 	ldrb.w	lr, [r4, r6]
 801aefa:	f8b9 4000 	ldrh.w	r4, [r9]
 801aefe:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801af02:	eb00 0b0e 	add.w	fp, r0, lr
 801af06:	1227      	asrs	r7, r4, #8
 801af08:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801af0c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801af10:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801af14:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801af16:	fb16 f60a 	smulbb	r6, r6, sl
 801af1a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801af1e:	fb07 6705 	mla	r7, r7, r5, r6
 801af22:	10e6      	asrs	r6, r4, #3
 801af24:	00e4      	lsls	r4, r4, #3
 801af26:	b2e4      	uxtb	r4, r4
 801af28:	fb1b fb0a 	smulbb	fp, fp, sl
 801af2c:	fb14 f405 	smulbb	r4, r4, r5
 801af30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801af34:	b2bf      	uxth	r7, r7
 801af36:	fb06 b605 	mla	r6, r6, r5, fp
 801af3a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801af3e:	b2b6      	uxth	r6, r6
 801af40:	fa1f fe8e 	uxth.w	lr, lr
 801af44:	1c7c      	adds	r4, r7, #1
 801af46:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801af4a:	f106 0b01 	add.w	fp, r6, #1
 801af4e:	f10e 0401 	add.w	r4, lr, #1
 801af52:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801af56:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801af5a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801af5e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801af62:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801af66:	4327      	orrs	r7, r4
 801af68:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801af6c:	4401      	add	r1, r0
 801af6e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801af70:	ea47 070b 	orr.w	r7, r7, fp
 801af74:	f829 7b02 	strh.w	r7, [r9], #2
 801af78:	4402      	add	r2, r0
 801af7a:	f108 38ff 	add.w	r8, r8, #4294967295
 801af7e:	e7af      	b.n	801aee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801af80:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801af84:	f04f 0e00 	mov.w	lr, #0
 801af88:	eb03 040e 	add.w	r4, r3, lr
 801af8c:	2c00      	cmp	r4, #0
 801af8e:	dc43      	bgt.n	801b018 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801af90:	9a00      	ldr	r2, [sp, #0]
 801af92:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801af9a:	9300      	str	r3, [sp, #0]
 801af9c:	9b02      	ldr	r3, [sp, #8]
 801af9e:	2b00      	cmp	r3, #0
 801afa0:	f340 8098 	ble.w	801b0d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801afa4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801afa8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801afac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801afb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801afb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801afb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801afba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801afbe:	eef0 6a62 	vmov.f32	s13, s5
 801afc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801afc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801afca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801afce:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801afd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801afd6:	eef0 6a43 	vmov.f32	s13, s6
 801afda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801afde:	ee12 2a90 	vmov	r2, s5
 801afe2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801afe6:	fb92 f3f3 	sdiv	r3, r2, r3
 801afea:	ee13 2a10 	vmov	r2, s6
 801afee:	9313      	str	r3, [sp, #76]	; 0x4c
 801aff0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aff2:	fb92 f3f3 	sdiv	r3, r2, r3
 801aff6:	9314      	str	r3, [sp, #80]	; 0x50
 801aff8:	9b02      	ldr	r3, [sp, #8]
 801affa:	9a05      	ldr	r2, [sp, #20]
 801affc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b000:	3b01      	subs	r3, #1
 801b002:	9302      	str	r3, [sp, #8]
 801b004:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801b008:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b00a:	eeb0 3a67 	vmov.f32	s6, s15
 801b00e:	bf08      	it	eq
 801b010:	4613      	moveq	r3, r2
 801b012:	eef0 2a47 	vmov.f32	s5, s14
 801b016:	e72a      	b.n	801ae6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b018:	140f      	asrs	r7, r1, #16
 801b01a:	d454      	bmi.n	801b0c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b01c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801b020:	42be      	cmp	r6, r7
 801b022:	dd50      	ble.n	801b0c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b024:	ea5f 4822 	movs.w	r8, r2, asr #16
 801b028:	d44d      	bmi.n	801b0c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b02a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801b02e:	4544      	cmp	r4, r8
 801b030:	dd49      	ble.n	801b0c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b032:	9c04      	ldr	r4, [sp, #16]
 801b034:	b236      	sxth	r6, r6
 801b036:	fb08 4606 	mla	r6, r8, r6, r4
 801b03a:	f06f 0001 	mvn.w	r0, #1
 801b03e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801b042:	9c01      	ldr	r4, [sp, #4]
 801b044:	fb00 fa0e 	mul.w	sl, r0, lr
 801b048:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b04c:	9800      	ldr	r0, [sp, #0]
 801b04e:	eb04 0b08 	add.w	fp, r4, r8
 801b052:	f830 400a 	ldrh.w	r4, [r0, sl]
 801b056:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801b05a:	9801      	ldr	r0, [sp, #4]
 801b05c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b060:	f810 8008 	ldrb.w	r8, [r0, r8]
 801b064:	9800      	ldr	r0, [sp, #0]
 801b066:	1227      	asrs	r7, r4, #8
 801b068:	fb16 f609 	smulbb	r6, r6, r9
 801b06c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b070:	fb07 6705 	mla	r7, r7, r5, r6
 801b074:	10e6      	asrs	r6, r4, #3
 801b076:	00e4      	lsls	r4, r4, #3
 801b078:	b2e4      	uxtb	r4, r4
 801b07a:	fb1b fb09 	smulbb	fp, fp, r9
 801b07e:	fb14 f405 	smulbb	r4, r4, r5
 801b082:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b086:	b2bf      	uxth	r7, r7
 801b088:	fb06 b605 	mla	r6, r6, r5, fp
 801b08c:	fb08 4809 	mla	r8, r8, r9, r4
 801b090:	b2b6      	uxth	r6, r6
 801b092:	fa1f f888 	uxth.w	r8, r8
 801b096:	1c7c      	adds	r4, r7, #1
 801b098:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801b09c:	f106 0b01 	add.w	fp, r6, #1
 801b0a0:	f108 0401 	add.w	r4, r8, #1
 801b0a4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801b0a8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801b0ac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b0b0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801b0b4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801b0b8:	4327      	orrs	r7, r4
 801b0ba:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801b0be:	ea47 070b 	orr.w	r7, r7, fp
 801b0c2:	f820 700a 	strh.w	r7, [r0, sl]
 801b0c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b0c8:	4401      	add	r1, r0
 801b0ca:	9814      	ldr	r0, [sp, #80]	; 0x50
 801b0cc:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b0d0:	4402      	add	r2, r0
 801b0d2:	e759      	b.n	801af88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b0d4:	b007      	add	sp, #28
 801b0d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801b0dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0e0:	b085      	sub	sp, #20
 801b0e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b0e6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b0e8:	9203      	str	r2, [sp, #12]
 801b0ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b0ee:	6870      	ldr	r0, [r6, #4]
 801b0f0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b0f2:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801b0f6:	686f      	ldr	r7, [r5, #4]
 801b0f8:	9101      	str	r1, [sp, #4]
 801b0fa:	fb00 2404 	mla	r4, r0, r4, r2
 801b0fe:	6832      	ldr	r2, [r6, #0]
 801b100:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b104:	682a      	ldr	r2, [r5, #0]
 801b106:	9202      	str	r2, [sp, #8]
 801b108:	3704      	adds	r7, #4
 801b10a:	9a01      	ldr	r2, [sp, #4]
 801b10c:	2a00      	cmp	r2, #0
 801b10e:	dc03      	bgt.n	801b118 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b110:	9a03      	ldr	r2, [sp, #12]
 801b112:	2a00      	cmp	r2, #0
 801b114:	f340 80cc 	ble.w	801b2b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b118:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b11a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b11e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801b122:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b126:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b128:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b12c:	2b00      	cmp	r3, #0
 801b12e:	dd0d      	ble.n	801b14c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b130:	1406      	asrs	r6, r0, #16
 801b132:	d405      	bmi.n	801b140 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b134:	454e      	cmp	r6, r9
 801b136:	da03      	bge.n	801b140 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b138:	1416      	asrs	r6, r2, #16
 801b13a:	d401      	bmi.n	801b140 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801b13c:	4546      	cmp	r6, r8
 801b13e:	db06      	blt.n	801b14e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b140:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801b142:	4460      	add	r0, ip
 801b144:	4432      	add	r2, r6
 801b146:	3b01      	subs	r3, #1
 801b148:	3402      	adds	r4, #2
 801b14a:	e7ef      	b.n	801b12c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801b14c:	d00f      	beq.n	801b16e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b14e:	1e5e      	subs	r6, r3, #1
 801b150:	fb0c 0e06 	mla	lr, ip, r6, r0
 801b154:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801b158:	d543      	bpl.n	801b1e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b15a:	4698      	mov	r8, r3
 801b15c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801b160:	f1b8 0f00 	cmp.w	r8, #0
 801b164:	dc71      	bgt.n	801b24a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801b166:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b16a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b16e:	9b01      	ldr	r3, [sp, #4]
 801b170:	2b00      	cmp	r3, #0
 801b172:	f340 809d 	ble.w	801b2b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801b176:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b17a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b17e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b182:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b184:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b188:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b18c:	eeb0 6a62 	vmov.f32	s12, s5
 801b190:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b194:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b198:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b19c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b1a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b1a4:	eeb0 6a43 	vmov.f32	s12, s6
 801b1a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b1ac:	ee12 2a90 	vmov	r2, s5
 801b1b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b1b4:	fb92 fcf3 	sdiv	ip, r2, r3
 801b1b8:	ee13 2a10 	vmov	r2, s6
 801b1bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1c0:	9312      	str	r3, [sp, #72]	; 0x48
 801b1c2:	9b01      	ldr	r3, [sp, #4]
 801b1c4:	9a03      	ldr	r2, [sp, #12]
 801b1c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b1ca:	3b01      	subs	r3, #1
 801b1cc:	9301      	str	r3, [sp, #4]
 801b1ce:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b1d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b1d4:	eeb0 3a67 	vmov.f32	s6, s15
 801b1d8:	bf08      	it	eq
 801b1da:	4613      	moveq	r3, r2
 801b1dc:	eef0 2a47 	vmov.f32	s5, s14
 801b1e0:	e793      	b.n	801b10a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801b1e2:	45ce      	cmp	lr, r9
 801b1e4:	dab9      	bge.n	801b15a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1e6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b1e8:	fb01 2606 	mla	r6, r1, r6, r2
 801b1ec:	1436      	asrs	r6, r6, #16
 801b1ee:	d4b4      	bmi.n	801b15a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1f0:	4546      	cmp	r6, r8
 801b1f2:	dab2      	bge.n	801b15a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b1f4:	4698      	mov	r8, r3
 801b1f6:	46a2      	mov	sl, r4
 801b1f8:	f1b8 0f00 	cmp.w	r8, #0
 801b1fc:	ddb3      	ble.n	801b166 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b1fe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801b202:	9902      	ldr	r1, [sp, #8]
 801b204:	1416      	asrs	r6, r2, #16
 801b206:	fb09 1606 	mla	r6, r9, r6, r1
 801b20a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801b20e:	492a      	ldr	r1, [pc, #168]	; (801b2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801b210:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801b214:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b218:	eb07 0b0e 	add.w	fp, r7, lr
 801b21c:	4460      	add	r0, ip
 801b21e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801b222:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801b226:	00f6      	lsls	r6, r6, #3
 801b228:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801b22c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b230:	ea49 0606 	orr.w	r6, r9, r6
 801b234:	f817 900e 	ldrb.w	r9, [r7, lr]
 801b238:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b23a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801b23e:	f82a 6b02 	strh.w	r6, [sl], #2
 801b242:	440a      	add	r2, r1
 801b244:	f108 38ff 	add.w	r8, r8, #4294967295
 801b248:	e7d6      	b.n	801b1f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b24a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801b24e:	d429      	bmi.n	801b2a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b250:	68ae      	ldr	r6, [r5, #8]
 801b252:	454e      	cmp	r6, r9
 801b254:	dd26      	ble.n	801b2a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b256:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801b25a:	d423      	bmi.n	801b2a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b25c:	68e9      	ldr	r1, [r5, #12]
 801b25e:	4559      	cmp	r1, fp
 801b260:	dd20      	ble.n	801b2a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b262:	9902      	ldr	r1, [sp, #8]
 801b264:	fa0f fe86 	sxth.w	lr, r6
 801b268:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801b26c:	f06f 0101 	mvn.w	r1, #1
 801b270:	f81e e009 	ldrb.w	lr, [lr, r9]
 801b274:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801b278:	eb07 060e 	add.w	r6, r7, lr
 801b27c:	fb01 f908 	mul.w	r9, r1, r8
 801b280:	f896 b002 	ldrb.w	fp, [r6, #2]
 801b284:	7876      	ldrb	r6, [r6, #1]
 801b286:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801b28a:	00f6      	lsls	r6, r6, #3
 801b28c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801b290:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801b294:	ea4b 0606 	orr.w	r6, fp, r6
 801b298:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801b29c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801b2a0:	f82a 6009 	strh.w	r6, [sl, r9]
 801b2a4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b2a6:	4460      	add	r0, ip
 801b2a8:	440a      	add	r2, r1
 801b2aa:	f108 38ff 	add.w	r8, r8, #4294967295
 801b2ae:	e757      	b.n	801b160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801b2b0:	b005      	add	sp, #20
 801b2b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b2b6:	bf00      	nop
 801b2b8:	fffff800 	.word	0xfffff800

0801b2bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b2bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2c0:	b087      	sub	sp, #28
 801b2c2:	468b      	mov	fp, r1
 801b2c4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b2c6:	9204      	str	r2, [sp, #16]
 801b2c8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b2cc:	9205      	str	r2, [sp, #20]
 801b2ce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801b2d2:	6841      	ldr	r1, [r0, #4]
 801b2d4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801b2d8:	fb01 2404 	mla	r4, r1, r4, r2
 801b2dc:	6802      	ldr	r2, [r0, #0]
 801b2de:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b2e2:	f8dc 2000 	ldr.w	r2, [ip]
 801b2e6:	9201      	str	r2, [sp, #4]
 801b2e8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801b2ec:	3204      	adds	r2, #4
 801b2ee:	9202      	str	r2, [sp, #8]
 801b2f0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b2f4:	f1bb 0f00 	cmp.w	fp, #0
 801b2f8:	dc03      	bgt.n	801b302 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801b2fa:	9a04      	ldr	r2, [sp, #16]
 801b2fc:	2a00      	cmp	r2, #0
 801b2fe:	f340 8138 	ble.w	801b572 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b302:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b304:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801b308:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801b30c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801b310:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b312:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b316:	2b00      	cmp	r3, #0
 801b318:	dd0e      	ble.n	801b338 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b31a:	1402      	asrs	r2, r0, #16
 801b31c:	d405      	bmi.n	801b32a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b31e:	42ba      	cmp	r2, r7
 801b320:	da03      	bge.n	801b32a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b322:	140a      	asrs	r2, r1, #16
 801b324:	d401      	bmi.n	801b32a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b326:	42b2      	cmp	r2, r6
 801b328:	db07      	blt.n	801b33a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b32a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b32c:	4410      	add	r0, r2
 801b32e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b330:	3b01      	subs	r3, #1
 801b332:	4411      	add	r1, r2
 801b334:	3402      	adds	r4, #2
 801b336:	e7ee      	b.n	801b316 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801b338:	d019      	beq.n	801b36e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b33a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b33c:	1e5a      	subs	r2, r3, #1
 801b33e:	fb05 0502 	mla	r5, r5, r2, r0
 801b342:	142d      	asrs	r5, r5, #16
 801b344:	d409      	bmi.n	801b35a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b346:	42bd      	cmp	r5, r7
 801b348:	da07      	bge.n	801b35a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b34a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b34c:	fb05 1202 	mla	r2, r5, r2, r1
 801b350:	1412      	asrs	r2, r2, #16
 801b352:	d402      	bmi.n	801b35a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b354:	42b2      	cmp	r2, r6
 801b356:	f2c0 80ac 	blt.w	801b4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801b35a:	f04f 0e00 	mov.w	lr, #0
 801b35e:	eb03 020e 	add.w	r2, r3, lr
 801b362:	2a00      	cmp	r2, #0
 801b364:	dc3e      	bgt.n	801b3e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b366:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b36a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b36e:	f1bb 0f00 	cmp.w	fp, #0
 801b372:	f340 80fe 	ble.w	801b572 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b376:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b37a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b37e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b382:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b384:	f1bb 0b01 	subs.w	fp, fp, #1
 801b388:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b38c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b390:	eeb0 6a62 	vmov.f32	s12, s5
 801b394:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b398:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b39c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b3a0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b3a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b3a8:	eeb0 6a43 	vmov.f32	s12, s6
 801b3ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b3b0:	ee12 2a90 	vmov	r2, s5
 801b3b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b3b8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3bc:	ee13 2a10 	vmov	r2, s6
 801b3c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b3c4:	9313      	str	r3, [sp, #76]	; 0x4c
 801b3c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b3c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801b3cc:	9a04      	ldr	r2, [sp, #16]
 801b3ce:	9314      	str	r3, [sp, #80]	; 0x50
 801b3d0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b3d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b3d6:	eeb0 3a67 	vmov.f32	s6, s15
 801b3da:	bf08      	it	eq
 801b3dc:	4613      	moveq	r3, r2
 801b3de:	eef0 2a47 	vmov.f32	s5, s14
 801b3e2:	e787      	b.n	801b2f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801b3e4:	1406      	asrs	r6, r0, #16
 801b3e6:	d45d      	bmi.n	801b4a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b3e8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801b3ec:	42b5      	cmp	r5, r6
 801b3ee:	dd59      	ble.n	801b4a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b3f0:	140f      	asrs	r7, r1, #16
 801b3f2:	d457      	bmi.n	801b4a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b3f4:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801b3f8:	42ba      	cmp	r2, r7
 801b3fa:	dd53      	ble.n	801b4a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b3fc:	9a01      	ldr	r2, [sp, #4]
 801b3fe:	b22d      	sxth	r5, r5
 801b400:	fb07 2505 	mla	r5, r7, r5, r2
 801b404:	5daa      	ldrb	r2, [r5, r6]
 801b406:	9d02      	ldr	r5, [sp, #8]
 801b408:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b40c:	0e2e      	lsrs	r6, r5, #24
 801b40e:	d049      	beq.n	801b4a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801b410:	f06f 0201 	mvn.w	r2, #1
 801b414:	fb02 f20e 	mul.w	r2, r2, lr
 801b418:	9203      	str	r2, [sp, #12]
 801b41a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801b41e:	9a05      	ldr	r2, [sp, #20]
 801b420:	4356      	muls	r6, r2
 801b422:	1c72      	adds	r2, r6, #1
 801b424:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b428:	1212      	asrs	r2, r2, #8
 801b42a:	fa1f f982 	uxth.w	r9, r2
 801b42e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801b432:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b436:	43d2      	mvns	r2, r2
 801b438:	b2d2      	uxtb	r2, r2
 801b43a:	fb16 f609 	smulbb	r6, r6, r9
 801b43e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b442:	fb07 6702 	mla	r7, r7, r2, r6
 801b446:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b44a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b44e:	b2ed      	uxtb	r5, r5
 801b450:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b454:	fa5f f888 	uxtb.w	r8, r8
 801b458:	fb15 f509 	smulbb	r5, r5, r9
 801b45c:	fb08 5502 	mla	r5, r8, r2, r5
 801b460:	b2bf      	uxth	r7, r7
 801b462:	fb1a fa09 	smulbb	sl, sl, r9
 801b466:	b2ad      	uxth	r5, r5
 801b468:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b46c:	fb06 a602 	mla	r6, r6, r2, sl
 801b470:	1c7a      	adds	r2, r7, #1
 801b472:	f105 0a01 	add.w	sl, r5, #1
 801b476:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b47a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b47e:	b2b6      	uxth	r6, r6
 801b480:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b484:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b488:	ea4a 0707 	orr.w	r7, sl, r7
 801b48c:	f106 0a01 	add.w	sl, r6, #1
 801b490:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b494:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b498:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b49c:	9a03      	ldr	r2, [sp, #12]
 801b49e:	ea47 070a 	orr.w	r7, r7, sl
 801b4a2:	52a7      	strh	r7, [r4, r2]
 801b4a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b4a6:	4410      	add	r0, r2
 801b4a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b4aa:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b4ae:	4411      	add	r1, r2
 801b4b0:	e755      	b.n	801b35e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b4b2:	f04f 0800 	mov.w	r8, #0
 801b4b6:	eba3 0208 	sub.w	r2, r3, r8
 801b4ba:	2a00      	cmp	r2, #0
 801b4bc:	f77f af53 	ble.w	801b366 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b4c0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801b4c4:	9f01      	ldr	r7, [sp, #4]
 801b4c6:	140a      	asrs	r2, r1, #16
 801b4c8:	1405      	asrs	r5, r0, #16
 801b4ca:	fb06 7202 	mla	r2, r6, r2, r7
 801b4ce:	5d52      	ldrb	r2, [r2, r5]
 801b4d0:	9d02      	ldr	r5, [sp, #8]
 801b4d2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801b4d6:	0e2e      	lsrs	r6, r5, #24
 801b4d8:	d044      	beq.n	801b564 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b4da:	9a05      	ldr	r2, [sp, #20]
 801b4dc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b4e0:	4356      	muls	r6, r2
 801b4e2:	1c72      	adds	r2, r6, #1
 801b4e4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801b4e8:	1212      	asrs	r2, r2, #8
 801b4ea:	fa1f f982 	uxth.w	r9, r2
 801b4ee:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b4f2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b4f6:	43d2      	mvns	r2, r2
 801b4f8:	b2d2      	uxtb	r2, r2
 801b4fa:	fb16 f609 	smulbb	r6, r6, r9
 801b4fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b502:	fb07 6702 	mla	r7, r7, r2, r6
 801b506:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b50a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b50e:	b2ed      	uxtb	r5, r5
 801b510:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b514:	fa5f fe8e 	uxtb.w	lr, lr
 801b518:	fb15 f509 	smulbb	r5, r5, r9
 801b51c:	fb0e 5502 	mla	r5, lr, r2, r5
 801b520:	b2bf      	uxth	r7, r7
 801b522:	fb1a fa09 	smulbb	sl, sl, r9
 801b526:	b2ad      	uxth	r5, r5
 801b528:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b52c:	fb06 a602 	mla	r6, r6, r2, sl
 801b530:	1c7a      	adds	r2, r7, #1
 801b532:	f105 0a01 	add.w	sl, r5, #1
 801b536:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b53a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b53e:	b2b6      	uxth	r6, r6
 801b540:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b544:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b548:	ea4a 0707 	orr.w	r7, sl, r7
 801b54c:	f106 0a01 	add.w	sl, r6, #1
 801b550:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b554:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b558:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b55c:	ea47 070a 	orr.w	r7, r7, sl
 801b560:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b564:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b566:	4410      	add	r0, r2
 801b568:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b56a:	f108 0801 	add.w	r8, r8, #1
 801b56e:	4411      	add	r1, r2
 801b570:	e7a1      	b.n	801b4b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b572:	b007      	add	sp, #28
 801b574:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b578 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b57c:	b085      	sub	sp, #20
 801b57e:	468b      	mov	fp, r1
 801b580:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b582:	9203      	str	r2, [sp, #12]
 801b584:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b588:	6841      	ldr	r1, [r0, #4]
 801b58a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b58e:	fb01 2404 	mla	r4, r1, r4, r2
 801b592:	6802      	ldr	r2, [r0, #0]
 801b594:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b598:	f8de 2000 	ldr.w	r2, [lr]
 801b59c:	9200      	str	r2, [sp, #0]
 801b59e:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b5a2:	3204      	adds	r2, #4
 801b5a4:	9201      	str	r2, [sp, #4]
 801b5a6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b5aa:	f1bb 0f00 	cmp.w	fp, #0
 801b5ae:	dc03      	bgt.n	801b5b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b5b0:	9a03      	ldr	r2, [sp, #12]
 801b5b2:	2a00      	cmp	r2, #0
 801b5b4:	f340 8153 	ble.w	801b85e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b5b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b5ba:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b5be:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b5c2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b5c6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b5c8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b5cc:	2b00      	cmp	r3, #0
 801b5ce:	dd0e      	ble.n	801b5ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b5d0:	1408      	asrs	r0, r1, #16
 801b5d2:	d405      	bmi.n	801b5e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b5d4:	42b8      	cmp	r0, r7
 801b5d6:	da03      	bge.n	801b5e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b5d8:	1410      	asrs	r0, r2, #16
 801b5da:	d401      	bmi.n	801b5e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b5dc:	42b0      	cmp	r0, r6
 801b5de:	db07      	blt.n	801b5f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b5e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b5e2:	4401      	add	r1, r0
 801b5e4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b5e6:	3b01      	subs	r3, #1
 801b5e8:	4402      	add	r2, r0
 801b5ea:	3402      	adds	r4, #2
 801b5ec:	e7ee      	b.n	801b5cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b5ee:	d017      	beq.n	801b620 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b5f0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b5f2:	1e58      	subs	r0, r3, #1
 801b5f4:	fb05 1500 	mla	r5, r5, r0, r1
 801b5f8:	142d      	asrs	r5, r5, #16
 801b5fa:	d409      	bmi.n	801b610 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b5fc:	42bd      	cmp	r5, r7
 801b5fe:	da07      	bge.n	801b610 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b600:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b602:	fb05 2000 	mla	r0, r5, r0, r2
 801b606:	1400      	asrs	r0, r0, #16
 801b608:	d402      	bmi.n	801b610 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b60a:	42b0      	cmp	r0, r6
 801b60c:	f2c0 80bc 	blt.w	801b788 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801b610:	2600      	movs	r6, #0
 801b612:	1998      	adds	r0, r3, r6
 801b614:	2800      	cmp	r0, #0
 801b616:	dc3e      	bgt.n	801b696 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801b618:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b61c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b620:	f1bb 0f00 	cmp.w	fp, #0
 801b624:	f340 811b 	ble.w	801b85e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b628:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b62c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b630:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b634:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b636:	f1bb 0b01 	subs.w	fp, fp, #1
 801b63a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b63e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b642:	eeb0 6a62 	vmov.f32	s12, s5
 801b646:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b64a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b64e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b652:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b656:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b65a:	eeb0 6a43 	vmov.f32	s12, s6
 801b65e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b662:	ee12 2a90 	vmov	r2, s5
 801b666:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b66a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b66e:	ee13 2a10 	vmov	r2, s6
 801b672:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b676:	9311      	str	r3, [sp, #68]	; 0x44
 801b678:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b67a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b67e:	9a03      	ldr	r2, [sp, #12]
 801b680:	9312      	str	r3, [sp, #72]	; 0x48
 801b682:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b686:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b688:	eeb0 3a67 	vmov.f32	s6, s15
 801b68c:	bf08      	it	eq
 801b68e:	4613      	moveq	r3, r2
 801b690:	eef0 2a47 	vmov.f32	s5, s14
 801b694:	e789      	b.n	801b5aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b696:	140f      	asrs	r7, r1, #16
 801b698:	d426      	bmi.n	801b6e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b69a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b69e:	42bd      	cmp	r5, r7
 801b6a0:	dd22      	ble.n	801b6e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6a2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b6a6:	d41f      	bmi.n	801b6e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6a8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b6ac:	4560      	cmp	r0, ip
 801b6ae:	dd1b      	ble.n	801b6e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6b0:	9800      	ldr	r0, [sp, #0]
 801b6b2:	b22d      	sxth	r5, r5
 801b6b4:	fb0c 0505 	mla	r5, ip, r5, r0
 801b6b8:	5de8      	ldrb	r0, [r5, r7]
 801b6ba:	9d01      	ldr	r5, [sp, #4]
 801b6bc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801b6c0:	0e07      	lsrs	r7, r0, #24
 801b6c2:	2fff      	cmp	r7, #255	; 0xff
 801b6c4:	d116      	bne.n	801b6f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b6c6:	f06f 0501 	mvn.w	r5, #1
 801b6ca:	fb05 f706 	mul.w	r7, r5, r6
 801b6ce:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b6d2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b6d6:	0945      	lsrs	r5, r0, #5
 801b6d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6dc:	ea4c 0505 	orr.w	r5, ip, r5
 801b6e0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b6e4:	4305      	orrs	r5, r0
 801b6e6:	53e5      	strh	r5, [r4, r7]
 801b6e8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b6ea:	4401      	add	r1, r0
 801b6ec:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b6ee:	3e01      	subs	r6, #1
 801b6f0:	4402      	add	r2, r0
 801b6f2:	e78e      	b.n	801b612 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b6f4:	b2fd      	uxtb	r5, r7
 801b6f6:	2f00      	cmp	r7, #0
 801b6f8:	d0f6      	beq.n	801b6e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b6fa:	f06f 0701 	mvn.w	r7, #1
 801b6fe:	4377      	muls	r7, r6
 801b700:	fa1f f985 	uxth.w	r9, r5
 801b704:	f834 8007 	ldrh.w	r8, [r4, r7]
 801b708:	9702      	str	r7, [sp, #8]
 801b70a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b70e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b712:	43ed      	mvns	r5, r5
 801b714:	b2ed      	uxtb	r5, r5
 801b716:	fb17 f709 	smulbb	r7, r7, r9
 801b71a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b71e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b722:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b726:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801b72a:	b2c0      	uxtb	r0, r0
 801b72c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b730:	fa5f f888 	uxtb.w	r8, r8
 801b734:	fb10 f009 	smulbb	r0, r0, r9
 801b738:	fb08 0005 	mla	r0, r8, r5, r0
 801b73c:	b280      	uxth	r0, r0
 801b73e:	fa1f fc8c 	uxth.w	ip, ip
 801b742:	fb1a fa09 	smulbb	sl, sl, r9
 801b746:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b74a:	fb07 a705 	mla	r7, r7, r5, sl
 801b74e:	f100 0a01 	add.w	sl, r0, #1
 801b752:	f10c 0501 	add.w	r5, ip, #1
 801b756:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b75a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b75e:	b2bf      	uxth	r7, r7
 801b760:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b764:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b768:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b76c:	f107 0a01 	add.w	sl, r7, #1
 801b770:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b774:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b778:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b77c:	9802      	ldr	r0, [sp, #8]
 801b77e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b782:	f824 c000 	strh.w	ip, [r4, r0]
 801b786:	e7af      	b.n	801b6e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b788:	f04f 0800 	mov.w	r8, #0
 801b78c:	eba3 0008 	sub.w	r0, r3, r8
 801b790:	2800      	cmp	r0, #0
 801b792:	f77f af41 	ble.w	801b618 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b796:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b79a:	9f00      	ldr	r7, [sp, #0]
 801b79c:	1410      	asrs	r0, r2, #16
 801b79e:	140d      	asrs	r5, r1, #16
 801b7a0:	fb06 7000 	mla	r0, r6, r0, r7
 801b7a4:	5d40      	ldrb	r0, [r0, r5]
 801b7a6:	9d01      	ldr	r5, [sp, #4]
 801b7a8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b7ac:	0e2e      	lsrs	r6, r5, #24
 801b7ae:	2eff      	cmp	r6, #255	; 0xff
 801b7b0:	d112      	bne.n	801b7d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801b7b2:	482c      	ldr	r0, [pc, #176]	; (801b864 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801b7b4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b7b8:	0968      	lsrs	r0, r5, #5
 801b7ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b7be:	4330      	orrs	r0, r6
 801b7c0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b7c4:	4328      	orrs	r0, r5
 801b7c6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801b7ca:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b7cc:	4401      	add	r1, r0
 801b7ce:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b7d0:	f108 0801 	add.w	r8, r8, #1
 801b7d4:	4402      	add	r2, r0
 801b7d6:	e7d9      	b.n	801b78c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b7d8:	b2f0      	uxtb	r0, r6
 801b7da:	2e00      	cmp	r6, #0
 801b7dc:	d0f5      	beq.n	801b7ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b7de:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801b7e2:	fa1f f980 	uxth.w	r9, r0
 801b7e6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b7ea:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b7ee:	43c0      	mvns	r0, r0
 801b7f0:	b2c0      	uxtb	r0, r0
 801b7f2:	fb16 f609 	smulbb	r6, r6, r9
 801b7f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b7fa:	fb07 6700 	mla	r7, r7, r0, r6
 801b7fe:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b802:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b806:	b2ed      	uxtb	r5, r5
 801b808:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b80c:	fa5f fc8c 	uxtb.w	ip, ip
 801b810:	fb15 f509 	smulbb	r5, r5, r9
 801b814:	fb0c 5500 	mla	r5, ip, r0, r5
 801b818:	b2bf      	uxth	r7, r7
 801b81a:	fb1a fa09 	smulbb	sl, sl, r9
 801b81e:	b2ad      	uxth	r5, r5
 801b820:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b824:	fb06 a600 	mla	r6, r6, r0, sl
 801b828:	1c78      	adds	r0, r7, #1
 801b82a:	f105 0a01 	add.w	sl, r5, #1
 801b82e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b832:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b836:	b2b6      	uxth	r6, r6
 801b838:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b83c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b840:	ea4a 0707 	orr.w	r7, sl, r7
 801b844:	f106 0a01 	add.w	sl, r6, #1
 801b848:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b84c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b850:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b854:	ea47 070a 	orr.w	r7, r7, sl
 801b858:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b85c:	e7b5      	b.n	801b7ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b85e:	b005      	add	sp, #20
 801b860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b864:	fffff800 	.word	0xfffff800

0801b868 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b86c:	b087      	sub	sp, #28
 801b86e:	468b      	mov	fp, r1
 801b870:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b872:	9204      	str	r2, [sp, #16]
 801b874:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b878:	9205      	str	r2, [sp, #20]
 801b87a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801b87e:	6861      	ldr	r1, [r4, #4]
 801b880:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801b884:	fb01 2000 	mla	r0, r1, r0, r2
 801b888:	6822      	ldr	r2, [r4, #0]
 801b88a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b88e:	f8de 2000 	ldr.w	r2, [lr]
 801b892:	9201      	str	r2, [sp, #4]
 801b894:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b898:	9202      	str	r2, [sp, #8]
 801b89a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b89e:	f1bb 0f00 	cmp.w	fp, #0
 801b8a2:	dc03      	bgt.n	801b8ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801b8a4:	9a04      	ldr	r2, [sp, #16]
 801b8a6:	2a00      	cmp	r2, #0
 801b8a8:	f340 8142 	ble.w	801bb30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b8ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b8ae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b8b2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b8b6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b8ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b8bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b8c0:	2b00      	cmp	r3, #0
 801b8c2:	dd0e      	ble.n	801b8e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b8c4:	140c      	asrs	r4, r1, #16
 801b8c6:	d405      	bmi.n	801b8d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b8c8:	42bc      	cmp	r4, r7
 801b8ca:	da03      	bge.n	801b8d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b8cc:	1414      	asrs	r4, r2, #16
 801b8ce:	d401      	bmi.n	801b8d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b8d0:	42b4      	cmp	r4, r6
 801b8d2:	db07      	blt.n	801b8e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b8d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b8d6:	4421      	add	r1, r4
 801b8d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b8da:	3b01      	subs	r3, #1
 801b8dc:	4422      	add	r2, r4
 801b8de:	3002      	adds	r0, #2
 801b8e0:	e7ee      	b.n	801b8c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b8e2:	d019      	beq.n	801b918 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b8e4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b8e6:	1e5c      	subs	r4, r3, #1
 801b8e8:	fb05 1504 	mla	r5, r5, r4, r1
 801b8ec:	142d      	asrs	r5, r5, #16
 801b8ee:	d409      	bmi.n	801b904 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b8f0:	42bd      	cmp	r5, r7
 801b8f2:	da07      	bge.n	801b904 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b8f4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b8f6:	fb05 2404 	mla	r4, r5, r4, r2
 801b8fa:	1424      	asrs	r4, r4, #16
 801b8fc:	d402      	bmi.n	801b904 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b8fe:	42b4      	cmp	r4, r6
 801b900:	f2c0 80b1 	blt.w	801ba66 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b904:	f04f 0800 	mov.w	r8, #0
 801b908:	eb03 0408 	add.w	r4, r3, r8
 801b90c:	2c00      	cmp	r4, #0
 801b90e:	dc3e      	bgt.n	801b98e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b910:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b914:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b918:	f1bb 0f00 	cmp.w	fp, #0
 801b91c:	f340 8108 	ble.w	801bb30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b920:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b924:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b928:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b92c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b92e:	f1bb 0b01 	subs.w	fp, fp, #1
 801b932:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b936:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b93a:	eeb0 6a62 	vmov.f32	s12, s5
 801b93e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b942:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b946:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b94a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b94e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b952:	eeb0 6a43 	vmov.f32	s12, s6
 801b956:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b95a:	ee12 2a90 	vmov	r2, s5
 801b95e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b962:	fb92 f3f3 	sdiv	r3, r2, r3
 801b966:	ee13 2a10 	vmov	r2, s6
 801b96a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b96e:	9313      	str	r3, [sp, #76]	; 0x4c
 801b970:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b972:	fb92 f3f3 	sdiv	r3, r2, r3
 801b976:	9a04      	ldr	r2, [sp, #16]
 801b978:	9314      	str	r3, [sp, #80]	; 0x50
 801b97a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b97e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b980:	eeb0 3a67 	vmov.f32	s6, s15
 801b984:	bf08      	it	eq
 801b986:	4613      	moveq	r3, r2
 801b988:	eef0 2a47 	vmov.f32	s5, s14
 801b98c:	e787      	b.n	801b89e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801b98e:	140e      	asrs	r6, r1, #16
 801b990:	d462      	bmi.n	801ba58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b992:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b996:	42b5      	cmp	r5, r6
 801b998:	dd5e      	ble.n	801ba58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b99a:	1417      	asrs	r7, r2, #16
 801b99c:	d45c      	bmi.n	801ba58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b99e:	f8de 400c 	ldr.w	r4, [lr, #12]
 801b9a2:	42bc      	cmp	r4, r7
 801b9a4:	dd58      	ble.n	801ba58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b9a6:	b22d      	sxth	r5, r5
 801b9a8:	fb07 6505 	mla	r5, r7, r5, r6
 801b9ac:	9c02      	ldr	r4, [sp, #8]
 801b9ae:	5d66      	ldrb	r6, [r4, r5]
 801b9b0:	2e00      	cmp	r6, #0
 801b9b2:	d051      	beq.n	801ba58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b9b4:	9c01      	ldr	r4, [sp, #4]
 801b9b6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801b9ba:	f06f 0401 	mvn.w	r4, #1
 801b9be:	fb04 f408 	mul.w	r4, r4, r8
 801b9c2:	9403      	str	r4, [sp, #12]
 801b9c4:	5b05      	ldrh	r5, [r0, r4]
 801b9c6:	9c05      	ldr	r4, [sp, #20]
 801b9c8:	4366      	muls	r6, r4
 801b9ca:	1c74      	adds	r4, r6, #1
 801b9cc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b9d0:	1224      	asrs	r4, r4, #8
 801b9d2:	b2a7      	uxth	r7, r4
 801b9d4:	122e      	asrs	r6, r5, #8
 801b9d6:	43e4      	mvns	r4, r4
 801b9d8:	b2e4      	uxtb	r4, r4
 801b9da:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801b9de:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b9e2:	fb16 f604 	smulbb	r6, r6, r4
 801b9e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b9ea:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b9ee:	00ed      	lsls	r5, r5, #3
 801b9f0:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b9f4:	b2ed      	uxtb	r5, r5
 801b9f6:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801b9fa:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b9fe:	fb15 f504 	smulbb	r5, r5, r4
 801ba02:	fa5f f989 	uxtb.w	r9, r9
 801ba06:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ba0a:	fb09 5507 	mla	r5, r9, r7, r5
 801ba0e:	fb1a fa04 	smulbb	sl, sl, r4
 801ba12:	fa1f fc8c 	uxth.w	ip, ip
 801ba16:	b2ad      	uxth	r5, r5
 801ba18:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ba1c:	fb06 a607 	mla	r6, r6, r7, sl
 801ba20:	f10c 0401 	add.w	r4, ip, #1
 801ba24:	f105 0a01 	add.w	sl, r5, #1
 801ba28:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ba2c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ba30:	b2b6      	uxth	r6, r6
 801ba32:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ba36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ba3a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801ba3e:	f106 0a01 	add.w	sl, r6, #1
 801ba42:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ba46:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ba4a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ba4e:	9c03      	ldr	r4, [sp, #12]
 801ba50:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ba54:	f820 c004 	strh.w	ip, [r0, r4]
 801ba58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ba5a:	4421      	add	r1, r4
 801ba5c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ba5e:	f108 38ff 	add.w	r8, r8, #4294967295
 801ba62:	4422      	add	r2, r4
 801ba64:	e750      	b.n	801b908 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ba66:	f04f 0900 	mov.w	r9, #0
 801ba6a:	eba3 0409 	sub.w	r4, r3, r9
 801ba6e:	2c00      	cmp	r4, #0
 801ba70:	f77f af4e 	ble.w	801b910 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ba74:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801ba78:	140d      	asrs	r5, r1, #16
 801ba7a:	1414      	asrs	r4, r2, #16
 801ba7c:	fb06 5404 	mla	r4, r6, r4, r5
 801ba80:	9d02      	ldr	r5, [sp, #8]
 801ba82:	5d2e      	ldrb	r6, [r5, r4]
 801ba84:	2e00      	cmp	r6, #0
 801ba86:	d04c      	beq.n	801bb22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801ba88:	9d01      	ldr	r5, [sp, #4]
 801ba8a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801ba8e:	9c05      	ldr	r4, [sp, #20]
 801ba90:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801ba94:	4366      	muls	r6, r4
 801ba96:	1c74      	adds	r4, r6, #1
 801ba98:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801ba9c:	1224      	asrs	r4, r4, #8
 801ba9e:	b2a7      	uxth	r7, r4
 801baa0:	122e      	asrs	r6, r5, #8
 801baa2:	43e4      	mvns	r4, r4
 801baa4:	b2e4      	uxtb	r4, r4
 801baa6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801baaa:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801baae:	fb16 f604 	smulbb	r6, r6, r4
 801bab2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bab6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801baba:	00ed      	lsls	r5, r5, #3
 801babc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bac0:	b2ed      	uxtb	r5, r5
 801bac2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801bac6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801baca:	fb15 f504 	smulbb	r5, r5, r4
 801bace:	fa5f f888 	uxtb.w	r8, r8
 801bad2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bad6:	fb08 5507 	mla	r5, r8, r7, r5
 801bada:	fb1a fa04 	smulbb	sl, sl, r4
 801bade:	fa1f fc8c 	uxth.w	ip, ip
 801bae2:	b2ad      	uxth	r5, r5
 801bae4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bae8:	fb06 a607 	mla	r6, r6, r7, sl
 801baec:	f10c 0401 	add.w	r4, ip, #1
 801baf0:	f105 0a01 	add.w	sl, r5, #1
 801baf4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801baf8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bafc:	b2b6      	uxth	r6, r6
 801bafe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bb02:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bb06:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bb0a:	f106 0a01 	add.w	sl, r6, #1
 801bb0e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bb12:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bb16:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bb1a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bb1e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801bb22:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bb24:	4421      	add	r1, r4
 801bb26:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb28:	f109 0901 	add.w	r9, r9, #1
 801bb2c:	4422      	add	r2, r4
 801bb2e:	e79c      	b.n	801ba6a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801bb30:	b007      	add	sp, #28
 801bb32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bb36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bb36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb3a:	b085      	sub	sp, #20
 801bb3c:	468b      	mov	fp, r1
 801bb3e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bb40:	9203      	str	r2, [sp, #12]
 801bb42:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801bb46:	6861      	ldr	r1, [r4, #4]
 801bb48:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801bb4c:	fb01 2000 	mla	r0, r1, r0, r2
 801bb50:	6822      	ldr	r2, [r4, #0]
 801bb52:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801bb56:	f8d8 2000 	ldr.w	r2, [r8]
 801bb5a:	9200      	str	r2, [sp, #0]
 801bb5c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801bb60:	9201      	str	r2, [sp, #4]
 801bb62:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bb66:	f1bb 0f00 	cmp.w	fp, #0
 801bb6a:	dc03      	bgt.n	801bb74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bb6c:	9a03      	ldr	r2, [sp, #12]
 801bb6e:	2a00      	cmp	r2, #0
 801bb70:	f340 8146 	ble.w	801be00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bb74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bb76:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801bb7a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801bb7e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bb82:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bb84:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bb88:	2b00      	cmp	r3, #0
 801bb8a:	dd0e      	ble.n	801bbaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bb8c:	140c      	asrs	r4, r1, #16
 801bb8e:	d405      	bmi.n	801bb9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb90:	42bc      	cmp	r4, r7
 801bb92:	da03      	bge.n	801bb9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb94:	1414      	asrs	r4, r2, #16
 801bb96:	d401      	bmi.n	801bb9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bb98:	42b4      	cmp	r4, r6
 801bb9a:	db07      	blt.n	801bbac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bb9c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bb9e:	4421      	add	r1, r4
 801bba0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bba2:	3b01      	subs	r3, #1
 801bba4:	4422      	add	r2, r4
 801bba6:	3002      	adds	r0, #2
 801bba8:	e7ee      	b.n	801bb88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bbaa:	d017      	beq.n	801bbdc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801bbac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801bbae:	1e5c      	subs	r4, r3, #1
 801bbb0:	fb05 1504 	mla	r5, r5, r4, r1
 801bbb4:	142d      	asrs	r5, r5, #16
 801bbb6:	d409      	bmi.n	801bbcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bbb8:	42bd      	cmp	r5, r7
 801bbba:	da07      	bge.n	801bbcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bbbc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801bbbe:	fb05 2404 	mla	r4, r5, r4, r2
 801bbc2:	1424      	asrs	r4, r4, #16
 801bbc4:	d402      	bmi.n	801bbcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bbc6:	42b4      	cmp	r4, r6
 801bbc8:	f2c0 80b3 	blt.w	801bd32 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801bbcc:	2600      	movs	r6, #0
 801bbce:	199c      	adds	r4, r3, r6
 801bbd0:	2c00      	cmp	r4, #0
 801bbd2:	dc3e      	bgt.n	801bc52 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801bbd4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bbd8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bbdc:	f1bb 0f00 	cmp.w	fp, #0
 801bbe0:	f340 810e 	ble.w	801be00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801bbe4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bbe8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bbec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bbf0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bbf2:	f1bb 0b01 	subs.w	fp, fp, #1
 801bbf6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bbfa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bbfe:	eeb0 6a62 	vmov.f32	s12, s5
 801bc02:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bc06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bc0e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bc12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bc16:	eeb0 6a43 	vmov.f32	s12, s6
 801bc1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bc1e:	ee12 2a90 	vmov	r2, s5
 801bc22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc26:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc2a:	ee13 2a10 	vmov	r2, s6
 801bc2e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc32:	9311      	str	r3, [sp, #68]	; 0x44
 801bc34:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc36:	fb92 f3f3 	sdiv	r3, r2, r3
 801bc3a:	9a03      	ldr	r2, [sp, #12]
 801bc3c:	9312      	str	r3, [sp, #72]	; 0x48
 801bc3e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bc42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc44:	eeb0 3a67 	vmov.f32	s6, s15
 801bc48:	bf08      	it	eq
 801bc4a:	4613      	moveq	r3, r2
 801bc4c:	eef0 2a47 	vmov.f32	s5, s14
 801bc50:	e789      	b.n	801bb66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bc52:	140f      	asrs	r7, r1, #16
 801bc54:	d418      	bmi.n	801bc88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc56:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801bc5a:	42bd      	cmp	r5, r7
 801bc5c:	dd14      	ble.n	801bc88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc5e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bc62:	d411      	bmi.n	801bc88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc64:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801bc68:	4564      	cmp	r4, ip
 801bc6a:	dd0d      	ble.n	801bc88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc6c:	b22d      	sxth	r5, r5
 801bc6e:	fb0c 7505 	mla	r5, ip, r5, r7
 801bc72:	9c01      	ldr	r4, [sp, #4]
 801bc74:	5d64      	ldrb	r4, [r4, r5]
 801bc76:	2cff      	cmp	r4, #255	; 0xff
 801bc78:	d10c      	bne.n	801bc94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801bc7a:	9c00      	ldr	r4, [sp, #0]
 801bc7c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801bc80:	f06f 0401 	mvn.w	r4, #1
 801bc84:	4374      	muls	r4, r6
 801bc86:	5305      	strh	r5, [r0, r4]
 801bc88:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc8a:	4421      	add	r1, r4
 801bc8c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bc8e:	3e01      	subs	r6, #1
 801bc90:	4422      	add	r2, r4
 801bc92:	e79c      	b.n	801bbce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801bc94:	2c00      	cmp	r4, #0
 801bc96:	d0f7      	beq.n	801bc88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bc98:	9f00      	ldr	r7, [sp, #0]
 801bc9a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801bc9e:	f06f 0501 	mvn.w	r5, #1
 801bca2:	4375      	muls	r5, r6
 801bca4:	9502      	str	r5, [sp, #8]
 801bca6:	5b45      	ldrh	r5, [r0, r5]
 801bca8:	fa1f fc84 	uxth.w	ip, r4
 801bcac:	122f      	asrs	r7, r5, #8
 801bcae:	43e4      	mvns	r4, r4
 801bcb0:	b2e4      	uxtb	r4, r4
 801bcb2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801bcb6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bcba:	fb17 f704 	smulbb	r7, r7, r4
 801bcbe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bcc2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bcc6:	00ed      	lsls	r5, r5, #3
 801bcc8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801bccc:	b2ed      	uxtb	r5, r5
 801bcce:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801bcd2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801bcd6:	fb15 f504 	smulbb	r5, r5, r4
 801bcda:	fa5f f989 	uxtb.w	r9, r9
 801bcde:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bce2:	fb09 550c 	mla	r5, r9, ip, r5
 801bce6:	fb1a fa04 	smulbb	sl, sl, r4
 801bcea:	fa1f fe8e 	uxth.w	lr, lr
 801bcee:	b2ad      	uxth	r5, r5
 801bcf0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bcf4:	fb07 a70c 	mla	r7, r7, ip, sl
 801bcf8:	f10e 0401 	add.w	r4, lr, #1
 801bcfc:	f105 0a01 	add.w	sl, r5, #1
 801bd00:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801bd04:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bd08:	b2bf      	uxth	r7, r7
 801bd0a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bd0e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bd12:	ea4a 0e0e 	orr.w	lr, sl, lr
 801bd16:	f107 0a01 	add.w	sl, r7, #1
 801bd1a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801bd1e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bd22:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bd26:	9c02      	ldr	r4, [sp, #8]
 801bd28:	ea4e 0e0a 	orr.w	lr, lr, sl
 801bd2c:	f820 e004 	strh.w	lr, [r0, r4]
 801bd30:	e7aa      	b.n	801bc88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801bd32:	f04f 0900 	mov.w	r9, #0
 801bd36:	eba3 0409 	sub.w	r4, r3, r9
 801bd3a:	2c00      	cmp	r4, #0
 801bd3c:	f77f af4a 	ble.w	801bbd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bd40:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801bd44:	1414      	asrs	r4, r2, #16
 801bd46:	140d      	asrs	r5, r1, #16
 801bd48:	fb06 5504 	mla	r5, r6, r4, r5
 801bd4c:	9c01      	ldr	r4, [sp, #4]
 801bd4e:	5d64      	ldrb	r4, [r4, r5]
 801bd50:	2cff      	cmp	r4, #255	; 0xff
 801bd52:	d10b      	bne.n	801bd6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801bd54:	9c00      	ldr	r4, [sp, #0]
 801bd56:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801bd5a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801bd5e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd60:	4421      	add	r1, r4
 801bd62:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bd64:	f109 0901 	add.w	r9, r9, #1
 801bd68:	4422      	add	r2, r4
 801bd6a:	e7e4      	b.n	801bd36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801bd6c:	2c00      	cmp	r4, #0
 801bd6e:	d0f6      	beq.n	801bd5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801bd70:	9e00      	ldr	r6, [sp, #0]
 801bd72:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801bd76:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801bd7a:	b2a7      	uxth	r7, r4
 801bd7c:	122e      	asrs	r6, r5, #8
 801bd7e:	43e4      	mvns	r4, r4
 801bd80:	b2e4      	uxtb	r4, r4
 801bd82:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bd86:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bd8a:	fb16 f604 	smulbb	r6, r6, r4
 801bd8e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bd92:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bd96:	00ed      	lsls	r5, r5, #3
 801bd98:	fb0c 6c07 	mla	ip, ip, r7, r6
 801bd9c:	b2ed      	uxtb	r5, r5
 801bd9e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801bda2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bda6:	fb15 f504 	smulbb	r5, r5, r4
 801bdaa:	fa5f fe8e 	uxtb.w	lr, lr
 801bdae:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801bdb2:	fb0e 5507 	mla	r5, lr, r7, r5
 801bdb6:	fb1a fa04 	smulbb	sl, sl, r4
 801bdba:	fa1f fc8c 	uxth.w	ip, ip
 801bdbe:	b2ad      	uxth	r5, r5
 801bdc0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bdc4:	fb06 a607 	mla	r6, r6, r7, sl
 801bdc8:	f10c 0401 	add.w	r4, ip, #1
 801bdcc:	f105 0a01 	add.w	sl, r5, #1
 801bdd0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801bdd4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bdd8:	b2b6      	uxth	r6, r6
 801bdda:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801bdde:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bde2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801bde6:	f106 0a01 	add.w	sl, r6, #1
 801bdea:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801bdee:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bdf2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801bdf6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801bdfa:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801bdfe:	e7ae      	b.n	801bd5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801be00:	b005      	add	sp, #20
 801be02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801be06 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801be06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be0a:	b085      	sub	sp, #20
 801be0c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801be0e:	9203      	str	r2, [sp, #12]
 801be10:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801be14:	9201      	str	r2, [sp, #4]
 801be16:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801be1a:	9100      	str	r1, [sp, #0]
 801be1c:	6841      	ldr	r1, [r0, #4]
 801be1e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801be22:	fb01 2404 	mla	r4, r1, r4, r2
 801be26:	6802      	ldr	r2, [r0, #0]
 801be28:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801be2c:	f8de 2000 	ldr.w	r2, [lr]
 801be30:	9202      	str	r2, [sp, #8]
 801be32:	9a01      	ldr	r2, [sp, #4]
 801be34:	43d6      	mvns	r6, r2
 801be36:	b2f6      	uxtb	r6, r6
 801be38:	9a00      	ldr	r2, [sp, #0]
 801be3a:	2a00      	cmp	r2, #0
 801be3c:	dc03      	bgt.n	801be46 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801be3e:	9a03      	ldr	r2, [sp, #12]
 801be40:	2a00      	cmp	r2, #0
 801be42:	f340 8124 	ble.w	801c08e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801be46:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801be48:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801be4c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801be50:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801be54:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801be56:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801be5a:	2b00      	cmp	r3, #0
 801be5c:	dd0e      	ble.n	801be7c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801be5e:	1408      	asrs	r0, r1, #16
 801be60:	d405      	bmi.n	801be6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801be62:	4560      	cmp	r0, ip
 801be64:	da03      	bge.n	801be6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801be66:	1410      	asrs	r0, r2, #16
 801be68:	d401      	bmi.n	801be6e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801be6a:	42b8      	cmp	r0, r7
 801be6c:	db07      	blt.n	801be7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801be6e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801be70:	4401      	add	r1, r0
 801be72:	9812      	ldr	r0, [sp, #72]	; 0x48
 801be74:	3b01      	subs	r3, #1
 801be76:	4402      	add	r2, r0
 801be78:	3402      	adds	r4, #2
 801be7a:	e7ee      	b.n	801be5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801be7c:	d06e      	beq.n	801bf5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801be7e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801be80:	1e58      	subs	r0, r3, #1
 801be82:	fb05 1500 	mla	r5, r5, r0, r1
 801be86:	142d      	asrs	r5, r5, #16
 801be88:	d45c      	bmi.n	801bf44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be8a:	4565      	cmp	r5, ip
 801be8c:	da5a      	bge.n	801bf44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be8e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801be90:	fb05 2000 	mla	r0, r5, r0, r2
 801be94:	1400      	asrs	r0, r0, #16
 801be96:	d455      	bmi.n	801bf44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be98:	42b8      	cmp	r0, r7
 801be9a:	da53      	bge.n	801bf44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801be9c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801bea0:	4699      	mov	r9, r3
 801bea2:	46a2      	mov	sl, r4
 801bea4:	f1b9 0f00 	cmp.w	r9, #0
 801bea8:	dd54      	ble.n	801bf54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801beaa:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801beae:	140d      	asrs	r5, r1, #16
 801beb0:	1410      	asrs	r0, r2, #16
 801beb2:	fb07 5000 	mla	r0, r7, r0, r5
 801beb6:	9d02      	ldr	r5, [sp, #8]
 801beb8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801bebc:	f8ba 5000 	ldrh.w	r5, [sl]
 801bec0:	122f      	asrs	r7, r5, #8
 801bec2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801bec6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801beca:	fb17 f706 	smulbb	r7, r7, r6
 801bece:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801bed2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bed6:	00ed      	lsls	r5, r5, #3
 801bed8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801bedc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801bee0:	10c7      	asrs	r7, r0, #3
 801bee2:	b2ed      	uxtb	r5, r5
 801bee4:	00c0      	lsls	r0, r0, #3
 801bee6:	fb18 f806 	smulbb	r8, r8, r6
 801beea:	fb15 f506 	smulbb	r5, r5, r6
 801beee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bef2:	b2c0      	uxtb	r0, r0
 801bef4:	fa1f fc8c 	uxth.w	ip, ip
 801bef8:	fb07 870b 	mla	r7, r7, fp, r8
 801befc:	fb00 500b 	mla	r0, r0, fp, r5
 801bf00:	b280      	uxth	r0, r0
 801bf02:	b2bf      	uxth	r7, r7
 801bf04:	f10c 0501 	add.w	r5, ip, #1
 801bf08:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bf0c:	f107 0801 	add.w	r8, r7, #1
 801bf10:	1c45      	adds	r5, r0, #1
 801bf12:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bf16:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801bf1a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bf1c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bf20:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bf24:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801bf28:	ea45 0c0c 	orr.w	ip, r5, ip
 801bf2c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bf30:	4401      	add	r1, r0
 801bf32:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bf34:	ea4c 0c08 	orr.w	ip, ip, r8
 801bf38:	f82a cb02 	strh.w	ip, [sl], #2
 801bf3c:	4402      	add	r2, r0
 801bf3e:	f109 39ff 	add.w	r9, r9, #4294967295
 801bf42:	e7af      	b.n	801bea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bf44:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801bf48:	f04f 0800 	mov.w	r8, #0
 801bf4c:	eb03 0008 	add.w	r0, r3, r8
 801bf50:	2800      	cmp	r0, #0
 801bf52:	dc41      	bgt.n	801bfd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801bf54:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bf58:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bf5c:	9b00      	ldr	r3, [sp, #0]
 801bf5e:	2b00      	cmp	r3, #0
 801bf60:	f340 8095 	ble.w	801c08e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801bf64:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bf68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bf6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bf70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bf72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bf76:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bf7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bf7e:	eef0 6a62 	vmov.f32	s13, s5
 801bf82:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bf86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bf8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bf8e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801bf92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bf96:	eef0 6a43 	vmov.f32	s13, s6
 801bf9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bf9e:	ee12 2a90 	vmov	r2, s5
 801bfa2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bfa6:	fb92 f3f3 	sdiv	r3, r2, r3
 801bfaa:	ee13 2a10 	vmov	r2, s6
 801bfae:	9311      	str	r3, [sp, #68]	; 0x44
 801bfb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bfb2:	fb92 f3f3 	sdiv	r3, r2, r3
 801bfb6:	9312      	str	r3, [sp, #72]	; 0x48
 801bfb8:	9b00      	ldr	r3, [sp, #0]
 801bfba:	9a03      	ldr	r2, [sp, #12]
 801bfbc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bfc0:	3b01      	subs	r3, #1
 801bfc2:	9300      	str	r3, [sp, #0]
 801bfc4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801bfc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bfca:	eeb0 3a67 	vmov.f32	s6, s15
 801bfce:	bf08      	it	eq
 801bfd0:	4613      	moveq	r3, r2
 801bfd2:	eef0 2a47 	vmov.f32	s5, s14
 801bfd6:	e72f      	b.n	801be38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801bfd8:	140f      	asrs	r7, r1, #16
 801bfda:	d451      	bmi.n	801c080 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bfdc:	f8de 5008 	ldr.w	r5, [lr, #8]
 801bfe0:	42bd      	cmp	r5, r7
 801bfe2:	dd4d      	ble.n	801c080 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bfe4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801bfe8:	d44a      	bmi.n	801c080 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bfea:	f8de 000c 	ldr.w	r0, [lr, #12]
 801bfee:	4560      	cmp	r0, ip
 801bff0:	dd46      	ble.n	801c080 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bff2:	b22d      	sxth	r5, r5
 801bff4:	fb0c 7505 	mla	r5, ip, r5, r7
 801bff8:	9802      	ldr	r0, [sp, #8]
 801bffa:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801bffe:	f06f 0501 	mvn.w	r5, #1
 801c002:	fb05 fb08 	mul.w	fp, r5, r8
 801c006:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801c00a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801c00e:	122f      	asrs	r7, r5, #8
 801c010:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c014:	fb17 f706 	smulbb	r7, r7, r6
 801c018:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801c01c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c020:	00ed      	lsls	r5, r5, #3
 801c022:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801c026:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801c02a:	10c7      	asrs	r7, r0, #3
 801c02c:	b2ed      	uxtb	r5, r5
 801c02e:	00c0      	lsls	r0, r0, #3
 801c030:	fb19 f906 	smulbb	r9, r9, r6
 801c034:	fb15 f506 	smulbb	r5, r5, r6
 801c038:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c03c:	b2c0      	uxtb	r0, r0
 801c03e:	fa1f fc8c 	uxth.w	ip, ip
 801c042:	fb07 970a 	mla	r7, r7, sl, r9
 801c046:	fb00 500a 	mla	r0, r0, sl, r5
 801c04a:	b2bf      	uxth	r7, r7
 801c04c:	b280      	uxth	r0, r0
 801c04e:	f10c 0501 	add.w	r5, ip, #1
 801c052:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c056:	f107 0901 	add.w	r9, r7, #1
 801c05a:	1c45      	adds	r5, r0, #1
 801c05c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c060:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801c064:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c068:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c06c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c070:	ea45 0c0c 	orr.w	ip, r5, ip
 801c074:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c078:	ea4c 0c09 	orr.w	ip, ip, r9
 801c07c:	f824 c00b 	strh.w	ip, [r4, fp]
 801c080:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c082:	4401      	add	r1, r0
 801c084:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c086:	f108 38ff 	add.w	r8, r8, #4294967295
 801c08a:	4402      	add	r2, r0
 801c08c:	e75e      	b.n	801bf4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801c08e:	b005      	add	sp, #20
 801c090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c094 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c098:	b085      	sub	sp, #20
 801c09a:	4693      	mov	fp, r2
 801c09c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801c09e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801c0a0:	6870      	ldr	r0, [r6, #4]
 801c0a2:	9101      	str	r1, [sp, #4]
 801c0a4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c0a8:	fb00 2404 	mla	r4, r0, r4, r2
 801c0ac:	6832      	ldr	r2, [r6, #0]
 801c0ae:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801c0b2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c0b6:	682a      	ldr	r2, [r5, #0]
 801c0b8:	9202      	str	r2, [sp, #8]
 801c0ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c0be:	9a01      	ldr	r2, [sp, #4]
 801c0c0:	2a00      	cmp	r2, #0
 801c0c2:	dc03      	bgt.n	801c0cc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c0c4:	f1bb 0f00 	cmp.w	fp, #0
 801c0c8:	f340 809a 	ble.w	801c200 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c0cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c0ce:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801c0d2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801c0d6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c0da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c0dc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c0e0:	2b00      	cmp	r3, #0
 801c0e2:	dd0c      	ble.n	801c0fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801c0e4:	1406      	asrs	r6, r0, #16
 801c0e6:	d405      	bmi.n	801c0f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c0e8:	454e      	cmp	r6, r9
 801c0ea:	da03      	bge.n	801c0f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c0ec:	1416      	asrs	r6, r2, #16
 801c0ee:	d401      	bmi.n	801c0f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c0f0:	4546      	cmp	r6, r8
 801c0f2:	db05      	blt.n	801c100 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801c0f4:	4470      	add	r0, lr
 801c0f6:	4462      	add	r2, ip
 801c0f8:	3b01      	subs	r3, #1
 801c0fa:	3402      	adds	r4, #2
 801c0fc:	e7f0      	b.n	801c0e0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c0fe:	d00f      	beq.n	801c120 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801c100:	1e5e      	subs	r6, r3, #1
 801c102:	fb0e 0706 	mla	r7, lr, r6, r0
 801c106:	143f      	asrs	r7, r7, #16
 801c108:	d541      	bpl.n	801c18e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801c10a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801c10e:	4698      	mov	r8, r3
 801c110:	9603      	str	r6, [sp, #12]
 801c112:	f1b8 0f00 	cmp.w	r8, #0
 801c116:	dc56      	bgt.n	801c1c6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801c118:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c11c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c120:	9b01      	ldr	r3, [sp, #4]
 801c122:	2b00      	cmp	r3, #0
 801c124:	dd6c      	ble.n	801c200 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801c126:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c12a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c12e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c132:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c134:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c138:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c13c:	eeb0 6a62 	vmov.f32	s12, s5
 801c140:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c144:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c148:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c14c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c150:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c154:	eeb0 6a43 	vmov.f32	s12, s6
 801c158:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c15c:	ee12 2a90 	vmov	r2, s5
 801c160:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c164:	fb92 fef3 	sdiv	lr, r2, r3
 801c168:	ee13 2a10 	vmov	r2, s6
 801c16c:	fb92 fcf3 	sdiv	ip, r2, r3
 801c170:	9b01      	ldr	r3, [sp, #4]
 801c172:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c176:	3b01      	subs	r3, #1
 801c178:	9301      	str	r3, [sp, #4]
 801c17a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c17e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c180:	eeb0 3a67 	vmov.f32	s6, s15
 801c184:	bf08      	it	eq
 801c186:	465b      	moveq	r3, fp
 801c188:	eef0 2a47 	vmov.f32	s5, s14
 801c18c:	e797      	b.n	801c0be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c18e:	454f      	cmp	r7, r9
 801c190:	dabb      	bge.n	801c10a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c192:	fb0c 2606 	mla	r6, ip, r6, r2
 801c196:	1436      	asrs	r6, r6, #16
 801c198:	d4b7      	bmi.n	801c10a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c19a:	4546      	cmp	r6, r8
 801c19c:	dab5      	bge.n	801c10a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c19e:	461e      	mov	r6, r3
 801c1a0:	46a0      	mov	r8, r4
 801c1a2:	2e00      	cmp	r6, #0
 801c1a4:	ddb8      	ble.n	801c118 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801c1a6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801c1aa:	9902      	ldr	r1, [sp, #8]
 801c1ac:	1417      	asrs	r7, r2, #16
 801c1ae:	ea4f 4920 	mov.w	r9, r0, asr #16
 801c1b2:	fb0a 9707 	mla	r7, sl, r7, r9
 801c1b6:	4470      	add	r0, lr
 801c1b8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801c1bc:	f828 7b02 	strh.w	r7, [r8], #2
 801c1c0:	4462      	add	r2, ip
 801c1c2:	3e01      	subs	r6, #1
 801c1c4:	e7ed      	b.n	801c1a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801c1c6:	ea5f 4920 	movs.w	r9, r0, asr #16
 801c1ca:	d414      	bmi.n	801c1f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1cc:	68ae      	ldr	r6, [r5, #8]
 801c1ce:	454e      	cmp	r6, r9
 801c1d0:	dd11      	ble.n	801c1f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1d2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801c1d6:	d40e      	bmi.n	801c1f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1d8:	68ef      	ldr	r7, [r5, #12]
 801c1da:	4557      	cmp	r7, sl
 801c1dc:	dd0b      	ble.n	801c1f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801c1de:	b236      	sxth	r6, r6
 801c1e0:	fb0a 9606 	mla	r6, sl, r6, r9
 801c1e4:	9f02      	ldr	r7, [sp, #8]
 801c1e6:	f06f 0101 	mvn.w	r1, #1
 801c1ea:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801c1ee:	fb01 f608 	mul.w	r6, r1, r8
 801c1f2:	9903      	ldr	r1, [sp, #12]
 801c1f4:	538f      	strh	r7, [r1, r6]
 801c1f6:	4470      	add	r0, lr
 801c1f8:	4462      	add	r2, ip
 801c1fa:	f108 38ff 	add.w	r8, r8, #4294967295
 801c1fe:	e788      	b.n	801c112 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c200:	b005      	add	sp, #20
 801c202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c206 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c206:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c20a:	b087      	sub	sp, #28
 801c20c:	468b      	mov	fp, r1
 801c20e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c210:	9203      	str	r2, [sp, #12]
 801c212:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c216:	9204      	str	r2, [sp, #16]
 801c218:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801c21c:	6841      	ldr	r1, [r0, #4]
 801c21e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c222:	fb01 2505 	mla	r5, r1, r5, r2
 801c226:	6802      	ldr	r2, [r0, #0]
 801c228:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801c22c:	f8d9 2000 	ldr.w	r2, [r9]
 801c230:	9201      	str	r2, [sp, #4]
 801c232:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c236:	f1bb 0f00 	cmp.w	fp, #0
 801c23a:	dc03      	bgt.n	801c244 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c23c:	9a03      	ldr	r2, [sp, #12]
 801c23e:	2a00      	cmp	r2, #0
 801c240:	f340 8159 	ble.w	801c4f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c244:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c246:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c24a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c24e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c252:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c254:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c258:	2b00      	cmp	r3, #0
 801c25a:	dd0e      	ble.n	801c27a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801c25c:	1402      	asrs	r2, r0, #16
 801c25e:	d405      	bmi.n	801c26c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c260:	42ba      	cmp	r2, r7
 801c262:	da03      	bge.n	801c26c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c264:	140a      	asrs	r2, r1, #16
 801c266:	d401      	bmi.n	801c26c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801c268:	42b2      	cmp	r2, r6
 801c26a:	db07      	blt.n	801c27c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801c26c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c26e:	4410      	add	r0, r2
 801c270:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c272:	3b01      	subs	r3, #1
 801c274:	4411      	add	r1, r2
 801c276:	3502      	adds	r5, #2
 801c278:	e7ee      	b.n	801c258 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c27a:	d017      	beq.n	801c2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801c27c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c27e:	1e5a      	subs	r2, r3, #1
 801c280:	fb04 0402 	mla	r4, r4, r2, r0
 801c284:	1424      	asrs	r4, r4, #16
 801c286:	d409      	bmi.n	801c29c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c288:	42bc      	cmp	r4, r7
 801c28a:	da07      	bge.n	801c29c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c28c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c28e:	fb04 1202 	mla	r2, r4, r2, r1
 801c292:	1412      	asrs	r2, r2, #16
 801c294:	d402      	bmi.n	801c29c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801c296:	42b2      	cmp	r2, r6
 801c298:	f2c0 80bf 	blt.w	801c41a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c29c:	2700      	movs	r7, #0
 801c29e:	19da      	adds	r2, r3, r7
 801c2a0:	2a00      	cmp	r2, #0
 801c2a2:	dc3e      	bgt.n	801c322 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801c2a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c2a8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c2ac:	f1bb 0f00 	cmp.w	fp, #0
 801c2b0:	f340 8121 	ble.w	801c4f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c2b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c2b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c2bc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c2c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c2c2:	f1bb 0b01 	subs.w	fp, fp, #1
 801c2c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c2ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c2ce:	eeb0 6a62 	vmov.f32	s12, s5
 801c2d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c2d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c2da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c2de:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c2e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c2e6:	eeb0 6a43 	vmov.f32	s12, s6
 801c2ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c2ee:	ee12 2a90 	vmov	r2, s5
 801c2f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c2f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c2fa:	ee13 2a10 	vmov	r2, s6
 801c2fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c302:	9313      	str	r3, [sp, #76]	; 0x4c
 801c304:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c306:	fb92 f3f3 	sdiv	r3, r2, r3
 801c30a:	9a03      	ldr	r2, [sp, #12]
 801c30c:	9314      	str	r3, [sp, #80]	; 0x50
 801c30e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c312:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c314:	eeb0 3a67 	vmov.f32	s6, s15
 801c318:	bf08      	it	eq
 801c31a:	4613      	moveq	r3, r2
 801c31c:	eef0 2a47 	vmov.f32	s5, s14
 801c320:	e789      	b.n	801c236 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c322:	1406      	asrs	r6, r0, #16
 801c324:	d42d      	bmi.n	801c382 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c326:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801c32a:	42b4      	cmp	r4, r6
 801c32c:	dd29      	ble.n	801c382 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c32e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801c332:	d426      	bmi.n	801c382 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c334:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c338:	4562      	cmp	r2, ip
 801c33a:	dd22      	ble.n	801c382 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c33c:	b224      	sxth	r4, r4
 801c33e:	9a01      	ldr	r2, [sp, #4]
 801c340:	fb0c 6404 	mla	r4, ip, r4, r6
 801c344:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801c348:	0e22      	lsrs	r2, r4, #24
 801c34a:	d01a      	beq.n	801c382 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c34c:	9e04      	ldr	r6, [sp, #16]
 801c34e:	4372      	muls	r2, r6
 801c350:	1c56      	adds	r6, r2, #1
 801c352:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c356:	1212      	asrs	r2, r2, #8
 801c358:	0a26      	lsrs	r6, r4, #8
 801c35a:	2aff      	cmp	r2, #255	; 0xff
 801c35c:	9605      	str	r6, [sp, #20]
 801c35e:	d116      	bne.n	801c38e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801c360:	f06f 0201 	mvn.w	r2, #1
 801c364:	fb02 fc07 	mul.w	ip, r2, r7
 801c368:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c36c:	0962      	lsrs	r2, r4, #5
 801c36e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c372:	f026 0607 	bic.w	r6, r6, #7
 801c376:	4316      	orrs	r6, r2
 801c378:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c37c:	4326      	orrs	r6, r4
 801c37e:	f825 600c 	strh.w	r6, [r5, ip]
 801c382:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c384:	4410      	add	r0, r2
 801c386:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c388:	3f01      	subs	r7, #1
 801c38a:	4411      	add	r1, r2
 801c38c:	e787      	b.n	801c29e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c38e:	f06f 0601 	mvn.w	r6, #1
 801c392:	437e      	muls	r6, r7
 801c394:	fa1f fa82 	uxth.w	sl, r2
 801c398:	f835 8006 	ldrh.w	r8, [r5, r6]
 801c39c:	9602      	str	r6, [sp, #8]
 801c39e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c3a2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801c3a6:	43d2      	mvns	r2, r2
 801c3a8:	b2d2      	uxtb	r2, r2
 801c3aa:	fb1c fc0a 	smulbb	ip, ip, sl
 801c3ae:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c3b2:	fb0e ce02 	mla	lr, lr, r2, ip
 801c3b6:	b2e4      	uxtb	r4, r4
 801c3b8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c3bc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c3c0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c3c4:	fa5f f888 	uxtb.w	r8, r8
 801c3c8:	fb14 f40a 	smulbb	r4, r4, sl
 801c3cc:	fb08 4402 	mla	r4, r8, r2, r4
 801c3d0:	fa1f fe8e 	uxth.w	lr, lr
 801c3d4:	fb16 f60a 	smulbb	r6, r6, sl
 801c3d8:	b2a4      	uxth	r4, r4
 801c3da:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c3de:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c3e2:	f10e 0201 	add.w	r2, lr, #1
 801c3e6:	1c66      	adds	r6, r4, #1
 801c3e8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c3ec:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c3f0:	fa1f fc8c 	uxth.w	ip, ip
 801c3f4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c3f8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c3fc:	ea46 0e0e 	orr.w	lr, r6, lr
 801c400:	f10c 0601 	add.w	r6, ip, #1
 801c404:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c408:	0976      	lsrs	r6, r6, #5
 801c40a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c40e:	9a02      	ldr	r2, [sp, #8]
 801c410:	ea4e 0e06 	orr.w	lr, lr, r6
 801c414:	f825 e002 	strh.w	lr, [r5, r2]
 801c418:	e7b3      	b.n	801c382 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801c41a:	f04f 0800 	mov.w	r8, #0
 801c41e:	eba3 0208 	sub.w	r2, r3, r8
 801c422:	2a00      	cmp	r2, #0
 801c424:	f77f af3e 	ble.w	801c2a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801c428:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801c42c:	1404      	asrs	r4, r0, #16
 801c42e:	140a      	asrs	r2, r1, #16
 801c430:	fb06 4202 	mla	r2, r6, r2, r4
 801c434:	9c01      	ldr	r4, [sp, #4]
 801c436:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801c43a:	0e22      	lsrs	r2, r4, #24
 801c43c:	d016      	beq.n	801c46c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c43e:	9e04      	ldr	r6, [sp, #16]
 801c440:	4372      	muls	r2, r6
 801c442:	1c56      	adds	r6, r2, #1
 801c444:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801c448:	1212      	asrs	r2, r2, #8
 801c44a:	2aff      	cmp	r2, #255	; 0xff
 801c44c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801c450:	d113      	bne.n	801c47a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801c452:	0962      	lsrs	r2, r4, #5
 801c454:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c458:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c45c:	f026 0607 	bic.w	r6, r6, #7
 801c460:	4316      	orrs	r6, r2
 801c462:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c466:	4326      	orrs	r6, r4
 801c468:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801c46c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c46e:	4410      	add	r0, r2
 801c470:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c472:	f108 0801 	add.w	r8, r8, #1
 801c476:	4411      	add	r1, r2
 801c478:	e7d1      	b.n	801c41e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801c47a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801c47e:	fa1f fa82 	uxth.w	sl, r2
 801c482:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c486:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801c48a:	43d2      	mvns	r2, r2
 801c48c:	b2d2      	uxtb	r2, r2
 801c48e:	fb17 f70a 	smulbb	r7, r7, sl
 801c492:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c496:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c49a:	b2e4      	uxtb	r4, r4
 801c49c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c4a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c4a4:	fa5f fe8e 	uxtb.w	lr, lr
 801c4a8:	fb14 f40a 	smulbb	r4, r4, sl
 801c4ac:	fb0e 4402 	mla	r4, lr, r2, r4
 801c4b0:	b2f6      	uxtb	r6, r6
 801c4b2:	fa1f fc8c 	uxth.w	ip, ip
 801c4b6:	fb16 f60a 	smulbb	r6, r6, sl
 801c4ba:	b2a4      	uxth	r4, r4
 801c4bc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c4c0:	fb07 6702 	mla	r7, r7, r2, r6
 801c4c4:	f10c 0201 	add.w	r2, ip, #1
 801c4c8:	1c66      	adds	r6, r4, #1
 801c4ca:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c4ce:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801c4d2:	b2bf      	uxth	r7, r7
 801c4d4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c4d8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c4dc:	ea46 0c0c 	orr.w	ip, r6, ip
 801c4e0:	1c7e      	adds	r6, r7, #1
 801c4e2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c4e6:	0976      	lsrs	r6, r6, #5
 801c4e8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c4ec:	ea4c 0c06 	orr.w	ip, ip, r6
 801c4f0:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801c4f4:	e7ba      	b.n	801c46c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c4f6:	b007      	add	sp, #28
 801c4f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c4fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c4fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c500:	b085      	sub	sp, #20
 801c502:	468b      	mov	fp, r1
 801c504:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c506:	9203      	str	r2, [sp, #12]
 801c508:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c50c:	6841      	ldr	r1, [r0, #4]
 801c50e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801c512:	fb01 2404 	mla	r4, r1, r4, r2
 801c516:	6802      	ldr	r2, [r0, #0]
 801c518:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c51c:	f8d8 2000 	ldr.w	r2, [r8]
 801c520:	9201      	str	r2, [sp, #4]
 801c522:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c526:	f1bb 0f00 	cmp.w	fp, #0
 801c52a:	dc03      	bgt.n	801c534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c52c:	9a03      	ldr	r2, [sp, #12]
 801c52e:	2a00      	cmp	r2, #0
 801c530:	f340 814f 	ble.w	801c7d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c534:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c536:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801c53a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801c53e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c542:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c544:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c548:	2b00      	cmp	r3, #0
 801c54a:	dd0e      	ble.n	801c56a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c54c:	1408      	asrs	r0, r1, #16
 801c54e:	d405      	bmi.n	801c55c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c550:	42b8      	cmp	r0, r7
 801c552:	da03      	bge.n	801c55c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c554:	1410      	asrs	r0, r2, #16
 801c556:	d401      	bmi.n	801c55c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c558:	42b0      	cmp	r0, r6
 801c55a:	db07      	blt.n	801c56c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c55c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c55e:	4401      	add	r1, r0
 801c560:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c562:	3b01      	subs	r3, #1
 801c564:	4402      	add	r2, r0
 801c566:	3402      	adds	r4, #2
 801c568:	e7ee      	b.n	801c548 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c56a:	d017      	beq.n	801c59c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c56c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c56e:	1e58      	subs	r0, r3, #1
 801c570:	fb05 1500 	mla	r5, r5, r0, r1
 801c574:	142d      	asrs	r5, r5, #16
 801c576:	d409      	bmi.n	801c58c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c578:	42bd      	cmp	r5, r7
 801c57a:	da07      	bge.n	801c58c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c57c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c57e:	fb05 2000 	mla	r0, r5, r0, r2
 801c582:	1400      	asrs	r0, r0, #16
 801c584:	d402      	bmi.n	801c58c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c586:	42b0      	cmp	r0, r6
 801c588:	f2c0 80ba 	blt.w	801c700 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c58c:	2600      	movs	r6, #0
 801c58e:	1998      	adds	r0, r3, r6
 801c590:	2800      	cmp	r0, #0
 801c592:	dc3e      	bgt.n	801c612 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c594:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c598:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c59c:	f1bb 0f00 	cmp.w	fp, #0
 801c5a0:	f340 8117 	ble.w	801c7d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c5a4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c5a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c5ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c5b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c5b2:	f1bb 0b01 	subs.w	fp, fp, #1
 801c5b6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c5ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c5be:	eeb0 6a62 	vmov.f32	s12, s5
 801c5c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c5c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c5ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c5ce:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c5d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c5d6:	eeb0 6a43 	vmov.f32	s12, s6
 801c5da:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c5de:	ee12 2a90 	vmov	r2, s5
 801c5e2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c5e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5ea:	ee13 2a10 	vmov	r2, s6
 801c5ee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c5f2:	9311      	str	r3, [sp, #68]	; 0x44
 801c5f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c5f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5fa:	9a03      	ldr	r2, [sp, #12]
 801c5fc:	9312      	str	r3, [sp, #72]	; 0x48
 801c5fe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c602:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c604:	eeb0 3a67 	vmov.f32	s6, s15
 801c608:	bf08      	it	eq
 801c60a:	4613      	moveq	r3, r2
 801c60c:	eef0 2a47 	vmov.f32	s5, s14
 801c610:	e789      	b.n	801c526 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c612:	140f      	asrs	r7, r1, #16
 801c614:	d424      	bmi.n	801c660 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c616:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c61a:	42bd      	cmp	r5, r7
 801c61c:	dd20      	ble.n	801c660 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c61e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c622:	d41d      	bmi.n	801c660 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c624:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801c628:	4560      	cmp	r0, ip
 801c62a:	dd19      	ble.n	801c660 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c62c:	b22d      	sxth	r5, r5
 801c62e:	fb0c 7505 	mla	r5, ip, r5, r7
 801c632:	9801      	ldr	r0, [sp, #4]
 801c634:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801c638:	0e07      	lsrs	r7, r0, #24
 801c63a:	2fff      	cmp	r7, #255	; 0xff
 801c63c:	d116      	bne.n	801c66c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c63e:	f06f 0501 	mvn.w	r5, #1
 801c642:	fb05 f706 	mul.w	r7, r5, r6
 801c646:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801c64a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c64e:	0945      	lsrs	r5, r0, #5
 801c650:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c654:	ea4c 0505 	orr.w	r5, ip, r5
 801c658:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c65c:	4305      	orrs	r5, r0
 801c65e:	53e5      	strh	r5, [r4, r7]
 801c660:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c662:	4401      	add	r1, r0
 801c664:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c666:	3e01      	subs	r6, #1
 801c668:	4402      	add	r2, r0
 801c66a:	e790      	b.n	801c58e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c66c:	b2fd      	uxtb	r5, r7
 801c66e:	2f00      	cmp	r7, #0
 801c670:	d0f6      	beq.n	801c660 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c672:	f06f 0701 	mvn.w	r7, #1
 801c676:	4377      	muls	r7, r6
 801c678:	fa1f f985 	uxth.w	r9, r5
 801c67c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801c680:	9702      	str	r7, [sp, #8]
 801c682:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c686:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c68a:	43ed      	mvns	r5, r5
 801c68c:	b2ed      	uxtb	r5, r5
 801c68e:	fb17 f709 	smulbb	r7, r7, r9
 801c692:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c696:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c69a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c69e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c6a2:	b2c0      	uxtb	r0, r0
 801c6a4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c6a8:	fa5f fe8e 	uxtb.w	lr, lr
 801c6ac:	fb10 f009 	smulbb	r0, r0, r9
 801c6b0:	fb0e 0005 	mla	r0, lr, r5, r0
 801c6b4:	b280      	uxth	r0, r0
 801c6b6:	fa1f fc8c 	uxth.w	ip, ip
 801c6ba:	fb1a fa09 	smulbb	sl, sl, r9
 801c6be:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c6c2:	fb07 a705 	mla	r7, r7, r5, sl
 801c6c6:	f100 0a01 	add.w	sl, r0, #1
 801c6ca:	f10c 0501 	add.w	r5, ip, #1
 801c6ce:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c6d2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c6d6:	b2bf      	uxth	r7, r7
 801c6d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c6dc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c6e0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c6e4:	f107 0a01 	add.w	sl, r7, #1
 801c6e8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c6ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c6f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c6f4:	9802      	ldr	r0, [sp, #8]
 801c6f6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c6fa:	f824 c000 	strh.w	ip, [r4, r0]
 801c6fe:	e7af      	b.n	801c660 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c700:	f04f 0e00 	mov.w	lr, #0
 801c704:	eba3 000e 	sub.w	r0, r3, lr
 801c708:	2800      	cmp	r0, #0
 801c70a:	f77f af43 	ble.w	801c594 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c70e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c712:	140d      	asrs	r5, r1, #16
 801c714:	1410      	asrs	r0, r2, #16
 801c716:	fb06 5000 	mla	r0, r6, r0, r5
 801c71a:	9d01      	ldr	r5, [sp, #4]
 801c71c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c720:	0e2e      	lsrs	r6, r5, #24
 801c722:	2eff      	cmp	r6, #255	; 0xff
 801c724:	d112      	bne.n	801c74c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801c726:	482c      	ldr	r0, [pc, #176]	; (801c7d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801c728:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c72c:	0968      	lsrs	r0, r5, #5
 801c72e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c732:	4330      	orrs	r0, r6
 801c734:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c738:	4328      	orrs	r0, r5
 801c73a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801c73e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c740:	4401      	add	r1, r0
 801c742:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c744:	f10e 0e01 	add.w	lr, lr, #1
 801c748:	4402      	add	r2, r0
 801c74a:	e7db      	b.n	801c704 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801c74c:	b2f0      	uxtb	r0, r6
 801c74e:	2e00      	cmp	r6, #0
 801c750:	d0f5      	beq.n	801c73e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c752:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c756:	fa1f f980 	uxth.w	r9, r0
 801c75a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c75e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c762:	43c0      	mvns	r0, r0
 801c764:	b2c0      	uxtb	r0, r0
 801c766:	fb16 f609 	smulbb	r6, r6, r9
 801c76a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c76e:	fb07 6700 	mla	r7, r7, r0, r6
 801c772:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c776:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c77a:	b2ed      	uxtb	r5, r5
 801c77c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c780:	fa5f fc8c 	uxtb.w	ip, ip
 801c784:	fb15 f509 	smulbb	r5, r5, r9
 801c788:	fb0c 5500 	mla	r5, ip, r0, r5
 801c78c:	b2bf      	uxth	r7, r7
 801c78e:	fb1a fa09 	smulbb	sl, sl, r9
 801c792:	b2ad      	uxth	r5, r5
 801c794:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c798:	fb06 a600 	mla	r6, r6, r0, sl
 801c79c:	1c78      	adds	r0, r7, #1
 801c79e:	f105 0a01 	add.w	sl, r5, #1
 801c7a2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c7a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c7aa:	b2b6      	uxth	r6, r6
 801c7ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c7b0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c7b4:	ea4a 0707 	orr.w	r7, sl, r7
 801c7b8:	f106 0a01 	add.w	sl, r6, #1
 801c7bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c7c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c7c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c7c8:	ea47 070a 	orr.w	r7, r7, sl
 801c7cc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801c7d0:	e7b5      	b.n	801c73e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c7d2:	b005      	add	sp, #20
 801c7d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7d8:	fffff800 	.word	0xfffff800

0801c7dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c7dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7e0:	b087      	sub	sp, #28
 801c7e2:	468b      	mov	fp, r1
 801c7e4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c7e6:	9203      	str	r2, [sp, #12]
 801c7e8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c7ec:	9204      	str	r2, [sp, #16]
 801c7ee:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c7f2:	6841      	ldr	r1, [r0, #4]
 801c7f4:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c7f8:	fb01 2404 	mla	r4, r1, r4, r2
 801c7fc:	6802      	ldr	r2, [r0, #0]
 801c7fe:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c802:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c806:	3201      	adds	r2, #1
 801c808:	f022 0201 	bic.w	r2, r2, #1
 801c80c:	9200      	str	r2, [sp, #0]
 801c80e:	f8d9 2000 	ldr.w	r2, [r9]
 801c812:	9201      	str	r2, [sp, #4]
 801c814:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c818:	f1bb 0f00 	cmp.w	fp, #0
 801c81c:	dc03      	bgt.n	801c826 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c81e:	9a03      	ldr	r2, [sp, #12]
 801c820:	2a00      	cmp	r2, #0
 801c822:	f340 8169 	ble.w	801caf8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c826:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c828:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c82c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c830:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c834:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c836:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c83a:	2b00      	cmp	r3, #0
 801c83c:	dd0e      	ble.n	801c85c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c83e:	1402      	asrs	r2, r0, #16
 801c840:	d405      	bmi.n	801c84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c842:	42ba      	cmp	r2, r7
 801c844:	da03      	bge.n	801c84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c846:	140a      	asrs	r2, r1, #16
 801c848:	d401      	bmi.n	801c84e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c84a:	42b2      	cmp	r2, r6
 801c84c:	db07      	blt.n	801c85e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801c84e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c850:	4410      	add	r0, r2
 801c852:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c854:	3b01      	subs	r3, #1
 801c856:	4411      	add	r1, r2
 801c858:	3402      	adds	r4, #2
 801c85a:	e7ee      	b.n	801c83a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c85c:	d017      	beq.n	801c88e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c85e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c860:	1e5a      	subs	r2, r3, #1
 801c862:	fb05 0502 	mla	r5, r5, r2, r0
 801c866:	142d      	asrs	r5, r5, #16
 801c868:	d409      	bmi.n	801c87e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c86a:	42bd      	cmp	r5, r7
 801c86c:	da07      	bge.n	801c87e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c86e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c870:	fb05 1202 	mla	r2, r5, r2, r1
 801c874:	1412      	asrs	r2, r2, #16
 801c876:	d402      	bmi.n	801c87e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c878:	42b2      	cmp	r2, r6
 801c87a:	f2c0 80c7 	blt.w	801ca0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801c87e:	2700      	movs	r7, #0
 801c880:	19da      	adds	r2, r3, r7
 801c882:	2a00      	cmp	r2, #0
 801c884:	dc3e      	bgt.n	801c904 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c886:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c88a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c88e:	f1bb 0f00 	cmp.w	fp, #0
 801c892:	f340 8131 	ble.w	801caf8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c896:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c89a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c89e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c8a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8a4:	f1bb 0b01 	subs.w	fp, fp, #1
 801c8a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c8ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c8b0:	eeb0 6a62 	vmov.f32	s12, s5
 801c8b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c8b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c8bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c8c0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c8c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c8c8:	eeb0 6a43 	vmov.f32	s12, s6
 801c8cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c8d0:	ee12 2a90 	vmov	r2, s5
 801c8d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c8d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8dc:	ee13 2a10 	vmov	r2, s6
 801c8e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c8e4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c8e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c8ec:	9a03      	ldr	r2, [sp, #12]
 801c8ee:	9314      	str	r3, [sp, #80]	; 0x50
 801c8f0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c8f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c8f6:	eeb0 3a67 	vmov.f32	s6, s15
 801c8fa:	bf08      	it	eq
 801c8fc:	4613      	moveq	r3, r2
 801c8fe:	eef0 2a47 	vmov.f32	s5, s14
 801c902:	e789      	b.n	801c818 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c904:	1405      	asrs	r5, r0, #16
 801c906:	d435      	bmi.n	801c974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c908:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c90c:	42aa      	cmp	r2, r5
 801c90e:	dd31      	ble.n	801c974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c910:	140e      	asrs	r6, r1, #16
 801c912:	d42f      	bmi.n	801c974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c914:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c918:	42b2      	cmp	r2, r6
 801c91a:	dd2b      	ble.n	801c974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c91c:	9a00      	ldr	r2, [sp, #0]
 801c91e:	fb06 5502 	mla	r5, r6, r2, r5
 801c922:	086a      	lsrs	r2, r5, #1
 801c924:	9e01      	ldr	r6, [sp, #4]
 801c926:	5cb2      	ldrb	r2, [r6, r2]
 801c928:	07ee      	lsls	r6, r5, #31
 801c92a:	bf54      	ite	pl
 801c92c:	f002 020f 	andpl.w	r2, r2, #15
 801c930:	1112      	asrmi	r2, r2, #4
 801c932:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c936:	b2d2      	uxtb	r2, r2
 801c938:	b1e2      	cbz	r2, 801c974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c93a:	9d04      	ldr	r5, [sp, #16]
 801c93c:	436a      	muls	r2, r5
 801c93e:	1c55      	adds	r5, r2, #1
 801c940:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c944:	4d6e      	ldr	r5, [pc, #440]	; (801cb00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c946:	682d      	ldr	r5, [r5, #0]
 801c948:	1212      	asrs	r2, r2, #8
 801c94a:	0a2e      	lsrs	r6, r5, #8
 801c94c:	2aff      	cmp	r2, #255	; 0xff
 801c94e:	9605      	str	r6, [sp, #20]
 801c950:	d116      	bne.n	801c980 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c952:	f06f 0201 	mvn.w	r2, #1
 801c956:	fb02 fc07 	mul.w	ip, r2, r7
 801c95a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c95e:	096a      	lsrs	r2, r5, #5
 801c960:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c964:	f026 0607 	bic.w	r6, r6, #7
 801c968:	4316      	orrs	r6, r2
 801c96a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c96e:	432e      	orrs	r6, r5
 801c970:	f824 600c 	strh.w	r6, [r4, ip]
 801c974:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c976:	4410      	add	r0, r2
 801c978:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c97a:	3f01      	subs	r7, #1
 801c97c:	4411      	add	r1, r2
 801c97e:	e77f      	b.n	801c880 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801c980:	f06f 0601 	mvn.w	r6, #1
 801c984:	437e      	muls	r6, r7
 801c986:	fa1f fa82 	uxth.w	sl, r2
 801c98a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801c98e:	9602      	str	r6, [sp, #8]
 801c990:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c994:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801c998:	43d2      	mvns	r2, r2
 801c99a:	b2d2      	uxtb	r2, r2
 801c99c:	fb1c fc0a 	smulbb	ip, ip, sl
 801c9a0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c9a4:	fb0e ce02 	mla	lr, lr, r2, ip
 801c9a8:	b2ed      	uxtb	r5, r5
 801c9aa:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c9ae:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c9b2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c9b6:	fa5f f888 	uxtb.w	r8, r8
 801c9ba:	fb15 f50a 	smulbb	r5, r5, sl
 801c9be:	fb08 5502 	mla	r5, r8, r2, r5
 801c9c2:	fa1f fe8e 	uxth.w	lr, lr
 801c9c6:	fb16 f60a 	smulbb	r6, r6, sl
 801c9ca:	b2ad      	uxth	r5, r5
 801c9cc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c9d0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c9d4:	f10e 0201 	add.w	r2, lr, #1
 801c9d8:	1c6e      	adds	r6, r5, #1
 801c9da:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c9de:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801c9e2:	fa1f fc8c 	uxth.w	ip, ip
 801c9e6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c9ea:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c9ee:	ea46 0e0e 	orr.w	lr, r6, lr
 801c9f2:	f10c 0601 	add.w	r6, ip, #1
 801c9f6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c9fa:	0976      	lsrs	r6, r6, #5
 801c9fc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ca00:	9a02      	ldr	r2, [sp, #8]
 801ca02:	ea4e 0e06 	orr.w	lr, lr, r6
 801ca06:	f824 e002 	strh.w	lr, [r4, r2]
 801ca0a:	e7b3      	b.n	801c974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ca0c:	f04f 0800 	mov.w	r8, #0
 801ca10:	eba3 0208 	sub.w	r2, r3, r8
 801ca14:	2a00      	cmp	r2, #0
 801ca16:	f77f af36 	ble.w	801c886 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ca1a:	9e00      	ldr	r6, [sp, #0]
 801ca1c:	1402      	asrs	r2, r0, #16
 801ca1e:	140d      	asrs	r5, r1, #16
 801ca20:	fb06 2505 	mla	r5, r6, r5, r2
 801ca24:	086a      	lsrs	r2, r5, #1
 801ca26:	9e01      	ldr	r6, [sp, #4]
 801ca28:	5cb2      	ldrb	r2, [r6, r2]
 801ca2a:	07ed      	lsls	r5, r5, #31
 801ca2c:	bf54      	ite	pl
 801ca2e:	f002 020f 	andpl.w	r2, r2, #15
 801ca32:	1112      	asrmi	r2, r2, #4
 801ca34:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ca38:	b2d2      	uxtb	r2, r2
 801ca3a:	b1c2      	cbz	r2, 801ca6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ca3c:	9d04      	ldr	r5, [sp, #16]
 801ca3e:	436a      	muls	r2, r5
 801ca40:	1c55      	adds	r5, r2, #1
 801ca42:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801ca46:	4d2e      	ldr	r5, [pc, #184]	; (801cb00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801ca48:	1212      	asrs	r2, r2, #8
 801ca4a:	682e      	ldr	r6, [r5, #0]
 801ca4c:	2aff      	cmp	r2, #255	; 0xff
 801ca4e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801ca52:	d113      	bne.n	801ca7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801ca54:	0972      	lsrs	r2, r6, #5
 801ca56:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801ca5a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ca5e:	f025 0507 	bic.w	r5, r5, #7
 801ca62:	4315      	orrs	r5, r2
 801ca64:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ca68:	4335      	orrs	r5, r6
 801ca6a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801ca6e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ca70:	4410      	add	r0, r2
 801ca72:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ca74:	f108 0801 	add.w	r8, r8, #1
 801ca78:	4411      	add	r1, r2
 801ca7a:	e7c9      	b.n	801ca10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ca7c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801ca80:	fa1f fa82 	uxth.w	sl, r2
 801ca84:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ca88:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801ca8c:	43d2      	mvns	r2, r2
 801ca8e:	b2d2      	uxtb	r2, r2
 801ca90:	fb17 f70a 	smulbb	r7, r7, sl
 801ca94:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ca98:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ca9c:	b2f6      	uxtb	r6, r6
 801ca9e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801caa2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801caa6:	fa5f fe8e 	uxtb.w	lr, lr
 801caaa:	fb16 f60a 	smulbb	r6, r6, sl
 801caae:	fb0e 6602 	mla	r6, lr, r2, r6
 801cab2:	b2ed      	uxtb	r5, r5
 801cab4:	fa1f fc8c 	uxth.w	ip, ip
 801cab8:	fb15 f50a 	smulbb	r5, r5, sl
 801cabc:	b2b6      	uxth	r6, r6
 801cabe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cac2:	fb07 5702 	mla	r7, r7, r2, r5
 801cac6:	f10c 0201 	add.w	r2, ip, #1
 801caca:	1c75      	adds	r5, r6, #1
 801cacc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801cad0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801cad4:	b2bf      	uxth	r7, r7
 801cad6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801cada:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801cade:	ea45 0c0c 	orr.w	ip, r5, ip
 801cae2:	1c7d      	adds	r5, r7, #1
 801cae4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801cae8:	096d      	lsrs	r5, r5, #5
 801caea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801caee:	ea4c 0c05 	orr.w	ip, ip, r5
 801caf2:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801caf6:	e7ba      	b.n	801ca6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801caf8:	b007      	add	sp, #28
 801cafa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cafe:	bf00      	nop
 801cb00:	20013844 	.word	0x20013844

0801cb04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb08:	b087      	sub	sp, #28
 801cb0a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ce18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801cb0e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cb10:	9205      	str	r2, [sp, #20]
 801cb12:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801cb16:	9101      	str	r1, [sp, #4]
 801cb18:	6841      	ldr	r1, [r0, #4]
 801cb1a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801cb1e:	fb01 2404 	mla	r4, r1, r4, r2
 801cb22:	6802      	ldr	r2, [r0, #0]
 801cb24:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801cb28:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cb2c:	3201      	adds	r2, #1
 801cb2e:	f022 0201 	bic.w	r2, r2, #1
 801cb32:	9202      	str	r2, [sp, #8]
 801cb34:	f8db 2000 	ldr.w	r2, [fp]
 801cb38:	9203      	str	r2, [sp, #12]
 801cb3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801cb3e:	9a01      	ldr	r2, [sp, #4]
 801cb40:	2a00      	cmp	r2, #0
 801cb42:	dc03      	bgt.n	801cb4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cb44:	9a05      	ldr	r2, [sp, #20]
 801cb46:	2a00      	cmp	r2, #0
 801cb48:	f340 8162 	ble.w	801ce10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cb4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801cb4e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801cb52:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801cb56:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801cb5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801cb5c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801cb60:	2b00      	cmp	r3, #0
 801cb62:	dd0e      	ble.n	801cb82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801cb64:	1402      	asrs	r2, r0, #16
 801cb66:	d405      	bmi.n	801cb74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb68:	42ba      	cmp	r2, r7
 801cb6a:	da03      	bge.n	801cb74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb6c:	140a      	asrs	r2, r1, #16
 801cb6e:	d401      	bmi.n	801cb74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801cb70:	42b2      	cmp	r2, r6
 801cb72:	db07      	blt.n	801cb84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801cb74:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cb76:	4410      	add	r0, r2
 801cb78:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cb7a:	3b01      	subs	r3, #1
 801cb7c:	4411      	add	r1, r2
 801cb7e:	3402      	adds	r4, #2
 801cb80:	e7ee      	b.n	801cb60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801cb82:	d017      	beq.n	801cbb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801cb84:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801cb86:	1e5a      	subs	r2, r3, #1
 801cb88:	fb05 0502 	mla	r5, r5, r2, r0
 801cb8c:	142d      	asrs	r5, r5, #16
 801cb8e:	d409      	bmi.n	801cba4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cb90:	42bd      	cmp	r5, r7
 801cb92:	da07      	bge.n	801cba4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cb94:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801cb96:	fb05 1202 	mla	r2, r5, r2, r1
 801cb9a:	1412      	asrs	r2, r2, #16
 801cb9c:	d402      	bmi.n	801cba4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801cb9e:	42b2      	cmp	r2, r6
 801cba0:	f2c0 80c3 	blt.w	801cd2a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801cba4:	2500      	movs	r5, #0
 801cba6:	195a      	adds	r2, r3, r5
 801cba8:	2a00      	cmp	r2, #0
 801cbaa:	dc3f      	bgt.n	801cc2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801cbac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801cbb0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cbb4:	9b01      	ldr	r3, [sp, #4]
 801cbb6:	2b00      	cmp	r3, #0
 801cbb8:	f340 812a 	ble.w	801ce10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801cbbc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cbc0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cbc4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cbc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cbca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cbce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cbd2:	eeb0 6a62 	vmov.f32	s12, s5
 801cbd6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cbda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cbde:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cbe2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801cbe6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cbea:	eeb0 6a43 	vmov.f32	s12, s6
 801cbee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cbf2:	ee12 2a90 	vmov	r2, s5
 801cbf6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cbfa:	fb92 f3f3 	sdiv	r3, r2, r3
 801cbfe:	ee13 2a10 	vmov	r2, s6
 801cc02:	9313      	str	r3, [sp, #76]	; 0x4c
 801cc04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc06:	fb92 f3f3 	sdiv	r3, r2, r3
 801cc0a:	9314      	str	r3, [sp, #80]	; 0x50
 801cc0c:	9b01      	ldr	r3, [sp, #4]
 801cc0e:	9a05      	ldr	r2, [sp, #20]
 801cc10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cc14:	3b01      	subs	r3, #1
 801cc16:	9301      	str	r3, [sp, #4]
 801cc18:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801cc1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc1e:	eeb0 3a67 	vmov.f32	s6, s15
 801cc22:	bf08      	it	eq
 801cc24:	4613      	moveq	r3, r2
 801cc26:	eef0 2a47 	vmov.f32	s5, s14
 801cc2a:	e788      	b.n	801cb3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cc2c:	1406      	asrs	r6, r0, #16
 801cc2e:	d42c      	bmi.n	801cc8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc30:	f8db 2008 	ldr.w	r2, [fp, #8]
 801cc34:	42b2      	cmp	r2, r6
 801cc36:	dd28      	ble.n	801cc8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc38:	140f      	asrs	r7, r1, #16
 801cc3a:	d426      	bmi.n	801cc8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc3c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801cc40:	42ba      	cmp	r2, r7
 801cc42:	dd22      	ble.n	801cc8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc44:	9a02      	ldr	r2, [sp, #8]
 801cc46:	fb07 6602 	mla	r6, r7, r2, r6
 801cc4a:	0872      	lsrs	r2, r6, #1
 801cc4c:	9f03      	ldr	r7, [sp, #12]
 801cc4e:	5cba      	ldrb	r2, [r7, r2]
 801cc50:	07f6      	lsls	r6, r6, #31
 801cc52:	bf54      	ite	pl
 801cc54:	f002 020f 	andpl.w	r2, r2, #15
 801cc58:	1112      	asrmi	r2, r2, #4
 801cc5a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cc5e:	b2d2      	uxtb	r2, r2
 801cc60:	2aff      	cmp	r2, #255	; 0xff
 801cc62:	d118      	bne.n	801cc96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801cc64:	f8d8 2000 	ldr.w	r2, [r8]
 801cc68:	f06f 0601 	mvn.w	r6, #1
 801cc6c:	fb06 f705 	mul.w	r7, r6, r5
 801cc70:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801cc74:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801cc78:	0956      	lsrs	r6, r2, #5
 801cc7a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cc7e:	ea4c 0606 	orr.w	r6, ip, r6
 801cc82:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cc86:	4316      	orrs	r6, r2
 801cc88:	53e6      	strh	r6, [r4, r7]
 801cc8a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cc8c:	4410      	add	r0, r2
 801cc8e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cc90:	3d01      	subs	r5, #1
 801cc92:	4411      	add	r1, r2
 801cc94:	e787      	b.n	801cba6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801cc96:	2a00      	cmp	r2, #0
 801cc98:	d0f7      	beq.n	801cc8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cc9a:	f06f 0601 	mvn.w	r6, #1
 801cc9e:	436e      	muls	r6, r5
 801cca0:	f8d8 c000 	ldr.w	ip, [r8]
 801cca4:	f834 e006 	ldrh.w	lr, [r4, r6]
 801cca8:	9604      	str	r6, [sp, #16]
 801ccaa:	fa1f f982 	uxth.w	r9, r2
 801ccae:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ccb2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ccb6:	43d2      	mvns	r2, r2
 801ccb8:	b2d2      	uxtb	r2, r2
 801ccba:	fb16 f609 	smulbb	r6, r6, r9
 801ccbe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ccc2:	fb07 6702 	mla	r7, r7, r2, r6
 801ccc6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ccca:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ccce:	fa5f fc8c 	uxtb.w	ip, ip
 801ccd2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ccd6:	fa5f fe8e 	uxtb.w	lr, lr
 801ccda:	fb1c fc09 	smulbb	ip, ip, r9
 801ccde:	fb0e cc02 	mla	ip, lr, r2, ip
 801cce2:	b2bf      	uxth	r7, r7
 801cce4:	fb1a fa09 	smulbb	sl, sl, r9
 801cce8:	fa1f fc8c 	uxth.w	ip, ip
 801ccec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ccf0:	fb06 a602 	mla	r6, r6, r2, sl
 801ccf4:	1c7a      	adds	r2, r7, #1
 801ccf6:	f10c 0a01 	add.w	sl, ip, #1
 801ccfa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ccfe:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801cd02:	b2b6      	uxth	r6, r6
 801cd04:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cd08:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801cd0c:	ea4a 0707 	orr.w	r7, sl, r7
 801cd10:	f106 0a01 	add.w	sl, r6, #1
 801cd14:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801cd18:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cd1c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801cd20:	9a04      	ldr	r2, [sp, #16]
 801cd22:	ea47 070a 	orr.w	r7, r7, sl
 801cd26:	52a7      	strh	r7, [r4, r2]
 801cd28:	e7af      	b.n	801cc8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801cd2a:	f04f 0e00 	mov.w	lr, #0
 801cd2e:	eba3 020e 	sub.w	r2, r3, lr
 801cd32:	2a00      	cmp	r2, #0
 801cd34:	f77f af3a 	ble.w	801cbac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801cd38:	9e02      	ldr	r6, [sp, #8]
 801cd3a:	1402      	asrs	r2, r0, #16
 801cd3c:	140d      	asrs	r5, r1, #16
 801cd3e:	fb06 2505 	mla	r5, r6, r5, r2
 801cd42:	086a      	lsrs	r2, r5, #1
 801cd44:	9e03      	ldr	r6, [sp, #12]
 801cd46:	5cb2      	ldrb	r2, [r6, r2]
 801cd48:	07ed      	lsls	r5, r5, #31
 801cd4a:	bf54      	ite	pl
 801cd4c:	f002 020f 	andpl.w	r2, r2, #15
 801cd50:	1112      	asrmi	r2, r2, #4
 801cd52:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801cd56:	b2d2      	uxtb	r2, r2
 801cd58:	2aff      	cmp	r2, #255	; 0xff
 801cd5a:	d115      	bne.n	801cd88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801cd5c:	f8d8 5000 	ldr.w	r5, [r8]
 801cd60:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801cd64:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801cd68:	096a      	lsrs	r2, r5, #5
 801cd6a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd6e:	4332      	orrs	r2, r6
 801cd70:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801cd74:	432a      	orrs	r2, r5
 801cd76:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801cd7a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801cd7c:	4410      	add	r0, r2
 801cd7e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cd80:	f10e 0e01 	add.w	lr, lr, #1
 801cd84:	4411      	add	r1, r2
 801cd86:	e7d2      	b.n	801cd2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801cd88:	2a00      	cmp	r2, #0
 801cd8a:	d0f6      	beq.n	801cd7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cd8c:	f8d8 7000 	ldr.w	r7, [r8]
 801cd90:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801cd94:	fa1f f982 	uxth.w	r9, r2
 801cd98:	ea4f 262c 	mov.w	r6, ip, asr #8
 801cd9c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801cda0:	43d2      	mvns	r2, r2
 801cda2:	b2d2      	uxtb	r2, r2
 801cda4:	fb15 f509 	smulbb	r5, r5, r9
 801cda8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cdac:	fb06 5602 	mla	r6, r6, r2, r5
 801cdb0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801cdb4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cdb8:	b2ff      	uxtb	r7, r7
 801cdba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801cdbe:	fa5f fc8c 	uxtb.w	ip, ip
 801cdc2:	fb17 f709 	smulbb	r7, r7, r9
 801cdc6:	fb0c 7702 	mla	r7, ip, r2, r7
 801cdca:	b2b6      	uxth	r6, r6
 801cdcc:	fb1a fa09 	smulbb	sl, sl, r9
 801cdd0:	b2bf      	uxth	r7, r7
 801cdd2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cdd6:	fb05 a502 	mla	r5, r5, r2, sl
 801cdda:	1c72      	adds	r2, r6, #1
 801cddc:	f107 0a01 	add.w	sl, r7, #1
 801cde0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801cde4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801cde8:	b2ad      	uxth	r5, r5
 801cdea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801cdee:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801cdf2:	ea4a 0606 	orr.w	r6, sl, r6
 801cdf6:	f105 0a01 	add.w	sl, r5, #1
 801cdfa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801cdfe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ce02:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ce06:	ea46 060a 	orr.w	r6, r6, sl
 801ce0a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ce0e:	e7b4      	b.n	801cd7a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ce10:	b007      	add	sp, #28
 801ce12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce16:	bf00      	nop
 801ce18:	20013844 	.word	0x20013844

0801ce1c <_ZN8touchgfx8LCD16bppD1Ev>:
 801ce1c:	4770      	bx	lr

0801ce1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ce1e:	4770      	bx	lr

0801ce20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ce20:	4770      	bx	lr

0801ce22 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ce22:	4770      	bx	lr

0801ce24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ce24:	4770      	bx	lr

0801ce26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ce26:	4770      	bx	lr

0801ce28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ce28:	4770      	bx	lr

0801ce2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ce2a:	4770      	bx	lr

0801ce2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ce2c:	4770      	bx	lr

0801ce2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ce2e:	4770      	bx	lr

0801ce30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ce30:	4770      	bx	lr

0801ce32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ce32:	4770      	bx	lr

0801ce34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ce34:	4770      	bx	lr

0801ce36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ce36:	4770      	bx	lr

0801ce38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ce38:	4770      	bx	lr

0801ce3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ce3a:	4770      	bx	lr

0801ce3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ce3c:	4770      	bx	lr

0801ce3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ce3e:	4770      	bx	lr

0801ce40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ce40:	4770      	bx	lr

0801ce42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ce42:	4770      	bx	lr

0801ce44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ce44:	4770      	bx	lr

0801ce46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ce46:	4770      	bx	lr

0801ce48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ce48:	4770      	bx	lr

0801ce4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ce4a:	4770      	bx	lr

0801ce4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ce4c:	4770      	bx	lr

0801ce4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ce4e:	4770      	bx	lr

0801ce50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ce50:	4770      	bx	lr

0801ce52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ce52:	4770      	bx	lr

0801ce54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ce54:	4770      	bx	lr

0801ce56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ce56:	4770      	bx	lr

0801ce58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ce58:	4770      	bx	lr

0801ce5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ce5a:	4770      	bx	lr

0801ce5c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ce5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ce60:	b088      	sub	sp, #32
 801ce62:	ac08      	add	r4, sp, #32
 801ce64:	4606      	mov	r6, r0
 801ce66:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ce6a:	4620      	mov	r0, r4
 801ce6c:	4688      	mov	r8, r1
 801ce6e:	4691      	mov	r9, r2
 801ce70:	f7fd fc62 	bl	801a738 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ce74:	6833      	ldr	r3, [r6, #0]
 801ce76:	4605      	mov	r5, r0
 801ce78:	4620      	mov	r0, r4
 801ce7a:	699f      	ldr	r7, [r3, #24]
 801ce7c:	f7fd fb70 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ce80:	4682      	mov	sl, r0
 801ce82:	4620      	mov	r0, r4
 801ce84:	f7fd fba0 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ce88:	9500      	str	r5, [sp, #0]
 801ce8a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ce8e:	464b      	mov	r3, r9
 801ce90:	a806      	add	r0, sp, #24
 801ce92:	4642      	mov	r2, r8
 801ce94:	4631      	mov	r1, r6
 801ce96:	47b8      	blx	r7
 801ce98:	4628      	mov	r0, r5
 801ce9a:	b008      	add	sp, #32
 801ce9c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801cea0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801cea0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801cea4:	2300      	movs	r3, #0
 801cea6:	9300      	str	r3, [sp, #0]
 801cea8:	4b3d      	ldr	r3, [pc, #244]	; (801cfa0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ceaa:	781b      	ldrb	r3, [r3, #0]
 801ceac:	2b00      	cmp	r3, #0
 801ceae:	d137      	bne.n	801cf20 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801ceb0:	4a3c      	ldr	r2, [pc, #240]	; (801cfa4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ceb2:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ceb6:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ceba:	2b00      	cmp	r3, #0
 801cebc:	d132      	bne.n	801cf24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801cebe:	4b3a      	ldr	r3, [pc, #232]	; (801cfa8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801cec0:	f9b3 3000 	ldrsh.w	r3, [r3]
 801cec4:	6808      	ldr	r0, [r1, #0]
 801cec6:	6849      	ldr	r1, [r1, #4]
 801cec8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801cecc:	ac02      	add	r4, sp, #8
 801cece:	ab02      	add	r3, sp, #8
 801ced0:	c303      	stmia	r3!, {r0, r1}
 801ced2:	4669      	mov	r1, sp
 801ced4:	4620      	mov	r0, r4
 801ced6:	f7f9 fd83 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ceda:	4668      	mov	r0, sp
 801cedc:	f7f9 fd3c 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cee0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801cee4:	f8bd 2000 	ldrh.w	r2, [sp]
 801cee8:	4d30      	ldr	r5, [pc, #192]	; (801cfac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ceea:	4413      	add	r3, r2
 801ceec:	f8ad 3008 	strh.w	r3, [sp, #8]
 801cef0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cef4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801cef8:	6828      	ldr	r0, [r5, #0]
 801cefa:	4413      	add	r3, r2
 801cefc:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cf00:	6803      	ldr	r3, [r0, #0]
 801cf02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cf04:	4798      	blx	r3
 801cf06:	f010 0f01 	tst.w	r0, #1
 801cf0a:	462f      	mov	r7, r5
 801cf0c:	d00c      	beq.n	801cf28 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801cf0e:	6828      	ldr	r0, [r5, #0]
 801cf10:	6803      	ldr	r3, [r0, #0]
 801cf12:	e894 0006 	ldmia.w	r4, {r1, r2}
 801cf16:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801cf18:	4798      	blx	r3
 801cf1a:	b004      	add	sp, #16
 801cf1c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cf20:	4a21      	ldr	r2, [pc, #132]	; (801cfa8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801cf22:	e7c6      	b.n	801ceb2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801cf24:	4b1f      	ldr	r3, [pc, #124]	; (801cfa4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801cf26:	e7cb      	b.n	801cec0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801cf28:	6838      	ldr	r0, [r7, #0]
 801cf2a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801cf2e:	6803      	ldr	r3, [r0, #0]
 801cf30:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801cf34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801cf36:	4798      	blx	r3
 801cf38:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801cf3c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cf40:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801cf44:	fb16 3602 	smlabb	r6, r6, r2, r3
 801cf48:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cf4c:	6838      	ldr	r0, [r7, #0]
 801cf4e:	6803      	ldr	r3, [r0, #0]
 801cf50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf52:	4798      	blx	r3
 801cf54:	4a13      	ldr	r2, [pc, #76]	; (801cfa4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801cf56:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801cf5a:	8813      	ldrh	r3, [r2, #0]
 801cf5c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cf60:	fb03 1404 	mla	r4, r3, r4, r1
 801cf64:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801cf68:	435d      	muls	r5, r3
 801cf6a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801cf6e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801cf72:	4691      	mov	r9, r2
 801cf74:	6838      	ldr	r0, [r7, #0]
 801cf76:	42ac      	cmp	r4, r5
 801cf78:	6803      	ldr	r3, [r0, #0]
 801cf7a:	d20e      	bcs.n	801cf9a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801cf7c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801cf80:	4632      	mov	r2, r6
 801cf82:	4643      	mov	r3, r8
 801cf84:	4621      	mov	r1, r4
 801cf86:	47d0      	blx	sl
 801cf88:	f8b9 3000 	ldrh.w	r3, [r9]
 801cf8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cf90:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801cf94:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801cf98:	e7ec      	b.n	801cf74 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801cf9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf9c:	4798      	blx	r3
 801cf9e:	e7bc      	b.n	801cf1a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801cfa0:	2001382c 	.word	0x2001382c
 801cfa4:	2001382e 	.word	0x2001382e
 801cfa8:	20013830 	.word	0x20013830
 801cfac:	20013834 	.word	0x20013834

0801cfb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801cfb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cfb4:	b08b      	sub	sp, #44	; 0x2c
 801cfb6:	460f      	mov	r7, r1
 801cfb8:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801cfbc:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801cfc0:	4616      	mov	r6, r2
 801cfc2:	f1bb 0f00 	cmp.w	fp, #0
 801cfc6:	d04a      	beq.n	801d05e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801cfc8:	6810      	ldr	r0, [r2, #0]
 801cfca:	6851      	ldr	r1, [r2, #4]
 801cfcc:	ad06      	add	r5, sp, #24
 801cfce:	c503      	stmia	r5!, {r0, r1}
 801cfd0:	6818      	ldr	r0, [r3, #0]
 801cfd2:	6859      	ldr	r1, [r3, #4]
 801cfd4:	ad08      	add	r5, sp, #32
 801cfd6:	c503      	stmia	r5!, {r0, r1}
 801cfd8:	a806      	add	r0, sp, #24
 801cfda:	f7f9 fcbd 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cfde:	4631      	mov	r1, r6
 801cfe0:	a808      	add	r0, sp, #32
 801cfe2:	f7f9 fcfd 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cfe6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801cfea:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801cfee:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801cff2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801cff6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801cffa:	fb16 2103 	smlabb	r1, r6, r3, r2
 801cffe:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801d002:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801d006:	4f5f      	ldr	r7, [pc, #380]	; (801d184 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d008:	440a      	add	r2, r1
 801d00a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801d00e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801d012:	6838      	ldr	r0, [r7, #0]
 801d014:	4413      	add	r3, r2
 801d016:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801d01a:	6803      	ldr	r3, [r0, #0]
 801d01c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d01e:	4798      	blx	r3
 801d020:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d024:	46b9      	mov	r9, r7
 801d026:	d11d      	bne.n	801d064 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801d028:	b9fc      	cbnz	r4, 801d06a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d02a:	f010 0f01 	tst.w	r0, #1
 801d02e:	d01c      	beq.n	801d06a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801d030:	f8d9 0000 	ldr.w	r0, [r9]
 801d034:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801d038:	6801      	ldr	r1, [r0, #0]
 801d03a:	f8cd b00c 	str.w	fp, [sp, #12]
 801d03e:	2700      	movs	r7, #0
 801d040:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801d044:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801d048:	9402      	str	r4, [sp, #8]
 801d04a:	b2ad      	uxth	r5, r5
 801d04c:	fa1f f488 	uxth.w	r4, r8
 801d050:	9501      	str	r5, [sp, #4]
 801d052:	9400      	str	r4, [sp, #0]
 801d054:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801d056:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801d05a:	4631      	mov	r1, r6
 801d05c:	47a0      	blx	r4
 801d05e:	b00b      	add	sp, #44	; 0x2c
 801d060:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d064:	f010 0f04 	tst.w	r0, #4
 801d068:	e7e1      	b.n	801d02e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801d06a:	f8d9 0000 	ldr.w	r0, [r9]
 801d06e:	6803      	ldr	r3, [r0, #0]
 801d070:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d072:	4798      	blx	r3
 801d074:	4b44      	ldr	r3, [pc, #272]	; (801d188 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801d076:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801d07a:	881a      	ldrh	r2, [r3, #0]
 801d07c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801d080:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801d084:	fb02 1404 	mla	r4, r2, r4, r1
 801d088:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d08c:	469a      	mov	sl, r3
 801d08e:	fb05 f502 	mul.w	r5, r5, r2
 801d092:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801d096:	d059      	beq.n	801d14c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801d098:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801d09c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d0a0:	fa1f f28b 	uxth.w	r2, fp
 801d0a4:	fa1f f989 	uxth.w	r9, r9
 801d0a8:	469e      	mov	lr, r3
 801d0aa:	42ac      	cmp	r4, r5
 801d0ac:	d264      	bcs.n	801d178 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d0ae:	eb04 0a07 	add.w	sl, r4, r7
 801d0b2:	4554      	cmp	r4, sl
 801d0b4:	d23d      	bcs.n	801d132 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801d0b6:	8821      	ldrh	r1, [r4, #0]
 801d0b8:	f836 3b02 	ldrh.w	r3, [r6], #2
 801d0bc:	1208      	asrs	r0, r1, #8
 801d0be:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d0c2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d0c6:	fb10 f009 	smulbb	r0, r0, r9
 801d0ca:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801d0ce:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d0d2:	00c9      	lsls	r1, r1, #3
 801d0d4:	fb0c 0c02 	mla	ip, ip, r2, r0
 801d0d8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d0dc:	10d8      	asrs	r0, r3, #3
 801d0de:	b2c9      	uxtb	r1, r1
 801d0e0:	00db      	lsls	r3, r3, #3
 801d0e2:	fa1f fc8c 	uxth.w	ip, ip
 801d0e6:	fb1b fb09 	smulbb	fp, fp, r9
 801d0ea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d0ee:	b2db      	uxtb	r3, r3
 801d0f0:	fb11 f109 	smulbb	r1, r1, r9
 801d0f4:	fb00 b002 	mla	r0, r0, r2, fp
 801d0f8:	fb03 1302 	mla	r3, r3, r2, r1
 801d0fc:	f10c 0b01 	add.w	fp, ip, #1
 801d100:	b29b      	uxth	r3, r3
 801d102:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801d106:	b280      	uxth	r0, r0
 801d108:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801d10c:	f103 0c01 	add.w	ip, r3, #1
 801d110:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d114:	1c43      	adds	r3, r0, #1
 801d116:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d11a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d11e:	0940      	lsrs	r0, r0, #5
 801d120:	ea4c 0c0b 	orr.w	ip, ip, fp
 801d124:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d128:	ea4c 0c00 	orr.w	ip, ip, r0
 801d12c:	f824 cb02 	strh.w	ip, [r4], #2
 801d130:	e7bf      	b.n	801d0b2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801d132:	f8be 3000 	ldrh.w	r3, [lr]
 801d136:	eba3 0308 	sub.w	r3, r3, r8
 801d13a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d13e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d142:	eba3 0308 	sub.w	r3, r3, r8
 801d146:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d14a:	e7ae      	b.n	801d0aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801d14c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801d150:	f8d9 0000 	ldr.w	r0, [r9]
 801d154:	42ac      	cmp	r4, r5
 801d156:	6803      	ldr	r3, [r0, #0]
 801d158:	d20e      	bcs.n	801d178 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801d15a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801d15e:	4632      	mov	r2, r6
 801d160:	463b      	mov	r3, r7
 801d162:	4621      	mov	r1, r4
 801d164:	47c0      	blx	r8
 801d166:	f8ba 3000 	ldrh.w	r3, [sl]
 801d16a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d16e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801d172:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801d176:	e7eb      	b.n	801d150 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801d178:	4b02      	ldr	r3, [pc, #8]	; (801d184 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801d17a:	6818      	ldr	r0, [r3, #0]
 801d17c:	6803      	ldr	r3, [r0, #0]
 801d17e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d180:	4798      	blx	r3
 801d182:	e76c      	b.n	801d05e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801d184:	20013834 	.word	0x20013834
 801d188:	2001382e 	.word	0x2001382e

0801d18c <_ZN8touchgfx8LCD16bppD0Ev>:
 801d18c:	b510      	push	{r4, lr}
 801d18e:	2184      	movs	r1, #132	; 0x84
 801d190:	4604      	mov	r4, r0
 801d192:	f00d fe4a 	bl	802ae2a <_ZdlPvj>
 801d196:	4620      	mov	r0, r4
 801d198:	bd10      	pop	{r4, pc}

0801d19a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801d19a:	b510      	push	{r4, lr}
 801d19c:	2104      	movs	r1, #4
 801d19e:	4604      	mov	r4, r0
 801d1a0:	f00d fe43 	bl	802ae2a <_ZdlPvj>
 801d1a4:	4620      	mov	r0, r4
 801d1a6:	bd10      	pop	{r4, pc}

0801d1a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801d1a8:	b510      	push	{r4, lr}
 801d1aa:	2104      	movs	r1, #4
 801d1ac:	4604      	mov	r4, r0
 801d1ae:	f00d fe3c 	bl	802ae2a <_ZdlPvj>
 801d1b2:	4620      	mov	r0, r4
 801d1b4:	bd10      	pop	{r4, pc}

0801d1b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801d1b6:	b510      	push	{r4, lr}
 801d1b8:	f640 0144 	movw	r1, #2116	; 0x844
 801d1bc:	4604      	mov	r4, r0
 801d1be:	f00d fe34 	bl	802ae2a <_ZdlPvj>
 801d1c2:	4620      	mov	r0, r4
 801d1c4:	bd10      	pop	{r4, pc}

0801d1c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d1c6:	b510      	push	{r4, lr}
 801d1c8:	2104      	movs	r1, #4
 801d1ca:	4604      	mov	r4, r0
 801d1cc:	f00d fe2d 	bl	802ae2a <_ZdlPvj>
 801d1d0:	4620      	mov	r0, r4
 801d1d2:	bd10      	pop	{r4, pc}

0801d1d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d1d4:	b510      	push	{r4, lr}
 801d1d6:	2104      	movs	r1, #4
 801d1d8:	4604      	mov	r4, r0
 801d1da:	f00d fe26 	bl	802ae2a <_ZdlPvj>
 801d1de:	4620      	mov	r0, r4
 801d1e0:	bd10      	pop	{r4, pc}

0801d1e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d1e2:	b510      	push	{r4, lr}
 801d1e4:	2104      	movs	r1, #4
 801d1e6:	4604      	mov	r4, r0
 801d1e8:	f00d fe1f 	bl	802ae2a <_ZdlPvj>
 801d1ec:	4620      	mov	r0, r4
 801d1ee:	bd10      	pop	{r4, pc}

0801d1f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d1f0:	b510      	push	{r4, lr}
 801d1f2:	2104      	movs	r1, #4
 801d1f4:	4604      	mov	r4, r0
 801d1f6:	f00d fe18 	bl	802ae2a <_ZdlPvj>
 801d1fa:	4620      	mov	r0, r4
 801d1fc:	bd10      	pop	{r4, pc}

0801d1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d1fe:	b510      	push	{r4, lr}
 801d200:	2104      	movs	r1, #4
 801d202:	4604      	mov	r4, r0
 801d204:	f00d fe11 	bl	802ae2a <_ZdlPvj>
 801d208:	4620      	mov	r0, r4
 801d20a:	bd10      	pop	{r4, pc}

0801d20c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801d20c:	b510      	push	{r4, lr}
 801d20e:	2104      	movs	r1, #4
 801d210:	4604      	mov	r4, r0
 801d212:	f00d fe0a 	bl	802ae2a <_ZdlPvj>
 801d216:	4620      	mov	r0, r4
 801d218:	bd10      	pop	{r4, pc}

0801d21a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d21a:	b510      	push	{r4, lr}
 801d21c:	2104      	movs	r1, #4
 801d21e:	4604      	mov	r4, r0
 801d220:	f00d fe03 	bl	802ae2a <_ZdlPvj>
 801d224:	4620      	mov	r0, r4
 801d226:	bd10      	pop	{r4, pc}

0801d228 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801d228:	b510      	push	{r4, lr}
 801d22a:	2104      	movs	r1, #4
 801d22c:	4604      	mov	r4, r0
 801d22e:	f00d fdfc 	bl	802ae2a <_ZdlPvj>
 801d232:	4620      	mov	r0, r4
 801d234:	bd10      	pop	{r4, pc}

0801d236 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d236:	b510      	push	{r4, lr}
 801d238:	2104      	movs	r1, #4
 801d23a:	4604      	mov	r4, r0
 801d23c:	f00d fdf5 	bl	802ae2a <_ZdlPvj>
 801d240:	4620      	mov	r0, r4
 801d242:	bd10      	pop	{r4, pc}

0801d244 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d244:	b510      	push	{r4, lr}
 801d246:	2104      	movs	r1, #4
 801d248:	4604      	mov	r4, r0
 801d24a:	f00d fdee 	bl	802ae2a <_ZdlPvj>
 801d24e:	4620      	mov	r0, r4
 801d250:	bd10      	pop	{r4, pc}

0801d252 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d252:	b510      	push	{r4, lr}
 801d254:	2104      	movs	r1, #4
 801d256:	4604      	mov	r4, r0
 801d258:	f00d fde7 	bl	802ae2a <_ZdlPvj>
 801d25c:	4620      	mov	r0, r4
 801d25e:	bd10      	pop	{r4, pc}

0801d260 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d260:	b510      	push	{r4, lr}
 801d262:	2104      	movs	r1, #4
 801d264:	4604      	mov	r4, r0
 801d266:	f00d fde0 	bl	802ae2a <_ZdlPvj>
 801d26a:	4620      	mov	r0, r4
 801d26c:	bd10      	pop	{r4, pc}

0801d26e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801d26e:	b510      	push	{r4, lr}
 801d270:	2104      	movs	r1, #4
 801d272:	4604      	mov	r4, r0
 801d274:	f00d fdd9 	bl	802ae2a <_ZdlPvj>
 801d278:	4620      	mov	r0, r4
 801d27a:	bd10      	pop	{r4, pc}

0801d27c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801d27c:	b510      	push	{r4, lr}
 801d27e:	2104      	movs	r1, #4
 801d280:	4604      	mov	r4, r0
 801d282:	f00d fdd2 	bl	802ae2a <_ZdlPvj>
 801d286:	4620      	mov	r0, r4
 801d288:	bd10      	pop	{r4, pc}

0801d28a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d28a:	b510      	push	{r4, lr}
 801d28c:	2104      	movs	r1, #4
 801d28e:	4604      	mov	r4, r0
 801d290:	f00d fdcb 	bl	802ae2a <_ZdlPvj>
 801d294:	4620      	mov	r0, r4
 801d296:	bd10      	pop	{r4, pc}

0801d298 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d298:	b510      	push	{r4, lr}
 801d29a:	2104      	movs	r1, #4
 801d29c:	4604      	mov	r4, r0
 801d29e:	f00d fdc4 	bl	802ae2a <_ZdlPvj>
 801d2a2:	4620      	mov	r0, r4
 801d2a4:	bd10      	pop	{r4, pc}

0801d2a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801d2a6:	b510      	push	{r4, lr}
 801d2a8:	2104      	movs	r1, #4
 801d2aa:	4604      	mov	r4, r0
 801d2ac:	f00d fdbd 	bl	802ae2a <_ZdlPvj>
 801d2b0:	4620      	mov	r0, r4
 801d2b2:	bd10      	pop	{r4, pc}

0801d2b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801d2b4:	b510      	push	{r4, lr}
 801d2b6:	2104      	movs	r1, #4
 801d2b8:	4604      	mov	r4, r0
 801d2ba:	f00d fdb6 	bl	802ae2a <_ZdlPvj>
 801d2be:	4620      	mov	r0, r4
 801d2c0:	bd10      	pop	{r4, pc}

0801d2c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d2c2:	b510      	push	{r4, lr}
 801d2c4:	2104      	movs	r1, #4
 801d2c6:	4604      	mov	r4, r0
 801d2c8:	f00d fdaf 	bl	802ae2a <_ZdlPvj>
 801d2cc:	4620      	mov	r0, r4
 801d2ce:	bd10      	pop	{r4, pc}

0801d2d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d2d0:	b510      	push	{r4, lr}
 801d2d2:	2104      	movs	r1, #4
 801d2d4:	4604      	mov	r4, r0
 801d2d6:	f00d fda8 	bl	802ae2a <_ZdlPvj>
 801d2da:	4620      	mov	r0, r4
 801d2dc:	bd10      	pop	{r4, pc}

0801d2de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801d2de:	b510      	push	{r4, lr}
 801d2e0:	2104      	movs	r1, #4
 801d2e2:	4604      	mov	r4, r0
 801d2e4:	f00d fda1 	bl	802ae2a <_ZdlPvj>
 801d2e8:	4620      	mov	r0, r4
 801d2ea:	bd10      	pop	{r4, pc}

0801d2ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801d2ec:	b510      	push	{r4, lr}
 801d2ee:	2104      	movs	r1, #4
 801d2f0:	4604      	mov	r4, r0
 801d2f2:	f00d fd9a 	bl	802ae2a <_ZdlPvj>
 801d2f6:	4620      	mov	r0, r4
 801d2f8:	bd10      	pop	{r4, pc}

0801d2fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801d2fa:	b510      	push	{r4, lr}
 801d2fc:	2104      	movs	r1, #4
 801d2fe:	4604      	mov	r4, r0
 801d300:	f00d fd93 	bl	802ae2a <_ZdlPvj>
 801d304:	4620      	mov	r0, r4
 801d306:	bd10      	pop	{r4, pc}

0801d308 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801d308:	b510      	push	{r4, lr}
 801d30a:	2104      	movs	r1, #4
 801d30c:	4604      	mov	r4, r0
 801d30e:	f00d fd8c 	bl	802ae2a <_ZdlPvj>
 801d312:	4620      	mov	r0, r4
 801d314:	bd10      	pop	{r4, pc}

0801d316 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801d316:	b510      	push	{r4, lr}
 801d318:	2104      	movs	r1, #4
 801d31a:	4604      	mov	r4, r0
 801d31c:	f00d fd85 	bl	802ae2a <_ZdlPvj>
 801d320:	4620      	mov	r0, r4
 801d322:	bd10      	pop	{r4, pc}

0801d324 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801d324:	b510      	push	{r4, lr}
 801d326:	2104      	movs	r1, #4
 801d328:	4604      	mov	r4, r0
 801d32a:	f00d fd7e 	bl	802ae2a <_ZdlPvj>
 801d32e:	4620      	mov	r0, r4
 801d330:	bd10      	pop	{r4, pc}

0801d332 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801d332:	b510      	push	{r4, lr}
 801d334:	2104      	movs	r1, #4
 801d336:	4604      	mov	r4, r0
 801d338:	f00d fd77 	bl	802ae2a <_ZdlPvj>
 801d33c:	4620      	mov	r0, r4
 801d33e:	bd10      	pop	{r4, pc}

0801d340 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801d340:	b510      	push	{r4, lr}
 801d342:	2104      	movs	r1, #4
 801d344:	4604      	mov	r4, r0
 801d346:	f00d fd70 	bl	802ae2a <_ZdlPvj>
 801d34a:	4620      	mov	r0, r4
 801d34c:	bd10      	pop	{r4, pc}
	...

0801d350 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d354:	b08f      	sub	sp, #60	; 0x3c
 801d356:	461c      	mov	r4, r3
 801d358:	9205      	str	r2, [sp, #20]
 801d35a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d35e:	9100      	str	r1, [sp, #0]
 801d360:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d362:	9201      	str	r2, [sp, #4]
 801d364:	2a00      	cmp	r2, #0
 801d366:	f000 8115 	beq.w	801d594 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801d36a:	6820      	ldr	r0, [r4, #0]
 801d36c:	6861      	ldr	r1, [r4, #4]
 801d36e:	aa0a      	add	r2, sp, #40	; 0x28
 801d370:	c203      	stmia	r2!, {r0, r1}
 801d372:	6818      	ldr	r0, [r3, #0]
 801d374:	6859      	ldr	r1, [r3, #4]
 801d376:	aa0c      	add	r2, sp, #48	; 0x30
 801d378:	c203      	stmia	r2!, {r0, r1}
 801d37a:	a80a      	add	r0, sp, #40	; 0x28
 801d37c:	f7f9 faec 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d380:	4621      	mov	r1, r4
 801d382:	a80c      	add	r0, sp, #48	; 0x30
 801d384:	f7f9 fb2c 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d388:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d38c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d390:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d394:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d398:	bfde      	ittt	le
 801d39a:	b2b3      	uxthle	r3, r6
 801d39c:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d3a0:	fb92 f3f3 	sdivle	r3, r2, r3
 801d3a4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d3a8:	bfc8      	it	gt
 801d3aa:	2301      	movgt	r3, #1
 801d3ac:	fb92 f1f3 	sdiv	r1, r2, r3
 801d3b0:	fa1f fc81 	uxth.w	ip, r1
 801d3b4:	fb0c 2413 	mls	r4, ip, r3, r2
 801d3b8:	fb14 f406 	smulbb	r4, r4, r6
 801d3bc:	441d      	add	r5, r3
 801d3be:	4404      	add	r4, r0
 801d3c0:	4661      	mov	r1, ip
 801d3c2:	3d01      	subs	r5, #1
 801d3c4:	b2a4      	uxth	r4, r4
 801d3c6:	fb95 f5f3 	sdiv	r5, r5, r3
 801d3ca:	b131      	cbz	r1, 801d3da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801d3cc:	9b05      	ldr	r3, [sp, #20]
 801d3ce:	9900      	ldr	r1, [sp, #0]
 801d3d0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d3d4:	ba1b      	rev	r3, r3
 801d3d6:	4419      	add	r1, r3
 801d3d8:	9100      	str	r1, [sp, #0]
 801d3da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d3de:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801d3e2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d3e6:	4418      	add	r0, r3
 801d3e8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d3ec:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801d3f0:	441a      	add	r2, r3
 801d3f2:	4b6a      	ldr	r3, [pc, #424]	; (801d59c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d3f4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801d3f8:	6818      	ldr	r0, [r3, #0]
 801d3fa:	6803      	ldr	r3, [r0, #0]
 801d3fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d3fe:	4798      	blx	r3
 801d400:	4967      	ldr	r1, [pc, #412]	; (801d5a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801d402:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d406:	880b      	ldrh	r3, [r1, #0]
 801d408:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d40c:	9109      	str	r1, [sp, #36]	; 0x24
 801d40e:	fb03 c202 	mla	r2, r3, r2, ip
 801d412:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d416:	4373      	muls	r3, r6
 801d418:	b2ad      	uxth	r5, r5
 801d41a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d41e:	00ad      	lsls	r5, r5, #2
 801d420:	9306      	str	r3, [sp, #24]
 801d422:	1d2b      	adds	r3, r5, #4
 801d424:	9307      	str	r3, [sp, #28]
 801d426:	9b01      	ldr	r3, [sp, #4]
 801d428:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801d42c:	9103      	str	r1, [sp, #12]
 801d42e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801d432:	2c00      	cmp	r4, #0
 801d434:	bf0c      	ite	eq
 801d436:	46c6      	moveq	lr, r8
 801d438:	f04f 0e00 	movne.w	lr, #0
 801d43c:	2300      	movs	r3, #0
 801d43e:	b292      	uxth	r2, r2
 801d440:	fa1f fe8e 	uxth.w	lr, lr
 801d444:	9302      	str	r3, [sp, #8]
 801d446:	9204      	str	r2, [sp, #16]
 801d448:	9a06      	ldr	r2, [sp, #24]
 801d44a:	4282      	cmp	r2, r0
 801d44c:	f240 809d 	bls.w	801d58a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801d450:	b963      	cbnz	r3, 801d46c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d452:	9b00      	ldr	r3, [sp, #0]
 801d454:	781a      	ldrb	r2, [r3, #0]
 801d456:	0993      	lsrs	r3, r2, #6
 801d458:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d45c:	9202      	str	r2, [sp, #8]
 801d45e:	1e5a      	subs	r2, r3, #1
 801d460:	2a02      	cmp	r2, #2
 801d462:	d815      	bhi.n	801d490 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801d464:	9a00      	ldr	r2, [sp, #0]
 801d466:	3201      	adds	r2, #1
 801d468:	9200      	str	r2, [sp, #0]
 801d46a:	b29b      	uxth	r3, r3
 801d46c:	b1b4      	cbz	r4, 801d49c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801d46e:	429c      	cmp	r4, r3
 801d470:	bf95      	itete	ls
 801d472:	1b1c      	subls	r4, r3, r4
 801d474:	1ae4      	subhi	r4, r4, r3
 801d476:	fa1f fa84 	uxthls.w	sl, r4
 801d47a:	b2a4      	uxthhi	r4, r4
 801d47c:	bf87      	ittee	hi
 801d47e:	4671      	movhi	r1, lr
 801d480:	f04f 0a00 	movhi.w	sl, #0
 801d484:	fa1f f188 	uxthls.w	r1, r8
 801d488:	2400      	movls	r4, #0
 801d48a:	4653      	mov	r3, sl
 801d48c:	468e      	mov	lr, r1
 801d48e:	e7db      	b.n	801d448 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801d490:	9a00      	ldr	r2, [sp, #0]
 801d492:	9b00      	ldr	r3, [sp, #0]
 801d494:	3202      	adds	r2, #2
 801d496:	785b      	ldrb	r3, [r3, #1]
 801d498:	9200      	str	r2, [sp, #0]
 801d49a:	e7e7      	b.n	801d46c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801d49c:	2202      	movs	r2, #2
 801d49e:	4615      	mov	r5, r2
 801d4a0:	9907      	ldr	r1, [sp, #28]
 801d4a2:	9a02      	ldr	r2, [sp, #8]
 801d4a4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d4a8:	9905      	ldr	r1, [sp, #20]
 801d4aa:	4573      	cmp	r3, lr
 801d4ac:	f831 c002 	ldrh.w	ip, [r1, r2]
 801d4b0:	9a01      	ldr	r2, [sp, #4]
 801d4b2:	bf2b      	itete	cs
 801d4b4:	eba3 0a0e 	subcs.w	sl, r3, lr
 801d4b8:	ebae 0103 	subcc.w	r1, lr, r3
 801d4bc:	46f1      	movcs	r9, lr
 801d4be:	4699      	movcc	r9, r3
 801d4c0:	bf27      	ittee	cs
 801d4c2:	fa1f fa8a 	uxthcs.w	sl, sl
 801d4c6:	4621      	movcs	r1, r4
 801d4c8:	b289      	uxthcc	r1, r1
 801d4ca:	46a2      	movcc	sl, r4
 801d4cc:	2aff      	cmp	r2, #255	; 0xff
 801d4ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d4d2:	d105      	bne.n	801d4e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d4d4:	4481      	add	r9, r0
 801d4d6:	4581      	cmp	r9, r0
 801d4d8:	d045      	beq.n	801d566 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d4da:	f820 cb02 	strh.w	ip, [r0], #2
 801d4de:	e7fa      	b.n	801d4d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801d4e0:	9d03      	ldr	r5, [sp, #12]
 801d4e2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801d4e6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d4ea:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d4ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d4f2:	436a      	muls	r2, r5
 801d4f4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d4f8:	fa5f fc8c 	uxtb.w	ip, ip
 801d4fc:	9208      	str	r2, [sp, #32]
 801d4fe:	fb0b fb05 	mul.w	fp, fp, r5
 801d502:	fb0c fc05 	mul.w	ip, ip, r5
 801d506:	4481      	add	r9, r0
 801d508:	4581      	cmp	r9, r0
 801d50a:	d02c      	beq.n	801d566 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d50c:	8802      	ldrh	r2, [r0, #0]
 801d50e:	9d04      	ldr	r5, [sp, #16]
 801d510:	9f04      	ldr	r7, [sp, #16]
 801d512:	1216      	asrs	r6, r2, #8
 801d514:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d518:	fb16 f605 	smulbb	r6, r6, r5
 801d51c:	9d08      	ldr	r5, [sp, #32]
 801d51e:	442e      	add	r6, r5
 801d520:	10d5      	asrs	r5, r2, #3
 801d522:	00d2      	lsls	r2, r2, #3
 801d524:	b2d2      	uxtb	r2, r2
 801d526:	fb12 f207 	smulbb	r2, r2, r7
 801d52a:	b2b6      	uxth	r6, r6
 801d52c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d530:	4462      	add	r2, ip
 801d532:	fb15 f507 	smulbb	r5, r5, r7
 801d536:	b292      	uxth	r2, r2
 801d538:	1c77      	adds	r7, r6, #1
 801d53a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801d53e:	1c57      	adds	r7, r2, #1
 801d540:	445d      	add	r5, fp
 801d542:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801d546:	b2ad      	uxth	r5, r5
 801d548:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d54c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d550:	4316      	orrs	r6, r2
 801d552:	1c6a      	adds	r2, r5, #1
 801d554:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d558:	096d      	lsrs	r5, r5, #5
 801d55a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d55e:	432e      	orrs	r6, r5
 801d560:	f820 6b02 	strh.w	r6, [r0], #2
 801d564:	e7d0      	b.n	801d508 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801d566:	4573      	cmp	r3, lr
 801d568:	d38f      	bcc.n	801d48a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d56a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d56e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d570:	fa1f f188 	uxth.w	r1, r8
 801d574:	1a64      	subs	r4, r4, r1
 801d576:	881b      	ldrh	r3, [r3, #0]
 801d578:	b2a4      	uxth	r4, r4
 801d57a:	2c00      	cmp	r4, #0
 801d57c:	eba3 0308 	sub.w	r3, r3, r8
 801d580:	bf18      	it	ne
 801d582:	2100      	movne	r1, #0
 801d584:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d588:	e77f      	b.n	801d48a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d58a:	4b04      	ldr	r3, [pc, #16]	; (801d59c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d58c:	6818      	ldr	r0, [r3, #0]
 801d58e:	6803      	ldr	r3, [r0, #0]
 801d590:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d592:	4798      	blx	r3
 801d594:	b00f      	add	sp, #60	; 0x3c
 801d596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d59a:	bf00      	nop
 801d59c:	20013834 	.word	0x20013834
 801d5a0:	2001382e 	.word	0x2001382e

0801d5a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d5a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5a8:	b09f      	sub	sp, #124	; 0x7c
 801d5aa:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d5ae:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d5b2:	9209      	str	r2, [sp, #36]	; 0x24
 801d5b4:	461d      	mov	r5, r3
 801d5b6:	4604      	mov	r4, r0
 801d5b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d5ba:	2a00      	cmp	r2, #0
 801d5bc:	f000 81eb 	beq.w	801d996 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d5c0:	6828      	ldr	r0, [r5, #0]
 801d5c2:	6869      	ldr	r1, [r5, #4]
 801d5c4:	aa1a      	add	r2, sp, #104	; 0x68
 801d5c6:	c203      	stmia	r2!, {r0, r1}
 801d5c8:	6818      	ldr	r0, [r3, #0]
 801d5ca:	6859      	ldr	r1, [r3, #4]
 801d5cc:	aa1c      	add	r2, sp, #112	; 0x70
 801d5ce:	c203      	stmia	r2!, {r0, r1}
 801d5d0:	a81a      	add	r0, sp, #104	; 0x68
 801d5d2:	f7f9 f9c1 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d5d6:	4629      	mov	r1, r5
 801d5d8:	a81c      	add	r0, sp, #112	; 0x70
 801d5da:	f7f9 fa01 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d5de:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d5e2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801d5e6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801d5ea:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d5ee:	bfd7      	itett	le
 801d5f0:	b29a      	uxthle	r2, r3
 801d5f2:	2201      	movgt	r2, #1
 801d5f4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d5f8:	fb91 f2f2 	sdivle	r2, r1, r2
 801d5fc:	9202      	str	r2, [sp, #8]
 801d5fe:	9802      	ldr	r0, [sp, #8]
 801d600:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d604:	fb92 f0f0 	sdiv	r0, r2, r0
 801d608:	b280      	uxth	r0, r0
 801d60a:	9010      	str	r0, [sp, #64]	; 0x40
 801d60c:	9902      	ldr	r1, [sp, #8]
 801d60e:	9802      	ldr	r0, [sp, #8]
 801d610:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d612:	4488      	add	r8, r1
 801d614:	fb05 2510 	mls	r5, r5, r0, r2
 801d618:	fb15 f503 	smulbb	r5, r5, r3
 801d61c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d620:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d624:	fb98 f8f1 	sdiv	r8, r8, r1
 801d628:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d62c:	440d      	add	r5, r1
 801d62e:	4419      	add	r1, r3
 801d630:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d634:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d638:	441a      	add	r2, r3
 801d63a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d63e:	9304      	str	r3, [sp, #16]
 801d640:	4b95      	ldr	r3, [pc, #596]	; (801d898 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d642:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d646:	6818      	ldr	r0, [r3, #0]
 801d648:	6803      	ldr	r3, [r0, #0]
 801d64a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d64c:	4798      	blx	r3
 801d64e:	4b93      	ldr	r3, [pc, #588]	; (801d89c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d650:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d654:	881a      	ldrh	r2, [r3, #0]
 801d656:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d65a:	9318      	str	r3, [sp, #96]	; 0x60
 801d65c:	fb02 7101 	mla	r1, r2, r1, r7
 801d660:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d664:	4356      	muls	r6, r2
 801d666:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801d66a:	f108 0801 	add.w	r8, r8, #1
 801d66e:	920a      	str	r2, [sp, #40]	; 0x28
 801d670:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d672:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801d676:	930f      	str	r3, [sp, #60]	; 0x3c
 801d678:	fa1f f888 	uxth.w	r8, r8
 801d67c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801d680:	f108 0204 	add.w	r2, r8, #4
 801d684:	9211      	str	r2, [sp, #68]	; 0x44
 801d686:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d688:	4b85      	ldr	r3, [pc, #532]	; (801d8a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d68a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801d68e:	b2ad      	uxth	r5, r5
 801d690:	9215      	str	r2, [sp, #84]	; 0x54
 801d692:	2d00      	cmp	r5, #0
 801d694:	9a04      	ldr	r2, [sp, #16]
 801d696:	f04f 0100 	mov.w	r1, #0
 801d69a:	bf18      	it	ne
 801d69c:	2200      	movne	r2, #0
 801d69e:	1b1b      	subs	r3, r3, r4
 801d6a0:	b292      	uxth	r2, r2
 801d6a2:	910d      	str	r1, [sp, #52]	; 0x34
 801d6a4:	9319      	str	r3, [sp, #100]	; 0x64
 801d6a6:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d6a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d6aa:	fa11 f383 	uxtah	r3, r1, r3
 801d6ae:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d6b0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d6b4:	3304      	adds	r3, #4
 801d6b6:	9306      	str	r3, [sp, #24]
 801d6b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d6ba:	4283      	cmp	r3, r0
 801d6bc:	f240 8166 	bls.w	801d98c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801d6c0:	9902      	ldr	r1, [sp, #8]
 801d6c2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d6c6:	fbb5 f3f3 	udiv	r3, r5, r3
 801d6ca:	1acb      	subs	r3, r1, r3
 801d6cc:	b29b      	uxth	r3, r3
 801d6ce:	9316      	str	r3, [sp, #88]	; 0x58
 801d6d0:	9b06      	ldr	r3, [sp, #24]
 801d6d2:	9e06      	ldr	r6, [sp, #24]
 801d6d4:	7859      	ldrb	r1, [r3, #1]
 801d6d6:	789b      	ldrb	r3, [r3, #2]
 801d6d8:	7836      	ldrb	r6, [r6, #0]
 801d6da:	9612      	str	r6, [sp, #72]	; 0x48
 801d6dc:	021b      	lsls	r3, r3, #8
 801d6de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d6e2:	9906      	ldr	r1, [sp, #24]
 801d6e4:	78c9      	ldrb	r1, [r1, #3]
 801d6e6:	430b      	orrs	r3, r1
 801d6e8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801d6ea:	3601      	adds	r6, #1
 801d6ec:	4419      	add	r1, r3
 801d6ee:	9605      	str	r6, [sp, #20]
 801d6f0:	1c4e      	adds	r6, r1, #1
 801d6f2:	9603      	str	r6, [sp, #12]
 801d6f4:	7849      	ldrb	r1, [r1, #1]
 801d6f6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d6f8:	0209      	lsls	r1, r1, #8
 801d6fa:	5cf3      	ldrb	r3, [r6, r3]
 801d6fc:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801d700:	4319      	orrs	r1, r3
 801d702:	b28b      	uxth	r3, r1
 801d704:	930c      	str	r3, [sp, #48]	; 0x30
 801d706:	2300      	movs	r3, #0
 801d708:	f04f 0a01 	mov.w	sl, #1
 801d70c:	9307      	str	r3, [sp, #28]
 801d70e:	469c      	mov	ip, r3
 801d710:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d714:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d718:	46d3      	mov	fp, sl
 801d71a:	4657      	mov	r7, sl
 801d71c:	930e      	str	r3, [sp, #56]	; 0x38
 801d71e:	2d00      	cmp	r5, #0
 801d720:	d07e      	beq.n	801d820 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801d722:	42af      	cmp	r7, r5
 801d724:	d26e      	bcs.n	801d804 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801d726:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d728:	9201      	str	r2, [sp, #4]
 801d72a:	1bed      	subs	r5, r5, r7
 801d72c:	4283      	cmp	r3, r0
 801d72e:	b2ad      	uxth	r5, r5
 801d730:	d802      	bhi.n	801d738 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801d732:	e073      	b.n	801d81c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801d734:	2b00      	cmp	r3, #0
 801d736:	d15f      	bne.n	801d7f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801d738:	9b03      	ldr	r3, [sp, #12]
 801d73a:	785b      	ldrb	r3, [r3, #1]
 801d73c:	f1cb 0207 	rsb	r2, fp, #7
 801d740:	4093      	lsls	r3, r2
 801d742:	005b      	lsls	r3, r3, #1
 801d744:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d748:	9b03      	ldr	r3, [sp, #12]
 801d74a:	781b      	ldrb	r3, [r3, #0]
 801d74c:	fa43 f30b 	asr.w	r3, r3, fp
 801d750:	b2db      	uxtb	r3, r3
 801d752:	4313      	orrs	r3, r2
 801d754:	f10b 0201 	add.w	r2, fp, #1
 801d758:	fa5f fb82 	uxtb.w	fp, r2
 801d75c:	9a03      	ldr	r2, [sp, #12]
 801d75e:	f1bb 0f08 	cmp.w	fp, #8
 801d762:	bf15      	itete	ne
 801d764:	3201      	addne	r2, #1
 801d766:	3202      	addeq	r2, #2
 801d768:	9203      	strne	r2, [sp, #12]
 801d76a:	9203      	streq	r2, [sp, #12]
 801d76c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d76e:	b29f      	uxth	r7, r3
 801d770:	bf08      	it	eq
 801d772:	f04f 0b00 	moveq.w	fp, #0
 801d776:	42ba      	cmp	r2, r7
 801d778:	d309      	bcc.n	801d78e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d77a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d77e:	2301      	movs	r3, #1
 801d780:	9a05      	ldr	r2, [sp, #20]
 801d782:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801d786:	d30e      	bcc.n	801d7a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801d788:	469a      	mov	sl, r3
 801d78a:	2600      	movs	r6, #0
 801d78c:	e035      	b.n	801d7fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801d78e:	9b05      	ldr	r3, [sp, #20]
 801d790:	429f      	cmp	r7, r3
 801d792:	d318      	bcc.n	801d7c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801d794:	eb04 030a 	add.w	r3, r4, sl
 801d798:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801d79c:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801d7a0:	f10a 0301 	add.w	r3, sl, #1
 801d7a4:	b29b      	uxth	r3, r3
 801d7a6:	9a05      	ldr	r2, [sp, #20]
 801d7a8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d7ac:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d7ae:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d7b2:	7116      	strb	r6, [r2, #4]
 801d7b4:	f10a 0601 	add.w	r6, sl, #1
 801d7b8:	80d1      	strh	r1, [r2, #6]
 801d7ba:	7156      	strb	r6, [r2, #5]
 801d7bc:	9a05      	ldr	r2, [sp, #20]
 801d7be:	3201      	adds	r2, #1
 801d7c0:	b292      	uxth	r2, r2
 801d7c2:	9205      	str	r2, [sp, #20]
 801d7c4:	e7e0      	b.n	801d788 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801d7c6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801d7ca:	463a      	mov	r2, r7
 801d7cc:	795b      	ldrb	r3, [r3, #5]
 801d7ce:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d7d2:	4426      	add	r6, r4
 801d7d4:	9919      	ldr	r1, [sp, #100]	; 0x64
 801d7d6:	eb01 0c06 	add.w	ip, r1, r6
 801d7da:	f1bc 0f00 	cmp.w	ip, #0
 801d7de:	dd07      	ble.n	801d7f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801d7e0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d7e4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801d7e8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801d7ec:	88d2      	ldrh	r2, [r2, #6]
 801d7ee:	e7f1      	b.n	801d7d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801d7f0:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d7f4:	b29b      	uxth	r3, r3
 801d7f6:	e7c3      	b.n	801d780 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801d7f8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d7fa:	970c      	str	r7, [sp, #48]	; 0x30
 801d7fc:	9a01      	ldr	r2, [sp, #4]
 801d7fe:	46b4      	mov	ip, r6
 801d800:	461f      	mov	r7, r3
 801d802:	e78c      	b.n	801d71e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801d804:	1b7b      	subs	r3, r7, r5
 801d806:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d80a:	9201      	str	r2, [sp, #4]
 801d80c:	eb0c 0605 	add.w	r6, ip, r5
 801d810:	b29b      	uxth	r3, r3
 801d812:	b2b6      	uxth	r6, r6
 801d814:	2500      	movs	r5, #0
 801d816:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d818:	4282      	cmp	r2, r0
 801d81a:	d88b      	bhi.n	801d734 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d81c:	9a01      	ldr	r2, [sp, #4]
 801d81e:	e74b      	b.n	801d6b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801d820:	4297      	cmp	r7, r2
 801d822:	d332      	bcc.n	801d88a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801d824:	1abb      	subs	r3, r7, r2
 801d826:	b29b      	uxth	r3, r3
 801d828:	9208      	str	r2, [sp, #32]
 801d82a:	9501      	str	r5, [sp, #4]
 801d82c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d82e:	29ff      	cmp	r1, #255	; 0xff
 801d830:	9908      	ldr	r1, [sp, #32]
 801d832:	eb0c 0601 	add.w	r6, ip, r1
 801d836:	d135      	bne.n	801d8a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801d838:	f1a0 0e02 	sub.w	lr, r0, #2
 801d83c:	b2b6      	uxth	r6, r6
 801d83e:	45b4      	cmp	ip, r6
 801d840:	f040 808c 	bne.w	801d95c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801d844:	9908      	ldr	r1, [sp, #32]
 801d846:	4297      	cmp	r7, r2
 801d848:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d84c:	d3e2      	bcc.n	801d814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801d84e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d850:	9904      	ldr	r1, [sp, #16]
 801d852:	8812      	ldrh	r2, [r2, #0]
 801d854:	1a52      	subs	r2, r2, r1
 801d856:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d85a:	9a07      	ldr	r2, [sp, #28]
 801d85c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d85e:	3201      	adds	r2, #1
 801d860:	428a      	cmp	r2, r1
 801d862:	9207      	str	r2, [sp, #28]
 801d864:	f040 8087 	bne.w	801d976 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d868:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d86c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801d870:	9b04      	ldr	r3, [sp, #16]
 801d872:	1bed      	subs	r5, r5, r7
 801d874:	b2ad      	uxth	r5, r5
 801d876:	2d00      	cmp	r5, #0
 801d878:	bf08      	it	eq
 801d87a:	461a      	moveq	r2, r3
 801d87c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d87e:	bf18      	it	ne
 801d880:	2200      	movne	r2, #0
 801d882:	3301      	adds	r3, #1
 801d884:	930d      	str	r3, [sp, #52]	; 0x34
 801d886:	b292      	uxth	r2, r2
 801d888:	e70d      	b.n	801d6a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801d88a:	1bd1      	subs	r1, r2, r7
 801d88c:	b28b      	uxth	r3, r1
 801d88e:	9301      	str	r3, [sp, #4]
 801d890:	9708      	str	r7, [sp, #32]
 801d892:	462b      	mov	r3, r5
 801d894:	e7ca      	b.n	801d82c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801d896:	bf00      	nop
 801d898:	20013834 	.word	0x20013834
 801d89c:	2001382e 	.word	0x2001382e
 801d8a0:	fffff7fb 	.word	0xfffff7fb
 801d8a4:	b2b6      	uxth	r6, r6
 801d8a6:	900b      	str	r0, [sp, #44]	; 0x2c
 801d8a8:	45b4      	cmp	ip, r6
 801d8aa:	d0cb      	beq.n	801d844 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801d8ac:	f10c 0101 	add.w	r1, ip, #1
 801d8b0:	44a4      	add	ip, r4
 801d8b2:	9117      	str	r1, [sp, #92]	; 0x5c
 801d8b4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d8b8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d8ba:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d8be:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d8c0:	f8b1 c000 	ldrh.w	ip, [r1]
 801d8c4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d8c6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801d8ca:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d8ce:	fb1e fe01 	smulbb	lr, lr, r1
 801d8d2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801d8d6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d8d8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d8dc:	fb08 e801 	mla	r8, r8, r1, lr
 801d8e0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801d8e4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d8e6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d8ea:	fb19 f901 	smulbb	r9, r9, r1
 801d8ee:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801d8f2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d8f4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d8f8:	fb0e 9e01 	mla	lr, lr, r1, r9
 801d8fc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d900:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d902:	fa5f fc8c 	uxtb.w	ip, ip
 801d906:	fb1c fc01 	smulbb	ip, ip, r1
 801d90a:	00ed      	lsls	r5, r5, #3
 801d90c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d90e:	b2ed      	uxtb	r5, r5
 801d910:	fb05 c501 	mla	r5, r5, r1, ip
 801d914:	fa1f f888 	uxth.w	r8, r8
 801d918:	fa1f fe8e 	uxth.w	lr, lr
 801d91c:	b2ad      	uxth	r5, r5
 801d91e:	f108 0c01 	add.w	ip, r8, #1
 801d922:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801d926:	f10e 0901 	add.w	r9, lr, #1
 801d92a:	f105 0c01 	add.w	ip, r5, #1
 801d92e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801d932:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801d936:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d93a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d93e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d942:	ea4c 0808 	orr.w	r8, ip, r8
 801d946:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d948:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801d94c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d950:	ea48 0809 	orr.w	r8, r8, r9
 801d954:	f821 8b02 	strh.w	r8, [r1], #2
 801d958:	910b      	str	r1, [sp, #44]	; 0x2c
 801d95a:	e7a5      	b.n	801d8a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801d95c:	f10c 0801 	add.w	r8, ip, #1
 801d960:	44a4      	add	ip, r4
 801d962:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d964:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d968:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d96c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801d970:	fa1f fc88 	uxth.w	ip, r8
 801d974:	e763      	b.n	801d83e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801d976:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d97a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d97e:	1aad      	subs	r5, r5, r2
 801d980:	b2ad      	uxth	r5, r5
 801d982:	2d00      	cmp	r5, #0
 801d984:	bf18      	it	ne
 801d986:	2200      	movne	r2, #0
 801d988:	9201      	str	r2, [sp, #4]
 801d98a:	e744      	b.n	801d816 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801d98c:	4b03      	ldr	r3, [pc, #12]	; (801d99c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801d98e:	6818      	ldr	r0, [r3, #0]
 801d990:	6803      	ldr	r3, [r0, #0]
 801d992:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d994:	4798      	blx	r3
 801d996:	b01f      	add	sp, #124	; 0x7c
 801d998:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d99c:	20013834 	.word	0x20013834

0801d9a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d9a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9a4:	b08f      	sub	sp, #60	; 0x3c
 801d9a6:	461c      	mov	r4, r3
 801d9a8:	9203      	str	r2, [sp, #12]
 801d9aa:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d9ae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d9b0:	9202      	str	r2, [sp, #8]
 801d9b2:	460f      	mov	r7, r1
 801d9b4:	2a00      	cmp	r2, #0
 801d9b6:	f000 8128 	beq.w	801dc0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801d9ba:	6820      	ldr	r0, [r4, #0]
 801d9bc:	6861      	ldr	r1, [r4, #4]
 801d9be:	aa0a      	add	r2, sp, #40	; 0x28
 801d9c0:	c203      	stmia	r2!, {r0, r1}
 801d9c2:	6818      	ldr	r0, [r3, #0]
 801d9c4:	6859      	ldr	r1, [r3, #4]
 801d9c6:	aa0c      	add	r2, sp, #48	; 0x30
 801d9c8:	c203      	stmia	r2!, {r0, r1}
 801d9ca:	a80a      	add	r0, sp, #40	; 0x28
 801d9cc:	f7f8 ffc4 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d9d0:	4621      	mov	r1, r4
 801d9d2:	a80c      	add	r0, sp, #48	; 0x30
 801d9d4:	f7f9 f804 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d9d8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d9dc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d9e0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d9e4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d9e8:	bfde      	ittt	le
 801d9ea:	b2b3      	uxthle	r3, r6
 801d9ec:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d9f0:	fb92 f3f3 	sdivle	r3, r2, r3
 801d9f4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d9f8:	bfc8      	it	gt
 801d9fa:	2301      	movgt	r3, #1
 801d9fc:	fb92 f1f3 	sdiv	r1, r2, r3
 801da00:	fa1f fc81 	uxth.w	ip, r1
 801da04:	fb0c 2413 	mls	r4, ip, r3, r2
 801da08:	fb14 f406 	smulbb	r4, r4, r6
 801da0c:	441d      	add	r5, r3
 801da0e:	4404      	add	r4, r0
 801da10:	4661      	mov	r1, ip
 801da12:	3d01      	subs	r5, #1
 801da14:	b2a4      	uxth	r4, r4
 801da16:	fb95 f5f3 	sdiv	r5, r5, r3
 801da1a:	b121      	cbz	r1, 801da26 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801da1c:	9b03      	ldr	r3, [sp, #12]
 801da1e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801da22:	ba1b      	rev	r3, r3
 801da24:	441f      	add	r7, r3
 801da26:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801da2a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801da2e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801da32:	4418      	add	r0, r3
 801da34:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801da38:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801da3c:	441a      	add	r2, r3
 801da3e:	4b74      	ldr	r3, [pc, #464]	; (801dc10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801da40:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801da44:	6818      	ldr	r0, [r3, #0]
 801da46:	6803      	ldr	r3, [r0, #0]
 801da48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801da4a:	4798      	blx	r3
 801da4c:	4a71      	ldr	r2, [pc, #452]	; (801dc14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801da4e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801da52:	8813      	ldrh	r3, [r2, #0]
 801da54:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801da58:	9209      	str	r2, [sp, #36]	; 0x24
 801da5a:	fb03 c101 	mla	r1, r3, r1, ip
 801da5e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801da62:	4373      	muls	r3, r6
 801da64:	b2ad      	uxth	r5, r5
 801da66:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801da6a:	00ad      	lsls	r5, r5, #2
 801da6c:	2c00      	cmp	r4, #0
 801da6e:	9304      	str	r3, [sp, #16]
 801da70:	f105 0304 	add.w	r3, r5, #4
 801da74:	9305      	str	r3, [sp, #20]
 801da76:	bf0c      	ite	eq
 801da78:	46c8      	moveq	r8, r9
 801da7a:	f04f 0800 	movne.w	r8, #0
 801da7e:	2300      	movs	r3, #0
 801da80:	fa1f f888 	uxth.w	r8, r8
 801da84:	9301      	str	r3, [sp, #4]
 801da86:	9a04      	ldr	r2, [sp, #16]
 801da88:	4282      	cmp	r2, r0
 801da8a:	f240 80b9 	bls.w	801dc00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801da8e:	b95b      	cbnz	r3, 801daa8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801da90:	783a      	ldrb	r2, [r7, #0]
 801da92:	0993      	lsrs	r3, r2, #6
 801da94:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801da98:	9201      	str	r2, [sp, #4]
 801da9a:	1e5a      	subs	r2, r3, #1
 801da9c:	2a02      	cmp	r2, #2
 801da9e:	bf8d      	iteet	hi
 801daa0:	787b      	ldrbhi	r3, [r7, #1]
 801daa2:	3701      	addls	r7, #1
 801daa4:	b29b      	uxthls	r3, r3
 801daa6:	3702      	addhi	r7, #2
 801daa8:	b184      	cbz	r4, 801dacc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801daaa:	429c      	cmp	r4, r3
 801daac:	bf95      	itete	ls
 801daae:	1b1c      	subls	r4, r3, r4
 801dab0:	1ae4      	subhi	r4, r4, r3
 801dab2:	fa1f fa84 	uxthls.w	sl, r4
 801dab6:	b2a4      	uxthhi	r4, r4
 801dab8:	bf87      	ittee	hi
 801daba:	46c4      	movhi	ip, r8
 801dabc:	f04f 0a00 	movhi.w	sl, #0
 801dac0:	fa1f fc89 	uxthls.w	ip, r9
 801dac4:	2400      	movls	r4, #0
 801dac6:	4653      	mov	r3, sl
 801dac8:	46e0      	mov	r8, ip
 801daca:	e7dc      	b.n	801da86 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801dacc:	2204      	movs	r2, #4
 801dace:	4615      	mov	r5, r2
 801dad0:	9905      	ldr	r1, [sp, #20]
 801dad2:	9a01      	ldr	r2, [sp, #4]
 801dad4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801dad8:	9903      	ldr	r1, [sp, #12]
 801dada:	588a      	ldr	r2, [r1, r2]
 801dadc:	4543      	cmp	r3, r8
 801dade:	bf27      	ittee	cs
 801dae0:	eba3 0a08 	subcs.w	sl, r3, r8
 801dae4:	46c6      	movcs	lr, r8
 801dae6:	eba8 0c03 	subcc.w	ip, r8, r3
 801daea:	469e      	movcc	lr, r3
 801daec:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801daf0:	bf27      	ittee	cs
 801daf2:	fa1f fa8a 	uxthcs.w	sl, sl
 801daf6:	46a4      	movcs	ip, r4
 801daf8:	fa1f fc8c 	uxthcc.w	ip, ip
 801dafc:	46a2      	movcc	sl, r4
 801dafe:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801db02:	2900      	cmp	r1, #0
 801db04:	d066      	beq.n	801dbd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801db06:	29ff      	cmp	r1, #255	; 0xff
 801db08:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801db0c:	d114      	bne.n	801db38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801db0e:	9d02      	ldr	r5, [sp, #8]
 801db10:	2dff      	cmp	r5, #255	; 0xff
 801db12:	d111      	bne.n	801db38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801db14:	0951      	lsrs	r1, r2, #5
 801db16:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801db1a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801db1e:	f026 0607 	bic.w	r6, r6, #7
 801db22:	430e      	orrs	r6, r1
 801db24:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801db28:	4316      	orrs	r6, r2
 801db2a:	b2b6      	uxth	r6, r6
 801db2c:	4486      	add	lr, r0
 801db2e:	4586      	cmp	lr, r0
 801db30:	d051      	beq.n	801dbd6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801db32:	f820 6b02 	strh.w	r6, [r0], #2
 801db36:	e7fa      	b.n	801db2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801db38:	9d02      	ldr	r5, [sp, #8]
 801db3a:	4369      	muls	r1, r5
 801db3c:	1c4d      	adds	r5, r1, #1
 801db3e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801db42:	122d      	asrs	r5, r5, #8
 801db44:	ea6f 0b05 	mvn.w	fp, r5
 801db48:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801db4c:	b2ad      	uxth	r5, r5
 801db4e:	b2f6      	uxtb	r6, r6
 801db50:	b2d2      	uxtb	r2, r2
 801db52:	fb11 f105 	smulbb	r1, r1, r5
 801db56:	fb16 f605 	smulbb	r6, r6, r5
 801db5a:	fb12 f205 	smulbb	r2, r2, r5
 801db5e:	b289      	uxth	r1, r1
 801db60:	b2b6      	uxth	r6, r6
 801db62:	b292      	uxth	r2, r2
 801db64:	9106      	str	r1, [sp, #24]
 801db66:	9607      	str	r6, [sp, #28]
 801db68:	9208      	str	r2, [sp, #32]
 801db6a:	4486      	add	lr, r0
 801db6c:	fa5f fb8b 	uxtb.w	fp, fp
 801db70:	4586      	cmp	lr, r0
 801db72:	d030      	beq.n	801dbd6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801db74:	8802      	ldrh	r2, [r0, #0]
 801db76:	9906      	ldr	r1, [sp, #24]
 801db78:	1216      	asrs	r6, r2, #8
 801db7a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801db7e:	10d5      	asrs	r5, r2, #3
 801db80:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801db84:	fb06 160b 	mla	r6, r6, fp, r1
 801db88:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801db8c:	9907      	ldr	r1, [sp, #28]
 801db8e:	00d2      	lsls	r2, r2, #3
 801db90:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801db94:	fb05 150b 	mla	r5, r5, fp, r1
 801db98:	b2d2      	uxtb	r2, r2
 801db9a:	9908      	ldr	r1, [sp, #32]
 801db9c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dba0:	b2b6      	uxth	r6, r6
 801dba2:	fb02 120b 	mla	r2, r2, fp, r1
 801dba6:	b292      	uxth	r2, r2
 801dba8:	1c71      	adds	r1, r6, #1
 801dbaa:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801dbae:	1c51      	adds	r1, r2, #1
 801dbb0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801dbb4:	b2ad      	uxth	r5, r5
 801dbb6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dbba:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801dbbe:	4316      	orrs	r6, r2
 801dbc0:	1c6a      	adds	r2, r5, #1
 801dbc2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801dbc6:	096d      	lsrs	r5, r5, #5
 801dbc8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dbcc:	432e      	orrs	r6, r5
 801dbce:	f820 6b02 	strh.w	r6, [r0], #2
 801dbd2:	e7cd      	b.n	801db70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801dbd4:	4470      	add	r0, lr
 801dbd6:	4543      	cmp	r3, r8
 801dbd8:	f4ff af75 	bcc.w	801dac6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801dbdc:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801dbe0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dbe2:	fa1f fc89 	uxth.w	ip, r9
 801dbe6:	eba4 040c 	sub.w	r4, r4, ip
 801dbea:	881b      	ldrh	r3, [r3, #0]
 801dbec:	b2a4      	uxth	r4, r4
 801dbee:	2c00      	cmp	r4, #0
 801dbf0:	eba3 0309 	sub.w	r3, r3, r9
 801dbf4:	bf18      	it	ne
 801dbf6:	f04f 0c00 	movne.w	ip, #0
 801dbfa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801dbfe:	e762      	b.n	801dac6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801dc00:	4b03      	ldr	r3, [pc, #12]	; (801dc10 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801dc02:	6818      	ldr	r0, [r3, #0]
 801dc04:	6803      	ldr	r3, [r0, #0]
 801dc06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dc08:	4798      	blx	r3
 801dc0a:	b00f      	add	sp, #60	; 0x3c
 801dc0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc10:	20013834 	.word	0x20013834
 801dc14:	2001382e 	.word	0x2001382e

0801dc18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801dc18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc1c:	b093      	sub	sp, #76	; 0x4c
 801dc1e:	461c      	mov	r4, r3
 801dc20:	9205      	str	r2, [sp, #20]
 801dc22:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801dc26:	9101      	str	r1, [sp, #4]
 801dc28:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dc2a:	9202      	str	r2, [sp, #8]
 801dc2c:	2a00      	cmp	r2, #0
 801dc2e:	f000 812c 	beq.w	801de8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801dc32:	6820      	ldr	r0, [r4, #0]
 801dc34:	6861      	ldr	r1, [r4, #4]
 801dc36:	aa0e      	add	r2, sp, #56	; 0x38
 801dc38:	c203      	stmia	r2!, {r0, r1}
 801dc3a:	6818      	ldr	r0, [r3, #0]
 801dc3c:	6859      	ldr	r1, [r3, #4]
 801dc3e:	aa10      	add	r2, sp, #64	; 0x40
 801dc40:	c203      	stmia	r2!, {r0, r1}
 801dc42:	a80e      	add	r0, sp, #56	; 0x38
 801dc44:	f7f8 fe88 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dc48:	4621      	mov	r1, r4
 801dc4a:	a810      	add	r0, sp, #64	; 0x40
 801dc4c:	f7f8 fec8 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801dc50:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801dc54:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801dc58:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801dc5c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801dc60:	bfde      	ittt	le
 801dc62:	b2b3      	uxthle	r3, r6
 801dc64:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801dc68:	fb92 f3f3 	sdivle	r3, r2, r3
 801dc6c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801dc70:	bfc8      	it	gt
 801dc72:	2301      	movgt	r3, #1
 801dc74:	fb92 f1f3 	sdiv	r1, r2, r3
 801dc78:	fa1f fc81 	uxth.w	ip, r1
 801dc7c:	fb0c 2413 	mls	r4, ip, r3, r2
 801dc80:	fb14 f406 	smulbb	r4, r4, r6
 801dc84:	441d      	add	r5, r3
 801dc86:	4404      	add	r4, r0
 801dc88:	4661      	mov	r1, ip
 801dc8a:	3d01      	subs	r5, #1
 801dc8c:	b2a4      	uxth	r4, r4
 801dc8e:	fb95 f5f3 	sdiv	r5, r5, r3
 801dc92:	b131      	cbz	r1, 801dca2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801dc94:	9b05      	ldr	r3, [sp, #20]
 801dc96:	9901      	ldr	r1, [sp, #4]
 801dc98:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801dc9c:	ba1b      	rev	r3, r3
 801dc9e:	4419      	add	r1, r3
 801dca0:	9101      	str	r1, [sp, #4]
 801dca2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801dca6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801dcaa:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801dcae:	4418      	add	r0, r3
 801dcb0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801dcb4:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801dcb8:	441a      	add	r2, r3
 801dcba:	4b75      	ldr	r3, [pc, #468]	; (801de90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801dcbc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801dcc0:	6818      	ldr	r0, [r3, #0]
 801dcc2:	6803      	ldr	r3, [r0, #0]
 801dcc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dcc6:	4798      	blx	r3
 801dcc8:	4972      	ldr	r1, [pc, #456]	; (801de94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801dcca:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801dcce:	880b      	ldrh	r3, [r1, #0]
 801dcd0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801dcd4:	910d      	str	r1, [sp, #52]	; 0x34
 801dcd6:	fb03 c202 	mla	r2, r3, r2, ip
 801dcda:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801dcde:	4373      	muls	r3, r6
 801dce0:	b2ad      	uxth	r5, r5
 801dce2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dce6:	00ad      	lsls	r5, r5, #2
 801dce8:	9308      	str	r3, [sp, #32]
 801dcea:	1d2b      	adds	r3, r5, #4
 801dcec:	9309      	str	r3, [sp, #36]	; 0x24
 801dcee:	9b02      	ldr	r3, [sp, #8]
 801dcf0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801dcf4:	9106      	str	r1, [sp, #24]
 801dcf6:	43da      	mvns	r2, r3
 801dcf8:	2c00      	cmp	r4, #0
 801dcfa:	bf0c      	ite	eq
 801dcfc:	46dc      	moveq	ip, fp
 801dcfe:	f04f 0c00 	movne.w	ip, #0
 801dd02:	2300      	movs	r3, #0
 801dd04:	b2d2      	uxtb	r2, r2
 801dd06:	fa1f fc8c 	uxth.w	ip, ip
 801dd0a:	9303      	str	r3, [sp, #12]
 801dd0c:	9207      	str	r2, [sp, #28]
 801dd0e:	9a08      	ldr	r2, [sp, #32]
 801dd10:	4282      	cmp	r2, r0
 801dd12:	f240 80b5 	bls.w	801de80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801dd16:	b963      	cbnz	r3, 801dd32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801dd18:	9b01      	ldr	r3, [sp, #4]
 801dd1a:	781a      	ldrb	r2, [r3, #0]
 801dd1c:	0993      	lsrs	r3, r2, #6
 801dd1e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801dd22:	9203      	str	r2, [sp, #12]
 801dd24:	1e5a      	subs	r2, r3, #1
 801dd26:	2a02      	cmp	r2, #2
 801dd28:	d815      	bhi.n	801dd56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801dd2a:	9a01      	ldr	r2, [sp, #4]
 801dd2c:	3201      	adds	r2, #1
 801dd2e:	9201      	str	r2, [sp, #4]
 801dd30:	b29b      	uxth	r3, r3
 801dd32:	b1b4      	cbz	r4, 801dd62 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801dd34:	429c      	cmp	r4, r3
 801dd36:	bf95      	itete	ls
 801dd38:	1b1c      	subls	r4, r3, r4
 801dd3a:	1ae4      	subhi	r4, r4, r3
 801dd3c:	fa1f f884 	uxthls.w	r8, r4
 801dd40:	b2a4      	uxthhi	r4, r4
 801dd42:	bf87      	ittee	hi
 801dd44:	4666      	movhi	r6, ip
 801dd46:	f04f 0800 	movhi.w	r8, #0
 801dd4a:	fa1f f68b 	uxthls.w	r6, fp
 801dd4e:	2400      	movls	r4, #0
 801dd50:	4643      	mov	r3, r8
 801dd52:	46b4      	mov	ip, r6
 801dd54:	e7db      	b.n	801dd0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801dd56:	9a01      	ldr	r2, [sp, #4]
 801dd58:	9b01      	ldr	r3, [sp, #4]
 801dd5a:	3202      	adds	r2, #2
 801dd5c:	785b      	ldrb	r3, [r3, #1]
 801dd5e:	9201      	str	r2, [sp, #4]
 801dd60:	e7e7      	b.n	801dd32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801dd62:	2203      	movs	r2, #3
 801dd64:	4615      	mov	r5, r2
 801dd66:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dd68:	9a03      	ldr	r2, [sp, #12]
 801dd6a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801dd6e:	9905      	ldr	r1, [sp, #20]
 801dd70:	4563      	cmp	r3, ip
 801dd72:	eb01 0502 	add.w	r5, r1, r2
 801dd76:	9902      	ldr	r1, [sp, #8]
 801dd78:	bf29      	itett	cs
 801dd7a:	eba3 080c 	subcs.w	r8, r3, ip
 801dd7e:	ebac 0603 	subcc.w	r6, ip, r3
 801dd82:	fa1f f888 	uxthcs.w	r8, r8
 801dd86:	46e1      	movcs	r9, ip
 801dd88:	bf2f      	iteee	cs
 801dd8a:	4626      	movcs	r6, r4
 801dd8c:	b2b6      	uxthcc	r6, r6
 801dd8e:	4699      	movcc	r9, r3
 801dd90:	46a0      	movcc	r8, r4
 801dd92:	29ff      	cmp	r1, #255	; 0xff
 801dd94:	d04a      	beq.n	801de2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801dd96:	9f06      	ldr	r7, [sp, #24]
 801dd98:	78a9      	ldrb	r1, [r5, #2]
 801dd9a:	9004      	str	r0, [sp, #16]
 801dd9c:	4379      	muls	r1, r7
 801dd9e:	910a      	str	r1, [sp, #40]	; 0x28
 801dda0:	7869      	ldrb	r1, [r5, #1]
 801dda2:	4379      	muls	r1, r7
 801dda4:	910b      	str	r1, [sp, #44]	; 0x2c
 801dda6:	9905      	ldr	r1, [sp, #20]
 801dda8:	5c8a      	ldrb	r2, [r1, r2]
 801ddaa:	437a      	muls	r2, r7
 801ddac:	920c      	str	r2, [sp, #48]	; 0x30
 801ddae:	46ca      	mov	sl, r9
 801ddb0:	f1ba 0f00 	cmp.w	sl, #0
 801ddb4:	d03d      	beq.n	801de32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801ddb6:	9a04      	ldr	r2, [sp, #16]
 801ddb8:	9f07      	ldr	r7, [sp, #28]
 801ddba:	8812      	ldrh	r2, [r2, #0]
 801ddbc:	1215      	asrs	r5, r2, #8
 801ddbe:	46be      	mov	lr, r7
 801ddc0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ddc4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ddc6:	10d1      	asrs	r1, r2, #3
 801ddc8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ddcc:	fb05 750e 	mla	r5, r5, lr, r7
 801ddd0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ddd4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801ddd6:	00d2      	lsls	r2, r2, #3
 801ddd8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801dddc:	fb01 710e 	mla	r1, r1, lr, r7
 801dde0:	b2d2      	uxtb	r2, r2
 801dde2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801dde4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dde8:	b2ad      	uxth	r5, r5
 801ddea:	fb02 720e 	mla	r2, r2, lr, r7
 801ddee:	b292      	uxth	r2, r2
 801ddf0:	f105 0e01 	add.w	lr, r5, #1
 801ddf4:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ddf8:	f102 0e01 	add.w	lr, r2, #1
 801ddfc:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801de00:	b289      	uxth	r1, r1
 801de02:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801de06:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801de0a:	4315      	orrs	r5, r2
 801de0c:	1c4a      	adds	r2, r1, #1
 801de0e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801de12:	0949      	lsrs	r1, r1, #5
 801de14:	9a04      	ldr	r2, [sp, #16]
 801de16:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801de1a:	430d      	orrs	r5, r1
 801de1c:	f822 5b02 	strh.w	r5, [r2], #2
 801de20:	f10a 3aff 	add.w	sl, sl, #4294967295
 801de24:	9204      	str	r2, [sp, #16]
 801de26:	fa1f fa8a 	uxth.w	sl, sl
 801de2a:	e7c1      	b.n	801ddb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801de2c:	4649      	mov	r1, r9
 801de2e:	4686      	mov	lr, r0
 801de30:	b999      	cbnz	r1, 801de5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801de32:	4563      	cmp	r3, ip
 801de34:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801de38:	d38a      	bcc.n	801dd50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801de3a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801de3e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801de40:	fa1f f68b 	uxth.w	r6, fp
 801de44:	1ba4      	subs	r4, r4, r6
 801de46:	881b      	ldrh	r3, [r3, #0]
 801de48:	b2a4      	uxth	r4, r4
 801de4a:	2c00      	cmp	r4, #0
 801de4c:	eba3 030b 	sub.w	r3, r3, fp
 801de50:	bf18      	it	ne
 801de52:	2600      	movne	r6, #0
 801de54:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801de58:	e77a      	b.n	801dd50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801de5a:	78aa      	ldrb	r2, [r5, #2]
 801de5c:	4f0e      	ldr	r7, [pc, #56]	; (801de98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801de5e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801de62:	786a      	ldrb	r2, [r5, #1]
 801de64:	00d2      	lsls	r2, r2, #3
 801de66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801de6a:	ea4a 0202 	orr.w	r2, sl, r2
 801de6e:	f895 a000 	ldrb.w	sl, [r5]
 801de72:	3901      	subs	r1, #1
 801de74:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801de78:	f82e 2b02 	strh.w	r2, [lr], #2
 801de7c:	b289      	uxth	r1, r1
 801de7e:	e7d7      	b.n	801de30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801de80:	4b03      	ldr	r3, [pc, #12]	; (801de90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801de82:	6818      	ldr	r0, [r3, #0]
 801de84:	6803      	ldr	r3, [r0, #0]
 801de86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801de88:	4798      	blx	r3
 801de8a:	b013      	add	sp, #76	; 0x4c
 801de8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de90:	20013834 	.word	0x20013834
 801de94:	2001382e 	.word	0x2001382e
 801de98:	fffff800 	.word	0xfffff800

0801de9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801de9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dea0:	b09d      	sub	sp, #116	; 0x74
 801dea2:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801dea6:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801deaa:	920e      	str	r2, [sp, #56]	; 0x38
 801deac:	461c      	mov	r4, r3
 801deae:	4683      	mov	fp, r0
 801deb0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801deb2:	2a00      	cmp	r2, #0
 801deb4:	f000 81e0 	beq.w	801e278 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801deb8:	6820      	ldr	r0, [r4, #0]
 801deba:	6861      	ldr	r1, [r4, #4]
 801debc:	aa18      	add	r2, sp, #96	; 0x60
 801debe:	c203      	stmia	r2!, {r0, r1}
 801dec0:	6818      	ldr	r0, [r3, #0]
 801dec2:	6859      	ldr	r1, [r3, #4]
 801dec4:	aa1a      	add	r2, sp, #104	; 0x68
 801dec6:	c203      	stmia	r2!, {r0, r1}
 801dec8:	a818      	add	r0, sp, #96	; 0x60
 801deca:	f7f8 fd45 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dece:	4621      	mov	r1, r4
 801ded0:	a81a      	add	r0, sp, #104	; 0x68
 801ded2:	f7f8 fd85 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ded6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801deda:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801dede:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801dee2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801dee6:	bfd7      	itett	le
 801dee8:	b29a      	uxthle	r2, r3
 801deea:	2201      	movgt	r2, #1
 801deec:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801def0:	fb91 f2f2 	sdivle	r2, r1, r2
 801def4:	9202      	str	r2, [sp, #8]
 801def6:	9802      	ldr	r0, [sp, #8]
 801def8:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801defc:	fb92 f0f0 	sdiv	r0, r2, r0
 801df00:	b280      	uxth	r0, r0
 801df02:	900f      	str	r0, [sp, #60]	; 0x3c
 801df04:	9902      	ldr	r1, [sp, #8]
 801df06:	9802      	ldr	r0, [sp, #8]
 801df08:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801df0a:	440c      	add	r4, r1
 801df0c:	fb05 2510 	mls	r5, r5, r0, r2
 801df10:	fb15 f503 	smulbb	r5, r5, r3
 801df14:	3c01      	subs	r4, #1
 801df16:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801df1a:	fb94 f4f1 	sdiv	r4, r4, r1
 801df1e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801df22:	440d      	add	r5, r1
 801df24:	4419      	add	r1, r3
 801df26:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801df2a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801df2e:	441a      	add	r2, r3
 801df30:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801df34:	9306      	str	r3, [sp, #24]
 801df36:	4bb3      	ldr	r3, [pc, #716]	; (801e204 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801df38:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801df3c:	6818      	ldr	r0, [r3, #0]
 801df3e:	6803      	ldr	r3, [r0, #0]
 801df40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df42:	4798      	blx	r3
 801df44:	4bb0      	ldr	r3, [pc, #704]	; (801e208 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801df46:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801df4a:	881a      	ldrh	r2, [r3, #0]
 801df4c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801df50:	9316      	str	r3, [sp, #88]	; 0x58
 801df52:	fb02 7101 	mla	r1, r2, r1, r7
 801df56:	3401      	adds	r4, #1
 801df58:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801df5c:	b2a4      	uxth	r4, r4
 801df5e:	4356      	muls	r6, r2
 801df60:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801df64:	00a4      	lsls	r4, r4, #2
 801df66:	920a      	str	r2, [sp, #40]	; 0x28
 801df68:	1d22      	adds	r2, r4, #4
 801df6a:	b2ad      	uxth	r5, r5
 801df6c:	9213      	str	r2, [sp, #76]	; 0x4c
 801df6e:	4ba7      	ldr	r3, [pc, #668]	; (801e20c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801df70:	9a06      	ldr	r2, [sp, #24]
 801df72:	2d00      	cmp	r5, #0
 801df74:	bf0c      	ite	eq
 801df76:	4611      	moveq	r1, r2
 801df78:	2100      	movne	r1, #0
 801df7a:	2200      	movs	r2, #0
 801df7c:	eba3 030b 	sub.w	r3, r3, fp
 801df80:	b289      	uxth	r1, r1
 801df82:	920d      	str	r2, [sp, #52]	; 0x34
 801df84:	9317      	str	r3, [sp, #92]	; 0x5c
 801df86:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801df88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801df8a:	fa12 f383 	uxtah	r3, r2, r3
 801df8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801df90:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801df94:	3304      	adds	r3, #4
 801df96:	9308      	str	r3, [sp, #32]
 801df98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801df9a:	4543      	cmp	r3, r8
 801df9c:	f240 8167 	bls.w	801e26e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801dfa0:	9a02      	ldr	r2, [sp, #8]
 801dfa2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801dfa6:	fbb5 f3f3 	udiv	r3, r5, r3
 801dfaa:	1ad3      	subs	r3, r2, r3
 801dfac:	b29b      	uxth	r3, r3
 801dfae:	9314      	str	r3, [sp, #80]	; 0x50
 801dfb0:	9b08      	ldr	r3, [sp, #32]
 801dfb2:	9808      	ldr	r0, [sp, #32]
 801dfb4:	785a      	ldrb	r2, [r3, #1]
 801dfb6:	789b      	ldrb	r3, [r3, #2]
 801dfb8:	7800      	ldrb	r0, [r0, #0]
 801dfba:	9010      	str	r0, [sp, #64]	; 0x40
 801dfbc:	021b      	lsls	r3, r3, #8
 801dfbe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801dfc2:	9a08      	ldr	r2, [sp, #32]
 801dfc4:	78d2      	ldrb	r2, [r2, #3]
 801dfc6:	4313      	orrs	r3, r2
 801dfc8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801dfca:	3001      	adds	r0, #1
 801dfcc:	441a      	add	r2, r3
 801dfce:	9007      	str	r0, [sp, #28]
 801dfd0:	1c50      	adds	r0, r2, #1
 801dfd2:	9005      	str	r0, [sp, #20]
 801dfd4:	7852      	ldrb	r2, [r2, #1]
 801dfd6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dfd8:	0212      	lsls	r2, r2, #8
 801dfda:	5cc3      	ldrb	r3, [r0, r3]
 801dfdc:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801dfe0:	431a      	orrs	r2, r3
 801dfe2:	b293      	uxth	r3, r2
 801dfe4:	930b      	str	r3, [sp, #44]	; 0x2c
 801dfe6:	2300      	movs	r3, #0
 801dfe8:	9309      	str	r3, [sp, #36]	; 0x24
 801dfea:	2301      	movs	r3, #1
 801dfec:	9301      	str	r3, [sp, #4]
 801dfee:	9304      	str	r3, [sp, #16]
 801dff0:	2300      	movs	r3, #0
 801dff2:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801dff6:	9303      	str	r3, [sp, #12]
 801dff8:	f04f 0e01 	mov.w	lr, #1
 801dffc:	2d00      	cmp	r5, #0
 801dffe:	d07c      	beq.n	801e0fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801e000:	45ae      	cmp	lr, r5
 801e002:	d26b      	bcs.n	801e0dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801e004:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e006:	eba5 050e 	sub.w	r5, r5, lr
 801e00a:	4543      	cmp	r3, r8
 801e00c:	b2ad      	uxth	r5, r5
 801e00e:	460c      	mov	r4, r1
 801e010:	d802      	bhi.n	801e018 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801e012:	e070      	b.n	801e0f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801e014:	2b00      	cmp	r3, #0
 801e016:	d15c      	bne.n	801e0d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801e018:	9b05      	ldr	r3, [sp, #20]
 801e01a:	9a04      	ldr	r2, [sp, #16]
 801e01c:	785b      	ldrb	r3, [r3, #1]
 801e01e:	9904      	ldr	r1, [sp, #16]
 801e020:	f1c2 0207 	rsb	r2, r2, #7
 801e024:	4093      	lsls	r3, r2
 801e026:	005b      	lsls	r3, r3, #1
 801e028:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e02c:	9b05      	ldr	r3, [sp, #20]
 801e02e:	781b      	ldrb	r3, [r3, #0]
 801e030:	410b      	asrs	r3, r1
 801e032:	3101      	adds	r1, #1
 801e034:	b2c9      	uxtb	r1, r1
 801e036:	2908      	cmp	r1, #8
 801e038:	9104      	str	r1, [sp, #16]
 801e03a:	9905      	ldr	r1, [sp, #20]
 801e03c:	bf0a      	itet	eq
 801e03e:	3102      	addeq	r1, #2
 801e040:	3101      	addne	r1, #1
 801e042:	9105      	streq	r1, [sp, #20]
 801e044:	b2db      	uxtb	r3, r3
 801e046:	bf0a      	itet	eq
 801e048:	2100      	moveq	r1, #0
 801e04a:	9105      	strne	r1, [sp, #20]
 801e04c:	9104      	streq	r1, [sp, #16]
 801e04e:	4313      	orrs	r3, r2
 801e050:	9910      	ldr	r1, [sp, #64]	; 0x40
 801e052:	b29a      	uxth	r2, r3
 801e054:	4291      	cmp	r1, r2
 801e056:	d30a      	bcc.n	801e06e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801e058:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801e05c:	2301      	movs	r3, #1
 801e05e:	9907      	ldr	r1, [sp, #28]
 801e060:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e064:	d30f      	bcc.n	801e086 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801e066:	2100      	movs	r1, #0
 801e068:	9301      	str	r3, [sp, #4]
 801e06a:	9103      	str	r1, [sp, #12]
 801e06c:	e032      	b.n	801e0d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801e06e:	9b07      	ldr	r3, [sp, #28]
 801e070:	429a      	cmp	r2, r3
 801e072:	d318      	bcc.n	801e0a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801e074:	9b01      	ldr	r3, [sp, #4]
 801e076:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801e07a:	445b      	add	r3, fp
 801e07c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e080:	9b01      	ldr	r3, [sp, #4]
 801e082:	3301      	adds	r3, #1
 801e084:	b29b      	uxth	r3, r3
 801e086:	9907      	ldr	r1, [sp, #28]
 801e088:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801e08c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e090:	7108      	strb	r0, [r1, #4]
 801e092:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e094:	80c8      	strh	r0, [r1, #6]
 801e096:	9801      	ldr	r0, [sp, #4]
 801e098:	3001      	adds	r0, #1
 801e09a:	7148      	strb	r0, [r1, #5]
 801e09c:	9907      	ldr	r1, [sp, #28]
 801e09e:	3101      	adds	r1, #1
 801e0a0:	b289      	uxth	r1, r1
 801e0a2:	9107      	str	r1, [sp, #28]
 801e0a4:	e7df      	b.n	801e066 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801e0a6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801e0aa:	4611      	mov	r1, r2
 801e0ac:	795b      	ldrb	r3, [r3, #5]
 801e0ae:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801e0b2:	4458      	add	r0, fp
 801e0b4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801e0b6:	4406      	add	r6, r0
 801e0b8:	2e00      	cmp	r6, #0
 801e0ba:	dd06      	ble.n	801e0ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801e0bc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801e0c0:	790e      	ldrb	r6, [r1, #4]
 801e0c2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801e0c6:	88c9      	ldrh	r1, [r1, #6]
 801e0c8:	e7f4      	b.n	801e0b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801e0ca:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801e0ce:	b29b      	uxth	r3, r3
 801e0d0:	e7c5      	b.n	801e05e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801e0d2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e0d4:	920b      	str	r2, [sp, #44]	; 0x2c
 801e0d6:	4621      	mov	r1, r4
 801e0d8:	469e      	mov	lr, r3
 801e0da:	e78f      	b.n	801dffc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801e0dc:	9a03      	ldr	r2, [sp, #12]
 801e0de:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e0e2:	442a      	add	r2, r5
 801e0e4:	ebae 0305 	sub.w	r3, lr, r5
 801e0e8:	b292      	uxth	r2, r2
 801e0ea:	b29b      	uxth	r3, r3
 801e0ec:	9203      	str	r2, [sp, #12]
 801e0ee:	2500      	movs	r5, #0
 801e0f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e0f2:	4542      	cmp	r2, r8
 801e0f4:	d88e      	bhi.n	801e014 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801e0f6:	4621      	mov	r1, r4
 801e0f8:	e74e      	b.n	801df98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801e0fa:	458e      	cmp	lr, r1
 801e0fc:	bf29      	itett	cs
 801e0fe:	ebae 0301 	subcs.w	r3, lr, r1
 801e102:	eba1 040e 	subcc.w	r4, r1, lr
 801e106:	b29b      	uxthcs	r3, r3
 801e108:	910c      	strcs	r1, [sp, #48]	; 0x30
 801e10a:	bf2f      	iteee	cs
 801e10c:	462c      	movcs	r4, r5
 801e10e:	b2a4      	uxthcc	r4, r4
 801e110:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801e114:	462b      	movcc	r3, r5
 801e116:	f04f 0900 	mov.w	r9, #0
 801e11a:	9a03      	ldr	r2, [sp, #12]
 801e11c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801e11e:	444a      	add	r2, r9
 801e120:	4548      	cmp	r0, r9
 801e122:	b292      	uxth	r2, r2
 801e124:	d074      	beq.n	801e210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801e126:	445a      	add	r2, fp
 801e128:	2004      	movs	r0, #4
 801e12a:	4605      	mov	r5, r0
 801e12c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801e130:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e132:	fb15 0202 	smlabb	r2, r5, r2, r0
 801e136:	9812      	ldr	r0, [sp, #72]	; 0x48
 801e138:	5880      	ldr	r0, [r0, r2]
 801e13a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801e13e:	d014      	beq.n	801e16a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e140:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801e144:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801e148:	d112      	bne.n	801e170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e14a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e14c:	2aff      	cmp	r2, #255	; 0xff
 801e14e:	d10f      	bne.n	801e170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801e150:	0942      	lsrs	r2, r0, #5
 801e152:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801e156:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e15a:	f025 0507 	bic.w	r5, r5, #7
 801e15e:	4315      	orrs	r5, r2
 801e160:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801e164:	4305      	orrs	r5, r0
 801e166:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801e16a:	f109 0901 	add.w	r9, r9, #1
 801e16e:	e7d4      	b.n	801e11a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801e170:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801e174:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801e178:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801e17c:	9215      	str	r2, [sp, #84]	; 0x54
 801e17e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e180:	fb02 fa0a 	mul.w	sl, r2, sl
 801e184:	f10a 0201 	add.w	r2, sl, #1
 801e188:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801e18c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801e190:	1212      	asrs	r2, r2, #8
 801e192:	fa1f fa82 	uxth.w	sl, r2
 801e196:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801e19a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801e19e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801e1a2:	43d2      	mvns	r2, r2
 801e1a4:	b2d2      	uxtb	r2, r2
 801e1a6:	fb16 f60a 	smulbb	r6, r6, sl
 801e1aa:	fa5f fc8c 	uxtb.w	ip, ip
 801e1ae:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e1b2:	b2c0      	uxtb	r0, r0
 801e1b4:	fb07 6702 	mla	r7, r7, r2, r6
 801e1b8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801e1bc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801e1be:	fb10 f00a 	smulbb	r0, r0, sl
 801e1c2:	fb0c 0002 	mla	r0, ip, r2, r0
 801e1c6:	b2ed      	uxtb	r5, r5
 801e1c8:	b2bf      	uxth	r7, r7
 801e1ca:	fb15 f50a 	smulbb	r5, r5, sl
 801e1ce:	b280      	uxth	r0, r0
 801e1d0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e1d4:	fb06 5602 	mla	r6, r6, r2, r5
 801e1d8:	1c7a      	adds	r2, r7, #1
 801e1da:	1c45      	adds	r5, r0, #1
 801e1dc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801e1e0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801e1e4:	b2b6      	uxth	r6, r6
 801e1e6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801e1ea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801e1ee:	432f      	orrs	r7, r5
 801e1f0:	1c75      	adds	r5, r6, #1
 801e1f2:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801e1f6:	096d      	lsrs	r5, r5, #5
 801e1f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e1fc:	432f      	orrs	r7, r5
 801e1fe:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801e202:	e7b2      	b.n	801e16a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801e204:	20013834 	.word	0x20013834
 801e208:	2001382e 	.word	0x2001382e
 801e20c:	fffff7fb 	.word	0xfffff7fb
 801e210:	9203      	str	r2, [sp, #12]
 801e212:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e214:	458e      	cmp	lr, r1
 801e216:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e21a:	f4ff af68 	bcc.w	801e0ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801e21e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801e220:	9906      	ldr	r1, [sp, #24]
 801e222:	8812      	ldrh	r2, [r2, #0]
 801e224:	1a52      	subs	r2, r2, r1
 801e226:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801e22a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e22c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801e22e:	3201      	adds	r2, #1
 801e230:	428a      	cmp	r2, r1
 801e232:	9209      	str	r2, [sp, #36]	; 0x24
 801e234:	d111      	bne.n	801e25a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801e236:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801e23a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801e23e:	9b06      	ldr	r3, [sp, #24]
 801e240:	eba5 0509 	sub.w	r5, r5, r9
 801e244:	b2ad      	uxth	r5, r5
 801e246:	2d00      	cmp	r5, #0
 801e248:	bf08      	it	eq
 801e24a:	4619      	moveq	r1, r3
 801e24c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e24e:	bf18      	it	ne
 801e250:	2100      	movne	r1, #0
 801e252:	3301      	adds	r3, #1
 801e254:	930d      	str	r3, [sp, #52]	; 0x34
 801e256:	b289      	uxth	r1, r1
 801e258:	e695      	b.n	801df86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801e25a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801e25e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801e262:	1b2d      	subs	r5, r5, r4
 801e264:	b2ad      	uxth	r5, r5
 801e266:	2d00      	cmp	r5, #0
 801e268:	bf18      	it	ne
 801e26a:	2400      	movne	r4, #0
 801e26c:	e740      	b.n	801e0f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801e26e:	4b04      	ldr	r3, [pc, #16]	; (801e280 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801e270:	6818      	ldr	r0, [r3, #0]
 801e272:	6803      	ldr	r3, [r0, #0]
 801e274:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e276:	4798      	blx	r3
 801e278:	b01d      	add	sp, #116	; 0x74
 801e27a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e27e:	bf00      	nop
 801e280:	20013834 	.word	0x20013834

0801e284 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801e284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e288:	b09f      	sub	sp, #124	; 0x7c
 801e28a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801e28e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801e292:	920a      	str	r2, [sp, #40]	; 0x28
 801e294:	461d      	mov	r5, r3
 801e296:	4604      	mov	r4, r0
 801e298:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e29a:	2a00      	cmp	r2, #0
 801e29c:	f000 81fa 	beq.w	801e694 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801e2a0:	6828      	ldr	r0, [r5, #0]
 801e2a2:	6869      	ldr	r1, [r5, #4]
 801e2a4:	aa1a      	add	r2, sp, #104	; 0x68
 801e2a6:	c203      	stmia	r2!, {r0, r1}
 801e2a8:	6818      	ldr	r0, [r3, #0]
 801e2aa:	6859      	ldr	r1, [r3, #4]
 801e2ac:	aa1c      	add	r2, sp, #112	; 0x70
 801e2ae:	c203      	stmia	r2!, {r0, r1}
 801e2b0:	a81a      	add	r0, sp, #104	; 0x68
 801e2b2:	f7f8 fb51 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e2b6:	4629      	mov	r1, r5
 801e2b8:	a81c      	add	r0, sp, #112	; 0x70
 801e2ba:	f7f8 fb91 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e2be:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801e2c2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801e2c6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801e2ca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801e2ce:	bfd7      	itett	le
 801e2d0:	b29a      	uxthle	r2, r3
 801e2d2:	2201      	movgt	r2, #1
 801e2d4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801e2d8:	fb91 f2f2 	sdivle	r2, r1, r2
 801e2dc:	9201      	str	r2, [sp, #4]
 801e2de:	9801      	ldr	r0, [sp, #4]
 801e2e0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801e2e4:	fb92 f0f0 	sdiv	r0, r2, r0
 801e2e8:	b280      	uxth	r0, r0
 801e2ea:	9010      	str	r0, [sp, #64]	; 0x40
 801e2ec:	9901      	ldr	r1, [sp, #4]
 801e2ee:	9801      	ldr	r0, [sp, #4]
 801e2f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e2f2:	440e      	add	r6, r1
 801e2f4:	fb05 2510 	mls	r5, r5, r0, r2
 801e2f8:	fb15 f503 	smulbb	r5, r5, r3
 801e2fc:	3e01      	subs	r6, #1
 801e2fe:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e302:	fb96 f6f1 	sdiv	r6, r6, r1
 801e306:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801e30a:	440d      	add	r5, r1
 801e30c:	4419      	add	r1, r3
 801e30e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801e312:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801e316:	441a      	add	r2, r3
 801e318:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801e31c:	9304      	str	r3, [sp, #16]
 801e31e:	4b96      	ldr	r3, [pc, #600]	; (801e578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801e320:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801e324:	6818      	ldr	r0, [r3, #0]
 801e326:	6803      	ldr	r3, [r0, #0]
 801e328:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e32a:	4798      	blx	r3
 801e32c:	4b93      	ldr	r3, [pc, #588]	; (801e57c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801e32e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801e332:	881a      	ldrh	r2, [r3, #0]
 801e334:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801e338:	9318      	str	r3, [sp, #96]	; 0x60
 801e33a:	fb02 c101 	mla	r1, r2, r1, ip
 801e33e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801e342:	4357      	muls	r7, r2
 801e344:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801e348:	3601      	adds	r6, #1
 801e34a:	920b      	str	r2, [sp, #44]	; 0x2c
 801e34c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e34e:	4b8c      	ldr	r3, [pc, #560]	; (801e580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801e350:	b2b6      	uxth	r6, r6
 801e352:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801e356:	1d32      	adds	r2, r6, #4
 801e358:	9206      	str	r2, [sp, #24]
 801e35a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e35c:	43d2      	mvns	r2, r2
 801e35e:	b2d2      	uxtb	r2, r2
 801e360:	b2ad      	uxth	r5, r5
 801e362:	9215      	str	r2, [sp, #84]	; 0x54
 801e364:	9a04      	ldr	r2, [sp, #16]
 801e366:	2d00      	cmp	r5, #0
 801e368:	bf0c      	ite	eq
 801e36a:	4611      	moveq	r1, r2
 801e36c:	2100      	movne	r1, #0
 801e36e:	2200      	movs	r2, #0
 801e370:	1b1b      	subs	r3, r3, r4
 801e372:	b289      	uxth	r1, r1
 801e374:	920d      	str	r2, [sp, #52]	; 0x34
 801e376:	9319      	str	r3, [sp, #100]	; 0x64
 801e378:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e37a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e37c:	fa12 f383 	uxtah	r3, r2, r3
 801e380:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801e382:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801e386:	3304      	adds	r3, #4
 801e388:	9307      	str	r3, [sp, #28]
 801e38a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e38c:	455b      	cmp	r3, fp
 801e38e:	f240 817c 	bls.w	801e68a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801e392:	9a01      	ldr	r2, [sp, #4]
 801e394:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801e398:	fbb5 f3f3 	udiv	r3, r5, r3
 801e39c:	1ad3      	subs	r3, r2, r3
 801e39e:	b29b      	uxth	r3, r3
 801e3a0:	9316      	str	r3, [sp, #88]	; 0x58
 801e3a2:	9b07      	ldr	r3, [sp, #28]
 801e3a4:	9807      	ldr	r0, [sp, #28]
 801e3a6:	785a      	ldrb	r2, [r3, #1]
 801e3a8:	789b      	ldrb	r3, [r3, #2]
 801e3aa:	7800      	ldrb	r0, [r0, #0]
 801e3ac:	9011      	str	r0, [sp, #68]	; 0x44
 801e3ae:	021b      	lsls	r3, r3, #8
 801e3b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801e3b4:	9a07      	ldr	r2, [sp, #28]
 801e3b6:	78d2      	ldrb	r2, [r2, #3]
 801e3b8:	4313      	orrs	r3, r2
 801e3ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801e3bc:	3001      	adds	r0, #1
 801e3be:	441a      	add	r2, r3
 801e3c0:	9005      	str	r0, [sp, #20]
 801e3c2:	1c50      	adds	r0, r2, #1
 801e3c4:	9003      	str	r0, [sp, #12]
 801e3c6:	7852      	ldrb	r2, [r2, #1]
 801e3c8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e3ca:	0212      	lsls	r2, r2, #8
 801e3cc:	5cc3      	ldrb	r3, [r0, r3]
 801e3ce:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801e3d2:	431a      	orrs	r2, r3
 801e3d4:	b293      	uxth	r3, r2
 801e3d6:	930c      	str	r3, [sp, #48]	; 0x30
 801e3d8:	2300      	movs	r3, #0
 801e3da:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801e3de:	9308      	str	r3, [sp, #32]
 801e3e0:	461a      	mov	r2, r3
 801e3e2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801e3e6:	930e      	str	r3, [sp, #56]	; 0x38
 801e3e8:	f04f 0801 	mov.w	r8, #1
 801e3ec:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801e3f0:	f8cd 8008 	str.w	r8, [sp, #8]
 801e3f4:	46c4      	mov	ip, r8
 801e3f6:	930f      	str	r3, [sp, #60]	; 0x3c
 801e3f8:	2d00      	cmp	r5, #0
 801e3fa:	d07c      	beq.n	801e4f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801e3fc:	45ac      	cmp	ip, r5
 801e3fe:	d26c      	bcs.n	801e4da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801e400:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e402:	eba5 050c 	sub.w	r5, r5, ip
 801e406:	455b      	cmp	r3, fp
 801e408:	b2ad      	uxth	r5, r5
 801e40a:	4608      	mov	r0, r1
 801e40c:	d802      	bhi.n	801e414 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801e40e:	e070      	b.n	801e4f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801e410:	2b00      	cmp	r3, #0
 801e412:	d15c      	bne.n	801e4ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801e414:	9b03      	ldr	r3, [sp, #12]
 801e416:	9a02      	ldr	r2, [sp, #8]
 801e418:	785b      	ldrb	r3, [r3, #1]
 801e41a:	9902      	ldr	r1, [sp, #8]
 801e41c:	f1c2 0207 	rsb	r2, r2, #7
 801e420:	4093      	lsls	r3, r2
 801e422:	005b      	lsls	r3, r3, #1
 801e424:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801e428:	9b03      	ldr	r3, [sp, #12]
 801e42a:	781b      	ldrb	r3, [r3, #0]
 801e42c:	410b      	asrs	r3, r1
 801e42e:	3101      	adds	r1, #1
 801e430:	b2c9      	uxtb	r1, r1
 801e432:	2908      	cmp	r1, #8
 801e434:	9102      	str	r1, [sp, #8]
 801e436:	9903      	ldr	r1, [sp, #12]
 801e438:	bf0a      	itet	eq
 801e43a:	3102      	addeq	r1, #2
 801e43c:	3101      	addne	r1, #1
 801e43e:	9103      	streq	r1, [sp, #12]
 801e440:	b2db      	uxtb	r3, r3
 801e442:	bf0a      	itet	eq
 801e444:	2100      	moveq	r1, #0
 801e446:	9103      	strne	r1, [sp, #12]
 801e448:	9102      	streq	r1, [sp, #8]
 801e44a:	4313      	orrs	r3, r2
 801e44c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801e44e:	b29a      	uxth	r2, r3
 801e450:	4291      	cmp	r1, r2
 801e452:	d30a      	bcc.n	801e46a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801e454:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801e458:	2301      	movs	r3, #1
 801e45a:	9905      	ldr	r1, [sp, #20]
 801e45c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801e460:	d30f      	bcc.n	801e482 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801e462:	2100      	movs	r1, #0
 801e464:	4698      	mov	r8, r3
 801e466:	9100      	str	r1, [sp, #0]
 801e468:	e032      	b.n	801e4d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801e46a:	9b05      	ldr	r3, [sp, #20]
 801e46c:	429a      	cmp	r2, r3
 801e46e:	d318      	bcc.n	801e4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801e470:	eb04 0308 	add.w	r3, r4, r8
 801e474:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801e478:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801e47c:	f108 0301 	add.w	r3, r8, #1
 801e480:	b29b      	uxth	r3, r3
 801e482:	9905      	ldr	r1, [sp, #20]
 801e484:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801e488:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e48c:	710e      	strb	r6, [r1, #4]
 801e48e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801e490:	80ce      	strh	r6, [r1, #6]
 801e492:	f108 0601 	add.w	r6, r8, #1
 801e496:	714e      	strb	r6, [r1, #5]
 801e498:	9905      	ldr	r1, [sp, #20]
 801e49a:	3101      	adds	r1, #1
 801e49c:	b289      	uxth	r1, r1
 801e49e:	9105      	str	r1, [sp, #20]
 801e4a0:	e7df      	b.n	801e462 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801e4a2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801e4a6:	4611      	mov	r1, r2
 801e4a8:	795b      	ldrb	r3, [r3, #5]
 801e4aa:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801e4ae:	4426      	add	r6, r4
 801e4b0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801e4b2:	4437      	add	r7, r6
 801e4b4:	2f00      	cmp	r7, #0
 801e4b6:	dd06      	ble.n	801e4c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801e4b8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e4bc:	790f      	ldrb	r7, [r1, #4]
 801e4be:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801e4c2:	88c9      	ldrh	r1, [r1, #6]
 801e4c4:	e7f4      	b.n	801e4b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801e4c6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801e4ca:	b29b      	uxth	r3, r3
 801e4cc:	e7c5      	b.n	801e45a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801e4ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e4d0:	920c      	str	r2, [sp, #48]	; 0x30
 801e4d2:	4601      	mov	r1, r0
 801e4d4:	9a00      	ldr	r2, [sp, #0]
 801e4d6:	469c      	mov	ip, r3
 801e4d8:	e78e      	b.n	801e3f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801e4da:	1957      	adds	r7, r2, r5
 801e4dc:	ebac 0305 	sub.w	r3, ip, r5
 801e4e0:	b2ba      	uxth	r2, r7
 801e4e2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e4e6:	9200      	str	r2, [sp, #0]
 801e4e8:	b29b      	uxth	r3, r3
 801e4ea:	2500      	movs	r5, #0
 801e4ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e4ee:	455a      	cmp	r2, fp
 801e4f0:	d88e      	bhi.n	801e410 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801e4f2:	4601      	mov	r1, r0
 801e4f4:	e749      	b.n	801e38a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801e4f6:	458c      	cmp	ip, r1
 801e4f8:	bf2c      	ite	cs
 801e4fa:	4628      	movcs	r0, r5
 801e4fc:	462b      	movcc	r3, r5
 801e4fe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e500:	bf27      	ittee	cs
 801e502:	9109      	strcs	r1, [sp, #36]	; 0x24
 801e504:	ebac 0301 	subcs.w	r3, ip, r1
 801e508:	eba1 000c 	subcc.w	r0, r1, ip
 801e50c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801e510:	bf2c      	ite	cs
 801e512:	b29b      	uxthcs	r3, r3
 801e514:	b280      	uxthcc	r0, r0
 801e516:	2dff      	cmp	r5, #255	; 0xff
 801e518:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e51a:	eb02 0705 	add.w	r7, r2, r5
 801e51e:	b2bd      	uxth	r5, r7
 801e520:	9500      	str	r5, [sp, #0]
 801e522:	d12f      	bne.n	801e584 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801e524:	465e      	mov	r6, fp
 801e526:	9d00      	ldr	r5, [sp, #0]
 801e528:	42aa      	cmp	r2, r5
 801e52a:	f040 8084 	bne.w	801e636 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801e52e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e530:	458c      	cmp	ip, r1
 801e532:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e536:	d3d8      	bcc.n	801e4ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801e538:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e53a:	9904      	ldr	r1, [sp, #16]
 801e53c:	8812      	ldrh	r2, [r2, #0]
 801e53e:	1a52      	subs	r2, r2, r1
 801e540:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e544:	9a08      	ldr	r2, [sp, #32]
 801e546:	9916      	ldr	r1, [sp, #88]	; 0x58
 801e548:	3201      	adds	r2, #1
 801e54a:	428a      	cmp	r2, r1
 801e54c:	9208      	str	r2, [sp, #32]
 801e54e:	f040 8092 	bne.w	801e676 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801e552:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801e556:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801e55a:	9b04      	ldr	r3, [sp, #16]
 801e55c:	eba5 050c 	sub.w	r5, r5, ip
 801e560:	b2ad      	uxth	r5, r5
 801e562:	2d00      	cmp	r5, #0
 801e564:	bf08      	it	eq
 801e566:	4619      	moveq	r1, r3
 801e568:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e56a:	bf18      	it	ne
 801e56c:	2100      	movne	r1, #0
 801e56e:	3301      	adds	r3, #1
 801e570:	930d      	str	r3, [sp, #52]	; 0x34
 801e572:	b289      	uxth	r1, r1
 801e574:	e700      	b.n	801e378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801e576:	bf00      	nop
 801e578:	20013834 	.word	0x20013834
 801e57c:	2001382e 	.word	0x2001382e
 801e580:	fffff7fb 	.word	0xfffff7fb
 801e584:	46d9      	mov	r9, fp
 801e586:	9d00      	ldr	r5, [sp, #0]
 801e588:	42aa      	cmp	r2, r5
 801e58a:	d0d0      	beq.n	801e52e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801e58c:	1c55      	adds	r5, r2, #1
 801e58e:	4422      	add	r2, r4
 801e590:	9517      	str	r5, [sp, #92]	; 0x5c
 801e592:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801e596:	9a06      	ldr	r2, [sp, #24]
 801e598:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801e59c:	4472      	add	r2, lr
 801e59e:	9212      	str	r2, [sp, #72]	; 0x48
 801e5a0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e5a2:	f8b9 2000 	ldrh.w	r2, [r9]
 801e5a6:	f897 a002 	ldrb.w	sl, [r7, #2]
 801e5aa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e5ac:	1216      	asrs	r6, r2, #8
 801e5ae:	fb1a fa07 	smulbb	sl, sl, r7
 801e5b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e5b6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e5b8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e5bc:	fb06 a607 	mla	r6, r6, r7, sl
 801e5c0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e5c2:	f897 a001 	ldrb.w	sl, [r7, #1]
 801e5c6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e5c8:	10d5      	asrs	r5, r2, #3
 801e5ca:	fb1a fa07 	smulbb	sl, sl, r7
 801e5ce:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e5d2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e5d4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e5d8:	fb05 a507 	mla	r5, r5, r7, sl
 801e5dc:	9f06      	ldr	r7, [sp, #24]
 801e5de:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e5e2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e5e4:	00d2      	lsls	r2, r2, #3
 801e5e6:	fb1e fe07 	smulbb	lr, lr, r7
 801e5ea:	b2d2      	uxtb	r2, r2
 801e5ec:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e5ee:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e5f2:	b2b6      	uxth	r6, r6
 801e5f4:	fb02 e207 	mla	r2, r2, r7, lr
 801e5f8:	b292      	uxth	r2, r2
 801e5fa:	b2ad      	uxth	r5, r5
 801e5fc:	f106 0a01 	add.w	sl, r6, #1
 801e600:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e604:	f102 0e01 	add.w	lr, r2, #1
 801e608:	f105 0a01 	add.w	sl, r5, #1
 801e60c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801e610:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e614:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e618:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e61c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e620:	ea4e 0606 	orr.w	r6, lr, r6
 801e624:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e628:	ea46 060a 	orr.w	r6, r6, sl
 801e62c:	f829 6b02 	strh.w	r6, [r9], #2
 801e630:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e634:	e7a7      	b.n	801e586 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801e636:	f102 0e01 	add.w	lr, r2, #1
 801e63a:	4422      	add	r2, r4
 801e63c:	9f06      	ldr	r7, [sp, #24]
 801e63e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801e642:	9a06      	ldr	r2, [sp, #24]
 801e644:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e648:	eb02 0a05 	add.w	sl, r2, r5
 801e64c:	4a13      	ldr	r2, [pc, #76]	; (801e69c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801e64e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e652:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801e656:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e65a:	00d2      	lsls	r2, r2, #3
 801e65c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e660:	ea49 0202 	orr.w	r2, r9, r2
 801e664:	f817 9005 	ldrb.w	r9, [r7, r5]
 801e668:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e66c:	f826 2b02 	strh.w	r2, [r6], #2
 801e670:	fa1f f28e 	uxth.w	r2, lr
 801e674:	e757      	b.n	801e526 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801e676:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e67a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801e67e:	1a2d      	subs	r5, r5, r0
 801e680:	b2ad      	uxth	r5, r5
 801e682:	2d00      	cmp	r5, #0
 801e684:	bf18      	it	ne
 801e686:	2000      	movne	r0, #0
 801e688:	e730      	b.n	801e4ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801e68a:	4b05      	ldr	r3, [pc, #20]	; (801e6a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801e68c:	6818      	ldr	r0, [r3, #0]
 801e68e:	6803      	ldr	r3, [r0, #0]
 801e690:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e692:	4798      	blx	r3
 801e694:	b01f      	add	sp, #124	; 0x7c
 801e696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e69a:	bf00      	nop
 801e69c:	fffff800 	.word	0xfffff800
 801e6a0:	20013834 	.word	0x20013834

0801e6a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801e6a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6a8:	b091      	sub	sp, #68	; 0x44
 801e6aa:	469b      	mov	fp, r3
 801e6ac:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801e6b0:	4616      	mov	r6, r2
 801e6b2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801e6b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e6ba:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801e6be:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801e6c2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e6c6:	4604      	mov	r4, r0
 801e6c8:	460d      	mov	r5, r1
 801e6ca:	4640      	mov	r0, r8
 801e6cc:	4659      	mov	r1, fp
 801e6ce:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e6d2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801e6d6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801e6da:	f7f2 fb9f 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 801e6de:	4631      	mov	r1, r6
 801e6e0:	4640      	mov	r0, r8
 801e6e2:	f7f2 fb9b 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 801e6e6:	4b74      	ldr	r3, [pc, #464]	; (801e8b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801e6e8:	8818      	ldrh	r0, [r3, #0]
 801e6ea:	4b74      	ldr	r3, [pc, #464]	; (801e8bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801e6ec:	8819      	ldrh	r1, [r3, #0]
 801e6ee:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e6f2:	2b00      	cmp	r3, #0
 801e6f4:	b202      	sxth	r2, r0
 801e6f6:	b20e      	sxth	r6, r1
 801e6f8:	da07      	bge.n	801e70a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801e6fa:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801e6fe:	4463      	add	r3, ip
 801e700:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801e704:	2300      	movs	r3, #0
 801e706:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801e70a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e70e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e712:	1ad2      	subs	r2, r2, r3
 801e714:	4594      	cmp	ip, r2
 801e716:	bfc4      	itt	gt
 801e718:	1ac2      	subgt	r2, r0, r3
 801e71a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801e71e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e722:	2a00      	cmp	r2, #0
 801e724:	da07      	bge.n	801e736 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801e726:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801e72a:	4462      	add	r2, ip
 801e72c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801e730:	2200      	movs	r2, #0
 801e732:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801e736:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801e73a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e73e:	eba6 060a 	sub.w	r6, r6, sl
 801e742:	42b2      	cmp	r2, r6
 801e744:	bfc4      	itt	gt
 801e746:	eba1 020a 	subgt.w	r2, r1, sl
 801e74a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801e74e:	4a5c      	ldr	r2, [pc, #368]	; (801e8c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801e750:	7812      	ldrb	r2, [r2, #0]
 801e752:	b9a2      	cbnz	r2, 801e77e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801e754:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e758:	4286      	cmp	r6, r0
 801e75a:	4640      	mov	r0, r8
 801e75c:	9303      	str	r3, [sp, #12]
 801e75e:	bf14      	ite	ne
 801e760:	2600      	movne	r6, #0
 801e762:	2601      	moveq	r6, #1
 801e764:	f7f2 fb9d 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e768:	9b03      	ldr	r3, [sp, #12]
 801e76a:	b160      	cbz	r0, 801e786 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801e76c:	2300      	movs	r3, #0
 801e76e:	8023      	strh	r3, [r4, #0]
 801e770:	8063      	strh	r3, [r4, #2]
 801e772:	80a3      	strh	r3, [r4, #4]
 801e774:	4620      	mov	r0, r4
 801e776:	80e3      	strh	r3, [r4, #6]
 801e778:	b011      	add	sp, #68	; 0x44
 801e77a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e77e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e782:	428e      	cmp	r6, r1
 801e784:	e7e9      	b.n	801e75a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801e786:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801e78a:	9205      	str	r2, [sp, #20]
 801e78c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e790:	9206      	str	r2, [sp, #24]
 801e792:	f8bb 2000 	ldrh.w	r2, [fp]
 801e796:	900e      	str	r0, [sp, #56]	; 0x38
 801e798:	1a9b      	subs	r3, r3, r2
 801e79a:	b21b      	sxth	r3, r3
 801e79c:	9303      	str	r3, [sp, #12]
 801e79e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e7a2:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801e7a6:	ebaa 0a03 	sub.w	sl, sl, r3
 801e7aa:	fa0f f38a 	sxth.w	r3, sl
 801e7ae:	9304      	str	r3, [sp, #16]
 801e7b0:	9b03      	ldr	r3, [sp, #12]
 801e7b2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801e7b6:	9b04      	ldr	r3, [sp, #16]
 801e7b8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e7bc:	9b05      	ldr	r3, [sp, #20]
 801e7be:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801e7c2:	a90e      	add	r1, sp, #56	; 0x38
 801e7c4:	9b06      	ldr	r3, [sp, #24]
 801e7c6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801e7ca:	a80c      	add	r0, sp, #48	; 0x30
 801e7cc:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801e7d0:	f7f8 f906 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e7d4:	4640      	mov	r0, r8
 801e7d6:	f7f8 f8bf 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e7da:	a80e      	add	r0, sp, #56	; 0x38
 801e7dc:	f7f8 f8bc 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e7e0:	4b38      	ldr	r3, [pc, #224]	; (801e8c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801e7e2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801e7e6:	881b      	ldrh	r3, [r3, #0]
 801e7e8:	9307      	str	r3, [sp, #28]
 801e7ea:	682b      	ldr	r3, [r5, #0]
 801e7ec:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801e8c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e7f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e7f2:	4628      	mov	r0, r5
 801e7f4:	4798      	blx	r3
 801e7f6:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801e7fa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801e7fe:	4681      	mov	r9, r0
 801e800:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801e804:	f8db 0000 	ldr.w	r0, [fp]
 801e808:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e80a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e80e:	6803      	ldr	r3, [r0, #0]
 801e810:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e812:	4798      	blx	r3
 801e814:	4607      	mov	r7, r0
 801e816:	f8db 0000 	ldr.w	r0, [fp]
 801e81a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801e81e:	6803      	ldr	r3, [r0, #0]
 801e820:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e824:	9109      	str	r1, [sp, #36]	; 0x24
 801e826:	9208      	str	r2, [sp, #32]
 801e828:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e82a:	4798      	blx	r3
 801e82c:	f010 0f01 	tst.w	r0, #1
 801e830:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e834:	d012      	beq.n	801e85c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801e836:	f8db 0000 	ldr.w	r0, [fp]
 801e83a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801e83e:	6803      	ldr	r3, [r0, #0]
 801e840:	9200      	str	r2, [sp, #0]
 801e842:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801e844:	e898 0006 	ldmia.w	r8, {r1, r2}
 801e848:	462b      	mov	r3, r5
 801e84a:	47b0      	blx	r6
 801e84c:	9b03      	ldr	r3, [sp, #12]
 801e84e:	8023      	strh	r3, [r4, #0]
 801e850:	9b04      	ldr	r3, [sp, #16]
 801e852:	8063      	strh	r3, [r4, #2]
 801e854:	9b05      	ldr	r3, [sp, #20]
 801e856:	80a3      	strh	r3, [r4, #4]
 801e858:	9b06      	ldr	r3, [sp, #24]
 801e85a:	e78b      	b.n	801e774 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801e85c:	fb09 f202 	mul.w	r2, r9, r2
 801e860:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801e864:	440f      	add	r7, r1
 801e866:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801e86a:	b166      	cbz	r6, 801e886 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e86c:	9a07      	ldr	r2, [sp, #28]
 801e86e:	4592      	cmp	sl, r2
 801e870:	d109      	bne.n	801e886 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e872:	f8db 0000 	ldr.w	r0, [fp]
 801e876:	6802      	ldr	r2, [r0, #0]
 801e878:	fb09 f303 	mul.w	r3, r9, r3
 801e87c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801e87e:	4629      	mov	r1, r5
 801e880:	463a      	mov	r2, r7
 801e882:	47b0      	blx	r6
 801e884:	e7e2      	b.n	801e84c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e886:	fb0a f303 	mul.w	r3, sl, r3
 801e88a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801e8c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e88e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801e892:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801e896:	4545      	cmp	r5, r8
 801e898:	d2d8      	bcs.n	801e84c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e89a:	f8db 0000 	ldr.w	r0, [fp]
 801e89e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e8a2:	6802      	ldr	r2, [r0, #0]
 801e8a4:	4629      	mov	r1, r5
 801e8a6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801e8aa:	005b      	lsls	r3, r3, #1
 801e8ac:	463a      	mov	r2, r7
 801e8ae:	47d0      	blx	sl
 801e8b0:	444f      	add	r7, r9
 801e8b2:	4435      	add	r5, r6
 801e8b4:	e7ef      	b.n	801e896 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801e8b6:	bf00      	nop
 801e8b8:	20013828 	.word	0x20013828
 801e8bc:	2001382a 	.word	0x2001382a
 801e8c0:	2001382c 	.word	0x2001382c
 801e8c4:	2001382e 	.word	0x2001382e
 801e8c8:	20013834 	.word	0x20013834

0801e8cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801e8cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e8ce:	4606      	mov	r6, r0
 801e8d0:	b087      	sub	sp, #28
 801e8d2:	460c      	mov	r4, r1
 801e8d4:	4617      	mov	r7, r2
 801e8d6:	461d      	mov	r5, r3
 801e8d8:	b333      	cbz	r3, 801e928 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e8da:	4608      	mov	r0, r1
 801e8dc:	f7f2 fae1 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e8e0:	bb10      	cbnz	r0, 801e928 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e8e2:	6820      	ldr	r0, [r4, #0]
 801e8e4:	6861      	ldr	r1, [r4, #4]
 801e8e6:	4c1c      	ldr	r4, [pc, #112]	; (801e958 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801e8e8:	ab04      	add	r3, sp, #16
 801e8ea:	c303      	stmia	r3!, {r0, r1}
 801e8ec:	a804      	add	r0, sp, #16
 801e8ee:	f7f8 f833 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e8f2:	6820      	ldr	r0, [r4, #0]
 801e8f4:	6803      	ldr	r3, [r0, #0]
 801e8f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e8f8:	4798      	blx	r3
 801e8fa:	2dff      	cmp	r5, #255	; 0xff
 801e8fc:	d016      	beq.n	801e92c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801e8fe:	f010 0f08 	tst.w	r0, #8
 801e902:	6820      	ldr	r0, [r4, #0]
 801e904:	d015      	beq.n	801e932 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801e906:	2400      	movs	r4, #0
 801e908:	6801      	ldr	r1, [r0, #0]
 801e90a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801e90e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e912:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801e916:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801e91a:	9401      	str	r4, [sp, #4]
 801e91c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801e920:	9400      	str	r4, [sp, #0]
 801e922:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801e924:	4639      	mov	r1, r7
 801e926:	47a0      	blx	r4
 801e928:	b007      	add	sp, #28
 801e92a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e92c:	f010 0f02 	tst.w	r0, #2
 801e930:	e7e7      	b.n	801e902 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801e932:	6803      	ldr	r3, [r0, #0]
 801e934:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e936:	4798      	blx	r3
 801e938:	4b08      	ldr	r3, [pc, #32]	; (801e95c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801e93a:	881a      	ldrh	r2, [r3, #0]
 801e93c:	6833      	ldr	r3, [r6, #0]
 801e93e:	e9cd 7500 	strd	r7, r5, [sp]
 801e942:	4601      	mov	r1, r0
 801e944:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801e946:	4630      	mov	r0, r6
 801e948:	ab04      	add	r3, sp, #16
 801e94a:	47a8      	blx	r5
 801e94c:	6820      	ldr	r0, [r4, #0]
 801e94e:	6803      	ldr	r3, [r0, #0]
 801e950:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e952:	4798      	blx	r3
 801e954:	e7e8      	b.n	801e928 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e956:	bf00      	nop
 801e958:	20013834 	.word	0x20013834
 801e95c:	2001382e 	.word	0x2001382e

0801e960 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801e960:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e964:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801e968:	9e08      	ldr	r6, [sp, #32]
 801e96a:	4688      	mov	r8, r1
 801e96c:	4614      	mov	r4, r2
 801e96e:	461d      	mov	r5, r3
 801e970:	2f00      	cmp	r7, #0
 801e972:	f000 80a9 	beq.w	801eac8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e976:	4618      	mov	r0, r3
 801e978:	f7f2 fa93 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e97c:	2800      	cmp	r0, #0
 801e97e:	f040 80a3 	bne.w	801eac8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e982:	f9b5 1000 	ldrsh.w	r1, [r5]
 801e986:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801e98a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801e98e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801e992:	fb04 1303 	mla	r3, r4, r3, r1
 801e996:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801e99a:	4365      	muls	r5, r4
 801e99c:	2fff      	cmp	r7, #255	; 0xff
 801e99e:	eba4 0200 	sub.w	r2, r4, r0
 801e9a2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801e9a6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801e9aa:	d04a      	beq.n	801ea42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801e9ac:	b2bc      	uxth	r4, r7
 801e9ae:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801e9b2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801e9b6:	fa5f f788 	uxtb.w	r7, r8
 801e9ba:	b2f3      	uxtb	r3, r6
 801e9bc:	0040      	lsls	r0, r0, #1
 801e9be:	fb0e fe04 	mul.w	lr, lr, r4
 801e9c2:	4367      	muls	r7, r4
 801e9c4:	4363      	muls	r3, r4
 801e9c6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801e9ca:	fa1f fc8c 	uxth.w	ip, ip
 801e9ce:	42a9      	cmp	r1, r5
 801e9d0:	d27a      	bcs.n	801eac8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e9d2:	eb01 0900 	add.w	r9, r1, r0
 801e9d6:	4549      	cmp	r1, r9
 801e9d8:	d231      	bcs.n	801ea3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801e9da:	880a      	ldrh	r2, [r1, #0]
 801e9dc:	1214      	asrs	r4, r2, #8
 801e9de:	10d6      	asrs	r6, r2, #3
 801e9e0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e9e4:	00d2      	lsls	r2, r2, #3
 801e9e6:	b2d2      	uxtb	r2, r2
 801e9e8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e9ec:	fb14 f40c 	smulbb	r4, r4, ip
 801e9f0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e9f4:	4474      	add	r4, lr
 801e9f6:	fb12 f20c 	smulbb	r2, r2, ip
 801e9fa:	b2a4      	uxth	r4, r4
 801e9fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ea00:	441a      	add	r2, r3
 801ea02:	b292      	uxth	r2, r2
 801ea04:	f104 0a01 	add.w	sl, r4, #1
 801ea08:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801ea0c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801ea10:	fb16 f60c 	smulbb	r6, r6, ip
 801ea14:	f102 0a01 	add.w	sl, r2, #1
 801ea18:	443e      	add	r6, r7
 801ea1a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801ea1e:	b2b6      	uxth	r6, r6
 801ea20:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ea24:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ea28:	4322      	orrs	r2, r4
 801ea2a:	1c74      	adds	r4, r6, #1
 801ea2c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801ea30:	0976      	lsrs	r6, r6, #5
 801ea32:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ea36:	4332      	orrs	r2, r6
 801ea38:	f821 2b02 	strh.w	r2, [r1], #2
 801ea3c:	e7cb      	b.n	801e9d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801ea3e:	4441      	add	r1, r8
 801ea40:	e7c5      	b.n	801e9ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801ea42:	4f22      	ldr	r7, [pc, #136]	; (801eacc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801ea44:	0973      	lsrs	r3, r6, #5
 801ea46:	ea08 0707 	and.w	r7, r8, r7
 801ea4a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea4e:	433b      	orrs	r3, r7
 801ea50:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801ea54:	4333      	orrs	r3, r6
 801ea56:	07e7      	lsls	r7, r4, #31
 801ea58:	b29b      	uxth	r3, r3
 801ea5a:	d50b      	bpl.n	801ea74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801ea5c:	0040      	lsls	r0, r0, #1
 801ea5e:	0052      	lsls	r2, r2, #1
 801ea60:	42a9      	cmp	r1, r5
 801ea62:	d231      	bcs.n	801eac8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801ea64:	180c      	adds	r4, r1, r0
 801ea66:	42a1      	cmp	r1, r4
 801ea68:	d202      	bcs.n	801ea70 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801ea6a:	f821 3b02 	strh.w	r3, [r1], #2
 801ea6e:	e7fa      	b.n	801ea66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801ea70:	4411      	add	r1, r2
 801ea72:	e7f5      	b.n	801ea60 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801ea74:	078e      	lsls	r6, r1, #30
 801ea76:	d008      	beq.n	801ea8a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801ea78:	0066      	lsls	r6, r4, #1
 801ea7a:	460a      	mov	r2, r1
 801ea7c:	42aa      	cmp	r2, r5
 801ea7e:	d202      	bcs.n	801ea86 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801ea80:	8013      	strh	r3, [r2, #0]
 801ea82:	4432      	add	r2, r6
 801ea84:	e7fa      	b.n	801ea7c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801ea86:	3102      	adds	r1, #2
 801ea88:	3801      	subs	r0, #1
 801ea8a:	07c2      	lsls	r2, r0, #31
 801ea8c:	d50b      	bpl.n	801eaa6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801ea8e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801ea92:	3a01      	subs	r2, #1
 801ea94:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801ea98:	0066      	lsls	r6, r4, #1
 801ea9a:	42aa      	cmp	r2, r5
 801ea9c:	d202      	bcs.n	801eaa4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801ea9e:	8013      	strh	r3, [r2, #0]
 801eaa0:	4432      	add	r2, r6
 801eaa2:	e7fa      	b.n	801ea9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801eaa4:	3801      	subs	r0, #1
 801eaa6:	b178      	cbz	r0, 801eac8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801eaa8:	1040      	asrs	r0, r0, #1
 801eaaa:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801eaae:	0080      	lsls	r0, r0, #2
 801eab0:	0064      	lsls	r4, r4, #1
 801eab2:	42a9      	cmp	r1, r5
 801eab4:	d208      	bcs.n	801eac8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801eab6:	180e      	adds	r6, r1, r0
 801eab8:	460a      	mov	r2, r1
 801eaba:	42b2      	cmp	r2, r6
 801eabc:	d202      	bcs.n	801eac4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801eabe:	f842 3b04 	str.w	r3, [r2], #4
 801eac2:	e7fa      	b.n	801eaba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801eac4:	4421      	add	r1, r4
 801eac6:	e7f4      	b.n	801eab2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801eac8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801eacc:	00fff800 	.word	0x00fff800

0801ead0 <_ZN8touchgfx8LCD16bppC1Ev>:
 801ead0:	2200      	movs	r2, #0
 801ead2:	4912      	ldr	r1, [pc, #72]	; (801eb1c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801ead4:	6042      	str	r2, [r0, #4]
 801ead6:	6001      	str	r1, [r0, #0]
 801ead8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801eadc:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801eae0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801eae4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801eae8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801eaec:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801eaf0:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801eaf4:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801eaf8:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801eafc:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801eb00:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801eb04:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801eb08:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801eb0c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801eb10:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801eb14:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801eb18:	4770      	bx	lr
 801eb1a:	bf00      	nop
 801eb1c:	08030280 	.word	0x08030280

0801eb20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801eb20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb24:	460d      	mov	r5, r1
 801eb26:	b08d      	sub	sp, #52	; 0x34
 801eb28:	4604      	mov	r4, r0
 801eb2a:	6808      	ldr	r0, [r1, #0]
 801eb2c:	6849      	ldr	r1, [r1, #4]
 801eb2e:	4699      	mov	r9, r3
 801eb30:	ab08      	add	r3, sp, #32
 801eb32:	c303      	stmia	r3!, {r0, r1}
 801eb34:	6810      	ldr	r0, [r2, #0]
 801eb36:	6851      	ldr	r1, [r2, #4]
 801eb38:	ab0a      	add	r3, sp, #40	; 0x28
 801eb3a:	c303      	stmia	r3!, {r0, r1}
 801eb3c:	a808      	add	r0, sp, #32
 801eb3e:	f7f7 ff0b 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eb42:	4629      	mov	r1, r5
 801eb44:	a80a      	add	r0, sp, #40	; 0x28
 801eb46:	f7f7 ff4b 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eb4a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801eb4e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801eb52:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801eb56:	4d63      	ldr	r5, [pc, #396]	; (801ece4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801eb58:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801eb5c:	6828      	ldr	r0, [r5, #0]
 801eb5e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801eb62:	fb11 2103 	smlabb	r1, r1, r3, r2
 801eb66:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801eb6a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801eb6e:	440a      	add	r2, r1
 801eb70:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801eb74:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801eb78:	4413      	add	r3, r2
 801eb7a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801eb7e:	6803      	ldr	r3, [r0, #0]
 801eb80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eb82:	4798      	blx	r3
 801eb84:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801eb88:	d119      	bne.n	801ebbe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801eb8a:	f010 0f20 	tst.w	r0, #32
 801eb8e:	6828      	ldr	r0, [r5, #0]
 801eb90:	d018      	beq.n	801ebc4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801eb92:	2500      	movs	r5, #0
 801eb94:	6801      	ldr	r1, [r0, #0]
 801eb96:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801eb9a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801eb9e:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801eba2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801eba6:	9502      	str	r5, [sp, #8]
 801eba8:	b2b6      	uxth	r6, r6
 801ebaa:	fa1f f588 	uxth.w	r5, r8
 801ebae:	9601      	str	r6, [sp, #4]
 801ebb0:	9500      	str	r5, [sp, #0]
 801ebb2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801ebb4:	4621      	mov	r1, r4
 801ebb6:	47a8      	blx	r5
 801ebb8:	b00d      	add	sp, #52	; 0x34
 801ebba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebbe:	f010 0f40 	tst.w	r0, #64	; 0x40
 801ebc2:	e7e4      	b.n	801eb8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ebc4:	6803      	ldr	r3, [r0, #0]
 801ebc6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ebc8:	4798      	blx	r3
 801ebca:	4947      	ldr	r1, [pc, #284]	; (801ece8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ebcc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ebd0:	880b      	ldrh	r3, [r1, #0]
 801ebd2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801ebd6:	fb03 5202 	mla	r2, r3, r2, r5
 801ebda:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ebde:	4373      	muls	r3, r6
 801ebe0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ebe4:	9307      	str	r3, [sp, #28]
 801ebe6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ebea:	9306      	str	r3, [sp, #24]
 801ebec:	468a      	mov	sl, r1
 801ebee:	9b07      	ldr	r3, [sp, #28]
 801ebf0:	4298      	cmp	r0, r3
 801ebf2:	d270      	bcs.n	801ecd6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ebf4:	9b06      	ldr	r3, [sp, #24]
 801ebf6:	4621      	mov	r1, r4
 801ebf8:	eb00 0b03 	add.w	fp, r0, r3
 801ebfc:	4558      	cmp	r0, fp
 801ebfe:	d25d      	bcs.n	801ecbc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ec00:	f851 4b04 	ldr.w	r4, [r1], #4
 801ec04:	0e23      	lsrs	r3, r4, #24
 801ec06:	d014      	beq.n	801ec32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ec08:	2bff      	cmp	r3, #255	; 0xff
 801ec0a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ec0e:	d112      	bne.n	801ec36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ec10:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ec14:	d10f      	bne.n	801ec36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ec16:	0963      	lsrs	r3, r4, #5
 801ec18:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ec1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec20:	f02c 0c07 	bic.w	ip, ip, #7
 801ec24:	ea43 0c0c 	orr.w	ip, r3, ip
 801ec28:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ec2c:	ea4c 0404 	orr.w	r4, ip, r4
 801ec30:	8004      	strh	r4, [r0, #0]
 801ec32:	3002      	adds	r0, #2
 801ec34:	e7e2      	b.n	801ebfc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ec36:	fb09 f303 	mul.w	r3, r9, r3
 801ec3a:	8807      	ldrh	r7, [r0, #0]
 801ec3c:	1c5a      	adds	r2, r3, #1
 801ec3e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ec42:	1212      	asrs	r2, r2, #8
 801ec44:	123e      	asrs	r6, r7, #8
 801ec46:	b293      	uxth	r3, r2
 801ec48:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ec4c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ec50:	43d2      	mvns	r2, r2
 801ec52:	b2d2      	uxtb	r2, r2
 801ec54:	10fd      	asrs	r5, r7, #3
 801ec56:	fb1e fe03 	smulbb	lr, lr, r3
 801ec5a:	00ff      	lsls	r7, r7, #3
 801ec5c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ec60:	fb06 e602 	mla	r6, r6, r2, lr
 801ec64:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ec68:	b2ff      	uxtb	r7, r7
 801ec6a:	fa5f fc8c 	uxtb.w	ip, ip
 801ec6e:	b2e4      	uxtb	r4, r4
 801ec70:	b2b6      	uxth	r6, r6
 801ec72:	fb1c fc03 	smulbb	ip, ip, r3
 801ec76:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ec7a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801ec7e:	fb14 f403 	smulbb	r4, r4, r3
 801ec82:	fb05 c502 	mla	r5, r5, r2, ip
 801ec86:	f106 0e01 	add.w	lr, r6, #1
 801ec8a:	fb07 4702 	mla	r7, r7, r2, r4
 801ec8e:	b2ad      	uxth	r5, r5
 801ec90:	b2bf      	uxth	r7, r7
 801ec92:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ec96:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ec9a:	f105 0c01 	add.w	ip, r5, #1
 801ec9e:	1c7e      	adds	r6, r7, #1
 801eca0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801eca4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801eca8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ecac:	096d      	lsrs	r5, r5, #5
 801ecae:	ea46 060e 	orr.w	r6, r6, lr
 801ecb2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ecb6:	432e      	orrs	r6, r5
 801ecb8:	8006      	strh	r6, [r0, #0]
 801ecba:	e7ba      	b.n	801ec32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ecbc:	f8ba 3000 	ldrh.w	r3, [sl]
 801ecc0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ecc4:	eba3 0308 	sub.w	r3, r3, r8
 801ecc8:	eba4 0408 	sub.w	r4, r4, r8
 801eccc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ecd0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ecd4:	e78b      	b.n	801ebee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ecd6:	4b03      	ldr	r3, [pc, #12]	; (801ece4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ecd8:	6818      	ldr	r0, [r3, #0]
 801ecda:	6803      	ldr	r3, [r0, #0]
 801ecdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ecde:	4798      	blx	r3
 801ece0:	e76a      	b.n	801ebb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ece2:	bf00      	nop
 801ece4:	20013834 	.word	0x20013834
 801ece8:	2001382e 	.word	0x2001382e

0801ecec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ecec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ecf0:	460c      	mov	r4, r1
 801ecf2:	b085      	sub	sp, #20
 801ecf4:	6810      	ldr	r0, [r2, #0]
 801ecf6:	6851      	ldr	r1, [r2, #4]
 801ecf8:	466d      	mov	r5, sp
 801ecfa:	c503      	stmia	r5!, {r0, r1}
 801ecfc:	6818      	ldr	r0, [r3, #0]
 801ecfe:	6859      	ldr	r1, [r3, #4]
 801ed00:	4616      	mov	r6, r2
 801ed02:	c503      	stmia	r5!, {r0, r1}
 801ed04:	4668      	mov	r0, sp
 801ed06:	f7f7 fe27 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ed0a:	4631      	mov	r1, r6
 801ed0c:	a802      	add	r0, sp, #8
 801ed0e:	f7f7 fe67 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ed12:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ed16:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ed1a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ed1e:	4d28      	ldr	r5, [pc, #160]	; (801edc0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ed20:	4e28      	ldr	r6, [pc, #160]	; (801edc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ed22:	6828      	ldr	r0, [r5, #0]
 801ed24:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ed28:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ed2c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ed30:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ed34:	f8bd 1000 	ldrh.w	r1, [sp]
 801ed38:	440a      	add	r2, r1
 801ed3a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ed3e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ed42:	4413      	add	r3, r2
 801ed44:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ed48:	6803      	ldr	r3, [r0, #0]
 801ed4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed4c:	4798      	blx	r3
 801ed4e:	8833      	ldrh	r3, [r6, #0]
 801ed50:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ed54:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ed58:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801edc8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ed5c:	fb03 1202 	mla	r2, r3, r2, r1
 801ed60:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ed64:	fb08 f303 	mul.w	r3, r8, r3
 801ed68:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ed6c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801ed70:	4298      	cmp	r0, r3
 801ed72:	d21d      	bcs.n	801edb0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801ed74:	eb00 080c 	add.w	r8, r0, ip
 801ed78:	4540      	cmp	r0, r8
 801ed7a:	d20f      	bcs.n	801ed9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801ed7c:	f854 1b04 	ldr.w	r1, [r4], #4
 801ed80:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801ed84:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801ed88:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ed8c:	ea42 0209 	orr.w	r2, r2, r9
 801ed90:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ed94:	430a      	orrs	r2, r1
 801ed96:	f820 2b02 	strh.w	r2, [r0], #2
 801ed9a:	e7ed      	b.n	801ed78 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801ed9c:	8832      	ldrh	r2, [r6, #0]
 801ed9e:	1bd2      	subs	r2, r2, r7
 801eda0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801eda4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801eda8:	1bd2      	subs	r2, r2, r7
 801edaa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801edae:	e7df      	b.n	801ed70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801edb0:	6828      	ldr	r0, [r5, #0]
 801edb2:	6803      	ldr	r3, [r0, #0]
 801edb4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801edb6:	4798      	blx	r3
 801edb8:	b005      	add	sp, #20
 801edba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801edbe:	bf00      	nop
 801edc0:	20013834 	.word	0x20013834
 801edc4:	2001382e 	.word	0x2001382e
 801edc8:	fffff800 	.word	0xfffff800

0801edcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801edcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801edd0:	460e      	mov	r6, r1
 801edd2:	b08e      	sub	sp, #56	; 0x38
 801edd4:	4604      	mov	r4, r0
 801edd6:	6808      	ldr	r0, [r1, #0]
 801edd8:	6849      	ldr	r1, [r1, #4]
 801edda:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801efb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801edde:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801efb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801ede2:	461d      	mov	r5, r3
 801ede4:	ab0a      	add	r3, sp, #40	; 0x28
 801ede6:	c303      	stmia	r3!, {r0, r1}
 801ede8:	6810      	ldr	r0, [r2, #0]
 801edea:	6851      	ldr	r1, [r2, #4]
 801edec:	ab0c      	add	r3, sp, #48	; 0x30
 801edee:	c303      	stmia	r3!, {r0, r1}
 801edf0:	a80a      	add	r0, sp, #40	; 0x28
 801edf2:	f7f7 fdb1 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801edf6:	4631      	mov	r1, r6
 801edf8:	a80c      	add	r0, sp, #48	; 0x30
 801edfa:	f7f7 fdf1 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801edfe:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801ee02:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801ee06:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ee0a:	f8d8 0000 	ldr.w	r0, [r8]
 801ee0e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801ee12:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ee16:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ee1a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ee1e:	440c      	add	r4, r1
 801ee20:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801ee24:	440a      	add	r2, r1
 801ee26:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801ee2a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801ee2e:	4413      	add	r3, r2
 801ee30:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ee34:	6803      	ldr	r3, [r0, #0]
 801ee36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ee38:	4798      	blx	r3
 801ee3a:	2dff      	cmp	r5, #255	; 0xff
 801ee3c:	d124      	bne.n	801ee88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801ee3e:	f010 0f01 	tst.w	r0, #1
 801ee42:	f8d8 0000 	ldr.w	r0, [r8]
 801ee46:	d022      	beq.n	801ee8e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801ee48:	2100      	movs	r1, #0
 801ee4a:	f8d0 c000 	ldr.w	ip, [r0]
 801ee4e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801ee52:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801ee56:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801ee5a:	f04f 0e01 	mov.w	lr, #1
 801ee5e:	f8cd e018 	str.w	lr, [sp, #24]
 801ee62:	f8b9 e000 	ldrh.w	lr, [r9]
 801ee66:	9503      	str	r5, [sp, #12]
 801ee68:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801ee6c:	b2b6      	uxth	r6, r6
 801ee6e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ee72:	9102      	str	r1, [sp, #8]
 801ee74:	b2bf      	uxth	r7, r7
 801ee76:	9601      	str	r6, [sp, #4]
 801ee78:	9700      	str	r7, [sp, #0]
 801ee7a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801ee7e:	4621      	mov	r1, r4
 801ee80:	47a8      	blx	r5
 801ee82:	b00e      	add	sp, #56	; 0x38
 801ee84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ee88:	f010 0f04 	tst.w	r0, #4
 801ee8c:	e7d9      	b.n	801ee42 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ee8e:	6803      	ldr	r3, [r0, #0]
 801ee90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ee92:	4798      	blx	r3
 801ee94:	f8b9 3000 	ldrh.w	r3, [r9]
 801ee98:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ee9c:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801eea0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801eea4:	fb03 1202 	mla	r2, r3, r2, r1
 801eea8:	ebac 0c07 	sub.w	ip, ip, r7
 801eeac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801eeb0:	435e      	muls	r6, r3
 801eeb2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801eeb6:	2dff      	cmp	r5, #255	; 0xff
 801eeb8:	eba3 0707 	sub.w	r7, r3, r7
 801eebc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801eec0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801eec4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801eec8:	d049      	beq.n	801ef5e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801eeca:	43eb      	mvns	r3, r5
 801eecc:	fa1f f985 	uxth.w	r9, r5
 801eed0:	b2db      	uxtb	r3, r3
 801eed2:	42b0      	cmp	r0, r6
 801eed4:	d266      	bcs.n	801efa4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801eed6:	eb00 0a0e 	add.w	sl, r0, lr
 801eeda:	4550      	cmp	r0, sl
 801eedc:	4621      	mov	r1, r4
 801eede:	f104 0403 	add.w	r4, r4, #3
 801eee2:	d25b      	bcs.n	801ef9c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801eee4:	8802      	ldrh	r2, [r0, #0]
 801eee6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801eeea:	ea4f 2822 	mov.w	r8, r2, asr #8
 801eeee:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801eef2:	fb11 f109 	smulbb	r1, r1, r9
 801eef6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801eefa:	10d5      	asrs	r5, r2, #3
 801eefc:	fb08 1803 	mla	r8, r8, r3, r1
 801ef00:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ef04:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ef08:	fb11 f109 	smulbb	r1, r1, r9
 801ef0c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ef10:	fb05 1503 	mla	r5, r5, r3, r1
 801ef14:	00d2      	lsls	r2, r2, #3
 801ef16:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ef1a:	b2d2      	uxtb	r2, r2
 801ef1c:	fb11 f109 	smulbb	r1, r1, r9
 801ef20:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ef24:	fa1f f888 	uxth.w	r8, r8
 801ef28:	fb02 1203 	mla	r2, r2, r3, r1
 801ef2c:	b292      	uxth	r2, r2
 801ef2e:	f108 0101 	add.w	r1, r8, #1
 801ef32:	b2ad      	uxth	r5, r5
 801ef34:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801ef38:	1c51      	adds	r1, r2, #1
 801ef3a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ef3e:	1c69      	adds	r1, r5, #1
 801ef40:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ef44:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ef48:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ef4c:	096d      	lsrs	r5, r5, #5
 801ef4e:	ea42 0208 	orr.w	r2, r2, r8
 801ef52:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ef56:	432a      	orrs	r2, r5
 801ef58:	f820 2b02 	strh.w	r2, [r0], #2
 801ef5c:	e7bd      	b.n	801eeda <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ef5e:	4a14      	ldr	r2, [pc, #80]	; (801efb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801ef60:	42b0      	cmp	r0, r6
 801ef62:	d21f      	bcs.n	801efa4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ef64:	eb00 050e 	add.w	r5, r0, lr
 801ef68:	42a8      	cmp	r0, r5
 801ef6a:	4621      	mov	r1, r4
 801ef6c:	f104 0403 	add.w	r4, r4, #3
 801ef70:	d210      	bcs.n	801ef94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ef72:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ef76:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ef7a:	00db      	lsls	r3, r3, #3
 801ef7c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801ef80:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ef84:	430b      	orrs	r3, r1
 801ef86:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ef8a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ef8e:	f820 3b02 	strh.w	r3, [r0], #2
 801ef92:	e7e9      	b.n	801ef68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801ef94:	4438      	add	r0, r7
 801ef96:	eb01 040c 	add.w	r4, r1, ip
 801ef9a:	e7e1      	b.n	801ef60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801ef9c:	4438      	add	r0, r7
 801ef9e:	eb01 040c 	add.w	r4, r1, ip
 801efa2:	e796      	b.n	801eed2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801efa4:	4b03      	ldr	r3, [pc, #12]	; (801efb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801efa6:	6818      	ldr	r0, [r3, #0]
 801efa8:	6803      	ldr	r3, [r0, #0]
 801efaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801efac:	4798      	blx	r3
 801efae:	e768      	b.n	801ee82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801efb0:	fffff800 	.word	0xfffff800
 801efb4:	20013834 	.word	0x20013834
 801efb8:	2001382e 	.word	0x2001382e

0801efbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801efbc:	b4f0      	push	{r4, r5, r6, r7}
 801efbe:	4616      	mov	r6, r2
 801efc0:	2e01      	cmp	r6, #1
 801efc2:	461c      	mov	r4, r3
 801efc4:	460d      	mov	r5, r1
 801efc6:	9a04      	ldr	r2, [sp, #16]
 801efc8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801efcc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801efd0:	d012      	beq.n	801eff8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801efd2:	d303      	bcc.n	801efdc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801efd4:	2e02      	cmp	r6, #2
 801efd6:	d00a      	beq.n	801efee <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801efd8:	bcf0      	pop	{r4, r5, r6, r7}
 801efda:	4770      	bx	lr
 801efdc:	6805      	ldr	r5, [r0, #0]
 801efde:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801efe2:	68ed      	ldr	r5, [r5, #12]
 801efe4:	4613      	mov	r3, r2
 801efe6:	46ac      	mov	ip, r5
 801efe8:	4622      	mov	r2, r4
 801efea:	bcf0      	pop	{r4, r5, r6, r7}
 801efec:	4760      	bx	ip
 801efee:	4621      	mov	r1, r4
 801eff0:	4628      	mov	r0, r5
 801eff2:	bcf0      	pop	{r4, r5, r6, r7}
 801eff4:	f7ff bd94 	b.w	801eb20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801eff8:	4621      	mov	r1, r4
 801effa:	4628      	mov	r0, r5
 801effc:	bcf0      	pop	{r4, r5, r6, r7}
 801effe:	f7ff bee5 	b.w	801edcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801f004 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801f004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f008:	4681      	mov	r9, r0
 801f00a:	b093      	sub	sp, #76	; 0x4c
 801f00c:	6810      	ldr	r0, [r2, #0]
 801f00e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801f012:	4f6d      	ldr	r7, [pc, #436]	; (801f1c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801f014:	4688      	mov	r8, r1
 801f016:	6851      	ldr	r1, [r2, #4]
 801f018:	ac0e      	add	r4, sp, #56	; 0x38
 801f01a:	c403      	stmia	r4!, {r0, r1}
 801f01c:	6818      	ldr	r0, [r3, #0]
 801f01e:	6859      	ldr	r1, [r3, #4]
 801f020:	ac10      	add	r4, sp, #64	; 0x40
 801f022:	4616      	mov	r6, r2
 801f024:	c403      	stmia	r4!, {r0, r1}
 801f026:	a80e      	add	r0, sp, #56	; 0x38
 801f028:	f7f7 fc96 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f02c:	4631      	mov	r1, r6
 801f02e:	a810      	add	r0, sp, #64	; 0x40
 801f030:	f7f7 fcd6 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f034:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801f038:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801f03c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801f040:	4e62      	ldr	r6, [pc, #392]	; (801f1cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f042:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801f046:	6830      	ldr	r0, [r6, #0]
 801f048:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801f04c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f050:	4489      	add	r9, r1
 801f052:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801f056:	440a      	add	r2, r1
 801f058:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801f05c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f060:	4413      	add	r3, r2
 801f062:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801f066:	6803      	ldr	r3, [r0, #0]
 801f068:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f06a:	4798      	blx	r3
 801f06c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f070:	6830      	ldr	r0, [r6, #0]
 801f072:	d01d      	beq.n	801f0b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801f074:	2200      	movs	r2, #0
 801f076:	6801      	ldr	r1, [r0, #0]
 801f078:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801f07c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f080:	220b      	movs	r2, #11
 801f082:	9207      	str	r2, [sp, #28]
 801f084:	883a      	ldrh	r2, [r7, #0]
 801f086:	9206      	str	r2, [sp, #24]
 801f088:	2201      	movs	r2, #1
 801f08a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801f08e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801f092:	9203      	str	r2, [sp, #12]
 801f094:	b2a4      	uxth	r4, r4
 801f096:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801f09a:	9200      	str	r2, [sp, #0]
 801f09c:	b2ad      	uxth	r5, r5
 801f09e:	9502      	str	r5, [sp, #8]
 801f0a0:	9401      	str	r4, [sp, #4]
 801f0a2:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801f0a4:	4642      	mov	r2, r8
 801f0a6:	4649      	mov	r1, r9
 801f0a8:	47a0      	blx	r4
 801f0aa:	b013      	add	sp, #76	; 0x4c
 801f0ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0b0:	6803      	ldr	r3, [r0, #0]
 801f0b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f0b4:	4798      	blx	r3
 801f0b6:	883b      	ldrh	r3, [r7, #0]
 801f0b8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801f0bc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801f0c0:	fb03 1202 	mla	r2, r3, r2, r1
 801f0c4:	435d      	muls	r5, r3
 801f0c6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801f0ca:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801f0ce:	920c      	str	r2, [sp, #48]	; 0x30
 801f0d0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801f0d4:	1b12      	subs	r2, r2, r4
 801f0d6:	920d      	str	r2, [sp, #52]	; 0x34
 801f0d8:	0062      	lsls	r2, r4, #1
 801f0da:	1b1c      	subs	r4, r3, r4
 801f0dc:	0063      	lsls	r3, r4, #1
 801f0de:	920a      	str	r2, [sp, #40]	; 0x28
 801f0e0:	930b      	str	r3, [sp, #44]	; 0x2c
 801f0e2:	f04f 0e04 	mov.w	lr, #4
 801f0e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f0e8:	4298      	cmp	r0, r3
 801f0ea:	d266      	bcs.n	801f1ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801f0ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f0ee:	eb00 0b03 	add.w	fp, r0, r3
 801f0f2:	4558      	cmp	r0, fp
 801f0f4:	d25c      	bcs.n	801f1b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801f0f6:	f819 3b01 	ldrb.w	r3, [r9], #1
 801f0fa:	fb1e e303 	smlabb	r3, lr, r3, lr
 801f0fe:	f858 2003 	ldr.w	r2, [r8, r3]
 801f102:	0e11      	lsrs	r1, r2, #24
 801f104:	d012      	beq.n	801f12c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f106:	29ff      	cmp	r1, #255	; 0xff
 801f108:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801f10c:	d110      	bne.n	801f130 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f10e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f112:	d10d      	bne.n	801f130 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801f114:	0953      	lsrs	r3, r2, #5
 801f116:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801f11a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f11e:	f027 0707 	bic.w	r7, r7, #7
 801f122:	431f      	orrs	r7, r3
 801f124:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f128:	433a      	orrs	r2, r7
 801f12a:	8002      	strh	r2, [r0, #0]
 801f12c:	3002      	adds	r0, #2
 801f12e:	e7e0      	b.n	801f0f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801f130:	fb0a f101 	mul.w	r1, sl, r1
 801f134:	8806      	ldrh	r6, [r0, #0]
 801f136:	1c4b      	adds	r3, r1, #1
 801f138:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801f13c:	1235      	asrs	r5, r6, #8
 801f13e:	10f4      	asrs	r4, r6, #3
 801f140:	121b      	asrs	r3, r3, #8
 801f142:	00f6      	lsls	r6, r6, #3
 801f144:	b299      	uxth	r1, r3
 801f146:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801f14a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f14e:	b2f6      	uxtb	r6, r6
 801f150:	43db      	mvns	r3, r3
 801f152:	b2d2      	uxtb	r2, r2
 801f154:	b2db      	uxtb	r3, r3
 801f156:	fb1c fc01 	smulbb	ip, ip, r1
 801f15a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801f15e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801f162:	fb12 f201 	smulbb	r2, r2, r1
 801f166:	fb05 c503 	mla	r5, r5, r3, ip
 801f16a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801f16e:	b2ff      	uxtb	r7, r7
 801f170:	fb06 2203 	mla	r2, r6, r3, r2
 801f174:	b2ad      	uxth	r5, r5
 801f176:	fb17 f701 	smulbb	r7, r7, r1
 801f17a:	b292      	uxth	r2, r2
 801f17c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801f180:	fb04 7403 	mla	r4, r4, r3, r7
 801f184:	f105 0c01 	add.w	ip, r5, #1
 801f188:	1c57      	adds	r7, r2, #1
 801f18a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f18e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f192:	b2a4      	uxth	r4, r4
 801f194:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f198:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801f19c:	433d      	orrs	r5, r7
 801f19e:	1c67      	adds	r7, r4, #1
 801f1a0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801f1a4:	0964      	lsrs	r4, r4, #5
 801f1a6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f1aa:	4325      	orrs	r5, r4
 801f1ac:	8005      	strh	r5, [r0, #0]
 801f1ae:	e7bd      	b.n	801f12c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801f1b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f1b2:	4418      	add	r0, r3
 801f1b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f1b6:	4499      	add	r9, r3
 801f1b8:	e795      	b.n	801f0e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801f1ba:	4b04      	ldr	r3, [pc, #16]	; (801f1cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801f1bc:	6818      	ldr	r0, [r3, #0]
 801f1be:	6803      	ldr	r3, [r0, #0]
 801f1c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f1c2:	4798      	blx	r3
 801f1c4:	e771      	b.n	801f0aa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801f1c6:	bf00      	nop
 801f1c8:	2001382e 	.word	0x2001382e
 801f1cc:	20013834 	.word	0x20013834

0801f1d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801f1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1d4:	b087      	sub	sp, #28
 801f1d6:	4680      	mov	r8, r0
 801f1d8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801f1dc:	460d      	mov	r5, r1
 801f1de:	4614      	mov	r4, r2
 801f1e0:	2e00      	cmp	r6, #0
 801f1e2:	f000 80b9 	beq.w	801f358 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801f1e6:	6810      	ldr	r0, [r2, #0]
 801f1e8:	6851      	ldr	r1, [r2, #4]
 801f1ea:	af02      	add	r7, sp, #8
 801f1ec:	c703      	stmia	r7!, {r0, r1}
 801f1ee:	6818      	ldr	r0, [r3, #0]
 801f1f0:	6859      	ldr	r1, [r3, #4]
 801f1f2:	af04      	add	r7, sp, #16
 801f1f4:	c703      	stmia	r7!, {r0, r1}
 801f1f6:	a802      	add	r0, sp, #8
 801f1f8:	f7f7 fbae 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f1fc:	4621      	mov	r1, r4
 801f1fe:	a804      	add	r0, sp, #16
 801f200:	f7f7 fbee 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f204:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f208:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f20c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801f210:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801f214:	fb14 2103 	smlabb	r1, r4, r3, r2
 801f218:	eb08 0401 	add.w	r4, r8, r1
 801f21c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f220:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f224:	440a      	add	r2, r1
 801f226:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f22a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f22e:	4413      	add	r3, r2
 801f230:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f234:	4b4a      	ldr	r3, [pc, #296]	; (801f360 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f236:	6818      	ldr	r0, [r3, #0]
 801f238:	6803      	ldr	r3, [r0, #0]
 801f23a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f23c:	4798      	blx	r3
 801f23e:	4b49      	ldr	r3, [pc, #292]	; (801f364 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801f240:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801f244:	881a      	ldrh	r2, [r3, #0]
 801f246:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801f24a:	2eff      	cmp	r6, #255	; 0xff
 801f24c:	fb02 c101 	mla	r1, r2, r1, ip
 801f250:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801f254:	fb02 f207 	mul.w	r2, r2, r7
 801f258:	f105 0104 	add.w	r1, r5, #4
 801f25c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801f260:	461d      	mov	r5, r3
 801f262:	d05a      	beq.n	801f31a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801f264:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801f268:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f26c:	b2b6      	uxth	r6, r6
 801f26e:	fa1f fe8e 	uxth.w	lr, lr
 801f272:	9301      	str	r3, [sp, #4]
 801f274:	4282      	cmp	r2, r0
 801f276:	d96a      	bls.n	801f34e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f278:	eb00 0b0a 	add.w	fp, r0, sl
 801f27c:	4583      	cmp	fp, r0
 801f27e:	d940      	bls.n	801f302 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801f280:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f284:	8805      	ldrh	r5, [r0, #0]
 801f286:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f28a:	122f      	asrs	r7, r5, #8
 801f28c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801f290:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f294:	fb17 f70e 	smulbb	r7, r7, lr
 801f298:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801f29c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f2a0:	00ed      	lsls	r5, r5, #3
 801f2a2:	fb0c 7c06 	mla	ip, ip, r6, r7
 801f2a6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801f2aa:	10df      	asrs	r7, r3, #3
 801f2ac:	b2ed      	uxtb	r5, r5
 801f2ae:	00db      	lsls	r3, r3, #3
 801f2b0:	fa1f fc8c 	uxth.w	ip, ip
 801f2b4:	fb19 f90e 	smulbb	r9, r9, lr
 801f2b8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f2bc:	b2db      	uxtb	r3, r3
 801f2be:	fb15 f50e 	smulbb	r5, r5, lr
 801f2c2:	fb07 9706 	mla	r7, r7, r6, r9
 801f2c6:	fb03 5306 	mla	r3, r3, r6, r5
 801f2ca:	f10c 0901 	add.w	r9, ip, #1
 801f2ce:	b29b      	uxth	r3, r3
 801f2d0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801f2d4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801f2d8:	f103 0c01 	add.w	ip, r3, #1
 801f2dc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f2e0:	b2bf      	uxth	r7, r7
 801f2e2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f2e6:	ea4c 0c09 	orr.w	ip, ip, r9
 801f2ea:	f107 0901 	add.w	r9, r7, #1
 801f2ee:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801f2f2:	097f      	lsrs	r7, r7, #5
 801f2f4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801f2f8:	ea4c 0c07 	orr.w	ip, ip, r7
 801f2fc:	f820 cb02 	strh.w	ip, [r0], #2
 801f300:	e7bc      	b.n	801f27c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801f302:	9b01      	ldr	r3, [sp, #4]
 801f304:	881b      	ldrh	r3, [r3, #0]
 801f306:	eba3 0308 	sub.w	r3, r3, r8
 801f30a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f30e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f312:	eba3 0308 	sub.w	r3, r3, r8
 801f316:	441c      	add	r4, r3
 801f318:	e7ac      	b.n	801f274 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801f31a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801f31e:	4282      	cmp	r2, r0
 801f320:	d915      	bls.n	801f34e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801f322:	eb00 060a 	add.w	r6, r0, sl
 801f326:	4286      	cmp	r6, r0
 801f328:	d906      	bls.n	801f338 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801f32a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801f32e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801f332:	f820 3b02 	strh.w	r3, [r0], #2
 801f336:	e7f6      	b.n	801f326 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801f338:	882b      	ldrh	r3, [r5, #0]
 801f33a:	eba3 0308 	sub.w	r3, r3, r8
 801f33e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f342:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801f346:	eba3 0308 	sub.w	r3, r3, r8
 801f34a:	441c      	add	r4, r3
 801f34c:	e7e7      	b.n	801f31e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801f34e:	4b04      	ldr	r3, [pc, #16]	; (801f360 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801f350:	6818      	ldr	r0, [r3, #0]
 801f352:	6803      	ldr	r3, [r0, #0]
 801f354:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f356:	4798      	blx	r3
 801f358:	b007      	add	sp, #28
 801f35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f35e:	bf00      	nop
 801f360:	20013834 	.word	0x20013834
 801f364:	2001382e 	.word	0x2001382e

0801f368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801f368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f36c:	b091      	sub	sp, #68	; 0x44
 801f36e:	4680      	mov	r8, r0
 801f370:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801f374:	460f      	mov	r7, r1
 801f376:	4614      	mov	r4, r2
 801f378:	2d00      	cmp	r5, #0
 801f37a:	d051      	beq.n	801f420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f37c:	6810      	ldr	r0, [r2, #0]
 801f37e:	6851      	ldr	r1, [r2, #4]
 801f380:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801f584 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801f384:	ae0c      	add	r6, sp, #48	; 0x30
 801f386:	c603      	stmia	r6!, {r0, r1}
 801f388:	6818      	ldr	r0, [r3, #0]
 801f38a:	6859      	ldr	r1, [r3, #4]
 801f38c:	ae0e      	add	r6, sp, #56	; 0x38
 801f38e:	c603      	stmia	r6!, {r0, r1}
 801f390:	a80c      	add	r0, sp, #48	; 0x30
 801f392:	f7f7 fae1 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f396:	4621      	mov	r1, r4
 801f398:	a80e      	add	r0, sp, #56	; 0x38
 801f39a:	f7f7 fb21 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f39e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801f3a2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f3a6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801f3aa:	f8d9 0000 	ldr.w	r0, [r9]
 801f3ae:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801f3b2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801f3b6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f3ba:	eb08 0401 	add.w	r4, r8, r1
 801f3be:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801f3c2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801f588 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801f3c6:	440a      	add	r2, r1
 801f3c8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801f3cc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801f3d0:	4413      	add	r3, r2
 801f3d2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801f3d6:	6803      	ldr	r3, [r0, #0]
 801f3d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f3da:	4798      	blx	r3
 801f3dc:	f010 0f80 	tst.w	r0, #128	; 0x80
 801f3e0:	f8d9 0000 	ldr.w	r0, [r9]
 801f3e4:	d01f      	beq.n	801f426 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801f3e6:	2200      	movs	r2, #0
 801f3e8:	6801      	ldr	r1, [r0, #0]
 801f3ea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801f3ee:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801f3f2:	220b      	movs	r2, #11
 801f3f4:	9207      	str	r2, [sp, #28]
 801f3f6:	f8b8 2000 	ldrh.w	r2, [r8]
 801f3fa:	9206      	str	r2, [sp, #24]
 801f3fc:	2201      	movs	r2, #1
 801f3fe:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801f402:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801f406:	9203      	str	r2, [sp, #12]
 801f408:	fa1f f28a 	uxth.w	r2, sl
 801f40c:	9202      	str	r2, [sp, #8]
 801f40e:	b2b6      	uxth	r6, r6
 801f410:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801f414:	9200      	str	r2, [sp, #0]
 801f416:	9601      	str	r6, [sp, #4]
 801f418:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801f41a:	463a      	mov	r2, r7
 801f41c:	4621      	mov	r1, r4
 801f41e:	47a8      	blx	r5
 801f420:	b011      	add	sp, #68	; 0x44
 801f422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f426:	6803      	ldr	r3, [r0, #0]
 801f428:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f42a:	4798      	blx	r3
 801f42c:	f8b8 2000 	ldrh.w	r2, [r8]
 801f430:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801f434:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801f438:	2dff      	cmp	r5, #255	; 0xff
 801f43a:	fb02 1303 	mla	r3, r2, r3, r1
 801f43e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f442:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801f446:	fb0a fa02 	mul.w	sl, sl, r2
 801f44a:	d062      	beq.n	801f512 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801f44c:	ea6f 0c05 	mvn.w	ip, r5
 801f450:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801f454:	930a      	str	r3, [sp, #40]	; 0x28
 801f456:	b2ad      	uxth	r5, r5
 801f458:	fa5f fc8c 	uxtb.w	ip, ip
 801f45c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801f460:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f462:	4298      	cmp	r0, r3
 801f464:	f080 8085 	bcs.w	801f572 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f468:	eb00 0b09 	add.w	fp, r0, r9
 801f46c:	4558      	cmp	r0, fp
 801f46e:	d246      	bcs.n	801f4fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801f470:	f814 eb01 	ldrb.w	lr, [r4], #1
 801f474:	2303      	movs	r3, #3
 801f476:	2204      	movs	r2, #4
 801f478:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801f47c:	eb07 0a0e 	add.w	sl, r7, lr
 801f480:	8803      	ldrh	r3, [r0, #0]
 801f482:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801f486:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f48a:	1219      	asrs	r1, r3, #8
 801f48c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801f490:	fb18 f805 	smulbb	r8, r8, r5
 801f494:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801f498:	10da      	asrs	r2, r3, #3
 801f49a:	fb01 810c 	mla	r1, r1, ip, r8
 801f49e:	00db      	lsls	r3, r3, #3
 801f4a0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f4a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801f4a8:	b2db      	uxtb	r3, r3
 801f4aa:	fb18 f805 	smulbb	r8, r8, r5
 801f4ae:	fb1e fe05 	smulbb	lr, lr, r5
 801f4b2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801f4b6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801f4ba:	b289      	uxth	r1, r1
 801f4bc:	fb02 820c 	mla	r2, r2, ip, r8
 801f4c0:	fb03 e30c 	mla	r3, r3, ip, lr
 801f4c4:	b292      	uxth	r2, r2
 801f4c6:	b29b      	uxth	r3, r3
 801f4c8:	f101 0801 	add.w	r8, r1, #1
 801f4cc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801f4d0:	f103 0e01 	add.w	lr, r3, #1
 801f4d4:	f102 0801 	add.w	r8, r2, #1
 801f4d8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801f4dc:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801f4e0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801f4e4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f4e8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801f4ec:	ea4e 0101 	orr.w	r1, lr, r1
 801f4f0:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801f4f4:	ea41 0108 	orr.w	r1, r1, r8
 801f4f8:	f820 1b02 	strh.w	r1, [r0], #2
 801f4fc:	e7b6      	b.n	801f46c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801f4fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f500:	881b      	ldrh	r3, [r3, #0]
 801f502:	1b9b      	subs	r3, r3, r6
 801f504:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f508:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f50c:	1b9b      	subs	r3, r3, r6
 801f50e:	441c      	add	r4, r3
 801f510:	e7a6      	b.n	801f460 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801f512:	491b      	ldr	r1, [pc, #108]	; (801f580 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801f514:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801f518:	2203      	movs	r2, #3
 801f51a:	2504      	movs	r5, #4
 801f51c:	4550      	cmp	r0, sl
 801f51e:	d228      	bcs.n	801f572 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f520:	eb00 0c09 	add.w	ip, r0, r9
 801f524:	4560      	cmp	r0, ip
 801f526:	4623      	mov	r3, r4
 801f528:	d219      	bcs.n	801f55e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801f52a:	f893 e000 	ldrb.w	lr, [r3]
 801f52e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801f532:	eb07 0b0e 	add.w	fp, r7, lr
 801f536:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f53a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801f53e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f542:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801f546:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801f54a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f54e:	ea43 030b 	orr.w	r3, r3, fp
 801f552:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801f556:	3401      	adds	r4, #1
 801f558:	f820 3b02 	strh.w	r3, [r0], #2
 801f55c:	e7e2      	b.n	801f524 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801f55e:	f8b8 3000 	ldrh.w	r3, [r8]
 801f562:	1b9b      	subs	r3, r3, r6
 801f564:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f568:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f56c:	1b9b      	subs	r3, r3, r6
 801f56e:	441c      	add	r4, r3
 801f570:	e7d4      	b.n	801f51c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801f572:	4b04      	ldr	r3, [pc, #16]	; (801f584 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801f574:	6818      	ldr	r0, [r3, #0]
 801f576:	6803      	ldr	r3, [r0, #0]
 801f578:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f57a:	4798      	blx	r3
 801f57c:	e750      	b.n	801f420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f57e:	bf00      	nop
 801f580:	fffff800 	.word	0xfffff800
 801f584:	20013834 	.word	0x20013834
 801f588:	2001382e 	.word	0x2001382e

0801f58c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801f58c:	b4f0      	push	{r4, r5, r6, r7}
 801f58e:	460c      	mov	r4, r1
 801f590:	4611      	mov	r1, r2
 801f592:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f596:	780f      	ldrb	r7, [r1, #0]
 801f598:	784e      	ldrb	r6, [r1, #1]
 801f59a:	2f01      	cmp	r7, #1
 801f59c:	461a      	mov	r2, r3
 801f59e:	9b04      	ldr	r3, [sp, #16]
 801f5a0:	d036      	beq.n	801f610 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801f5a2:	d31e      	bcc.n	801f5e2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801f5a4:	2f02      	cmp	r7, #2
 801f5a6:	d14a      	bne.n	801f63e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5a8:	2e03      	cmp	r6, #3
 801f5aa:	d848      	bhi.n	801f63e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5ac:	e8df f006 	tbb	[pc, r6]
 801f5b0:	16140702 	.word	0x16140702
 801f5b4:	9504      	str	r5, [sp, #16]
 801f5b6:	4620      	mov	r0, r4
 801f5b8:	bcf0      	pop	{r4, r5, r6, r7}
 801f5ba:	f7ff be09 	b.w	801f1d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801f5be:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f5c0:	2800      	cmp	r0, #0
 801f5c2:	d03c      	beq.n	801f63e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5c4:	6806      	ldr	r6, [r0, #0]
 801f5c6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f5ca:	68b5      	ldr	r5, [r6, #8]
 801f5cc:	4613      	mov	r3, r2
 801f5ce:	46ac      	mov	ip, r5
 801f5d0:	460a      	mov	r2, r1
 801f5d2:	4621      	mov	r1, r4
 801f5d4:	bcf0      	pop	{r4, r5, r6, r7}
 801f5d6:	4760      	bx	ip
 801f5d8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f5da:	e7f1      	b.n	801f5c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f5dc:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f5e0:	e7ee      	b.n	801f5c0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f5e2:	2e03      	cmp	r6, #3
 801f5e4:	d82b      	bhi.n	801f63e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5e6:	e8df f006 	tbb	[pc, r6]
 801f5ea:	0702      	.short	0x0702
 801f5ec:	100e      	.short	0x100e
 801f5ee:	9504      	str	r5, [sp, #16]
 801f5f0:	4620      	mov	r0, r4
 801f5f2:	bcf0      	pop	{r4, r5, r6, r7}
 801f5f4:	f7ff bd06 	b.w	801f004 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801f5f8:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f5fa:	b300      	cbz	r0, 801f63e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f5fc:	6806      	ldr	r6, [r0, #0]
 801f5fe:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f602:	68f5      	ldr	r5, [r6, #12]
 801f604:	e7e2      	b.n	801f5cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f606:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f608:	e7f7      	b.n	801f5fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f60a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f60e:	e7f4      	b.n	801f5fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f610:	2e03      	cmp	r6, #3
 801f612:	d814      	bhi.n	801f63e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f614:	e8df f006 	tbb	[pc, r6]
 801f618:	100e0702 	.word	0x100e0702
 801f61c:	9504      	str	r5, [sp, #16]
 801f61e:	4620      	mov	r0, r4
 801f620:	bcf0      	pop	{r4, r5, r6, r7}
 801f622:	f7ff bea1 	b.w	801f368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801f626:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f628:	b148      	cbz	r0, 801f63e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f62a:	6806      	ldr	r6, [r0, #0]
 801f62c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f630:	6935      	ldr	r5, [r6, #16]
 801f632:	e7cb      	b.n	801f5cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f634:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f636:	e7f7      	b.n	801f628 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f638:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f63c:	e7f4      	b.n	801f628 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f63e:	bcf0      	pop	{r4, r5, r6, r7}
 801f640:	4770      	bx	lr
	...

0801f644 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801f644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f648:	4604      	mov	r4, r0
 801f64a:	b087      	sub	sp, #28
 801f64c:	6810      	ldr	r0, [r2, #0]
 801f64e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801f652:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801f88c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801f656:	460e      	mov	r6, r1
 801f658:	6851      	ldr	r1, [r2, #4]
 801f65a:	ad02      	add	r5, sp, #8
 801f65c:	c503      	stmia	r5!, {r0, r1}
 801f65e:	6818      	ldr	r0, [r3, #0]
 801f660:	6859      	ldr	r1, [r3, #4]
 801f662:	ad04      	add	r5, sp, #16
 801f664:	4617      	mov	r7, r2
 801f666:	c503      	stmia	r5!, {r0, r1}
 801f668:	a802      	add	r0, sp, #8
 801f66a:	f7f7 f975 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f66e:	4639      	mov	r1, r7
 801f670:	a804      	add	r0, sp, #16
 801f672:	f7f7 f9b5 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f676:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f67a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f67e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801f682:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f686:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801f68a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f68e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801f692:	440e      	add	r6, r1
 801f694:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f698:	440a      	add	r2, r1
 801f69a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f69e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f6a2:	4413      	add	r3, r2
 801f6a4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f6a8:	4b77      	ldr	r3, [pc, #476]	; (801f888 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f6aa:	6818      	ldr	r0, [r3, #0]
 801f6ac:	6803      	ldr	r3, [r0, #0]
 801f6ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f6b0:	4798      	blx	r3
 801f6b2:	f8b9 b000 	ldrh.w	fp, [r9]
 801f6b6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f6ba:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f6be:	fb0b 2303 	mla	r3, fp, r3, r2
 801f6c2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f6c6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f6ca:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f6ce:	fb05 f50b 	mul.w	r5, r5, fp
 801f6d2:	9300      	str	r3, [sp, #0]
 801f6d4:	d069      	beq.n	801f7aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801f6d6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801f6da:	4558      	cmp	r0, fp
 801f6dc:	f080 80cc 	bcs.w	801f878 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f6e0:	9b00      	ldr	r3, [sp, #0]
 801f6e2:	18c3      	adds	r3, r0, r3
 801f6e4:	9301      	str	r3, [sp, #4]
 801f6e6:	4631      	mov	r1, r6
 801f6e8:	9b01      	ldr	r3, [sp, #4]
 801f6ea:	4298      	cmp	r0, r3
 801f6ec:	d24f      	bcs.n	801f78e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801f6ee:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f6f2:	2a00      	cmp	r2, #0
 801f6f4:	d048      	beq.n	801f788 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f6f6:	fb0a f202 	mul.w	r2, sl, r2
 801f6fa:	1c53      	adds	r3, r2, #1
 801f6fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f700:	121b      	asrs	r3, r3, #8
 801f702:	d041      	beq.n	801f788 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f704:	8802      	ldrh	r2, [r0, #0]
 801f706:	f8b4 c000 	ldrh.w	ip, [r4]
 801f70a:	b29e      	uxth	r6, r3
 801f70c:	1215      	asrs	r5, r2, #8
 801f70e:	43db      	mvns	r3, r3
 801f710:	b2db      	uxtb	r3, r3
 801f712:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f716:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f71a:	fb15 f503 	smulbb	r5, r5, r3
 801f71e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f722:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f726:	00d2      	lsls	r2, r2, #3
 801f728:	fb07 5706 	mla	r7, r7, r6, r5
 801f72c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f730:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f734:	b2d2      	uxtb	r2, r2
 801f736:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f73a:	b2bf      	uxth	r7, r7
 801f73c:	fb1e fe03 	smulbb	lr, lr, r3
 801f740:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f744:	fa5f fc8c 	uxtb.w	ip, ip
 801f748:	fb12 f203 	smulbb	r2, r2, r3
 801f74c:	fb05 e506 	mla	r5, r5, r6, lr
 801f750:	fb0c 2c06 	mla	ip, ip, r6, r2
 801f754:	f107 0e01 	add.w	lr, r7, #1
 801f758:	fa1f fc8c 	uxth.w	ip, ip
 801f75c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801f760:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801f764:	f10c 0701 	add.w	r7, ip, #1
 801f768:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f76c:	b2ad      	uxth	r5, r5
 801f76e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f772:	ea47 070e 	orr.w	r7, r7, lr
 801f776:	f105 0e01 	add.w	lr, r5, #1
 801f77a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f77e:	096d      	lsrs	r5, r5, #5
 801f780:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f784:	432f      	orrs	r7, r5
 801f786:	8007      	strh	r7, [r0, #0]
 801f788:	3002      	adds	r0, #2
 801f78a:	3402      	adds	r4, #2
 801f78c:	e7ac      	b.n	801f6e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801f78e:	f8b9 3000 	ldrh.w	r3, [r9]
 801f792:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f796:	eba3 0308 	sub.w	r3, r3, r8
 801f79a:	eba6 0608 	sub.w	r6, r6, r8
 801f79e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f7a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f7a6:	440e      	add	r6, r1
 801f7a8:	e797      	b.n	801f6da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801f7aa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801f7ae:	42a8      	cmp	r0, r5
 801f7b0:	d262      	bcs.n	801f878 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f7b2:	9b00      	ldr	r3, [sp, #0]
 801f7b4:	4631      	mov	r1, r6
 801f7b6:	eb00 0b03 	add.w	fp, r0, r3
 801f7ba:	4558      	cmp	r0, fp
 801f7bc:	d24e      	bcs.n	801f85c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801f7be:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f7c2:	b12b      	cbz	r3, 801f7d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f7c4:	2bff      	cmp	r3, #255	; 0xff
 801f7c6:	f8b4 e000 	ldrh.w	lr, [r4]
 801f7ca:	d104      	bne.n	801f7d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801f7cc:	f8a0 e000 	strh.w	lr, [r0]
 801f7d0:	3002      	adds	r0, #2
 801f7d2:	3402      	adds	r4, #2
 801f7d4:	e7f1      	b.n	801f7ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801f7d6:	8802      	ldrh	r2, [r0, #0]
 801f7d8:	b29f      	uxth	r7, r3
 801f7da:	1216      	asrs	r6, r2, #8
 801f7dc:	43db      	mvns	r3, r3
 801f7de:	b2db      	uxtb	r3, r3
 801f7e0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801f7e4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f7e8:	fb16 f603 	smulbb	r6, r6, r3
 801f7ec:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801f7f0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f7f4:	00d2      	lsls	r2, r2, #3
 801f7f6:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f7fa:	b2d2      	uxtb	r2, r2
 801f7fc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f800:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801f804:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f808:	fb1a fa03 	smulbb	sl, sl, r3
 801f80c:	fa1f fc8c 	uxth.w	ip, ip
 801f810:	fb12 f303 	smulbb	r3, r2, r3
 801f814:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f818:	fa5f fe8e 	uxtb.w	lr, lr
 801f81c:	fb06 a607 	mla	r6, r6, r7, sl
 801f820:	f10c 0201 	add.w	r2, ip, #1
 801f824:	fb0e 3307 	mla	r3, lr, r7, r3
 801f828:	b2b6      	uxth	r6, r6
 801f82a:	b29b      	uxth	r3, r3
 801f82c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801f830:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801f834:	f106 0a01 	add.w	sl, r6, #1
 801f838:	f103 0c01 	add.w	ip, r3, #1
 801f83c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f840:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f844:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f848:	0976      	lsrs	r6, r6, #5
 801f84a:	ea4c 0c02 	orr.w	ip, ip, r2
 801f84e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f852:	ea4c 0c06 	orr.w	ip, ip, r6
 801f856:	f8a0 c000 	strh.w	ip, [r0]
 801f85a:	e7b9      	b.n	801f7d0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f85c:	f8b9 3000 	ldrh.w	r3, [r9]
 801f860:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f864:	eba3 0308 	sub.w	r3, r3, r8
 801f868:	eba6 0608 	sub.w	r6, r6, r8
 801f86c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f870:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f874:	440e      	add	r6, r1
 801f876:	e79a      	b.n	801f7ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801f878:	4b03      	ldr	r3, [pc, #12]	; (801f888 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f87a:	6818      	ldr	r0, [r3, #0]
 801f87c:	6803      	ldr	r3, [r0, #0]
 801f87e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f880:	4798      	blx	r3
 801f882:	b007      	add	sp, #28
 801f884:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f888:	20013834 	.word	0x20013834
 801f88c:	2001382e 	.word	0x2001382e

0801f890 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801f890:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f894:	b089      	sub	sp, #36	; 0x24
 801f896:	4682      	mov	sl, r0
 801f898:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801f89c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f89e:	460f      	mov	r7, r1
 801f8a0:	4691      	mov	r9, r2
 801f8a2:	4698      	mov	r8, r3
 801f8a4:	2e00      	cmp	r6, #0
 801f8a6:	d03d      	beq.n	801f924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f8a8:	4608      	mov	r0, r1
 801f8aa:	f7fa fe59 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f8ae:	4605      	mov	r5, r0
 801f8b0:	4638      	mov	r0, r7
 801f8b2:	f7fa fe89 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f8b6:	f8ad 000e 	strh.w	r0, [sp, #14]
 801f8ba:	4638      	mov	r0, r7
 801f8bc:	f8ad 9008 	strh.w	r9, [sp, #8]
 801f8c0:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f8c4:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f8c8:	f7fa ff36 	bl	801a738 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f8cc:	4605      	mov	r5, r0
 801f8ce:	4638      	mov	r0, r7
 801f8d0:	f7fa ff62 	bl	801a798 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801f8d4:	4681      	mov	r9, r0
 801f8d6:	4638      	mov	r0, r7
 801f8d8:	f7fa ffb2 	bl	801a840 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f8dc:	280b      	cmp	r0, #11
 801f8de:	d821      	bhi.n	801f924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f8e0:	e8df f000 	tbb	[pc, r0]
 801f8e4:	2006aebe 	.word	0x2006aebe
 801f8e8:	20202020 	.word	0x20202020
 801f8ec:	b5202020 	.word	0xb5202020
 801f8f0:	4bb0      	ldr	r3, [pc, #704]	; (801fbb4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801f8f2:	6818      	ldr	r0, [r3, #0]
 801f8f4:	6803      	ldr	r3, [r0, #0]
 801f8f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f8f8:	4798      	blx	r3
 801f8fa:	2eff      	cmp	r6, #255	; 0xff
 801f8fc:	d101      	bne.n	801f902 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f8fe:	0683      	lsls	r3, r0, #26
 801f900:	d506      	bpl.n	801f910 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801f902:	4633      	mov	r3, r6
 801f904:	4622      	mov	r2, r4
 801f906:	a902      	add	r1, sp, #8
 801f908:	4628      	mov	r0, r5
 801f90a:	f7ff f909 	bl	801eb20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f90e:	e009      	b.n	801f924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f910:	4638      	mov	r0, r7
 801f912:	f7fa fed9 	bl	801a6c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f916:	b940      	cbnz	r0, 801f92a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801f918:	4623      	mov	r3, r4
 801f91a:	aa02      	add	r2, sp, #8
 801f91c:	4629      	mov	r1, r5
 801f91e:	4650      	mov	r0, sl
 801f920:	f7ff f9e4 	bl	801ecec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f924:	b009      	add	sp, #36	; 0x24
 801f926:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f92a:	f10d 0818 	add.w	r8, sp, #24
 801f92e:	4639      	mov	r1, r7
 801f930:	4640      	mov	r0, r8
 801f932:	f7fa fe7d 	bl	801a630 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f936:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f93a:	af04      	add	r7, sp, #16
 801f93c:	e887 0003 	stmia.w	r7, {r0, r1}
 801f940:	4638      	mov	r0, r7
 801f942:	4621      	mov	r1, r4
 801f944:	f7f1 fa6a 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 801f948:	4638      	mov	r0, r7
 801f94a:	f7f1 faaa 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f94e:	2800      	cmp	r0, #0
 801f950:	d1d7      	bne.n	801f902 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f952:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f956:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f95a:	4293      	cmp	r3, r2
 801f95c:	dd12      	ble.n	801f984 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801f95e:	1a9b      	subs	r3, r3, r2
 801f960:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f964:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f968:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f96c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f970:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f974:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f978:	4642      	mov	r2, r8
 801f97a:	4633      	mov	r3, r6
 801f97c:	a902      	add	r1, sp, #8
 801f97e:	4628      	mov	r0, r5
 801f980:	f7ff f8ce 	bl	801eb20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f984:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f988:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f98c:	4293      	cmp	r3, r2
 801f98e:	dd12      	ble.n	801f9b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801f990:	1a9b      	subs	r3, r3, r2
 801f992:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f996:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f99a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f99e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f9a2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f9a6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f9aa:	23ff      	movs	r3, #255	; 0xff
 801f9ac:	4642      	mov	r2, r8
 801f9ae:	a902      	add	r1, sp, #8
 801f9b0:	4628      	mov	r0, r5
 801f9b2:	f7ff f8b5 	bl	801eb20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f9b6:	463b      	mov	r3, r7
 801f9b8:	aa02      	add	r2, sp, #8
 801f9ba:	4629      	mov	r1, r5
 801f9bc:	4650      	mov	r0, sl
 801f9be:	f7ff f995 	bl	801ecec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f9c2:	88a2      	ldrh	r2, [r4, #4]
 801f9c4:	8823      	ldrh	r3, [r4, #0]
 801f9c6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f9ca:	4413      	add	r3, r2
 801f9cc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f9d0:	440a      	add	r2, r1
 801f9d2:	b29b      	uxth	r3, r3
 801f9d4:	b292      	uxth	r2, r2
 801f9d6:	b211      	sxth	r1, r2
 801f9d8:	b218      	sxth	r0, r3
 801f9da:	4288      	cmp	r0, r1
 801f9dc:	dd12      	ble.n	801fa04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801f9de:	1a9b      	subs	r3, r3, r2
 801f9e0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f9e4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801f9e8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f9ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f9f0:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f9f4:	23ff      	movs	r3, #255	; 0xff
 801f9f6:	4642      	mov	r2, r8
 801f9f8:	a902      	add	r1, sp, #8
 801f9fa:	4628      	mov	r0, r5
 801f9fc:	f8ad 601a 	strh.w	r6, [sp, #26]
 801fa00:	f7ff f88e 	bl	801eb20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801fa04:	88e2      	ldrh	r2, [r4, #6]
 801fa06:	8863      	ldrh	r3, [r4, #2]
 801fa08:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fa0c:	4413      	add	r3, r2
 801fa0e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fa12:	440a      	add	r2, r1
 801fa14:	b29b      	uxth	r3, r3
 801fa16:	b292      	uxth	r2, r2
 801fa18:	b211      	sxth	r1, r2
 801fa1a:	b218      	sxth	r0, r3
 801fa1c:	4288      	cmp	r0, r1
 801fa1e:	dd81      	ble.n	801f924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa20:	1a9b      	subs	r3, r3, r2
 801fa22:	f9b4 6000 	ldrsh.w	r6, [r4]
 801fa26:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fa2a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fa2e:	f8ad 6018 	strh.w	r6, [sp, #24]
 801fa32:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fa36:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fa3a:	23ff      	movs	r3, #255	; 0xff
 801fa3c:	4642      	mov	r2, r8
 801fa3e:	e762      	b.n	801f906 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801fa40:	4633      	mov	r3, r6
 801fa42:	4622      	mov	r2, r4
 801fa44:	a902      	add	r1, sp, #8
 801fa46:	4628      	mov	r0, r5
 801fa48:	f7ff f9c0 	bl	801edcc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801fa4c:	e76a      	b.n	801f924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa4e:	e9cd 4600 	strd	r4, r6, [sp]
 801fa52:	ab02      	add	r3, sp, #8
 801fa54:	464a      	mov	r2, r9
 801fa56:	4629      	mov	r1, r5
 801fa58:	4650      	mov	r0, sl
 801fa5a:	f7ff fd97 	bl	801f58c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801fa5e:	e761      	b.n	801f924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa60:	4638      	mov	r0, r7
 801fa62:	f7fa fe31 	bl	801a6c8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801fa66:	b950      	cbnz	r0, 801fa7e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801fa68:	e9cd 6000 	strd	r6, r0, [sp]
 801fa6c:	f8da 3000 	ldr.w	r3, [sl]
 801fa70:	aa02      	add	r2, sp, #8
 801fa72:	68de      	ldr	r6, [r3, #12]
 801fa74:	4629      	mov	r1, r5
 801fa76:	4623      	mov	r3, r4
 801fa78:	4650      	mov	r0, sl
 801fa7a:	47b0      	blx	r6
 801fa7c:	e752      	b.n	801f924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fa7e:	f10d 0818 	add.w	r8, sp, #24
 801fa82:	4639      	mov	r1, r7
 801fa84:	4640      	mov	r0, r8
 801fa86:	f7fa fdd3 	bl	801a630 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801fa8a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801fa8e:	af04      	add	r7, sp, #16
 801fa90:	e887 0003 	stmia.w	r7, {r0, r1}
 801fa94:	4638      	mov	r0, r7
 801fa96:	4621      	mov	r1, r4
 801fa98:	f7f1 f9c0 	bl	8010e1c <_ZN8touchgfx4RectaNERKS0_>
 801fa9c:	4638      	mov	r0, r7
 801fa9e:	f7f1 fa00 	bl	8010ea2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801faa2:	b138      	cbz	r0, 801fab4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801faa4:	9600      	str	r6, [sp, #0]
 801faa6:	4623      	mov	r3, r4
 801faa8:	aa02      	add	r2, sp, #8
 801faaa:	4649      	mov	r1, r9
 801faac:	4628      	mov	r0, r5
 801faae:	f7ff fdc9 	bl	801f644 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fab2:	e737      	b.n	801f924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fab4:	e9cd 6000 	strd	r6, r0, [sp]
 801fab8:	f8da 3000 	ldr.w	r3, [sl]
 801fabc:	aa02      	add	r2, sp, #8
 801fabe:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801fac2:	4629      	mov	r1, r5
 801fac4:	463b      	mov	r3, r7
 801fac6:	4650      	mov	r0, sl
 801fac8:	47d8      	blx	fp
 801faca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801face:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fad2:	4293      	cmp	r3, r2
 801fad4:	dd13      	ble.n	801fafe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801fad6:	f9b4 0000 	ldrsh.w	r0, [r4]
 801fada:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801fade:	f8ad 0018 	strh.w	r0, [sp, #24]
 801fae2:	1a9b      	subs	r3, r3, r2
 801fae4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801fae8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801faec:	f8ad 301e 	strh.w	r3, [sp, #30]
 801faf0:	9600      	str	r6, [sp, #0]
 801faf2:	4643      	mov	r3, r8
 801faf4:	aa02      	add	r2, sp, #8
 801faf6:	4649      	mov	r1, r9
 801faf8:	4628      	mov	r0, r5
 801fafa:	f7ff fda3 	bl	801f644 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fafe:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801fb02:	f9b4 2000 	ldrsh.w	r2, [r4]
 801fb06:	4293      	cmp	r3, r2
 801fb08:	dd13      	ble.n	801fb32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801fb0a:	1a9b      	subs	r3, r3, r2
 801fb0c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801fb10:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801fb14:	f8ad 2018 	strh.w	r2, [sp, #24]
 801fb18:	f8ad 001a 	strh.w	r0, [sp, #26]
 801fb1c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fb20:	f8ad 101e 	strh.w	r1, [sp, #30]
 801fb24:	9600      	str	r6, [sp, #0]
 801fb26:	4643      	mov	r3, r8
 801fb28:	aa02      	add	r2, sp, #8
 801fb2a:	4649      	mov	r1, r9
 801fb2c:	4628      	mov	r0, r5
 801fb2e:	f7ff fd89 	bl	801f644 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fb32:	88a2      	ldrh	r2, [r4, #4]
 801fb34:	8823      	ldrh	r3, [r4, #0]
 801fb36:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801fb3a:	4413      	add	r3, r2
 801fb3c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801fb40:	440a      	add	r2, r1
 801fb42:	b29b      	uxth	r3, r3
 801fb44:	b292      	uxth	r2, r2
 801fb46:	b211      	sxth	r1, r2
 801fb48:	b218      	sxth	r0, r3
 801fb4a:	4288      	cmp	r0, r1
 801fb4c:	dd13      	ble.n	801fb76 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801fb4e:	1a9b      	subs	r3, r3, r2
 801fb50:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801fb54:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801fb58:	f8ad 1018 	strh.w	r1, [sp, #24]
 801fb5c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fb60:	f8ad 001e 	strh.w	r0, [sp, #30]
 801fb64:	9600      	str	r6, [sp, #0]
 801fb66:	4643      	mov	r3, r8
 801fb68:	aa02      	add	r2, sp, #8
 801fb6a:	4649      	mov	r1, r9
 801fb6c:	4628      	mov	r0, r5
 801fb6e:	f8ad 701a 	strh.w	r7, [sp, #26]
 801fb72:	f7ff fd67 	bl	801f644 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801fb76:	88e2      	ldrh	r2, [r4, #6]
 801fb78:	8863      	ldrh	r3, [r4, #2]
 801fb7a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801fb7e:	4413      	add	r3, r2
 801fb80:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801fb84:	440a      	add	r2, r1
 801fb86:	b29b      	uxth	r3, r3
 801fb88:	b292      	uxth	r2, r2
 801fb8a:	b211      	sxth	r1, r2
 801fb8c:	b218      	sxth	r0, r3
 801fb8e:	4288      	cmp	r0, r1
 801fb90:	f77f aec8 	ble.w	801f924 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801fb94:	f9b4 7000 	ldrsh.w	r7, [r4]
 801fb98:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fb9c:	f8ad 7018 	strh.w	r7, [sp, #24]
 801fba0:	1a9b      	subs	r3, r3, r2
 801fba2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801fba6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801fbaa:	f8ad 001c 	strh.w	r0, [sp, #28]
 801fbae:	9600      	str	r6, [sp, #0]
 801fbb0:	4643      	mov	r3, r8
 801fbb2:	e779      	b.n	801faa8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801fbb4:	20013834 	.word	0x20013834

0801fbb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801fbb8:	b180      	cbz	r0, 801fbdc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801fbba:	2903      	cmp	r1, #3
 801fbbc:	d81c      	bhi.n	801fbf8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fbbe:	e8df f001 	tbb	[pc, r1]
 801fbc2:	1d02      	.short	0x1d02
 801fbc4:	1f08      	.short	0x1f08
 801fbc6:	4b10      	ldr	r3, [pc, #64]	; (801fc08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fbc8:	8818      	ldrh	r0, [r3, #0]
 801fbca:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fbce:	4240      	negs	r0, r0
 801fbd0:	4770      	bx	lr
 801fbd2:	4b0d      	ldr	r3, [pc, #52]	; (801fc08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801fbd4:	8818      	ldrh	r0, [r3, #0]
 801fbd6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fbda:	4770      	bx	lr
 801fbdc:	2903      	cmp	r1, #3
 801fbde:	d80b      	bhi.n	801fbf8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801fbe0:	a301      	add	r3, pc, #4	; (adr r3, 801fbe8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801fbe2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801fbe6:	bf00      	nop
 801fbe8:	0801fbfd 	.word	0x0801fbfd
 801fbec:	0801fbd3 	.word	0x0801fbd3
 801fbf0:	0801fc01 	.word	0x0801fc01
 801fbf4:	0801fbc7 	.word	0x0801fbc7
 801fbf8:	2000      	movs	r0, #0
 801fbfa:	4770      	bx	lr
 801fbfc:	2001      	movs	r0, #1
 801fbfe:	4770      	bx	lr
 801fc00:	f04f 30ff 	mov.w	r0, #4294967295
 801fc04:	4770      	bx	lr
 801fc06:	bf00      	nop
 801fc08:	2001382e 	.word	0x2001382e

0801fc0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801fc0c:	b180      	cbz	r0, 801fc30 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801fc0e:	2903      	cmp	r1, #3
 801fc10:	d81c      	bhi.n	801fc4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801fc12:	e8df f001 	tbb	[pc, r1]
 801fc16:	021d      	.short	0x021d
 801fc18:	071f      	.short	0x071f
 801fc1a:	4b10      	ldr	r3, [pc, #64]	; (801fc5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801fc1c:	8818      	ldrh	r0, [r3, #0]
 801fc1e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fc22:	4770      	bx	lr
 801fc24:	4b0d      	ldr	r3, [pc, #52]	; (801fc5c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801fc26:	8818      	ldrh	r0, [r3, #0]
 801fc28:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801fc2c:	4240      	negs	r0, r0
 801fc2e:	4770      	bx	lr
 801fc30:	2903      	cmp	r1, #3
 801fc32:	d80b      	bhi.n	801fc4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801fc34:	a301      	add	r3, pc, #4	; (adr r3, 801fc3c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801fc36:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801fc3a:	bf00      	nop
 801fc3c:	0801fc1b 	.word	0x0801fc1b
 801fc40:	0801fc55 	.word	0x0801fc55
 801fc44:	0801fc25 	.word	0x0801fc25
 801fc48:	0801fc51 	.word	0x0801fc51
 801fc4c:	2000      	movs	r0, #0
 801fc4e:	4770      	bx	lr
 801fc50:	2001      	movs	r0, #1
 801fc52:	4770      	bx	lr
 801fc54:	f04f 30ff 	mov.w	r0, #4294967295
 801fc58:	4770      	bx	lr
 801fc5a:	bf00      	nop
 801fc5c:	2001382e 	.word	0x2001382e

0801fc60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801fc60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fc64:	b099      	sub	sp, #100	; 0x64
 801fc66:	910b      	str	r1, [sp, #44]	; 0x2c
 801fc68:	a914      	add	r1, sp, #80	; 0x50
 801fc6a:	e881 000c 	stmia.w	r1, {r2, r3}
 801fc6e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801fc72:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801fc76:	f891 900d 	ldrb.w	r9, [r1, #13]
 801fc7a:	9309      	str	r3, [sp, #36]	; 0x24
 801fc7c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801fc80:	9310      	str	r3, [sp, #64]	; 0x40
 801fc82:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801fc86:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801fc8a:	930c      	str	r3, [sp, #48]	; 0x30
 801fc8c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801fc90:	798f      	ldrb	r7, [r1, #6]
 801fc92:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801fc96:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801fc9a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801fc9e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801fca2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801fca6:	431f      	orrs	r7, r3
 801fca8:	f000 8195 	beq.w	801ffd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fcac:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801fcb0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801fcb4:	f891 9007 	ldrb.w	r9, [r1, #7]
 801fcb8:	ea59 0903 	orrs.w	r9, r9, r3
 801fcbc:	f000 818b 	beq.w	801ffd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fcc0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801fcc4:	b29b      	uxth	r3, r3
 801fcc6:	2d00      	cmp	r5, #0
 801fcc8:	f000 812e 	beq.w	801ff28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801fccc:	1aed      	subs	r5, r5, r3
 801fcce:	b2ad      	uxth	r5, r5
 801fcd0:	042b      	lsls	r3, r5, #16
 801fcd2:	d502      	bpl.n	801fcda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801fcd4:	1b64      	subs	r4, r4, r5
 801fcd6:	b224      	sxth	r4, r4
 801fcd8:	2500      	movs	r5, #0
 801fcda:	f9b2 1000 	ldrsh.w	r1, [r2]
 801fcde:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801fce2:	428c      	cmp	r4, r1
 801fce4:	b28b      	uxth	r3, r1
 801fce6:	bfbf      	itttt	lt
 801fce8:	18ed      	addlt	r5, r5, r3
 801fcea:	1b2c      	sublt	r4, r5, r4
 801fcec:	b2a5      	uxthlt	r5, r4
 801fcee:	460c      	movlt	r4, r1
 801fcf0:	8891      	ldrh	r1, [r2, #4]
 801fcf2:	440b      	add	r3, r1
 801fcf4:	b21b      	sxth	r3, r3
 801fcf6:	930f      	str	r3, [sp, #60]	; 0x3c
 801fcf8:	88d3      	ldrh	r3, [r2, #6]
 801fcfa:	8852      	ldrh	r2, [r2, #2]
 801fcfc:	4413      	add	r3, r2
 801fcfe:	b21b      	sxth	r3, r3
 801fd00:	930d      	str	r3, [sp, #52]	; 0x34
 801fd02:	4bbe      	ldr	r3, [pc, #760]	; (801fffc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801fd04:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fd06:	f893 b000 	ldrb.w	fp, [r3]
 801fd0a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801fd0e:	f1dc 0300 	rsbs	r3, ip, #0
 801fd12:	eb43 030c 	adc.w	r3, r3, ip
 801fd16:	930e      	str	r3, [sp, #56]	; 0x38
 801fd18:	4621      	mov	r1, r4
 801fd1a:	4653      	mov	r3, sl
 801fd1c:	a814      	add	r0, sp, #80	; 0x50
 801fd1e:	f7f6 fc90 	bl	8016642 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801fd22:	4621      	mov	r1, r4
 801fd24:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801fd28:	4653      	mov	r3, sl
 801fd2a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801fd2c:	a814      	add	r0, sp, #80	; 0x50
 801fd2e:	f7f6 fca5 	bl	801667c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801fd32:	a918      	add	r1, sp, #96	; 0x60
 801fd34:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801fd38:	a817      	add	r0, sp, #92	; 0x5c
 801fd3a:	f7f6 fdcb 	bl	80168d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801fd3e:	f1ba 0f00 	cmp.w	sl, #0
 801fd42:	f040 80f4 	bne.w	801ff2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801fd46:	f1bb 0f01 	cmp.w	fp, #1
 801fd4a:	f040 80f8 	bne.w	801ff3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801fd4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fd50:	2b00      	cmp	r3, #0
 801fd52:	f040 8145 	bne.w	801ffe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801fd56:	b2ba      	uxth	r2, r7
 801fd58:	b905      	cbnz	r5, 801fd5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801fd5a:	b16e      	cbz	r6, 801fd78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801fd5c:	fb06 5302 	mla	r3, r6, r2, r5
 801fd60:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801fd62:	fb08 f303 	mul.w	r3, r8, r3
 801fd66:	4631      	mov	r1, r6
 801fd68:	f003 0607 	and.w	r6, r3, #7
 801fd6c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801fd70:	9328      	str	r3, [sp, #160]	; 0xa0
 801fd72:	eba9 0301 	sub.w	r3, r9, r1
 801fd76:	930a      	str	r3, [sp, #40]	; 0x28
 801fd78:	4651      	mov	r1, sl
 801fd7a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801fd7c:	f7ff ff1c 	bl	801fbb8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801fd80:	4681      	mov	r9, r0
 801fd82:	980e      	ldr	r0, [sp, #56]	; 0x38
 801fd84:	f7ff ff42 	bl	801fc0c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801fd88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fd8a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fd8c:	eba3 0a01 	sub.w	sl, r3, r1
 801fd90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fd92:	459a      	cmp	sl, r3
 801fd94:	bfa8      	it	ge
 801fd96:	469a      	movge	sl, r3
 801fd98:	f1ba 0f00 	cmp.w	sl, #0
 801fd9c:	4683      	mov	fp, r0
 801fd9e:	f340 811a 	ble.w	801ffd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fda2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fda4:	1b64      	subs	r4, r4, r5
 801fda6:	1b1c      	subs	r4, r3, r4
 801fda8:	42bc      	cmp	r4, r7
 801fdaa:	bfd4      	ite	le
 801fdac:	ebc5 0504 	rsble	r5, r5, r4
 801fdb0:	ebc5 0507 	rsbgt	r5, r5, r7
 801fdb4:	2d00      	cmp	r5, #0
 801fdb6:	f340 810e 	ble.w	801ffd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fdba:	1b52      	subs	r2, r2, r5
 801fdbc:	fb08 f302 	mul.w	r3, r8, r2
 801fdc0:	930f      	str	r3, [sp, #60]	; 0x3c
 801fdc2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fdc4:	2b00      	cmp	r3, #0
 801fdc6:	f040 8116 	bne.w	801fff6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801fdca:	4b8d      	ldr	r3, [pc, #564]	; (8020000 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801fdcc:	6818      	ldr	r0, [r3, #0]
 801fdce:	6803      	ldr	r3, [r0, #0]
 801fdd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fdd2:	4798      	blx	r3
 801fdd4:	2301      	movs	r3, #1
 801fdd6:	fa03 f308 	lsl.w	r3, r3, r8
 801fdda:	4a8a      	ldr	r2, [pc, #552]	; (8020004 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801fddc:	3b01      	subs	r3, #1
 801fdde:	b2db      	uxtb	r3, r3
 801fde0:	8811      	ldrh	r1, [r2, #0]
 801fde2:	930e      	str	r3, [sp, #56]	; 0x38
 801fde4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801fde8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801fdec:	fb01 2303 	mla	r3, r1, r3, r2
 801fdf0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801fdf4:	930a      	str	r3, [sp, #40]	; 0x28
 801fdf6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fdf8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801fdfc:	9313      	str	r3, [sp, #76]	; 0x4c
 801fdfe:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fe00:	0a19      	lsrs	r1, r3, #8
 801fe02:	b2cb      	uxtb	r3, r1
 801fe04:	9312      	str	r3, [sp, #72]	; 0x48
 801fe06:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fe08:	b2db      	uxtb	r3, r3
 801fe0a:	9311      	str	r3, [sp, #68]	; 0x44
 801fe0c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801fe0e:	095a      	lsrs	r2, r3, #5
 801fe10:	4b7d      	ldr	r3, [pc, #500]	; (8020008 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801fe12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe16:	400b      	ands	r3, r1
 801fe18:	4313      	orrs	r3, r2
 801fe1a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801fe1c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe20:	4313      	orrs	r3, r2
 801fe22:	b29b      	uxth	r3, r3
 801fe24:	9310      	str	r3, [sp, #64]	; 0x40
 801fe26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fe28:	781a      	ldrb	r2, [r3, #0]
 801fe2a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801fe2e:	4132      	asrs	r2, r6
 801fe30:	fb05 b919 	mls	r9, r5, r9, fp
 801fe34:	fb03 fb05 	mul.w	fp, r3, r5
 801fe38:	b2d2      	uxtb	r2, r2
 801fe3a:	930d      	str	r3, [sp, #52]	; 0x34
 801fe3c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801fe40:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801fe44:	f0c0 80f5 	bcc.w	8020032 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801fe48:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801fe4c:	46ae      	mov	lr, r5
 801fe4e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801fe52:	f0c0 80dd 	bcc.w	8020010 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801fe56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fe58:	4013      	ands	r3, r2
 801fe5a:	d055      	beq.n	801ff08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801fe5c:	20ff      	movs	r0, #255	; 0xff
 801fe5e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801fe60:	fb90 f1f1 	sdiv	r1, r0, r1
 801fe64:	434b      	muls	r3, r1
 801fe66:	2bfe      	cmp	r3, #254	; 0xfe
 801fe68:	dd03      	ble.n	801fe72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801fe6a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fe6c:	4281      	cmp	r1, r0
 801fe6e:	f000 80cd 	beq.w	802000c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801fe72:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fe74:	f8bc 4000 	ldrh.w	r4, [ip]
 801fe78:	fb11 f303 	smulbb	r3, r1, r3
 801fe7c:	b29b      	uxth	r3, r3
 801fe7e:	1c59      	adds	r1, r3, #1
 801fe80:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801fe84:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fe88:	b29f      	uxth	r7, r3
 801fe8a:	43db      	mvns	r3, r3
 801fe8c:	b2db      	uxtb	r3, r3
 801fe8e:	9309      	str	r3, [sp, #36]	; 0x24
 801fe90:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801fe92:	1220      	asrs	r0, r4, #8
 801fe94:	fb13 f907 	smulbb	r9, r3, r7
 801fe98:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fe9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe9e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801fea2:	fb00 9003 	mla	r0, r0, r3, r9
 801fea6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801fea8:	10e1      	asrs	r1, r4, #3
 801feaa:	fb13 f907 	smulbb	r9, r3, r7
 801feae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801feb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801feb4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801feb8:	fb01 9103 	mla	r1, r1, r3, r9
 801febc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801febe:	00e4      	lsls	r4, r4, #3
 801fec0:	fb13 f707 	smulbb	r7, r3, r7
 801fec4:	b2e4      	uxtb	r4, r4
 801fec6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fec8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801fecc:	fb04 7403 	mla	r4, r4, r3, r7
 801fed0:	b280      	uxth	r0, r0
 801fed2:	b2a4      	uxth	r4, r4
 801fed4:	1c43      	adds	r3, r0, #1
 801fed6:	f104 0901 	add.w	r9, r4, #1
 801feda:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fede:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801fee2:	b289      	uxth	r1, r1
 801fee4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801fee8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801feec:	ea49 0000 	orr.w	r0, r9, r0
 801fef0:	f101 0901 	add.w	r9, r1, #1
 801fef4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801fef8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801fefc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ff00:	ea40 0009 	orr.w	r0, r0, r9
 801ff04:	f8ac 0000 	strh.w	r0, [ip]
 801ff08:	4446      	add	r6, r8
 801ff0a:	b2b6      	uxth	r6, r6
 801ff0c:	2e07      	cmp	r6, #7
 801ff0e:	bf81      	itttt	hi
 801ff10:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801ff12:	785a      	ldrbhi	r2, [r3, #1]
 801ff14:	3301      	addhi	r3, #1
 801ff16:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801ff18:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ff1a:	bf9a      	itte	ls
 801ff1c:	fa42 f208 	asrls.w	r2, r2, r8
 801ff20:	b2d2      	uxtbls	r2, r2
 801ff22:	2600      	movhi	r6, #0
 801ff24:	449c      	add	ip, r3
 801ff26:	e792      	b.n	801fe4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801ff28:	441c      	add	r4, r3
 801ff2a:	b224      	sxth	r4, r4
 801ff2c:	e6d5      	b.n	801fcda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ff2e:	f1ba 0f01 	cmp.w	sl, #1
 801ff32:	f47f af0c 	bne.w	801fd4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff36:	f1bb 0f01 	cmp.w	fp, #1
 801ff3a:	f47f af08 	bne.w	801fd4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff3e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8020000 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801ff42:	f8db 0000 	ldr.w	r0, [fp]
 801ff46:	6803      	ldr	r3, [r0, #0]
 801ff48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ff4a:	4798      	blx	r3
 801ff4c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801ff50:	465a      	mov	r2, fp
 801ff52:	d006      	beq.n	801ff62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ff54:	f1b8 0f04 	cmp.w	r8, #4
 801ff58:	d140      	bne.n	801ffdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ff5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ff5c:	3300      	adds	r3, #0
 801ff5e:	bf18      	it	ne
 801ff60:	2301      	movne	r3, #1
 801ff62:	0580      	lsls	r0, r0, #22
 801ff64:	d56e      	bpl.n	8020044 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ff66:	f1b8 0f08 	cmp.w	r8, #8
 801ff6a:	d16b      	bne.n	8020044 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ff6c:	2b00      	cmp	r3, #0
 801ff6e:	bf0c      	ite	eq
 801ff70:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801ff74:	f44f 7180 	movne.w	r1, #256	; 0x100
 801ff78:	2d00      	cmp	r5, #0
 801ff7a:	f47f aee8 	bne.w	801fd4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff7e:	2e00      	cmp	r6, #0
 801ff80:	f47f aee5 	bne.w	801fd4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff84:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801ff86:	19e3      	adds	r3, r4, r7
 801ff88:	4283      	cmp	r3, r0
 801ff8a:	f73f aee0 	bgt.w	801fd4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff90:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ff92:	444b      	add	r3, r9
 801ff94:	4283      	cmp	r3, r0
 801ff96:	f73f aeda 	bgt.w	801fd4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ff9a:	6810      	ldr	r0, [r2, #0]
 801ff9c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801ffa0:	6804      	ldr	r4, [r0, #0]
 801ffa2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801ffa6:	b2bf      	uxth	r7, r7
 801ffa8:	f1b8 0f08 	cmp.w	r8, #8
 801ffac:	f04f 0500 	mov.w	r5, #0
 801ffb0:	bf18      	it	ne
 801ffb2:	3701      	addne	r7, #1
 801ffb4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ffb8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ffba:	9104      	str	r1, [sp, #16]
 801ffbc:	bf18      	it	ne
 801ffbe:	f027 0701 	bicne.w	r7, r7, #1
 801ffc2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ffc4:	bf18      	it	ne
 801ffc6:	b2bf      	uxthne	r7, r7
 801ffc8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801ffcc:	e9cd 7900 	strd	r7, r9, [sp]
 801ffd0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ffd2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ffd4:	47a0      	blx	r4
 801ffd6:	b019      	add	sp, #100	; 0x64
 801ffd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ffdc:	2300      	movs	r3, #0
 801ffde:	e7c0      	b.n	801ff62 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801ffe0:	2208      	movs	r2, #8
 801ffe2:	fb92 f3f8 	sdiv	r3, r2, r8
 801ffe6:	1e5a      	subs	r2, r3, #1
 801ffe8:	443a      	add	r2, r7
 801ffea:	fb92 f2f3 	sdiv	r2, r2, r3
 801ffee:	fb12 f203 	smulbb	r2, r2, r3
 801fff2:	b292      	uxth	r2, r2
 801fff4:	e6b0      	b.n	801fd58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801fff6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fff8:	e6ec      	b.n	801fdd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801fffa:	bf00      	nop
 801fffc:	2001382c 	.word	0x2001382c
 8020000:	20013834 	.word	0x20013834
 8020004:	2001382e 	.word	0x2001382e
 8020008:	00fff800 	.word	0x00fff800
 802000c:	9810      	ldr	r0, [sp, #64]	; 0x40
 802000e:	e779      	b.n	801ff04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8020010:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020012:	b153      	cbz	r3, 802002a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8020014:	441e      	add	r6, r3
 8020016:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020018:	b2b6      	uxth	r6, r6
 802001a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 802001e:	f006 0607 	and.w	r6, r6, #7
 8020022:	781a      	ldrb	r2, [r3, #0]
 8020024:	9328      	str	r3, [sp, #160]	; 0xa0
 8020026:	4132      	asrs	r2, r6
 8020028:	b2d2      	uxtb	r2, r2
 802002a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802002c:	445b      	add	r3, fp
 802002e:	930a      	str	r3, [sp, #40]	; 0x28
 8020030:	e706      	b.n	801fe40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8020032:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020034:	2b00      	cmp	r3, #0
 8020036:	d1ce      	bne.n	801ffd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020038:	4b05      	ldr	r3, [pc, #20]	; (8020050 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 802003a:	6818      	ldr	r0, [r3, #0]
 802003c:	6803      	ldr	r3, [r0, #0]
 802003e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020040:	4798      	blx	r3
 8020042:	e7c8      	b.n	801ffd6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8020044:	2b00      	cmp	r3, #0
 8020046:	f43f ae82 	beq.w	801fd4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802004a:	f44f 7180 	mov.w	r1, #256	; 0x100
 802004e:	e793      	b.n	801ff78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8020050:	20013834 	.word	0x20013834

08020054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8020054:	b538      	push	{r3, r4, r5, lr}
 8020056:	4c15      	ldr	r4, [pc, #84]	; (80200ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8020058:	7823      	ldrb	r3, [r4, #0]
 802005a:	f3bf 8f5b 	dmb	ish
 802005e:	07da      	lsls	r2, r3, #31
 8020060:	4605      	mov	r5, r0
 8020062:	d40b      	bmi.n	802007c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8020064:	4620      	mov	r0, r4
 8020066:	f00a fee2 	bl	802ae2e <__cxa_guard_acquire>
 802006a:	b138      	cbz	r0, 802007c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 802006c:	4620      	mov	r0, r4
 802006e:	f00a feea 	bl	802ae46 <__cxa_guard_release>
 8020072:	4a0f      	ldr	r2, [pc, #60]	; (80200b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020074:	490f      	ldr	r1, [pc, #60]	; (80200b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8020076:	4810      	ldr	r0, [pc, #64]	; (80200b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8020078:	f00a fed2 	bl	802ae20 <__aeabi_atexit>
 802007c:	4c0f      	ldr	r4, [pc, #60]	; (80200bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 802007e:	7823      	ldrb	r3, [r4, #0]
 8020080:	f3bf 8f5b 	dmb	ish
 8020084:	07db      	lsls	r3, r3, #31
 8020086:	d40b      	bmi.n	80200a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020088:	4620      	mov	r0, r4
 802008a:	f00a fed0 	bl	802ae2e <__cxa_guard_acquire>
 802008e:	b138      	cbz	r0, 80200a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8020090:	4620      	mov	r0, r4
 8020092:	f00a fed8 	bl	802ae46 <__cxa_guard_release>
 8020096:	4a06      	ldr	r2, [pc, #24]	; (80200b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8020098:	4909      	ldr	r1, [pc, #36]	; (80200c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 802009a:	480a      	ldr	r0, [pc, #40]	; (80200c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 802009c:	f00a fec0 	bl	802ae20 <__aeabi_atexit>
 80200a0:	4b05      	ldr	r3, [pc, #20]	; (80200b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80200a2:	612b      	str	r3, [r5, #16]
 80200a4:	4b07      	ldr	r3, [pc, #28]	; (80200c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80200a6:	616b      	str	r3, [r5, #20]
 80200a8:	bd38      	pop	{r3, r4, r5, pc}
 80200aa:	bf00      	nop
 80200ac:	20013914 	.word	0x20013914
 80200b0:	20000000 	.word	0x20000000
 80200b4:	0801ce57 	.word	0x0801ce57
 80200b8:	200000d4 	.word	0x200000d4
 80200bc:	20013918 	.word	0x20013918
 80200c0:	0801ce55 	.word	0x0801ce55
 80200c4:	200000d8 	.word	0x200000d8

080200c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80200c8:	b538      	push	{r3, r4, r5, lr}
 80200ca:	4c15      	ldr	r4, [pc, #84]	; (8020120 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80200cc:	7823      	ldrb	r3, [r4, #0]
 80200ce:	f3bf 8f5b 	dmb	ish
 80200d2:	07da      	lsls	r2, r3, #31
 80200d4:	4605      	mov	r5, r0
 80200d6:	d40b      	bmi.n	80200f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80200d8:	4620      	mov	r0, r4
 80200da:	f00a fea8 	bl	802ae2e <__cxa_guard_acquire>
 80200de:	b138      	cbz	r0, 80200f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80200e0:	4620      	mov	r0, r4
 80200e2:	f00a feb0 	bl	802ae46 <__cxa_guard_release>
 80200e6:	4a0f      	ldr	r2, [pc, #60]	; (8020124 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80200e8:	490f      	ldr	r1, [pc, #60]	; (8020128 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80200ea:	4810      	ldr	r0, [pc, #64]	; (802012c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80200ec:	f00a fe98 	bl	802ae20 <__aeabi_atexit>
 80200f0:	4c0f      	ldr	r4, [pc, #60]	; (8020130 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80200f2:	7823      	ldrb	r3, [r4, #0]
 80200f4:	f3bf 8f5b 	dmb	ish
 80200f8:	07db      	lsls	r3, r3, #31
 80200fa:	d40b      	bmi.n	8020114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80200fc:	4620      	mov	r0, r4
 80200fe:	f00a fe96 	bl	802ae2e <__cxa_guard_acquire>
 8020102:	b138      	cbz	r0, 8020114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8020104:	4620      	mov	r0, r4
 8020106:	f00a fe9e 	bl	802ae46 <__cxa_guard_release>
 802010a:	4a06      	ldr	r2, [pc, #24]	; (8020124 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 802010c:	4909      	ldr	r1, [pc, #36]	; (8020134 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 802010e:	480a      	ldr	r0, [pc, #40]	; (8020138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8020110:	f00a fe86 	bl	802ae20 <__aeabi_atexit>
 8020114:	4b05      	ldr	r3, [pc, #20]	; (802012c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8020116:	60ab      	str	r3, [r5, #8]
 8020118:	4b07      	ldr	r3, [pc, #28]	; (8020138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 802011a:	60eb      	str	r3, [r5, #12]
 802011c:	bd38      	pop	{r3, r4, r5, pc}
 802011e:	bf00      	nop
 8020120:	200138ec 	.word	0x200138ec
 8020124:	20000000 	.word	0x20000000
 8020128:	0801ce5b 	.word	0x0801ce5b
 802012c:	200000ac 	.word	0x200000ac
 8020130:	200138f0 	.word	0x200138f0
 8020134:	0801ce59 	.word	0x0801ce59
 8020138:	200000b0 	.word	0x200000b0

0802013c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 802013c:	b510      	push	{r4, lr}
 802013e:	4604      	mov	r4, r0
 8020140:	f7ff ff88 	bl	8020054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8020144:	4620      	mov	r0, r4
 8020146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802014a:	f7ff bfbd 	b.w	80200c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08020150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8020150:	b538      	push	{r3, r4, r5, lr}
 8020152:	4c15      	ldr	r4, [pc, #84]	; (80201a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8020154:	7823      	ldrb	r3, [r4, #0]
 8020156:	f3bf 8f5b 	dmb	ish
 802015a:	07da      	lsls	r2, r3, #31
 802015c:	4605      	mov	r5, r0
 802015e:	d40b      	bmi.n	8020178 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020160:	4620      	mov	r0, r4
 8020162:	f00a fe64 	bl	802ae2e <__cxa_guard_acquire>
 8020166:	b138      	cbz	r0, 8020178 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8020168:	4620      	mov	r0, r4
 802016a:	f00a fe6c 	bl	802ae46 <__cxa_guard_release>
 802016e:	4a0f      	ldr	r2, [pc, #60]	; (80201ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020170:	490f      	ldr	r1, [pc, #60]	; (80201b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8020172:	4810      	ldr	r0, [pc, #64]	; (80201b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8020174:	f00a fe54 	bl	802ae20 <__aeabi_atexit>
 8020178:	4c0f      	ldr	r4, [pc, #60]	; (80201b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 802017a:	7823      	ldrb	r3, [r4, #0]
 802017c:	f3bf 8f5b 	dmb	ish
 8020180:	07db      	lsls	r3, r3, #31
 8020182:	d40b      	bmi.n	802019c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8020184:	4620      	mov	r0, r4
 8020186:	f00a fe52 	bl	802ae2e <__cxa_guard_acquire>
 802018a:	b138      	cbz	r0, 802019c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 802018c:	4620      	mov	r0, r4
 802018e:	f00a fe5a 	bl	802ae46 <__cxa_guard_release>
 8020192:	4a06      	ldr	r2, [pc, #24]	; (80201ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8020194:	4909      	ldr	r1, [pc, #36]	; (80201bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8020196:	480a      	ldr	r0, [pc, #40]	; (80201c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8020198:	f00a fe42 	bl	802ae20 <__aeabi_atexit>
 802019c:	4b05      	ldr	r3, [pc, #20]	; (80201b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 802019e:	622b      	str	r3, [r5, #32]
 80201a0:	4b07      	ldr	r3, [pc, #28]	; (80201c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80201a2:	626b      	str	r3, [r5, #36]	; 0x24
 80201a4:	bd38      	pop	{r3, r4, r5, pc}
 80201a6:	bf00      	nop
 80201a8:	2001391c 	.word	0x2001391c
 80201ac:	20000000 	.word	0x20000000
 80201b0:	0801ce4f 	.word	0x0801ce4f
 80201b4:	200000dc 	.word	0x200000dc
 80201b8:	20013920 	.word	0x20013920
 80201bc:	0801ce4d 	.word	0x0801ce4d
 80201c0:	200000e0 	.word	0x200000e0

080201c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80201c4:	b538      	push	{r3, r4, r5, lr}
 80201c6:	4c15      	ldr	r4, [pc, #84]	; (802021c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80201c8:	7823      	ldrb	r3, [r4, #0]
 80201ca:	f3bf 8f5b 	dmb	ish
 80201ce:	07da      	lsls	r2, r3, #31
 80201d0:	4605      	mov	r5, r0
 80201d2:	d40b      	bmi.n	80201ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80201d4:	4620      	mov	r0, r4
 80201d6:	f00a fe2a 	bl	802ae2e <__cxa_guard_acquire>
 80201da:	b138      	cbz	r0, 80201ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80201dc:	4620      	mov	r0, r4
 80201de:	f00a fe32 	bl	802ae46 <__cxa_guard_release>
 80201e2:	4a0f      	ldr	r2, [pc, #60]	; (8020220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80201e4:	490f      	ldr	r1, [pc, #60]	; (8020224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80201e6:	4810      	ldr	r0, [pc, #64]	; (8020228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80201e8:	f00a fe1a 	bl	802ae20 <__aeabi_atexit>
 80201ec:	4c0f      	ldr	r4, [pc, #60]	; (802022c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80201ee:	7823      	ldrb	r3, [r4, #0]
 80201f0:	f3bf 8f5b 	dmb	ish
 80201f4:	07db      	lsls	r3, r3, #31
 80201f6:	d40b      	bmi.n	8020210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80201f8:	4620      	mov	r0, r4
 80201fa:	f00a fe18 	bl	802ae2e <__cxa_guard_acquire>
 80201fe:	b138      	cbz	r0, 8020210 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8020200:	4620      	mov	r0, r4
 8020202:	f00a fe20 	bl	802ae46 <__cxa_guard_release>
 8020206:	4a06      	ldr	r2, [pc, #24]	; (8020220 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8020208:	4909      	ldr	r1, [pc, #36]	; (8020230 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 802020a:	480a      	ldr	r0, [pc, #40]	; (8020234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 802020c:	f00a fe08 	bl	802ae20 <__aeabi_atexit>
 8020210:	4b05      	ldr	r3, [pc, #20]	; (8020228 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8020212:	61ab      	str	r3, [r5, #24]
 8020214:	4b07      	ldr	r3, [pc, #28]	; (8020234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8020216:	61eb      	str	r3, [r5, #28]
 8020218:	bd38      	pop	{r3, r4, r5, pc}
 802021a:	bf00      	nop
 802021c:	200138f4 	.word	0x200138f4
 8020220:	20000000 	.word	0x20000000
 8020224:	0801ce53 	.word	0x0801ce53
 8020228:	200000b4 	.word	0x200000b4
 802022c:	200138f8 	.word	0x200138f8
 8020230:	0801ce51 	.word	0x0801ce51
 8020234:	200000b8 	.word	0x200000b8

08020238 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8020238:	b510      	push	{r4, lr}
 802023a:	4604      	mov	r4, r0
 802023c:	f7ff ff88 	bl	8020150 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8020240:	4620      	mov	r0, r4
 8020242:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020246:	f7ff bfbd 	b.w	80201c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0802024c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 802024c:	b538      	push	{r3, r4, r5, lr}
 802024e:	4c15      	ldr	r4, [pc, #84]	; (80202a4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8020250:	7823      	ldrb	r3, [r4, #0]
 8020252:	f3bf 8f5b 	dmb	ish
 8020256:	07da      	lsls	r2, r3, #31
 8020258:	4605      	mov	r5, r0
 802025a:	d40b      	bmi.n	8020274 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802025c:	4620      	mov	r0, r4
 802025e:	f00a fde6 	bl	802ae2e <__cxa_guard_acquire>
 8020262:	b138      	cbz	r0, 8020274 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8020264:	4620      	mov	r0, r4
 8020266:	f00a fdee 	bl	802ae46 <__cxa_guard_release>
 802026a:	4a0f      	ldr	r2, [pc, #60]	; (80202a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 802026c:	490f      	ldr	r1, [pc, #60]	; (80202ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 802026e:	4810      	ldr	r0, [pc, #64]	; (80202b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8020270:	f00a fdd6 	bl	802ae20 <__aeabi_atexit>
 8020274:	4c0f      	ldr	r4, [pc, #60]	; (80202b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8020276:	7823      	ldrb	r3, [r4, #0]
 8020278:	f3bf 8f5b 	dmb	ish
 802027c:	07db      	lsls	r3, r3, #31
 802027e:	d40b      	bmi.n	8020298 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8020280:	4620      	mov	r0, r4
 8020282:	f00a fdd4 	bl	802ae2e <__cxa_guard_acquire>
 8020286:	b138      	cbz	r0, 8020298 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8020288:	4620      	mov	r0, r4
 802028a:	f00a fddc 	bl	802ae46 <__cxa_guard_release>
 802028e:	4a06      	ldr	r2, [pc, #24]	; (80202a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8020290:	4909      	ldr	r1, [pc, #36]	; (80202b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8020292:	480a      	ldr	r0, [pc, #40]	; (80202bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8020294:	f00a fdc4 	bl	802ae20 <__aeabi_atexit>
 8020298:	4b05      	ldr	r3, [pc, #20]	; (80202b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802029a:	632b      	str	r3, [r5, #48]	; 0x30
 802029c:	4b07      	ldr	r3, [pc, #28]	; (80202bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802029e:	636b      	str	r3, [r5, #52]	; 0x34
 80202a0:	bd38      	pop	{r3, r4, r5, pc}
 80202a2:	bf00      	nop
 80202a4:	2001392c 	.word	0x2001392c
 80202a8:	20000000 	.word	0x20000000
 80202ac:	0801ce47 	.word	0x0801ce47
 80202b0:	200000ec 	.word	0x200000ec
 80202b4:	20013930 	.word	0x20013930
 80202b8:	0801ce45 	.word	0x0801ce45
 80202bc:	200000f0 	.word	0x200000f0

080202c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80202c0:	b538      	push	{r3, r4, r5, lr}
 80202c2:	4c15      	ldr	r4, [pc, #84]	; (8020318 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80202c4:	7823      	ldrb	r3, [r4, #0]
 80202c6:	f3bf 8f5b 	dmb	ish
 80202ca:	07da      	lsls	r2, r3, #31
 80202cc:	4605      	mov	r5, r0
 80202ce:	d40b      	bmi.n	80202e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80202d0:	4620      	mov	r0, r4
 80202d2:	f00a fdac 	bl	802ae2e <__cxa_guard_acquire>
 80202d6:	b138      	cbz	r0, 80202e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80202d8:	4620      	mov	r0, r4
 80202da:	f00a fdb4 	bl	802ae46 <__cxa_guard_release>
 80202de:	4a0f      	ldr	r2, [pc, #60]	; (802031c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80202e0:	490f      	ldr	r1, [pc, #60]	; (8020320 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80202e2:	4810      	ldr	r0, [pc, #64]	; (8020324 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80202e4:	f00a fd9c 	bl	802ae20 <__aeabi_atexit>
 80202e8:	4c0f      	ldr	r4, [pc, #60]	; (8020328 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80202ea:	7823      	ldrb	r3, [r4, #0]
 80202ec:	f3bf 8f5b 	dmb	ish
 80202f0:	07db      	lsls	r3, r3, #31
 80202f2:	d40b      	bmi.n	802030c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80202f4:	4620      	mov	r0, r4
 80202f6:	f00a fd9a 	bl	802ae2e <__cxa_guard_acquire>
 80202fa:	b138      	cbz	r0, 802030c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80202fc:	4620      	mov	r0, r4
 80202fe:	f00a fda2 	bl	802ae46 <__cxa_guard_release>
 8020302:	4a06      	ldr	r2, [pc, #24]	; (802031c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8020304:	4909      	ldr	r1, [pc, #36]	; (802032c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8020306:	480a      	ldr	r0, [pc, #40]	; (8020330 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8020308:	f00a fd8a 	bl	802ae20 <__aeabi_atexit>
 802030c:	4b05      	ldr	r3, [pc, #20]	; (8020324 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 802030e:	62ab      	str	r3, [r5, #40]	; 0x28
 8020310:	4b07      	ldr	r3, [pc, #28]	; (8020330 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8020312:	62eb      	str	r3, [r5, #44]	; 0x2c
 8020314:	bd38      	pop	{r3, r4, r5, pc}
 8020316:	bf00      	nop
 8020318:	200138fc 	.word	0x200138fc
 802031c:	20000000 	.word	0x20000000
 8020320:	0801ce4b 	.word	0x0801ce4b
 8020324:	200000bc 	.word	0x200000bc
 8020328:	20013900 	.word	0x20013900
 802032c:	0801ce49 	.word	0x0801ce49
 8020330:	200000c0 	.word	0x200000c0

08020334 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8020334:	b510      	push	{r4, lr}
 8020336:	4604      	mov	r4, r0
 8020338:	f7ff ff88 	bl	802024c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 802033c:	4620      	mov	r0, r4
 802033e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020342:	f7ff bfbd 	b.w	80202c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08020348 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8020348:	b538      	push	{r3, r4, r5, lr}
 802034a:	4c15      	ldr	r4, [pc, #84]	; (80203a0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802034c:	7823      	ldrb	r3, [r4, #0]
 802034e:	f3bf 8f5b 	dmb	ish
 8020352:	07da      	lsls	r2, r3, #31
 8020354:	4605      	mov	r5, r0
 8020356:	d40b      	bmi.n	8020370 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8020358:	4620      	mov	r0, r4
 802035a:	f00a fd68 	bl	802ae2e <__cxa_guard_acquire>
 802035e:	b138      	cbz	r0, 8020370 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8020360:	4620      	mov	r0, r4
 8020362:	f00a fd70 	bl	802ae46 <__cxa_guard_release>
 8020366:	4a0f      	ldr	r2, [pc, #60]	; (80203a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8020368:	490f      	ldr	r1, [pc, #60]	; (80203a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802036a:	4810      	ldr	r0, [pc, #64]	; (80203ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802036c:	f00a fd58 	bl	802ae20 <__aeabi_atexit>
 8020370:	4c0f      	ldr	r4, [pc, #60]	; (80203b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8020372:	7823      	ldrb	r3, [r4, #0]
 8020374:	f3bf 8f5b 	dmb	ish
 8020378:	07db      	lsls	r3, r3, #31
 802037a:	d40b      	bmi.n	8020394 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802037c:	4620      	mov	r0, r4
 802037e:	f00a fd56 	bl	802ae2e <__cxa_guard_acquire>
 8020382:	b138      	cbz	r0, 8020394 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8020384:	4620      	mov	r0, r4
 8020386:	f00a fd5e 	bl	802ae46 <__cxa_guard_release>
 802038a:	4a06      	ldr	r2, [pc, #24]	; (80203a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802038c:	4909      	ldr	r1, [pc, #36]	; (80203b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802038e:	480a      	ldr	r0, [pc, #40]	; (80203b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8020390:	f00a fd46 	bl	802ae20 <__aeabi_atexit>
 8020394:	4b05      	ldr	r3, [pc, #20]	; (80203ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8020396:	652b      	str	r3, [r5, #80]	; 0x50
 8020398:	4b07      	ldr	r3, [pc, #28]	; (80203b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802039a:	656b      	str	r3, [r5, #84]	; 0x54
 802039c:	bd38      	pop	{r3, r4, r5, pc}
 802039e:	bf00      	nop
 80203a0:	20013934 	.word	0x20013934
 80203a4:	20000000 	.word	0x20000000
 80203a8:	0801ce37 	.word	0x0801ce37
 80203ac:	200000f4 	.word	0x200000f4
 80203b0:	20013938 	.word	0x20013938
 80203b4:	0801ce35 	.word	0x0801ce35
 80203b8:	200000f8 	.word	0x200000f8

080203bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80203bc:	b538      	push	{r3, r4, r5, lr}
 80203be:	4c15      	ldr	r4, [pc, #84]	; (8020414 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80203c0:	7823      	ldrb	r3, [r4, #0]
 80203c2:	f3bf 8f5b 	dmb	ish
 80203c6:	07da      	lsls	r2, r3, #31
 80203c8:	4605      	mov	r5, r0
 80203ca:	d40b      	bmi.n	80203e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80203cc:	4620      	mov	r0, r4
 80203ce:	f00a fd2e 	bl	802ae2e <__cxa_guard_acquire>
 80203d2:	b138      	cbz	r0, 80203e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80203d4:	4620      	mov	r0, r4
 80203d6:	f00a fd36 	bl	802ae46 <__cxa_guard_release>
 80203da:	4a0f      	ldr	r2, [pc, #60]	; (8020418 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80203dc:	490f      	ldr	r1, [pc, #60]	; (802041c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80203de:	4810      	ldr	r0, [pc, #64]	; (8020420 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80203e0:	f00a fd1e 	bl	802ae20 <__aeabi_atexit>
 80203e4:	4c0f      	ldr	r4, [pc, #60]	; (8020424 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80203e6:	7823      	ldrb	r3, [r4, #0]
 80203e8:	f3bf 8f5b 	dmb	ish
 80203ec:	07db      	lsls	r3, r3, #31
 80203ee:	d40b      	bmi.n	8020408 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80203f0:	4620      	mov	r0, r4
 80203f2:	f00a fd1c 	bl	802ae2e <__cxa_guard_acquire>
 80203f6:	b138      	cbz	r0, 8020408 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80203f8:	4620      	mov	r0, r4
 80203fa:	f00a fd24 	bl	802ae46 <__cxa_guard_release>
 80203fe:	4a06      	ldr	r2, [pc, #24]	; (8020418 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8020400:	4909      	ldr	r1, [pc, #36]	; (8020428 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8020402:	480a      	ldr	r0, [pc, #40]	; (802042c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8020404:	f00a fd0c 	bl	802ae20 <__aeabi_atexit>
 8020408:	4b05      	ldr	r3, [pc, #20]	; (8020420 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 802040a:	64ab      	str	r3, [r5, #72]	; 0x48
 802040c:	4b07      	ldr	r3, [pc, #28]	; (802042c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 802040e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8020410:	bd38      	pop	{r3, r4, r5, pc}
 8020412:	bf00      	nop
 8020414:	2001393c 	.word	0x2001393c
 8020418:	20000000 	.word	0x20000000
 802041c:	0801ce3b 	.word	0x0801ce3b
 8020420:	200000fc 	.word	0x200000fc
 8020424:	20013940 	.word	0x20013940
 8020428:	0801ce39 	.word	0x0801ce39
 802042c:	20000100 	.word	0x20000100

08020430 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8020430:	b538      	push	{r3, r4, r5, lr}
 8020432:	4c15      	ldr	r4, [pc, #84]	; (8020488 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8020434:	7823      	ldrb	r3, [r4, #0]
 8020436:	f3bf 8f5b 	dmb	ish
 802043a:	07da      	lsls	r2, r3, #31
 802043c:	4605      	mov	r5, r0
 802043e:	d40b      	bmi.n	8020458 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8020440:	4620      	mov	r0, r4
 8020442:	f00a fcf4 	bl	802ae2e <__cxa_guard_acquire>
 8020446:	b138      	cbz	r0, 8020458 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8020448:	4620      	mov	r0, r4
 802044a:	f00a fcfc 	bl	802ae46 <__cxa_guard_release>
 802044e:	4a0f      	ldr	r2, [pc, #60]	; (802048c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020450:	490f      	ldr	r1, [pc, #60]	; (8020490 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8020452:	4810      	ldr	r0, [pc, #64]	; (8020494 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8020454:	f00a fce4 	bl	802ae20 <__aeabi_atexit>
 8020458:	4c0f      	ldr	r4, [pc, #60]	; (8020498 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802045a:	7823      	ldrb	r3, [r4, #0]
 802045c:	f3bf 8f5b 	dmb	ish
 8020460:	07db      	lsls	r3, r3, #31
 8020462:	d40b      	bmi.n	802047c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8020464:	4620      	mov	r0, r4
 8020466:	f00a fce2 	bl	802ae2e <__cxa_guard_acquire>
 802046a:	b138      	cbz	r0, 802047c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802046c:	4620      	mov	r0, r4
 802046e:	f00a fcea 	bl	802ae46 <__cxa_guard_release>
 8020472:	4a06      	ldr	r2, [pc, #24]	; (802048c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8020474:	4909      	ldr	r1, [pc, #36]	; (802049c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8020476:	480a      	ldr	r0, [pc, #40]	; (80204a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020478:	f00a fcd2 	bl	802ae20 <__aeabi_atexit>
 802047c:	4b05      	ldr	r3, [pc, #20]	; (8020494 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802047e:	642b      	str	r3, [r5, #64]	; 0x40
 8020480:	4b07      	ldr	r3, [pc, #28]	; (80204a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8020482:	646b      	str	r3, [r5, #68]	; 0x44
 8020484:	bd38      	pop	{r3, r4, r5, pc}
 8020486:	bf00      	nop
 8020488:	20013904 	.word	0x20013904
 802048c:	20000000 	.word	0x20000000
 8020490:	0801ce3f 	.word	0x0801ce3f
 8020494:	200000c4 	.word	0x200000c4
 8020498:	20013908 	.word	0x20013908
 802049c:	0801ce3d 	.word	0x0801ce3d
 80204a0:	200000c8 	.word	0x200000c8

080204a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80204a4:	b538      	push	{r3, r4, r5, lr}
 80204a6:	4c15      	ldr	r4, [pc, #84]	; (80204fc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80204a8:	7823      	ldrb	r3, [r4, #0]
 80204aa:	f3bf 8f5b 	dmb	ish
 80204ae:	07da      	lsls	r2, r3, #31
 80204b0:	4605      	mov	r5, r0
 80204b2:	d40b      	bmi.n	80204cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80204b4:	4620      	mov	r0, r4
 80204b6:	f00a fcba 	bl	802ae2e <__cxa_guard_acquire>
 80204ba:	b138      	cbz	r0, 80204cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80204bc:	4620      	mov	r0, r4
 80204be:	f00a fcc2 	bl	802ae46 <__cxa_guard_release>
 80204c2:	4a0f      	ldr	r2, [pc, #60]	; (8020500 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80204c4:	490f      	ldr	r1, [pc, #60]	; (8020504 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80204c6:	4810      	ldr	r0, [pc, #64]	; (8020508 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80204c8:	f00a fcaa 	bl	802ae20 <__aeabi_atexit>
 80204cc:	4c0f      	ldr	r4, [pc, #60]	; (802050c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80204ce:	7823      	ldrb	r3, [r4, #0]
 80204d0:	f3bf 8f5b 	dmb	ish
 80204d4:	07db      	lsls	r3, r3, #31
 80204d6:	d40b      	bmi.n	80204f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80204d8:	4620      	mov	r0, r4
 80204da:	f00a fca8 	bl	802ae2e <__cxa_guard_acquire>
 80204de:	b138      	cbz	r0, 80204f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80204e0:	4620      	mov	r0, r4
 80204e2:	f00a fcb0 	bl	802ae46 <__cxa_guard_release>
 80204e6:	4a06      	ldr	r2, [pc, #24]	; (8020500 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80204e8:	4909      	ldr	r1, [pc, #36]	; (8020510 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80204ea:	480a      	ldr	r0, [pc, #40]	; (8020514 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80204ec:	f00a fc98 	bl	802ae20 <__aeabi_atexit>
 80204f0:	4b05      	ldr	r3, [pc, #20]	; (8020508 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80204f2:	63ab      	str	r3, [r5, #56]	; 0x38
 80204f4:	4b07      	ldr	r3, [pc, #28]	; (8020514 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80204f6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80204f8:	bd38      	pop	{r3, r4, r5, pc}
 80204fa:	bf00      	nop
 80204fc:	20013924 	.word	0x20013924
 8020500:	20000000 	.word	0x20000000
 8020504:	0801ce43 	.word	0x0801ce43
 8020508:	200000e4 	.word	0x200000e4
 802050c:	20013928 	.word	0x20013928
 8020510:	0801ce41 	.word	0x0801ce41
 8020514:	200000e8 	.word	0x200000e8

08020518 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8020518:	b510      	push	{r4, lr}
 802051a:	4604      	mov	r4, r0
 802051c:	f7ff ff14 	bl	8020348 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8020520:	4620      	mov	r0, r4
 8020522:	f7ff ff85 	bl	8020430 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8020526:	4620      	mov	r0, r4
 8020528:	f7ff ff48 	bl	80203bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802052c:	4620      	mov	r0, r4
 802052e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020532:	f7ff bfb7 	b.w	80204a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08020538 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8020538:	b538      	push	{r3, r4, r5, lr}
 802053a:	4c15      	ldr	r4, [pc, #84]	; (8020590 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802053c:	7823      	ldrb	r3, [r4, #0]
 802053e:	f3bf 8f5b 	dmb	ish
 8020542:	07da      	lsls	r2, r3, #31
 8020544:	4605      	mov	r5, r0
 8020546:	d40b      	bmi.n	8020560 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020548:	4620      	mov	r0, r4
 802054a:	f00a fc70 	bl	802ae2e <__cxa_guard_acquire>
 802054e:	b138      	cbz	r0, 8020560 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020550:	4620      	mov	r0, r4
 8020552:	f00a fc78 	bl	802ae46 <__cxa_guard_release>
 8020556:	4a0f      	ldr	r2, [pc, #60]	; (8020594 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8020558:	490f      	ldr	r1, [pc, #60]	; (8020598 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802055a:	4810      	ldr	r0, [pc, #64]	; (802059c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802055c:	f00a fc60 	bl	802ae20 <__aeabi_atexit>
 8020560:	4c0f      	ldr	r4, [pc, #60]	; (80205a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8020562:	7823      	ldrb	r3, [r4, #0]
 8020564:	f3bf 8f5b 	dmb	ish
 8020568:	07db      	lsls	r3, r3, #31
 802056a:	d40b      	bmi.n	8020584 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802056c:	4620      	mov	r0, r4
 802056e:	f00a fc5e 	bl	802ae2e <__cxa_guard_acquire>
 8020572:	b138      	cbz	r0, 8020584 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8020574:	4620      	mov	r0, r4
 8020576:	f00a fc66 	bl	802ae46 <__cxa_guard_release>
 802057a:	4a06      	ldr	r2, [pc, #24]	; (8020594 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802057c:	4909      	ldr	r1, [pc, #36]	; (80205a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802057e:	480a      	ldr	r0, [pc, #40]	; (80205a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8020580:	f00a fc4e 	bl	802ae20 <__aeabi_atexit>
 8020584:	4b05      	ldr	r3, [pc, #20]	; (802059c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8020586:	662b      	str	r3, [r5, #96]	; 0x60
 8020588:	4b07      	ldr	r3, [pc, #28]	; (80205a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802058a:	666b      	str	r3, [r5, #100]	; 0x64
 802058c:	bd38      	pop	{r3, r4, r5, pc}
 802058e:	bf00      	nop
 8020590:	2001390c 	.word	0x2001390c
 8020594:	20000000 	.word	0x20000000
 8020598:	0801ce2f 	.word	0x0801ce2f
 802059c:	200000cc 	.word	0x200000cc
 80205a0:	20013910 	.word	0x20013910
 80205a4:	0801ce2d 	.word	0x0801ce2d
 80205a8:	200000d0 	.word	0x200000d0

080205ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80205ac:	b538      	push	{r3, r4, r5, lr}
 80205ae:	4c15      	ldr	r4, [pc, #84]	; (8020604 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80205b0:	7823      	ldrb	r3, [r4, #0]
 80205b2:	f3bf 8f5b 	dmb	ish
 80205b6:	07da      	lsls	r2, r3, #31
 80205b8:	4605      	mov	r5, r0
 80205ba:	d40b      	bmi.n	80205d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80205bc:	4620      	mov	r0, r4
 80205be:	f00a fc36 	bl	802ae2e <__cxa_guard_acquire>
 80205c2:	b138      	cbz	r0, 80205d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80205c4:	4620      	mov	r0, r4
 80205c6:	f00a fc3e 	bl	802ae46 <__cxa_guard_release>
 80205ca:	4a0f      	ldr	r2, [pc, #60]	; (8020608 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80205cc:	490f      	ldr	r1, [pc, #60]	; (802060c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80205ce:	4810      	ldr	r0, [pc, #64]	; (8020610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80205d0:	f00a fc26 	bl	802ae20 <__aeabi_atexit>
 80205d4:	4c0f      	ldr	r4, [pc, #60]	; (8020614 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80205d6:	7823      	ldrb	r3, [r4, #0]
 80205d8:	f3bf 8f5b 	dmb	ish
 80205dc:	07db      	lsls	r3, r3, #31
 80205de:	d40b      	bmi.n	80205f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80205e0:	4620      	mov	r0, r4
 80205e2:	f00a fc24 	bl	802ae2e <__cxa_guard_acquire>
 80205e6:	b138      	cbz	r0, 80205f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80205e8:	4620      	mov	r0, r4
 80205ea:	f00a fc2c 	bl	802ae46 <__cxa_guard_release>
 80205ee:	4a06      	ldr	r2, [pc, #24]	; (8020608 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80205f0:	4909      	ldr	r1, [pc, #36]	; (8020618 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80205f2:	480a      	ldr	r0, [pc, #40]	; (802061c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80205f4:	f00a fc14 	bl	802ae20 <__aeabi_atexit>
 80205f8:	4b05      	ldr	r3, [pc, #20]	; (8020610 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80205fa:	65ab      	str	r3, [r5, #88]	; 0x58
 80205fc:	4b07      	ldr	r3, [pc, #28]	; (802061c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80205fe:	65eb      	str	r3, [r5, #92]	; 0x5c
 8020600:	bd38      	pop	{r3, r4, r5, pc}
 8020602:	bf00      	nop
 8020604:	200138e4 	.word	0x200138e4
 8020608:	20000000 	.word	0x20000000
 802060c:	0801ce33 	.word	0x0801ce33
 8020610:	200000a4 	.word	0x200000a4
 8020614:	200138e8 	.word	0x200138e8
 8020618:	0801ce31 	.word	0x0801ce31
 802061c:	200000a8 	.word	0x200000a8

08020620 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8020620:	b510      	push	{r4, lr}
 8020622:	4604      	mov	r4, r0
 8020624:	f7ff ff88 	bl	8020538 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8020628:	4620      	mov	r0, r4
 802062a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802062e:	f7ff bfbd 	b.w	80205ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08020634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8020634:	b538      	push	{r3, r4, r5, lr}
 8020636:	4c15      	ldr	r4, [pc, #84]	; (802068c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8020638:	7823      	ldrb	r3, [r4, #0]
 802063a:	f3bf 8f5b 	dmb	ish
 802063e:	07da      	lsls	r2, r3, #31
 8020640:	4605      	mov	r5, r0
 8020642:	d40b      	bmi.n	802065c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8020644:	4620      	mov	r0, r4
 8020646:	f00a fbf2 	bl	802ae2e <__cxa_guard_acquire>
 802064a:	b138      	cbz	r0, 802065c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802064c:	4620      	mov	r0, r4
 802064e:	f00a fbfa 	bl	802ae46 <__cxa_guard_release>
 8020652:	4a0f      	ldr	r2, [pc, #60]	; (8020690 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020654:	490f      	ldr	r1, [pc, #60]	; (8020694 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8020656:	4810      	ldr	r0, [pc, #64]	; (8020698 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020658:	f00a fbe2 	bl	802ae20 <__aeabi_atexit>
 802065c:	4c0f      	ldr	r4, [pc, #60]	; (802069c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802065e:	7823      	ldrb	r3, [r4, #0]
 8020660:	f3bf 8f5b 	dmb	ish
 8020664:	07db      	lsls	r3, r3, #31
 8020666:	d40b      	bmi.n	8020680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020668:	4620      	mov	r0, r4
 802066a:	f00a fbe0 	bl	802ae2e <__cxa_guard_acquire>
 802066e:	b138      	cbz	r0, 8020680 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020670:	4620      	mov	r0, r4
 8020672:	f00a fbe8 	bl	802ae46 <__cxa_guard_release>
 8020676:	4a06      	ldr	r2, [pc, #24]	; (8020690 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020678:	4909      	ldr	r1, [pc, #36]	; (80206a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802067a:	480a      	ldr	r0, [pc, #40]	; (80206a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802067c:	f00a fbd0 	bl	802ae20 <__aeabi_atexit>
 8020680:	4b05      	ldr	r3, [pc, #20]	; (8020698 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020682:	672b      	str	r3, [r5, #112]	; 0x70
 8020684:	4b07      	ldr	r3, [pc, #28]	; (80206a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8020686:	676b      	str	r3, [r5, #116]	; 0x74
 8020688:	bd38      	pop	{r3, r4, r5, pc}
 802068a:	bf00      	nop
 802068c:	200138dc 	.word	0x200138dc
 8020690:	20000000 	.word	0x20000000
 8020694:	0801ce27 	.word	0x0801ce27
 8020698:	2000009c 	.word	0x2000009c
 802069c:	200138e0 	.word	0x200138e0
 80206a0:	0801ce25 	.word	0x0801ce25
 80206a4:	200000a0 	.word	0x200000a0

080206a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80206a8:	b538      	push	{r3, r4, r5, lr}
 80206aa:	4c15      	ldr	r4, [pc, #84]	; (8020700 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80206ac:	7823      	ldrb	r3, [r4, #0]
 80206ae:	f3bf 8f5b 	dmb	ish
 80206b2:	07da      	lsls	r2, r3, #31
 80206b4:	4605      	mov	r5, r0
 80206b6:	d40b      	bmi.n	80206d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80206b8:	4620      	mov	r0, r4
 80206ba:	f00a fbb8 	bl	802ae2e <__cxa_guard_acquire>
 80206be:	b138      	cbz	r0, 80206d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80206c0:	4620      	mov	r0, r4
 80206c2:	f00a fbc0 	bl	802ae46 <__cxa_guard_release>
 80206c6:	4a0f      	ldr	r2, [pc, #60]	; (8020704 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80206c8:	490f      	ldr	r1, [pc, #60]	; (8020708 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80206ca:	4810      	ldr	r0, [pc, #64]	; (802070c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80206cc:	f00a fba8 	bl	802ae20 <__aeabi_atexit>
 80206d0:	4c0f      	ldr	r4, [pc, #60]	; (8020710 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80206d2:	7823      	ldrb	r3, [r4, #0]
 80206d4:	f3bf 8f5b 	dmb	ish
 80206d8:	07db      	lsls	r3, r3, #31
 80206da:	d40b      	bmi.n	80206f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80206dc:	4620      	mov	r0, r4
 80206de:	f00a fba6 	bl	802ae2e <__cxa_guard_acquire>
 80206e2:	b138      	cbz	r0, 80206f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80206e4:	4620      	mov	r0, r4
 80206e6:	f00a fbae 	bl	802ae46 <__cxa_guard_release>
 80206ea:	4a06      	ldr	r2, [pc, #24]	; (8020704 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80206ec:	4909      	ldr	r1, [pc, #36]	; (8020714 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80206ee:	480a      	ldr	r0, [pc, #40]	; (8020718 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80206f0:	f00a fb96 	bl	802ae20 <__aeabi_atexit>
 80206f4:	4b05      	ldr	r3, [pc, #20]	; (802070c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80206f6:	66ab      	str	r3, [r5, #104]	; 0x68
 80206f8:	4b07      	ldr	r3, [pc, #28]	; (8020718 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80206fa:	66eb      	str	r3, [r5, #108]	; 0x6c
 80206fc:	bd38      	pop	{r3, r4, r5, pc}
 80206fe:	bf00      	nop
 8020700:	200138d4 	.word	0x200138d4
 8020704:	20000000 	.word	0x20000000
 8020708:	0801ce2b 	.word	0x0801ce2b
 802070c:	20000094 	.word	0x20000094
 8020710:	200138d8 	.word	0x200138d8
 8020714:	0801ce29 	.word	0x0801ce29
 8020718:	20000098 	.word	0x20000098

0802071c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802071c:	b510      	push	{r4, lr}
 802071e:	4604      	mov	r4, r0
 8020720:	f7ff ff88 	bl	8020634 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8020724:	4620      	mov	r0, r4
 8020726:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802072a:	f7ff bfbd 	b.w	80206a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802072e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802072e:	b510      	push	{r4, lr}
 8020730:	4604      	mov	r4, r0
 8020732:	f7ff fff3 	bl	802071c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8020736:	4620      	mov	r0, r4
 8020738:	f7ff ff72 	bl	8020620 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802073c:	4620      	mov	r0, r4
 802073e:	f7ff fdf9 	bl	8020334 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8020742:	4620      	mov	r0, r4
 8020744:	f7ff fcfa 	bl	802013c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8020748:	4620      	mov	r0, r4
 802074a:	f7ff fd75 	bl	8020238 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802074e:	4620      	mov	r0, r4
 8020750:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020754:	f7ff bee0 	b.w	8020518 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08020758 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8020758:	b538      	push	{r3, r4, r5, lr}
 802075a:	4c0b      	ldr	r4, [pc, #44]	; (8020788 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802075c:	7823      	ldrb	r3, [r4, #0]
 802075e:	f3bf 8f5b 	dmb	ish
 8020762:	07db      	lsls	r3, r3, #31
 8020764:	4605      	mov	r5, r0
 8020766:	d40b      	bmi.n	8020780 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020768:	4620      	mov	r0, r4
 802076a:	f00a fb60 	bl	802ae2e <__cxa_guard_acquire>
 802076e:	b138      	cbz	r0, 8020780 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020770:	4620      	mov	r0, r4
 8020772:	f00a fb68 	bl	802ae46 <__cxa_guard_release>
 8020776:	4a05      	ldr	r2, [pc, #20]	; (802078c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8020778:	4905      	ldr	r1, [pc, #20]	; (8020790 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802077a:	4806      	ldr	r0, [pc, #24]	; (8020794 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802077c:	f00a fb50 	bl	802ae20 <__aeabi_atexit>
 8020780:	4b04      	ldr	r3, [pc, #16]	; (8020794 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020782:	67ab      	str	r3, [r5, #120]	; 0x78
 8020784:	bd38      	pop	{r3, r4, r5, pc}
 8020786:	bf00      	nop
 8020788:	200138c8 	.word	0x200138c8
 802078c:	20000000 	.word	0x20000000
 8020790:	0801ce23 	.word	0x0801ce23
 8020794:	2000008c 	.word	0x2000008c

08020798 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8020798:	b538      	push	{r3, r4, r5, lr}
 802079a:	4c0b      	ldr	r4, [pc, #44]	; (80207c8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 802079c:	7823      	ldrb	r3, [r4, #0]
 802079e:	f3bf 8f5b 	dmb	ish
 80207a2:	07db      	lsls	r3, r3, #31
 80207a4:	4605      	mov	r5, r0
 80207a6:	d40b      	bmi.n	80207c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80207a8:	4620      	mov	r0, r4
 80207aa:	f00a fb40 	bl	802ae2e <__cxa_guard_acquire>
 80207ae:	b138      	cbz	r0, 80207c0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80207b0:	4620      	mov	r0, r4
 80207b2:	f00a fb48 	bl	802ae46 <__cxa_guard_release>
 80207b6:	4a05      	ldr	r2, [pc, #20]	; (80207cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80207b8:	4905      	ldr	r1, [pc, #20]	; (80207d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80207ba:	4806      	ldr	r0, [pc, #24]	; (80207d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80207bc:	f00a fb30 	bl	802ae20 <__aeabi_atexit>
 80207c0:	4b04      	ldr	r3, [pc, #16]	; (80207d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80207c2:	67eb      	str	r3, [r5, #124]	; 0x7c
 80207c4:	bd38      	pop	{r3, r4, r5, pc}
 80207c6:	bf00      	nop
 80207c8:	200138cc 	.word	0x200138cc
 80207cc:	20000000 	.word	0x20000000
 80207d0:	0801ce21 	.word	0x0801ce21
 80207d4:	20000090 	.word	0x20000090

080207d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80207d8:	b570      	push	{r4, r5, r6, lr}
 80207da:	4d0d      	ldr	r5, [pc, #52]	; (8020810 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80207dc:	4c0d      	ldr	r4, [pc, #52]	; (8020814 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80207de:	782b      	ldrb	r3, [r5, #0]
 80207e0:	f3bf 8f5b 	dmb	ish
 80207e4:	f013 0f01 	tst.w	r3, #1
 80207e8:	4606      	mov	r6, r0
 80207ea:	d10d      	bne.n	8020808 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80207ec:	4628      	mov	r0, r5
 80207ee:	f00a fb1e 	bl	802ae2e <__cxa_guard_acquire>
 80207f2:	b148      	cbz	r0, 8020808 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80207f4:	4b08      	ldr	r3, [pc, #32]	; (8020818 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80207f6:	6023      	str	r3, [r4, #0]
 80207f8:	4628      	mov	r0, r5
 80207fa:	f00a fb24 	bl	802ae46 <__cxa_guard_release>
 80207fe:	4a07      	ldr	r2, [pc, #28]	; (802081c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8020800:	4907      	ldr	r1, [pc, #28]	; (8020820 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8020802:	4620      	mov	r0, r4
 8020804:	f00a fb0c 	bl	802ae20 <__aeabi_atexit>
 8020808:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 802080c:	bd70      	pop	{r4, r5, r6, pc}
 802080e:	bf00      	nop
 8020810:	200138d0 	.word	0x200138d0
 8020814:	20013944 	.word	0x20013944
 8020818:	08030034 	.word	0x08030034
 802081c:	20000000 	.word	0x20000000
 8020820:	0801ce1f 	.word	0x0801ce1f

08020824 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8020824:	b510      	push	{r4, lr}
 8020826:	4604      	mov	r4, r0
 8020828:	f7ff ff96 	bl	8020758 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802082c:	4620      	mov	r0, r4
 802082e:	f7ff ffb3 	bl	8020798 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8020832:	4620      	mov	r0, r4
 8020834:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020838:	f7ff bfce 	b.w	80207d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802083c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802083c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020840:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8020844:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8020848:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802084c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8020850:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8020854:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8020858:	8808      	ldrh	r0, [r1, #0]
 802085a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802085e:	2d00      	cmp	r5, #0
 8020860:	eb02 0a0c 	add.w	sl, r2, ip
 8020864:	f2c0 80b0 	blt.w	80209c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020868:	45ab      	cmp	fp, r5
 802086a:	f340 80ad 	ble.w	80209c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802086e:	2c00      	cmp	r4, #0
 8020870:	f2c0 80a8 	blt.w	80209c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020874:	45a6      	cmp	lr, r4
 8020876:	f340 80a5 	ble.w	80209c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802087a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802087e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8020882:	1c62      	adds	r2, r4, #1
 8020884:	f100 80a3 	bmi.w	80209ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020888:	4596      	cmp	lr, r2
 802088a:	f340 80a0 	ble.w	80209ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802088e:	f1b9 0f00 	cmp.w	r9, #0
 8020892:	f000 809c 	beq.w	80209ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020896:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802089a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802089e:	3501      	adds	r5, #1
 80208a0:	f100 8099 	bmi.w	80209d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80208a4:	45ab      	cmp	fp, r5
 80208a6:	f340 8096 	ble.w	80209d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80208aa:	2f00      	cmp	r7, #0
 80208ac:	f000 8093 	beq.w	80209d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80208b0:	2c00      	cmp	r4, #0
 80208b2:	f2c0 808e 	blt.w	80209d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80208b6:	45a6      	cmp	lr, r4
 80208b8:	f340 808b 	ble.w	80209d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80208bc:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80208c0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80208c4:	3401      	adds	r4, #1
 80208c6:	f100 8089 	bmi.w	80209dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80208ca:	45a6      	cmp	lr, r4
 80208cc:	f340 8086 	ble.w	80209dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80208d0:	f1b9 0f00 	cmp.w	r9, #0
 80208d4:	f000 8082 	beq.w	80209dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80208d8:	44d6      	add	lr, sl
 80208da:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80208de:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80208e2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80208e6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80208ea:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80208ee:	fb19 fe07 	smulbb	lr, r9, r7
 80208f2:	ea44 0808 	orr.w	r8, r4, r8
 80208f6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80208fa:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80208fe:	f1c7 0210 	rsb	r2, r7, #16
 8020902:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020906:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802090a:	ea44 0c0c 	orr.w	ip, r4, ip
 802090e:	eba2 0209 	sub.w	r2, r2, r9
 8020912:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8020916:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802091a:	fb04 f40c 	mul.w	r4, r4, ip
 802091e:	fb02 4808 	mla	r8, r2, r8, r4
 8020922:	041a      	lsls	r2, r3, #16
 8020924:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020928:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802092c:	4313      	orrs	r3, r2
 802092e:	042a      	lsls	r2, r5, #16
 8020930:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020934:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020938:	fb0e 8303 	mla	r3, lr, r3, r8
 802093c:	432a      	orrs	r2, r5
 802093e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8020942:	fb07 3202 	mla	r2, r7, r2, r3
 8020946:	0d53      	lsrs	r3, r2, #21
 8020948:	0952      	lsrs	r2, r2, #5
 802094a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802094e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020952:	431a      	orrs	r2, r3
 8020954:	b293      	uxth	r3, r2
 8020956:	b2b4      	uxth	r4, r6
 8020958:	1202      	asrs	r2, r0, #8
 802095a:	43f6      	mvns	r6, r6
 802095c:	b2f6      	uxtb	r6, r6
 802095e:	121d      	asrs	r5, r3, #8
 8020960:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020964:	fb12 f206 	smulbb	r2, r2, r6
 8020968:	10c7      	asrs	r7, r0, #3
 802096a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802096e:	00c0      	lsls	r0, r0, #3
 8020970:	fb05 2504 	mla	r5, r5, r4, r2
 8020974:	b2c0      	uxtb	r0, r0
 8020976:	10da      	asrs	r2, r3, #3
 8020978:	00db      	lsls	r3, r3, #3
 802097a:	b2db      	uxtb	r3, r3
 802097c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020980:	fb10 f006 	smulbb	r0, r0, r6
 8020984:	b2ad      	uxth	r5, r5
 8020986:	fb03 0004 	mla	r0, r3, r4, r0
 802098a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802098e:	fb17 f706 	smulbb	r7, r7, r6
 8020992:	b280      	uxth	r0, r0
 8020994:	1c6b      	adds	r3, r5, #1
 8020996:	fb02 7204 	mla	r2, r2, r4, r7
 802099a:	b292      	uxth	r2, r2
 802099c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80209a0:	1c43      	adds	r3, r0, #1
 80209a2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80209a6:	1c50      	adds	r0, r2, #1
 80209a8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80209ac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80209b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80209b4:	0952      	lsrs	r2, r2, #5
 80209b6:	432b      	orrs	r3, r5
 80209b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80209bc:	4313      	orrs	r3, r2
 80209be:	800b      	strh	r3, [r1, #0]
 80209c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209c4:	4680      	mov	r8, r0
 80209c6:	e75c      	b.n	8020882 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80209c8:	4684      	mov	ip, r0
 80209ca:	4680      	mov	r8, r0
 80209cc:	e767      	b.n	802089e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80209ce:	4684      	mov	ip, r0
 80209d0:	e765      	b.n	802089e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80209d2:	4605      	mov	r5, r0
 80209d4:	e776      	b.n	80208c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80209d6:	4603      	mov	r3, r0
 80209d8:	4605      	mov	r5, r0
 80209da:	e782      	b.n	80208e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80209dc:	4603      	mov	r3, r0
 80209de:	e780      	b.n	80208e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080209e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80209e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209e4:	b099      	sub	sp, #100	; 0x64
 80209e6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80209ea:	9215      	str	r2, [sp, #84]	; 0x54
 80209ec:	9309      	str	r3, [sp, #36]	; 0x24
 80209ee:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80209f0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 80209f4:	930d      	str	r3, [sp, #52]	; 0x34
 80209f6:	910c      	str	r1, [sp, #48]	; 0x30
 80209f8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 80209fc:	9016      	str	r0, [sp, #88]	; 0x58
 80209fe:	6850      	ldr	r0, [r2, #4]
 8020a00:	6812      	ldr	r2, [r2, #0]
 8020a02:	fb00 1303 	mla	r3, r0, r3, r1
 8020a06:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8020a0a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020a0c:	681b      	ldr	r3, [r3, #0]
 8020a0e:	930b      	str	r3, [sp, #44]	; 0x2c
 8020a10:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020a12:	685e      	ldr	r6, [r3, #4]
 8020a14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020a16:	43db      	mvns	r3, r3
 8020a18:	b2db      	uxtb	r3, r3
 8020a1a:	3604      	adds	r6, #4
 8020a1c:	930a      	str	r3, [sp, #40]	; 0x28
 8020a1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020a20:	2b00      	cmp	r3, #0
 8020a22:	dc03      	bgt.n	8020a2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020a24:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8020a26:	2b00      	cmp	r3, #0
 8020a28:	f340 8225 	ble.w	8020e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020a2c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020a2e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a32:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020a36:	1e48      	subs	r0, r1, #1
 8020a38:	1e57      	subs	r7, r2, #1
 8020a3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020a3c:	2b00      	cmp	r3, #0
 8020a3e:	f340 80e3 	ble.w	8020c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020a42:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8020a46:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020a4a:	d406      	bmi.n	8020a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020a4c:	4584      	cmp	ip, r0
 8020a4e:	da04      	bge.n	8020a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020a50:	2b00      	cmp	r3, #0
 8020a52:	db02      	blt.n	8020a5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020a54:	42bb      	cmp	r3, r7
 8020a56:	f2c0 80d8 	blt.w	8020c0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020a5a:	f11c 0c01 	adds.w	ip, ip, #1
 8020a5e:	f100 80c9 	bmi.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a62:	4561      	cmp	r1, ip
 8020a64:	f2c0 80c6 	blt.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a68:	3301      	adds	r3, #1
 8020a6a:	f100 80c3 	bmi.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a6e:	429a      	cmp	r2, r3
 8020a70:	f2c0 80c0 	blt.w	8020bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020a74:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020a78:	4647      	mov	r7, r8
 8020a7a:	f1bb 0f00 	cmp.w	fp, #0
 8020a7e:	f340 80e3 	ble.w	8020c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8020a82:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020a84:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020a86:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020a8a:	689b      	ldr	r3, [r3, #8]
 8020a8c:	ea5f 422a 	movs.w	r2, sl, asr #16
 8020a90:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020a94:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8020a98:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020a9c:	f100 8121 	bmi.w	8020ce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020aa0:	f103 39ff 	add.w	r9, r3, #4294967295
 8020aa4:	454a      	cmp	r2, r9
 8020aa6:	f280 811c 	bge.w	8020ce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020aaa:	f1bc 0f00 	cmp.w	ip, #0
 8020aae:	f2c0 8118 	blt.w	8020ce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020ab2:	f10e 39ff 	add.w	r9, lr, #4294967295
 8020ab6:	45cc      	cmp	ip, r9
 8020ab8:	f280 8113 	bge.w	8020ce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020abc:	b21b      	sxth	r3, r3
 8020abe:	fb0c 2203 	mla	r2, ip, r3, r2
 8020ac2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ac4:	eb04 0902 	add.w	r9, r4, r2
 8020ac8:	5ca2      	ldrb	r2, [r4, r2]
 8020aca:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8020ace:	2800      	cmp	r0, #0
 8020ad0:	f000 80fe 	beq.w	8020cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020ad4:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020ad8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020adc:	9211      	str	r2, [sp, #68]	; 0x44
 8020ade:	b151      	cbz	r1, 8020af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020ae0:	eb09 0203 	add.w	r2, r9, r3
 8020ae4:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020ae8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020aec:	930f      	str	r3, [sp, #60]	; 0x3c
 8020aee:	7853      	ldrb	r3, [r2, #1]
 8020af0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020af4:	9312      	str	r3, [sp, #72]	; 0x48
 8020af6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020af8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020afa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020afe:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020b02:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020b06:	ea4c 0c03 	orr.w	ip, ip, r3
 8020b0a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8020b0c:	041b      	lsls	r3, r3, #16
 8020b0e:	fb10 f201 	smulbb	r2, r0, r1
 8020b12:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020b16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020b1a:	10d2      	asrs	r2, r2, #3
 8020b1c:	4323      	orrs	r3, r4
 8020b1e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8020b22:	4353      	muls	r3, r2
 8020b24:	fb09 330c 	mla	r3, r9, ip, r3
 8020b28:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020b2c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020b30:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020b34:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020b38:	f1c1 0c10 	rsb	ip, r1, #16
 8020b3c:	ebac 0c00 	sub.w	ip, ip, r0
 8020b40:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020b44:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020b48:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020b4a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020b4c:	0418      	lsls	r0, r3, #16
 8020b4e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020b52:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020b56:	4318      	orrs	r0, r3
 8020b58:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020b5c:	fb02 c200 	mla	r2, r2, r0, ip
 8020b60:	0d53      	lsrs	r3, r2, #21
 8020b62:	0952      	lsrs	r2, r2, #5
 8020b64:	8838      	ldrh	r0, [r7, #0]
 8020b66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020b6a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020b6e:	431a      	orrs	r2, r3
 8020b70:	b292      	uxth	r2, r2
 8020b72:	1201      	asrs	r1, r0, #8
 8020b74:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8020b78:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8020b7c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020b80:	fb11 f104 	smulbb	r1, r1, r4
 8020b84:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020b88:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020b8c:	00c0      	lsls	r0, r0, #3
 8020b8e:	fb0c 1c03 	mla	ip, ip, r3, r1
 8020b92:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8020b96:	10d1      	asrs	r1, r2, #3
 8020b98:	b2c0      	uxtb	r0, r0
 8020b9a:	00d2      	lsls	r2, r2, #3
 8020b9c:	b2d2      	uxtb	r2, r2
 8020b9e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020ba2:	fb1e fe04 	smulbb	lr, lr, r4
 8020ba6:	fb10 f004 	smulbb	r0, r0, r4
 8020baa:	fa1f fc8c 	uxth.w	ip, ip
 8020bae:	fb01 e103 	mla	r1, r1, r3, lr
 8020bb2:	fb02 0303 	mla	r3, r2, r3, r0
 8020bb6:	b29a      	uxth	r2, r3
 8020bb8:	f10c 0301 	add.w	r3, ip, #1
 8020bbc:	b289      	uxth	r1, r1
 8020bbe:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020bc2:	1c53      	adds	r3, r2, #1
 8020bc4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020bc8:	1c4a      	adds	r2, r1, #1
 8020bca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020bce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020bd2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020bd6:	0949      	lsrs	r1, r1, #5
 8020bd8:	ea43 030c 	orr.w	r3, r3, ip
 8020bdc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020be0:	430b      	orrs	r3, r1
 8020be2:	803b      	strh	r3, [r7, #0]
 8020be4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020be6:	449a      	add	sl, r3
 8020be8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020bea:	3702      	adds	r7, #2
 8020bec:	441d      	add	r5, r3
 8020bee:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020bf2:	e742      	b.n	8020a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020bf4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020bf6:	449a      	add	sl, r3
 8020bf8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020bfa:	441d      	add	r5, r3
 8020bfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020bfe:	3b01      	subs	r3, #1
 8020c00:	9309      	str	r3, [sp, #36]	; 0x24
 8020c02:	f108 0802 	add.w	r8, r8, #2
 8020c06:	e718      	b.n	8020a3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020c08:	d023      	beq.n	8020c52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020c0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c0c:	9825      	ldr	r0, [sp, #148]	; 0x94
 8020c0e:	3b01      	subs	r3, #1
 8020c10:	fb00 a003 	mla	r0, r0, r3, sl
 8020c14:	1400      	asrs	r0, r0, #16
 8020c16:	f53f af2d 	bmi.w	8020a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c1a:	3901      	subs	r1, #1
 8020c1c:	4288      	cmp	r0, r1
 8020c1e:	f6bf af29 	bge.w	8020a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c22:	9926      	ldr	r1, [sp, #152]	; 0x98
 8020c24:	fb01 5303 	mla	r3, r1, r3, r5
 8020c28:	141b      	asrs	r3, r3, #16
 8020c2a:	f53f af23 	bmi.w	8020a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c2e:	3a01      	subs	r2, #1
 8020c30:	4293      	cmp	r3, r2
 8020c32:	f6bf af1f 	bge.w	8020a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020c36:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8020c3a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8020c3e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8020c42:	f1be 0f00 	cmp.w	lr, #0
 8020c46:	dc6c      	bgt.n	8020d22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020c48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c4a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020c4e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8020c52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020c54:	2b00      	cmp	r3, #0
 8020c56:	f340 810e 	ble.w	8020e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020c5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020c5e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020c62:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020c66:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020c68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020c6c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020c70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020c74:	eef0 6a62 	vmov.f32	s13, s5
 8020c78:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020c7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c80:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020c84:	ee16 aa90 	vmov	sl, s13
 8020c88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020c8c:	eef0 6a43 	vmov.f32	s13, s6
 8020c90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020c94:	ee12 2a90 	vmov	r2, s5
 8020c98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020c9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ca0:	ee13 2a10 	vmov	r2, s6
 8020ca4:	9325      	str	r3, [sp, #148]	; 0x94
 8020ca6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020ca8:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cac:	9326      	str	r3, [sp, #152]	; 0x98
 8020cae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020cb0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8020cb2:	3b01      	subs	r3, #1
 8020cb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020cb8:	930c      	str	r3, [sp, #48]	; 0x30
 8020cba:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020cbc:	bf08      	it	eq
 8020cbe:	4613      	moveq	r3, r2
 8020cc0:	ee16 5a90 	vmov	r5, s13
 8020cc4:	9309      	str	r3, [sp, #36]	; 0x24
 8020cc6:	eeb0 3a67 	vmov.f32	s6, s15
 8020cca:	eef0 2a47 	vmov.f32	s5, s14
 8020cce:	e6a6      	b.n	8020a1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020cd0:	2900      	cmp	r1, #0
 8020cd2:	f43f af10 	beq.w	8020af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020cd6:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020cda:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020cde:	930f      	str	r3, [sp, #60]	; 0x3c
 8020ce0:	e709      	b.n	8020af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020ce2:	f112 0901 	adds.w	r9, r2, #1
 8020ce6:	f53f af7d 	bmi.w	8020be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020cea:	454b      	cmp	r3, r9
 8020cec:	f6ff af7a 	blt.w	8020be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020cf0:	f11c 0901 	adds.w	r9, ip, #1
 8020cf4:	f53f af76 	bmi.w	8020be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020cf8:	45ce      	cmp	lr, r9
 8020cfa:	f6ff af73 	blt.w	8020be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020cfe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020d00:	9202      	str	r2, [sp, #8]
 8020d02:	b21b      	sxth	r3, r3
 8020d04:	fa0f f28e 	sxth.w	r2, lr
 8020d08:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020d0c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8020d10:	9201      	str	r2, [sp, #4]
 8020d12:	9300      	str	r3, [sp, #0]
 8020d14:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020d16:	9816      	ldr	r0, [sp, #88]	; 0x58
 8020d18:	4633      	mov	r3, r6
 8020d1a:	4639      	mov	r1, r7
 8020d1c:	f7ff fd8e 	bl	802083c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8020d20:	e760      	b.n	8020be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020d22:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020d24:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020d26:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020d2a:	ea4f 422a 	mov.w	r2, sl, asr #16
 8020d2e:	1429      	asrs	r1, r5, #16
 8020d30:	fb03 2101 	mla	r1, r3, r1, r2
 8020d34:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020d36:	440a      	add	r2, r1
 8020d38:	5c61      	ldrb	r1, [r4, r1]
 8020d3a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8020d3e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020d42:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8020d46:	f1bc 0f00 	cmp.w	ip, #0
 8020d4a:	f000 808c 	beq.w	8020e66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8020d4e:	7857      	ldrb	r7, [r2, #1]
 8020d50:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8020d54:	9413      	str	r4, [sp, #76]	; 0x4c
 8020d56:	b140      	cbz	r0, 8020d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020d58:	18d7      	adds	r7, r2, r3
 8020d5a:	5cd3      	ldrb	r3, [r2, r3]
 8020d5c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020d60:	9310      	str	r3, [sp, #64]	; 0x40
 8020d62:	787b      	ldrb	r3, [r7, #1]
 8020d64:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020d68:	9314      	str	r3, [sp, #80]	; 0x50
 8020d6a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8020d6c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020d6e:	fb1c f200 	smulbb	r2, ip, r0
 8020d72:	041f      	lsls	r7, r3, #16
 8020d74:	10d2      	asrs	r2, r2, #3
 8020d76:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020d7a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8020d7e:	431f      	orrs	r7, r3
 8020d80:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8020d84:	9317      	str	r3, [sp, #92]	; 0x5c
 8020d86:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020d88:	041b      	lsls	r3, r3, #16
 8020d8a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8020d8e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020d92:	ea43 030b 	orr.w	r3, r3, fp
 8020d96:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020d98:	4353      	muls	r3, r2
 8020d9a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020d9e:	fb04 3707 	mla	r7, r4, r7, r3
 8020da2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020da6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020daa:	ea43 0b01 	orr.w	fp, r3, r1
 8020dae:	f1c0 0110 	rsb	r1, r0, #16
 8020db2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020db4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020db6:	eba1 0c0c 	sub.w	ip, r1, ip
 8020dba:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020dbe:	fb0c 770b 	mla	r7, ip, fp, r7
 8020dc2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020dc6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8020dca:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020dce:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020dd2:	ea4c 0c0b 	orr.w	ip, ip, fp
 8020dd6:	fb02 770c 	mla	r7, r2, ip, r7
 8020dda:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8020ddc:	0d79      	lsrs	r1, r7, #21
 8020dde:	097f      	lsrs	r7, r7, #5
 8020de0:	8812      	ldrh	r2, [r2, #0]
 8020de2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020de6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020dea:	430f      	orrs	r7, r1
 8020dec:	b2bb      	uxth	r3, r7
 8020dee:	1211      	asrs	r1, r2, #8
 8020df0:	1218      	asrs	r0, r3, #8
 8020df2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020df6:	fb11 f104 	smulbb	r1, r1, r4
 8020dfa:	10d7      	asrs	r7, r2, #3
 8020dfc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020e00:	00d2      	lsls	r2, r2, #3
 8020e02:	fb00 1009 	mla	r0, r0, r9, r1
 8020e06:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020e0a:	10d9      	asrs	r1, r3, #3
 8020e0c:	b2d2      	uxtb	r2, r2
 8020e0e:	00db      	lsls	r3, r3, #3
 8020e10:	fb17 f704 	smulbb	r7, r7, r4
 8020e14:	fb12 f204 	smulbb	r2, r2, r4
 8020e18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020e1c:	b2db      	uxtb	r3, r3
 8020e1e:	b280      	uxth	r0, r0
 8020e20:	fb01 7109 	mla	r1, r1, r9, r7
 8020e24:	fb03 2309 	mla	r3, r3, r9, r2
 8020e28:	b29b      	uxth	r3, r3
 8020e2a:	b289      	uxth	r1, r1
 8020e2c:	1c42      	adds	r2, r0, #1
 8020e2e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020e32:	1c4f      	adds	r7, r1, #1
 8020e34:	1c5a      	adds	r2, r3, #1
 8020e36:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020e3a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020e3e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020e42:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020e46:	0949      	lsrs	r1, r1, #5
 8020e48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020e4a:	4310      	orrs	r0, r2
 8020e4c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020e50:	4308      	orrs	r0, r1
 8020e52:	f823 0b02 	strh.w	r0, [r3], #2
 8020e56:	930e      	str	r3, [sp, #56]	; 0x38
 8020e58:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020e5a:	449a      	add	sl, r3
 8020e5c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8020e5e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8020e62:	441d      	add	r5, r3
 8020e64:	e6ed      	b.n	8020c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8020e66:	2800      	cmp	r0, #0
 8020e68:	f43f af7f 	beq.w	8020d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020e6c:	5cd3      	ldrb	r3, [r2, r3]
 8020e6e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020e72:	9310      	str	r3, [sp, #64]	; 0x40
 8020e74:	e779      	b.n	8020d6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020e76:	b019      	add	sp, #100	; 0x64
 8020e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8020e7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020e80:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8020e84:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8020e88:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8020e8c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8020e90:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8020e94:	8808      	ldrh	r0, [r1, #0]
 8020e96:	fb08 470e 	mla	r7, r8, lr, r4
 8020e9a:	f1b8 0f00 	cmp.w	r8, #0
 8020e9e:	eb02 0907 	add.w	r9, r2, r7
 8020ea2:	db67      	blt.n	8020f74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020ea4:	45c2      	cmp	sl, r8
 8020ea6:	dd65      	ble.n	8020f74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020ea8:	2c00      	cmp	r4, #0
 8020eaa:	db61      	blt.n	8020f70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020eac:	45a6      	cmp	lr, r4
 8020eae:	dd5f      	ble.n	8020f70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020eb0:	5dd2      	ldrb	r2, [r2, r7]
 8020eb2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8020eb6:	1c62      	adds	r2, r4, #1
 8020eb8:	d45f      	bmi.n	8020f7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020eba:	4596      	cmp	lr, r2
 8020ebc:	dd5d      	ble.n	8020f7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020ebe:	2d00      	cmp	r5, #0
 8020ec0:	d05b      	beq.n	8020f7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020ec2:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020ec6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8020eca:	f118 0801 	adds.w	r8, r8, #1
 8020ece:	d458      	bmi.n	8020f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020ed0:	45c2      	cmp	sl, r8
 8020ed2:	dd56      	ble.n	8020f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020ed4:	2e00      	cmp	r6, #0
 8020ed6:	d054      	beq.n	8020f82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020ed8:	2c00      	cmp	r4, #0
 8020eda:	db50      	blt.n	8020f7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020edc:	45a6      	cmp	lr, r4
 8020ede:	dd4e      	ble.n	8020f7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020ee0:	f819 200e 	ldrb.w	r2, [r9, lr]
 8020ee4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8020ee8:	3401      	adds	r4, #1
 8020eea:	d407      	bmi.n	8020efc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020eec:	45a6      	cmp	lr, r4
 8020eee:	dd05      	ble.n	8020efc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020ef0:	b125      	cbz	r5, 8020efc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020ef2:	44ce      	add	lr, r9
 8020ef4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020ef8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8020efc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020f00:	fb15 f406 	smulbb	r4, r5, r6
 8020f04:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020f08:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020f0c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020f10:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020f14:	ea43 0c0c 	orr.w	ip, r3, ip
 8020f18:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020f1c:	f1c6 0310 	rsb	r3, r6, #16
 8020f20:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020f24:	1b5b      	subs	r3, r3, r5
 8020f26:	ea4e 0707 	orr.w	r7, lr, r7
 8020f2a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020f2e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020f32:	437d      	muls	r5, r7
 8020f34:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020f38:	0403      	lsls	r3, r0, #16
 8020f3a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020f3e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020f42:	4318      	orrs	r0, r3
 8020f44:	0413      	lsls	r3, r2, #16
 8020f46:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020f4a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020f4e:	4313      	orrs	r3, r2
 8020f50:	fb04 c000 	mla	r0, r4, r0, ip
 8020f54:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020f58:	fb06 0003 	mla	r0, r6, r3, r0
 8020f5c:	0d43      	lsrs	r3, r0, #21
 8020f5e:	0940      	lsrs	r0, r0, #5
 8020f60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020f64:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020f68:	4318      	orrs	r0, r3
 8020f6a:	8008      	strh	r0, [r1, #0]
 8020f6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020f70:	4684      	mov	ip, r0
 8020f72:	e7a0      	b.n	8020eb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8020f74:	4607      	mov	r7, r0
 8020f76:	4684      	mov	ip, r0
 8020f78:	e7a7      	b.n	8020eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020f7a:	4607      	mov	r7, r0
 8020f7c:	e7a5      	b.n	8020eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020f7e:	4602      	mov	r2, r0
 8020f80:	e7b2      	b.n	8020ee8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8020f82:	4602      	mov	r2, r0
 8020f84:	e7ba      	b.n	8020efc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08020f86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020f86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f8a:	b093      	sub	sp, #76	; 0x4c
 8020f8c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020f90:	920f      	str	r2, [sp, #60]	; 0x3c
 8020f92:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020f94:	9108      	str	r1, [sp, #32]
 8020f96:	9306      	str	r3, [sp, #24]
 8020f98:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020f9c:	9010      	str	r0, [sp, #64]	; 0x40
 8020f9e:	6850      	ldr	r0, [r2, #4]
 8020fa0:	6812      	ldr	r2, [r2, #0]
 8020fa2:	fb00 1303 	mla	r3, r0, r3, r1
 8020fa6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020faa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020fac:	681b      	ldr	r3, [r3, #0]
 8020fae:	9307      	str	r3, [sp, #28]
 8020fb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020fb2:	685f      	ldr	r7, [r3, #4]
 8020fb4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020fb8:	3704      	adds	r7, #4
 8020fba:	9b08      	ldr	r3, [sp, #32]
 8020fbc:	2b00      	cmp	r3, #0
 8020fbe:	dc03      	bgt.n	8020fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020fc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020fc2:	2b00      	cmp	r3, #0
 8020fc4:	f340 81b2 	ble.w	802132c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020fc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020fca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020fce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020fd2:	1e48      	subs	r0, r1, #1
 8020fd4:	f102 3cff 	add.w	ip, r2, #4294967295
 8020fd8:	9b06      	ldr	r3, [sp, #24]
 8020fda:	2b00      	cmp	r3, #0
 8020fdc:	f340 80a9 	ble.w	8021132 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020fe0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020fe4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020fe8:	d406      	bmi.n	8020ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020fea:	4586      	cmp	lr, r0
 8020fec:	da04      	bge.n	8020ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020fee:	2b00      	cmp	r3, #0
 8020ff0:	db02      	blt.n	8020ff8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020ff2:	4563      	cmp	r3, ip
 8020ff4:	f2c0 809e 	blt.w	8021134 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020ff8:	f11e 0e01 	adds.w	lr, lr, #1
 8020ffc:	f100 808f 	bmi.w	802111e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021000:	4571      	cmp	r1, lr
 8021002:	f2c0 808c 	blt.w	802111e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021006:	3301      	adds	r3, #1
 8021008:	f100 8089 	bmi.w	802111e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802100c:	429a      	cmp	r2, r3
 802100e:	f2c0 8086 	blt.w	802111e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021012:	f8dd b018 	ldr.w	fp, [sp, #24]
 8021016:	46c8      	mov	r8, r9
 8021018:	f1bb 0f00 	cmp.w	fp, #0
 802101c:	f340 80a6 	ble.w	802116c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8021020:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8021022:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021024:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021028:	689b      	ldr	r3, [r3, #8]
 802102a:	1422      	asrs	r2, r4, #16
 802102c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021030:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021034:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021038:	f100 80e3 	bmi.w	8021202 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802103c:	f103 3aff 	add.w	sl, r3, #4294967295
 8021040:	4552      	cmp	r2, sl
 8021042:	f280 80de 	bge.w	8021202 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021046:	f1bc 0f00 	cmp.w	ip, #0
 802104a:	f2c0 80da 	blt.w	8021202 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802104e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8021052:	45d4      	cmp	ip, sl
 8021054:	f280 80d5 	bge.w	8021202 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8021058:	b21b      	sxth	r3, r3
 802105a:	fb0c 2203 	mla	r2, ip, r3, r2
 802105e:	9d07      	ldr	r5, [sp, #28]
 8021060:	eb05 0a02 	add.w	sl, r5, r2
 8021064:	5caa      	ldrb	r2, [r5, r2]
 8021066:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 802106a:	2800      	cmp	r0, #0
 802106c:	f000 80c0 	beq.w	80211f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8021070:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021074:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8021078:	920b      	str	r2, [sp, #44]	; 0x2c
 802107a:	b151      	cbz	r1, 8021092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802107c:	eb0a 0203 	add.w	r2, sl, r3
 8021080:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8021084:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021088:	9309      	str	r3, [sp, #36]	; 0x24
 802108a:	7853      	ldrb	r3, [r2, #1]
 802108c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021090:	930c      	str	r3, [sp, #48]	; 0x30
 8021092:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021094:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021096:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802109a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802109e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80210a2:	ea4c 0c03 	orr.w	ip, ip, r3
 80210a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80210a8:	041b      	lsls	r3, r3, #16
 80210aa:	fb10 f201 	smulbb	r2, r0, r1
 80210ae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80210b2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80210b6:	10d2      	asrs	r2, r2, #3
 80210b8:	432b      	orrs	r3, r5
 80210ba:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80210be:	4353      	muls	r3, r2
 80210c0:	fb0a 330c 	mla	r3, sl, ip, r3
 80210c4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80210c8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80210cc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80210d0:	ea4c 0e0e 	orr.w	lr, ip, lr
 80210d4:	f1c1 0c10 	rsb	ip, r1, #16
 80210d8:	ebac 0c00 	sub.w	ip, ip, r0
 80210dc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80210e0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80210e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80210e6:	0418      	lsls	r0, r3, #16
 80210e8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80210ec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80210f0:	4318      	orrs	r0, r3
 80210f2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80210f6:	fb02 c200 	mla	r2, r2, r0, ip
 80210fa:	0d53      	lsrs	r3, r2, #21
 80210fc:	0952      	lsrs	r2, r2, #5
 80210fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021102:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021106:	431a      	orrs	r2, r3
 8021108:	f8a8 2000 	strh.w	r2, [r8]
 802110c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802110e:	441c      	add	r4, r3
 8021110:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021112:	f108 0802 	add.w	r8, r8, #2
 8021116:	441e      	add	r6, r3
 8021118:	f10b 3bff 	add.w	fp, fp, #4294967295
 802111c:	e77c      	b.n	8021018 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802111e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021120:	441c      	add	r4, r3
 8021122:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021124:	441e      	add	r6, r3
 8021126:	9b06      	ldr	r3, [sp, #24]
 8021128:	3b01      	subs	r3, #1
 802112a:	9306      	str	r3, [sp, #24]
 802112c:	f109 0902 	add.w	r9, r9, #2
 8021130:	e752      	b.n	8020fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021132:	d020      	beq.n	8021176 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8021134:	9b06      	ldr	r3, [sp, #24]
 8021136:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8021138:	3b01      	subs	r3, #1
 802113a:	fb00 4003 	mla	r0, r0, r3, r4
 802113e:	1400      	asrs	r0, r0, #16
 8021140:	f53f af67 	bmi.w	8021012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021144:	3901      	subs	r1, #1
 8021146:	4288      	cmp	r0, r1
 8021148:	f6bf af63 	bge.w	8021012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802114c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802114e:	fb01 6303 	mla	r3, r1, r3, r6
 8021152:	141b      	asrs	r3, r3, #16
 8021154:	f53f af5d 	bmi.w	8021012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021158:	3a01      	subs	r2, #1
 802115a:	4293      	cmp	r3, r2
 802115c:	f6bf af59 	bge.w	8021012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8021160:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8021164:	46ca      	mov	sl, r9
 8021166:	f1b8 0f00 	cmp.w	r8, #0
 802116a:	dc67      	bgt.n	802123c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 802116c:	9b06      	ldr	r3, [sp, #24]
 802116e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8021172:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8021176:	9b08      	ldr	r3, [sp, #32]
 8021178:	2b00      	cmp	r3, #0
 802117a:	f340 80d7 	ble.w	802132c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802117e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021182:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021186:	eec6 7a80 	vdiv.f32	s15, s13, s0
 802118a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802118c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021190:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021194:	eeb0 6a62 	vmov.f32	s12, s5
 8021198:	ee61 7a27 	vmul.f32	s15, s2, s15
 802119c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80211a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80211a4:	ee16 4a10 	vmov	r4, s12
 80211a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80211ac:	eeb0 6a43 	vmov.f32	s12, s6
 80211b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80211b4:	ee12 2a90 	vmov	r2, s5
 80211b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80211bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80211c0:	ee13 2a10 	vmov	r2, s6
 80211c4:	931f      	str	r3, [sp, #124]	; 0x7c
 80211c6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80211c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80211cc:	9320      	str	r3, [sp, #128]	; 0x80
 80211ce:	9b08      	ldr	r3, [sp, #32]
 80211d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80211d2:	3b01      	subs	r3, #1
 80211d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80211d8:	9308      	str	r3, [sp, #32]
 80211da:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80211dc:	bf08      	it	eq
 80211de:	4613      	moveq	r3, r2
 80211e0:	ee16 6a10 	vmov	r6, s12
 80211e4:	9306      	str	r3, [sp, #24]
 80211e6:	eeb0 3a67 	vmov.f32	s6, s15
 80211ea:	eef0 2a47 	vmov.f32	s5, s14
 80211ee:	e6e4      	b.n	8020fba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80211f0:	2900      	cmp	r1, #0
 80211f2:	f43f af4e 	beq.w	8021092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80211f6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80211fa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80211fe:	9309      	str	r3, [sp, #36]	; 0x24
 8021200:	e747      	b.n	8021092 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8021202:	f112 0a01 	adds.w	sl, r2, #1
 8021206:	d481      	bmi.n	802110c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021208:	4553      	cmp	r3, sl
 802120a:	f6ff af7f 	blt.w	802110c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802120e:	f11c 0a01 	adds.w	sl, ip, #1
 8021212:	f53f af7b 	bmi.w	802110c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8021216:	45d6      	cmp	lr, sl
 8021218:	f6ff af78 	blt.w	802110c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802121c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8021220:	b21b      	sxth	r3, r3
 8021222:	fa0f f28e 	sxth.w	r2, lr
 8021226:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802122a:	9201      	str	r2, [sp, #4]
 802122c:	9300      	str	r3, [sp, #0]
 802122e:	9a07      	ldr	r2, [sp, #28]
 8021230:	9810      	ldr	r0, [sp, #64]	; 0x40
 8021232:	463b      	mov	r3, r7
 8021234:	4641      	mov	r1, r8
 8021236:	f7ff fe21 	bl	8020e7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802123a:	e767      	b.n	802110c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802123c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802123e:	9d07      	ldr	r5, [sp, #28]
 8021240:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8021244:	1422      	asrs	r2, r4, #16
 8021246:	1431      	asrs	r1, r6, #16
 8021248:	fb03 2101 	mla	r1, r3, r1, r2
 802124c:	9a07      	ldr	r2, [sp, #28]
 802124e:	440a      	add	r2, r1
 8021250:	5c69      	ldrb	r1, [r5, r1]
 8021252:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8021256:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802125a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802125e:	f1be 0f00 	cmp.w	lr, #0
 8021262:	d05c      	beq.n	802131e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8021264:	f892 c001 	ldrb.w	ip, [r2, #1]
 8021268:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 802126c:	950d      	str	r5, [sp, #52]	; 0x34
 802126e:	b150      	cbz	r0, 8021286 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8021270:	eb02 0c03 	add.w	ip, r2, r3
 8021274:	5cd3      	ldrb	r3, [r2, r3]
 8021276:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802127a:	930a      	str	r3, [sp, #40]	; 0x28
 802127c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8021280:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021284:	930e      	str	r3, [sp, #56]	; 0x38
 8021286:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021288:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802128a:	fb1e f200 	smulbb	r2, lr, r0
 802128e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8021292:	10d2      	asrs	r2, r2, #3
 8021294:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8021298:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802129c:	ea4c 0c03 	orr.w	ip, ip, r3
 80212a0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80212a4:	9311      	str	r3, [sp, #68]	; 0x44
 80212a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80212a8:	041b      	lsls	r3, r3, #16
 80212aa:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80212ae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80212b2:	ea43 030b 	orr.w	r3, r3, fp
 80212b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80212b8:	4353      	muls	r3, r2
 80212ba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80212be:	fb05 3c0c 	mla	ip, r5, ip, r3
 80212c2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80212c6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80212ca:	ea43 0b01 	orr.w	fp, r3, r1
 80212ce:	f1c0 0110 	rsb	r1, r0, #16
 80212d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80212d4:	eba1 0e0e 	sub.w	lr, r1, lr
 80212d8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80212dc:	fb0e cc0b 	mla	ip, lr, fp, ip
 80212e0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80212e4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80212e8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80212ec:	ea4b 0e0e 	orr.w	lr, fp, lr
 80212f0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80212f4:	fb02 cc0e 	mla	ip, r2, lr, ip
 80212f8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80212fc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021300:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021304:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8021308:	ea43 0c0c 	orr.w	ip, r3, ip
 802130c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802130e:	f82a cb02 	strh.w	ip, [sl], #2
 8021312:	441c      	add	r4, r3
 8021314:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021316:	f108 38ff 	add.w	r8, r8, #4294967295
 802131a:	441e      	add	r6, r3
 802131c:	e723      	b.n	8021166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802131e:	2800      	cmp	r0, #0
 8021320:	d0b1      	beq.n	8021286 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8021322:	5cd3      	ldrb	r3, [r2, r3]
 8021324:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8021328:	930a      	str	r3, [sp, #40]	; 0x28
 802132a:	e7ac      	b.n	8021286 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802132c:	b013      	add	sp, #76	; 0x4c
 802132e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8021332:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021336:	880d      	ldrh	r5, [r1, #0]
 8021338:	b087      	sub	sp, #28
 802133a:	10ef      	asrs	r7, r5, #3
 802133c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8021340:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021344:	00ed      	lsls	r5, r5, #3
 8021346:	9701      	str	r7, [sp, #4]
 8021348:	b2ed      	uxtb	r5, r5
 802134a:	9502      	str	r5, [sp, #8]
 802134c:	9d01      	ldr	r5, [sp, #4]
 802134e:	9103      	str	r1, [sp, #12]
 8021350:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8021354:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8021358:	9902      	ldr	r1, [sp, #8]
 802135a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802135e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8021362:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8021366:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 802136a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802136e:	022d      	lsls	r5, r5, #8
 8021370:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8021374:	fb06 0709 	mla	r7, r6, r9, r0
 8021378:	430d      	orrs	r5, r1
 802137a:	2e00      	cmp	r6, #0
 802137c:	eb02 0c07 	add.w	ip, r2, r7
 8021380:	9505      	str	r5, [sp, #20]
 8021382:	f2c0 80b6 	blt.w	80214f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8021386:	45b3      	cmp	fp, r6
 8021388:	f340 80b3 	ble.w	80214f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 802138c:	2800      	cmp	r0, #0
 802138e:	f2c0 80ae 	blt.w	80214ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8021392:	4581      	cmp	r9, r0
 8021394:	f340 80ab 	ble.w	80214ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8021398:	5dd7      	ldrb	r7, [r2, r7]
 802139a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802139e:	441f      	add	r7, r3
 80213a0:	1c42      	adds	r2, r0, #1
 80213a2:	f100 80a9 	bmi.w	80214f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80213a6:	4591      	cmp	r9, r2
 80213a8:	f340 80a6 	ble.w	80214f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80213ac:	2c00      	cmp	r4, #0
 80213ae:	f000 80a3 	beq.w	80214f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80213b2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80213b6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80213ba:	441d      	add	r5, r3
 80213bc:	3601      	adds	r6, #1
 80213be:	f100 809f 	bmi.w	8021500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80213c2:	45b3      	cmp	fp, r6
 80213c4:	f340 809c 	ble.w	8021500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80213c8:	f1be 0f00 	cmp.w	lr, #0
 80213cc:	f000 8098 	beq.w	8021500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80213d0:	2800      	cmp	r0, #0
 80213d2:	f2c0 8093 	blt.w	80214fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80213d6:	4581      	cmp	r9, r0
 80213d8:	f340 8090 	ble.w	80214fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80213dc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80213e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80213e4:	441e      	add	r6, r3
 80213e6:	3001      	adds	r0, #1
 80213e8:	f100 808d 	bmi.w	8021506 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80213ec:	4581      	cmp	r9, r0
 80213ee:	f340 808a 	ble.w	8021506 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80213f2:	2c00      	cmp	r4, #0
 80213f4:	f000 8087 	beq.w	8021506 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80213f8:	44e1      	add	r9, ip
 80213fa:	f899 2001 	ldrb.w	r2, [r9, #1]
 80213fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021402:	4413      	add	r3, r2
 8021404:	b2a4      	uxth	r4, r4
 8021406:	fa1f fe8e 	uxth.w	lr, lr
 802140a:	fb04 fb0e 	mul.w	fp, r4, lr
 802140e:	0124      	lsls	r4, r4, #4
 8021410:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8021414:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8021418:	eba4 040b 	sub.w	r4, r4, fp
 802141c:	fa1f f08e 	uxth.w	r0, lr
 8021420:	b2a2      	uxth	r2, r4
 8021422:	78ac      	ldrb	r4, [r5, #2]
 8021424:	f897 c002 	ldrb.w	ip, [r7, #2]
 8021428:	9901      	ldr	r1, [sp, #4]
 802142a:	eba9 0900 	sub.w	r9, r9, r0
 802142e:	fa1f f989 	uxth.w	r9, r9
 8021432:	4354      	muls	r4, r2
 8021434:	fb09 440c 	mla	r4, r9, ip, r4
 8021438:	f896 c002 	ldrb.w	ip, [r6, #2]
 802143c:	fb00 440c 	mla	r4, r0, ip, r4
 8021440:	f893 c002 	ldrb.w	ip, [r3, #2]
 8021444:	fa1f fe88 	uxth.w	lr, r8
 8021448:	ea6f 0808 	mvn.w	r8, r8
 802144c:	fa5f f888 	uxtb.w	r8, r8
 8021450:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8021454:	fb1a fa08 	smulbb	sl, sl, r8
 8021458:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 802145c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8021460:	f895 a001 	ldrb.w	sl, [r5, #1]
 8021464:	787c      	ldrb	r4, [r7, #1]
 8021466:	782d      	ldrb	r5, [r5, #0]
 8021468:	783f      	ldrb	r7, [r7, #0]
 802146a:	fb02 fa0a 	mul.w	sl, r2, sl
 802146e:	fb09 aa04 	mla	sl, r9, r4, sl
 8021472:	7874      	ldrb	r4, [r6, #1]
 8021474:	436a      	muls	r2, r5
 8021476:	7835      	ldrb	r5, [r6, #0]
 8021478:	fb00 aa04 	mla	sl, r0, r4, sl
 802147c:	fb09 2207 	mla	r2, r9, r7, r2
 8021480:	785c      	ldrb	r4, [r3, #1]
 8021482:	781b      	ldrb	r3, [r3, #0]
 8021484:	fb00 2005 	mla	r0, r0, r5, r2
 8021488:	fb0b a404 	mla	r4, fp, r4, sl
 802148c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8021490:	9b02      	ldr	r3, [sp, #8]
 8021492:	fb11 fa08 	smulbb	sl, r1, r8
 8021496:	fa1f fc8c 	uxth.w	ip, ip
 802149a:	fb13 f808 	smulbb	r8, r3, r8
 802149e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80214a2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80214a6:	fb04 a40e 	mla	r4, r4, lr, sl
 80214aa:	f10c 0301 	add.w	r3, ip, #1
 80214ae:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80214b2:	fa1f fe8e 	uxth.w	lr, lr
 80214b6:	b2a4      	uxth	r4, r4
 80214b8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80214bc:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80214c0:	f104 0a01 	add.w	sl, r4, #1
 80214c4:	f10e 0c01 	add.w	ip, lr, #1
 80214c8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80214cc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80214d0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80214d4:	0964      	lsrs	r4, r4, #5
 80214d6:	ea4c 0c03 	orr.w	ip, ip, r3
 80214da:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80214de:	9b03      	ldr	r3, [sp, #12]
 80214e0:	ea4c 0c04 	orr.w	ip, ip, r4
 80214e4:	f8a3 c000 	strh.w	ip, [r3]
 80214e8:	b007      	add	sp, #28
 80214ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80214ee:	af05      	add	r7, sp, #20
 80214f0:	e756      	b.n	80213a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80214f2:	ad05      	add	r5, sp, #20
 80214f4:	462f      	mov	r7, r5
 80214f6:	e761      	b.n	80213bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80214f8:	ad05      	add	r5, sp, #20
 80214fa:	e75f      	b.n	80213bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80214fc:	ae05      	add	r6, sp, #20
 80214fe:	e772      	b.n	80213e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8021500:	ab05      	add	r3, sp, #20
 8021502:	461e      	mov	r6, r3
 8021504:	e77e      	b.n	8021404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8021506:	ab05      	add	r3, sp, #20
 8021508:	e77c      	b.n	8021404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802150a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802150a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802150e:	b095      	sub	sp, #84	; 0x54
 8021510:	9212      	str	r2, [sp, #72]	; 0x48
 8021512:	9309      	str	r3, [sp, #36]	; 0x24
 8021514:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021516:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802151a:	930f      	str	r3, [sp, #60]	; 0x3c
 802151c:	910e      	str	r1, [sp, #56]	; 0x38
 802151e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8021522:	9013      	str	r0, [sp, #76]	; 0x4c
 8021524:	6850      	ldr	r0, [r2, #4]
 8021526:	6812      	ldr	r2, [r2, #0]
 8021528:	fb00 1303 	mla	r3, r0, r3, r1
 802152c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021530:	930a      	str	r3, [sp, #40]	; 0x28
 8021532:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021534:	681b      	ldr	r3, [r3, #0]
 8021536:	930d      	str	r3, [sp, #52]	; 0x34
 8021538:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802153a:	685c      	ldr	r4, [r3, #4]
 802153c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802153e:	43db      	mvns	r3, r3
 8021540:	b2db      	uxtb	r3, r3
 8021542:	3404      	adds	r4, #4
 8021544:	930b      	str	r3, [sp, #44]	; 0x2c
 8021546:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021548:	2b00      	cmp	r3, #0
 802154a:	dc03      	bgt.n	8021554 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802154c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802154e:	2b00      	cmp	r3, #0
 8021550:	f340 8255 	ble.w	80219fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8021554:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021556:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802155a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802155e:	1e48      	subs	r0, r1, #1
 8021560:	1e55      	subs	r5, r2, #1
 8021562:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021564:	2b00      	cmp	r3, #0
 8021566:	f340 80f9 	ble.w	802175c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802156a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802156c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802156e:	1436      	asrs	r6, r6, #16
 8021570:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021574:	d406      	bmi.n	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021576:	4286      	cmp	r6, r0
 8021578:	da04      	bge.n	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802157a:	2b00      	cmp	r3, #0
 802157c:	db02      	blt.n	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802157e:	42ab      	cmp	r3, r5
 8021580:	f2c0 80ed 	blt.w	802175e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8021584:	3601      	adds	r6, #1
 8021586:	f100 80da 	bmi.w	802173e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802158a:	42b1      	cmp	r1, r6
 802158c:	f2c0 80d7 	blt.w	802173e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021590:	3301      	adds	r3, #1
 8021592:	f100 80d4 	bmi.w	802173e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8021596:	429a      	cmp	r2, r3
 8021598:	f2c0 80d1 	blt.w	802173e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802159c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802159e:	9311      	str	r3, [sp, #68]	; 0x44
 80215a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80215a2:	930c      	str	r3, [sp, #48]	; 0x30
 80215a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80215a6:	2b00      	cmp	r3, #0
 80215a8:	f340 80fa 	ble.w	80217a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80215ac:	9826      	ldr	r0, [sp, #152]	; 0x98
 80215ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80215b0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80215b2:	68c6      	ldr	r6, [r0, #12]
 80215b4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80215b6:	141d      	asrs	r5, r3, #16
 80215b8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80215bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80215be:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80215c0:	1400      	asrs	r0, r0, #16
 80215c2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80215c6:	6892      	ldr	r2, [r2, #8]
 80215c8:	f100 813e 	bmi.w	8021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215cc:	1e57      	subs	r7, r2, #1
 80215ce:	42b8      	cmp	r0, r7
 80215d0:	f280 813a 	bge.w	8021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215d4:	2d00      	cmp	r5, #0
 80215d6:	f2c0 8137 	blt.w	8021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215da:	1e77      	subs	r7, r6, #1
 80215dc:	42bd      	cmp	r5, r7
 80215de:	f280 8133 	bge.w	8021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80215e2:	b212      	sxth	r2, r2
 80215e4:	fb05 0002 	mla	r0, r5, r2, r0
 80215e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80215ea:	f815 a000 	ldrb.w	sl, [r5, r0]
 80215ee:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80215f2:	182e      	adds	r6, r5, r0
 80215f4:	eb04 050a 	add.w	r5, r4, sl
 80215f8:	2b00      	cmp	r3, #0
 80215fa:	f000 8117 	beq.w	802182c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80215fe:	f896 c001 	ldrb.w	ip, [r6, #1]
 8021602:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8021606:	44a4      	add	ip, r4
 8021608:	2900      	cmp	r1, #0
 802160a:	f000 8117 	beq.w	802183c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802160e:	18b0      	adds	r0, r6, r2
 8021610:	5cb2      	ldrb	r2, [r6, r2]
 8021612:	7840      	ldrb	r0, [r0, #1]
 8021614:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021618:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802161c:	4422      	add	r2, r4
 802161e:	4420      	add	r0, r4
 8021620:	b29b      	uxth	r3, r3
 8021622:	b289      	uxth	r1, r1
 8021624:	fb03 f901 	mul.w	r9, r3, r1
 8021628:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802162c:	011b      	lsls	r3, r3, #4
 802162e:	b289      	uxth	r1, r1
 8021630:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8021634:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021638:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802163a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802163e:	f8b6 e000 	ldrh.w	lr, [r6]
 8021642:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8021646:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802164a:	eba3 0309 	sub.w	r3, r3, r9
 802164e:	b29b      	uxth	r3, r3
 8021650:	eba8 0801 	sub.w	r8, r8, r1
 8021654:	fa1f f888 	uxth.w	r8, r8
 8021658:	435f      	muls	r7, r3
 802165a:	fb08 770b 	mla	r7, r8, fp, r7
 802165e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021662:	9310      	str	r3, [sp, #64]	; 0x40
 8021664:	fb01 770b 	mla	r7, r1, fp, r7
 8021668:	f890 b002 	ldrb.w	fp, [r0, #2]
 802166c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802166e:	fb09 770b 	mla	r7, r9, fp, r7
 8021672:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8021676:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802167a:	fb1b fb03 	smulbb	fp, fp, r3
 802167e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021682:	fb07 b706 	mla	r7, r7, r6, fp
 8021686:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021688:	f895 b001 	ldrb.w	fp, [r5, #1]
 802168c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8021690:	f89c c000 	ldrb.w	ip, [ip]
 8021694:	435d      	muls	r5, r3
 8021696:	fb08 550b 	mla	r5, r8, fp, r5
 802169a:	f892 b001 	ldrb.w	fp, [r2, #1]
 802169e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80216a0:	fb01 550b 	mla	r5, r1, fp, r5
 80216a4:	f890 b001 	ldrb.w	fp, [r0, #1]
 80216a8:	fb09 550b 	mla	r5, r9, fp, r5
 80216ac:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80216b0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80216b4:	fb1b fb03 	smulbb	fp, fp, r3
 80216b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80216ba:	fb03 f30c 	mul.w	r3, r3, ip
 80216be:	f892 c000 	ldrb.w	ip, [r2]
 80216c2:	fb08 330a 	mla	r3, r8, sl, r3
 80216c6:	fb01 330c 	mla	r3, r1, ip, r3
 80216ca:	f890 c000 	ldrb.w	ip, [r0]
 80216ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80216d2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80216d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80216d8:	fa5f fe8e 	uxtb.w	lr, lr
 80216dc:	b2bf      	uxth	r7, r7
 80216de:	fb1e fe03 	smulbb	lr, lr, r3
 80216e2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80216e6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80216ea:	fb05 b506 	mla	r5, r5, r6, fp
 80216ee:	1c7b      	adds	r3, r7, #1
 80216f0:	fb0c e606 	mla	r6, ip, r6, lr
 80216f4:	b2ad      	uxth	r5, r5
 80216f6:	b2b6      	uxth	r6, r6
 80216f8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80216fc:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8021700:	f105 0b01 	add.w	fp, r5, #1
 8021704:	1c77      	adds	r7, r6, #1
 8021706:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802170a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802170e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021712:	096d      	lsrs	r5, r5, #5
 8021714:	431f      	orrs	r7, r3
 8021716:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802171a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802171c:	433d      	orrs	r5, r7
 802171e:	801d      	strh	r5, [r3, #0]
 8021720:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021722:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021724:	3302      	adds	r3, #2
 8021726:	930c      	str	r3, [sp, #48]	; 0x30
 8021728:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802172a:	4413      	add	r3, r2
 802172c:	931f      	str	r3, [sp, #124]	; 0x7c
 802172e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021730:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021732:	4413      	add	r3, r2
 8021734:	9320      	str	r3, [sp, #128]	; 0x80
 8021736:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021738:	3b01      	subs	r3, #1
 802173a:	9311      	str	r3, [sp, #68]	; 0x44
 802173c:	e732      	b.n	80215a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802173e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021740:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021742:	4433      	add	r3, r6
 8021744:	931f      	str	r3, [sp, #124]	; 0x7c
 8021746:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8021748:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802174a:	4433      	add	r3, r6
 802174c:	9320      	str	r3, [sp, #128]	; 0x80
 802174e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021750:	3b01      	subs	r3, #1
 8021752:	9309      	str	r3, [sp, #36]	; 0x24
 8021754:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021756:	3302      	adds	r3, #2
 8021758:	930a      	str	r3, [sp, #40]	; 0x28
 802175a:	e702      	b.n	8021562 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802175c:	d027      	beq.n	80217ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802175e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021760:	9821      	ldr	r0, [sp, #132]	; 0x84
 8021762:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021764:	3b01      	subs	r3, #1
 8021766:	fb00 5003 	mla	r0, r0, r3, r5
 802176a:	1400      	asrs	r0, r0, #16
 802176c:	f53f af16 	bmi.w	802159c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021770:	3901      	subs	r1, #1
 8021772:	4288      	cmp	r0, r1
 8021774:	f6bf af12 	bge.w	802159c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021778:	9922      	ldr	r1, [sp, #136]	; 0x88
 802177a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802177c:	fb01 0303 	mla	r3, r1, r3, r0
 8021780:	141b      	asrs	r3, r3, #16
 8021782:	f53f af0b 	bmi.w	802159c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021786:	3a01      	subs	r2, #1
 8021788:	4293      	cmp	r3, r2
 802178a:	f6bf af07 	bge.w	802159c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802178e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021790:	9311      	str	r3, [sp, #68]	; 0x44
 8021792:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8021796:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021798:	930c      	str	r3, [sp, #48]	; 0x30
 802179a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802179c:	2b00      	cmp	r3, #0
 802179e:	dc70      	bgt.n	8021882 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80217a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217a2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80217a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80217a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80217ac:	930a      	str	r3, [sp, #40]	; 0x28
 80217ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80217b0:	2b00      	cmp	r3, #0
 80217b2:	f340 8124 	ble.w	80219fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80217b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80217ba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80217be:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80217c2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80217c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80217c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80217cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80217d0:	eef0 6a62 	vmov.f32	s13, s5
 80217d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80217d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80217dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80217e0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80217e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80217e8:	eef0 6a43 	vmov.f32	s13, s6
 80217ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80217f0:	ee12 2a90 	vmov	r2, s5
 80217f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80217f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80217fc:	ee13 2a10 	vmov	r2, s6
 8021800:	9321      	str	r3, [sp, #132]	; 0x84
 8021802:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021804:	fb92 f3f3 	sdiv	r3, r2, r3
 8021808:	9322      	str	r3, [sp, #136]	; 0x88
 802180a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802180c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802180e:	3b01      	subs	r3, #1
 8021810:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021814:	930e      	str	r3, [sp, #56]	; 0x38
 8021816:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021818:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802181c:	bf08      	it	eq
 802181e:	4613      	moveq	r3, r2
 8021820:	9309      	str	r3, [sp, #36]	; 0x24
 8021822:	eeb0 3a67 	vmov.f32	s6, s15
 8021826:	eef0 2a47 	vmov.f32	s5, s14
 802182a:	e68c      	b.n	8021546 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802182c:	b149      	cbz	r1, 8021842 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802182e:	5cb2      	ldrb	r2, [r6, r2]
 8021830:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021834:	4422      	add	r2, r4
 8021836:	4628      	mov	r0, r5
 8021838:	46ac      	mov	ip, r5
 802183a:	e6f1      	b.n	8021620 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802183c:	4628      	mov	r0, r5
 802183e:	462a      	mov	r2, r5
 8021840:	e6ee      	b.n	8021620 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021842:	4628      	mov	r0, r5
 8021844:	462a      	mov	r2, r5
 8021846:	e7f7      	b.n	8021838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021848:	1c47      	adds	r7, r0, #1
 802184a:	f53f af69 	bmi.w	8021720 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802184e:	42ba      	cmp	r2, r7
 8021850:	f6ff af66 	blt.w	8021720 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021854:	1c6f      	adds	r7, r5, #1
 8021856:	f53f af63 	bmi.w	8021720 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802185a:	42be      	cmp	r6, r7
 802185c:	f6ff af60 	blt.w	8021720 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021860:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8021862:	9002      	str	r0, [sp, #8]
 8021864:	b236      	sxth	r6, r6
 8021866:	b212      	sxth	r2, r2
 8021868:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802186c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8021870:	9200      	str	r2, [sp, #0]
 8021872:	9601      	str	r6, [sp, #4]
 8021874:	4623      	mov	r3, r4
 8021876:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802187a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802187c:	f7ff fd59 	bl	8021332 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021880:	e74e      	b.n	8021720 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021882:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021884:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021886:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021888:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802188a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802188e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8021890:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021894:	142d      	asrs	r5, r5, #16
 8021896:	1400      	asrs	r0, r0, #16
 8021898:	fb02 5000 	mla	r0, r2, r0, r5
 802189c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802189e:	f815 9000 	ldrb.w	r9, [r5, r0]
 80218a2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80218a6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80218aa:	182e      	adds	r6, r5, r0
 80218ac:	eb04 0509 	add.w	r5, r4, r9
 80218b0:	2b00      	cmp	r3, #0
 80218b2:	f000 8096 	beq.w	80219e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80218b6:	7877      	ldrb	r7, [r6, #1]
 80218b8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80218bc:	4427      	add	r7, r4
 80218be:	2900      	cmp	r1, #0
 80218c0:	f000 8097 	beq.w	80219f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80218c4:	18b0      	adds	r0, r6, r2
 80218c6:	5cb2      	ldrb	r2, [r6, r2]
 80218c8:	7840      	ldrb	r0, [r0, #1]
 80218ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80218ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80218d2:	4422      	add	r2, r4
 80218d4:	4420      	add	r0, r4
 80218d6:	b29b      	uxth	r3, r3
 80218d8:	b289      	uxth	r1, r1
 80218da:	fb03 f801 	mul.w	r8, r3, r1
 80218de:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80218e0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80218e4:	f8b6 c000 	ldrh.w	ip, [r6]
 80218e8:	78be      	ldrb	r6, [r7, #2]
 80218ea:	f814 9009 	ldrb.w	r9, [r4, r9]
 80218ee:	011b      	lsls	r3, r3, #4
 80218f0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80218f4:	b289      	uxth	r1, r1
 80218f6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80218fa:	eba3 0308 	sub.w	r3, r3, r8
 80218fe:	b29b      	uxth	r3, r3
 8021900:	ebae 0e01 	sub.w	lr, lr, r1
 8021904:	fa1f fe8e 	uxth.w	lr, lr
 8021908:	435e      	muls	r6, r3
 802190a:	fb0e 660b 	mla	r6, lr, fp, r6
 802190e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021912:	9310      	str	r3, [sp, #64]	; 0x40
 8021914:	fb01 660b 	mla	r6, r1, fp, r6
 8021918:	f890 b002 	ldrb.w	fp, [r0, #2]
 802191c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802191e:	fb08 660b 	mla	r6, r8, fp, r6
 8021922:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8021926:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802192a:	fb1b fb03 	smulbb	fp, fp, r3
 802192e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021932:	fb06 b60a 	mla	r6, r6, sl, fp
 8021936:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021938:	f895 b001 	ldrb.w	fp, [r5, #1]
 802193c:	787d      	ldrb	r5, [r7, #1]
 802193e:	783f      	ldrb	r7, [r7, #0]
 8021940:	435d      	muls	r5, r3
 8021942:	fb0e 550b 	mla	r5, lr, fp, r5
 8021946:	f892 b001 	ldrb.w	fp, [r2, #1]
 802194a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802194c:	fb01 550b 	mla	r5, r1, fp, r5
 8021950:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021954:	fb08 550b 	mla	r5, r8, fp, r5
 8021958:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802195c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021960:	fb1b fb03 	smulbb	fp, fp, r3
 8021964:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021966:	437b      	muls	r3, r7
 8021968:	7817      	ldrb	r7, [r2, #0]
 802196a:	fb0e 3309 	mla	r3, lr, r9, r3
 802196e:	fb01 3307 	mla	r3, r1, r7, r3
 8021972:	7807      	ldrb	r7, [r0, #0]
 8021974:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021978:	fb08 3707 	mla	r7, r8, r7, r3
 802197c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802197e:	fa5f fc8c 	uxtb.w	ip, ip
 8021982:	fb1c fc03 	smulbb	ip, ip, r3
 8021986:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802198a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802198e:	fb05 b50a 	mla	r5, r5, sl, fp
 8021992:	fb07 c70a 	mla	r7, r7, sl, ip
 8021996:	b2b6      	uxth	r6, r6
 8021998:	b2ad      	uxth	r5, r5
 802199a:	b2bf      	uxth	r7, r7
 802199c:	1c73      	adds	r3, r6, #1
 802199e:	1c7a      	adds	r2, r7, #1
 80219a0:	f105 0b01 	add.w	fp, r5, #1
 80219a4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80219a8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80219ac:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80219b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80219b4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80219b8:	096d      	lsrs	r5, r5, #5
 80219ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80219bc:	4316      	orrs	r6, r2
 80219be:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80219c2:	432e      	orrs	r6, r5
 80219c4:	f823 6b02 	strh.w	r6, [r3], #2
 80219c8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80219ca:	930c      	str	r3, [sp, #48]	; 0x30
 80219cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80219ce:	4413      	add	r3, r2
 80219d0:	931f      	str	r3, [sp, #124]	; 0x7c
 80219d2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80219d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80219d6:	4413      	add	r3, r2
 80219d8:	9320      	str	r3, [sp, #128]	; 0x80
 80219da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80219dc:	3b01      	subs	r3, #1
 80219de:	9311      	str	r3, [sp, #68]	; 0x44
 80219e0:	e6db      	b.n	802179a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80219e2:	b149      	cbz	r1, 80219f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80219e4:	5cb2      	ldrb	r2, [r6, r2]
 80219e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80219ea:	4422      	add	r2, r4
 80219ec:	4628      	mov	r0, r5
 80219ee:	462f      	mov	r7, r5
 80219f0:	e771      	b.n	80218d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80219f2:	4628      	mov	r0, r5
 80219f4:	462a      	mov	r2, r5
 80219f6:	e76e      	b.n	80218d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80219f8:	4628      	mov	r0, r5
 80219fa:	462a      	mov	r2, r5
 80219fc:	e7f7      	b.n	80219ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80219fe:	b015      	add	sp, #84	; 0x54
 8021a00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021a04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8021a04:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a08:	880f      	ldrh	r7, [r1, #0]
 8021a0a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8021a0e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8021a12:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8021a16:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8021a1a:	023c      	lsls	r4, r7, #8
 8021a1c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8021a20:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8021a24:	017c      	lsls	r4, r7, #5
 8021a26:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8021a2a:	00ff      	lsls	r7, r7, #3
 8021a2c:	ea4b 0404 	orr.w	r4, fp, r4
 8021a30:	b2ff      	uxtb	r7, r7
 8021a32:	fb05 ca0e 	mla	sl, r5, lr, ip
 8021a36:	4327      	orrs	r7, r4
 8021a38:	2d00      	cmp	r5, #0
 8021a3a:	eb02 080a 	add.w	r8, r2, sl
 8021a3e:	9701      	str	r7, [sp, #4]
 8021a40:	db7e      	blt.n	8021b40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021a42:	45a9      	cmp	r9, r5
 8021a44:	dd7c      	ble.n	8021b40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021a46:	f1bc 0f00 	cmp.w	ip, #0
 8021a4a:	db77      	blt.n	8021b3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021a4c:	45e6      	cmp	lr, ip
 8021a4e:	dd75      	ble.n	8021b3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021a50:	f812 700a 	ldrb.w	r7, [r2, sl]
 8021a54:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021a58:	441f      	add	r7, r3
 8021a5a:	f11c 0201 	adds.w	r2, ip, #1
 8021a5e:	d472      	bmi.n	8021b46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021a60:	4596      	cmp	lr, r2
 8021a62:	dd70      	ble.n	8021b46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021a64:	2800      	cmp	r0, #0
 8021a66:	d06e      	beq.n	8021b46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021a68:	f898 4001 	ldrb.w	r4, [r8, #1]
 8021a6c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021a70:	441c      	add	r4, r3
 8021a72:	3501      	adds	r5, #1
 8021a74:	d46b      	bmi.n	8021b4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021a76:	45a9      	cmp	r9, r5
 8021a78:	dd69      	ble.n	8021b4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021a7a:	2e00      	cmp	r6, #0
 8021a7c:	d067      	beq.n	8021b4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021a7e:	f1bc 0f00 	cmp.w	ip, #0
 8021a82:	db62      	blt.n	8021b4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021a84:	45e6      	cmp	lr, ip
 8021a86:	dd60      	ble.n	8021b4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021a88:	f818 500e 	ldrb.w	r5, [r8, lr]
 8021a8c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8021a90:	441d      	add	r5, r3
 8021a92:	f11c 0201 	adds.w	r2, ip, #1
 8021a96:	d45d      	bmi.n	8021b54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021a98:	4596      	cmp	lr, r2
 8021a9a:	dd5b      	ble.n	8021b54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021a9c:	2800      	cmp	r0, #0
 8021a9e:	d059      	beq.n	8021b54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021aa0:	44c6      	add	lr, r8
 8021aa2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021aa6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021aaa:	4413      	add	r3, r2
 8021aac:	b280      	uxth	r0, r0
 8021aae:	b2b2      	uxth	r2, r6
 8021ab0:	fb00 f602 	mul.w	r6, r0, r2
 8021ab4:	0100      	lsls	r0, r0, #4
 8021ab6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8021aba:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8021abe:	1b80      	subs	r0, r0, r6
 8021ac0:	fa1f fc82 	uxth.w	ip, r2
 8021ac4:	b282      	uxth	r2, r0
 8021ac6:	78a0      	ldrb	r0, [r4, #2]
 8021ac8:	f897 e002 	ldrb.w	lr, [r7, #2]
 8021acc:	f897 9000 	ldrb.w	r9, [r7]
 8021ad0:	787f      	ldrb	r7, [r7, #1]
 8021ad2:	eba8 080c 	sub.w	r8, r8, ip
 8021ad6:	fa1f f888 	uxth.w	r8, r8
 8021ada:	4350      	muls	r0, r2
 8021adc:	fb08 0e0e 	mla	lr, r8, lr, r0
 8021ae0:	78a8      	ldrb	r0, [r5, #2]
 8021ae2:	fb0c e000 	mla	r0, ip, r0, lr
 8021ae6:	f893 e002 	ldrb.w	lr, [r3, #2]
 8021aea:	fb06 0e0e 	mla	lr, r6, lr, r0
 8021aee:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8021af2:	f894 e000 	ldrb.w	lr, [r4]
 8021af6:	fb02 fe0e 	mul.w	lr, r2, lr
 8021afa:	fb08 e909 	mla	r9, r8, r9, lr
 8021afe:	f895 e000 	ldrb.w	lr, [r5]
 8021b02:	fb0c 990e 	mla	r9, ip, lr, r9
 8021b06:	f893 e000 	ldrb.w	lr, [r3]
 8021b0a:	785b      	ldrb	r3, [r3, #1]
 8021b0c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8021b10:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021b14:	ea4e 0e00 	orr.w	lr, lr, r0
 8021b18:	7860      	ldrb	r0, [r4, #1]
 8021b1a:	4350      	muls	r0, r2
 8021b1c:	786a      	ldrb	r2, [r5, #1]
 8021b1e:	fb08 0007 	mla	r0, r8, r7, r0
 8021b22:	fb0c 0202 	mla	r2, ip, r2, r0
 8021b26:	fb06 2303 	mla	r3, r6, r3, r2
 8021b2a:	095b      	lsrs	r3, r3, #5
 8021b2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021b30:	ea4e 0303 	orr.w	r3, lr, r3
 8021b34:	800b      	strh	r3, [r1, #0]
 8021b36:	b003      	add	sp, #12
 8021b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b3c:	af01      	add	r7, sp, #4
 8021b3e:	e78c      	b.n	8021a5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8021b40:	ac01      	add	r4, sp, #4
 8021b42:	4627      	mov	r7, r4
 8021b44:	e795      	b.n	8021a72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021b46:	ac01      	add	r4, sp, #4
 8021b48:	e793      	b.n	8021a72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021b4a:	ad01      	add	r5, sp, #4
 8021b4c:	e7a1      	b.n	8021a92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8021b4e:	ab01      	add	r3, sp, #4
 8021b50:	461d      	mov	r5, r3
 8021b52:	e7ab      	b.n	8021aac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8021b54:	ab01      	add	r3, sp, #4
 8021b56:	e7a9      	b.n	8021aac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08021b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021b5c:	b08f      	sub	sp, #60	; 0x3c
 8021b5e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8021b62:	920c      	str	r2, [sp, #48]	; 0x30
 8021b64:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8021b66:	910a      	str	r1, [sp, #40]	; 0x28
 8021b68:	9306      	str	r3, [sp, #24]
 8021b6a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8021b6e:	900d      	str	r0, [sp, #52]	; 0x34
 8021b70:	6850      	ldr	r0, [r2, #4]
 8021b72:	6812      	ldr	r2, [r2, #0]
 8021b74:	fb00 1303 	mla	r3, r0, r3, r1
 8021b78:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021b7c:	9307      	str	r3, [sp, #28]
 8021b7e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b80:	681b      	ldr	r3, [r3, #0]
 8021b82:	9308      	str	r3, [sp, #32]
 8021b84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b86:	685c      	ldr	r4, [r3, #4]
 8021b88:	3404      	adds	r4, #4
 8021b8a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021b8c:	2b00      	cmp	r3, #0
 8021b8e:	dc03      	bgt.n	8021b98 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8021b90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021b92:	2b00      	cmp	r3, #0
 8021b94:	f340 81d6 	ble.w	8021f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021b98:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021b9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021ba2:	1e48      	subs	r0, r1, #1
 8021ba4:	1e56      	subs	r6, r2, #1
 8021ba6:	9b06      	ldr	r3, [sp, #24]
 8021ba8:	2b00      	cmp	r3, #0
 8021baa:	f340 80b7 	ble.w	8021d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021bae:	ea5f 472b 	movs.w	r7, fp, asr #16
 8021bb2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021bb6:	d406      	bmi.n	8021bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bb8:	4287      	cmp	r7, r0
 8021bba:	da04      	bge.n	8021bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bbc:	2b00      	cmp	r3, #0
 8021bbe:	db02      	blt.n	8021bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021bc0:	42b3      	cmp	r3, r6
 8021bc2:	f2c0 80ac 	blt.w	8021d1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021bc6:	3701      	adds	r7, #1
 8021bc8:	f100 809d 	bmi.w	8021d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021bcc:	42b9      	cmp	r1, r7
 8021bce:	f2c0 809a 	blt.w	8021d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021bd2:	3301      	adds	r3, #1
 8021bd4:	f100 8097 	bmi.w	8021d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021bd8:	429a      	cmp	r2, r3
 8021bda:	f2c0 8094 	blt.w	8021d06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8021bde:	9b06      	ldr	r3, [sp, #24]
 8021be0:	930b      	str	r3, [sp, #44]	; 0x2c
 8021be2:	9b07      	ldr	r3, [sp, #28]
 8021be4:	9309      	str	r3, [sp, #36]	; 0x24
 8021be6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021be8:	2b00      	cmp	r3, #0
 8021bea:	f340 80b5 	ble.w	8021d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8021bee:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021bf0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021bf2:	68c7      	ldr	r7, [r0, #12]
 8021bf4:	6892      	ldr	r2, [r2, #8]
 8021bf6:	ea5f 402b 	movs.w	r0, fp, asr #16
 8021bfa:	ea4f 4625 	mov.w	r6, r5, asr #16
 8021bfe:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021c02:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021c06:	f100 80fb 	bmi.w	8021e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021c0a:	f102 3cff 	add.w	ip, r2, #4294967295
 8021c0e:	4560      	cmp	r0, ip
 8021c10:	f280 80f6 	bge.w	8021e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021c14:	2e00      	cmp	r6, #0
 8021c16:	f2c0 80f3 	blt.w	8021e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021c1a:	f107 3cff 	add.w	ip, r7, #4294967295
 8021c1e:	4566      	cmp	r6, ip
 8021c20:	f280 80ee 	bge.w	8021e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021c24:	b212      	sxth	r2, r2
 8021c26:	fb06 0002 	mla	r0, r6, r2, r0
 8021c2a:	9e08      	ldr	r6, [sp, #32]
 8021c2c:	1837      	adds	r7, r6, r0
 8021c2e:	5c30      	ldrb	r0, [r6, r0]
 8021c30:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8021c34:	eb04 0c08 	add.w	ip, r4, r8
 8021c38:	2b00      	cmp	r3, #0
 8021c3a:	f000 80d3 	beq.w	8021de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8021c3e:	787e      	ldrb	r6, [r7, #1]
 8021c40:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021c44:	4426      	add	r6, r4
 8021c46:	2900      	cmp	r1, #0
 8021c48:	f000 80d4 	beq.w	8021df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8021c4c:	18b8      	adds	r0, r7, r2
 8021c4e:	5cba      	ldrb	r2, [r7, r2]
 8021c50:	7840      	ldrb	r0, [r0, #1]
 8021c52:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021c56:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021c5a:	4422      	add	r2, r4
 8021c5c:	4420      	add	r0, r4
 8021c5e:	b29b      	uxth	r3, r3
 8021c60:	b289      	uxth	r1, r1
 8021c62:	fb03 f901 	mul.w	r9, r3, r1
 8021c66:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021c6a:	011b      	lsls	r3, r3, #4
 8021c6c:	b289      	uxth	r1, r1
 8021c6e:	78b7      	ldrb	r7, [r6, #2]
 8021c70:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021c74:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021c78:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021c7c:	eba3 0309 	sub.w	r3, r3, r9
 8021c80:	b29b      	uxth	r3, r3
 8021c82:	ebae 0e01 	sub.w	lr, lr, r1
 8021c86:	fa1f fe8e 	uxth.w	lr, lr
 8021c8a:	435f      	muls	r7, r3
 8021c8c:	fb0e 770a 	mla	r7, lr, sl, r7
 8021c90:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021c94:	fb01 770a 	mla	r7, r1, sl, r7
 8021c98:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021c9c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021ca0:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021ca4:	f896 8000 	ldrb.w	r8, [r6]
 8021ca8:	7876      	ldrb	r6, [r6, #1]
 8021caa:	fb03 f808 	mul.w	r8, r3, r8
 8021cae:	fb0e 8807 	mla	r8, lr, r7, r8
 8021cb2:	7817      	ldrb	r7, [r2, #0]
 8021cb4:	fb01 8807 	mla	r8, r1, r7, r8
 8021cb8:	7807      	ldrb	r7, [r0, #0]
 8021cba:	fb09 8707 	mla	r7, r9, r7, r8
 8021cbe:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021cc2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021cc6:	ea47 070a 	orr.w	r7, r7, sl
 8021cca:	4373      	muls	r3, r6
 8021ccc:	f892 a001 	ldrb.w	sl, [r2, #1]
 8021cd0:	fb0e 330c 	mla	r3, lr, ip, r3
 8021cd4:	fb01 310a 	mla	r1, r1, sl, r3
 8021cd8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021cdc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021cde:	fb09 1a0a 	mla	sl, r9, sl, r1
 8021ce2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021ce6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021cea:	ea47 070a 	orr.w	r7, r7, sl
 8021cee:	801f      	strh	r7, [r3, #0]
 8021cf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021cf2:	3302      	adds	r3, #2
 8021cf4:	9309      	str	r3, [sp, #36]	; 0x24
 8021cf6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021cf8:	449b      	add	fp, r3
 8021cfa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021cfc:	441d      	add	r5, r3
 8021cfe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021d00:	3b01      	subs	r3, #1
 8021d02:	930b      	str	r3, [sp, #44]	; 0x2c
 8021d04:	e76f      	b.n	8021be6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021d06:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021d08:	449b      	add	fp, r3
 8021d0a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021d0c:	441d      	add	r5, r3
 8021d0e:	9b06      	ldr	r3, [sp, #24]
 8021d10:	3b01      	subs	r3, #1
 8021d12:	9306      	str	r3, [sp, #24]
 8021d14:	9b07      	ldr	r3, [sp, #28]
 8021d16:	3302      	adds	r3, #2
 8021d18:	9307      	str	r3, [sp, #28]
 8021d1a:	e744      	b.n	8021ba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8021d1c:	d023      	beq.n	8021d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8021d1e:	9b06      	ldr	r3, [sp, #24]
 8021d20:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021d22:	3b01      	subs	r3, #1
 8021d24:	fb00 b003 	mla	r0, r0, r3, fp
 8021d28:	1400      	asrs	r0, r0, #16
 8021d2a:	f53f af58 	bmi.w	8021bde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d2e:	3901      	subs	r1, #1
 8021d30:	4288      	cmp	r0, r1
 8021d32:	f6bf af54 	bge.w	8021bde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d36:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021d38:	fb01 5303 	mla	r3, r1, r3, r5
 8021d3c:	141b      	asrs	r3, r3, #16
 8021d3e:	f53f af4e 	bmi.w	8021bde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d42:	3a01      	subs	r2, #1
 8021d44:	4293      	cmp	r3, r2
 8021d46:	f6bf af4a 	bge.w	8021bde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021d4a:	9b06      	ldr	r3, [sp, #24]
 8021d4c:	9309      	str	r3, [sp, #36]	; 0x24
 8021d4e:	9b07      	ldr	r3, [sp, #28]
 8021d50:	930b      	str	r3, [sp, #44]	; 0x2c
 8021d52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d54:	2b00      	cmp	r3, #0
 8021d56:	dc70      	bgt.n	8021e3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8021d58:	9b06      	ldr	r3, [sp, #24]
 8021d5a:	9a07      	ldr	r2, [sp, #28]
 8021d5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021d60:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021d64:	9307      	str	r3, [sp, #28]
 8021d66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021d68:	2b00      	cmp	r3, #0
 8021d6a:	f340 80eb 	ble.w	8021f44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8021d6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021d72:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021d76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021d7a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021d7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021d80:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021d84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021d88:	eef0 6a62 	vmov.f32	s13, s5
 8021d8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021d90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021d94:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021d98:	ee16 ba90 	vmov	fp, s13
 8021d9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021da0:	eef0 6a43 	vmov.f32	s13, s6
 8021da4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021da8:	ee12 2a90 	vmov	r2, s5
 8021dac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021db0:	fb92 f3f3 	sdiv	r3, r2, r3
 8021db4:	ee13 2a10 	vmov	r2, s6
 8021db8:	931b      	str	r3, [sp, #108]	; 0x6c
 8021dba:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021dbc:	fb92 f3f3 	sdiv	r3, r2, r3
 8021dc0:	931c      	str	r3, [sp, #112]	; 0x70
 8021dc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021dc4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8021dc6:	3b01      	subs	r3, #1
 8021dc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021dcc:	930a      	str	r3, [sp, #40]	; 0x28
 8021dce:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8021dd0:	bf08      	it	eq
 8021dd2:	4613      	moveq	r3, r2
 8021dd4:	ee16 5a90 	vmov	r5, s13
 8021dd8:	9306      	str	r3, [sp, #24]
 8021dda:	eeb0 3a67 	vmov.f32	s6, s15
 8021dde:	eef0 2a47 	vmov.f32	s5, s14
 8021de2:	e6d2      	b.n	8021b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8021de4:	b149      	cbz	r1, 8021dfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8021de6:	5cba      	ldrb	r2, [r7, r2]
 8021de8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021dec:	4422      	add	r2, r4
 8021dee:	4660      	mov	r0, ip
 8021df0:	4666      	mov	r6, ip
 8021df2:	e734      	b.n	8021c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021df4:	4660      	mov	r0, ip
 8021df6:	4662      	mov	r2, ip
 8021df8:	e731      	b.n	8021c5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021dfa:	4660      	mov	r0, ip
 8021dfc:	4662      	mov	r2, ip
 8021dfe:	e7f7      	b.n	8021df0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8021e00:	f110 0c01 	adds.w	ip, r0, #1
 8021e04:	f53f af74 	bmi.w	8021cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e08:	4562      	cmp	r2, ip
 8021e0a:	f6ff af71 	blt.w	8021cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e0e:	f116 0c01 	adds.w	ip, r6, #1
 8021e12:	f53f af6d 	bmi.w	8021cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e16:	4567      	cmp	r7, ip
 8021e18:	f6ff af6a 	blt.w	8021cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e1c:	b23f      	sxth	r7, r7
 8021e1e:	b212      	sxth	r2, r2
 8021e20:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8021e24:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021e28:	9200      	str	r2, [sp, #0]
 8021e2a:	9701      	str	r7, [sp, #4]
 8021e2c:	4623      	mov	r3, r4
 8021e2e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8021e32:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021e34:	f7ff fde6 	bl	8021a04 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8021e38:	e75a      	b.n	8021cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021e3a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021e3c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021e40:	ea4f 462b 	mov.w	r6, fp, asr #16
 8021e44:	1428      	asrs	r0, r5, #16
 8021e46:	fb02 6000 	mla	r0, r2, r0, r6
 8021e4a:	9e08      	ldr	r6, [sp, #32]
 8021e4c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8021e50:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021e54:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021e58:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021e5c:	1837      	adds	r7, r6, r0
 8021e5e:	eb04 0c08 	add.w	ip, r4, r8
 8021e62:	2b00      	cmp	r3, #0
 8021e64:	d060      	beq.n	8021f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8021e66:	787e      	ldrb	r6, [r7, #1]
 8021e68:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021e6c:	4426      	add	r6, r4
 8021e6e:	2900      	cmp	r1, #0
 8021e70:	d062      	beq.n	8021f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8021e72:	18b8      	adds	r0, r7, r2
 8021e74:	5cba      	ldrb	r2, [r7, r2]
 8021e76:	7840      	ldrb	r0, [r0, #1]
 8021e78:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021e7c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021e80:	4422      	add	r2, r4
 8021e82:	4420      	add	r0, r4
 8021e84:	b29b      	uxth	r3, r3
 8021e86:	b289      	uxth	r1, r1
 8021e88:	fb03 f901 	mul.w	r9, r3, r1
 8021e8c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021e90:	011b      	lsls	r3, r3, #4
 8021e92:	b289      	uxth	r1, r1
 8021e94:	78b7      	ldrb	r7, [r6, #2]
 8021e96:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021e9a:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021e9e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8021ea2:	eba3 0309 	sub.w	r3, r3, r9
 8021ea6:	b29b      	uxth	r3, r3
 8021ea8:	ebae 0e01 	sub.w	lr, lr, r1
 8021eac:	fa1f fe8e 	uxth.w	lr, lr
 8021eb0:	435f      	muls	r7, r3
 8021eb2:	fb0e 770a 	mla	r7, lr, sl, r7
 8021eb6:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021eba:	fb01 770a 	mla	r7, r1, sl, r7
 8021ebe:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021ec2:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021ec6:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021eca:	f896 8000 	ldrb.w	r8, [r6]
 8021ece:	7876      	ldrb	r6, [r6, #1]
 8021ed0:	fb03 f808 	mul.w	r8, r3, r8
 8021ed4:	fb0e 8807 	mla	r8, lr, r7, r8
 8021ed8:	7817      	ldrb	r7, [r2, #0]
 8021eda:	fb01 8807 	mla	r8, r1, r7, r8
 8021ede:	7807      	ldrb	r7, [r0, #0]
 8021ee0:	fb09 8707 	mla	r7, r9, r7, r8
 8021ee4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8021ee8:	4373      	muls	r3, r6
 8021eea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021eee:	7856      	ldrb	r6, [r2, #1]
 8021ef0:	ea47 070a 	orr.w	r7, r7, sl
 8021ef4:	fb0e 330c 	mla	r3, lr, ip, r3
 8021ef8:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021efc:	fb01 3306 	mla	r3, r1, r6, r3
 8021f00:	fb09 3a0a 	mla	sl, r9, sl, r3
 8021f04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021f08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021f0a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021f0e:	ea47 070a 	orr.w	r7, r7, sl
 8021f12:	f823 7b02 	strh.w	r7, [r3], #2
 8021f16:	930b      	str	r3, [sp, #44]	; 0x2c
 8021f18:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021f1a:	449b      	add	fp, r3
 8021f1c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021f1e:	441d      	add	r5, r3
 8021f20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021f22:	3b01      	subs	r3, #1
 8021f24:	9309      	str	r3, [sp, #36]	; 0x24
 8021f26:	e714      	b.n	8021d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8021f28:	b149      	cbz	r1, 8021f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021f2a:	5cba      	ldrb	r2, [r7, r2]
 8021f2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021f30:	4422      	add	r2, r4
 8021f32:	4660      	mov	r0, ip
 8021f34:	4666      	mov	r6, ip
 8021f36:	e7a5      	b.n	8021e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021f38:	4660      	mov	r0, ip
 8021f3a:	4662      	mov	r2, ip
 8021f3c:	e7a2      	b.n	8021e84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021f3e:	4660      	mov	r0, ip
 8021f40:	4662      	mov	r2, ip
 8021f42:	e7f7      	b.n	8021f34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8021f44:	b00f      	add	sp, #60	; 0x3c
 8021f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021f4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8021f4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f4e:	b085      	sub	sp, #20
 8021f50:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8021f54:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8021f58:	9102      	str	r1, [sp, #8]
 8021f5a:	2c00      	cmp	r4, #0
 8021f5c:	fb04 710c 	mla	r1, r4, ip, r7
 8021f60:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021f64:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8021f68:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8021f6c:	eb02 0e01 	add.w	lr, r2, r1
 8021f70:	f2c0 8122 	blt.w	80221b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021f74:	45a0      	cmp	r8, r4
 8021f76:	f340 811f 	ble.w	80221b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021f7a:	2f00      	cmp	r7, #0
 8021f7c:	f2c0 811a 	blt.w	80221b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021f80:	45bc      	cmp	ip, r7
 8021f82:	f340 8117 	ble.w	80221b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021f86:	5c52      	ldrb	r2, [r2, r1]
 8021f88:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8021f8c:	1c7a      	adds	r2, r7, #1
 8021f8e:	f100 8116 	bmi.w	80221be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021f92:	4594      	cmp	ip, r2
 8021f94:	f340 8113 	ble.w	80221be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021f98:	2e00      	cmp	r6, #0
 8021f9a:	f000 8112 	beq.w	80221c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8021f9e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021fa2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021fa6:	3401      	adds	r4, #1
 8021fa8:	f100 810f 	bmi.w	80221ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021fac:	45a0      	cmp	r8, r4
 8021fae:	f340 810c 	ble.w	80221ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021fb2:	2800      	cmp	r0, #0
 8021fb4:	f000 810c 	beq.w	80221d0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021fb8:	2f00      	cmp	r7, #0
 8021fba:	f2c0 8104 	blt.w	80221c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021fbe:	45bc      	cmp	ip, r7
 8021fc0:	f340 8101 	ble.w	80221c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021fc4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021fc8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8021fcc:	3701      	adds	r7, #1
 8021fce:	f100 8102 	bmi.w	80221d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021fd2:	45bc      	cmp	ip, r7
 8021fd4:	f340 80ff 	ble.w	80221d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021fd8:	2e00      	cmp	r6, #0
 8021fda:	f000 80fe 	beq.w	80221da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8021fde:	44f4      	add	ip, lr
 8021fe0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8021fe4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021fe8:	b2b6      	uxth	r6, r6
 8021fea:	b280      	uxth	r0, r0
 8021fec:	fb00 fe06 	mul.w	lr, r0, r6
 8021ff0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021ff4:	0136      	lsls	r6, r6, #4
 8021ff6:	eba6 070e 	sub.w	r7, r6, lr
 8021ffa:	b280      	uxth	r0, r0
 8021ffc:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8022000:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022004:	b2bf      	uxth	r7, r7
 8022006:	1a1b      	subs	r3, r3, r0
 8022008:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802200c:	b29b      	uxth	r3, r3
 802200e:	fb0a f607 	mul.w	r6, sl, r7
 8022012:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022016:	fb0b 6603 	mla	r6, fp, r3, r6
 802201a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802201e:	fb00 6609 	mla	r6, r0, r9, r6
 8022022:	fb0e 6608 	mla	r6, lr, r8, r6
 8022026:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802202a:	9600      	str	r6, [sp, #0]
 802202c:	2e00      	cmp	r6, #0
 802202e:	f000 80be 	beq.w	80221ae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8022032:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8022036:	fb0b fc0c 	mul.w	ip, fp, ip
 802203a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802203e:	fb0b f505 	mul.w	r5, fp, r5
 8022042:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022046:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802204a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802204e:	44dc      	add	ip, fp
 8022050:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022054:	9501      	str	r5, [sp, #4]
 8022056:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802205a:	9503      	str	r5, [sp, #12]
 802205c:	9d01      	ldr	r5, [sp, #4]
 802205e:	9e02      	ldr	r6, [sp, #8]
 8022060:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8022064:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022068:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802206c:	fb0a fc0c 	mul.w	ip, sl, ip
 8022070:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022074:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022078:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802207c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022080:	4465      	add	r5, ip
 8022082:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022086:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802208a:	fb09 fc0c 	mul.w	ip, r9, ip
 802208e:	fb09 f904 	mul.w	r9, r9, r4
 8022092:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8022096:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802209a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802209e:	fb08 f404 	mul.w	r4, r8, r4
 80220a2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80220a6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80220aa:	fb08 f802 	mul.w	r8, r8, r2
 80220ae:	fb0a fa01 	mul.w	sl, sl, r1
 80220b2:	0a22      	lsrs	r2, r4, #8
 80220b4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80220b8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80220bc:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80220c0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80220c4:	4414      	add	r4, r2
 80220c6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80220ca:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80220ce:	0a2d      	lsrs	r5, r5, #8
 80220d0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80220d4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80220d8:	9a03      	ldr	r2, [sp, #12]
 80220da:	8836      	ldrh	r6, [r6, #0]
 80220dc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80220e0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80220e4:	437d      	muls	r5, r7
 80220e6:	4461      	add	r1, ip
 80220e8:	0a24      	lsrs	r4, r4, #8
 80220ea:	fb02 5503 	mla	r5, r2, r3, r5
 80220ee:	0a09      	lsrs	r1, r1, #8
 80220f0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80220f4:	fb04 540e 	mla	r4, r4, lr, r5
 80220f8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80220fc:	fb01 4100 	mla	r1, r1, r0, r4
 8022100:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022104:	0a09      	lsrs	r1, r1, #8
 8022106:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802210a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802210e:	fb07 f70a 	mul.w	r7, r7, sl
 8022112:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022116:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802211a:	fb03 7101 	mla	r1, r3, r1, r7
 802211e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022122:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8022126:	fb0e 1e08 	mla	lr, lr, r8, r1
 802212a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802212e:	fb00 e101 	mla	r1, r0, r1, lr
 8022132:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8022136:	9a00      	ldr	r2, [sp, #0]
 8022138:	b287      	uxth	r7, r0
 802213a:	437a      	muls	r2, r7
 802213c:	0a09      	lsrs	r1, r1, #8
 802213e:	1c53      	adds	r3, r2, #1
 8022140:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022144:	4321      	orrs	r1, r4
 8022146:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802214a:	1235      	asrs	r5, r6, #8
 802214c:	0c0a      	lsrs	r2, r1, #16
 802214e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022152:	b2db      	uxtb	r3, r3
 8022154:	fb12 f207 	smulbb	r2, r2, r7
 8022158:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802215c:	fb05 2503 	mla	r5, r5, r3, r2
 8022160:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022164:	10f2      	asrs	r2, r6, #3
 8022166:	b2c8      	uxtb	r0, r1
 8022168:	00f6      	lsls	r6, r6, #3
 802216a:	fb14 f407 	smulbb	r4, r4, r7
 802216e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022172:	b2f6      	uxtb	r6, r6
 8022174:	fb10 f007 	smulbb	r0, r0, r7
 8022178:	fb02 4203 	mla	r2, r2, r3, r4
 802217c:	b2ad      	uxth	r5, r5
 802217e:	fb06 0303 	mla	r3, r6, r3, r0
 8022182:	b299      	uxth	r1, r3
 8022184:	b294      	uxth	r4, r2
 8022186:	1c6b      	adds	r3, r5, #1
 8022188:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802218c:	1c62      	adds	r2, r4, #1
 802218e:	1c4b      	adds	r3, r1, #1
 8022190:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022194:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022198:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802219c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80221a0:	0952      	lsrs	r2, r2, #5
 80221a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80221a6:	432b      	orrs	r3, r5
 80221a8:	4313      	orrs	r3, r2
 80221aa:	9a02      	ldr	r2, [sp, #8]
 80221ac:	8013      	strh	r3, [r2, #0]
 80221ae:	b005      	add	sp, #20
 80221b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221b4:	2500      	movs	r5, #0
 80221b6:	e6e9      	b.n	8021f8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80221b8:	2100      	movs	r1, #0
 80221ba:	460d      	mov	r5, r1
 80221bc:	e6f3      	b.n	8021fa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80221be:	2100      	movs	r1, #0
 80221c0:	e6f1      	b.n	8021fa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80221c2:	4631      	mov	r1, r6
 80221c4:	e6ef      	b.n	8021fa6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80221c6:	2400      	movs	r4, #0
 80221c8:	e700      	b.n	8021fcc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80221ca:	2200      	movs	r2, #0
 80221cc:	4614      	mov	r4, r2
 80221ce:	e70b      	b.n	8021fe8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80221d0:	4602      	mov	r2, r0
 80221d2:	4604      	mov	r4, r0
 80221d4:	e708      	b.n	8021fe8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80221d6:	2200      	movs	r2, #0
 80221d8:	e706      	b.n	8021fe8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80221da:	4632      	mov	r2, r6
 80221dc:	e704      	b.n	8021fe8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080221de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80221de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80221e2:	b09f      	sub	sp, #124	; 0x7c
 80221e4:	921b      	str	r2, [sp, #108]	; 0x6c
 80221e6:	9309      	str	r3, [sp, #36]	; 0x24
 80221e8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80221ea:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80221ee:	931c      	str	r3, [sp, #112]	; 0x70
 80221f0:	9119      	str	r1, [sp, #100]	; 0x64
 80221f2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80221f6:	901d      	str	r0, [sp, #116]	; 0x74
 80221f8:	6850      	ldr	r0, [r2, #4]
 80221fa:	6812      	ldr	r2, [r2, #0]
 80221fc:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80221fe:	fb00 1303 	mla	r3, r0, r3, r1
 8022202:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022206:	930c      	str	r3, [sp, #48]	; 0x30
 8022208:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802220a:	681b      	ldr	r3, [r3, #0]
 802220c:	9312      	str	r3, [sp, #72]	; 0x48
 802220e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022210:	685e      	ldr	r6, [r3, #4]
 8022212:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8022216:	930d      	str	r3, [sp, #52]	; 0x34
 8022218:	3604      	adds	r6, #4
 802221a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802221c:	2b00      	cmp	r3, #0
 802221e:	dc03      	bgt.n	8022228 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022220:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022222:	2b00      	cmp	r3, #0
 8022224:	f340 8388 	ble.w	8022938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8022228:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802222a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802222e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022232:	1e48      	subs	r0, r1, #1
 8022234:	1e57      	subs	r7, r2, #1
 8022236:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022238:	2b00      	cmp	r3, #0
 802223a:	f340 8195 	ble.w	8022568 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802223e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022240:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022244:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022248:	d406      	bmi.n	8022258 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802224a:	4584      	cmp	ip, r0
 802224c:	da04      	bge.n	8022258 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802224e:	2b00      	cmp	r3, #0
 8022250:	db02      	blt.n	8022258 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022252:	42bb      	cmp	r3, r7
 8022254:	f2c0 8189 	blt.w	802256a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8022258:	f11c 0c01 	adds.w	ip, ip, #1
 802225c:	f100 8177 	bmi.w	802254e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022260:	4561      	cmp	r1, ip
 8022262:	f2c0 8174 	blt.w	802254e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022266:	3301      	adds	r3, #1
 8022268:	f100 8171 	bmi.w	802254e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802226c:	429a      	cmp	r2, r3
 802226e:	f2c0 816e 	blt.w	802254e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022272:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022274:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8022276:	931a      	str	r3, [sp, #104]	; 0x68
 8022278:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802227a:	2b00      	cmp	r3, #0
 802227c:	f340 8193 	ble.w	80225a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8022280:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8022282:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022286:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022288:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802228c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802228e:	141b      	asrs	r3, r3, #16
 8022290:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022294:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8022298:	f100 81d6 	bmi.w	8022648 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802229c:	f100 38ff 	add.w	r8, r0, #4294967295
 80222a0:	4543      	cmp	r3, r8
 80222a2:	f280 81d1 	bge.w	8022648 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80222a6:	f1bc 0f00 	cmp.w	ip, #0
 80222aa:	f2c0 81cd 	blt.w	8022648 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80222ae:	f10e 38ff 	add.w	r8, lr, #4294967295
 80222b2:	45c4      	cmp	ip, r8
 80222b4:	f280 81c8 	bge.w	8022648 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80222b8:	b200      	sxth	r0, r0
 80222ba:	fb0c 3300 	mla	r3, ip, r0, r3
 80222be:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80222c0:	eb04 0803 	add.w	r8, r4, r3
 80222c4:	5ce3      	ldrb	r3, [r4, r3]
 80222c6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80222ca:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80222ce:	2a00      	cmp	r2, #0
 80222d0:	f000 81af 	beq.w	8022632 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80222d4:	f898 c001 	ldrb.w	ip, [r8, #1]
 80222d8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80222dc:	940e      	str	r4, [sp, #56]	; 0x38
 80222de:	0e24      	lsrs	r4, r4, #24
 80222e0:	9415      	str	r4, [sp, #84]	; 0x54
 80222e2:	b179      	cbz	r1, 8022304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80222e4:	eb08 0c00 	add.w	ip, r8, r0
 80222e8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80222ec:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80222f0:	900a      	str	r0, [sp, #40]	; 0x28
 80222f2:	0e00      	lsrs	r0, r0, #24
 80222f4:	9013      	str	r0, [sp, #76]	; 0x4c
 80222f6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80222fa:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80222fe:	900f      	str	r0, [sp, #60]	; 0x3c
 8022300:	0e00      	lsrs	r0, r0, #24
 8022302:	9016      	str	r0, [sp, #88]	; 0x58
 8022304:	b292      	uxth	r2, r2
 8022306:	b289      	uxth	r1, r1
 8022308:	fb02 f901 	mul.w	r9, r2, r1
 802230c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022310:	0112      	lsls	r2, r2, #4
 8022312:	eba2 0809 	sub.w	r8, r2, r9
 8022316:	b289      	uxth	r1, r1
 8022318:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802231c:	9815      	ldr	r0, [sp, #84]	; 0x54
 802231e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022320:	fa1f f888 	uxth.w	r8, r8
 8022324:	1a52      	subs	r2, r2, r1
 8022326:	b292      	uxth	r2, r2
 8022328:	fb08 f000 	mul.w	r0, r8, r0
 802232c:	fb02 000e 	mla	r0, r2, lr, r0
 8022330:	fb01 0004 	mla	r0, r1, r4, r0
 8022334:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022336:	fb09 0004 	mla	r0, r9, r4, r0
 802233a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802233e:	2800      	cmp	r0, #0
 8022340:	f000 80fa 	beq.w	8022538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022344:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022348:	d01b      	beq.n	8022382 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802234a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802234e:	fb0e fa0a 	mul.w	sl, lr, sl
 8022352:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022356:	fb0e fe03 	mul.w	lr, lr, r3
 802235a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802235e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022362:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022366:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802236a:	4453      	add	r3, sl
 802236c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022370:	0a1b      	lsrs	r3, r3, #8
 8022372:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022376:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802237a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802237e:	ea43 030c 	orr.w	r3, r3, ip
 8022382:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022384:	2cff      	cmp	r4, #255	; 0xff
 8022386:	d021      	beq.n	80223cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022388:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802238a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802238e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022390:	fb04 fb0b 	mul.w	fp, r4, fp
 8022394:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022396:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802239a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802239c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223a0:	fb04 fa0a 	mul.w	sl, r4, sl
 80223a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80223ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80223b0:	44de      	add	lr, fp
 80223b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80223b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80223ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80223c6:	ea4e 040a 	orr.w	r4, lr, sl
 80223ca:	940e      	str	r4, [sp, #56]	; 0x38
 80223cc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80223ce:	2cff      	cmp	r4, #255	; 0xff
 80223d0:	d021      	beq.n	8022416 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80223d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80223d4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80223d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80223da:	fb04 fb0b 	mul.w	fp, r4, fp
 80223de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80223e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80223e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80223e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223ea:	fb04 fa0a 	mul.w	sl, r4, sl
 80223ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80223f2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80223f6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80223fa:	44de      	add	lr, fp
 80223fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022400:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022404:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022408:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802240c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022410:	ea4e 040a 	orr.w	r4, lr, sl
 8022414:	940a      	str	r4, [sp, #40]	; 0x28
 8022416:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022418:	2cff      	cmp	r4, #255	; 0xff
 802241a:	d021      	beq.n	8022460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802241c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802241e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022422:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022424:	fb04 fb0b 	mul.w	fp, r4, fp
 8022428:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802242a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802242e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8022430:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022434:	fb04 fa0a 	mul.w	sl, r4, sl
 8022438:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802243c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022440:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022444:	44de      	add	lr, fp
 8022446:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802244a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802244e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022452:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022456:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802245a:	ea4e 040a 	orr.w	r4, lr, sl
 802245e:	940f      	str	r4, [sp, #60]	; 0x3c
 8022460:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022462:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022466:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022468:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802246c:	fb08 fc0c 	mul.w	ip, r8, ip
 8022470:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022474:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022478:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802247a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802247e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022482:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022484:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022488:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802248c:	fb08 f80e 	mul.w	r8, r8, lr
 8022490:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022494:	fb02 8303 	mla	r3, r2, r3, r8
 8022498:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802249a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802249c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80224a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80224a2:	fb01 330a 	mla	r3, r1, sl, r3
 80224a6:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80224aa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80224ac:	fb09 3901 	mla	r9, r9, r1, r3
 80224b0:	4342      	muls	r2, r0
 80224b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80224ba:	883b      	ldrh	r3, [r7, #0]
 80224bc:	1c50      	adds	r0, r2, #1
 80224be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80224c2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80224c6:	ea4c 0c09 	orr.w	ip, ip, r9
 80224ca:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80224ce:	1219      	asrs	r1, r3, #8
 80224d0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80224d4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80224d8:	b2c0      	uxtb	r0, r0
 80224da:	fb12 f204 	smulbb	r2, r2, r4
 80224de:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80224e2:	fb01 2100 	mla	r1, r1, r0, r2
 80224e6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80224ea:	10da      	asrs	r2, r3, #3
 80224ec:	fa5f fc8c 	uxtb.w	ip, ip
 80224f0:	00db      	lsls	r3, r3, #3
 80224f2:	fb1c fc04 	smulbb	ip, ip, r4
 80224f6:	b2db      	uxtb	r3, r3
 80224f8:	b289      	uxth	r1, r1
 80224fa:	fb03 c300 	mla	r3, r3, r0, ip
 80224fe:	fa1f fc83 	uxth.w	ip, r3
 8022502:	1c4b      	adds	r3, r1, #1
 8022504:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022508:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802250c:	fb1e fe04 	smulbb	lr, lr, r4
 8022510:	f10c 0301 	add.w	r3, ip, #1
 8022514:	fb02 e200 	mla	r2, r2, r0, lr
 8022518:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802251c:	b292      	uxth	r2, r2
 802251e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022522:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022526:	430b      	orrs	r3, r1
 8022528:	1c51      	adds	r1, r2, #1
 802252a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802252e:	0952      	lsrs	r2, r2, #5
 8022530:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022534:	4313      	orrs	r3, r2
 8022536:	803b      	strh	r3, [r7, #0]
 8022538:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802253a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802253c:	441a      	add	r2, r3
 802253e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022540:	9229      	str	r2, [sp, #164]	; 0xa4
 8022542:	441d      	add	r5, r3
 8022544:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8022546:	3b01      	subs	r3, #1
 8022548:	3702      	adds	r7, #2
 802254a:	931a      	str	r3, [sp, #104]	; 0x68
 802254c:	e694      	b.n	8022278 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802254e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022550:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022552:	441c      	add	r4, r3
 8022554:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022556:	9429      	str	r4, [sp, #164]	; 0xa4
 8022558:	441d      	add	r5, r3
 802255a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802255c:	3b01      	subs	r3, #1
 802255e:	9309      	str	r3, [sp, #36]	; 0x24
 8022560:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022562:	3302      	adds	r3, #2
 8022564:	930c      	str	r3, [sp, #48]	; 0x30
 8022566:	e666      	b.n	8022236 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022568:	d024      	beq.n	80225b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802256a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802256c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802256e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022570:	3b01      	subs	r3, #1
 8022572:	fb00 4003 	mla	r0, r0, r3, r4
 8022576:	1400      	asrs	r0, r0, #16
 8022578:	f53f ae7b 	bmi.w	8022272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802257c:	3901      	subs	r1, #1
 802257e:	4288      	cmp	r0, r1
 8022580:	f6bf ae77 	bge.w	8022272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022584:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8022586:	fb01 5303 	mla	r3, r1, r3, r5
 802258a:	141b      	asrs	r3, r3, #16
 802258c:	f53f ae71 	bmi.w	8022272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022590:	3a01      	subs	r2, #1
 8022592:	4293      	cmp	r3, r2
 8022594:	f6bf ae6d 	bge.w	8022272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022598:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802259c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80225a0:	f1bb 0f00 	cmp.w	fp, #0
 80225a4:	dc70      	bgt.n	8022688 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80225a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80225a8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80225ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80225ae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80225b2:	930c      	str	r3, [sp, #48]	; 0x30
 80225b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80225b6:	2b00      	cmp	r3, #0
 80225b8:	f340 81be 	ble.w	8022938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80225bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80225c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80225ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225d6:	eef0 6a62 	vmov.f32	s13, s5
 80225da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225e6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80225ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225ee:	eef0 6a43 	vmov.f32	s13, s6
 80225f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80225f6:	ee12 2a90 	vmov	r2, s5
 80225fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80225fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8022602:	ee13 2a10 	vmov	r2, s6
 8022606:	932b      	str	r3, [sp, #172]	; 0xac
 8022608:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802260a:	fb92 f3f3 	sdiv	r3, r2, r3
 802260e:	932c      	str	r3, [sp, #176]	; 0xb0
 8022610:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022612:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8022614:	3b01      	subs	r3, #1
 8022616:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802261a:	9319      	str	r3, [sp, #100]	; 0x64
 802261c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802261e:	bf08      	it	eq
 8022620:	4613      	moveq	r3, r2
 8022622:	ee16 5a90 	vmov	r5, s13
 8022626:	9309      	str	r3, [sp, #36]	; 0x24
 8022628:	eeb0 3a67 	vmov.f32	s6, s15
 802262c:	eef0 2a47 	vmov.f32	s5, s14
 8022630:	e5f3      	b.n	802221a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022632:	2900      	cmp	r1, #0
 8022634:	f43f ae66 	beq.w	8022304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022638:	f818 0000 	ldrb.w	r0, [r8, r0]
 802263c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022640:	900a      	str	r0, [sp, #40]	; 0x28
 8022642:	0e00      	lsrs	r0, r0, #24
 8022644:	9013      	str	r0, [sp, #76]	; 0x4c
 8022646:	e65d      	b.n	8022304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022648:	f113 0801 	adds.w	r8, r3, #1
 802264c:	f53f af74 	bmi.w	8022538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022650:	4540      	cmp	r0, r8
 8022652:	f6ff af71 	blt.w	8022538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022656:	f11c 0801 	adds.w	r8, ip, #1
 802265a:	f53f af6d 	bmi.w	8022538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802265e:	45c6      	cmp	lr, r8
 8022660:	f6ff af6a 	blt.w	8022538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022664:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8022666:	9302      	str	r3, [sp, #8]
 8022668:	b200      	sxth	r0, r0
 802266a:	fa0f f38e 	sxth.w	r3, lr
 802266e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022672:	e9cd c203 	strd	ip, r2, [sp, #12]
 8022676:	9301      	str	r3, [sp, #4]
 8022678:	9000      	str	r0, [sp, #0]
 802267a:	4633      	mov	r3, r6
 802267c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802267e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8022680:	4639      	mov	r1, r7
 8022682:	f7ff fc62 	bl	8021f4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8022686:	e757      	b.n	8022538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022688:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802268a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802268c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022690:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8022692:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022696:	1427      	asrs	r7, r4, #16
 8022698:	142b      	asrs	r3, r5, #16
 802269a:	fb01 7303 	mla	r3, r1, r3, r7
 802269e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80226a0:	18e7      	adds	r7, r4, r3
 80226a2:	5ce3      	ldrb	r3, [r4, r3]
 80226a4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80226a8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80226ac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80226b0:	2a00      	cmp	r2, #0
 80226b2:	f000 8137 	beq.w	8022924 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80226b6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80226ba:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80226be:	9410      	str	r4, [sp, #64]	; 0x40
 80226c0:	0e24      	lsrs	r4, r4, #24
 80226c2:	9417      	str	r4, [sp, #92]	; 0x5c
 80226c4:	b170      	cbz	r0, 80226e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80226c6:	eb07 0e01 	add.w	lr, r7, r1
 80226ca:	5c79      	ldrb	r1, [r7, r1]
 80226cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80226d0:	910b      	str	r1, [sp, #44]	; 0x2c
 80226d2:	0e09      	lsrs	r1, r1, #24
 80226d4:	9114      	str	r1, [sp, #80]	; 0x50
 80226d6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80226da:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80226de:	9111      	str	r1, [sp, #68]	; 0x44
 80226e0:	0e09      	lsrs	r1, r1, #24
 80226e2:	9118      	str	r1, [sp, #96]	; 0x60
 80226e4:	b292      	uxth	r2, r2
 80226e6:	b280      	uxth	r0, r0
 80226e8:	fb02 f800 	mul.w	r8, r2, r0
 80226ec:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80226f0:	0112      	lsls	r2, r2, #4
 80226f2:	eba2 0e08 	sub.w	lr, r2, r8
 80226f6:	b280      	uxth	r0, r0
 80226f8:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80226fc:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80226fe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022700:	fa1f fe8e 	uxth.w	lr, lr
 8022704:	1a12      	subs	r2, r2, r0
 8022706:	b292      	uxth	r2, r2
 8022708:	fb0e f101 	mul.w	r1, lr, r1
 802270c:	fb02 110c 	mla	r1, r2, ip, r1
 8022710:	fb00 1104 	mla	r1, r0, r4, r1
 8022714:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022716:	fb08 1104 	mla	r1, r8, r4, r1
 802271a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802271e:	2900      	cmp	r1, #0
 8022720:	f000 80f5 	beq.w	802290e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022724:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022728:	d019      	beq.n	802275e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802272a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802272e:	fb0c fa0a 	mul.w	sl, ip, sl
 8022732:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022736:	fb0c fc03 	mul.w	ip, ip, r3
 802273a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802273e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022742:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022746:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802274a:	4453      	add	r3, sl
 802274c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022750:	0a1b      	lsrs	r3, r3, #8
 8022752:	0a3f      	lsrs	r7, r7, #8
 8022754:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022758:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802275c:	433b      	orrs	r3, r7
 802275e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022760:	2cff      	cmp	r4, #255	; 0xff
 8022762:	d020      	beq.n	80227a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8022764:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022766:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802276a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802276c:	4367      	muls	r7, r4
 802276e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022770:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022774:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022776:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802277a:	fb04 fa0a 	mul.w	sl, r4, sl
 802277e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022782:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022786:	44bc      	add	ip, r7
 8022788:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802278c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022790:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022794:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022798:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802279c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80227a0:	ea4c 040a 	orr.w	r4, ip, sl
 80227a4:	9410      	str	r4, [sp, #64]	; 0x40
 80227a6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80227a8:	2cff      	cmp	r4, #255	; 0xff
 80227aa:	d020      	beq.n	80227ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80227ac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80227b2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80227b4:	4367      	muls	r7, r4
 80227b6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80227b8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80227bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80227be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80227c2:	fb04 fa0a 	mul.w	sl, r4, sl
 80227c6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80227ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227ce:	44bc      	add	ip, r7
 80227d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80227d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80227d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80227dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80227e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80227e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80227e8:	ea4c 040a 	orr.w	r4, ip, sl
 80227ec:	940b      	str	r4, [sp, #44]	; 0x2c
 80227ee:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80227f0:	2cff      	cmp	r4, #255	; 0xff
 80227f2:	d020      	beq.n	8022836 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80227f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80227f6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80227fa:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80227fc:	4367      	muls	r7, r4
 80227fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022800:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022804:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022806:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802280a:	fb04 fa0a 	mul.w	sl, r4, sl
 802280e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022812:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022816:	44bc      	add	ip, r7
 8022818:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802281c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022820:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022824:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022828:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802282c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022830:	ea4c 040a 	orr.w	r4, ip, sl
 8022834:	9411      	str	r4, [sp, #68]	; 0x44
 8022836:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022838:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802283c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802283e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022842:	fb0e f707 	mul.w	r7, lr, r7
 8022846:	fb02 770c 	mla	r7, r2, ip, r7
 802284a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802284e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022850:	fb00 770c 	mla	r7, r0, ip, r7
 8022854:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022858:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802285a:	fb08 770c 	mla	r7, r8, ip, r7
 802285e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022862:	fb0e fe0c 	mul.w	lr, lr, ip
 8022866:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802286a:	fb02 e303 	mla	r3, r2, r3, lr
 802286e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022870:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022872:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022876:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022878:	fb00 330a 	mla	r3, r0, sl, r3
 802287c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022880:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022884:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022886:	f8b9 0000 	ldrh.w	r0, [r9]
 802288a:	434b      	muls	r3, r1
 802288c:	0a3f      	lsrs	r7, r7, #8
 802288e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022892:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022896:	1c59      	adds	r1, r3, #1
 8022898:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802289c:	ea47 070c 	orr.w	r7, r7, ip
 80228a0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80228a4:	1202      	asrs	r2, r0, #8
 80228a6:	0c3b      	lsrs	r3, r7, #16
 80228a8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80228ac:	b2c9      	uxtb	r1, r1
 80228ae:	fb13 f304 	smulbb	r3, r3, r4
 80228b2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80228b6:	fb02 3201 	mla	r2, r2, r1, r3
 80228ba:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80228be:	10c3      	asrs	r3, r0, #3
 80228c0:	b2ff      	uxtb	r7, r7
 80228c2:	00c0      	lsls	r0, r0, #3
 80228c4:	b292      	uxth	r2, r2
 80228c6:	fb1c fc04 	smulbb	ip, ip, r4
 80228ca:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80228ce:	b2c0      	uxtb	r0, r0
 80228d0:	fb17 f704 	smulbb	r7, r7, r4
 80228d4:	fb03 c301 	mla	r3, r3, r1, ip
 80228d8:	fb00 7001 	mla	r0, r0, r1, r7
 80228dc:	f102 0c01 	add.w	ip, r2, #1
 80228e0:	b280      	uxth	r0, r0
 80228e2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80228e6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80228ea:	1c42      	adds	r2, r0, #1
 80228ec:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80228f0:	b29b      	uxth	r3, r3
 80228f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80228f6:	ea42 020c 	orr.w	r2, r2, ip
 80228fa:	f103 0c01 	add.w	ip, r3, #1
 80228fe:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8022902:	095b      	lsrs	r3, r3, #5
 8022904:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022908:	431a      	orrs	r2, r3
 802290a:	f8a9 2000 	strh.w	r2, [r9]
 802290e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022910:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022912:	441a      	add	r2, r3
 8022914:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022916:	9229      	str	r2, [sp, #164]	; 0xa4
 8022918:	f109 0902 	add.w	r9, r9, #2
 802291c:	441d      	add	r5, r3
 802291e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022922:	e63d      	b.n	80225a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022924:	2800      	cmp	r0, #0
 8022926:	f43f aedd 	beq.w	80226e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802292a:	5c79      	ldrb	r1, [r7, r1]
 802292c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022930:	910b      	str	r1, [sp, #44]	; 0x2c
 8022932:	0e09      	lsrs	r1, r1, #24
 8022934:	9114      	str	r1, [sp, #80]	; 0x50
 8022936:	e6d5      	b.n	80226e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022938:	b01f      	add	sp, #124	; 0x7c
 802293a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802293e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802293e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022942:	b089      	sub	sp, #36	; 0x24
 8022944:	9101      	str	r1, [sp, #4]
 8022946:	9801      	ldr	r0, [sp, #4]
 8022948:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802294c:	8800      	ldrh	r0, [r0, #0]
 802294e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8022952:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8022956:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802295a:	1206      	asrs	r6, r0, #8
 802295c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8022960:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8022964:	9602      	str	r6, [sp, #8]
 8022966:	10c6      	asrs	r6, r0, #3
 8022968:	00c0      	lsls	r0, r0, #3
 802296a:	b2c0      	uxtb	r0, r0
 802296c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022970:	9004      	str	r0, [sp, #16]
 8022972:	2f00      	cmp	r7, #0
 8022974:	fb07 100c 	mla	r0, r7, ip, r1
 8022978:	9603      	str	r6, [sp, #12]
 802297a:	eb02 0e00 	add.w	lr, r2, r0
 802297e:	f2c0 810a 	blt.w	8022b96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022982:	45b8      	cmp	r8, r7
 8022984:	f340 8107 	ble.w	8022b96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022988:	2900      	cmp	r1, #0
 802298a:	f2c0 8102 	blt.w	8022b92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802298e:	458c      	cmp	ip, r1
 8022990:	f340 80ff 	ble.w	8022b92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8022994:	5c12      	ldrb	r2, [r2, r0]
 8022996:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802299a:	1c4a      	adds	r2, r1, #1
 802299c:	f100 80fe 	bmi.w	8022b9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80229a0:	4594      	cmp	ip, r2
 80229a2:	f340 80fb 	ble.w	8022b9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80229a6:	2d00      	cmp	r5, #0
 80229a8:	f000 80fa 	beq.w	8022ba0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80229ac:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80229b0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80229b4:	3701      	adds	r7, #1
 80229b6:	f100 80f7 	bmi.w	8022ba8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80229ba:	45b8      	cmp	r8, r7
 80229bc:	f340 80f4 	ble.w	8022ba8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80229c0:	2c00      	cmp	r4, #0
 80229c2:	f000 80f4 	beq.w	8022bae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80229c6:	2900      	cmp	r1, #0
 80229c8:	eb0e 020c 	add.w	r2, lr, ip
 80229cc:	f2c0 80ea 	blt.w	8022ba4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80229d0:	458c      	cmp	ip, r1
 80229d2:	f340 80e7 	ble.w	8022ba4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80229d6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80229da:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80229de:	3101      	adds	r1, #1
 80229e0:	f100 80e8 	bmi.w	8022bb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80229e4:	458c      	cmp	ip, r1
 80229e6:	f340 80e5 	ble.w	8022bb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80229ea:	2d00      	cmp	r5, #0
 80229ec:	f000 80e4 	beq.w	8022bb8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80229f0:	7852      	ldrb	r2, [r2, #1]
 80229f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80229f6:	0e0b      	lsrs	r3, r1, #24
 80229f8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80229fc:	9300      	str	r3, [sp, #0]
 80229fe:	b2a4      	uxth	r4, r4
 8022a00:	b2ab      	uxth	r3, r5
 8022a02:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8022a06:	fb03 f904 	mul.w	r9, r3, r4
 8022a0a:	fb0a f505 	mul.w	r5, sl, r5
 8022a0e:	011b      	lsls	r3, r3, #4
 8022a10:	eba3 0e09 	sub.w	lr, r3, r9
 8022a14:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8022a18:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8022a1c:	0a28      	lsrs	r0, r5, #8
 8022a1e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022a22:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8022a26:	4405      	add	r5, r0
 8022a28:	0a2d      	lsrs	r5, r5, #8
 8022a2a:	fb0a f303 	mul.w	r3, sl, r3
 8022a2e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8022a32:	9005      	str	r0, [sp, #20]
 8022a34:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8022a38:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022a3c:	0a1b      	lsrs	r3, r3, #8
 8022a3e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8022a42:	9306      	str	r3, [sp, #24]
 8022a44:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8022a48:	fb0b f303 	mul.w	r3, fp, r3
 8022a4c:	0a1d      	lsrs	r5, r3, #8
 8022a4e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022a52:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8022a56:	fb0b f606 	mul.w	r6, fp, r6
 8022a5a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8022a5e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8022a62:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022a66:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022a6a:	fb08 f707 	mul.w	r7, r8, r7
 8022a6e:	441d      	add	r5, r3
 8022a70:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8022a74:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022a78:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8022a7c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022a80:	fb08 fc0c 	mul.w	ip, r8, ip
 8022a84:	0a1b      	lsrs	r3, r3, #8
 8022a86:	9307      	str	r3, [sp, #28]
 8022a88:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8022a8c:	0e0b      	lsrs	r3, r1, #24
 8022a8e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8022a92:	435f      	muls	r7, r3
 8022a94:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8022a98:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022a9c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8022aa0:	4460      	add	r0, ip
 8022aa2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022aa6:	b2a4      	uxth	r4, r4
 8022aa8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022aac:	0a2d      	lsrs	r5, r5, #8
 8022aae:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022ab2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ab6:	fa1f fe8e 	uxth.w	lr, lr
 8022aba:	4359      	muls	r1, r3
 8022abc:	1b12      	subs	r2, r2, r4
 8022abe:	9b05      	ldr	r3, [sp, #20]
 8022ac0:	44bc      	add	ip, r7
 8022ac2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022ac6:	b292      	uxth	r2, r2
 8022ac8:	fb05 f50e 	mul.w	r5, r5, lr
 8022acc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022ad0:	fb03 5502 	mla	r5, r3, r2, r5
 8022ad4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ad8:	9b06      	ldr	r3, [sp, #24]
 8022ada:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8022ade:	0a36      	lsrs	r6, r6, #8
 8022ae0:	0a00      	lsrs	r0, r0, #8
 8022ae2:	fb0c 5509 	mla	r5, ip, r9, r5
 8022ae6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022aea:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8022aee:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022af2:	fb00 5504 	mla	r5, r0, r4, r5
 8022af6:	fb0e f606 	mul.w	r6, lr, r6
 8022afa:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8022afe:	0a09      	lsrs	r1, r1, #8
 8022b00:	9b07      	ldr	r3, [sp, #28]
 8022b02:	fb02 6000 	mla	r0, r2, r0, r6
 8022b06:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8022b0a:	fb09 0001 	mla	r0, r9, r1, r0
 8022b0e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022b12:	fb0e fe0b 	mul.w	lr, lr, fp
 8022b16:	fb04 0003 	mla	r0, r4, r3, r0
 8022b1a:	fb02 e20a 	mla	r2, r2, sl, lr
 8022b1e:	9b00      	ldr	r3, [sp, #0]
 8022b20:	fb04 2408 	mla	r4, r4, r8, r2
 8022b24:	fb09 4903 	mla	r9, r9, r3, r4
 8022b28:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8022b2c:	9b02      	ldr	r3, [sp, #8]
 8022b2e:	9a04      	ldr	r2, [sp, #16]
 8022b30:	fa5f f989 	uxtb.w	r9, r9
 8022b34:	fb03 f109 	mul.w	r1, r3, r9
 8022b38:	9b03      	ldr	r3, [sp, #12]
 8022b3a:	0a2d      	lsrs	r5, r5, #8
 8022b3c:	0a00      	lsrs	r0, r0, #8
 8022b3e:	fb03 f309 	mul.w	r3, r3, r9
 8022b42:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022b46:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022b4a:	4305      	orrs	r5, r0
 8022b4c:	fb02 f909 	mul.w	r9, r2, r9
 8022b50:	1c58      	adds	r0, r3, #1
 8022b52:	1c4a      	adds	r2, r1, #1
 8022b54:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022b58:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022b5c:	0a2b      	lsrs	r3, r5, #8
 8022b5e:	0c2a      	lsrs	r2, r5, #16
 8022b60:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022b64:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022b68:	00db      	lsls	r3, r3, #3
 8022b6a:	0212      	lsls	r2, r2, #8
 8022b6c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022b70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022b74:	4313      	orrs	r3, r2
 8022b76:	f109 0201 	add.w	r2, r9, #1
 8022b7a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8022b7e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022b82:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022b86:	431d      	orrs	r5, r3
 8022b88:	9b01      	ldr	r3, [sp, #4]
 8022b8a:	801d      	strh	r5, [r3, #0]
 8022b8c:	b009      	add	sp, #36	; 0x24
 8022b8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022b92:	2000      	movs	r0, #0
 8022b94:	e701      	b.n	802299a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8022b96:	2600      	movs	r6, #0
 8022b98:	4630      	mov	r0, r6
 8022b9a:	e70b      	b.n	80229b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022b9c:	2600      	movs	r6, #0
 8022b9e:	e709      	b.n	80229b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022ba0:	462e      	mov	r6, r5
 8022ba2:	e707      	b.n	80229b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022ba4:	2700      	movs	r7, #0
 8022ba6:	e71a      	b.n	80229de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8022ba8:	2100      	movs	r1, #0
 8022baa:	460f      	mov	r7, r1
 8022bac:	e723      	b.n	80229f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022bae:	4621      	mov	r1, r4
 8022bb0:	4627      	mov	r7, r4
 8022bb2:	e720      	b.n	80229f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022bb4:	2100      	movs	r1, #0
 8022bb6:	e71e      	b.n	80229f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022bb8:	4629      	mov	r1, r5
 8022bba:	e71c      	b.n	80229f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08022bbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022bc0:	b09b      	sub	sp, #108	; 0x6c
 8022bc2:	9218      	str	r2, [sp, #96]	; 0x60
 8022bc4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022bc6:	9116      	str	r1, [sp, #88]	; 0x58
 8022bc8:	9307      	str	r3, [sp, #28]
 8022bca:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8022bce:	9019      	str	r0, [sp, #100]	; 0x64
 8022bd0:	6850      	ldr	r0, [r2, #4]
 8022bd2:	6812      	ldr	r2, [r2, #0]
 8022bd4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8022bd6:	fb00 1303 	mla	r3, r0, r3, r1
 8022bda:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022bde:	930a      	str	r3, [sp, #40]	; 0x28
 8022be0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022be2:	681b      	ldr	r3, [r3, #0]
 8022be4:	930f      	str	r3, [sp, #60]	; 0x3c
 8022be6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022be8:	685e      	ldr	r6, [r3, #4]
 8022bea:	3604      	adds	r6, #4
 8022bec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022bee:	2b00      	cmp	r3, #0
 8022bf0:	dc03      	bgt.n	8022bfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022bf2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022bf4:	2b00      	cmp	r3, #0
 8022bf6:	f340 8373 	ble.w	80232e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022bfa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022bfc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c00:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022c04:	1e48      	subs	r0, r1, #1
 8022c06:	1e57      	subs	r7, r2, #1
 8022c08:	9b07      	ldr	r3, [sp, #28]
 8022c0a:	2b00      	cmp	r3, #0
 8022c0c:	f340 8190 	ble.w	8022f30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022c10:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022c12:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022c16:	ea4f 4325 	mov.w	r3, r5, asr #16
 8022c1a:	d406      	bmi.n	8022c2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022c1c:	4584      	cmp	ip, r0
 8022c1e:	da04      	bge.n	8022c2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022c20:	2b00      	cmp	r3, #0
 8022c22:	db02      	blt.n	8022c2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022c24:	42bb      	cmp	r3, r7
 8022c26:	f2c0 8184 	blt.w	8022f32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8022c2a:	f11c 0c01 	adds.w	ip, ip, #1
 8022c2e:	f100 8172 	bmi.w	8022f16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c32:	4561      	cmp	r1, ip
 8022c34:	f2c0 816f 	blt.w	8022f16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c38:	3301      	adds	r3, #1
 8022c3a:	f100 816c 	bmi.w	8022f16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c3e:	429a      	cmp	r2, r3
 8022c40:	f2c0 8169 	blt.w	8022f16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022c44:	9b07      	ldr	r3, [sp, #28]
 8022c46:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022c48:	9317      	str	r3, [sp, #92]	; 0x5c
 8022c4a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022c4c:	2b00      	cmp	r3, #0
 8022c4e:	f340 818e 	ble.w	8022f6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8022c52:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022c54:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022c58:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022c5a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8022c5e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022c60:	141b      	asrs	r3, r3, #16
 8022c62:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022c66:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022c6a:	f100 81d1 	bmi.w	8023010 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c6e:	f101 38ff 	add.w	r8, r1, #4294967295
 8022c72:	4543      	cmp	r3, r8
 8022c74:	f280 81cc 	bge.w	8023010 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c78:	f1bc 0f00 	cmp.w	ip, #0
 8022c7c:	f2c0 81c8 	blt.w	8023010 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c80:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022c84:	45c4      	cmp	ip, r8
 8022c86:	f280 81c3 	bge.w	8023010 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022c8a:	b209      	sxth	r1, r1
 8022c8c:	fb0c 3301 	mla	r3, ip, r1, r3
 8022c90:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022c92:	eb04 0803 	add.w	r8, r4, r3
 8022c96:	5ce3      	ldrb	r3, [r4, r3]
 8022c98:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022c9c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022ca0:	2a00      	cmp	r2, #0
 8022ca2:	f000 81aa 	beq.w	8022ffa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8022ca6:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022caa:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8022cae:	940b      	str	r4, [sp, #44]	; 0x2c
 8022cb0:	0e24      	lsrs	r4, r4, #24
 8022cb2:	9412      	str	r4, [sp, #72]	; 0x48
 8022cb4:	b178      	cbz	r0, 8022cd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022cb6:	eb08 0c01 	add.w	ip, r8, r1
 8022cba:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022cbe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022cc2:	9108      	str	r1, [sp, #32]
 8022cc4:	0e09      	lsrs	r1, r1, #24
 8022cc6:	9110      	str	r1, [sp, #64]	; 0x40
 8022cc8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8022ccc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022cd0:	910c      	str	r1, [sp, #48]	; 0x30
 8022cd2:	0e09      	lsrs	r1, r1, #24
 8022cd4:	9113      	str	r1, [sp, #76]	; 0x4c
 8022cd6:	b292      	uxth	r2, r2
 8022cd8:	b280      	uxth	r0, r0
 8022cda:	fb02 f900 	mul.w	r9, r2, r0
 8022cde:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8022ce2:	0112      	lsls	r2, r2, #4
 8022ce4:	eba2 0809 	sub.w	r8, r2, r9
 8022ce8:	b280      	uxth	r0, r0
 8022cea:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8022cee:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022cf0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022cf2:	fa1f f888 	uxth.w	r8, r8
 8022cf6:	1a12      	subs	r2, r2, r0
 8022cf8:	b292      	uxth	r2, r2
 8022cfa:	fb08 f101 	mul.w	r1, r8, r1
 8022cfe:	fb02 110e 	mla	r1, r2, lr, r1
 8022d02:	fb00 1104 	mla	r1, r0, r4, r1
 8022d06:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022d08:	fb09 1104 	mla	r1, r9, r4, r1
 8022d0c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022d10:	2900      	cmp	r1, #0
 8022d12:	f000 80f5 	beq.w	8022f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022d16:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8022d1a:	d01b      	beq.n	8022d54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8022d1c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022d20:	fb0e fa0a 	mul.w	sl, lr, sl
 8022d24:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022d28:	fb0e fe03 	mul.w	lr, lr, r3
 8022d2c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022d30:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022d34:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022d38:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8022d3c:	4453      	add	r3, sl
 8022d3e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022d42:	0a1b      	lsrs	r3, r3, #8
 8022d44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d48:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022d4c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022d50:	ea43 030c 	orr.w	r3, r3, ip
 8022d54:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d56:	2cff      	cmp	r4, #255	; 0xff
 8022d58:	d021      	beq.n	8022d9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8022d5a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022d5c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022d60:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d62:	fb04 fb0b 	mul.w	fp, r4, fp
 8022d66:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022d68:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022d6c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022d6e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022d72:	fb04 fa0a 	mul.w	sl, r4, sl
 8022d76:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d7a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022d7e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022d82:	44de      	add	lr, fp
 8022d84:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022d88:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022d8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022d94:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d98:	ea4e 040a 	orr.w	r4, lr, sl
 8022d9c:	940b      	str	r4, [sp, #44]	; 0x2c
 8022d9e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022da0:	2cff      	cmp	r4, #255	; 0xff
 8022da2:	d021      	beq.n	8022de8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8022da4:	9c08      	ldr	r4, [sp, #32]
 8022da6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022daa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022dac:	fb04 fb0b 	mul.w	fp, r4, fp
 8022db0:	9c08      	ldr	r4, [sp, #32]
 8022db2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022db6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022db8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022dbc:	fb04 fa0a 	mul.w	sl, r4, sl
 8022dc0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022dc4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022dc8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022dcc:	44de      	add	lr, fp
 8022dce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022dd2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022dd6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022dda:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022dde:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022de2:	ea4e 040a 	orr.w	r4, lr, sl
 8022de6:	9408      	str	r4, [sp, #32]
 8022de8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022dea:	2cff      	cmp	r4, #255	; 0xff
 8022dec:	d021      	beq.n	8022e32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022dee:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022df0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022df4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022df6:	fb04 fb0b 	mul.w	fp, r4, fp
 8022dfa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022dfc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022e00:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022e02:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022e06:	fb04 fa0a 	mul.w	sl, r4, sl
 8022e0a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022e0e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022e12:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022e16:	44de      	add	lr, fp
 8022e18:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022e1c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022e20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022e24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022e28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022e2c:	ea4e 040a 	orr.w	r4, lr, sl
 8022e30:	940c      	str	r4, [sp, #48]	; 0x30
 8022e32:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022e34:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022e38:	9c08      	ldr	r4, [sp, #32]
 8022e3a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8022e3e:	fb08 fc0c 	mul.w	ip, r8, ip
 8022e42:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022e46:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022e4a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022e4c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022e50:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022e54:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022e56:	fb09 cc0e 	mla	ip, r9, lr, ip
 8022e5a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8022e5e:	fb08 f80e 	mul.w	r8, r8, lr
 8022e62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022e66:	fb02 8303 	mla	r3, r2, r3, r8
 8022e6a:	9a08      	ldr	r2, [sp, #32]
 8022e6c:	f8b7 8000 	ldrh.w	r8, [r7]
 8022e70:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022e74:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022e76:	fb00 330a 	mla	r3, r0, sl, r3
 8022e7a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8022e7e:	fb09 3900 	mla	r9, r9, r0, r3
 8022e82:	43c9      	mvns	r1, r1
 8022e84:	ea4f 2228 	mov.w	r2, r8, asr #8
 8022e88:	fa5f fe81 	uxtb.w	lr, r1
 8022e8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022e90:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022e94:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022e98:	fb02 f20e 	mul.w	r2, r2, lr
 8022e9c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ea0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8022ea4:	ea4c 0c09 	orr.w	ip, ip, r9
 8022ea8:	1c53      	adds	r3, r2, #1
 8022eaa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8022eae:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8022eb2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8022eb6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022eba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022ebe:	4a63      	ldr	r2, [pc, #396]	; (802304c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8022ec0:	fb00 f00e 	mul.w	r0, r0, lr
 8022ec4:	b2db      	uxtb	r3, r3
 8022ec6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8022eca:	1c43      	adds	r3, r0, #1
 8022ecc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022ed0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8022ed4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8022ed8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022edc:	b2c9      	uxtb	r1, r1
 8022ede:	00db      	lsls	r3, r3, #3
 8022ee0:	fb01 f10e 	mul.w	r1, r1, lr
 8022ee4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ee8:	4313      	orrs	r3, r2
 8022eea:	1c4a      	adds	r2, r1, #1
 8022eec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022ef0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022ef4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022ef8:	ea4c 0c03 	orr.w	ip, ip, r3
 8022efc:	f8a7 c000 	strh.w	ip, [r7]
 8022f00:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022f02:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022f04:	441a      	add	r2, r3
 8022f06:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022f08:	9225      	str	r2, [sp, #148]	; 0x94
 8022f0a:	441d      	add	r5, r3
 8022f0c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022f0e:	3b01      	subs	r3, #1
 8022f10:	3702      	adds	r7, #2
 8022f12:	9317      	str	r3, [sp, #92]	; 0x5c
 8022f14:	e699      	b.n	8022c4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022f16:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022f18:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022f1a:	441c      	add	r4, r3
 8022f1c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022f1e:	9425      	str	r4, [sp, #148]	; 0x94
 8022f20:	441d      	add	r5, r3
 8022f22:	9b07      	ldr	r3, [sp, #28]
 8022f24:	3b01      	subs	r3, #1
 8022f26:	9307      	str	r3, [sp, #28]
 8022f28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022f2a:	3302      	adds	r3, #2
 8022f2c:	930a      	str	r3, [sp, #40]	; 0x28
 8022f2e:	e66b      	b.n	8022c08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022f30:	d024      	beq.n	8022f7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8022f32:	9b07      	ldr	r3, [sp, #28]
 8022f34:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022f36:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022f38:	3b01      	subs	r3, #1
 8022f3a:	fb00 4003 	mla	r0, r0, r3, r4
 8022f3e:	1400      	asrs	r0, r0, #16
 8022f40:	f53f ae80 	bmi.w	8022c44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f44:	3901      	subs	r1, #1
 8022f46:	4288      	cmp	r0, r1
 8022f48:	f6bf ae7c 	bge.w	8022c44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f4c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022f4e:	fb01 5303 	mla	r3, r1, r3, r5
 8022f52:	141b      	asrs	r3, r3, #16
 8022f54:	f53f ae76 	bmi.w	8022c44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f58:	3a01      	subs	r2, #1
 8022f5a:	4293      	cmp	r3, r2
 8022f5c:	f6bf ae72 	bge.w	8022c44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022f60:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022f64:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022f68:	f1bb 0f00 	cmp.w	fp, #0
 8022f6c:	dc70      	bgt.n	8023050 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8022f6e:	9b07      	ldr	r3, [sp, #28]
 8022f70:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022f74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022f76:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022f7a:	930a      	str	r3, [sp, #40]	; 0x28
 8022f7c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022f7e:	2b00      	cmp	r3, #0
 8022f80:	f340 81ae 	ble.w	80232e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022f84:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022f88:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022f8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022f90:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022f92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022f96:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022f9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022f9e:	eef0 6a62 	vmov.f32	s13, s5
 8022fa2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022fa6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022faa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022fae:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8022fb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022fb6:	eef0 6a43 	vmov.f32	s13, s6
 8022fba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022fbe:	ee12 2a90 	vmov	r2, s5
 8022fc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022fc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fca:	ee13 2a10 	vmov	r2, s6
 8022fce:	9327      	str	r3, [sp, #156]	; 0x9c
 8022fd0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fd2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022fd6:	9328      	str	r3, [sp, #160]	; 0xa0
 8022fd8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022fda:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022fdc:	3b01      	subs	r3, #1
 8022fde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022fe2:	9316      	str	r3, [sp, #88]	; 0x58
 8022fe4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022fe6:	bf08      	it	eq
 8022fe8:	4613      	moveq	r3, r2
 8022fea:	ee16 5a90 	vmov	r5, s13
 8022fee:	9307      	str	r3, [sp, #28]
 8022ff0:	eeb0 3a67 	vmov.f32	s6, s15
 8022ff4:	eef0 2a47 	vmov.f32	s5, s14
 8022ff8:	e5f8      	b.n	8022bec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8022ffa:	2800      	cmp	r0, #0
 8022ffc:	f43f ae6b 	beq.w	8022cd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023000:	f818 1001 	ldrb.w	r1, [r8, r1]
 8023004:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023008:	9108      	str	r1, [sp, #32]
 802300a:	0e09      	lsrs	r1, r1, #24
 802300c:	9110      	str	r1, [sp, #64]	; 0x40
 802300e:	e662      	b.n	8022cd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8023010:	f113 0801 	adds.w	r8, r3, #1
 8023014:	f53f af74 	bmi.w	8022f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023018:	4541      	cmp	r1, r8
 802301a:	f6ff af71 	blt.w	8022f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802301e:	f11c 0801 	adds.w	r8, ip, #1
 8023022:	f53f af6d 	bmi.w	8022f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8023026:	45c6      	cmp	lr, r8
 8023028:	f6ff af6a 	blt.w	8022f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802302c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8023030:	b209      	sxth	r1, r1
 8023032:	fa0f f38e 	sxth.w	r3, lr
 8023036:	e9cd 2004 	strd	r2, r0, [sp, #16]
 802303a:	9301      	str	r3, [sp, #4]
 802303c:	9100      	str	r1, [sp, #0]
 802303e:	4633      	mov	r3, r6
 8023040:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023042:	9819      	ldr	r0, [sp, #100]	; 0x64
 8023044:	4639      	mov	r1, r7
 8023046:	f7ff fc7a 	bl	802293e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 802304a:	e759      	b.n	8022f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802304c:	fffff800 	.word	0xfffff800
 8023050:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8023052:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8023054:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023058:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802305a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802305e:	1427      	asrs	r7, r4, #16
 8023060:	142b      	asrs	r3, r5, #16
 8023062:	fb01 7303 	mla	r3, r1, r3, r7
 8023066:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023068:	18e7      	adds	r7, r4, r3
 802306a:	5ce3      	ldrb	r3, [r4, r3]
 802306c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8023070:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023074:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023078:	2a00      	cmp	r2, #0
 802307a:	f000 8127 	beq.w	80232cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802307e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8023082:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8023086:	940d      	str	r4, [sp, #52]	; 0x34
 8023088:	0e24      	lsrs	r4, r4, #24
 802308a:	9414      	str	r4, [sp, #80]	; 0x50
 802308c:	b170      	cbz	r0, 80230ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802308e:	eb07 0e01 	add.w	lr, r7, r1
 8023092:	5c79      	ldrb	r1, [r7, r1]
 8023094:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8023098:	9109      	str	r1, [sp, #36]	; 0x24
 802309a:	0e09      	lsrs	r1, r1, #24
 802309c:	9111      	str	r1, [sp, #68]	; 0x44
 802309e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80230a2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80230a6:	910e      	str	r1, [sp, #56]	; 0x38
 80230a8:	0e09      	lsrs	r1, r1, #24
 80230aa:	9115      	str	r1, [sp, #84]	; 0x54
 80230ac:	b292      	uxth	r2, r2
 80230ae:	b280      	uxth	r0, r0
 80230b0:	fb02 f800 	mul.w	r8, r2, r0
 80230b4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80230b8:	0112      	lsls	r2, r2, #4
 80230ba:	eba2 0e08 	sub.w	lr, r2, r8
 80230be:	b280      	uxth	r0, r0
 80230c0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80230c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80230c6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80230c8:	fa1f fe8e 	uxth.w	lr, lr
 80230cc:	1a09      	subs	r1, r1, r0
 80230ce:	b289      	uxth	r1, r1
 80230d0:	fb0e f202 	mul.w	r2, lr, r2
 80230d4:	fb01 220c 	mla	r2, r1, ip, r2
 80230d8:	fb00 2204 	mla	r2, r0, r4, r2
 80230dc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80230de:	fb08 2204 	mla	r2, r8, r4, r2
 80230e2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80230e6:	2a00      	cmp	r2, #0
 80230e8:	f000 80e5 	beq.w	80232b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80230ec:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80230f0:	d019      	beq.n	8023126 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80230f2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80230f6:	fb0c fa0a 	mul.w	sl, ip, sl
 80230fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80230fe:	fb0c fc03 	mul.w	ip, ip, r3
 8023102:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023106:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802310a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802310e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023112:	4453      	add	r3, sl
 8023114:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023118:	0a1b      	lsrs	r3, r3, #8
 802311a:	0a3f      	lsrs	r7, r7, #8
 802311c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023120:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023124:	433b      	orrs	r3, r7
 8023126:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023128:	2cff      	cmp	r4, #255	; 0xff
 802312a:	d020      	beq.n	802316e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 802312c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802312e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023132:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023134:	4367      	muls	r7, r4
 8023136:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023138:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802313c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802313e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023142:	fb04 fa0a 	mul.w	sl, r4, sl
 8023146:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802314a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802314e:	44bc      	add	ip, r7
 8023150:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023154:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023158:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802315c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023160:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023164:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023168:	ea4c 040a 	orr.w	r4, ip, sl
 802316c:	940d      	str	r4, [sp, #52]	; 0x34
 802316e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023170:	2cff      	cmp	r4, #255	; 0xff
 8023172:	d020      	beq.n	80231b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8023174:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023176:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802317a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802317c:	4367      	muls	r7, r4
 802317e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023180:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8023184:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023186:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802318a:	fb04 fa0a 	mul.w	sl, r4, sl
 802318e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023192:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023196:	44bc      	add	ip, r7
 8023198:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802319c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80231a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80231a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80231b0:	ea4c 040a 	orr.w	r4, ip, sl
 80231b4:	9409      	str	r4, [sp, #36]	; 0x24
 80231b6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80231b8:	2cff      	cmp	r4, #255	; 0xff
 80231ba:	d020      	beq.n	80231fe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80231bc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80231be:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80231c2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80231c4:	4367      	muls	r7, r4
 80231c6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80231c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80231cc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80231ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80231d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80231d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80231da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231de:	44bc      	add	ip, r7
 80231e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80231e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80231e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80231ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80231f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80231f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80231f8:	ea4c 040a 	orr.w	r4, ip, sl
 80231fc:	940e      	str	r4, [sp, #56]	; 0x38
 80231fe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023200:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8023204:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8023206:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802320a:	fb0e f707 	mul.w	r7, lr, r7
 802320e:	fb01 770c 	mla	r7, r1, ip, r7
 8023212:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023216:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023218:	fb00 770c 	mla	r7, r0, ip, r7
 802321c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023220:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023222:	fb08 770c 	mla	r7, r8, ip, r7
 8023226:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802322a:	fb0e fe0c 	mul.w	lr, lr, ip
 802322e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023232:	fb01 e303 	mla	r3, r1, r3, lr
 8023236:	9909      	ldr	r1, [sp, #36]	; 0x24
 8023238:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802323c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802323e:	fb00 330a 	mla	r3, r0, sl, r3
 8023242:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8023246:	fb08 3c0c 	mla	ip, r8, ip, r3
 802324a:	f8b9 3000 	ldrh.w	r3, [r9]
 802324e:	43d2      	mvns	r2, r2
 8023250:	1218      	asrs	r0, r3, #8
 8023252:	b2d2      	uxtb	r2, r2
 8023254:	10d9      	asrs	r1, r3, #3
 8023256:	0a3f      	lsrs	r7, r7, #8
 8023258:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802325c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023260:	00db      	lsls	r3, r3, #3
 8023262:	4350      	muls	r0, r2
 8023264:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023268:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802326c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023270:	b2db      	uxtb	r3, r3
 8023272:	ea47 070c 	orr.w	r7, r7, ip
 8023276:	4351      	muls	r1, r2
 8023278:	4353      	muls	r3, r2
 802327a:	1c42      	adds	r2, r0, #1
 802327c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023280:	0c3a      	lsrs	r2, r7, #16
 8023282:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023286:	4a18      	ldr	r2, [pc, #96]	; (80232e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8023288:	b2c0      	uxtb	r0, r0
 802328a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802328e:	1c4a      	adds	r2, r1, #1
 8023290:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023294:	0a3a      	lsrs	r2, r7, #8
 8023296:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802329a:	00c9      	lsls	r1, r1, #3
 802329c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80232a0:	4301      	orrs	r1, r0
 80232a2:	1c58      	adds	r0, r3, #1
 80232a4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80232a8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80232ac:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80232b0:	4308      	orrs	r0, r1
 80232b2:	f8a9 0000 	strh.w	r0, [r9]
 80232b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80232b8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80232ba:	441a      	add	r2, r3
 80232bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80232be:	9225      	str	r2, [sp, #148]	; 0x94
 80232c0:	f109 0902 	add.w	r9, r9, #2
 80232c4:	441d      	add	r5, r3
 80232c6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80232ca:	e64d      	b.n	8022f68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80232cc:	2800      	cmp	r0, #0
 80232ce:	f43f aeed 	beq.w	80230ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80232d2:	5c79      	ldrb	r1, [r7, r1]
 80232d4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80232d8:	9109      	str	r1, [sp, #36]	; 0x24
 80232da:	0e09      	lsrs	r1, r1, #24
 80232dc:	9111      	str	r1, [sp, #68]	; 0x44
 80232de:	e6e5      	b.n	80230ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80232e0:	b01b      	add	sp, #108	; 0x6c
 80232e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80232e6:	bf00      	nop
 80232e8:	fffff800 	.word	0xfffff800

080232ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80232ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232f0:	b085      	sub	sp, #20
 80232f2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80232f6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80232fa:	9103      	str	r1, [sp, #12]
 80232fc:	fb00 7406 	mla	r4, r0, r6, r7
 8023300:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8023304:	2800      	cmp	r0, #0
 8023306:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802330a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802330e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023312:	9501      	str	r5, [sp, #4]
 8023314:	eb03 0904 	add.w	r9, r3, r4
 8023318:	f2c0 8150 	blt.w	80235bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802331c:	4583      	cmp	fp, r0
 802331e:	f340 814d 	ble.w	80235bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8023322:	2f00      	cmp	r7, #0
 8023324:	f2c0 8146 	blt.w	80235b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8023328:	42be      	cmp	r6, r7
 802332a:	f340 8143 	ble.w	80235b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802332e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8023332:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8023336:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802333a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802333e:	4355      	muls	r5, r2
 8023340:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023344:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023348:	fb0c f203 	mul.w	r2, ip, r3
 802334c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023350:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023354:	441d      	add	r5, r3
 8023356:	f102 0320 	add.w	r3, r2, #32
 802335a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802335e:	0a1b      	lsrs	r3, r3, #8
 8023360:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023364:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023368:	431c      	orrs	r4, r3
 802336a:	1c7b      	adds	r3, r7, #1
 802336c:	f100 812b 	bmi.w	80235c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8023370:	429e      	cmp	r6, r3
 8023372:	f340 8128 	ble.w	80235c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8023376:	2900      	cmp	r1, #0
 8023378:	f000 8128 	beq.w	80235cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802337c:	9a01      	ldr	r2, [sp, #4]
 802337e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023382:	8855      	ldrh	r5, [r2, #2]
 8023384:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023388:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802338c:	fb08 f802 	mul.w	r8, r8, r2
 8023390:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023394:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023398:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802339c:	435d      	muls	r5, r3
 802339e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80233a2:	44d0      	add	r8, sl
 80233a4:	f105 0a20 	add.w	sl, r5, #32
 80233a8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80233ac:	0a2d      	lsrs	r5, r5, #8
 80233ae:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80233b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80233b6:	432a      	orrs	r2, r5
 80233b8:	3001      	adds	r0, #1
 80233ba:	f100 810d 	bmi.w	80235d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80233be:	4583      	cmp	fp, r0
 80233c0:	f340 810a 	ble.w	80235d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80233c4:	f1be 0f00 	cmp.w	lr, #0
 80233c8:	f000 810b 	beq.w	80235e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80233cc:	2f00      	cmp	r7, #0
 80233ce:	f2c0 8100 	blt.w	80235d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80233d2:	42be      	cmp	r6, r7
 80233d4:	f340 80fd 	ble.w	80235d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80233d8:	9801      	ldr	r0, [sp, #4]
 80233da:	f819 5006 	ldrb.w	r5, [r9, r6]
 80233de:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80233e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80233e6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80233ea:	fb0a fa00 	mul.w	sl, sl, r0
 80233ee:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80233f2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80233f6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80233fa:	fb05 f808 	mul.w	r8, r5, r8
 80233fe:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023402:	4482      	add	sl, r0
 8023404:	f108 0020 	add.w	r0, r8, #32
 8023408:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802340c:	0a00      	lsrs	r0, r0, #8
 802340e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023412:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023416:	ea4b 0b00 	orr.w	fp, fp, r0
 802341a:	3701      	adds	r7, #1
 802341c:	f100 80e6 	bmi.w	80235ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8023420:	42be      	cmp	r6, r7
 8023422:	f340 80e3 	ble.w	80235ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8023426:	2900      	cmp	r1, #0
 8023428:	f000 80e3 	beq.w	80235f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802342c:	3601      	adds	r6, #1
 802342e:	9801      	ldr	r0, [sp, #4]
 8023430:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023434:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023438:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802343c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023440:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023444:	fb09 f906 	mul.w	r9, r9, r6
 8023448:	fb07 f800 	mul.w	r8, r7, r0
 802344c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023450:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023454:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023458:	44d1      	add	r9, sl
 802345a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802345e:	f108 0020 	add.w	r0, r8, #32
 8023462:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023466:	0a00      	lsrs	r0, r0, #8
 8023468:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802346c:	4330      	orrs	r0, r6
 802346e:	b28e      	uxth	r6, r1
 8023470:	fa1f f98e 	uxth.w	r9, lr
 8023474:	fb06 f809 	mul.w	r8, r6, r9
 8023478:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802347c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023480:	0136      	lsls	r6, r6, #4
 8023482:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023486:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802348a:	9601      	str	r6, [sp, #4]
 802348c:	ea4a 0404 	orr.w	r4, sl, r4
 8023490:	fa1f f689 	uxth.w	r6, r9
 8023494:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023498:	fb11 f90e 	smulbb	r9, r1, lr
 802349c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80234a0:	9602      	str	r6, [sp, #8]
 80234a2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80234a6:	4626      	mov	r6, r4
 80234a8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80234ac:	f1ce 0410 	rsb	r4, lr, #16
 80234b0:	1a64      	subs	r4, r4, r1
 80234b2:	ea4a 0202 	orr.w	r2, sl, r2
 80234b6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80234ba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80234be:	434a      	muls	r2, r1
 80234c0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80234c4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80234c8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80234cc:	fb04 2406 	mla	r4, r4, r6, r2
 80234d0:	ea4a 0000 	orr.w	r0, sl, r0
 80234d4:	fb09 4200 	mla	r2, r9, r0, r4
 80234d8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80234dc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80234e0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80234e4:	ea44 0b0b 	orr.w	fp, r4, fp
 80234e8:	9c01      	ldr	r4, [sp, #4]
 80234ea:	9e02      	ldr	r6, [sp, #8]
 80234ec:	9903      	ldr	r1, [sp, #12]
 80234ee:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80234f2:	1ba4      	subs	r4, r4, r6
 80234f4:	9e01      	ldr	r6, [sp, #4]
 80234f6:	8808      	ldrh	r0, [r1, #0]
 80234f8:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80234fc:	eba6 0608 	sub.w	r6, r6, r8
 8023500:	b2b6      	uxth	r6, r6
 8023502:	b2a4      	uxth	r4, r4
 8023504:	4373      	muls	r3, r6
 8023506:	fb0c 3304 	mla	r3, ip, r4, r3
 802350a:	9c02      	ldr	r4, [sp, #8]
 802350c:	fb04 3505 	mla	r5, r4, r5, r3
 8023510:	fb08 5707 	mla	r7, r8, r7, r5
 8023514:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023518:	b289      	uxth	r1, r1
 802351a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802351e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023522:	434f      	muls	r7, r1
 8023524:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023528:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802352c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023530:	1c7b      	adds	r3, r7, #1
 8023532:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023536:	ea42 0e0e 	orr.w	lr, r2, lr
 802353a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802353e:	fa1f f28e 	uxth.w	r2, lr
 8023542:	1203      	asrs	r3, r0, #8
 8023544:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8023548:	b2ff      	uxtb	r7, r7
 802354a:	1215      	asrs	r5, r2, #8
 802354c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023550:	fb13 f307 	smulbb	r3, r3, r7
 8023554:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023558:	fb05 3501 	mla	r5, r5, r1, r3
 802355c:	10c3      	asrs	r3, r0, #3
 802355e:	10d4      	asrs	r4, r2, #3
 8023560:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023564:	fb13 f307 	smulbb	r3, r3, r7
 8023568:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802356c:	fb04 3401 	mla	r4, r4, r1, r3
 8023570:	00c3      	lsls	r3, r0, #3
 8023572:	00d2      	lsls	r2, r2, #3
 8023574:	b2db      	uxtb	r3, r3
 8023576:	fb13 f307 	smulbb	r3, r3, r7
 802357a:	b2d2      	uxtb	r2, r2
 802357c:	fb02 3101 	mla	r1, r2, r1, r3
 8023580:	b2ad      	uxth	r5, r5
 8023582:	b289      	uxth	r1, r1
 8023584:	b2a4      	uxth	r4, r4
 8023586:	1c6b      	adds	r3, r5, #1
 8023588:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802358c:	1c62      	adds	r2, r4, #1
 802358e:	1c4b      	adds	r3, r1, #1
 8023590:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023594:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023598:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802359c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80235a0:	0964      	lsrs	r4, r4, #5
 80235a2:	432b      	orrs	r3, r5
 80235a4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80235a8:	9a03      	ldr	r2, [sp, #12]
 80235aa:	4323      	orrs	r3, r4
 80235ac:	8013      	strh	r3, [r2, #0]
 80235ae:	b005      	add	sp, #20
 80235b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80235b4:	f04f 0c00 	mov.w	ip, #0
 80235b8:	4664      	mov	r4, ip
 80235ba:	e6d6      	b.n	802336a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80235bc:	2300      	movs	r3, #0
 80235be:	469c      	mov	ip, r3
 80235c0:	461a      	mov	r2, r3
 80235c2:	461c      	mov	r4, r3
 80235c4:	e6f8      	b.n	80233b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80235c6:	2300      	movs	r3, #0
 80235c8:	461a      	mov	r2, r3
 80235ca:	e6f5      	b.n	80233b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80235cc:	460b      	mov	r3, r1
 80235ce:	460a      	mov	r2, r1
 80235d0:	e6f2      	b.n	80233b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80235d2:	2500      	movs	r5, #0
 80235d4:	46ab      	mov	fp, r5
 80235d6:	e720      	b.n	802341a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80235d8:	2700      	movs	r7, #0
 80235da:	463d      	mov	r5, r7
 80235dc:	4638      	mov	r0, r7
 80235de:	46bb      	mov	fp, r7
 80235e0:	e745      	b.n	802346e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80235e2:	4677      	mov	r7, lr
 80235e4:	4675      	mov	r5, lr
 80235e6:	4670      	mov	r0, lr
 80235e8:	46f3      	mov	fp, lr
 80235ea:	e740      	b.n	802346e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80235ec:	2700      	movs	r7, #0
 80235ee:	4638      	mov	r0, r7
 80235f0:	e73d      	b.n	802346e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80235f2:	460f      	mov	r7, r1
 80235f4:	4608      	mov	r0, r1
 80235f6:	e73a      	b.n	802346e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080235f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80235f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80235fc:	b097      	sub	sp, #92	; 0x5c
 80235fe:	9214      	str	r2, [sp, #80]	; 0x50
 8023600:	9308      	str	r3, [sp, #32]
 8023602:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8023604:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8023608:	9312      	str	r3, [sp, #72]	; 0x48
 802360a:	9111      	str	r1, [sp, #68]	; 0x44
 802360c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8023610:	9015      	str	r0, [sp, #84]	; 0x54
 8023612:	6850      	ldr	r0, [r2, #4]
 8023614:	6812      	ldr	r2, [r2, #0]
 8023616:	fb00 1303 	mla	r3, r0, r3, r1
 802361a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802361e:	9309      	str	r3, [sp, #36]	; 0x24
 8023620:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023622:	681b      	ldr	r3, [r3, #0]
 8023624:	930b      	str	r3, [sp, #44]	; 0x2c
 8023626:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023628:	685b      	ldr	r3, [r3, #4]
 802362a:	930c      	str	r3, [sp, #48]	; 0x30
 802362c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8023630:	930a      	str	r3, [sp, #40]	; 0x28
 8023632:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023634:	2b00      	cmp	r3, #0
 8023636:	dc03      	bgt.n	8023640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023638:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802363a:	2b00      	cmp	r3, #0
 802363c:	f340 83cb 	ble.w	8023dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023640:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023642:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023646:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802364a:	1e48      	subs	r0, r1, #1
 802364c:	1e55      	subs	r5, r2, #1
 802364e:	9b08      	ldr	r3, [sp, #32]
 8023650:	2b00      	cmp	r3, #0
 8023652:	f340 81a3 	ble.w	802399c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8023656:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023658:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802365a:	1436      	asrs	r6, r6, #16
 802365c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023660:	d406      	bmi.n	8023670 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023662:	4286      	cmp	r6, r0
 8023664:	da04      	bge.n	8023670 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023666:	2b00      	cmp	r3, #0
 8023668:	db02      	blt.n	8023670 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802366a:	42ab      	cmp	r3, r5
 802366c:	f2c0 8197 	blt.w	802399e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8023670:	3601      	adds	r6, #1
 8023672:	f100 8184 	bmi.w	802397e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023676:	42b1      	cmp	r1, r6
 8023678:	f2c0 8181 	blt.w	802397e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802367c:	3301      	adds	r3, #1
 802367e:	f100 817e 	bmi.w	802397e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023682:	429a      	cmp	r2, r3
 8023684:	f2c0 817b 	blt.w	802397e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023688:	9b08      	ldr	r3, [sp, #32]
 802368a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802368c:	9313      	str	r3, [sp, #76]	; 0x4c
 802368e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023692:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023694:	2b00      	cmp	r3, #0
 8023696:	f340 81a4 	ble.w	80239e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802369a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802369c:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802369e:	1418      	asrs	r0, r3, #16
 80236a0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80236a2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80236a6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80236a8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80236ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80236ae:	142d      	asrs	r5, r5, #16
 80236b0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80236b4:	f100 81f8 	bmi.w	8023aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236b8:	f102 3eff 	add.w	lr, r2, #4294967295
 80236bc:	4575      	cmp	r5, lr
 80236be:	f280 81f3 	bge.w	8023aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236c2:	2800      	cmp	r0, #0
 80236c4:	f2c0 81f0 	blt.w	8023aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236c8:	f103 3eff 	add.w	lr, r3, #4294967295
 80236cc:	4570      	cmp	r0, lr
 80236ce:	f280 81eb 	bge.w	8023aa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80236d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80236d4:	b212      	sxth	r2, r2
 80236d6:	fb00 5002 	mla	r0, r0, r2, r5
 80236da:	fa1f fe81 	uxth.w	lr, r1
 80236de:	eb03 0a00 	add.w	sl, r3, r0
 80236e2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80236e6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80236ea:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80236ee:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80236f2:	b29b      	uxth	r3, r3
 80236f4:	f1bc 0f00 	cmp.w	ip, #0
 80236f8:	f000 81b9 	beq.w	8023a6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80236fc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023700:	940d      	str	r4, [sp, #52]	; 0x34
 8023702:	eb0a 0b02 	add.w	fp, sl, r2
 8023706:	fa1f fa8c 	uxth.w	sl, ip
 802370a:	fb0a fe0e 	mul.w	lr, sl, lr
 802370e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023712:	fa1f fa8a 	uxth.w	sl, sl
 8023716:	eba5 050e 	sub.w	r5, r5, lr
 802371a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802371e:	940e      	str	r4, [sp, #56]	; 0x38
 8023720:	eba3 030a 	sub.w	r3, r3, sl
 8023724:	b2ad      	uxth	r5, r5
 8023726:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023728:	b29b      	uxth	r3, r3
 802372a:	fb08 f505 	mul.w	r5, r8, r5
 802372e:	fb09 5303 	mla	r3, r9, r3, r5
 8023732:	fb0a 3304 	mla	r3, sl, r4, r3
 8023736:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023738:	fb0e 3304 	mla	r3, lr, r4, r3
 802373c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023740:	2b00      	cmp	r3, #0
 8023742:	f000 810f 	beq.w	8023964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023746:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023748:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802374c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023750:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023754:	f000 8190 	beq.w	8023a78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8023758:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802375c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023760:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023764:	fb09 f000 	mul.w	r0, r9, r0
 8023768:	fb0a fe0e 	mul.w	lr, sl, lr
 802376c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023770:	f100 0b20 	add.w	fp, r0, #32
 8023774:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023778:	44ce      	add	lr, r9
 802377a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802377e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023782:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023786:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802378a:	ea4e 0909 	orr.w	r9, lr, r9
 802378e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023792:	8868      	ldrh	r0, [r5, #2]
 8023794:	d019      	beq.n	80237ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8023796:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802379a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802379e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80237a2:	fb08 f800 	mul.w	r8, r8, r0
 80237a6:	fb0a fe0e 	mul.w	lr, sl, lr
 80237aa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80237ae:	f108 0b20 	add.w	fp, r8, #32
 80237b2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80237b6:	4486      	add	lr, r0
 80237b8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80237bc:	0a00      	lsrs	r0, r0, #8
 80237be:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80237c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80237c6:	ea4e 0000 	orr.w	r0, lr, r0
 80237ca:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80237ce:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80237d2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80237d6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80237da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80237de:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80237e2:	ea4e 0909 	orr.w	r9, lr, r9
 80237e6:	ea4a 0000 	orr.w	r0, sl, r0
 80237ea:	f1bc 0f00 	cmp.w	ip, #0
 80237ee:	f000 8145 	beq.w	8023a7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80237f2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80237f6:	3a01      	subs	r2, #1
 80237f8:	0052      	lsls	r2, r2, #1
 80237fa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80237fc:	3202      	adds	r2, #2
 80237fe:	2cff      	cmp	r4, #255	; 0xff
 8023800:	eb05 0e02 	add.w	lr, r5, r2
 8023804:	5aaa      	ldrh	r2, [r5, r2]
 8023806:	d018      	beq.n	802383a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023808:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802380c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023810:	fb04 fa02 	mul.w	sl, r4, r2
 8023814:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023818:	fb08 f805 	mul.w	r8, r8, r5
 802381c:	f10a 0520 	add.w	r5, sl, #32
 8023820:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023824:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023828:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802382c:	4442      	add	r2, r8
 802382e:	0a2d      	lsrs	r5, r5, #8
 8023830:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023834:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023838:	432a      	orrs	r2, r5
 802383a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802383c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023840:	2cff      	cmp	r4, #255	; 0xff
 8023842:	d01a      	beq.n	802387a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8023844:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023848:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802384c:	fb04 fa05 	mul.w	sl, r4, r5
 8023850:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023854:	fb08 f80e 	mul.w	r8, r8, lr
 8023858:	f10a 0e20 	add.w	lr, sl, #32
 802385c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023860:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023864:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023868:	4445      	add	r5, r8
 802386a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802386e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023872:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023876:	ea45 050e 	orr.w	r5, r5, lr
 802387a:	fb1c fe01 	smulbb	lr, ip, r1
 802387e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023882:	f1cc 0810 	rsb	r8, ip, #16
 8023886:	eba8 0801 	sub.w	r8, r8, r1
 802388a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802388e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023892:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023896:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802389a:	4341      	muls	r1, r0
 802389c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80238a0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80238a4:	ea4a 0202 	orr.w	r2, sl, r2
 80238a8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80238ac:	fb09 1108 	mla	r1, r9, r8, r1
 80238b0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80238b4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80238b8:	fb0c 1102 	mla	r1, ip, r2, r1
 80238bc:	ea4b 0505 	orr.w	r5, fp, r5
 80238c0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80238c4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80238c8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80238cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80238d0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80238d4:	ea42 0e0e 	orr.w	lr, r2, lr
 80238d8:	fa1f f28e 	uxth.w	r2, lr
 80238dc:	2bff      	cmp	r3, #255	; 0xff
 80238de:	d103      	bne.n	80238e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80238e0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80238e2:	29ff      	cmp	r1, #255	; 0xff
 80238e4:	f000 80de 	beq.w	8023aa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80238e8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80238ea:	8838      	ldrh	r0, [r7, #0]
 80238ec:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80238ee:	434b      	muls	r3, r1
 80238f0:	f103 0c01 	add.w	ip, r3, #1
 80238f4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80238f8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80238fc:	fa5f fc83 	uxtb.w	ip, r3
 8023900:	1203      	asrs	r3, r0, #8
 8023902:	1215      	asrs	r5, r2, #8
 8023904:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023908:	fb13 f30c 	smulbb	r3, r3, ip
 802390c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023910:	fb05 3501 	mla	r5, r5, r1, r3
 8023914:	10c3      	asrs	r3, r0, #3
 8023916:	10d1      	asrs	r1, r2, #3
 8023918:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802391c:	fb13 f30c 	smulbb	r3, r3, ip
 8023920:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023924:	fb01 3104 	mla	r1, r1, r4, r3
 8023928:	00c3      	lsls	r3, r0, #3
 802392a:	00d2      	lsls	r2, r2, #3
 802392c:	b2db      	uxtb	r3, r3
 802392e:	b2d2      	uxtb	r2, r2
 8023930:	fb13 f30c 	smulbb	r3, r3, ip
 8023934:	b2ad      	uxth	r5, r5
 8023936:	fb02 3304 	mla	r3, r2, r4, r3
 802393a:	b29a      	uxth	r2, r3
 802393c:	1c6b      	adds	r3, r5, #1
 802393e:	b289      	uxth	r1, r1
 8023940:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023944:	1c53      	adds	r3, r2, #1
 8023946:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802394a:	1c4a      	adds	r2, r1, #1
 802394c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023950:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023954:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023958:	0949      	lsrs	r1, r1, #5
 802395a:	432b      	orrs	r3, r5
 802395c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023960:	430b      	orrs	r3, r1
 8023962:	803b      	strh	r3, [r7, #0]
 8023964:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023966:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023968:	4413      	add	r3, r2
 802396a:	9321      	str	r3, [sp, #132]	; 0x84
 802396c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802396e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023970:	441a      	add	r2, r3
 8023972:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023974:	9222      	str	r2, [sp, #136]	; 0x88
 8023976:	3b01      	subs	r3, #1
 8023978:	3702      	adds	r7, #2
 802397a:	9313      	str	r3, [sp, #76]	; 0x4c
 802397c:	e689      	b.n	8023692 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802397e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023980:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8023982:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8023984:	4433      	add	r3, r6
 8023986:	9321      	str	r3, [sp, #132]	; 0x84
 8023988:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802398a:	441c      	add	r4, r3
 802398c:	9b08      	ldr	r3, [sp, #32]
 802398e:	9422      	str	r4, [sp, #136]	; 0x88
 8023990:	3b01      	subs	r3, #1
 8023992:	9308      	str	r3, [sp, #32]
 8023994:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023996:	3302      	adds	r3, #2
 8023998:	9309      	str	r3, [sp, #36]	; 0x24
 802399a:	e658      	b.n	802364e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802399c:	d028      	beq.n	80239f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802399e:	9b08      	ldr	r3, [sp, #32]
 80239a0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80239a2:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80239a4:	3b01      	subs	r3, #1
 80239a6:	fb00 5003 	mla	r0, r0, r3, r5
 80239aa:	1400      	asrs	r0, r0, #16
 80239ac:	f53f ae6c 	bmi.w	8023688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80239b0:	3901      	subs	r1, #1
 80239b2:	4288      	cmp	r0, r1
 80239b4:	f6bf ae68 	bge.w	8023688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80239b8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80239ba:	9822      	ldr	r0, [sp, #136]	; 0x88
 80239bc:	fb01 0303 	mla	r3, r1, r3, r0
 80239c0:	141b      	asrs	r3, r3, #16
 80239c2:	f53f ae61 	bmi.w	8023688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80239c6:	3a01      	subs	r2, #1
 80239c8:	4293      	cmp	r3, r2
 80239ca:	f6bf ae5d 	bge.w	8023688 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80239ce:	9b08      	ldr	r3, [sp, #32]
 80239d0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80239d4:	9313      	str	r3, [sp, #76]	; 0x4c
 80239d6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80239da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80239dc:	2b00      	cmp	r3, #0
 80239de:	f300 8082 	bgt.w	8023ae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80239e2:	9b08      	ldr	r3, [sp, #32]
 80239e4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80239e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80239ea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80239ee:	9309      	str	r3, [sp, #36]	; 0x24
 80239f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80239f2:	2b00      	cmp	r3, #0
 80239f4:	f340 81ef 	ble.w	8023dd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80239f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80239fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023a00:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023a04:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023a0a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023a0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023a12:	eef0 6a62 	vmov.f32	s13, s5
 8023a16:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023a1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a1e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a22:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8023a26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023a2a:	eef0 6a43 	vmov.f32	s13, s6
 8023a2e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023a32:	ee12 2a90 	vmov	r2, s5
 8023a36:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023a3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a3e:	ee13 2a10 	vmov	r2, s6
 8023a42:	9323      	str	r3, [sp, #140]	; 0x8c
 8023a44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a46:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a4a:	9324      	str	r3, [sp, #144]	; 0x90
 8023a4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023a4e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023a50:	3b01      	subs	r3, #1
 8023a52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a56:	9311      	str	r3, [sp, #68]	; 0x44
 8023a58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023a5a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8023a5e:	bf08      	it	eq
 8023a60:	4613      	moveq	r3, r2
 8023a62:	9308      	str	r3, [sp, #32]
 8023a64:	eeb0 3a67 	vmov.f32	s6, s15
 8023a68:	eef0 2a47 	vmov.f32	s5, s14
 8023a6c:	e5e1      	b.n	8023632 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023a6e:	fb08 f505 	mul.w	r5, r8, r5
 8023a72:	fb09 5303 	mla	r3, r9, r3, r5
 8023a76:	e661      	b.n	802373c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8023a78:	4681      	mov	r9, r0
 8023a7a:	e688      	b.n	802378e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8023a7c:	f1c1 0210 	rsb	r2, r1, #16
 8023a80:	4341      	muls	r1, r0
 8023a82:	fb09 1902 	mla	r9, r9, r2, r1
 8023a86:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023a8a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023a8e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023a92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023a96:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023a9a:	ea42 0909 	orr.w	r9, r2, r9
 8023a9e:	fa1f f289 	uxth.w	r2, r9
 8023aa2:	e71b      	b.n	80238dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023aa4:	803a      	strh	r2, [r7, #0]
 8023aa6:	e75d      	b.n	8023964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023aa8:	f115 0e01 	adds.w	lr, r5, #1
 8023aac:	f53f af5a 	bmi.w	8023964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ab0:	4572      	cmp	r2, lr
 8023ab2:	f6ff af57 	blt.w	8023964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ab6:	f110 0e01 	adds.w	lr, r0, #1
 8023aba:	f53f af53 	bmi.w	8023964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023abe:	4573      	cmp	r3, lr
 8023ac0:	f6ff af50 	blt.w	8023964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ac4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023ac6:	9502      	str	r5, [sp, #8]
 8023ac8:	b21b      	sxth	r3, r3
 8023aca:	b212      	sxth	r2, r2
 8023acc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8023ad0:	9301      	str	r3, [sp, #4]
 8023ad2:	9200      	str	r2, [sp, #0]
 8023ad4:	e9cd c405 	strd	ip, r4, [sp, #20]
 8023ad8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8023adc:	4639      	mov	r1, r7
 8023ade:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023ae0:	f7ff fc04 	bl	80232ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8023ae4:	e73e      	b.n	8023964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ae6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023ae8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023aec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023aee:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023af2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023af4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023af8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8023afa:	141f      	asrs	r7, r3, #16
 8023afc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023afe:	141b      	asrs	r3, r3, #16
 8023b00:	fb01 3707 	mla	r7, r1, r7, r3
 8023b04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023b06:	fa1f fc82 	uxth.w	ip, r2
 8023b0a:	eb03 0a07 	add.w	sl, r3, r7
 8023b0e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023b12:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023b16:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023b1a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023b1e:	b29b      	uxth	r3, r3
 8023b20:	2d00      	cmp	r5, #0
 8023b22:	f000 813d 	beq.w	8023da0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023b26:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023b2a:	940f      	str	r4, [sp, #60]	; 0x3c
 8023b2c:	eb0a 0b01 	add.w	fp, sl, r1
 8023b30:	fa1f fa85 	uxth.w	sl, r5
 8023b34:	fb0a fc0c 	mul.w	ip, sl, ip
 8023b38:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023b3c:	fa1f fa8a 	uxth.w	sl, sl
 8023b40:	eba0 000c 	sub.w	r0, r0, ip
 8023b44:	eba3 030a 	sub.w	r3, r3, sl
 8023b48:	b280      	uxth	r0, r0
 8023b4a:	fb08 f000 	mul.w	r0, r8, r0
 8023b4e:	b29b      	uxth	r3, r3
 8023b50:	fb09 0303 	mla	r3, r9, r3, r0
 8023b54:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023b56:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023b5a:	9410      	str	r4, [sp, #64]	; 0x40
 8023b5c:	fb0a 3300 	mla	r3, sl, r0, r3
 8023b60:	fb0c 3304 	mla	r3, ip, r4, r3
 8023b64:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023b68:	2b00      	cmp	r3, #0
 8023b6a:	f000 810b 	beq.w	8023d84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023b6e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8023b70:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023b72:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023b76:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023b7a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023b7e:	f000 8114 	beq.w	8023daa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8023b82:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023b86:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023b8a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023b8e:	fb09 f707 	mul.w	r7, r9, r7
 8023b92:	fb0a fc0c 	mul.w	ip, sl, ip
 8023b96:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023b9a:	f107 0b20 	add.w	fp, r7, #32
 8023b9e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023ba2:	44cc      	add	ip, r9
 8023ba4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023ba8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023bac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023bb0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023bb4:	ea4c 0909 	orr.w	r9, ip, r9
 8023bb8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023bbc:	8847      	ldrh	r7, [r0, #2]
 8023bbe:	d019      	beq.n	8023bf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8023bc0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023bc4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023bc8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023bcc:	fb08 f807 	mul.w	r8, r8, r7
 8023bd0:	fb0a fc0c 	mul.w	ip, sl, ip
 8023bd4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023bd8:	f108 0b20 	add.w	fp, r8, #32
 8023bdc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8023be0:	44bc      	add	ip, r7
 8023be2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023be6:	0a3f      	lsrs	r7, r7, #8
 8023be8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023bec:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023bf0:	ea4c 0707 	orr.w	r7, ip, r7
 8023bf4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023bf8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023bfc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023c00:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023c04:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023c08:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023c0c:	ea4c 0909 	orr.w	r9, ip, r9
 8023c10:	ea4a 0707 	orr.w	r7, sl, r7
 8023c14:	2d00      	cmp	r5, #0
 8023c16:	f000 80ca 	beq.w	8023dae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8023c1a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8023c1e:	3901      	subs	r1, #1
 8023c20:	0049      	lsls	r1, r1, #1
 8023c22:	3102      	adds	r1, #2
 8023c24:	eb00 0c01 	add.w	ip, r0, r1
 8023c28:	5a41      	ldrh	r1, [r0, r1]
 8023c2a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023c2c:	28ff      	cmp	r0, #255	; 0xff
 8023c2e:	d019      	beq.n	8023c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8023c30:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023c32:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023c36:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023c3a:	fb04 fa01 	mul.w	sl, r4, r1
 8023c3e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023c42:	fb08 f800 	mul.w	r8, r8, r0
 8023c46:	f10a 0020 	add.w	r0, sl, #32
 8023c4a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023c4e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023c52:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023c56:	4441      	add	r1, r8
 8023c58:	0a00      	lsrs	r0, r0, #8
 8023c5a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023c5e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023c62:	4301      	orrs	r1, r0
 8023c64:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023c66:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8023c6a:	2cff      	cmp	r4, #255	; 0xff
 8023c6c:	d01a      	beq.n	8023ca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8023c6e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023c72:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023c76:	fb04 fa00 	mul.w	sl, r4, r0
 8023c7a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023c7e:	fb08 f80c 	mul.w	r8, r8, ip
 8023c82:	f10a 0c20 	add.w	ip, sl, #32
 8023c86:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8023c8a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023c8e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023c92:	4440      	add	r0, r8
 8023c94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c98:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023c9c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8023ca0:	ea40 000c 	orr.w	r0, r0, ip
 8023ca4:	fb15 fc02 	smulbb	ip, r5, r2
 8023ca8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023cac:	f1c5 0810 	rsb	r8, r5, #16
 8023cb0:	eba8 0802 	sub.w	r8, r8, r2
 8023cb4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023cb8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023cbc:	437a      	muls	r2, r7
 8023cbe:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023cc2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023cc6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023cca:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023cce:	fb09 2208 	mla	r2, r9, r8, r2
 8023cd2:	ea4a 0101 	orr.w	r1, sl, r1
 8023cd6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023cda:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023cde:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023ce2:	fb05 2201 	mla	r2, r5, r1, r2
 8023ce6:	ea4b 0000 	orr.w	r0, fp, r0
 8023cea:	fb0c 2200 	mla	r2, ip, r0, r2
 8023cee:	0d57      	lsrs	r7, r2, #21
 8023cf0:	0952      	lsrs	r2, r2, #5
 8023cf2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023cf6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023cfa:	433a      	orrs	r2, r7
 8023cfc:	2bff      	cmp	r3, #255	; 0xff
 8023cfe:	b292      	uxth	r2, r2
 8023d00:	d102      	bne.n	8023d08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023d02:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023d04:	29ff      	cmp	r1, #255	; 0xff
 8023d06:	d063      	beq.n	8023dd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8023d08:	980a      	ldr	r0, [sp, #40]	; 0x28
 8023d0a:	f8be 1000 	ldrh.w	r1, [lr]
 8023d0e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023d10:	4343      	muls	r3, r0
 8023d12:	1c58      	adds	r0, r3, #1
 8023d14:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023d18:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023d1c:	1208      	asrs	r0, r1, #8
 8023d1e:	b2db      	uxtb	r3, r3
 8023d20:	1215      	asrs	r5, r2, #8
 8023d22:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023d26:	fb10 f003 	smulbb	r0, r0, r3
 8023d2a:	10cf      	asrs	r7, r1, #3
 8023d2c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023d30:	00c9      	lsls	r1, r1, #3
 8023d32:	fb05 0504 	mla	r5, r5, r4, r0
 8023d36:	b2c9      	uxtb	r1, r1
 8023d38:	10d0      	asrs	r0, r2, #3
 8023d3a:	00d2      	lsls	r2, r2, #3
 8023d3c:	fb11 f103 	smulbb	r1, r1, r3
 8023d40:	b2d2      	uxtb	r2, r2
 8023d42:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023d46:	fb02 1204 	mla	r2, r2, r4, r1
 8023d4a:	fb17 f703 	smulbb	r7, r7, r3
 8023d4e:	b2ad      	uxth	r5, r5
 8023d50:	b292      	uxth	r2, r2
 8023d52:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023d56:	fb00 7004 	mla	r0, r0, r4, r7
 8023d5a:	1c6b      	adds	r3, r5, #1
 8023d5c:	1c57      	adds	r7, r2, #1
 8023d5e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023d62:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023d66:	b280      	uxth	r0, r0
 8023d68:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023d6c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023d70:	433d      	orrs	r5, r7
 8023d72:	1c47      	adds	r7, r0, #1
 8023d74:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023d78:	097f      	lsrs	r7, r7, #5
 8023d7a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023d7e:	433d      	orrs	r5, r7
 8023d80:	f8ae 5000 	strh.w	r5, [lr]
 8023d84:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023d86:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023d88:	4413      	add	r3, r2
 8023d8a:	9321      	str	r3, [sp, #132]	; 0x84
 8023d8c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8023d8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023d90:	441a      	add	r2, r3
 8023d92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023d94:	9222      	str	r2, [sp, #136]	; 0x88
 8023d96:	3b01      	subs	r3, #1
 8023d98:	f10e 0e02 	add.w	lr, lr, #2
 8023d9c:	9313      	str	r3, [sp, #76]	; 0x4c
 8023d9e:	e61c      	b.n	80239da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8023da0:	fb08 f000 	mul.w	r0, r8, r0
 8023da4:	fb09 0303 	mla	r3, r9, r3, r0
 8023da8:	e6dc      	b.n	8023b64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8023daa:	46b9      	mov	r9, r7
 8023dac:	e704      	b.n	8023bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8023dae:	f1c2 0110 	rsb	r1, r2, #16
 8023db2:	437a      	muls	r2, r7
 8023db4:	fb09 2901 	mla	r9, r9, r1, r2
 8023db8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023dbc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023dc0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023dc4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023dc8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023dcc:	4302      	orrs	r2, r0
 8023dce:	e795      	b.n	8023cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8023dd0:	f8ae 2000 	strh.w	r2, [lr]
 8023dd4:	e7d6      	b.n	8023d84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8023dd6:	b017      	add	sp, #92	; 0x5c
 8023dd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023ddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8023ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023de0:	b085      	sub	sp, #20
 8023de2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8023de6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8023dea:	9103      	str	r1, [sp, #12]
 8023dec:	fb00 7406 	mla	r4, r0, r6, r7
 8023df0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8023df4:	2800      	cmp	r0, #0
 8023df6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8023dfa:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8023dfe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023e02:	9501      	str	r5, [sp, #4]
 8023e04:	eb02 0904 	add.w	r9, r2, r4
 8023e08:	f2c0 8141 	blt.w	802408e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023e0c:	4583      	cmp	fp, r0
 8023e0e:	f340 813e 	ble.w	802408e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023e12:	2f00      	cmp	r7, #0
 8023e14:	f2c0 8137 	blt.w	8024086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023e18:	42be      	cmp	r6, r7
 8023e1a:	f340 8134 	ble.w	8024086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023e1e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8023e22:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8023e26:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023e2a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8023e2e:	4355      	muls	r5, r2
 8023e30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023e34:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023e38:	fb0c f203 	mul.w	r2, ip, r3
 8023e3c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023e40:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023e44:	441d      	add	r5, r3
 8023e46:	f102 0320 	add.w	r3, r2, #32
 8023e4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023e4e:	0a1b      	lsrs	r3, r3, #8
 8023e50:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023e54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023e58:	431c      	orrs	r4, r3
 8023e5a:	1c7b      	adds	r3, r7, #1
 8023e5c:	f100 811c 	bmi.w	8024098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023e60:	429e      	cmp	r6, r3
 8023e62:	f340 8119 	ble.w	8024098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023e66:	2900      	cmp	r1, #0
 8023e68:	f000 8119 	beq.w	802409e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8023e6c:	9a01      	ldr	r2, [sp, #4]
 8023e6e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023e72:	8855      	ldrh	r5, [r2, #2]
 8023e74:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023e78:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8023e7c:	fb08 f802 	mul.w	r8, r8, r2
 8023e80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023e84:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023e88:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8023e8c:	435d      	muls	r5, r3
 8023e8e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023e92:	44d0      	add	r8, sl
 8023e94:	f105 0a20 	add.w	sl, r5, #32
 8023e98:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8023e9c:	0a2d      	lsrs	r5, r5, #8
 8023e9e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8023ea2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023ea6:	432a      	orrs	r2, r5
 8023ea8:	3001      	adds	r0, #1
 8023eaa:	f100 80fe 	bmi.w	80240aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023eae:	4583      	cmp	fp, r0
 8023eb0:	f340 80fb 	ble.w	80240aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023eb4:	f1be 0f00 	cmp.w	lr, #0
 8023eb8:	f000 80fc 	beq.w	80240b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8023ebc:	2f00      	cmp	r7, #0
 8023ebe:	f2c0 80f1 	blt.w	80240a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023ec2:	42be      	cmp	r6, r7
 8023ec4:	f340 80ee 	ble.w	80240a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023ec8:	9801      	ldr	r0, [sp, #4]
 8023eca:	f819 5006 	ldrb.w	r5, [r9, r6]
 8023ece:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8023ed2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023ed6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8023eda:	fb0a fa00 	mul.w	sl, sl, r0
 8023ede:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8023ee2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8023ee6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8023eea:	fb05 f808 	mul.w	r8, r5, r8
 8023eee:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023ef2:	4482      	add	sl, r0
 8023ef4:	f108 0020 	add.w	r0, r8, #32
 8023ef8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023efc:	0a00      	lsrs	r0, r0, #8
 8023efe:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023f02:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f06:	ea4b 0b00 	orr.w	fp, fp, r0
 8023f0a:	3701      	adds	r7, #1
 8023f0c:	f100 80d7 	bmi.w	80240be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023f10:	42be      	cmp	r6, r7
 8023f12:	f340 80d4 	ble.w	80240be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023f16:	2900      	cmp	r1, #0
 8023f18:	f000 80d4 	beq.w	80240c4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8023f1c:	3601      	adds	r6, #1
 8023f1e:	9801      	ldr	r0, [sp, #4]
 8023f20:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023f24:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023f28:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8023f2c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023f30:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f34:	fb09 f906 	mul.w	r9, r9, r6
 8023f38:	fb07 f800 	mul.w	r8, r7, r0
 8023f3c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023f40:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023f44:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023f48:	44d1      	add	r9, sl
 8023f4a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8023f4e:	f108 0020 	add.w	r0, r8, #32
 8023f52:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023f56:	0a00      	lsrs	r0, r0, #8
 8023f58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023f5c:	4330      	orrs	r0, r6
 8023f5e:	b28e      	uxth	r6, r1
 8023f60:	fa1f f98e 	uxth.w	r9, lr
 8023f64:	fb06 f809 	mul.w	r8, r6, r9
 8023f68:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8023f6c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023f70:	0136      	lsls	r6, r6, #4
 8023f72:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023f76:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8023f7a:	9601      	str	r6, [sp, #4]
 8023f7c:	ea4a 0404 	orr.w	r4, sl, r4
 8023f80:	fa1f f689 	uxth.w	r6, r9
 8023f84:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023f88:	fb11 f90e 	smulbb	r9, r1, lr
 8023f8c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023f90:	9602      	str	r6, [sp, #8]
 8023f92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023f96:	4626      	mov	r6, r4
 8023f98:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023f9c:	f1ce 0410 	rsb	r4, lr, #16
 8023fa0:	1a64      	subs	r4, r4, r1
 8023fa2:	ea4a 0202 	orr.w	r2, sl, r2
 8023fa6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8023faa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023fae:	434a      	muls	r2, r1
 8023fb0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023fb4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023fb8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023fbc:	fb04 2406 	mla	r4, r4, r6, r2
 8023fc0:	ea4a 0000 	orr.w	r0, sl, r0
 8023fc4:	fb09 4200 	mla	r2, r9, r0, r4
 8023fc8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8023fcc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023fd0:	9801      	ldr	r0, [sp, #4]
 8023fd2:	9903      	ldr	r1, [sp, #12]
 8023fd4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023fd8:	ea44 0b0b 	orr.w	fp, r4, fp
 8023fdc:	9c02      	ldr	r4, [sp, #8]
 8023fde:	8809      	ldrh	r1, [r1, #0]
 8023fe0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023fe4:	1b00      	subs	r0, r0, r4
 8023fe6:	9c01      	ldr	r4, [sp, #4]
 8023fe8:	eba4 0608 	sub.w	r6, r4, r8
 8023fec:	b2b6      	uxth	r6, r6
 8023fee:	b280      	uxth	r0, r0
 8023ff0:	4373      	muls	r3, r6
 8023ff2:	fb0c 3300 	mla	r3, ip, r0, r3
 8023ff6:	9802      	ldr	r0, [sp, #8]
 8023ff8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023ffc:	fb00 3505 	mla	r5, r0, r5, r3
 8024000:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8024004:	fb08 5707 	mla	r7, r8, r7, r5
 8024008:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802400c:	120b      	asrs	r3, r1, #8
 802400e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024012:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8024016:	b2ff      	uxtb	r7, r7
 8024018:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802401c:	10c8      	asrs	r0, r1, #3
 802401e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024022:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024026:	00c9      	lsls	r1, r1, #3
 8024028:	437b      	muls	r3, r7
 802402a:	ea42 0e0e 	orr.w	lr, r2, lr
 802402e:	b2c9      	uxtb	r1, r1
 8024030:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024034:	fa1f f28e 	uxth.w	r2, lr
 8024038:	4378      	muls	r0, r7
 802403a:	434f      	muls	r7, r1
 802403c:	1c59      	adds	r1, r3, #1
 802403e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024042:	1213      	asrs	r3, r2, #8
 8024044:	f023 0307 	bic.w	r3, r3, #7
 8024048:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802404c:	1c41      	adds	r1, r0, #1
 802404e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024052:	10d1      	asrs	r1, r2, #3
 8024054:	f021 0103 	bic.w	r1, r1, #3
 8024058:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802405c:	021b      	lsls	r3, r3, #8
 802405e:	00c9      	lsls	r1, r1, #3
 8024060:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024064:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024068:	430b      	orrs	r3, r1
 802406a:	1c79      	adds	r1, r7, #1
 802406c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8024070:	00d2      	lsls	r2, r2, #3
 8024072:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8024076:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802407a:	431a      	orrs	r2, r3
 802407c:	9b03      	ldr	r3, [sp, #12]
 802407e:	801a      	strh	r2, [r3, #0]
 8024080:	b005      	add	sp, #20
 8024082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024086:	f04f 0c00 	mov.w	ip, #0
 802408a:	4664      	mov	r4, ip
 802408c:	e6e5      	b.n	8023e5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802408e:	2300      	movs	r3, #0
 8024090:	469c      	mov	ip, r3
 8024092:	461a      	mov	r2, r3
 8024094:	461c      	mov	r4, r3
 8024096:	e707      	b.n	8023ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8024098:	2300      	movs	r3, #0
 802409a:	461a      	mov	r2, r3
 802409c:	e704      	b.n	8023ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802409e:	460b      	mov	r3, r1
 80240a0:	460a      	mov	r2, r1
 80240a2:	e701      	b.n	8023ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80240a4:	2500      	movs	r5, #0
 80240a6:	46ab      	mov	fp, r5
 80240a8:	e72f      	b.n	8023f0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80240aa:	2700      	movs	r7, #0
 80240ac:	463d      	mov	r5, r7
 80240ae:	4638      	mov	r0, r7
 80240b0:	46bb      	mov	fp, r7
 80240b2:	e754      	b.n	8023f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80240b4:	4677      	mov	r7, lr
 80240b6:	4675      	mov	r5, lr
 80240b8:	4670      	mov	r0, lr
 80240ba:	46f3      	mov	fp, lr
 80240bc:	e74f      	b.n	8023f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80240be:	2700      	movs	r7, #0
 80240c0:	4638      	mov	r0, r7
 80240c2:	e74c      	b.n	8023f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80240c4:	460f      	mov	r7, r1
 80240c6:	4608      	mov	r0, r1
 80240c8:	e749      	b.n	8023f5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

080240cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80240cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240d0:	b093      	sub	sp, #76	; 0x4c
 80240d2:	9210      	str	r2, [sp, #64]	; 0x40
 80240d4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80240d6:	910e      	str	r1, [sp, #56]	; 0x38
 80240d8:	9306      	str	r3, [sp, #24]
 80240da:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80240de:	9011      	str	r0, [sp, #68]	; 0x44
 80240e0:	6850      	ldr	r0, [r2, #4]
 80240e2:	6812      	ldr	r2, [r2, #0]
 80240e4:	fb00 1303 	mla	r3, r0, r3, r1
 80240e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80240ec:	9307      	str	r3, [sp, #28]
 80240ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80240f0:	681b      	ldr	r3, [r3, #0]
 80240f2:	9308      	str	r3, [sp, #32]
 80240f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80240f6:	685b      	ldr	r3, [r3, #4]
 80240f8:	9309      	str	r3, [sp, #36]	; 0x24
 80240fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80240fc:	2b00      	cmp	r3, #0
 80240fe:	dc03      	bgt.n	8024108 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8024100:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024102:	2b00      	cmp	r3, #0
 8024104:	f340 83b4 	ble.w	8024870 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024108:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802410a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802410e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024112:	1e48      	subs	r0, r1, #1
 8024114:	1e55      	subs	r5, r2, #1
 8024116:	9b06      	ldr	r3, [sp, #24]
 8024118:	2b00      	cmp	r3, #0
 802411a:	f340 8163 	ble.w	80243e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802411e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8024120:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024122:	1436      	asrs	r6, r6, #16
 8024124:	ea4f 4323 	mov.w	r3, r3, asr #16
 8024128:	d406      	bmi.n	8024138 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802412a:	4286      	cmp	r6, r0
 802412c:	da04      	bge.n	8024138 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802412e:	2b00      	cmp	r3, #0
 8024130:	db02      	blt.n	8024138 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8024132:	42ab      	cmp	r3, r5
 8024134:	f2c0 8157 	blt.w	80243e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8024138:	3601      	adds	r6, #1
 802413a:	f100 8144 	bmi.w	80243c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802413e:	42b1      	cmp	r1, r6
 8024140:	f2c0 8141 	blt.w	80243c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024144:	3301      	adds	r3, #1
 8024146:	f100 813e 	bmi.w	80243c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802414a:	429a      	cmp	r2, r3
 802414c:	f2c0 813b 	blt.w	80243c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8024150:	9b06      	ldr	r3, [sp, #24]
 8024152:	9f07      	ldr	r7, [sp, #28]
 8024154:	930f      	str	r3, [sp, #60]	; 0x3c
 8024156:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802415a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802415c:	2b00      	cmp	r3, #0
 802415e:	f340 8164 	ble.w	802442a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8024162:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024164:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8024166:	1418      	asrs	r0, r3, #16
 8024168:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802416a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802416e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8024170:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8024174:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024176:	142d      	asrs	r5, r5, #16
 8024178:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802417c:	f100 81ee 	bmi.w	802455c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024180:	f102 3eff 	add.w	lr, r2, #4294967295
 8024184:	4575      	cmp	r5, lr
 8024186:	f280 81e9 	bge.w	802455c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802418a:	2800      	cmp	r0, #0
 802418c:	f2c0 81e6 	blt.w	802455c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8024190:	f103 3eff 	add.w	lr, r3, #4294967295
 8024194:	4570      	cmp	r0, lr
 8024196:	f280 81e1 	bge.w	802455c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802419a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802419c:	b212      	sxth	r2, r2
 802419e:	fb00 5002 	mla	r0, r0, r2, r5
 80241a2:	fa1f fe81 	uxth.w	lr, r1
 80241a6:	eb03 0a00 	add.w	sl, r3, r0
 80241aa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80241ae:	f813 9000 	ldrb.w	r9, [r3, r0]
 80241b2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80241b6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80241ba:	b29b      	uxth	r3, r3
 80241bc:	f1bc 0f00 	cmp.w	ip, #0
 80241c0:	f000 8179 	beq.w	80244b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80241c4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80241c8:	940a      	str	r4, [sp, #40]	; 0x28
 80241ca:	eb0a 0b02 	add.w	fp, sl, r2
 80241ce:	fa1f fa8c 	uxth.w	sl, ip
 80241d2:	fb0a fe0e 	mul.w	lr, sl, lr
 80241d6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80241da:	fa1f fa8a 	uxth.w	sl, sl
 80241de:	eba5 050e 	sub.w	r5, r5, lr
 80241e2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80241e6:	940b      	str	r4, [sp, #44]	; 0x2c
 80241e8:	eba3 030a 	sub.w	r3, r3, sl
 80241ec:	b2ad      	uxth	r5, r5
 80241ee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80241f0:	b29b      	uxth	r3, r3
 80241f2:	fb08 f505 	mul.w	r5, r8, r5
 80241f6:	fb09 5303 	mla	r3, r9, r3, r5
 80241fa:	fb0a 3304 	mla	r3, sl, r4, r3
 80241fe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024200:	fb0e 3304 	mla	r3, lr, r4, r3
 8024204:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024208:	2b00      	cmp	r3, #0
 802420a:	f000 80cf 	beq.w	80243ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802420e:	9c08      	ldr	r4, [sp, #32]
 8024210:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024214:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8024218:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802421c:	f000 8150 	beq.w	80244c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024220:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024224:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8024228:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802422c:	fb09 f000 	mul.w	r0, r9, r0
 8024230:	fb0a fe0e 	mul.w	lr, sl, lr
 8024234:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8024238:	f100 0b20 	add.w	fp, r0, #32
 802423c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8024240:	44ce      	add	lr, r9
 8024242:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8024246:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802424a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802424e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024252:	ea4e 0909 	orr.w	r9, lr, r9
 8024256:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802425a:	8868      	ldrh	r0, [r5, #2]
 802425c:	d019      	beq.n	8024292 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802425e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8024262:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024266:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802426a:	fb08 f800 	mul.w	r8, r8, r0
 802426e:	fb0a fe0e 	mul.w	lr, sl, lr
 8024272:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8024276:	f108 0b20 	add.w	fp, r8, #32
 802427a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802427e:	4486      	add	lr, r0
 8024280:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8024284:	0a00      	lsrs	r0, r0, #8
 8024286:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802428a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802428e:	ea4e 0000 	orr.w	r0, lr, r0
 8024292:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8024296:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802429a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802429e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80242a2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80242a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80242aa:	ea4e 0909 	orr.w	r9, lr, r9
 80242ae:	ea4a 0000 	orr.w	r0, sl, r0
 80242b2:	f1bc 0f00 	cmp.w	ip, #0
 80242b6:	f000 8105 	beq.w	80244c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80242ba:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80242be:	3a01      	subs	r2, #1
 80242c0:	0052      	lsls	r2, r2, #1
 80242c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80242c4:	3202      	adds	r2, #2
 80242c6:	2cff      	cmp	r4, #255	; 0xff
 80242c8:	eb05 0e02 	add.w	lr, r5, r2
 80242cc:	5aaa      	ldrh	r2, [r5, r2]
 80242ce:	d018      	beq.n	8024302 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80242d0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80242d4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80242d8:	fb04 fa02 	mul.w	sl, r4, r2
 80242dc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80242e0:	fb08 f805 	mul.w	r8, r8, r5
 80242e4:	f10a 0520 	add.w	r5, sl, #32
 80242e8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80242ec:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80242f0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80242f4:	4442      	add	r2, r8
 80242f6:	0a2d      	lsrs	r5, r5, #8
 80242f8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80242fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024300:	432a      	orrs	r2, r5
 8024302:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8024304:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8024308:	2cff      	cmp	r4, #255	; 0xff
 802430a:	d01a      	beq.n	8024342 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802430c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8024310:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024314:	fb04 fa05 	mul.w	sl, r4, r5
 8024318:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802431c:	fb08 f80e 	mul.w	r8, r8, lr
 8024320:	f10a 0e20 	add.w	lr, sl, #32
 8024324:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8024328:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802432c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024330:	4445      	add	r5, r8
 8024332:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024336:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802433a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802433e:	ea45 050e 	orr.w	r5, r5, lr
 8024342:	fb1c fe01 	smulbb	lr, ip, r1
 8024346:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802434a:	f1cc 0810 	rsb	r8, ip, #16
 802434e:	eba8 0801 	sub.w	r8, r8, r1
 8024352:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8024356:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802435a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802435e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8024362:	4341      	muls	r1, r0
 8024364:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024368:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802436c:	ea4a 0202 	orr.w	r2, sl, r2
 8024370:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8024374:	fb09 1108 	mla	r1, r9, r8, r1
 8024378:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802437c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024380:	fb0c 1102 	mla	r1, ip, r2, r1
 8024384:	ea4b 0505 	orr.w	r5, fp, r5
 8024388:	fb0e 1e05 	mla	lr, lr, r5, r1
 802438c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8024390:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8024394:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024398:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802439c:	ea42 0e0e 	orr.w	lr, r2, lr
 80243a0:	fa1f f28e 	uxth.w	r2, lr
 80243a4:	2bff      	cmp	r3, #255	; 0xff
 80243a6:	f040 80a1 	bne.w	80244ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80243aa:	803a      	strh	r2, [r7, #0]
 80243ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80243ae:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80243b0:	4413      	add	r3, r2
 80243b2:	931d      	str	r3, [sp, #116]	; 0x74
 80243b4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80243b6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243b8:	441a      	add	r2, r3
 80243ba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80243bc:	921e      	str	r2, [sp, #120]	; 0x78
 80243be:	3b01      	subs	r3, #1
 80243c0:	3702      	adds	r7, #2
 80243c2:	930f      	str	r3, [sp, #60]	; 0x3c
 80243c4:	e6c9      	b.n	802415a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80243c6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80243c8:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80243ca:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80243cc:	4433      	add	r3, r6
 80243ce:	931d      	str	r3, [sp, #116]	; 0x74
 80243d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80243d2:	441c      	add	r4, r3
 80243d4:	9b06      	ldr	r3, [sp, #24]
 80243d6:	941e      	str	r4, [sp, #120]	; 0x78
 80243d8:	3b01      	subs	r3, #1
 80243da:	9306      	str	r3, [sp, #24]
 80243dc:	9b07      	ldr	r3, [sp, #28]
 80243de:	3302      	adds	r3, #2
 80243e0:	9307      	str	r3, [sp, #28]
 80243e2:	e698      	b.n	8024116 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80243e4:	d028      	beq.n	8024438 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80243e6:	9b06      	ldr	r3, [sp, #24]
 80243e8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80243ea:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80243ec:	3b01      	subs	r3, #1
 80243ee:	fb00 5003 	mla	r0, r0, r3, r5
 80243f2:	1400      	asrs	r0, r0, #16
 80243f4:	f53f aeac 	bmi.w	8024150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80243f8:	3901      	subs	r1, #1
 80243fa:	4288      	cmp	r0, r1
 80243fc:	f6bf aea8 	bge.w	8024150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024400:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024402:	981e      	ldr	r0, [sp, #120]	; 0x78
 8024404:	fb01 0303 	mla	r3, r1, r3, r0
 8024408:	141b      	asrs	r3, r3, #16
 802440a:	f53f aea1 	bmi.w	8024150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802440e:	3a01      	subs	r2, #1
 8024410:	4293      	cmp	r3, r2
 8024412:	f6bf ae9d 	bge.w	8024150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8024416:	9b06      	ldr	r3, [sp, #24]
 8024418:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802441c:	930f      	str	r3, [sp, #60]	; 0x3c
 802441e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8024422:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8024424:	2b00      	cmp	r3, #0
 8024426:	f300 80b6 	bgt.w	8024596 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802442a:	9b06      	ldr	r3, [sp, #24]
 802442c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024430:	9b07      	ldr	r3, [sp, #28]
 8024432:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024436:	9307      	str	r3, [sp, #28]
 8024438:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802443a:	2b00      	cmp	r3, #0
 802443c:	f340 8218 	ble.w	8024870 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8024440:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024444:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024448:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802444c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802444e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024452:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024456:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802445a:	eef0 6a62 	vmov.f32	s13, s5
 802445e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024462:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024466:	ee77 2a62 	vsub.f32	s5, s14, s5
 802446a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802446e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024472:	eef0 6a43 	vmov.f32	s13, s6
 8024476:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802447a:	ee12 2a90 	vmov	r2, s5
 802447e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024482:	fb92 f3f3 	sdiv	r3, r2, r3
 8024486:	ee13 2a10 	vmov	r2, s6
 802448a:	931f      	str	r3, [sp, #124]	; 0x7c
 802448c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802448e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024492:	9320      	str	r3, [sp, #128]	; 0x80
 8024494:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024496:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024498:	3b01      	subs	r3, #1
 802449a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802449e:	930e      	str	r3, [sp, #56]	; 0x38
 80244a0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80244a2:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80244a6:	bf08      	it	eq
 80244a8:	4613      	moveq	r3, r2
 80244aa:	9306      	str	r3, [sp, #24]
 80244ac:	eeb0 3a67 	vmov.f32	s6, s15
 80244b0:	eef0 2a47 	vmov.f32	s5, s14
 80244b4:	e621      	b.n	80240fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80244b6:	fb08 f505 	mul.w	r5, r8, r5
 80244ba:	fb09 5303 	mla	r3, r9, r3, r5
 80244be:	e6a1      	b.n	8024204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80244c0:	4681      	mov	r9, r0
 80244c2:	e6c8      	b.n	8024256 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80244c4:	f1c1 0210 	rsb	r2, r1, #16
 80244c8:	4341      	muls	r1, r0
 80244ca:	fb09 1902 	mla	r9, r9, r2, r1
 80244ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80244d2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80244d6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80244da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80244de:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80244e2:	ea42 0909 	orr.w	r9, r2, r9
 80244e6:	fa1f f289 	uxth.w	r2, r9
 80244ea:	e75b      	b.n	80243a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80244ec:	f8b7 c000 	ldrh.w	ip, [r7]
 80244f0:	43db      	mvns	r3, r3
 80244f2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80244f6:	fa5f fe83 	uxtb.w	lr, r3
 80244fa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80244fe:	fb00 f00e 	mul.w	r0, r0, lr
 8024502:	1c41      	adds	r1, r0, #1
 8024504:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024508:	1211      	asrs	r1, r2, #8
 802450a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802450e:	f021 0107 	bic.w	r1, r1, #7
 8024512:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024516:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802451a:	48d7      	ldr	r0, [pc, #860]	; (8024878 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802451c:	fb05 f50e 	mul.w	r5, r5, lr
 8024520:	b2c9      	uxtb	r1, r1
 8024522:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8024526:	1c69      	adds	r1, r5, #1
 8024528:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802452c:	10d1      	asrs	r1, r2, #3
 802452e:	f021 0103 	bic.w	r1, r1, #3
 8024532:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8024536:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802453a:	b2db      	uxtb	r3, r3
 802453c:	00c9      	lsls	r1, r1, #3
 802453e:	fb03 f30e 	mul.w	r3, r3, lr
 8024542:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024546:	4301      	orrs	r1, r0
 8024548:	1c58      	adds	r0, r3, #1
 802454a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802454e:	00d2      	lsls	r2, r2, #3
 8024550:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024554:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024558:	430a      	orrs	r2, r1
 802455a:	e726      	b.n	80243aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802455c:	f115 0e01 	adds.w	lr, r5, #1
 8024560:	f53f af24 	bmi.w	80243ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024564:	4572      	cmp	r2, lr
 8024566:	f6ff af21 	blt.w	80243ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802456a:	f110 0e01 	adds.w	lr, r0, #1
 802456e:	f53f af1d 	bmi.w	80243ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024572:	4573      	cmp	r3, lr
 8024574:	f6ff af1a 	blt.w	80243ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024578:	b21b      	sxth	r3, r3
 802457a:	b212      	sxth	r2, r2
 802457c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8024580:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8024584:	9301      	str	r3, [sp, #4]
 8024586:	9200      	str	r2, [sp, #0]
 8024588:	4639      	mov	r1, r7
 802458a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802458e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024590:	f7ff fc24 	bl	8023ddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8024594:	e70a      	b.n	80243ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024596:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024598:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802459c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802459e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80245a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80245a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80245a8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80245aa:	141f      	asrs	r7, r3, #16
 80245ac:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80245ae:	141b      	asrs	r3, r3, #16
 80245b0:	fb01 3707 	mla	r7, r1, r7, r3
 80245b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80245b6:	fa1f fc82 	uxth.w	ip, r2
 80245ba:	eb03 0a07 	add.w	sl, r3, r7
 80245be:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80245c2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80245c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80245ca:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80245ce:	b29b      	uxth	r3, r3
 80245d0:	2d00      	cmp	r5, #0
 80245d2:	f000 80fe 	beq.w	80247d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80245d6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80245da:	940c      	str	r4, [sp, #48]	; 0x30
 80245dc:	eb0a 0b01 	add.w	fp, sl, r1
 80245e0:	fa1f fa85 	uxth.w	sl, r5
 80245e4:	fb0a fc0c 	mul.w	ip, sl, ip
 80245e8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80245ec:	fa1f fa8a 	uxth.w	sl, sl
 80245f0:	eba0 000c 	sub.w	r0, r0, ip
 80245f4:	eba3 030a 	sub.w	r3, r3, sl
 80245f8:	b280      	uxth	r0, r0
 80245fa:	fb08 f000 	mul.w	r0, r8, r0
 80245fe:	b29b      	uxth	r3, r3
 8024600:	fb09 0303 	mla	r3, r9, r3, r0
 8024604:	980c      	ldr	r0, [sp, #48]	; 0x30
 8024606:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802460a:	940d      	str	r4, [sp, #52]	; 0x34
 802460c:	fb0a 3300 	mla	r3, sl, r0, r3
 8024610:	fb0c 3304 	mla	r3, ip, r4, r3
 8024614:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024618:	2b00      	cmp	r3, #0
 802461a:	f000 80cc 	beq.w	80247b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802461e:	9808      	ldr	r0, [sp, #32]
 8024620:	9c08      	ldr	r4, [sp, #32]
 8024622:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024626:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802462a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802462e:	f000 80d5 	beq.w	80247dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024632:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024636:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802463a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802463e:	fb09 f707 	mul.w	r7, r9, r7
 8024642:	fb0a fc0c 	mul.w	ip, sl, ip
 8024646:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802464a:	f107 0b20 	add.w	fp, r7, #32
 802464e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024652:	44cc      	add	ip, r9
 8024654:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024658:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802465c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024660:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024664:	ea4c 0909 	orr.w	r9, ip, r9
 8024668:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802466c:	8847      	ldrh	r7, [r0, #2]
 802466e:	d019      	beq.n	80246a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8024670:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024674:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024678:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802467c:	fb08 f807 	mul.w	r8, r8, r7
 8024680:	fb0a fc0c 	mul.w	ip, sl, ip
 8024684:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024688:	f108 0b20 	add.w	fp, r8, #32
 802468c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024690:	44bc      	add	ip, r7
 8024692:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8024696:	0a3f      	lsrs	r7, r7, #8
 8024698:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802469c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80246a0:	ea4c 0707 	orr.w	r7, ip, r7
 80246a4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80246a8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80246ac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80246b0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80246b4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80246b8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80246bc:	ea4c 0909 	orr.w	r9, ip, r9
 80246c0:	ea4a 0707 	orr.w	r7, sl, r7
 80246c4:	2d00      	cmp	r5, #0
 80246c6:	f000 808b 	beq.w	80247e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80246ca:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80246ce:	3901      	subs	r1, #1
 80246d0:	0049      	lsls	r1, r1, #1
 80246d2:	3102      	adds	r1, #2
 80246d4:	eb00 0c01 	add.w	ip, r0, r1
 80246d8:	5a41      	ldrh	r1, [r0, r1]
 80246da:	980c      	ldr	r0, [sp, #48]	; 0x30
 80246dc:	28ff      	cmp	r0, #255	; 0xff
 80246de:	d019      	beq.n	8024714 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80246e0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80246e2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80246e6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80246ea:	fb04 fa01 	mul.w	sl, r4, r1
 80246ee:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80246f2:	fb08 f800 	mul.w	r8, r8, r0
 80246f6:	f10a 0020 	add.w	r0, sl, #32
 80246fa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80246fe:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8024702:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024706:	4441      	add	r1, r8
 8024708:	0a00      	lsrs	r0, r0, #8
 802470a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802470e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024712:	4301      	orrs	r1, r0
 8024714:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024716:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802471a:	2cff      	cmp	r4, #255	; 0xff
 802471c:	d01a      	beq.n	8024754 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802471e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8024722:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024726:	fb04 fa00 	mul.w	sl, r4, r0
 802472a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802472e:	fb08 f80c 	mul.w	r8, r8, ip
 8024732:	f10a 0c20 	add.w	ip, sl, #32
 8024736:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802473a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802473e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024742:	4440      	add	r0, r8
 8024744:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024748:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802474c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024750:	ea40 000c 	orr.w	r0, r0, ip
 8024754:	fb15 fc02 	smulbb	ip, r5, r2
 8024758:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802475c:	f1c5 0810 	rsb	r8, r5, #16
 8024760:	eba8 0802 	sub.w	r8, r8, r2
 8024764:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024768:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802476c:	437a      	muls	r2, r7
 802476e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024772:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024776:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802477a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802477e:	fb09 2208 	mla	r2, r9, r8, r2
 8024782:	ea4a 0101 	orr.w	r1, sl, r1
 8024786:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802478a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802478e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024792:	fb05 2201 	mla	r2, r5, r1, r2
 8024796:	ea4b 0000 	orr.w	r0, fp, r0
 802479a:	fb0c 2200 	mla	r2, ip, r0, r2
 802479e:	0d57      	lsrs	r7, r2, #21
 80247a0:	0952      	lsrs	r2, r2, #5
 80247a2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80247a6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80247aa:	433a      	orrs	r2, r7
 80247ac:	2bff      	cmp	r3, #255	; 0xff
 80247ae:	b292      	uxth	r2, r2
 80247b0:	d127      	bne.n	8024802 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80247b2:	f8ae 2000 	strh.w	r2, [lr]
 80247b6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80247b8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80247ba:	4413      	add	r3, r2
 80247bc:	931d      	str	r3, [sp, #116]	; 0x74
 80247be:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80247c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80247c2:	441a      	add	r2, r3
 80247c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80247c6:	921e      	str	r2, [sp, #120]	; 0x78
 80247c8:	3b01      	subs	r3, #1
 80247ca:	f10e 0e02 	add.w	lr, lr, #2
 80247ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80247d0:	e627      	b.n	8024422 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80247d2:	fb08 f000 	mul.w	r0, r8, r0
 80247d6:	fb09 0303 	mla	r3, r9, r3, r0
 80247da:	e71b      	b.n	8024614 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80247dc:	46b9      	mov	r9, r7
 80247de:	e743      	b.n	8024668 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80247e0:	f1c2 0110 	rsb	r1, r2, #16
 80247e4:	437a      	muls	r2, r7
 80247e6:	fb09 2901 	mla	r9, r9, r1, r2
 80247ea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80247ee:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80247f2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80247f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80247fa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80247fe:	4302      	orrs	r2, r0
 8024800:	e7d4      	b.n	80247ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8024802:	f8be 7000 	ldrh.w	r7, [lr]
 8024806:	4c1c      	ldr	r4, [pc, #112]	; (8024878 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8024808:	43db      	mvns	r3, r3
 802480a:	1238      	asrs	r0, r7, #8
 802480c:	fa5f fc83 	uxtb.w	ip, r3
 8024810:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024814:	10fd      	asrs	r5, r7, #3
 8024816:	fb00 f00c 	mul.w	r0, r0, ip
 802481a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802481e:	fb05 f10c 	mul.w	r1, r5, ip
 8024822:	1c45      	adds	r5, r0, #1
 8024824:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024828:	1215      	asrs	r5, r2, #8
 802482a:	f025 0507 	bic.w	r5, r5, #7
 802482e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024832:	1c4d      	adds	r5, r1, #1
 8024834:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024838:	10d1      	asrs	r1, r2, #3
 802483a:	f021 0103 	bic.w	r1, r1, #3
 802483e:	00fb      	lsls	r3, r7, #3
 8024840:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8024844:	b2db      	uxtb	r3, r3
 8024846:	b2c0      	uxtb	r0, r0
 8024848:	00c9      	lsls	r1, r1, #3
 802484a:	fb03 f30c 	mul.w	r3, r3, ip
 802484e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024852:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8024856:	4308      	orrs	r0, r1
 8024858:	1c59      	adds	r1, r3, #1
 802485a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802485e:	00d2      	lsls	r2, r2, #3
 8024860:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024864:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8024868:	4318      	orrs	r0, r3
 802486a:	f8ae 0000 	strh.w	r0, [lr]
 802486e:	e7a2      	b.n	80247b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8024870:	b013      	add	sp, #76	; 0x4c
 8024872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024876:	bf00      	nop
 8024878:	fffff800 	.word	0xfffff800

0802487c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802487c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024880:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8024884:	fb05 4c03 	mla	ip, r5, r3, r4
 8024888:	2d00      	cmp	r5, #0
 802488a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802488e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8024892:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024896:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802489a:	8808      	ldrh	r0, [r1, #0]
 802489c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80248a0:	f2c0 80a7 	blt.w	80249f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80248a4:	45aa      	cmp	sl, r5
 80248a6:	f340 80a4 	ble.w	80249f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80248aa:	2c00      	cmp	r4, #0
 80248ac:	f2c0 809f 	blt.w	80249ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80248b0:	42a3      	cmp	r3, r4
 80248b2:	f340 809c 	ble.w	80249ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80248b6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80248ba:	1c62      	adds	r2, r4, #1
 80248bc:	f100 809c 	bmi.w	80249f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80248c0:	4293      	cmp	r3, r2
 80248c2:	f340 8099 	ble.w	80249f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80248c6:	f1b9 0f00 	cmp.w	r9, #0
 80248ca:	f000 8095 	beq.w	80249f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80248ce:	f8be c002 	ldrh.w	ip, [lr, #2]
 80248d2:	3501      	adds	r5, #1
 80248d4:	f100 8094 	bmi.w	8024a00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80248d8:	45aa      	cmp	sl, r5
 80248da:	f340 8091 	ble.w	8024a00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80248de:	2f00      	cmp	r7, #0
 80248e0:	f000 808e 	beq.w	8024a00 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80248e4:	2c00      	cmp	r4, #0
 80248e6:	f2c0 8089 	blt.w	80249fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80248ea:	42a3      	cmp	r3, r4
 80248ec:	f340 8086 	ble.w	80249fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80248f0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80248f4:	3401      	adds	r4, #1
 80248f6:	f100 8086 	bmi.w	8024a06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80248fa:	42a3      	cmp	r3, r4
 80248fc:	f340 8083 	ble.w	8024a06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024900:	f1b9 0f00 	cmp.w	r9, #0
 8024904:	d07f      	beq.n	8024a06 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024906:	3301      	adds	r3, #1
 8024908:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802490c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8024910:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024914:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8024918:	fb19 fe07 	smulbb	lr, r9, r7
 802491c:	ea44 0808 	orr.w	r8, r4, r8
 8024920:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8024924:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8024928:	f1c7 0210 	rsb	r2, r7, #16
 802492c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024930:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024934:	ea44 0c0c 	orr.w	ip, r4, ip
 8024938:	eba2 0209 	sub.w	r2, r2, r9
 802493c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8024940:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8024944:	fb04 f40c 	mul.w	r4, r4, ip
 8024948:	fb02 4808 	mla	r8, r2, r8, r4
 802494c:	041a      	lsls	r2, r3, #16
 802494e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024952:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024956:	4313      	orrs	r3, r2
 8024958:	042a      	lsls	r2, r5, #16
 802495a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802495e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024962:	fb0e 8303 	mla	r3, lr, r3, r8
 8024966:	432a      	orrs	r2, r5
 8024968:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802496c:	fb07 3202 	mla	r2, r7, r2, r3
 8024970:	0d53      	lsrs	r3, r2, #21
 8024972:	0952      	lsrs	r2, r2, #5
 8024974:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024978:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802497c:	431a      	orrs	r2, r3
 802497e:	b293      	uxth	r3, r2
 8024980:	b2b4      	uxth	r4, r6
 8024982:	1202      	asrs	r2, r0, #8
 8024984:	43f6      	mvns	r6, r6
 8024986:	b2f6      	uxtb	r6, r6
 8024988:	121d      	asrs	r5, r3, #8
 802498a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802498e:	fb12 f206 	smulbb	r2, r2, r6
 8024992:	10c7      	asrs	r7, r0, #3
 8024994:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024998:	00c0      	lsls	r0, r0, #3
 802499a:	fb05 2504 	mla	r5, r5, r4, r2
 802499e:	b2c0      	uxtb	r0, r0
 80249a0:	10da      	asrs	r2, r3, #3
 80249a2:	00db      	lsls	r3, r3, #3
 80249a4:	b2db      	uxtb	r3, r3
 80249a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80249aa:	fb10 f006 	smulbb	r0, r0, r6
 80249ae:	b2ad      	uxth	r5, r5
 80249b0:	fb03 0004 	mla	r0, r3, r4, r0
 80249b4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80249b8:	fb17 f706 	smulbb	r7, r7, r6
 80249bc:	b280      	uxth	r0, r0
 80249be:	1c6b      	adds	r3, r5, #1
 80249c0:	fb02 7204 	mla	r2, r2, r4, r7
 80249c4:	b292      	uxth	r2, r2
 80249c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80249ca:	1c43      	adds	r3, r0, #1
 80249cc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80249d0:	1c50      	adds	r0, r2, #1
 80249d2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80249d6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80249da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80249de:	0952      	lsrs	r2, r2, #5
 80249e0:	432b      	orrs	r3, r5
 80249e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80249e6:	4313      	orrs	r3, r2
 80249e8:	800b      	strh	r3, [r1, #0]
 80249ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80249ee:	4680      	mov	r8, r0
 80249f0:	e763      	b.n	80248ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80249f2:	4684      	mov	ip, r0
 80249f4:	4680      	mov	r8, r0
 80249f6:	e76c      	b.n	80248d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80249f8:	4684      	mov	ip, r0
 80249fa:	e76a      	b.n	80248d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80249fc:	4605      	mov	r5, r0
 80249fe:	e779      	b.n	80248f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8024a00:	4603      	mov	r3, r0
 8024a02:	4605      	mov	r5, r0
 8024a04:	e782      	b.n	802490c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8024a06:	4603      	mov	r3, r0
 8024a08:	e780      	b.n	802490c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08024a0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024a0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a0e:	b093      	sub	sp, #76	; 0x4c
 8024a10:	461d      	mov	r5, r3
 8024a12:	9210      	str	r2, [sp, #64]	; 0x40
 8024a14:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024a16:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8024a1a:	920b      	str	r2, [sp, #44]	; 0x2c
 8024a1c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8024a20:	910a      	str	r1, [sp, #40]	; 0x28
 8024a22:	6859      	ldr	r1, [r3, #4]
 8024a24:	681b      	ldr	r3, [r3, #0]
 8024a26:	9011      	str	r0, [sp, #68]	; 0x44
 8024a28:	fb01 2707 	mla	r7, r1, r7, r2
 8024a2c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024a30:	9307      	str	r3, [sp, #28]
 8024a32:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a34:	681b      	ldr	r3, [r3, #0]
 8024a36:	9309      	str	r3, [sp, #36]	; 0x24
 8024a38:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024a3a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024a3e:	43db      	mvns	r3, r3
 8024a40:	b2db      	uxtb	r3, r3
 8024a42:	9308      	str	r3, [sp, #32]
 8024a44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024a46:	2b00      	cmp	r3, #0
 8024a48:	dc03      	bgt.n	8024a52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024a4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024a4c:	2b00      	cmp	r3, #0
 8024a4e:	f340 8203 	ble.w	8024e58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024a52:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024a54:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024a58:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024a5c:	1e48      	subs	r0, r1, #1
 8024a5e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024a62:	2d00      	cmp	r5, #0
 8024a64:	f340 80da 	ble.w	8024c1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024a68:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024a6c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024a70:	d406      	bmi.n	8024a80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024a72:	4586      	cmp	lr, r0
 8024a74:	da04      	bge.n	8024a80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024a76:	2b00      	cmp	r3, #0
 8024a78:	db02      	blt.n	8024a80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024a7a:	4563      	cmp	r3, ip
 8024a7c:	f2c0 80cf 	blt.w	8024c1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8024a80:	f11e 0e01 	adds.w	lr, lr, #1
 8024a84:	f100 80c1 	bmi.w	8024c0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024a88:	4571      	cmp	r1, lr
 8024a8a:	f2c0 80be 	blt.w	8024c0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024a8e:	3301      	adds	r3, #1
 8024a90:	f100 80bb 	bmi.w	8024c0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024a94:	429a      	cmp	r2, r3
 8024a96:	f2c0 80b8 	blt.w	8024c0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024a9a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8024a9e:	46a9      	mov	r9, r5
 8024aa0:	f1b9 0f00 	cmp.w	r9, #0
 8024aa4:	f340 80d8 	ble.w	8024c58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8024aa8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024aaa:	1421      	asrs	r1, r4, #16
 8024aac:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024ab0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024ab4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024ab8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024abc:	f100 8111 	bmi.w	8024ce2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024ac0:	f10e 3aff 	add.w	sl, lr, #4294967295
 8024ac4:	4551      	cmp	r1, sl
 8024ac6:	f280 810c 	bge.w	8024ce2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024aca:	2800      	cmp	r0, #0
 8024acc:	f2c0 8109 	blt.w	8024ce2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024ad0:	f103 3aff 	add.w	sl, r3, #4294967295
 8024ad4:	4550      	cmp	r0, sl
 8024ad6:	f280 8104 	bge.w	8024ce2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8024ada:	fa0f f38e 	sxth.w	r3, lr
 8024ade:	fb00 1103 	mla	r1, r0, r3, r1
 8024ae2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8024ae4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8024ae8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8024aec:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024af0:	f1bc 0f00 	cmp.w	ip, #0
 8024af4:	d007      	beq.n	8024b06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8024af6:	005b      	lsls	r3, r3, #1
 8024af8:	eb0a 0003 	add.w	r0, sl, r3
 8024afc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024b00:	930c      	str	r3, [sp, #48]	; 0x30
 8024b02:	8843      	ldrh	r3, [r0, #2]
 8024b04:	930d      	str	r3, [sp, #52]	; 0x34
 8024b06:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8024b0a:	fb12 f30c 	smulbb	r3, r2, ip
 8024b0e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024b12:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024b16:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024b1a:	10db      	asrs	r3, r3, #3
 8024b1c:	ea40 000e 	orr.w	r0, r0, lr
 8024b20:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024b24:	f1cc 0e10 	rsb	lr, ip, #16
 8024b28:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024b2c:	ebae 0e02 	sub.w	lr, lr, r2
 8024b30:	ea4a 0101 	orr.w	r1, sl, r1
 8024b34:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024b38:	4351      	muls	r1, r2
 8024b3a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024b3c:	9f08      	ldr	r7, [sp, #32]
 8024b3e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024b42:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024b46:	0410      	lsls	r0, r2, #16
 8024b48:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024b4c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024b50:	4310      	orrs	r0, r2
 8024b52:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024b54:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024b56:	0412      	lsls	r2, r2, #16
 8024b58:	fb03 e000 	mla	r0, r3, r0, lr
 8024b5c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024b60:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024b64:	ea42 020e 	orr.w	r2, r2, lr
 8024b68:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024b6c:	fb03 0302 	mla	r3, r3, r2, r0
 8024b70:	0d5a      	lsrs	r2, r3, #21
 8024b72:	095b      	lsrs	r3, r3, #5
 8024b74:	f8b8 0000 	ldrh.w	r0, [r8]
 8024b78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024b7c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024b80:	4313      	orrs	r3, r2
 8024b82:	b29b      	uxth	r3, r3
 8024b84:	1201      	asrs	r1, r0, #8
 8024b86:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8024b8a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8024b8e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024b92:	fb11 f107 	smulbb	r1, r1, r7
 8024b96:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8024b9a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8024b9e:	00c0      	lsls	r0, r0, #3
 8024ba0:	fb0c 1c02 	mla	ip, ip, r2, r1
 8024ba4:	b2c0      	uxtb	r0, r0
 8024ba6:	10d9      	asrs	r1, r3, #3
 8024ba8:	00db      	lsls	r3, r3, #3
 8024baa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8024bae:	b2db      	uxtb	r3, r3
 8024bb0:	fb10 f007 	smulbb	r0, r0, r7
 8024bb4:	fa1f fc8c 	uxth.w	ip, ip
 8024bb8:	fb03 0302 	mla	r3, r3, r2, r0
 8024bbc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024bc0:	fb1e fe07 	smulbb	lr, lr, r7
 8024bc4:	fb01 e102 	mla	r1, r1, r2, lr
 8024bc8:	b29a      	uxth	r2, r3
 8024bca:	f10c 0301 	add.w	r3, ip, #1
 8024bce:	b289      	uxth	r1, r1
 8024bd0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8024bd4:	1c53      	adds	r3, r2, #1
 8024bd6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024bda:	1c4a      	adds	r2, r1, #1
 8024bdc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024be0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8024be4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024be8:	0949      	lsrs	r1, r1, #5
 8024bea:	ea43 030c 	orr.w	r3, r3, ip
 8024bee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024bf2:	430b      	orrs	r3, r1
 8024bf4:	f8a8 3000 	strh.w	r3, [r8]
 8024bf8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024bfa:	441c      	add	r4, r3
 8024bfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024bfe:	f108 0802 	add.w	r8, r8, #2
 8024c02:	441e      	add	r6, r3
 8024c04:	f109 39ff 	add.w	r9, r9, #4294967295
 8024c08:	e74a      	b.n	8024aa0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8024c0a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024c0c:	441c      	add	r4, r3
 8024c0e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024c10:	441e      	add	r6, r3
 8024c12:	9b07      	ldr	r3, [sp, #28]
 8024c14:	3302      	adds	r3, #2
 8024c16:	3d01      	subs	r5, #1
 8024c18:	9307      	str	r3, [sp, #28]
 8024c1a:	e722      	b.n	8024a62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024c1c:	d022      	beq.n	8024c64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8024c1e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024c20:	1e6b      	subs	r3, r5, #1
 8024c22:	fb00 4003 	mla	r0, r0, r3, r4
 8024c26:	1400      	asrs	r0, r0, #16
 8024c28:	f53f af37 	bmi.w	8024a9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c2c:	3901      	subs	r1, #1
 8024c2e:	4288      	cmp	r0, r1
 8024c30:	f6bf af33 	bge.w	8024a9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c34:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024c36:	fb01 6303 	mla	r3, r1, r3, r6
 8024c3a:	141b      	asrs	r3, r3, #16
 8024c3c:	f53f af2d 	bmi.w	8024a9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c40:	3a01      	subs	r2, #1
 8024c42:	4293      	cmp	r3, r2
 8024c44:	f6bf af29 	bge.w	8024a9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024c48:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8024c4c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8024c50:	46a8      	mov	r8, r5
 8024c52:	f1b8 0f00 	cmp.w	r8, #0
 8024c56:	dc5e      	bgt.n	8024d16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024c58:	9b07      	ldr	r3, [sp, #28]
 8024c5a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024c5e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024c62:	9307      	str	r3, [sp, #28]
 8024c64:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024c66:	2b00      	cmp	r3, #0
 8024c68:	f340 80f6 	ble.w	8024e58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024c6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024c70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024c74:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024c78:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024c7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024c7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024c82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024c86:	eef0 6a62 	vmov.f32	s13, s5
 8024c8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024c8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024c96:	ee16 4a90 	vmov	r4, s13
 8024c9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024c9e:	eef0 6a43 	vmov.f32	s13, s6
 8024ca2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024ca6:	ee12 2a90 	vmov	r2, s5
 8024caa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024cae:	fb92 f3f3 	sdiv	r3, r2, r3
 8024cb2:	ee13 2a10 	vmov	r2, s6
 8024cb6:	931f      	str	r3, [sp, #124]	; 0x7c
 8024cb8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024cba:	fb92 f3f3 	sdiv	r3, r2, r3
 8024cbe:	9320      	str	r3, [sp, #128]	; 0x80
 8024cc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024cc2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8024cc4:	3b01      	subs	r3, #1
 8024cc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024cca:	930a      	str	r3, [sp, #40]	; 0x28
 8024ccc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024cce:	ee16 6a90 	vmov	r6, s13
 8024cd2:	bf14      	ite	ne
 8024cd4:	461d      	movne	r5, r3
 8024cd6:	4615      	moveq	r5, r2
 8024cd8:	eeb0 3a67 	vmov.f32	s6, s15
 8024cdc:	eef0 2a47 	vmov.f32	s5, s14
 8024ce0:	e6b0      	b.n	8024a44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024ce2:	f111 0a01 	adds.w	sl, r1, #1
 8024ce6:	d487      	bmi.n	8024bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024ce8:	45d6      	cmp	lr, sl
 8024cea:	db85      	blt.n	8024bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024cec:	f110 0a01 	adds.w	sl, r0, #1
 8024cf0:	d482      	bmi.n	8024bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024cf2:	4553      	cmp	r3, sl
 8024cf4:	db80      	blt.n	8024bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024cf6:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8024cf8:	9101      	str	r1, [sp, #4]
 8024cfa:	b21b      	sxth	r3, r3
 8024cfc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8024d00:	9300      	str	r3, [sp, #0]
 8024d02:	e9cd c704 	strd	ip, r7, [sp, #16]
 8024d06:	fa0f f38e 	sxth.w	r3, lr
 8024d0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024d0c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8024d0e:	4641      	mov	r1, r8
 8024d10:	f7ff fdb4 	bl	802487c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8024d14:	e770      	b.n	8024bf8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024d16:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024d18:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8024d1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024d1e:	1430      	asrs	r0, r6, #16
 8024d20:	1423      	asrs	r3, r4, #16
 8024d22:	fb01 3000 	mla	r0, r1, r0, r3
 8024d26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024d28:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8024d2c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8024d30:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024d34:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024d38:	8858      	ldrh	r0, [r3, #2]
 8024d3a:	f1be 0f00 	cmp.w	lr, #0
 8024d3e:	d00b      	beq.n	8024d58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024d40:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024d44:	3901      	subs	r1, #1
 8024d46:	0049      	lsls	r1, r1, #1
 8024d48:	3102      	adds	r1, #2
 8024d4a:	eb03 0b01 	add.w	fp, r3, r1
 8024d4e:	5a5b      	ldrh	r3, [r3, r1]
 8024d50:	930e      	str	r3, [sp, #56]	; 0x38
 8024d52:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024d56:	930f      	str	r3, [sp, #60]	; 0x3c
 8024d58:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8024d5c:	fb12 f30e 	smulbb	r3, r2, lr
 8024d60:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024d64:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024d68:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8024d6c:	10db      	asrs	r3, r3, #3
 8024d6e:	ea41 010c 	orr.w	r1, r1, ip
 8024d72:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024d76:	f1ce 0c10 	rsb	ip, lr, #16
 8024d7a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024d7e:	ebac 0c02 	sub.w	ip, ip, r2
 8024d82:	ea4b 0000 	orr.w	r0, fp, r0
 8024d86:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024d8a:	4350      	muls	r0, r2
 8024d8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d8e:	9f08      	ldr	r7, [sp, #32]
 8024d90:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024d94:	fb0c 0c01 	mla	ip, ip, r1, r0
 8024d98:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024d9c:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8024da0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024da2:	980e      	ldr	r0, [sp, #56]	; 0x38
 8024da4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024da8:	0412      	lsls	r2, r2, #16
 8024daa:	ea4b 0101 	orr.w	r1, fp, r1
 8024dae:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024db2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024db6:	fb03 c101 	mla	r1, r3, r1, ip
 8024dba:	4302      	orrs	r2, r0
 8024dbc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024dc0:	fb03 1202 	mla	r2, r3, r2, r1
 8024dc4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8024dc8:	0952      	lsrs	r2, r2, #5
 8024dca:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8024dce:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8024dd2:	f8b9 2000 	ldrh.w	r2, [r9]
 8024dd6:	ea4b 0303 	orr.w	r3, fp, r3
 8024dda:	b29b      	uxth	r3, r3
 8024ddc:	1211      	asrs	r1, r2, #8
 8024dde:	1218      	asrs	r0, r3, #8
 8024de0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8024de4:	fb11 f107 	smulbb	r1, r1, r7
 8024de8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8024dec:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024df0:	00d2      	lsls	r2, r2, #3
 8024df2:	fb00 100a 	mla	r0, r0, sl, r1
 8024df6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8024dfa:	10d9      	asrs	r1, r3, #3
 8024dfc:	b2d2      	uxtb	r2, r2
 8024dfe:	00db      	lsls	r3, r3, #3
 8024e00:	fb1c fc07 	smulbb	ip, ip, r7
 8024e04:	fb12 f207 	smulbb	r2, r2, r7
 8024e08:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024e0c:	b2db      	uxtb	r3, r3
 8024e0e:	b280      	uxth	r0, r0
 8024e10:	fb01 c10a 	mla	r1, r1, sl, ip
 8024e14:	fb03 230a 	mla	r3, r3, sl, r2
 8024e18:	b29b      	uxth	r3, r3
 8024e1a:	b289      	uxth	r1, r1
 8024e1c:	1c42      	adds	r2, r0, #1
 8024e1e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024e22:	f101 0c01 	add.w	ip, r1, #1
 8024e26:	1c5a      	adds	r2, r3, #1
 8024e28:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024e2c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024e30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024e32:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024e36:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024e3a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024e3e:	4310      	orrs	r0, r2
 8024e40:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024e44:	441c      	add	r4, r3
 8024e46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024e48:	ea40 000c 	orr.w	r0, r0, ip
 8024e4c:	f829 0b02 	strh.w	r0, [r9], #2
 8024e50:	441e      	add	r6, r3
 8024e52:	f108 38ff 	add.w	r8, r8, #4294967295
 8024e56:	e6fc      	b.n	8024c52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8024e58:	b013      	add	sp, #76	; 0x4c
 8024e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024e5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8024e5e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024e62:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8024e66:	fb0e 4703 	mla	r7, lr, r3, r4
 8024e6a:	f1be 0f00 	cmp.w	lr, #0
 8024e6e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8024e72:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8024e76:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8024e7a:	8808      	ldrh	r0, [r1, #0]
 8024e7c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8024e80:	db60      	blt.n	8024f44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024e82:	45f1      	cmp	r9, lr
 8024e84:	dd5e      	ble.n	8024f44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024e86:	2c00      	cmp	r4, #0
 8024e88:	db5a      	blt.n	8024f40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024e8a:	42a3      	cmp	r3, r4
 8024e8c:	dd58      	ble.n	8024f40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024e8e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8024e92:	1c62      	adds	r2, r4, #1
 8024e94:	d459      	bmi.n	8024f4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024e96:	4293      	cmp	r3, r2
 8024e98:	dd57      	ble.n	8024f4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024e9a:	2d00      	cmp	r5, #0
 8024e9c:	d055      	beq.n	8024f4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024e9e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8024ea2:	f11e 0e01 	adds.w	lr, lr, #1
 8024ea6:	d454      	bmi.n	8024f52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024ea8:	45f1      	cmp	r9, lr
 8024eaa:	dd52      	ble.n	8024f52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024eac:	2e00      	cmp	r6, #0
 8024eae:	d050      	beq.n	8024f52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024eb0:	2c00      	cmp	r4, #0
 8024eb2:	db4c      	blt.n	8024f4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024eb4:	42a3      	cmp	r3, r4
 8024eb6:	dd4a      	ble.n	8024f4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024eb8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8024ebc:	3401      	adds	r4, #1
 8024ebe:	d405      	bmi.n	8024ecc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ec0:	42a3      	cmp	r3, r4
 8024ec2:	dd03      	ble.n	8024ecc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ec4:	b115      	cbz	r5, 8024ecc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024ec6:	3301      	adds	r3, #1
 8024ec8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8024ecc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8024ed0:	fb15 f406 	smulbb	r4, r5, r6
 8024ed4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024ed8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8024edc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024ee0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8024ee4:	ea43 0c0c 	orr.w	ip, r3, ip
 8024ee8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8024eec:	f1c6 0310 	rsb	r3, r6, #16
 8024ef0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024ef4:	1b5b      	subs	r3, r3, r5
 8024ef6:	ea4e 0707 	orr.w	r7, lr, r7
 8024efa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8024efe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024f02:	437d      	muls	r5, r7
 8024f04:	fb03 5c0c 	mla	ip, r3, ip, r5
 8024f08:	0403      	lsls	r3, r0, #16
 8024f0a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024f0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024f12:	4318      	orrs	r0, r3
 8024f14:	0413      	lsls	r3, r2, #16
 8024f16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024f1a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024f1e:	4313      	orrs	r3, r2
 8024f20:	fb04 c000 	mla	r0, r4, r0, ip
 8024f24:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8024f28:	fb06 0003 	mla	r0, r6, r3, r0
 8024f2c:	0d43      	lsrs	r3, r0, #21
 8024f2e:	0940      	lsrs	r0, r0, #5
 8024f30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024f34:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024f38:	4318      	orrs	r0, r3
 8024f3a:	8008      	strh	r0, [r1, #0]
 8024f3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024f40:	4684      	mov	ip, r0
 8024f42:	e7a6      	b.n	8024e92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8024f44:	4607      	mov	r7, r0
 8024f46:	4684      	mov	ip, r0
 8024f48:	e7ab      	b.n	8024ea2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024f4a:	4607      	mov	r7, r0
 8024f4c:	e7a9      	b.n	8024ea2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024f4e:	4602      	mov	r2, r0
 8024f50:	e7b4      	b.n	8024ebc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8024f52:	4602      	mov	r2, r0
 8024f54:	e7ba      	b.n	8024ecc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08024f56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024f56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024f5a:	b08f      	sub	sp, #60	; 0x3c
 8024f5c:	461d      	mov	r5, r3
 8024f5e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024f60:	920c      	str	r2, [sp, #48]	; 0x30
 8024f62:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8024f66:	9107      	str	r1, [sp, #28]
 8024f68:	6859      	ldr	r1, [r3, #4]
 8024f6a:	681b      	ldr	r3, [r3, #0]
 8024f6c:	900d      	str	r0, [sp, #52]	; 0x34
 8024f6e:	fb01 2707 	mla	r7, r1, r7, r2
 8024f72:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8024f76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024f78:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8024f7c:	f8d3 8000 	ldr.w	r8, [r3]
 8024f80:	9b07      	ldr	r3, [sp, #28]
 8024f82:	2b00      	cmp	r3, #0
 8024f84:	dc03      	bgt.n	8024f8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024f86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024f88:	2b00      	cmp	r3, #0
 8024f8a:	f340 8181 	ble.w	8025290 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024f8e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024f90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024f94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024f98:	1e48      	subs	r0, r1, #1
 8024f9a:	f102 3cff 	add.w	ip, r2, #4294967295
 8024f9e:	2d00      	cmp	r5, #0
 8024fa0:	f340 809b 	ble.w	80250da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8024fa4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024fa8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024fac:	d406      	bmi.n	8024fbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024fae:	4586      	cmp	lr, r0
 8024fb0:	da04      	bge.n	8024fbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024fb2:	2b00      	cmp	r3, #0
 8024fb4:	db02      	blt.n	8024fbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024fb6:	4563      	cmp	r3, ip
 8024fb8:	f2c0 8090 	blt.w	80250dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024fbc:	f11e 0e01 	adds.w	lr, lr, #1
 8024fc0:	f100 8084 	bmi.w	80250cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fc4:	4571      	cmp	r1, lr
 8024fc6:	f2c0 8081 	blt.w	80250cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fca:	3301      	adds	r3, #1
 8024fcc:	d47e      	bmi.n	80250cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fce:	429a      	cmp	r2, r3
 8024fd0:	db7c      	blt.n	80250cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024fd2:	46aa      	mov	sl, r5
 8024fd4:	46b9      	mov	r9, r7
 8024fd6:	f1ba 0f00 	cmp.w	sl, #0
 8024fda:	f340 8099 	ble.w	8025110 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024fde:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024fe0:	1421      	asrs	r1, r4, #16
 8024fe2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024fe6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024fea:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024fee:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024ff2:	f100 80d0 	bmi.w	8025196 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024ff6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024ffa:	4559      	cmp	r1, fp
 8024ffc:	f280 80cb 	bge.w	8025196 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025000:	2800      	cmp	r0, #0
 8025002:	f2c0 80c8 	blt.w	8025196 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025006:	f103 3bff 	add.w	fp, r3, #4294967295
 802500a:	4558      	cmp	r0, fp
 802500c:	f280 80c3 	bge.w	8025196 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8025010:	fa0f fe8e 	sxth.w	lr, lr
 8025014:	fb00 110e 	mla	r1, r0, lr, r1
 8025018:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802501c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8025020:	8841      	ldrh	r1, [r0, #2]
 8025022:	f1bc 0f00 	cmp.w	ip, #0
 8025026:	d00b      	beq.n	8025040 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8025028:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 802502c:	3b01      	subs	r3, #1
 802502e:	005b      	lsls	r3, r3, #1
 8025030:	3302      	adds	r3, #2
 8025032:	eb00 0e03 	add.w	lr, r0, r3
 8025036:	5ac3      	ldrh	r3, [r0, r3]
 8025038:	9308      	str	r3, [sp, #32]
 802503a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802503e:	9309      	str	r3, [sp, #36]	; 0x24
 8025040:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8025044:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025048:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802504c:	ea40 000b 	orr.w	r0, r0, fp
 8025050:	fb12 f30c 	smulbb	r3, r2, ip
 8025054:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025058:	10db      	asrs	r3, r3, #3
 802505a:	f1cc 0e10 	rsb	lr, ip, #16
 802505e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025062:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025066:	ebae 0e02 	sub.w	lr, lr, r2
 802506a:	ea4b 0101 	orr.w	r1, fp, r1
 802506e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025072:	4351      	muls	r1, r2
 8025074:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025076:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802507a:	fb0e 1e00 	mla	lr, lr, r0, r1
 802507e:	0410      	lsls	r0, r2, #16
 8025080:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025084:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025088:	4310      	orrs	r0, r2
 802508a:	9a08      	ldr	r2, [sp, #32]
 802508c:	9908      	ldr	r1, [sp, #32]
 802508e:	0412      	lsls	r2, r2, #16
 8025090:	fb03 e000 	mla	r0, r3, r0, lr
 8025094:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8025098:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802509c:	ea42 020e 	orr.w	r2, r2, lr
 80250a0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80250a4:	fb03 0302 	mla	r3, r3, r2, r0
 80250a8:	0d5a      	lsrs	r2, r3, #21
 80250aa:	095b      	lsrs	r3, r3, #5
 80250ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80250b0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80250b4:	4313      	orrs	r3, r2
 80250b6:	f8a9 3000 	strh.w	r3, [r9]
 80250ba:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80250bc:	441c      	add	r4, r3
 80250be:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80250c0:	f109 0902 	add.w	r9, r9, #2
 80250c4:	441e      	add	r6, r3
 80250c6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80250ca:	e784      	b.n	8024fd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80250cc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80250ce:	441c      	add	r4, r3
 80250d0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80250d2:	3d01      	subs	r5, #1
 80250d4:	441e      	add	r6, r3
 80250d6:	3702      	adds	r7, #2
 80250d8:	e761      	b.n	8024f9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80250da:	d01d      	beq.n	8025118 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80250dc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80250de:	1e6b      	subs	r3, r5, #1
 80250e0:	fb00 4003 	mla	r0, r0, r3, r4
 80250e4:	1400      	asrs	r0, r0, #16
 80250e6:	f53f af74 	bmi.w	8024fd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80250ea:	3901      	subs	r1, #1
 80250ec:	4288      	cmp	r0, r1
 80250ee:	f6bf af70 	bge.w	8024fd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80250f2:	991c      	ldr	r1, [sp, #112]	; 0x70
 80250f4:	fb01 6303 	mla	r3, r1, r3, r6
 80250f8:	141b      	asrs	r3, r3, #16
 80250fa:	f53f af6a 	bmi.w	8024fd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80250fe:	3a01      	subs	r2, #1
 8025100:	4293      	cmp	r3, r2
 8025102:	f6bf af66 	bge.w	8024fd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8025106:	46a9      	mov	r9, r5
 8025108:	46ba      	mov	sl, r7
 802510a:	f1b9 0f00 	cmp.w	r9, #0
 802510e:	dc5a      	bgt.n	80251c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8025110:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025114:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8025118:	9b07      	ldr	r3, [sp, #28]
 802511a:	2b00      	cmp	r3, #0
 802511c:	f340 80b8 	ble.w	8025290 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8025120:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025124:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025128:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802512c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802512e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025132:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025136:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802513a:	eef0 6a62 	vmov.f32	s13, s5
 802513e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025142:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025146:	ee77 2a62 	vsub.f32	s5, s14, s5
 802514a:	ee16 4a90 	vmov	r4, s13
 802514e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025152:	eef0 6a43 	vmov.f32	s13, s6
 8025156:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802515a:	ee12 2a90 	vmov	r2, s5
 802515e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025162:	fb92 f3f3 	sdiv	r3, r2, r3
 8025166:	ee13 2a10 	vmov	r2, s6
 802516a:	931b      	str	r3, [sp, #108]	; 0x6c
 802516c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802516e:	fb92 f3f3 	sdiv	r3, r2, r3
 8025172:	931c      	str	r3, [sp, #112]	; 0x70
 8025174:	9b07      	ldr	r3, [sp, #28]
 8025176:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025178:	3b01      	subs	r3, #1
 802517a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802517e:	9307      	str	r3, [sp, #28]
 8025180:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025182:	ee16 6a90 	vmov	r6, s13
 8025186:	bf14      	ite	ne
 8025188:	461d      	movne	r5, r3
 802518a:	4615      	moveq	r5, r2
 802518c:	eeb0 3a67 	vmov.f32	s6, s15
 8025190:	eef0 2a47 	vmov.f32	s5, s14
 8025194:	e6f4      	b.n	8024f80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8025196:	f111 0b01 	adds.w	fp, r1, #1
 802519a:	d48e      	bmi.n	80250ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802519c:	45de      	cmp	lr, fp
 802519e:	db8c      	blt.n	80250ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80251a0:	f110 0b01 	adds.w	fp, r0, #1
 80251a4:	d489      	bmi.n	80250ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80251a6:	455b      	cmp	r3, fp
 80251a8:	db87      	blt.n	80250ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80251aa:	b21b      	sxth	r3, r3
 80251ac:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80251b0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80251b4:	9300      	str	r3, [sp, #0]
 80251b6:	4642      	mov	r2, r8
 80251b8:	fa0f f38e 	sxth.w	r3, lr
 80251bc:	4649      	mov	r1, r9
 80251be:	980d      	ldr	r0, [sp, #52]	; 0x34
 80251c0:	f7ff fe4d 	bl	8024e5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80251c4:	e779      	b.n	80250ba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80251c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251c8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80251cc:	1420      	asrs	r0, r4, #16
 80251ce:	1431      	asrs	r1, r6, #16
 80251d0:	fb03 0101 	mla	r1, r3, r1, r0
 80251d4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80251d8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80251dc:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80251e0:	8841      	ldrh	r1, [r0, #2]
 80251e2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80251e6:	f1be 0f00 	cmp.w	lr, #0
 80251ea:	d00b      	beq.n	8025204 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80251ec:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80251f0:	3b01      	subs	r3, #1
 80251f2:	005b      	lsls	r3, r3, #1
 80251f4:	3302      	adds	r3, #2
 80251f6:	eb00 0b03 	add.w	fp, r0, r3
 80251fa:	5ac3      	ldrh	r3, [r0, r3]
 80251fc:	930a      	str	r3, [sp, #40]	; 0x28
 80251fe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8025202:	930b      	str	r3, [sp, #44]	; 0x2c
 8025204:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8025208:	fb12 f30e 	smulbb	r3, r2, lr
 802520c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8025210:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8025214:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8025218:	10db      	asrs	r3, r3, #3
 802521a:	ea40 000c 	orr.w	r0, r0, ip
 802521e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025222:	f1ce 0c10 	rsb	ip, lr, #16
 8025226:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802522a:	ebac 0c02 	sub.w	ip, ip, r2
 802522e:	ea4b 0101 	orr.w	r1, fp, r1
 8025232:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8025236:	4351      	muls	r1, r2
 8025238:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802523a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802523e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8025242:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8025246:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802524a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802524c:	990a      	ldr	r1, [sp, #40]	; 0x28
 802524e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8025252:	0412      	lsls	r2, r2, #16
 8025254:	ea4b 0000 	orr.w	r0, fp, r0
 8025258:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802525c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8025260:	fb03 c000 	mla	r0, r3, r0, ip
 8025264:	ea42 0b0b 	orr.w	fp, r2, fp
 8025268:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802526c:	fb03 000b 	mla	r0, r3, fp, r0
 8025270:	0d43      	lsrs	r3, r0, #21
 8025272:	0940      	lsrs	r0, r0, #5
 8025274:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025278:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802527c:	4318      	orrs	r0, r3
 802527e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8025280:	f82a 0b02 	strh.w	r0, [sl], #2
 8025284:	441c      	add	r4, r3
 8025286:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025288:	f109 39ff 	add.w	r9, r9, #4294967295
 802528c:	441e      	add	r6, r3
 802528e:	e73c      	b.n	802510a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8025290:	b00f      	add	sp, #60	; 0x3c
 8025292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025296 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8025296:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802529a:	b085      	sub	sp, #20
 802529c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80252a0:	9102      	str	r1, [sp, #8]
 80252a2:	2c00      	cmp	r4, #0
 80252a4:	fb04 7103 	mla	r1, r4, r3, r7
 80252a8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80252ac:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80252b0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80252b4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80252b8:	f2c0 811b 	blt.w	80254f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80252bc:	45a6      	cmp	lr, r4
 80252be:	f340 8118 	ble.w	80254f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80252c2:	2f00      	cmp	r7, #0
 80252c4:	f2c0 8113 	blt.w	80254ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80252c8:	42bb      	cmp	r3, r7
 80252ca:	f340 8110 	ble.w	80254ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80252ce:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80252d2:	1c7a      	adds	r2, r7, #1
 80252d4:	f100 8110 	bmi.w	80254f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80252d8:	4293      	cmp	r3, r2
 80252da:	f340 810d 	ble.w	80254f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80252de:	2e00      	cmp	r6, #0
 80252e0:	f000 810c 	beq.w	80254fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80252e4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80252e8:	3401      	adds	r4, #1
 80252ea:	f100 810b 	bmi.w	8025504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80252ee:	45a6      	cmp	lr, r4
 80252f0:	f340 8108 	ble.w	8025504 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80252f4:	2800      	cmp	r0, #0
 80252f6:	f000 8108 	beq.w	802550a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80252fa:	2f00      	cmp	r7, #0
 80252fc:	f2c0 8100 	blt.w	8025500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8025300:	42bb      	cmp	r3, r7
 8025302:	f340 80fd 	ble.w	8025500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8025306:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802530a:	3701      	adds	r7, #1
 802530c:	f100 8100 	bmi.w	8025510 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8025310:	42bb      	cmp	r3, r7
 8025312:	f340 80fd 	ble.w	8025510 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8025316:	2e00      	cmp	r6, #0
 8025318:	f000 80fc 	beq.w	8025514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802531c:	3301      	adds	r3, #1
 802531e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8025322:	b2b6      	uxth	r6, r6
 8025324:	b280      	uxth	r0, r0
 8025326:	fb00 fe06 	mul.w	lr, r0, r6
 802532a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802532e:	0136      	lsls	r6, r6, #4
 8025330:	eba6 070e 	sub.w	r7, r6, lr
 8025334:	b280      	uxth	r0, r0
 8025336:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802533a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802533e:	b2bf      	uxth	r7, r7
 8025340:	1a1b      	subs	r3, r3, r0
 8025342:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025346:	b29b      	uxth	r3, r3
 8025348:	fb0a f607 	mul.w	r6, sl, r7
 802534c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025350:	fb0b 6603 	mla	r6, fp, r3, r6
 8025354:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025358:	fb00 6609 	mla	r6, r0, r9, r6
 802535c:	fb0e 6608 	mla	r6, lr, r8, r6
 8025360:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025364:	9600      	str	r6, [sp, #0]
 8025366:	2e00      	cmp	r6, #0
 8025368:	f000 80be 	beq.w	80254e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802536c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025370:	fb0b fc0c 	mul.w	ip, fp, ip
 8025374:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025378:	fb0b f505 	mul.w	r5, fp, r5
 802537c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025380:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025384:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025388:	44dc      	add	ip, fp
 802538a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802538e:	9501      	str	r5, [sp, #4]
 8025390:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025394:	9503      	str	r5, [sp, #12]
 8025396:	9d01      	ldr	r5, [sp, #4]
 8025398:	9e02      	ldr	r6, [sp, #8]
 802539a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802539e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80253a2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80253a6:	fb0a fc0c 	mul.w	ip, sl, ip
 80253aa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80253ae:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80253b2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80253b6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80253ba:	4465      	add	r5, ip
 80253bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80253c0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80253c4:	fb09 fc0c 	mul.w	ip, r9, ip
 80253c8:	fb09 f904 	mul.w	r9, r9, r4
 80253cc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80253d0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80253d4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80253d8:	fb08 f404 	mul.w	r4, r8, r4
 80253dc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80253e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80253e4:	fb08 f802 	mul.w	r8, r8, r2
 80253e8:	fb0a fa01 	mul.w	sl, sl, r1
 80253ec:	0a22      	lsrs	r2, r4, #8
 80253ee:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80253f2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80253f6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80253fa:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80253fe:	4414      	add	r4, r2
 8025400:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8025404:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025408:	0a2d      	lsrs	r5, r5, #8
 802540a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802540e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025412:	9a03      	ldr	r2, [sp, #12]
 8025414:	8836      	ldrh	r6, [r6, #0]
 8025416:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802541a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802541e:	437d      	muls	r5, r7
 8025420:	4461      	add	r1, ip
 8025422:	0a24      	lsrs	r4, r4, #8
 8025424:	fb02 5503 	mla	r5, r2, r3, r5
 8025428:	0a09      	lsrs	r1, r1, #8
 802542a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802542e:	fb04 540e 	mla	r4, r4, lr, r5
 8025432:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025436:	fb01 4100 	mla	r1, r1, r0, r4
 802543a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802543e:	0a09      	lsrs	r1, r1, #8
 8025440:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025444:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025448:	fb07 f70a 	mul.w	r7, r7, sl
 802544c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025450:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025454:	fb03 7101 	mla	r1, r3, r1, r7
 8025458:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802545c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025460:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025464:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025468:	fb00 e101 	mla	r1, r0, r1, lr
 802546c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8025470:	9a00      	ldr	r2, [sp, #0]
 8025472:	b287      	uxth	r7, r0
 8025474:	437a      	muls	r2, r7
 8025476:	0a09      	lsrs	r1, r1, #8
 8025478:	1c53      	adds	r3, r2, #1
 802547a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802547e:	4321      	orrs	r1, r4
 8025480:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025484:	1235      	asrs	r5, r6, #8
 8025486:	0c0a      	lsrs	r2, r1, #16
 8025488:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802548c:	b2db      	uxtb	r3, r3
 802548e:	fb12 f207 	smulbb	r2, r2, r7
 8025492:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8025496:	fb05 2503 	mla	r5, r5, r3, r2
 802549a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802549e:	10f2      	asrs	r2, r6, #3
 80254a0:	b2c8      	uxtb	r0, r1
 80254a2:	00f6      	lsls	r6, r6, #3
 80254a4:	fb14 f407 	smulbb	r4, r4, r7
 80254a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80254ac:	b2f6      	uxtb	r6, r6
 80254ae:	fb10 f007 	smulbb	r0, r0, r7
 80254b2:	fb02 4203 	mla	r2, r2, r3, r4
 80254b6:	b2ad      	uxth	r5, r5
 80254b8:	fb06 0303 	mla	r3, r6, r3, r0
 80254bc:	b299      	uxth	r1, r3
 80254be:	b294      	uxth	r4, r2
 80254c0:	1c6b      	adds	r3, r5, #1
 80254c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80254c6:	1c62      	adds	r2, r4, #1
 80254c8:	1c4b      	adds	r3, r1, #1
 80254ca:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80254ce:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80254d2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80254d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80254da:	0952      	lsrs	r2, r2, #5
 80254dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80254e0:	432b      	orrs	r3, r5
 80254e2:	4313      	orrs	r3, r2
 80254e4:	9a02      	ldr	r2, [sp, #8]
 80254e6:	8013      	strh	r3, [r2, #0]
 80254e8:	b005      	add	sp, #20
 80254ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80254ee:	2500      	movs	r5, #0
 80254f0:	e6ef      	b.n	80252d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80254f2:	2100      	movs	r1, #0
 80254f4:	460d      	mov	r5, r1
 80254f6:	e6f7      	b.n	80252e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80254f8:	2100      	movs	r1, #0
 80254fa:	e6f5      	b.n	80252e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80254fc:	4631      	mov	r1, r6
 80254fe:	e6f3      	b.n	80252e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8025500:	2400      	movs	r4, #0
 8025502:	e702      	b.n	802530a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8025504:	2200      	movs	r2, #0
 8025506:	4614      	mov	r4, r2
 8025508:	e70b      	b.n	8025322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802550a:	4602      	mov	r2, r0
 802550c:	4604      	mov	r4, r0
 802550e:	e708      	b.n	8025322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025510:	2200      	movs	r2, #0
 8025512:	e706      	b.n	8025322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025514:	4632      	mov	r2, r6
 8025516:	e704      	b.n	8025322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08025518 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802551c:	b09d      	sub	sp, #116	; 0x74
 802551e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8025522:	9219      	str	r2, [sp, #100]	; 0x64
 8025524:	9307      	str	r3, [sp, #28]
 8025526:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8025528:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802552c:	931a      	str	r3, [sp, #104]	; 0x68
 802552e:	9117      	str	r1, [sp, #92]	; 0x5c
 8025530:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8025534:	901b      	str	r0, [sp, #108]	; 0x6c
 8025536:	6850      	ldr	r0, [r2, #4]
 8025538:	6812      	ldr	r2, [r2, #0]
 802553a:	fb00 1303 	mla	r3, r0, r3, r1
 802553e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025542:	930a      	str	r3, [sp, #40]	; 0x28
 8025544:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025546:	681b      	ldr	r3, [r3, #0]
 8025548:	9310      	str	r3, [sp, #64]	; 0x40
 802554a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802554e:	930b      	str	r3, [sp, #44]	; 0x2c
 8025550:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025552:	2b00      	cmp	r3, #0
 8025554:	dc03      	bgt.n	802555e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8025556:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8025558:	2b00      	cmp	r3, #0
 802555a:	f340 8375 	ble.w	8025c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802555e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025560:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025564:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025568:	1e48      	subs	r0, r1, #1
 802556a:	1e57      	subs	r7, r2, #1
 802556c:	9b07      	ldr	r3, [sp, #28]
 802556e:	2b00      	cmp	r3, #0
 8025570:	f340 818e 	ble.w	8025890 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8025574:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025578:	ea4f 4326 	mov.w	r3, r6, asr #16
 802557c:	d406      	bmi.n	802558c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802557e:	4584      	cmp	ip, r0
 8025580:	da04      	bge.n	802558c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025582:	2b00      	cmp	r3, #0
 8025584:	db02      	blt.n	802558c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025586:	42bb      	cmp	r3, r7
 8025588:	f2c0 8183 	blt.w	8025892 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802558c:	f11c 0c01 	adds.w	ip, ip, #1
 8025590:	f100 8173 	bmi.w	802587a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8025594:	4561      	cmp	r1, ip
 8025596:	f2c0 8170 	blt.w	802587a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802559a:	3301      	adds	r3, #1
 802559c:	f100 816d 	bmi.w	802587a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80255a0:	429a      	cmp	r2, r3
 80255a2:	f2c0 816a 	blt.w	802587a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80255a6:	9b07      	ldr	r3, [sp, #28]
 80255a8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80255aa:	9318      	str	r3, [sp, #96]	; 0x60
 80255ac:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80255ae:	2b00      	cmp	r3, #0
 80255b0:	f340 818c 	ble.w	80258cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80255b4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80255b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80255b8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80255bc:	689b      	ldr	r3, [r3, #8]
 80255be:	1422      	asrs	r2, r4, #16
 80255c0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80255c4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80255c8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80255cc:	f100 81cd 	bmi.w	802596a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255d0:	f103 38ff 	add.w	r8, r3, #4294967295
 80255d4:	4542      	cmp	r2, r8
 80255d6:	f280 81c8 	bge.w	802596a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255da:	f1bc 0f00 	cmp.w	ip, #0
 80255de:	f2c0 81c4 	blt.w	802596a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255e2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80255e6:	45c4      	cmp	ip, r8
 80255e8:	f280 81bf 	bge.w	802596a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80255ec:	b21b      	sxth	r3, r3
 80255ee:	fb0c 2203 	mla	r2, ip, r3, r2
 80255f2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80255f4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80255f8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80255fc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025600:	2800      	cmp	r0, #0
 8025602:	f000 81a9 	beq.w	8025958 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8025606:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802560a:	950c      	str	r5, [sp, #48]	; 0x30
 802560c:	0e2d      	lsrs	r5, r5, #24
 802560e:	9513      	str	r5, [sp, #76]	; 0x4c
 8025610:	b181      	cbz	r1, 8025634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025612:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025616:	3b01      	subs	r3, #1
 8025618:	009b      	lsls	r3, r3, #2
 802561a:	3304      	adds	r3, #4
 802561c:	eb08 0c03 	add.w	ip, r8, r3
 8025620:	f858 3003 	ldr.w	r3, [r8, r3]
 8025624:	9308      	str	r3, [sp, #32]
 8025626:	0e1b      	lsrs	r3, r3, #24
 8025628:	9311      	str	r3, [sp, #68]	; 0x44
 802562a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802562e:	930d      	str	r3, [sp, #52]	; 0x34
 8025630:	0e1b      	lsrs	r3, r3, #24
 8025632:	9314      	str	r3, [sp, #80]	; 0x50
 8025634:	b280      	uxth	r0, r0
 8025636:	b289      	uxth	r1, r1
 8025638:	fb00 f901 	mul.w	r9, r0, r1
 802563c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8025640:	0100      	lsls	r0, r0, #4
 8025642:	eba0 0809 	sub.w	r8, r0, r9
 8025646:	b289      	uxth	r1, r1
 8025648:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802564c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802564e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025650:	fa1f f888 	uxth.w	r8, r8
 8025654:	1a5b      	subs	r3, r3, r1
 8025656:	b29b      	uxth	r3, r3
 8025658:	fb08 f000 	mul.w	r0, r8, r0
 802565c:	fb03 000e 	mla	r0, r3, lr, r0
 8025660:	fb01 0005 	mla	r0, r1, r5, r0
 8025664:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025666:	fb09 0005 	mla	r0, r9, r5, r0
 802566a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802566e:	2800      	cmp	r0, #0
 8025670:	f000 80fa 	beq.w	8025868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025674:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025678:	d01b      	beq.n	80256b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802567a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802567e:	fb0e fa0a 	mul.w	sl, lr, sl
 8025682:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025686:	fb0e fe02 	mul.w	lr, lr, r2
 802568a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802568e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025692:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025696:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802569a:	4452      	add	r2, sl
 802569c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80256a0:	0a12      	lsrs	r2, r2, #8
 80256a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80256a6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80256aa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80256ae:	ea42 020c 	orr.w	r2, r2, ip
 80256b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80256b4:	2dff      	cmp	r5, #255	; 0xff
 80256b6:	d021      	beq.n	80256fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80256b8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80256ba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80256be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80256c0:	fb05 fb0b 	mul.w	fp, r5, fp
 80256c4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80256c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80256ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80256cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80256d0:	fb05 fa0a 	mul.w	sl, r5, sl
 80256d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80256d8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80256dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80256e0:	44de      	add	lr, fp
 80256e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80256e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80256ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80256ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80256f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80256f6:	ea4e 050a 	orr.w	r5, lr, sl
 80256fa:	950c      	str	r5, [sp, #48]	; 0x30
 80256fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80256fe:	2dff      	cmp	r5, #255	; 0xff
 8025700:	d021      	beq.n	8025746 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8025702:	9d08      	ldr	r5, [sp, #32]
 8025704:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025708:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802570a:	fb05 fb0b 	mul.w	fp, r5, fp
 802570e:	9d08      	ldr	r5, [sp, #32]
 8025710:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025714:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025716:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802571a:	fb05 fa0a 	mul.w	sl, r5, sl
 802571e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025722:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025726:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802572a:	44de      	add	lr, fp
 802572c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025730:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025734:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025738:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802573c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025740:	ea4e 050a 	orr.w	r5, lr, sl
 8025744:	9508      	str	r5, [sp, #32]
 8025746:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025748:	2dff      	cmp	r5, #255	; 0xff
 802574a:	d021      	beq.n	8025790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802574c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802574e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025752:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025754:	fb05 fb0b 	mul.w	fp, r5, fp
 8025758:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802575a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802575e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025760:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025764:	fb05 fa0a 	mul.w	sl, r5, sl
 8025768:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802576c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025770:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025774:	44de      	add	lr, fp
 8025776:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802577a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802577e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025782:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025786:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802578a:	ea4e 050a 	orr.w	r5, lr, sl
 802578e:	950d      	str	r5, [sp, #52]	; 0x34
 8025790:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025792:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025796:	9d08      	ldr	r5, [sp, #32]
 8025798:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802579c:	fb08 fc0c 	mul.w	ip, r8, ip
 80257a0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80257a4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80257a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80257aa:	fb01 cc0e 	mla	ip, r1, lr, ip
 80257ae:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80257b2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80257b4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80257b8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80257bc:	fb08 f80e 	mul.w	r8, r8, lr
 80257c0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80257c4:	fb03 8202 	mla	r2, r3, r2, r8
 80257c8:	9b08      	ldr	r3, [sp, #32]
 80257ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80257cc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80257d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80257d2:	fb01 220a 	mla	r2, r1, sl, r2
 80257d6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80257da:	fb09 2901 	mla	r9, r9, r1, r2
 80257de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80257e0:	883b      	ldrh	r3, [r7, #0]
 80257e2:	4342      	muls	r2, r0
 80257e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80257e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80257ec:	1c50      	adds	r0, r2, #1
 80257ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80257f2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80257f6:	ea4c 0c09 	orr.w	ip, ip, r9
 80257fa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80257fe:	1219      	asrs	r1, r3, #8
 8025800:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8025804:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8025808:	b2c0      	uxtb	r0, r0
 802580a:	fb12 f205 	smulbb	r2, r2, r5
 802580e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025812:	fb01 2100 	mla	r1, r1, r0, r2
 8025816:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802581a:	10da      	asrs	r2, r3, #3
 802581c:	fa5f fc8c 	uxtb.w	ip, ip
 8025820:	00db      	lsls	r3, r3, #3
 8025822:	fb1c fc05 	smulbb	ip, ip, r5
 8025826:	b2db      	uxtb	r3, r3
 8025828:	b289      	uxth	r1, r1
 802582a:	fb03 c300 	mla	r3, r3, r0, ip
 802582e:	fa1f fc83 	uxth.w	ip, r3
 8025832:	1c4b      	adds	r3, r1, #1
 8025834:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025838:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802583c:	fb1e fe05 	smulbb	lr, lr, r5
 8025840:	f10c 0301 	add.w	r3, ip, #1
 8025844:	fb02 e200 	mla	r2, r2, r0, lr
 8025848:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802584c:	b292      	uxth	r2, r2
 802584e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025852:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025856:	430b      	orrs	r3, r1
 8025858:	1c51      	adds	r1, r2, #1
 802585a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802585e:	0952      	lsrs	r2, r2, #5
 8025860:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025864:	4313      	orrs	r3, r2
 8025866:	803b      	strh	r3, [r7, #0]
 8025868:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802586a:	441c      	add	r4, r3
 802586c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802586e:	441e      	add	r6, r3
 8025870:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025872:	3b01      	subs	r3, #1
 8025874:	3702      	adds	r7, #2
 8025876:	9318      	str	r3, [sp, #96]	; 0x60
 8025878:	e698      	b.n	80255ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802587a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802587c:	441c      	add	r4, r3
 802587e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025880:	441e      	add	r6, r3
 8025882:	9b07      	ldr	r3, [sp, #28]
 8025884:	3b01      	subs	r3, #1
 8025886:	9307      	str	r3, [sp, #28]
 8025888:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802588a:	3302      	adds	r3, #2
 802588c:	930a      	str	r3, [sp, #40]	; 0x28
 802588e:	e66d      	b.n	802556c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8025890:	d023      	beq.n	80258da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8025892:	9b07      	ldr	r3, [sp, #28]
 8025894:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8025896:	3b01      	subs	r3, #1
 8025898:	fb00 4003 	mla	r0, r0, r3, r4
 802589c:	1400      	asrs	r0, r0, #16
 802589e:	f53f ae82 	bmi.w	80255a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80258a2:	3901      	subs	r1, #1
 80258a4:	4288      	cmp	r0, r1
 80258a6:	f6bf ae7e 	bge.w	80255a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80258aa:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80258ac:	fb01 6303 	mla	r3, r1, r3, r6
 80258b0:	141b      	asrs	r3, r3, #16
 80258b2:	f53f ae78 	bmi.w	80255a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80258b6:	3a01      	subs	r2, #1
 80258b8:	4293      	cmp	r3, r2
 80258ba:	f6bf ae74 	bge.w	80255a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80258be:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80258c2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80258c6:	f1bb 0f00 	cmp.w	fp, #0
 80258ca:	dc6c      	bgt.n	80259a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80258cc:	9b07      	ldr	r3, [sp, #28]
 80258ce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80258d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80258d4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80258d8:	930a      	str	r3, [sp, #40]	; 0x28
 80258da:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80258dc:	2b00      	cmp	r3, #0
 80258de:	f340 81b3 	ble.w	8025c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80258e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80258e6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80258ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80258ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80258f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80258f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80258f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80258fc:	eef0 6a62 	vmov.f32	s13, s5
 8025900:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025904:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025908:	ee77 2a62 	vsub.f32	s5, s14, s5
 802590c:	ee16 4a90 	vmov	r4, s13
 8025910:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025914:	eef0 6a43 	vmov.f32	s13, s6
 8025918:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802591c:	ee12 2a90 	vmov	r2, s5
 8025920:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025924:	fb92 f3f3 	sdiv	r3, r2, r3
 8025928:	ee13 2a10 	vmov	r2, s6
 802592c:	9329      	str	r3, [sp, #164]	; 0xa4
 802592e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025930:	fb92 f3f3 	sdiv	r3, r2, r3
 8025934:	932a      	str	r3, [sp, #168]	; 0xa8
 8025936:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025938:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802593a:	3b01      	subs	r3, #1
 802593c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025940:	9317      	str	r3, [sp, #92]	; 0x5c
 8025942:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025944:	bf08      	it	eq
 8025946:	4613      	moveq	r3, r2
 8025948:	ee16 6a90 	vmov	r6, s13
 802594c:	9307      	str	r3, [sp, #28]
 802594e:	eeb0 3a67 	vmov.f32	s6, s15
 8025952:	eef0 2a47 	vmov.f32	s5, s14
 8025956:	e5fb      	b.n	8025550 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025958:	2900      	cmp	r1, #0
 802595a:	f43f ae6b 	beq.w	8025634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802595e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025962:	9308      	str	r3, [sp, #32]
 8025964:	0e1b      	lsrs	r3, r3, #24
 8025966:	9311      	str	r3, [sp, #68]	; 0x44
 8025968:	e664      	b.n	8025634 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802596a:	f112 0801 	adds.w	r8, r2, #1
 802596e:	f53f af7b 	bmi.w	8025868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025972:	4543      	cmp	r3, r8
 8025974:	f6ff af78 	blt.w	8025868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025978:	f11c 0801 	adds.w	r8, ip, #1
 802597c:	f53f af74 	bmi.w	8025868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025980:	45c6      	cmp	lr, r8
 8025982:	f6ff af71 	blt.w	8025868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025986:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8025988:	9201      	str	r2, [sp, #4]
 802598a:	fa0f f28e 	sxth.w	r2, lr
 802598e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8025992:	e9cd c002 	strd	ip, r0, [sp, #8]
 8025996:	9200      	str	r2, [sp, #0]
 8025998:	b21b      	sxth	r3, r3
 802599a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802599c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802599e:	4639      	mov	r1, r7
 80259a0:	f7ff fc79 	bl	8025296 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80259a4:	e760      	b.n	8025868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80259a6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80259a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80259aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80259ae:	1427      	asrs	r7, r4, #16
 80259b0:	1433      	asrs	r3, r6, #16
 80259b2:	fb01 7303 	mla	r3, r1, r3, r7
 80259b6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80259ba:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80259be:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80259c2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80259c6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80259ca:	2a00      	cmp	r2, #0
 80259cc:	f000 8133 	beq.w	8025c36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80259d0:	687d      	ldr	r5, [r7, #4]
 80259d2:	950e      	str	r5, [sp, #56]	; 0x38
 80259d4:	0e2d      	lsrs	r5, r5, #24
 80259d6:	9515      	str	r5, [sp, #84]	; 0x54
 80259d8:	b178      	cbz	r0, 80259fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80259da:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80259de:	3901      	subs	r1, #1
 80259e0:	0089      	lsls	r1, r1, #2
 80259e2:	3104      	adds	r1, #4
 80259e4:	eb07 0e01 	add.w	lr, r7, r1
 80259e8:	5879      	ldr	r1, [r7, r1]
 80259ea:	9109      	str	r1, [sp, #36]	; 0x24
 80259ec:	0e09      	lsrs	r1, r1, #24
 80259ee:	9112      	str	r1, [sp, #72]	; 0x48
 80259f0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80259f4:	910f      	str	r1, [sp, #60]	; 0x3c
 80259f6:	0e09      	lsrs	r1, r1, #24
 80259f8:	9116      	str	r1, [sp, #88]	; 0x58
 80259fa:	b292      	uxth	r2, r2
 80259fc:	b280      	uxth	r0, r0
 80259fe:	fb02 f800 	mul.w	r8, r2, r0
 8025a02:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025a06:	0112      	lsls	r2, r2, #4
 8025a08:	eba2 0e08 	sub.w	lr, r2, r8
 8025a0c:	b280      	uxth	r0, r0
 8025a0e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8025a12:	9915      	ldr	r1, [sp, #84]	; 0x54
 8025a14:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025a16:	fa1f fe8e 	uxth.w	lr, lr
 8025a1a:	1a12      	subs	r2, r2, r0
 8025a1c:	b292      	uxth	r2, r2
 8025a1e:	fb0e f101 	mul.w	r1, lr, r1
 8025a22:	fb02 110c 	mla	r1, r2, ip, r1
 8025a26:	fb00 1105 	mla	r1, r0, r5, r1
 8025a2a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025a2c:	fb08 1105 	mla	r1, r8, r5, r1
 8025a30:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025a34:	2900      	cmp	r1, #0
 8025a36:	f000 80f5 	beq.w	8025c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8025a3a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025a3e:	d019      	beq.n	8025a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8025a40:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025a44:	fb0c fa0a 	mul.w	sl, ip, sl
 8025a48:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025a4c:	fb0c fc03 	mul.w	ip, ip, r3
 8025a50:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025a54:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025a58:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025a5c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025a60:	4453      	add	r3, sl
 8025a62:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025a66:	0a1b      	lsrs	r3, r3, #8
 8025a68:	0a3f      	lsrs	r7, r7, #8
 8025a6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025a6e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025a72:	433b      	orrs	r3, r7
 8025a74:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a76:	2dff      	cmp	r5, #255	; 0xff
 8025a78:	d020      	beq.n	8025abc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8025a7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a7c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025a80:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a82:	436f      	muls	r7, r5
 8025a84:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025a86:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025a8a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025a8c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025a90:	fb05 fa0a 	mul.w	sl, r5, sl
 8025a94:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025a98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025a9c:	44bc      	add	ip, r7
 8025a9e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025aa2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025aa6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025aaa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025aae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025ab2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025ab6:	ea4c 050a 	orr.w	r5, ip, sl
 8025aba:	950e      	str	r5, [sp, #56]	; 0x38
 8025abc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025abe:	2dff      	cmp	r5, #255	; 0xff
 8025ac0:	d020      	beq.n	8025b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8025ac2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025ac4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025ac8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025aca:	436f      	muls	r7, r5
 8025acc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025ace:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025ad2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025ad4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025ad8:	fb05 fa0a 	mul.w	sl, r5, sl
 8025adc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025ae0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025ae4:	44bc      	add	ip, r7
 8025ae6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025aea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025aee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025af2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025af6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025afa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025afe:	ea4c 050a 	orr.w	r5, ip, sl
 8025b02:	9509      	str	r5, [sp, #36]	; 0x24
 8025b04:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025b06:	2dff      	cmp	r5, #255	; 0xff
 8025b08:	d020      	beq.n	8025b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8025b0a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b0c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025b10:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025b12:	436f      	muls	r7, r5
 8025b14:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b16:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025b1a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025b1c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025b20:	fb05 fa0a 	mul.w	sl, r5, sl
 8025b24:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025b28:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b2c:	44bc      	add	ip, r7
 8025b2e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025b32:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025b36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b3e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025b46:	ea4c 050a 	orr.w	r5, ip, sl
 8025b4a:	950f      	str	r5, [sp, #60]	; 0x3c
 8025b4c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b4e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025b52:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025b54:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025b58:	fb0e f707 	mul.w	r7, lr, r7
 8025b5c:	fb02 770c 	mla	r7, r2, ip, r7
 8025b60:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025b64:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025b66:	fb00 770c 	mla	r7, r0, ip, r7
 8025b6a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025b6e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025b70:	fb08 770c 	mla	r7, r8, ip, r7
 8025b74:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025b78:	fb0e fe0c 	mul.w	lr, lr, ip
 8025b7c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025b80:	fb02 e303 	mla	r3, r2, r3, lr
 8025b84:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025b86:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025b88:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8025b8c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025b8e:	fb00 330a 	mla	r3, r0, sl, r3
 8025b92:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8025b96:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025b9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025b9c:	f8b9 0000 	ldrh.w	r0, [r9]
 8025ba0:	4359      	muls	r1, r3
 8025ba2:	0a3f      	lsrs	r7, r7, #8
 8025ba4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025ba8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025bac:	1c4b      	adds	r3, r1, #1
 8025bae:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025bb2:	ea47 070c 	orr.w	r7, r7, ip
 8025bb6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025bba:	1202      	asrs	r2, r0, #8
 8025bbc:	0c3b      	lsrs	r3, r7, #16
 8025bbe:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8025bc2:	b2c9      	uxtb	r1, r1
 8025bc4:	fb13 f305 	smulbb	r3, r3, r5
 8025bc8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025bcc:	fb02 3201 	mla	r2, r2, r1, r3
 8025bd0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8025bd4:	10c3      	asrs	r3, r0, #3
 8025bd6:	b2ff      	uxtb	r7, r7
 8025bd8:	00c0      	lsls	r0, r0, #3
 8025bda:	b2c0      	uxtb	r0, r0
 8025bdc:	fb17 f705 	smulbb	r7, r7, r5
 8025be0:	fb00 7001 	mla	r0, r0, r1, r7
 8025be4:	b292      	uxth	r2, r2
 8025be6:	fb1c fc05 	smulbb	ip, ip, r5
 8025bea:	b280      	uxth	r0, r0
 8025bec:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025bf0:	fb03 c301 	mla	r3, r3, r1, ip
 8025bf4:	1c51      	adds	r1, r2, #1
 8025bf6:	f100 0c01 	add.w	ip, r0, #1
 8025bfa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025bfe:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8025c02:	b29b      	uxth	r3, r3
 8025c04:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025c08:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8025c0c:	ea4c 0202 	orr.w	r2, ip, r2
 8025c10:	f103 0c01 	add.w	ip, r3, #1
 8025c14:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025c18:	095b      	lsrs	r3, r3, #5
 8025c1a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025c1e:	431a      	orrs	r2, r3
 8025c20:	f8a9 2000 	strh.w	r2, [r9]
 8025c24:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025c26:	441c      	add	r4, r3
 8025c28:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025c2a:	f109 0902 	add.w	r9, r9, #2
 8025c2e:	441e      	add	r6, r3
 8025c30:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025c34:	e647      	b.n	80258c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8025c36:	2800      	cmp	r0, #0
 8025c38:	f43f aedf 	beq.w	80259fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025c3c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025c40:	9109      	str	r1, [sp, #36]	; 0x24
 8025c42:	0e09      	lsrs	r1, r1, #24
 8025c44:	9112      	str	r1, [sp, #72]	; 0x48
 8025c46:	e6d8      	b.n	80259fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025c48:	b01d      	add	sp, #116	; 0x74
 8025c4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08025c4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8025c4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025c52:	b085      	sub	sp, #20
 8025c54:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8025c58:	9102      	str	r1, [sp, #8]
 8025c5a:	2c00      	cmp	r4, #0
 8025c5c:	fb04 7103 	mla	r1, r4, r3, r7
 8025c60:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8025c64:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025c68:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8025c6c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025c70:	f2c0 810c 	blt.w	8025e8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025c74:	45a6      	cmp	lr, r4
 8025c76:	f340 8109 	ble.w	8025e8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025c7a:	2f00      	cmp	r7, #0
 8025c7c:	f2c0 8104 	blt.w	8025e88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025c80:	42bb      	cmp	r3, r7
 8025c82:	f340 8101 	ble.w	8025e88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025c86:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8025c8a:	1c7a      	adds	r2, r7, #1
 8025c8c:	f100 8101 	bmi.w	8025e92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025c90:	4293      	cmp	r3, r2
 8025c92:	f340 80fe 	ble.w	8025e92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025c96:	2e00      	cmp	r6, #0
 8025c98:	f000 80fd 	beq.w	8025e96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8025c9c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025ca0:	3401      	adds	r4, #1
 8025ca2:	f100 80fc 	bmi.w	8025e9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025ca6:	45a6      	cmp	lr, r4
 8025ca8:	f340 80f9 	ble.w	8025e9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025cac:	2800      	cmp	r0, #0
 8025cae:	f000 80f9 	beq.w	8025ea4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8025cb2:	2f00      	cmp	r7, #0
 8025cb4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8025cb8:	f2c0 80ef 	blt.w	8025e9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025cbc:	42bb      	cmp	r3, r7
 8025cbe:	f340 80ec 	ble.w	8025e9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025cc2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8025cc6:	3701      	adds	r7, #1
 8025cc8:	f100 80ef 	bmi.w	8025eaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025ccc:	42bb      	cmp	r3, r7
 8025cce:	f340 80ec 	ble.w	8025eaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025cd2:	2e00      	cmp	r6, #0
 8025cd4:	f000 80eb 	beq.w	8025eae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8025cd8:	6852      	ldr	r2, [r2, #4]
 8025cda:	b2b6      	uxth	r6, r6
 8025cdc:	b280      	uxth	r0, r0
 8025cde:	fb00 fe06 	mul.w	lr, r0, r6
 8025ce2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8025ce6:	0136      	lsls	r6, r6, #4
 8025ce8:	eba6 070e 	sub.w	r7, r6, lr
 8025cec:	b280      	uxth	r0, r0
 8025cee:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8025cf2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8025cf6:	b2bf      	uxth	r7, r7
 8025cf8:	1a1b      	subs	r3, r3, r0
 8025cfa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025cfe:	b29b      	uxth	r3, r3
 8025d00:	fb07 f60a 	mul.w	r6, r7, sl
 8025d04:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025d08:	fb0b 6603 	mla	r6, fp, r3, r6
 8025d0c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025d10:	fb00 6609 	mla	r6, r0, r9, r6
 8025d14:	fb0e 6608 	mla	r6, lr, r8, r6
 8025d18:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025d1c:	9600      	str	r6, [sp, #0]
 8025d1e:	2e00      	cmp	r6, #0
 8025d20:	f000 80af 	beq.w	8025e82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8025d24:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025d28:	fb0b fc0c 	mul.w	ip, fp, ip
 8025d2c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025d30:	fb0b f505 	mul.w	r5, fp, r5
 8025d34:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025d38:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8025d3c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025d40:	44dc      	add	ip, fp
 8025d42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025d46:	9501      	str	r5, [sp, #4]
 8025d48:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8025d4c:	9503      	str	r5, [sp, #12]
 8025d4e:	9d01      	ldr	r5, [sp, #4]
 8025d50:	9e02      	ldr	r6, [sp, #8]
 8025d52:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8025d56:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8025d5a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8025d5e:	fb0a fc0c 	mul.w	ip, sl, ip
 8025d62:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8025d66:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8025d6a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025d6e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025d72:	4465      	add	r5, ip
 8025d74:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025d78:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025d7c:	fb09 fc0c 	mul.w	ip, r9, ip
 8025d80:	fb09 f904 	mul.w	r9, r9, r4
 8025d84:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8025d88:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8025d8c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8025d90:	fb08 f404 	mul.w	r4, r8, r4
 8025d94:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025d98:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025d9c:	fb08 f802 	mul.w	r8, r8, r2
 8025da0:	fb0a fa01 	mul.w	sl, sl, r1
 8025da4:	0a22      	lsrs	r2, r4, #8
 8025da6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8025daa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025dae:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8025db2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8025db6:	4414      	add	r4, r2
 8025db8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8025dbc:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8025dc0:	0a2d      	lsrs	r5, r5, #8
 8025dc2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8025dc6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8025dca:	9a03      	ldr	r2, [sp, #12]
 8025dcc:	8836      	ldrh	r6, [r6, #0]
 8025dce:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025dd2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025dd6:	437d      	muls	r5, r7
 8025dd8:	4461      	add	r1, ip
 8025dda:	0a24      	lsrs	r4, r4, #8
 8025ddc:	fb02 5503 	mla	r5, r2, r3, r5
 8025de0:	0a09      	lsrs	r1, r1, #8
 8025de2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8025de6:	fb04 540e 	mla	r4, r4, lr, r5
 8025dea:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8025dee:	fb01 4100 	mla	r1, r1, r0, r4
 8025df2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025df6:	0a09      	lsrs	r1, r1, #8
 8025df8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025dfc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025e00:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025e04:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025e08:	fb07 f70a 	mul.w	r7, r7, sl
 8025e0c:	fb03 7101 	mla	r1, r3, r1, r7
 8025e10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025e14:	9b00      	ldr	r3, [sp, #0]
 8025e16:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8025e1a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025e1e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025e22:	fb00 e101 	mla	r1, r0, r1, lr
 8025e26:	43da      	mvns	r2, r3
 8025e28:	1233      	asrs	r3, r6, #8
 8025e2a:	b2d2      	uxtb	r2, r2
 8025e2c:	10f0      	asrs	r0, r6, #3
 8025e2e:	0a09      	lsrs	r1, r1, #8
 8025e30:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025e34:	00f6      	lsls	r6, r6, #3
 8025e36:	4353      	muls	r3, r2
 8025e38:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8025e3c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025e40:	b2f6      	uxtb	r6, r6
 8025e42:	4321      	orrs	r1, r4
 8025e44:	4350      	muls	r0, r2
 8025e46:	4356      	muls	r6, r2
 8025e48:	1c5a      	adds	r2, r3, #1
 8025e4a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8025e4e:	0c0b      	lsrs	r3, r1, #16
 8025e50:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025e54:	1c42      	adds	r2, r0, #1
 8025e56:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025e5a:	0a0a      	lsrs	r2, r1, #8
 8025e5c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025e60:	021b      	lsls	r3, r3, #8
 8025e62:	00d2      	lsls	r2, r2, #3
 8025e64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e68:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025e6c:	4313      	orrs	r3, r2
 8025e6e:	1c72      	adds	r2, r6, #1
 8025e70:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8025e74:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8025e78:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025e7c:	4319      	orrs	r1, r3
 8025e7e:	9b02      	ldr	r3, [sp, #8]
 8025e80:	8019      	strh	r1, [r3, #0]
 8025e82:	b005      	add	sp, #20
 8025e84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025e88:	2500      	movs	r5, #0
 8025e8a:	e6fe      	b.n	8025c8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8025e8c:	2100      	movs	r1, #0
 8025e8e:	460d      	mov	r5, r1
 8025e90:	e706      	b.n	8025ca0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025e92:	2100      	movs	r1, #0
 8025e94:	e704      	b.n	8025ca0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025e96:	4631      	mov	r1, r6
 8025e98:	e702      	b.n	8025ca0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025e9a:	2400      	movs	r4, #0
 8025e9c:	e713      	b.n	8025cc6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8025e9e:	2200      	movs	r2, #0
 8025ea0:	4614      	mov	r4, r2
 8025ea2:	e71a      	b.n	8025cda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025ea4:	4602      	mov	r2, r0
 8025ea6:	4604      	mov	r4, r0
 8025ea8:	e717      	b.n	8025cda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025eaa:	2200      	movs	r2, #0
 8025eac:	e715      	b.n	8025cda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025eae:	4632      	mov	r2, r6
 8025eb0:	e713      	b.n	8025cda <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08025eb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025eb8:	b09b      	sub	sp, #108	; 0x6c
 8025eba:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8025ebe:	9218      	str	r2, [sp, #96]	; 0x60
 8025ec0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8025ec2:	9116      	str	r1, [sp, #88]	; 0x58
 8025ec4:	9307      	str	r3, [sp, #28]
 8025ec6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8025eca:	9019      	str	r0, [sp, #100]	; 0x64
 8025ecc:	6850      	ldr	r0, [r2, #4]
 8025ece:	6812      	ldr	r2, [r2, #0]
 8025ed0:	fb00 1303 	mla	r3, r0, r3, r1
 8025ed4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025ed8:	930a      	str	r3, [sp, #40]	; 0x28
 8025eda:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025edc:	681b      	ldr	r3, [r3, #0]
 8025ede:	930f      	str	r3, [sp, #60]	; 0x3c
 8025ee0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025ee2:	2b00      	cmp	r3, #0
 8025ee4:	dc03      	bgt.n	8025eee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8025ee6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025ee8:	2b00      	cmp	r3, #0
 8025eea:	f340 8386 	ble.w	80265fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025eee:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025ef0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025ef4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025ef8:	1e48      	subs	r0, r1, #1
 8025efa:	1e57      	subs	r7, r2, #1
 8025efc:	9b07      	ldr	r3, [sp, #28]
 8025efe:	2b00      	cmp	r3, #0
 8025f00:	f340 8166 	ble.w	80261d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8025f04:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025f08:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025f0c:	d406      	bmi.n	8025f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025f0e:	4584      	cmp	ip, r0
 8025f10:	da04      	bge.n	8025f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025f12:	2b00      	cmp	r3, #0
 8025f14:	db02      	blt.n	8025f1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025f16:	42bb      	cmp	r3, r7
 8025f18:	f2c0 815b 	blt.w	80261d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025f1c:	f11c 0c01 	adds.w	ip, ip, #1
 8025f20:	f100 814b 	bmi.w	80261ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f24:	4561      	cmp	r1, ip
 8025f26:	f2c0 8148 	blt.w	80261ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f2a:	3301      	adds	r3, #1
 8025f2c:	f100 8145 	bmi.w	80261ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f30:	429a      	cmp	r2, r3
 8025f32:	f2c0 8142 	blt.w	80261ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025f36:	9b07      	ldr	r3, [sp, #28]
 8025f38:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8025f3a:	9317      	str	r3, [sp, #92]	; 0x5c
 8025f3c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025f3e:	2b00      	cmp	r3, #0
 8025f40:	f340 8165 	ble.w	802620e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8025f44:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8025f46:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025f48:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025f4c:	689b      	ldr	r3, [r3, #8]
 8025f4e:	1422      	asrs	r2, r4, #16
 8025f50:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8025f54:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025f58:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025f5c:	f100 81d5 	bmi.w	802630a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f60:	f103 38ff 	add.w	r8, r3, #4294967295
 8025f64:	4542      	cmp	r2, r8
 8025f66:	f280 81d0 	bge.w	802630a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f6a:	f1bc 0f00 	cmp.w	ip, #0
 8025f6e:	f2c0 81cc 	blt.w	802630a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f72:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025f76:	45c4      	cmp	ip, r8
 8025f78:	f280 81c7 	bge.w	802630a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025f7c:	b21b      	sxth	r3, r3
 8025f7e:	fb0c 2203 	mla	r2, ip, r3, r2
 8025f82:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025f84:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025f88:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8025f8c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025f90:	2900      	cmp	r1, #0
 8025f92:	f000 8182 	beq.w	802629a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8025f96:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8025f9a:	950b      	str	r5, [sp, #44]	; 0x2c
 8025f9c:	0e2d      	lsrs	r5, r5, #24
 8025f9e:	9512      	str	r5, [sp, #72]	; 0x48
 8025fa0:	b180      	cbz	r0, 8025fc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025fa2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025fa6:	3b01      	subs	r3, #1
 8025fa8:	009b      	lsls	r3, r3, #2
 8025faa:	3304      	adds	r3, #4
 8025fac:	eb08 0c03 	add.w	ip, r8, r3
 8025fb0:	f858 3003 	ldr.w	r3, [r8, r3]
 8025fb4:	9308      	str	r3, [sp, #32]
 8025fb6:	0e1b      	lsrs	r3, r3, #24
 8025fb8:	9310      	str	r3, [sp, #64]	; 0x40
 8025fba:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025fbe:	930c      	str	r3, [sp, #48]	; 0x30
 8025fc0:	0e1b      	lsrs	r3, r3, #24
 8025fc2:	9313      	str	r3, [sp, #76]	; 0x4c
 8025fc4:	b289      	uxth	r1, r1
 8025fc6:	b280      	uxth	r0, r0
 8025fc8:	fb01 f900 	mul.w	r9, r1, r0
 8025fcc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025fd0:	0109      	lsls	r1, r1, #4
 8025fd2:	eba1 0809 	sub.w	r8, r1, r9
 8025fd6:	b280      	uxth	r0, r0
 8025fd8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8025fdc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8025fde:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025fe0:	fa1f f888 	uxth.w	r8, r8
 8025fe4:	1a09      	subs	r1, r1, r0
 8025fe6:	b289      	uxth	r1, r1
 8025fe8:	fb08 f303 	mul.w	r3, r8, r3
 8025fec:	fb01 330e 	mla	r3, r1, lr, r3
 8025ff0:	fb00 3305 	mla	r3, r0, r5, r3
 8025ff4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025ff6:	fb09 3305 	mla	r3, r9, r5, r3
 8025ffa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025ffe:	2b00      	cmp	r3, #0
 8026000:	f000 80d2 	beq.w	80261a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026004:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8026008:	d01b      	beq.n	8026042 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802600a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802600e:	fb0e fa0a 	mul.w	sl, lr, sl
 8026012:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026016:	fb0e fe02 	mul.w	lr, lr, r2
 802601a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802601e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8026022:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8026026:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802602a:	4452      	add	r2, sl
 802602c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8026030:	0a12      	lsrs	r2, r2, #8
 8026032:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026036:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802603a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802603e:	ea42 020c 	orr.w	r2, r2, ip
 8026042:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026044:	2dff      	cmp	r5, #255	; 0xff
 8026046:	d021      	beq.n	802608c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8026048:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802604a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802604e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026050:	fb05 fb0b 	mul.w	fp, r5, fp
 8026054:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026056:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802605a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802605c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8026060:	fb05 fa0a 	mul.w	sl, r5, sl
 8026064:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026068:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802606c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026070:	44de      	add	lr, fp
 8026072:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8026076:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802607a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802607e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026082:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026086:	ea4e 050a 	orr.w	r5, lr, sl
 802608a:	950b      	str	r5, [sp, #44]	; 0x2c
 802608c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802608e:	2dff      	cmp	r5, #255	; 0xff
 8026090:	d021      	beq.n	80260d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026092:	9d08      	ldr	r5, [sp, #32]
 8026094:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8026098:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802609a:	fb05 fb0b 	mul.w	fp, r5, fp
 802609e:	9d08      	ldr	r5, [sp, #32]
 80260a0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80260a4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80260a6:	fb05 fa0e 	mul.w	sl, r5, lr
 80260aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80260ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260b2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80260b6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80260ba:	44de      	add	lr, fp
 80260bc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80260c0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80260c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80260c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80260d0:	ea4e 050a 	orr.w	r5, lr, sl
 80260d4:	9508      	str	r5, [sp, #32]
 80260d6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80260d8:	2dff      	cmp	r5, #255	; 0xff
 80260da:	d021      	beq.n	8026120 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80260dc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80260de:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80260e2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80260e4:	fb05 fb0b 	mul.w	fp, r5, fp
 80260e8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80260ea:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80260ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80260f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80260f4:	fb05 fa0a 	mul.w	sl, r5, sl
 80260f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80260fc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8026100:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8026104:	44de      	add	lr, fp
 8026106:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802610a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802610e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026112:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8026116:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802611a:	ea4e 050a 	orr.w	r5, lr, sl
 802611e:	950c      	str	r5, [sp, #48]	; 0x30
 8026120:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026122:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026126:	9d08      	ldr	r5, [sp, #32]
 8026128:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802612c:	fb08 fc0c 	mul.w	ip, r8, ip
 8026130:	fb01 cc0e 	mla	ip, r1, lr, ip
 8026134:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026138:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802613a:	fb00 cc0e 	mla	ip, r0, lr, ip
 802613e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8026142:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8026144:	fb09 cc0e 	mla	ip, r9, lr, ip
 8026148:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802614c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8026150:	fb08 f80e 	mul.w	r8, r8, lr
 8026154:	fb01 8202 	mla	r2, r1, r2, r8
 8026158:	9908      	ldr	r1, [sp, #32]
 802615a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802615e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026160:	fb00 220a 	mla	r2, r0, sl, r2
 8026164:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8026168:	fb09 2900 	mla	r9, r9, r0, r2
 802616c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026170:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026174:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026178:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802617c:	ea4c 0c09 	orr.w	ip, ip, r9
 8026180:	2bff      	cmp	r3, #255	; 0xff
 8026182:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8026186:	f040 8091 	bne.w	80262ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802618a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802618e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8026192:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026196:	f022 0207 	bic.w	r2, r2, #7
 802619a:	431a      	orrs	r2, r3
 802619c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80261a0:	ea4c 0c02 	orr.w	ip, ip, r2
 80261a4:	f8a7 c000 	strh.w	ip, [r7]
 80261a8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80261aa:	441c      	add	r4, r3
 80261ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80261ae:	441e      	add	r6, r3
 80261b0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80261b2:	3b01      	subs	r3, #1
 80261b4:	3702      	adds	r7, #2
 80261b6:	9317      	str	r3, [sp, #92]	; 0x5c
 80261b8:	e6c0      	b.n	8025f3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80261ba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80261bc:	441c      	add	r4, r3
 80261be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80261c0:	441e      	add	r6, r3
 80261c2:	9b07      	ldr	r3, [sp, #28]
 80261c4:	3b01      	subs	r3, #1
 80261c6:	9307      	str	r3, [sp, #28]
 80261c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80261ca:	3302      	adds	r3, #2
 80261cc:	930a      	str	r3, [sp, #40]	; 0x28
 80261ce:	e695      	b.n	8025efc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80261d0:	d024      	beq.n	802621c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80261d2:	9b07      	ldr	r3, [sp, #28]
 80261d4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80261d6:	3b01      	subs	r3, #1
 80261d8:	fb00 4003 	mla	r0, r0, r3, r4
 80261dc:	1400      	asrs	r0, r0, #16
 80261de:	f53f aeaa 	bmi.w	8025f36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80261e2:	3901      	subs	r1, #1
 80261e4:	4288      	cmp	r0, r1
 80261e6:	f6bf aea6 	bge.w	8025f36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80261ea:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80261ec:	fb01 6303 	mla	r3, r1, r3, r6
 80261f0:	141b      	asrs	r3, r3, #16
 80261f2:	f53f aea0 	bmi.w	8025f36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80261f6:	3a01      	subs	r2, #1
 80261f8:	4293      	cmp	r3, r2
 80261fa:	f6bf ae9c 	bge.w	8025f36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80261fe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8026202:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8026206:	f1bb 0f00 	cmp.w	fp, #0
 802620a:	f300 809a 	bgt.w	8026342 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802620e:	9b07      	ldr	r3, [sp, #28]
 8026210:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026214:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026216:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802621a:	930a      	str	r3, [sp, #40]	; 0x28
 802621c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802621e:	2b00      	cmp	r3, #0
 8026220:	f340 81eb 	ble.w	80265fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8026224:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026228:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802622c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026230:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026232:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026236:	ee31 1a05 	vadd.f32	s2, s2, s10
 802623a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802623e:	eef0 6a62 	vmov.f32	s13, s5
 8026242:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026246:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802624a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802624e:	ee16 4a90 	vmov	r4, s13
 8026252:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026256:	eef0 6a43 	vmov.f32	s13, s6
 802625a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802625e:	ee12 2a90 	vmov	r2, s5
 8026262:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026266:	fb92 f3f3 	sdiv	r3, r2, r3
 802626a:	ee13 2a10 	vmov	r2, s6
 802626e:	9327      	str	r3, [sp, #156]	; 0x9c
 8026270:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026272:	fb92 f3f3 	sdiv	r3, r2, r3
 8026276:	9328      	str	r3, [sp, #160]	; 0xa0
 8026278:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802627a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802627c:	3b01      	subs	r3, #1
 802627e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026282:	9316      	str	r3, [sp, #88]	; 0x58
 8026284:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026286:	bf08      	it	eq
 8026288:	4613      	moveq	r3, r2
 802628a:	ee16 6a90 	vmov	r6, s13
 802628e:	9307      	str	r3, [sp, #28]
 8026290:	eeb0 3a67 	vmov.f32	s6, s15
 8026294:	eef0 2a47 	vmov.f32	s5, s14
 8026298:	e622      	b.n	8025ee0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802629a:	2800      	cmp	r0, #0
 802629c:	f43f ae92 	beq.w	8025fc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80262a0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80262a4:	9308      	str	r3, [sp, #32]
 80262a6:	0e1b      	lsrs	r3, r3, #24
 80262a8:	9310      	str	r3, [sp, #64]	; 0x40
 80262aa:	e68b      	b.n	8025fc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80262ac:	8839      	ldrh	r1, [r7, #0]
 80262ae:	4dd4      	ldr	r5, [pc, #848]	; (8026600 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80262b0:	43db      	mvns	r3, r3
 80262b2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80262b6:	fa5f f883 	uxtb.w	r8, r3
 80262ba:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80262be:	fb0e fe08 	mul.w	lr, lr, r8
 80262c2:	10c8      	asrs	r0, r1, #3
 80262c4:	00cb      	lsls	r3, r1, #3
 80262c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80262ca:	f10e 0101 	add.w	r1, lr, #1
 80262ce:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80262d2:	fb00 f008 	mul.w	r0, r0, r8
 80262d6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80262da:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80262de:	f100 0e01 	add.w	lr, r0, #1
 80262e2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80262e6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80262ea:	b2db      	uxtb	r3, r3
 80262ec:	b2c9      	uxtb	r1, r1
 80262ee:	00d2      	lsls	r2, r2, #3
 80262f0:	fb03 f308 	mul.w	r3, r3, r8
 80262f4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80262f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80262fc:	430a      	orrs	r2, r1
 80262fe:	1c59      	adds	r1, r3, #1
 8026300:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8026304:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8026308:	e748      	b.n	802619c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802630a:	f112 0801 	adds.w	r8, r2, #1
 802630e:	f53f af4b 	bmi.w	80261a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026312:	4543      	cmp	r3, r8
 8026314:	f6ff af48 	blt.w	80261a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026318:	f11c 0801 	adds.w	r8, ip, #1
 802631c:	f53f af44 	bmi.w	80261a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026320:	45c6      	cmp	lr, r8
 8026322:	f6ff af41 	blt.w	80261a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026326:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802632a:	fa0f f28e 	sxth.w	r2, lr
 802632e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8026332:	9200      	str	r2, [sp, #0]
 8026334:	b21b      	sxth	r3, r3
 8026336:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026338:	9819      	ldr	r0, [sp, #100]	; 0x64
 802633a:	4639      	mov	r1, r7
 802633c:	f7ff fc87 	bl	8025c4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8026340:	e732      	b.n	80261a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8026342:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026344:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026346:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802634a:	1421      	asrs	r1, r4, #16
 802634c:	1433      	asrs	r3, r6, #16
 802634e:	fb07 1303 	mla	r3, r7, r3, r1
 8026352:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026354:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8026358:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802635c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026360:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026364:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8026368:	2a00      	cmp	r2, #0
 802636a:	f000 8107 	beq.w	802657c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802636e:	684d      	ldr	r5, [r1, #4]
 8026370:	950d      	str	r5, [sp, #52]	; 0x34
 8026372:	0e2d      	lsrs	r5, r5, #24
 8026374:	9514      	str	r5, [sp, #80]	; 0x50
 8026376:	b178      	cbz	r0, 8026398 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026378:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802637c:	3f01      	subs	r7, #1
 802637e:	00bf      	lsls	r7, r7, #2
 8026380:	3704      	adds	r7, #4
 8026382:	eb01 0e07 	add.w	lr, r1, r7
 8026386:	59c9      	ldr	r1, [r1, r7]
 8026388:	9109      	str	r1, [sp, #36]	; 0x24
 802638a:	0e09      	lsrs	r1, r1, #24
 802638c:	9111      	str	r1, [sp, #68]	; 0x44
 802638e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8026392:	910e      	str	r1, [sp, #56]	; 0x38
 8026394:	0e09      	lsrs	r1, r1, #24
 8026396:	9115      	str	r1, [sp, #84]	; 0x54
 8026398:	b292      	uxth	r2, r2
 802639a:	b280      	uxth	r0, r0
 802639c:	fb02 f900 	mul.w	r9, r2, r0
 80263a0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80263a4:	0112      	lsls	r2, r2, #4
 80263a6:	eba2 0e09 	sub.w	lr, r2, r9
 80263aa:	b280      	uxth	r0, r0
 80263ac:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80263b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80263b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80263b4:	fa1f fe8e 	uxth.w	lr, lr
 80263b8:	1a09      	subs	r1, r1, r0
 80263ba:	b289      	uxth	r1, r1
 80263bc:	fb0e f202 	mul.w	r2, lr, r2
 80263c0:	fb01 220c 	mla	r2, r1, ip, r2
 80263c4:	fb00 2205 	mla	r2, r0, r5, r2
 80263c8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80263ca:	fb09 2205 	mla	r2, r9, r5, r2
 80263ce:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80263d2:	2a00      	cmp	r2, #0
 80263d4:	f000 80c9 	beq.w	802656a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80263d8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80263dc:	d019      	beq.n	8026412 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80263de:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80263e2:	fb0c fa0a 	mul.w	sl, ip, sl
 80263e6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80263ea:	fb0c fc03 	mul.w	ip, ip, r3
 80263ee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80263f2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80263f6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80263fa:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80263fe:	4453      	add	r3, sl
 8026400:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8026404:	0a1b      	lsrs	r3, r3, #8
 8026406:	0a3f      	lsrs	r7, r7, #8
 8026408:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802640c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8026410:	433b      	orrs	r3, r7
 8026412:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026414:	2dff      	cmp	r5, #255	; 0xff
 8026416:	d020      	beq.n	802645a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8026418:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802641a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802641e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8026420:	436f      	muls	r7, r5
 8026422:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8026424:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8026428:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802642a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802642e:	fb05 fa0a 	mul.w	sl, r5, sl
 8026432:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026436:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802643a:	44bc      	add	ip, r7
 802643c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026440:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8026444:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026448:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802644c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026450:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8026454:	ea4c 050a 	orr.w	r5, ip, sl
 8026458:	950d      	str	r5, [sp, #52]	; 0x34
 802645a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802645c:	2dff      	cmp	r5, #255	; 0xff
 802645e:	d020      	beq.n	80264a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8026460:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026462:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026466:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026468:	436f      	muls	r7, r5
 802646a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802646c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026470:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8026472:	fb05 fa0c 	mul.w	sl, r5, ip
 8026476:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802647a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802647e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8026482:	44bc      	add	ip, r7
 8026484:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8026488:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802648c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8026490:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8026494:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8026498:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802649c:	ea4c 050a 	orr.w	r5, ip, sl
 80264a0:	9509      	str	r5, [sp, #36]	; 0x24
 80264a2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80264a4:	2dff      	cmp	r5, #255	; 0xff
 80264a6:	d020      	beq.n	80264ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80264a8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80264aa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80264ae:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80264b0:	436f      	muls	r7, r5
 80264b2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80264b4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80264b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80264ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80264be:	fb05 fa0a 	mul.w	sl, r5, sl
 80264c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80264c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80264ca:	44bc      	add	ip, r7
 80264cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80264d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80264d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80264d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80264dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80264e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80264e4:	ea4c 050a 	orr.w	r5, ip, sl
 80264e8:	950e      	str	r5, [sp, #56]	; 0x38
 80264ea:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80264ec:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80264f0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80264f2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80264f6:	fb0e f707 	mul.w	r7, lr, r7
 80264fa:	fb01 770c 	mla	r7, r1, ip, r7
 80264fe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026502:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026504:	fb00 770c 	mla	r7, r0, ip, r7
 8026508:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802650c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802650e:	fb09 770c 	mla	r7, r9, ip, r7
 8026512:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026516:	fb0e fe0c 	mul.w	lr, lr, ip
 802651a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802651e:	fb01 e303 	mla	r3, r1, r3, lr
 8026522:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026524:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8026528:	990e      	ldr	r1, [sp, #56]	; 0x38
 802652a:	fb00 330a 	mla	r3, r0, sl, r3
 802652e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8026532:	fb09 3c0c 	mla	ip, r9, ip, r3
 8026536:	0a3f      	lsrs	r7, r7, #8
 8026538:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802653c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8026540:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8026544:	ea47 070c 	orr.w	r7, r7, ip
 8026548:	2aff      	cmp	r2, #255	; 0xff
 802654a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802654e:	d11e      	bne.n	802658e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8026550:	097a      	lsrs	r2, r7, #5
 8026552:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8026556:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802655a:	f023 0307 	bic.w	r3, r3, #7
 802655e:	4313      	orrs	r3, r2
 8026560:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026564:	431f      	orrs	r7, r3
 8026566:	f8a8 7000 	strh.w	r7, [r8]
 802656a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802656c:	441c      	add	r4, r3
 802656e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026570:	f108 0802 	add.w	r8, r8, #2
 8026574:	441e      	add	r6, r3
 8026576:	f10b 3bff 	add.w	fp, fp, #4294967295
 802657a:	e644      	b.n	8026206 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802657c:	2800      	cmp	r0, #0
 802657e:	f43f af0b 	beq.w	8026398 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026582:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8026586:	9109      	str	r1, [sp, #36]	; 0x24
 8026588:	0e09      	lsrs	r1, r1, #24
 802658a:	9111      	str	r1, [sp, #68]	; 0x44
 802658c:	e704      	b.n	8026398 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802658e:	f8b8 1000 	ldrh.w	r1, [r8]
 8026592:	43d2      	mvns	r2, r2
 8026594:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8026598:	fa5f fe82 	uxtb.w	lr, r2
 802659c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80265a0:	fb0c fc0e 	mul.w	ip, ip, lr
 80265a4:	10c8      	asrs	r0, r1, #3
 80265a6:	00ca      	lsls	r2, r1, #3
 80265a8:	f10c 0101 	add.w	r1, ip, #1
 80265ac:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80265b0:	0c39      	lsrs	r1, r7, #16
 80265b2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80265b6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80265ba:	4911      	ldr	r1, [pc, #68]	; (8026600 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80265bc:	fb00 f00e 	mul.w	r0, r0, lr
 80265c0:	fa5f fc8c 	uxtb.w	ip, ip
 80265c4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80265c8:	b2d2      	uxtb	r2, r2
 80265ca:	1c41      	adds	r1, r0, #1
 80265cc:	fb02 f20e 	mul.w	r2, r2, lr
 80265d0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80265d4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80265d8:	1c51      	adds	r1, r2, #1
 80265da:	00c0      	lsls	r0, r0, #3
 80265dc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80265e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80265e4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80265e8:	ea4c 0c00 	orr.w	ip, ip, r0
 80265ec:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80265f0:	ea47 0c0c 	orr.w	ip, r7, ip
 80265f4:	f8a8 c000 	strh.w	ip, [r8]
 80265f8:	e7b7      	b.n	802656a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80265fa:	b01b      	add	sp, #108	; 0x6c
 80265fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026600:	fffff800 	.word	0xfffff800

08026604 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8026604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026608:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802660c:	2d00      	cmp	r5, #0
 802660e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026612:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026616:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802661a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802661e:	fb05 0e03 	mla	lr, r5, r3, r0
 8026622:	f2c0 808c 	blt.w	802673e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8026626:	45a9      	cmp	r9, r5
 8026628:	f340 8089 	ble.w	802673e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802662c:	2800      	cmp	r0, #0
 802662e:	f2c0 8084 	blt.w	802673a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026632:	4580      	cmp	r8, r0
 8026634:	f340 8081 	ble.w	802673a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026638:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802663c:	f01e 0f01 	tst.w	lr, #1
 8026640:	5d16      	ldrb	r6, [r2, r4]
 8026642:	bf0c      	ite	eq
 8026644:	f006 060f 	andeq.w	r6, r6, #15
 8026648:	1136      	asrne	r6, r6, #4
 802664a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802664e:	b2f6      	uxtb	r6, r6
 8026650:	1c44      	adds	r4, r0, #1
 8026652:	d477      	bmi.n	8026744 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026654:	45a0      	cmp	r8, r4
 8026656:	dd75      	ble.n	8026744 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026658:	2f00      	cmp	r7, #0
 802665a:	d075      	beq.n	8026748 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802665c:	f10e 0a01 	add.w	sl, lr, #1
 8026660:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026664:	f01a 0f01 	tst.w	sl, #1
 8026668:	5d14      	ldrb	r4, [r2, r4]
 802666a:	bf0c      	ite	eq
 802666c:	f004 040f 	andeq.w	r4, r4, #15
 8026670:	1124      	asrne	r4, r4, #4
 8026672:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026676:	b2e4      	uxtb	r4, r4
 8026678:	3501      	adds	r5, #1
 802667a:	d469      	bmi.n	8026750 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802667c:	45a9      	cmp	r9, r5
 802667e:	dd67      	ble.n	8026750 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8026680:	f1bc 0f00 	cmp.w	ip, #0
 8026684:	d067      	beq.n	8026756 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8026686:	2800      	cmp	r0, #0
 8026688:	db60      	blt.n	802674c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802668a:	4580      	cmp	r8, r0
 802668c:	dd5e      	ble.n	802674c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802668e:	eb03 090e 	add.w	r9, r3, lr
 8026692:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026696:	f019 0f01 	tst.w	r9, #1
 802669a:	5d55      	ldrb	r5, [r2, r5]
 802669c:	bf0c      	ite	eq
 802669e:	f005 050f 	andeq.w	r5, r5, #15
 80266a2:	112d      	asrne	r5, r5, #4
 80266a4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80266a8:	b2ed      	uxtb	r5, r5
 80266aa:	3001      	adds	r0, #1
 80266ac:	d456      	bmi.n	802675c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80266ae:	4580      	cmp	r8, r0
 80266b0:	dd54      	ble.n	802675c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80266b2:	2f00      	cmp	r7, #0
 80266b4:	d054      	beq.n	8026760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80266b6:	3301      	adds	r3, #1
 80266b8:	449e      	add	lr, r3
 80266ba:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80266be:	f01e 0f01 	tst.w	lr, #1
 80266c2:	5cd0      	ldrb	r0, [r2, r3]
 80266c4:	bf0c      	ite	eq
 80266c6:	f000 000f 	andeq.w	r0, r0, #15
 80266ca:	1100      	asrne	r0, r0, #4
 80266cc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80266d0:	b2c3      	uxtb	r3, r0
 80266d2:	b2ba      	uxth	r2, r7
 80266d4:	fa1f fc8c 	uxth.w	ip, ip
 80266d8:	fb02 f00c 	mul.w	r0, r2, ip
 80266dc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80266e0:	0112      	lsls	r2, r2, #4
 80266e2:	fa1f fc8c 	uxth.w	ip, ip
 80266e6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80266ea:	1a12      	subs	r2, r2, r0
 80266ec:	eba7 070c 	sub.w	r7, r7, ip
 80266f0:	b292      	uxth	r2, r2
 80266f2:	b2bf      	uxth	r7, r7
 80266f4:	4362      	muls	r2, r4
 80266f6:	fb06 2207 	mla	r2, r6, r7, r2
 80266fa:	fb0c 2505 	mla	r5, ip, r5, r2
 80266fe:	fb00 5303 	mla	r3, r0, r3, r5
 8026702:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026706:	b1b3      	cbz	r3, 8026736 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8026708:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802670c:	435a      	muls	r2, r3
 802670e:	1c53      	adds	r3, r2, #1
 8026710:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026714:	4a2d      	ldr	r2, [pc, #180]	; (80267cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8026716:	121b      	asrs	r3, r3, #8
 8026718:	6812      	ldr	r2, [r2, #0]
 802671a:	2bff      	cmp	r3, #255	; 0xff
 802671c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8026720:	d120      	bne.n	8026764 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8026722:	4b2b      	ldr	r3, [pc, #172]	; (80267d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8026724:	0950      	lsrs	r0, r2, #5
 8026726:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802672a:	4033      	ands	r3, r6
 802672c:	4318      	orrs	r0, r3
 802672e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026732:	4302      	orrs	r2, r0
 8026734:	800a      	strh	r2, [r1, #0]
 8026736:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802673a:	2600      	movs	r6, #0
 802673c:	e788      	b.n	8026650 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802673e:	2400      	movs	r4, #0
 8026740:	4626      	mov	r6, r4
 8026742:	e799      	b.n	8026678 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026744:	2400      	movs	r4, #0
 8026746:	e797      	b.n	8026678 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026748:	463c      	mov	r4, r7
 802674a:	e795      	b.n	8026678 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802674c:	2500      	movs	r5, #0
 802674e:	e7ac      	b.n	80266aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8026750:	2300      	movs	r3, #0
 8026752:	461d      	mov	r5, r3
 8026754:	e7bd      	b.n	80266d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026756:	4663      	mov	r3, ip
 8026758:	4665      	mov	r5, ip
 802675a:	e7ba      	b.n	80266d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802675c:	2300      	movs	r3, #0
 802675e:	e7b8      	b.n	80266d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026760:	463b      	mov	r3, r7
 8026762:	e7b6      	b.n	80266d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026764:	880d      	ldrh	r5, [r1, #0]
 8026766:	b29f      	uxth	r7, r3
 8026768:	122c      	asrs	r4, r5, #8
 802676a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802676e:	43db      	mvns	r3, r3
 8026770:	b2db      	uxtb	r3, r3
 8026772:	fb10 f007 	smulbb	r0, r0, r7
 8026776:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802677a:	fb04 0403 	mla	r4, r4, r3, r0
 802677e:	b2f6      	uxtb	r6, r6
 8026780:	10e8      	asrs	r0, r5, #3
 8026782:	b2d2      	uxtb	r2, r2
 8026784:	00ed      	lsls	r5, r5, #3
 8026786:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802678a:	fb12 f207 	smulbb	r2, r2, r7
 802678e:	fb16 f607 	smulbb	r6, r6, r7
 8026792:	b2ed      	uxtb	r5, r5
 8026794:	b2a4      	uxth	r4, r4
 8026796:	fb00 6603 	mla	r6, r0, r3, r6
 802679a:	fb05 2303 	mla	r3, r5, r3, r2
 802679e:	b29a      	uxth	r2, r3
 80267a0:	1c63      	adds	r3, r4, #1
 80267a2:	b2b0      	uxth	r0, r6
 80267a4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80267a8:	1c53      	adds	r3, r2, #1
 80267aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80267ae:	1c42      	adds	r2, r0, #1
 80267b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80267b4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80267b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80267bc:	0940      	lsrs	r0, r0, #5
 80267be:	4323      	orrs	r3, r4
 80267c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80267c4:	4303      	orrs	r3, r0
 80267c6:	800b      	strh	r3, [r1, #0]
 80267c8:	e7b5      	b.n	8026736 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80267ca:	bf00      	nop
 80267cc:	20013844 	.word	0x20013844
 80267d0:	00fff800 	.word	0x00fff800

080267d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80267d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80267d8:	b097      	sub	sp, #92	; 0x5c
 80267da:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80267de:	9214      	str	r2, [sp, #80]	; 0x50
 80267e0:	9309      	str	r3, [sp, #36]	; 0x24
 80267e2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80267e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80267e8:	910d      	str	r1, [sp, #52]	; 0x34
 80267ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80267ec:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80267f0:	9015      	str	r0, [sp, #84]	; 0x54
 80267f2:	6850      	ldr	r0, [r2, #4]
 80267f4:	6812      	ldr	r2, [r2, #0]
 80267f6:	fb00 1303 	mla	r3, r0, r3, r1
 80267fa:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80267fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026800:	689b      	ldr	r3, [r3, #8]
 8026802:	3301      	adds	r3, #1
 8026804:	f023 0301 	bic.w	r3, r3, #1
 8026808:	930a      	str	r3, [sp, #40]	; 0x28
 802680a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802680c:	681f      	ldr	r7, [r3, #0]
 802680e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026810:	2b00      	cmp	r3, #0
 8026812:	dc03      	bgt.n	802681c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026814:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8026816:	2b00      	cmp	r3, #0
 8026818:	f340 8287 	ble.w	8026d2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802681c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802681e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026822:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026826:	1e48      	subs	r0, r1, #1
 8026828:	f102 3cff 	add.w	ip, r2, #4294967295
 802682c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802682e:	2b00      	cmp	r3, #0
 8026830:	f340 80c4 	ble.w	80269bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8026834:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026838:	ea4f 4326 	mov.w	r3, r6, asr #16
 802683c:	d406      	bmi.n	802684c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802683e:	4586      	cmp	lr, r0
 8026840:	da04      	bge.n	802684c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026842:	2b00      	cmp	r3, #0
 8026844:	db02      	blt.n	802684c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026846:	4563      	cmp	r3, ip
 8026848:	f2c0 80b9 	blt.w	80269be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802684c:	f11e 0e01 	adds.w	lr, lr, #1
 8026850:	f100 80aa 	bmi.w	80269a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026854:	4571      	cmp	r1, lr
 8026856:	f2c0 80a7 	blt.w	80269a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802685a:	3301      	adds	r3, #1
 802685c:	f100 80a4 	bmi.w	80269a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026860:	429a      	cmp	r2, r3
 8026862:	f2c0 80a1 	blt.w	80269a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026866:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026868:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802686c:	930e      	str	r3, [sp, #56]	; 0x38
 802686e:	46c8      	mov	r8, r9
 8026870:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026872:	2b00      	cmp	r3, #0
 8026874:	f340 80c3 	ble.w	80269fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8026878:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802687a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802687e:	1423      	asrs	r3, r4, #16
 8026880:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026884:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026888:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802688c:	f100 814d 	bmi.w	8026b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8026890:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026894:	455b      	cmp	r3, fp
 8026896:	f280 8148 	bge.w	8026b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802689a:	2800      	cmp	r0, #0
 802689c:	f2c0 8145 	blt.w	8026b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80268a0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80268a4:	4558      	cmp	r0, fp
 80268a6:	f280 8140 	bge.w	8026b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80268aa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80268ac:	fb00 3305 	mla	r3, r0, r5, r3
 80268b0:	0858      	lsrs	r0, r3, #1
 80268b2:	07dd      	lsls	r5, r3, #31
 80268b4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80268b8:	bf54      	ite	pl
 80268ba:	f00c 0c0f 	andpl.w	ip, ip, #15
 80268be:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80268c2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80268c6:	fa5f fc8c 	uxtb.w	ip, ip
 80268ca:	2a00      	cmp	r2, #0
 80268cc:	f000 80db 	beq.w	8026a86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80268d0:	1c58      	adds	r0, r3, #1
 80268d2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80268d6:	07c0      	lsls	r0, r0, #31
 80268d8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80268dc:	bf54      	ite	pl
 80268de:	f00e 0e0f 	andpl.w	lr, lr, #15
 80268e2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80268e6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80268ea:	fa5f f08e 	uxtb.w	r0, lr
 80268ee:	9010      	str	r0, [sp, #64]	; 0x40
 80268f0:	b1c9      	cbz	r1, 8026926 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80268f2:	4453      	add	r3, sl
 80268f4:	0858      	lsrs	r0, r3, #1
 80268f6:	07dd      	lsls	r5, r3, #31
 80268f8:	5c38      	ldrb	r0, [r7, r0]
 80268fa:	bf54      	ite	pl
 80268fc:	f000 000f 	andpl.w	r0, r0, #15
 8026900:	1100      	asrmi	r0, r0, #4
 8026902:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026906:	3301      	adds	r3, #1
 8026908:	b2c0      	uxtb	r0, r0
 802690a:	900b      	str	r0, [sp, #44]	; 0x2c
 802690c:	0858      	lsrs	r0, r3, #1
 802690e:	07dd      	lsls	r5, r3, #31
 8026910:	f817 e000 	ldrb.w	lr, [r7, r0]
 8026914:	bf54      	ite	pl
 8026916:	f00e 030f 	andpl.w	r3, lr, #15
 802691a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802691e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026922:	b2db      	uxtb	r3, r3
 8026924:	9311      	str	r3, [sp, #68]	; 0x44
 8026926:	b292      	uxth	r2, r2
 8026928:	b289      	uxth	r1, r1
 802692a:	fb02 f301 	mul.w	r3, r2, r1
 802692e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026932:	0112      	lsls	r2, r2, #4
 8026934:	b289      	uxth	r1, r1
 8026936:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802693a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802693c:	1ad2      	subs	r2, r2, r3
 802693e:	1a40      	subs	r0, r0, r1
 8026940:	b292      	uxth	r2, r2
 8026942:	436a      	muls	r2, r5
 8026944:	b280      	uxth	r0, r0
 8026946:	fb0c 2c00 	mla	ip, ip, r0, r2
 802694a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802694c:	fb01 c102 	mla	r1, r1, r2, ip
 8026950:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026952:	fb03 1302 	mla	r3, r3, r2, r1
 8026956:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802695a:	b1db      	cbz	r3, 8026994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802695c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802695e:	4353      	muls	r3, r2
 8026960:	1c5a      	adds	r2, r3, #1
 8026962:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026966:	4ac6      	ldr	r2, [pc, #792]	; (8026c80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026968:	121b      	asrs	r3, r3, #8
 802696a:	6812      	ldr	r2, [r2, #0]
 802696c:	2bff      	cmp	r3, #255	; 0xff
 802696e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026972:	f040 8099 	bne.w	8026aa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8026976:	0953      	lsrs	r3, r2, #5
 8026978:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802697c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026980:	f02c 0c07 	bic.w	ip, ip, #7
 8026984:	ea43 0c0c 	orr.w	ip, r3, ip
 8026988:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802698c:	ea4c 0202 	orr.w	r2, ip, r2
 8026990:	f8a8 2000 	strh.w	r2, [r8]
 8026994:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026996:	441c      	add	r4, r3
 8026998:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802699a:	441e      	add	r6, r3
 802699c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802699e:	3b01      	subs	r3, #1
 80269a0:	f108 0802 	add.w	r8, r8, #2
 80269a4:	930e      	str	r3, [sp, #56]	; 0x38
 80269a6:	e763      	b.n	8026870 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80269a8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80269aa:	441c      	add	r4, r3
 80269ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80269ae:	441e      	add	r6, r3
 80269b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269b2:	3b01      	subs	r3, #1
 80269b4:	9309      	str	r3, [sp, #36]	; 0x24
 80269b6:	f109 0902 	add.w	r9, r9, #2
 80269ba:	e737      	b.n	802682c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80269bc:	d024      	beq.n	8026a08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80269be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80269c0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80269c2:	3b01      	subs	r3, #1
 80269c4:	fb00 4003 	mla	r0, r0, r3, r4
 80269c8:	1400      	asrs	r0, r0, #16
 80269ca:	f53f af4c 	bmi.w	8026866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269ce:	3901      	subs	r1, #1
 80269d0:	4288      	cmp	r0, r1
 80269d2:	f6bf af48 	bge.w	8026866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269d6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80269d8:	fb01 6303 	mla	r3, r1, r3, r6
 80269dc:	141b      	asrs	r3, r3, #16
 80269de:	f53f af42 	bmi.w	8026866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269e2:	3a01      	subs	r2, #1
 80269e4:	4293      	cmp	r3, r2
 80269e6:	f6bf af3e 	bge.w	8026866 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80269ea:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80269ee:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80269f2:	930e      	str	r3, [sp, #56]	; 0x38
 80269f4:	46c8      	mov	r8, r9
 80269f6:	f1bb 0f00 	cmp.w	fp, #0
 80269fa:	f300 80b7 	bgt.w	8026b6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80269fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026a00:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026a04:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026a08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026a0a:	2b00      	cmp	r3, #0
 8026a0c:	f340 818d 	ble.w	8026d2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026a10:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026a14:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026a18:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026a1c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026a1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026a22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026a26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026a2a:	eef0 6a62 	vmov.f32	s13, s5
 8026a2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026a32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026a3a:	ee16 4a90 	vmov	r4, s13
 8026a3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026a42:	eef0 6a43 	vmov.f32	s13, s6
 8026a46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026a4a:	ee12 2a90 	vmov	r2, s5
 8026a4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026a52:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a56:	ee13 2a10 	vmov	r2, s6
 8026a5a:	9323      	str	r3, [sp, #140]	; 0x8c
 8026a5c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026a5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026a62:	9324      	str	r3, [sp, #144]	; 0x90
 8026a64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026a66:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026a68:	3b01      	subs	r3, #1
 8026a6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026a6e:	930d      	str	r3, [sp, #52]	; 0x34
 8026a70:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026a72:	bf08      	it	eq
 8026a74:	4613      	moveq	r3, r2
 8026a76:	ee16 6a90 	vmov	r6, s13
 8026a7a:	9309      	str	r3, [sp, #36]	; 0x24
 8026a7c:	eeb0 3a67 	vmov.f32	s6, s15
 8026a80:	eef0 2a47 	vmov.f32	s5, s14
 8026a84:	e6c3      	b.n	802680e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026a86:	2900      	cmp	r1, #0
 8026a88:	f43f af4d 	beq.w	8026926 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026a8c:	eb0a 0003 	add.w	r0, sl, r3
 8026a90:	0843      	lsrs	r3, r0, #1
 8026a92:	07c0      	lsls	r0, r0, #31
 8026a94:	5cfb      	ldrb	r3, [r7, r3]
 8026a96:	bf54      	ite	pl
 8026a98:	f003 030f 	andpl.w	r3, r3, #15
 8026a9c:	111b      	asrmi	r3, r3, #4
 8026a9e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026aa2:	b2db      	uxtb	r3, r3
 8026aa4:	930b      	str	r3, [sp, #44]	; 0x2c
 8026aa6:	e73e      	b.n	8026926 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026aa8:	f8b8 e000 	ldrh.w	lr, [r8]
 8026aac:	fa1f fb83 	uxth.w	fp, r3
 8026ab0:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026ab4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026ab8:	43db      	mvns	r3, r3
 8026aba:	b2db      	uxtb	r3, r3
 8026abc:	fb11 f10b 	smulbb	r1, r1, fp
 8026ac0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026ac4:	fb00 1003 	mla	r0, r0, r3, r1
 8026ac8:	fa5f fc8c 	uxtb.w	ip, ip
 8026acc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026ad0:	b2d2      	uxtb	r2, r2
 8026ad2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026ad6:	b280      	uxth	r0, r0
 8026ad8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026adc:	fb1c fc0b 	smulbb	ip, ip, fp
 8026ae0:	fa5f fe8e 	uxtb.w	lr, lr
 8026ae4:	fb12 fb0b 	smulbb	fp, r2, fp
 8026ae8:	fb01 cc03 	mla	ip, r1, r3, ip
 8026aec:	fb0e bb03 	mla	fp, lr, r3, fp
 8026af0:	1c43      	adds	r3, r0, #1
 8026af2:	fa1f fc8c 	uxth.w	ip, ip
 8026af6:	fa1f fb8b 	uxth.w	fp, fp
 8026afa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026afe:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8026b02:	f10c 0101 	add.w	r1, ip, #1
 8026b06:	f10b 0001 	add.w	r0, fp, #1
 8026b0a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8026b0e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026b12:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026b16:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026b1a:	4318      	orrs	r0, r3
 8026b1c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026b20:	ea40 000c 	orr.w	r0, r0, ip
 8026b24:	f8a8 0000 	strh.w	r0, [r8]
 8026b28:	e734      	b.n	8026994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b2a:	f113 0b01 	adds.w	fp, r3, #1
 8026b2e:	f53f af31 	bmi.w	8026994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b32:	45dc      	cmp	ip, fp
 8026b34:	f6ff af2e 	blt.w	8026994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b38:	f110 0b01 	adds.w	fp, r0, #1
 8026b3c:	f53f af2a 	bmi.w	8026994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b40:	45de      	cmp	lr, fp
 8026b42:	f6ff af27 	blt.w	8026994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b46:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026b48:	9302      	str	r3, [sp, #8]
 8026b4a:	fa0f f38e 	sxth.w	r3, lr
 8026b4e:	9301      	str	r3, [sp, #4]
 8026b50:	fa0f f38c 	sxth.w	r3, ip
 8026b54:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026b58:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8026b5c:	9300      	str	r3, [sp, #0]
 8026b5e:	463a      	mov	r2, r7
 8026b60:	4653      	mov	r3, sl
 8026b62:	4641      	mov	r1, r8
 8026b64:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026b66:	f7ff fd4d 	bl	8026604 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8026b6a:	e713      	b.n	8026994 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026b6c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8026b6e:	1422      	asrs	r2, r4, #16
 8026b70:	1433      	asrs	r3, r6, #16
 8026b72:	fb05 2303 	mla	r3, r5, r3, r2
 8026b76:	085a      	lsrs	r2, r3, #1
 8026b78:	07dd      	lsls	r5, r3, #31
 8026b7a:	5cba      	ldrb	r2, [r7, r2]
 8026b7c:	bf54      	ite	pl
 8026b7e:	f002 020f 	andpl.w	r2, r2, #15
 8026b82:	1112      	asrmi	r2, r2, #4
 8026b84:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026b88:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8026b8c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8026b90:	b2d2      	uxtb	r2, r2
 8026b92:	2900      	cmp	r1, #0
 8026b94:	d076      	beq.n	8026c84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8026b96:	f103 0e01 	add.w	lr, r3, #1
 8026b9a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8026b9e:	f01e 0f01 	tst.w	lr, #1
 8026ba2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026ba6:	bf0c      	ite	eq
 8026ba8:	f00c 0c0f 	andeq.w	ip, ip, #15
 8026bac:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8026bb0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026bb4:	fa5f f58c 	uxtb.w	r5, ip
 8026bb8:	9512      	str	r5, [sp, #72]	; 0x48
 8026bba:	b300      	cbz	r0, 8026bfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026bbc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026bbe:	442b      	add	r3, r5
 8026bc0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026bc4:	07dd      	lsls	r5, r3, #31
 8026bc6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026bca:	bf54      	ite	pl
 8026bcc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026bd0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026bd4:	3301      	adds	r3, #1
 8026bd6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026bda:	fa5f f58c 	uxtb.w	r5, ip
 8026bde:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026be2:	950c      	str	r5, [sp, #48]	; 0x30
 8026be4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026be8:	07dd      	lsls	r5, r3, #31
 8026bea:	bf54      	ite	pl
 8026bec:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026bf0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026bf4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026bf8:	fa5f f38c 	uxtb.w	r3, ip
 8026bfc:	9313      	str	r3, [sp, #76]	; 0x4c
 8026bfe:	b289      	uxth	r1, r1
 8026c00:	b280      	uxth	r0, r0
 8026c02:	fb01 f300 	mul.w	r3, r1, r0
 8026c06:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8026c0a:	0109      	lsls	r1, r1, #4
 8026c0c:	b280      	uxth	r0, r0
 8026c0e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8026c12:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026c14:	1ac9      	subs	r1, r1, r3
 8026c16:	ebac 0c00 	sub.w	ip, ip, r0
 8026c1a:	b289      	uxth	r1, r1
 8026c1c:	4369      	muls	r1, r5
 8026c1e:	fa1f fc8c 	uxth.w	ip, ip
 8026c22:	fb02 120c 	mla	r2, r2, ip, r1
 8026c26:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026c28:	fb00 2001 	mla	r0, r0, r1, r2
 8026c2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8026c2e:	fb03 0302 	mla	r3, r3, r2, r0
 8026c32:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026c36:	b1d3      	cbz	r3, 8026c6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026c38:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8026c3a:	4353      	muls	r3, r2
 8026c3c:	1c5a      	adds	r2, r3, #1
 8026c3e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026c42:	4a0f      	ldr	r2, [pc, #60]	; (8026c80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026c44:	121b      	asrs	r3, r3, #8
 8026c46:	6812      	ldr	r2, [r2, #0]
 8026c48:	2bff      	cmp	r3, #255	; 0xff
 8026c4a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026c4e:	d12d      	bne.n	8026cac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026c50:	0953      	lsrs	r3, r2, #5
 8026c52:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026c56:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026c5a:	f02c 0c07 	bic.w	ip, ip, #7
 8026c5e:	ea43 0c0c 	orr.w	ip, r3, ip
 8026c62:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026c66:	ea4c 0202 	orr.w	r2, ip, r2
 8026c6a:	f8a8 2000 	strh.w	r2, [r8]
 8026c6e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026c70:	441c      	add	r4, r3
 8026c72:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026c74:	f108 0802 	add.w	r8, r8, #2
 8026c78:	441e      	add	r6, r3
 8026c7a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026c7e:	e6ba      	b.n	80269f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026c80:	20013844 	.word	0x20013844
 8026c84:	2800      	cmp	r0, #0
 8026c86:	d0ba      	beq.n	8026bfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026c88:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026c8a:	442b      	add	r3, r5
 8026c8c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8026c90:	07db      	lsls	r3, r3, #31
 8026c92:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026c96:	bf54      	ite	pl
 8026c98:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026c9c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026ca0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026ca4:	fa5f f38c 	uxtb.w	r3, ip
 8026ca8:	930c      	str	r3, [sp, #48]	; 0x30
 8026caa:	e7a8      	b.n	8026bfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026cac:	f8b8 e000 	ldrh.w	lr, [r8]
 8026cb0:	fa1f fa83 	uxth.w	sl, r3
 8026cb4:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026cb8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026cbc:	43db      	mvns	r3, r3
 8026cbe:	b2db      	uxtb	r3, r3
 8026cc0:	fb11 f10a 	smulbb	r1, r1, sl
 8026cc4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026cc8:	fb00 1003 	mla	r0, r0, r3, r1
 8026ccc:	b2d2      	uxtb	r2, r2
 8026cce:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026cd2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026cd6:	fa5f fe8e 	uxtb.w	lr, lr
 8026cda:	fb12 f20a 	smulbb	r2, r2, sl
 8026cde:	fb0e 2203 	mla	r2, lr, r3, r2
 8026ce2:	fa5f fc8c 	uxtb.w	ip, ip
 8026ce6:	b280      	uxth	r0, r0
 8026ce8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026cec:	b292      	uxth	r2, r2
 8026cee:	fb1c fc0a 	smulbb	ip, ip, sl
 8026cf2:	fb01 cc03 	mla	ip, r1, r3, ip
 8026cf6:	1c43      	adds	r3, r0, #1
 8026cf8:	1c51      	adds	r1, r2, #1
 8026cfa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026cfe:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8026d02:	fa1f fc8c 	uxth.w	ip, ip
 8026d06:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026d0a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026d0e:	4308      	orrs	r0, r1
 8026d10:	f10c 0101 	add.w	r1, ip, #1
 8026d14:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026d18:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026d1c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026d20:	ea40 000c 	orr.w	r0, r0, ip
 8026d24:	f8a8 0000 	strh.w	r0, [r8]
 8026d28:	e7a1      	b.n	8026c6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026d2a:	b017      	add	sp, #92	; 0x5c
 8026d2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026d30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8026d30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026d34:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8026d38:	2d00      	cmp	r5, #0
 8026d3a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026d3e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026d42:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026d46:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8026d4a:	fb05 0e03 	mla	lr, r5, r3, r0
 8026d4e:	f2c0 80b0 	blt.w	8026eb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026d52:	45a9      	cmp	r9, r5
 8026d54:	f340 80ad 	ble.w	8026eb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026d58:	2800      	cmp	r0, #0
 8026d5a:	f2c0 80a8 	blt.w	8026eae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026d5e:	4580      	cmp	r8, r0
 8026d60:	f340 80a5 	ble.w	8026eae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026d64:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8026d68:	f01e 0f01 	tst.w	lr, #1
 8026d6c:	5d16      	ldrb	r6, [r2, r4]
 8026d6e:	bf0c      	ite	eq
 8026d70:	f006 060f 	andeq.w	r6, r6, #15
 8026d74:	1136      	asrne	r6, r6, #4
 8026d76:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8026d7a:	b2f6      	uxtb	r6, r6
 8026d7c:	1c44      	adds	r4, r0, #1
 8026d7e:	f100 809b 	bmi.w	8026eb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026d82:	45a0      	cmp	r8, r4
 8026d84:	f340 8098 	ble.w	8026eb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026d88:	2f00      	cmp	r7, #0
 8026d8a:	f000 8097 	beq.w	8026ebc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8026d8e:	f10e 0a01 	add.w	sl, lr, #1
 8026d92:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026d96:	f01a 0f01 	tst.w	sl, #1
 8026d9a:	5d14      	ldrb	r4, [r2, r4]
 8026d9c:	bf0c      	ite	eq
 8026d9e:	f004 040f 	andeq.w	r4, r4, #15
 8026da2:	1124      	asrne	r4, r4, #4
 8026da4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026da8:	b2e4      	uxtb	r4, r4
 8026daa:	3501      	adds	r5, #1
 8026dac:	f100 808a 	bmi.w	8026ec4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026db0:	45a9      	cmp	r9, r5
 8026db2:	f340 8087 	ble.w	8026ec4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026db6:	f1bc 0f00 	cmp.w	ip, #0
 8026dba:	f000 8086 	beq.w	8026eca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8026dbe:	2800      	cmp	r0, #0
 8026dc0:	db7e      	blt.n	8026ec0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026dc2:	4580      	cmp	r8, r0
 8026dc4:	dd7c      	ble.n	8026ec0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026dc6:	eb03 090e 	add.w	r9, r3, lr
 8026dca:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8026dce:	f019 0f01 	tst.w	r9, #1
 8026dd2:	5d55      	ldrb	r5, [r2, r5]
 8026dd4:	bf0c      	ite	eq
 8026dd6:	f005 050f 	andeq.w	r5, r5, #15
 8026dda:	112d      	asrne	r5, r5, #4
 8026ddc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8026de0:	b2ed      	uxtb	r5, r5
 8026de2:	3001      	adds	r0, #1
 8026de4:	d474      	bmi.n	8026ed0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026de6:	4580      	cmp	r8, r0
 8026de8:	dd72      	ble.n	8026ed0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026dea:	2f00      	cmp	r7, #0
 8026dec:	d072      	beq.n	8026ed4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8026dee:	3301      	adds	r3, #1
 8026df0:	449e      	add	lr, r3
 8026df2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026df6:	f01e 0f01 	tst.w	lr, #1
 8026dfa:	5cd0      	ldrb	r0, [r2, r3]
 8026dfc:	bf0c      	ite	eq
 8026dfe:	f000 000f 	andeq.w	r0, r0, #15
 8026e02:	1100      	asrne	r0, r0, #4
 8026e04:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026e08:	b2c3      	uxtb	r3, r0
 8026e0a:	b2ba      	uxth	r2, r7
 8026e0c:	fa1f fc8c 	uxth.w	ip, ip
 8026e10:	fb02 f00c 	mul.w	r0, r2, ip
 8026e14:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026e18:	0112      	lsls	r2, r2, #4
 8026e1a:	fa1f fc8c 	uxth.w	ip, ip
 8026e1e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8026e22:	1a12      	subs	r2, r2, r0
 8026e24:	eba7 070c 	sub.w	r7, r7, ip
 8026e28:	b292      	uxth	r2, r2
 8026e2a:	b2bf      	uxth	r7, r7
 8026e2c:	4362      	muls	r2, r4
 8026e2e:	fb06 2207 	mla	r2, r6, r7, r2
 8026e32:	fb0c 2505 	mla	r5, ip, r5, r2
 8026e36:	fb00 5303 	mla	r3, r0, r3, r5
 8026e3a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026e3e:	b3a3      	cbz	r3, 8026eaa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8026e40:	4a25      	ldr	r2, [pc, #148]	; (8026ed8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8026e42:	880e      	ldrh	r6, [r1, #0]
 8026e44:	6815      	ldr	r5, [r2, #0]
 8026e46:	1234      	asrs	r4, r6, #8
 8026e48:	b29a      	uxth	r2, r3
 8026e4a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8026e4e:	43db      	mvns	r3, r3
 8026e50:	b2db      	uxtb	r3, r3
 8026e52:	fb10 f002 	smulbb	r0, r0, r2
 8026e56:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8026e5a:	fb04 0403 	mla	r4, r4, r3, r0
 8026e5e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8026e62:	10f0      	asrs	r0, r6, #3
 8026e64:	b2ed      	uxtb	r5, r5
 8026e66:	00f6      	lsls	r6, r6, #3
 8026e68:	fb17 f702 	smulbb	r7, r7, r2
 8026e6c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026e70:	fb15 f202 	smulbb	r2, r5, r2
 8026e74:	b2f6      	uxtb	r6, r6
 8026e76:	b2a4      	uxth	r4, r4
 8026e78:	fb00 7003 	mla	r0, r0, r3, r7
 8026e7c:	fb06 2303 	mla	r3, r6, r3, r2
 8026e80:	b29a      	uxth	r2, r3
 8026e82:	1c63      	adds	r3, r4, #1
 8026e84:	b280      	uxth	r0, r0
 8026e86:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026e8a:	1c53      	adds	r3, r2, #1
 8026e8c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026e90:	1c42      	adds	r2, r0, #1
 8026e92:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026e96:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8026e9a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026e9e:	0940      	lsrs	r0, r0, #5
 8026ea0:	4323      	orrs	r3, r4
 8026ea2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026ea6:	4303      	orrs	r3, r0
 8026ea8:	800b      	strh	r3, [r1, #0]
 8026eaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026eae:	2600      	movs	r6, #0
 8026eb0:	e764      	b.n	8026d7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8026eb2:	2400      	movs	r4, #0
 8026eb4:	4626      	mov	r6, r4
 8026eb6:	e778      	b.n	8026daa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026eb8:	2400      	movs	r4, #0
 8026eba:	e776      	b.n	8026daa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026ebc:	463c      	mov	r4, r7
 8026ebe:	e774      	b.n	8026daa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026ec0:	2500      	movs	r5, #0
 8026ec2:	e78e      	b.n	8026de2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8026ec4:	2300      	movs	r3, #0
 8026ec6:	461d      	mov	r5, r3
 8026ec8:	e79f      	b.n	8026e0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026eca:	4663      	mov	r3, ip
 8026ecc:	4665      	mov	r5, ip
 8026ece:	e79c      	b.n	8026e0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026ed0:	2300      	movs	r3, #0
 8026ed2:	e79a      	b.n	8026e0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026ed4:	463b      	mov	r3, r7
 8026ed6:	e798      	b.n	8026e0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026ed8:	20013844 	.word	0x20013844

08026edc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ee0:	b093      	sub	sp, #76	; 0x4c
 8026ee2:	461d      	mov	r5, r3
 8026ee4:	920c      	str	r2, [sp, #48]	; 0x30
 8026ee6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8026ee8:	9107      	str	r1, [sp, #28]
 8026eea:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8026eee:	9011      	str	r0, [sp, #68]	; 0x44
 8026ef0:	6850      	ldr	r0, [r2, #4]
 8026ef2:	6812      	ldr	r2, [r2, #0]
 8026ef4:	fb00 1303 	mla	r3, r0, r3, r1
 8026ef8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026efc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026efe:	689b      	ldr	r3, [r3, #8]
 8026f00:	3301      	adds	r3, #1
 8026f02:	f023 0301 	bic.w	r3, r3, #1
 8026f06:	9306      	str	r3, [sp, #24]
 8026f08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f0a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8026f0e:	681f      	ldr	r7, [r3, #0]
 8026f10:	9b07      	ldr	r3, [sp, #28]
 8026f12:	2b00      	cmp	r3, #0
 8026f14:	dc03      	bgt.n	8026f1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8026f16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026f18:	2b00      	cmp	r3, #0
 8026f1a:	f340 8267 	ble.w	80273ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026f1e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026f24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026f28:	1e48      	subs	r0, r1, #1
 8026f2a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026f2e:	2d00      	cmp	r5, #0
 8026f30:	f340 80b8 	ble.w	80270a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8026f34:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026f38:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026f3c:	d406      	bmi.n	8026f4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026f3e:	4586      	cmp	lr, r0
 8026f40:	da04      	bge.n	8026f4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026f42:	2b00      	cmp	r3, #0
 8026f44:	db02      	blt.n	8026f4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026f46:	4563      	cmp	r3, ip
 8026f48:	f2c0 80ad 	blt.w	80270a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8026f4c:	f11e 0e01 	adds.w	lr, lr, #1
 8026f50:	f100 80a0 	bmi.w	8027094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f54:	4571      	cmp	r1, lr
 8026f56:	f2c0 809d 	blt.w	8027094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f5a:	3301      	adds	r3, #1
 8026f5c:	f100 809a 	bmi.w	8027094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f60:	429a      	cmp	r2, r3
 8026f62:	f2c0 8097 	blt.w	8027094 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026f66:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8026f6a:	9509      	str	r5, [sp, #36]	; 0x24
 8026f6c:	46c8      	mov	r8, r9
 8026f6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026f70:	2b00      	cmp	r3, #0
 8026f72:	f340 80b6 	ble.w	80270e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8026f76:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8026f7a:	9308      	str	r3, [sp, #32]
 8026f7c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f7e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026f82:	1423      	asrs	r3, r4, #16
 8026f84:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026f88:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8026f8c:	f100 813e 	bmi.w	802720c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026f90:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026f94:	455b      	cmp	r3, fp
 8026f96:	f280 8139 	bge.w	802720c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026f9a:	2800      	cmp	r0, #0
 8026f9c:	f2c0 8136 	blt.w	802720c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026fa0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026fa4:	4558      	cmp	r0, fp
 8026fa6:	f280 8131 	bge.w	802720c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026faa:	9a06      	ldr	r2, [sp, #24]
 8026fac:	fb00 3302 	mla	r3, r0, r2, r3
 8026fb0:	0858      	lsrs	r0, r3, #1
 8026fb2:	07da      	lsls	r2, r3, #31
 8026fb4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026fb8:	9a08      	ldr	r2, [sp, #32]
 8026fba:	bf54      	ite	pl
 8026fbc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026fc0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026fc4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026fc8:	fa5f fc8c 	uxtb.w	ip, ip
 8026fcc:	2a00      	cmp	r2, #0
 8026fce:	f000 80cb 	beq.w	8027168 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026fd2:	1c58      	adds	r0, r3, #1
 8026fd4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026fd8:	07c0      	lsls	r0, r0, #31
 8026fda:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026fde:	bf54      	ite	pl
 8026fe0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026fe4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026fe8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026fec:	fa5f fe8e 	uxtb.w	lr, lr
 8026ff0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8026ff4:	b1b9      	cbz	r1, 8027026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026ff6:	4453      	add	r3, sl
 8026ff8:	0858      	lsrs	r0, r3, #1
 8026ffa:	07da      	lsls	r2, r3, #31
 8026ffc:	5c38      	ldrb	r0, [r7, r0]
 8026ffe:	bf54      	ite	pl
 8027000:	f000 000f 	andpl.w	r0, r0, #15
 8027004:	1100      	asrmi	r0, r0, #4
 8027006:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802700a:	b2c0      	uxtb	r0, r0
 802700c:	900a      	str	r0, [sp, #40]	; 0x28
 802700e:	1c58      	adds	r0, r3, #1
 8027010:	0843      	lsrs	r3, r0, #1
 8027012:	07c2      	lsls	r2, r0, #31
 8027014:	5cfb      	ldrb	r3, [r7, r3]
 8027016:	bf54      	ite	pl
 8027018:	f003 030f 	andpl.w	r3, r3, #15
 802701c:	111b      	asrmi	r3, r3, #4
 802701e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027022:	b2db      	uxtb	r3, r3
 8027024:	930e      	str	r3, [sp, #56]	; 0x38
 8027026:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802702a:	b289      	uxth	r1, r1
 802702c:	fb02 f301 	mul.w	r3, r2, r1
 8027030:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8027034:	0112      	lsls	r2, r2, #4
 8027036:	b289      	uxth	r1, r1
 8027038:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802703c:	1a40      	subs	r0, r0, r1
 802703e:	fa1f fe80 	uxth.w	lr, r0
 8027042:	1ad2      	subs	r2, r2, r3
 8027044:	980d      	ldr	r0, [sp, #52]	; 0x34
 8027046:	b292      	uxth	r2, r2
 8027048:	4342      	muls	r2, r0
 802704a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802704e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027050:	fb01 c102 	mla	r1, r1, r2, ip
 8027054:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8027056:	fb03 1302 	mla	r3, r3, r2, r1
 802705a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802705e:	2bff      	cmp	r3, #255	; 0xff
 8027060:	f040 8093 	bne.w	802718a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8027064:	4bbe      	ldr	r3, [pc, #760]	; (8027360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027066:	681a      	ldr	r2, [r3, #0]
 8027068:	4bbe      	ldr	r3, [pc, #760]	; (8027364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802706a:	0951      	lsrs	r1, r2, #5
 802706c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8027070:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8027074:	430b      	orrs	r3, r1
 8027076:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802707a:	4313      	orrs	r3, r2
 802707c:	f8a8 3000 	strh.w	r3, [r8]
 8027080:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027082:	441c      	add	r4, r3
 8027084:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027086:	441e      	add	r6, r3
 8027088:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802708a:	3b01      	subs	r3, #1
 802708c:	f108 0802 	add.w	r8, r8, #2
 8027090:	9309      	str	r3, [sp, #36]	; 0x24
 8027092:	e76c      	b.n	8026f6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027094:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027096:	441c      	add	r4, r3
 8027098:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802709a:	3d01      	subs	r5, #1
 802709c:	441e      	add	r6, r3
 802709e:	f109 0902 	add.w	r9, r9, #2
 80270a2:	e744      	b.n	8026f2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80270a4:	d021      	beq.n	80270ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 80270a6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80270a8:	1e6b      	subs	r3, r5, #1
 80270aa:	fb00 4003 	mla	r0, r0, r3, r4
 80270ae:	1400      	asrs	r0, r0, #16
 80270b0:	f53f af59 	bmi.w	8026f66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80270b4:	3901      	subs	r1, #1
 80270b6:	4288      	cmp	r0, r1
 80270b8:	f6bf af55 	bge.w	8026f66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80270bc:	9920      	ldr	r1, [sp, #128]	; 0x80
 80270be:	fb01 6303 	mla	r3, r1, r3, r6
 80270c2:	141b      	asrs	r3, r3, #16
 80270c4:	f53f af4f 	bmi.w	8026f66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80270c8:	3a01      	subs	r2, #1
 80270ca:	4293      	cmp	r3, r2
 80270cc:	f6bf af4b 	bge.w	8026f66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80270d0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80270d4:	9308      	str	r3, [sp, #32]
 80270d6:	46a8      	mov	r8, r5
 80270d8:	46ce      	mov	lr, r9
 80270da:	f1b8 0f00 	cmp.w	r8, #0
 80270de:	f300 80b5 	bgt.w	802724c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80270e2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80270e6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80270ea:	9b07      	ldr	r3, [sp, #28]
 80270ec:	2b00      	cmp	r3, #0
 80270ee:	f340 817d 	ble.w	80273ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80270f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80270f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80270fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80270fe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027100:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027104:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027108:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802710c:	eef0 6a62 	vmov.f32	s13, s5
 8027110:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027114:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027118:	ee77 2a62 	vsub.f32	s5, s14, s5
 802711c:	ee16 4a90 	vmov	r4, s13
 8027120:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027124:	eef0 6a43 	vmov.f32	s13, s6
 8027128:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802712c:	ee12 2a90 	vmov	r2, s5
 8027130:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027134:	fb92 f3f3 	sdiv	r3, r2, r3
 8027138:	ee13 2a10 	vmov	r2, s6
 802713c:	931f      	str	r3, [sp, #124]	; 0x7c
 802713e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027140:	fb92 f3f3 	sdiv	r3, r2, r3
 8027144:	9320      	str	r3, [sp, #128]	; 0x80
 8027146:	9b07      	ldr	r3, [sp, #28]
 8027148:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802714a:	3b01      	subs	r3, #1
 802714c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027150:	9307      	str	r3, [sp, #28]
 8027152:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027154:	ee16 6a90 	vmov	r6, s13
 8027158:	bf14      	ite	ne
 802715a:	461d      	movne	r5, r3
 802715c:	4615      	moveq	r5, r2
 802715e:	eeb0 3a67 	vmov.f32	s6, s15
 8027162:	eef0 2a47 	vmov.f32	s5, s14
 8027166:	e6d3      	b.n	8026f10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8027168:	2900      	cmp	r1, #0
 802716a:	f43f af5c 	beq.w	8027026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802716e:	eb0a 0003 	add.w	r0, sl, r3
 8027172:	0843      	lsrs	r3, r0, #1
 8027174:	07c0      	lsls	r0, r0, #31
 8027176:	5cfb      	ldrb	r3, [r7, r3]
 8027178:	bf54      	ite	pl
 802717a:	f003 030f 	andpl.w	r3, r3, #15
 802717e:	111b      	asrmi	r3, r3, #4
 8027180:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8027184:	b2db      	uxtb	r3, r3
 8027186:	930a      	str	r3, [sp, #40]	; 0x28
 8027188:	e74d      	b.n	8027026 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802718a:	2b00      	cmp	r3, #0
 802718c:	f43f af78 	beq.w	8027080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027190:	4a73      	ldr	r2, [pc, #460]	; (8027360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027192:	f8b8 c000 	ldrh.w	ip, [r8]
 8027196:	6810      	ldr	r0, [r2, #0]
 8027198:	fa1f fe83 	uxth.w	lr, r3
 802719c:	ea4f 212c 	mov.w	r1, ip, asr #8
 80271a0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80271a4:	43db      	mvns	r3, r3
 80271a6:	b2db      	uxtb	r3, r3
 80271a8:	fb12 f20e 	smulbb	r2, r2, lr
 80271ac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80271b0:	fb01 2103 	mla	r1, r1, r3, r2
 80271b4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80271b8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80271bc:	b2c0      	uxtb	r0, r0
 80271be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80271c2:	fb1b fb0e 	smulbb	fp, fp, lr
 80271c6:	b289      	uxth	r1, r1
 80271c8:	fb10 fe0e 	smulbb	lr, r0, lr
 80271cc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80271d0:	fa5f fc8c 	uxtb.w	ip, ip
 80271d4:	fb02 b203 	mla	r2, r2, r3, fp
 80271d8:	1c48      	adds	r0, r1, #1
 80271da:	fb0c e303 	mla	r3, ip, r3, lr
 80271de:	b292      	uxth	r2, r2
 80271e0:	b29b      	uxth	r3, r3
 80271e2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80271e6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80271ea:	f102 0b01 	add.w	fp, r2, #1
 80271ee:	1c59      	adds	r1, r3, #1
 80271f0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80271f4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80271f8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80271fc:	0952      	lsrs	r2, r2, #5
 80271fe:	4301      	orrs	r1, r0
 8027200:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027204:	4311      	orrs	r1, r2
 8027206:	f8a8 1000 	strh.w	r1, [r8]
 802720a:	e739      	b.n	8027080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802720c:	f113 0b01 	adds.w	fp, r3, #1
 8027210:	f53f af36 	bmi.w	8027080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027214:	45dc      	cmp	ip, fp
 8027216:	f6ff af33 	blt.w	8027080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802721a:	f110 0b01 	adds.w	fp, r0, #1
 802721e:	f53f af2f 	bmi.w	8027080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027222:	45de      	cmp	lr, fp
 8027224:	f6ff af2c 	blt.w	8027080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8027228:	9a08      	ldr	r2, [sp, #32]
 802722a:	9302      	str	r3, [sp, #8]
 802722c:	fa0f f38e 	sxth.w	r3, lr
 8027230:	9301      	str	r3, [sp, #4]
 8027232:	fa0f f38c 	sxth.w	r3, ip
 8027236:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802723a:	9105      	str	r1, [sp, #20]
 802723c:	9300      	str	r3, [sp, #0]
 802723e:	463a      	mov	r2, r7
 8027240:	4653      	mov	r3, sl
 8027242:	4641      	mov	r1, r8
 8027244:	9811      	ldr	r0, [sp, #68]	; 0x44
 8027246:	f7ff fd73 	bl	8026d30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802724a:	e719      	b.n	8027080 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802724c:	9906      	ldr	r1, [sp, #24]
 802724e:	1422      	asrs	r2, r4, #16
 8027250:	1433      	asrs	r3, r6, #16
 8027252:	fb01 2303 	mla	r3, r1, r3, r2
 8027256:	085a      	lsrs	r2, r3, #1
 8027258:	07d9      	lsls	r1, r3, #31
 802725a:	5cba      	ldrb	r2, [r7, r2]
 802725c:	bf54      	ite	pl
 802725e:	f002 020f 	andpl.w	r2, r2, #15
 8027262:	1112      	asrmi	r2, r2, #4
 8027264:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8027268:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802726c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8027270:	b2d2      	uxtb	r2, r2
 8027272:	2800      	cmp	r0, #0
 8027274:	d062      	beq.n	802733c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8027276:	f103 0a01 	add.w	sl, r3, #1
 802727a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802727e:	f01a 0f01 	tst.w	sl, #1
 8027282:	5c79      	ldrb	r1, [r7, r1]
 8027284:	bf0c      	ite	eq
 8027286:	f001 010f 	andeq.w	r1, r1, #15
 802728a:	1109      	asrne	r1, r1, #4
 802728c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027290:	b2c9      	uxtb	r1, r1
 8027292:	910f      	str	r1, [sp, #60]	; 0x3c
 8027294:	f1bc 0f00 	cmp.w	ip, #0
 8027298:	d019      	beq.n	80272ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802729a:	9908      	ldr	r1, [sp, #32]
 802729c:	440b      	add	r3, r1
 802729e:	0859      	lsrs	r1, r3, #1
 80272a0:	f013 0f01 	tst.w	r3, #1
 80272a4:	5c79      	ldrb	r1, [r7, r1]
 80272a6:	bf0c      	ite	eq
 80272a8:	f001 010f 	andeq.w	r1, r1, #15
 80272ac:	1109      	asrne	r1, r1, #4
 80272ae:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80272b2:	b2c9      	uxtb	r1, r1
 80272b4:	3301      	adds	r3, #1
 80272b6:	910b      	str	r1, [sp, #44]	; 0x2c
 80272b8:	0859      	lsrs	r1, r3, #1
 80272ba:	07db      	lsls	r3, r3, #31
 80272bc:	5c79      	ldrb	r1, [r7, r1]
 80272be:	bf54      	ite	pl
 80272c0:	f001 010f 	andpl.w	r1, r1, #15
 80272c4:	1109      	asrmi	r1, r1, #4
 80272c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80272ca:	b2c9      	uxtb	r1, r1
 80272cc:	9110      	str	r1, [sp, #64]	; 0x40
 80272ce:	b280      	uxth	r0, r0
 80272d0:	fa1f fc8c 	uxth.w	ip, ip
 80272d4:	fb00 f30c 	mul.w	r3, r0, ip
 80272d8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80272dc:	0100      	lsls	r0, r0, #4
 80272de:	fa1f fc8c 	uxth.w	ip, ip
 80272e2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80272e6:	eba1 010c 	sub.w	r1, r1, ip
 80272ea:	fa1f fa81 	uxth.w	sl, r1
 80272ee:	1ac0      	subs	r0, r0, r3
 80272f0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80272f2:	b280      	uxth	r0, r0
 80272f4:	4348      	muls	r0, r1
 80272f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80272f8:	fb02 020a 	mla	r2, r2, sl, r0
 80272fc:	fb0c 2c01 	mla	ip, ip, r1, r2
 8027300:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8027302:	fb03 c302 	mla	r3, r3, r2, ip
 8027306:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802730a:	2bff      	cmp	r3, #255	; 0xff
 802730c:	d12c      	bne.n	8027368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802730e:	4b14      	ldr	r3, [pc, #80]	; (8027360 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8027310:	681a      	ldr	r2, [r3, #0]
 8027312:	4b14      	ldr	r3, [pc, #80]	; (8027364 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8027314:	0951      	lsrs	r1, r2, #5
 8027316:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802731a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802731e:	430b      	orrs	r3, r1
 8027320:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8027324:	4313      	orrs	r3, r2
 8027326:	f8ae 3000 	strh.w	r3, [lr]
 802732a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802732c:	441c      	add	r4, r3
 802732e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027330:	f10e 0e02 	add.w	lr, lr, #2
 8027334:	441e      	add	r6, r3
 8027336:	f108 38ff 	add.w	r8, r8, #4294967295
 802733a:	e6ce      	b.n	80270da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802733c:	f1bc 0f00 	cmp.w	ip, #0
 8027340:	d0c5      	beq.n	80272ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8027342:	9908      	ldr	r1, [sp, #32]
 8027344:	440b      	add	r3, r1
 8027346:	0859      	lsrs	r1, r3, #1
 8027348:	07db      	lsls	r3, r3, #31
 802734a:	5c79      	ldrb	r1, [r7, r1]
 802734c:	bf54      	ite	pl
 802734e:	f001 010f 	andpl.w	r1, r1, #15
 8027352:	1109      	asrmi	r1, r1, #4
 8027354:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8027358:	b2c9      	uxtb	r1, r1
 802735a:	910b      	str	r1, [sp, #44]	; 0x2c
 802735c:	e7b7      	b.n	80272ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802735e:	bf00      	nop
 8027360:	20013844 	.word	0x20013844
 8027364:	fffff800 	.word	0xfffff800
 8027368:	2b00      	cmp	r3, #0
 802736a:	d0de      	beq.n	802732a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802736c:	4a21      	ldr	r2, [pc, #132]	; (80273f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802736e:	f8be c000 	ldrh.w	ip, [lr]
 8027372:	6810      	ldr	r0, [r2, #0]
 8027374:	fa1f fa83 	uxth.w	sl, r3
 8027378:	ea4f 212c 	mov.w	r1, ip, asr #8
 802737c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8027380:	43db      	mvns	r3, r3
 8027382:	b2db      	uxtb	r3, r3
 8027384:	fb12 f20a 	smulbb	r2, r2, sl
 8027388:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802738c:	fb01 2103 	mla	r1, r1, r3, r2
 8027390:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8027394:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8027398:	b2c0      	uxtb	r0, r0
 802739a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802739e:	fa5f fc8c 	uxtb.w	ip, ip
 80273a2:	fb10 f00a 	smulbb	r0, r0, sl
 80273a6:	fb0c 0003 	mla	r0, ip, r3, r0
 80273aa:	b289      	uxth	r1, r1
 80273ac:	fb1b fb0a 	smulbb	fp, fp, sl
 80273b0:	b280      	uxth	r0, r0
 80273b2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80273b6:	fb02 b203 	mla	r2, r2, r3, fp
 80273ba:	1c4b      	adds	r3, r1, #1
 80273bc:	f100 0b01 	add.w	fp, r0, #1
 80273c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80273c4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80273c8:	b292      	uxth	r2, r2
 80273ca:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80273ce:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80273d2:	ea4b 0101 	orr.w	r1, fp, r1
 80273d6:	f102 0b01 	add.w	fp, r2, #1
 80273da:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80273de:	0952      	lsrs	r2, r2, #5
 80273e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80273e4:	4311      	orrs	r1, r2
 80273e6:	f8ae 1000 	strh.w	r1, [lr]
 80273ea:	e79e      	b.n	802732a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80273ec:	b013      	add	sp, #76	; 0x4c
 80273ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80273f2:	bf00      	nop
 80273f4:	20013844 	.word	0x20013844

080273f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80273f8:	b570      	push	{r4, r5, r6, lr}
 80273fa:	1208      	asrs	r0, r1, #8
 80273fc:	b29e      	uxth	r6, r3
 80273fe:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8027402:	1213      	asrs	r3, r2, #8
 8027404:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8027408:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802740c:	fb13 f305 	smulbb	r3, r3, r5
 8027410:	fb10 f006 	smulbb	r0, r0, r6
 8027414:	4418      	add	r0, r3
 8027416:	10cc      	asrs	r4, r1, #3
 8027418:	10d3      	asrs	r3, r2, #3
 802741a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802741e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8027422:	fb13 f305 	smulbb	r3, r3, r5
 8027426:	fb14 f406 	smulbb	r4, r4, r6
 802742a:	00c9      	lsls	r1, r1, #3
 802742c:	00d2      	lsls	r2, r2, #3
 802742e:	441c      	add	r4, r3
 8027430:	b2d2      	uxtb	r2, r2
 8027432:	b2cb      	uxtb	r3, r1
 8027434:	fb12 f205 	smulbb	r2, r2, r5
 8027438:	b280      	uxth	r0, r0
 802743a:	fb13 f306 	smulbb	r3, r3, r6
 802743e:	4413      	add	r3, r2
 8027440:	1c42      	adds	r2, r0, #1
 8027442:	b29b      	uxth	r3, r3
 8027444:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027448:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 802744c:	1c58      	adds	r0, r3, #1
 802744e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027452:	b2a4      	uxth	r4, r4
 8027454:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027458:	4310      	orrs	r0, r2
 802745a:	1c62      	adds	r2, r4, #1
 802745c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8027460:	0964      	lsrs	r4, r4, #5
 8027462:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027466:	4320      	orrs	r0, r4
 8027468:	bd70      	pop	{r4, r5, r6, pc}
	...

0802746c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802746c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027470:	b08f      	sub	sp, #60	; 0x3c
 8027472:	461c      	mov	r4, r3
 8027474:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8027478:	9004      	str	r0, [sp, #16]
 802747a:	460d      	mov	r5, r1
 802747c:	4616      	mov	r6, r2
 802747e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027480:	2f00      	cmp	r7, #0
 8027482:	f000 80f6 	beq.w	8027672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8027486:	6820      	ldr	r0, [r4, #0]
 8027488:	6861      	ldr	r1, [r4, #4]
 802748a:	aa0a      	add	r2, sp, #40	; 0x28
 802748c:	c203      	stmia	r2!, {r0, r1}
 802748e:	6818      	ldr	r0, [r3, #0]
 8027490:	6859      	ldr	r1, [r3, #4]
 8027492:	aa0c      	add	r2, sp, #48	; 0x30
 8027494:	c203      	stmia	r2!, {r0, r1}
 8027496:	a80a      	add	r0, sp, #40	; 0x28
 8027498:	f7ef fa5e 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802749c:	4621      	mov	r1, r4
 802749e:	a80c      	add	r0, sp, #48	; 0x30
 80274a0:	f7ef fa9e 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80274a4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80274a8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80274ac:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80274b0:	f002 0301 	and.w	r3, r2, #1
 80274b4:	9306      	str	r3, [sp, #24]
 80274b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80274ba:	f003 0101 	and.w	r1, r3, #1
 80274be:	9105      	str	r1, [sp, #20]
 80274c0:	9805      	ldr	r0, [sp, #20]
 80274c2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80274c6:	4403      	add	r3, r0
 80274c8:	fb01 2303 	mla	r3, r1, r3, r2
 80274cc:	f04f 0802 	mov.w	r8, #2
 80274d0:	fb93 f3f8 	sdiv	r3, r3, r8
 80274d4:	441d      	add	r5, r3
 80274d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80274da:	441a      	add	r2, r3
 80274dc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80274e0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80274e4:	4419      	add	r1, r3
 80274e6:	4b64      	ldr	r3, [pc, #400]	; (8027678 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80274e8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80274ec:	6818      	ldr	r0, [r3, #0]
 80274ee:	6803      	ldr	r3, [r0, #0]
 80274f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80274f2:	4798      	blx	r3
 80274f4:	4a61      	ldr	r2, [pc, #388]	; (802767c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80274f6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80274fa:	8813      	ldrh	r3, [r2, #0]
 80274fc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8027500:	2fff      	cmp	r7, #255	; 0xff
 8027502:	fb03 a404 	mla	r4, r3, r4, sl
 8027506:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802750a:	f106 0604 	add.w	r6, r6, #4
 802750e:	4611      	mov	r1, r2
 8027510:	fb03 fb0b 	mul.w	fp, r3, fp
 8027514:	d06b      	beq.n	80275ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8027516:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802751a:	9303      	str	r3, [sp, #12]
 802751c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8027520:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027524:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8027528:	9b07      	ldr	r3, [sp, #28]
 802752a:	42a3      	cmp	r3, r4
 802752c:	f240 809c 	bls.w	8027668 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8027530:	9b06      	ldr	r3, [sp, #24]
 8027532:	2b00      	cmp	r3, #0
 8027534:	d039      	beq.n	80275aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8027536:	782b      	ldrb	r3, [r5, #0]
 8027538:	8822      	ldrh	r2, [r4, #0]
 802753a:	9804      	ldr	r0, [sp, #16]
 802753c:	f003 030f 	and.w	r3, r3, #15
 8027540:	f105 0801 	add.w	r8, r5, #1
 8027544:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8027548:	9b03      	ldr	r3, [sp, #12]
 802754a:	9300      	str	r3, [sp, #0]
 802754c:	463b      	mov	r3, r7
 802754e:	f7ff ff53 	bl	80273f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027552:	f824 0b02 	strh.w	r0, [r4], #2
 8027556:	f109 3bff 	add.w	fp, r9, #4294967295
 802755a:	f1bb 0f01 	cmp.w	fp, #1
 802755e:	46a2      	mov	sl, r4
 8027560:	f104 0404 	add.w	r4, r4, #4
 8027564:	dd24      	ble.n	80275b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8027566:	f898 3000 	ldrb.w	r3, [r8]
 802756a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802756e:	9804      	ldr	r0, [sp, #16]
 8027570:	091b      	lsrs	r3, r3, #4
 8027572:	f1ab 0b02 	sub.w	fp, fp, #2
 8027576:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802757a:	9b03      	ldr	r3, [sp, #12]
 802757c:	9300      	str	r3, [sp, #0]
 802757e:	463b      	mov	r3, r7
 8027580:	f7ff ff3a 	bl	80273f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027584:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027588:	f818 3b01 	ldrb.w	r3, [r8], #1
 802758c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027590:	9804      	ldr	r0, [sp, #16]
 8027592:	f003 030f 	and.w	r3, r3, #15
 8027596:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802759a:	9b03      	ldr	r3, [sp, #12]
 802759c:	9300      	str	r3, [sp, #0]
 802759e:	463b      	mov	r3, r7
 80275a0:	f7ff ff2a 	bl	80273f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80275a4:	f824 0c02 	strh.w	r0, [r4, #-2]
 80275a8:	e7d7      	b.n	802755a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80275aa:	46a8      	mov	r8, r5
 80275ac:	46cb      	mov	fp, r9
 80275ae:	e7d4      	b.n	802755a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80275b0:	d10e      	bne.n	80275d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80275b2:	f898 3000 	ldrb.w	r3, [r8]
 80275b6:	f8ba 2000 	ldrh.w	r2, [sl]
 80275ba:	9804      	ldr	r0, [sp, #16]
 80275bc:	091b      	lsrs	r3, r3, #4
 80275be:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80275c2:	9b03      	ldr	r3, [sp, #12]
 80275c4:	9300      	str	r3, [sp, #0]
 80275c6:	463b      	mov	r3, r7
 80275c8:	f7ff ff16 	bl	80273f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80275cc:	f82a 0b02 	strh.w	r0, [sl], #2
 80275d0:	9b08      	ldr	r3, [sp, #32]
 80275d2:	9a05      	ldr	r2, [sp, #20]
 80275d4:	881c      	ldrh	r4, [r3, #0]
 80275d6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80275da:	eba4 0409 	sub.w	r4, r4, r9
 80275de:	4413      	add	r3, r2
 80275e0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80275e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80275e6:	fb93 f3f2 	sdiv	r3, r3, r2
 80275ea:	441d      	add	r5, r3
 80275ec:	e79c      	b.n	8027528 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80275ee:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80275f2:	45a3      	cmp	fp, r4
 80275f4:	d938      	bls.n	8027668 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80275f6:	9b06      	ldr	r3, [sp, #24]
 80275f8:	b1f3      	cbz	r3, 8027638 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80275fa:	782b      	ldrb	r3, [r5, #0]
 80275fc:	f003 030f 	and.w	r3, r3, #15
 8027600:	1c6a      	adds	r2, r5, #1
 8027602:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027606:	8023      	strh	r3, [r4, #0]
 8027608:	f109 30ff 	add.w	r0, r9, #4294967295
 802760c:	3402      	adds	r4, #2
 802760e:	2801      	cmp	r0, #1
 8027610:	4623      	mov	r3, r4
 8027612:	f104 0404 	add.w	r4, r4, #4
 8027616:	dd12      	ble.n	802763e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8027618:	7813      	ldrb	r3, [r2, #0]
 802761a:	091b      	lsrs	r3, r3, #4
 802761c:	3802      	subs	r0, #2
 802761e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027622:	f824 3c04 	strh.w	r3, [r4, #-4]
 8027626:	f812 3b01 	ldrb.w	r3, [r2], #1
 802762a:	f003 030f 	and.w	r3, r3, #15
 802762e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027632:	f824 3c02 	strh.w	r3, [r4, #-2]
 8027636:	e7ea      	b.n	802760e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8027638:	462a      	mov	r2, r5
 802763a:	4648      	mov	r0, r9
 802763c:	e7e7      	b.n	802760e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802763e:	d106      	bne.n	802764e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8027640:	7812      	ldrb	r2, [r2, #0]
 8027642:	0912      	lsrs	r2, r2, #4
 8027644:	3302      	adds	r3, #2
 8027646:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802764a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802764e:	880c      	ldrh	r4, [r1, #0]
 8027650:	9a05      	ldr	r2, [sp, #20]
 8027652:	eba4 0409 	sub.w	r4, r4, r9
 8027656:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802765a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802765e:	4413      	add	r3, r2
 8027660:	fb93 f3f8 	sdiv	r3, r3, r8
 8027664:	441d      	add	r5, r3
 8027666:	e7c4      	b.n	80275f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8027668:	4b03      	ldr	r3, [pc, #12]	; (8027678 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802766a:	6818      	ldr	r0, [r3, #0]
 802766c:	6803      	ldr	r3, [r0, #0]
 802766e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027670:	4798      	blx	r3
 8027672:	b00f      	add	sp, #60	; 0x3c
 8027674:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027678:	20013834 	.word	0x20013834
 802767c:	2001382e 	.word	0x2001382e

08027680 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8027680:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027682:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8027686:	2dff      	cmp	r5, #255	; 0xff
 8027688:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802768c:	d10c      	bne.n	80276a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802768e:	2bff      	cmp	r3, #255	; 0xff
 8027690:	d10a      	bne.n	80276a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8027692:	4b25      	ldr	r3, [pc, #148]	; (8027728 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8027694:	0948      	lsrs	r0, r1, #5
 8027696:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802769a:	403b      	ands	r3, r7
 802769c:	4318      	orrs	r0, r3
 802769e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80276a2:	4308      	orrs	r0, r1
 80276a4:	b280      	uxth	r0, r0
 80276a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80276a8:	fb15 f503 	smulbb	r5, r5, r3
 80276ac:	b2ab      	uxth	r3, r5
 80276ae:	1c5d      	adds	r5, r3, #1
 80276b0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80276b4:	1214      	asrs	r4, r2, #8
 80276b6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80276ba:	fa1f fc85 	uxth.w	ip, r5
 80276be:	10d6      	asrs	r6, r2, #3
 80276c0:	00d0      	lsls	r0, r2, #3
 80276c2:	43ed      	mvns	r5, r5
 80276c4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80276c8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80276cc:	b2eb      	uxtb	r3, r5
 80276ce:	b2c0      	uxtb	r0, r0
 80276d0:	fb12 f20c 	smulbb	r2, r2, ip
 80276d4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80276d8:	fb04 2403 	mla	r4, r4, r3, r2
 80276dc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80276e0:	b2c8      	uxtb	r0, r1
 80276e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80276e6:	b2fd      	uxtb	r5, r7
 80276e8:	fb10 f00c 	smulbb	r0, r0, ip
 80276ec:	b2a4      	uxth	r4, r4
 80276ee:	fb02 0003 	mla	r0, r2, r3, r0
 80276f2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80276f6:	fb15 f50c 	smulbb	r5, r5, ip
 80276fa:	fb06 5503 	mla	r5, r6, r3, r5
 80276fe:	b283      	uxth	r3, r0
 8027700:	1c60      	adds	r0, r4, #1
 8027702:	b2ad      	uxth	r5, r5
 8027704:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8027708:	1c58      	adds	r0, r3, #1
 802770a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802770e:	1c6b      	adds	r3, r5, #1
 8027710:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027714:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027718:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802771c:	096d      	lsrs	r5, r5, #5
 802771e:	4320      	orrs	r0, r4
 8027720:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8027724:	4328      	orrs	r0, r5
 8027726:	e7be      	b.n	80276a6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8027728:	00fff800 	.word	0x00fff800

0802772c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802772c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027730:	461c      	mov	r4, r3
 8027732:	b08d      	sub	sp, #52	; 0x34
 8027734:	460d      	mov	r5, r1
 8027736:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027738:	6861      	ldr	r1, [r4, #4]
 802773a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802773e:	4680      	mov	r8, r0
 8027740:	6820      	ldr	r0, [r4, #0]
 8027742:	4616      	mov	r6, r2
 8027744:	aa08      	add	r2, sp, #32
 8027746:	c203      	stmia	r2!, {r0, r1}
 8027748:	6818      	ldr	r0, [r3, #0]
 802774a:	6859      	ldr	r1, [r3, #4]
 802774c:	aa0a      	add	r2, sp, #40	; 0x28
 802774e:	c203      	stmia	r2!, {r0, r1}
 8027750:	a808      	add	r0, sp, #32
 8027752:	f7ef f901 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027756:	4621      	mov	r1, r4
 8027758:	a80a      	add	r0, sp, #40	; 0x28
 802775a:	f7ef f941 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802775e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8027762:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8027766:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802776a:	f002 0301 	and.w	r3, r2, #1
 802776e:	9303      	str	r3, [sp, #12]
 8027770:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8027774:	f003 0101 	and.w	r1, r3, #1
 8027778:	9102      	str	r1, [sp, #8]
 802777a:	9802      	ldr	r0, [sp, #8]
 802777c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8027780:	4403      	add	r3, r0
 8027782:	fb01 2303 	mla	r3, r1, r3, r2
 8027786:	f04f 0a02 	mov.w	sl, #2
 802778a:	fb93 f3fa 	sdiv	r3, r3, sl
 802778e:	441d      	add	r5, r3
 8027790:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8027794:	441a      	add	r2, r3
 8027796:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802779a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802779e:	4a3f      	ldr	r2, [pc, #252]	; (802789c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80277a0:	9205      	str	r2, [sp, #20]
 80277a2:	4419      	add	r1, r3
 80277a4:	6810      	ldr	r0, [r2, #0]
 80277a6:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80277aa:	6803      	ldr	r3, [r0, #0]
 80277ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80277ae:	4798      	blx	r3
 80277b0:	4b3b      	ldr	r3, [pc, #236]	; (80278a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80277b2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80277b6:	8819      	ldrh	r1, [r3, #0]
 80277b8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80277bc:	fb01 c404 	mla	r4, r1, r4, ip
 80277c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80277c4:	434f      	muls	r7, r1
 80277c6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80277ca:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80277ce:	3604      	adds	r6, #4
 80277d0:	9204      	str	r2, [sp, #16]
 80277d2:	9b04      	ldr	r3, [sp, #16]
 80277d4:	429c      	cmp	r4, r3
 80277d6:	d258      	bcs.n	802788a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80277d8:	9b03      	ldr	r3, [sp, #12]
 80277da:	2b00      	cmp	r3, #0
 80277dc:	d034      	beq.n	8027848 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80277de:	782b      	ldrb	r3, [r5, #0]
 80277e0:	f003 030f 	and.w	r3, r3, #15
 80277e4:	1c6f      	adds	r7, r5, #1
 80277e6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80277ea:	0e0b      	lsrs	r3, r1, #24
 80277ec:	d006      	beq.n	80277fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80277ee:	8822      	ldrh	r2, [r4, #0]
 80277f0:	9300      	str	r3, [sp, #0]
 80277f2:	4640      	mov	r0, r8
 80277f4:	464b      	mov	r3, r9
 80277f6:	f7ff ff43 	bl	8027680 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80277fa:	8020      	strh	r0, [r4, #0]
 80277fc:	3402      	adds	r4, #2
 80277fe:	f10b 3aff 	add.w	sl, fp, #4294967295
 8027802:	f1ba 0f01 	cmp.w	sl, #1
 8027806:	dd22      	ble.n	802784e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8027808:	783b      	ldrb	r3, [r7, #0]
 802780a:	091b      	lsrs	r3, r3, #4
 802780c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027810:	0e0b      	lsrs	r3, r1, #24
 8027812:	d006      	beq.n	8027822 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8027814:	8822      	ldrh	r2, [r4, #0]
 8027816:	9300      	str	r3, [sp, #0]
 8027818:	4640      	mov	r0, r8
 802781a:	464b      	mov	r3, r9
 802781c:	f7ff ff30 	bl	8027680 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027820:	8020      	strh	r0, [r4, #0]
 8027822:	f817 3b01 	ldrb.w	r3, [r7], #1
 8027826:	f003 030f 	and.w	r3, r3, #15
 802782a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802782e:	0e0b      	lsrs	r3, r1, #24
 8027830:	d006      	beq.n	8027840 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8027832:	8862      	ldrh	r2, [r4, #2]
 8027834:	9300      	str	r3, [sp, #0]
 8027836:	4640      	mov	r0, r8
 8027838:	464b      	mov	r3, r9
 802783a:	f7ff ff21 	bl	8027680 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802783e:	8060      	strh	r0, [r4, #2]
 8027840:	3404      	adds	r4, #4
 8027842:	f1aa 0a02 	sub.w	sl, sl, #2
 8027846:	e7dc      	b.n	8027802 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027848:	462f      	mov	r7, r5
 802784a:	46da      	mov	sl, fp
 802784c:	e7d9      	b.n	8027802 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802784e:	d10d      	bne.n	802786c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8027850:	783b      	ldrb	r3, [r7, #0]
 8027852:	091b      	lsrs	r3, r3, #4
 8027854:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027858:	0e0b      	lsrs	r3, r1, #24
 802785a:	d006      	beq.n	802786a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802785c:	8822      	ldrh	r2, [r4, #0]
 802785e:	9300      	str	r3, [sp, #0]
 8027860:	4640      	mov	r0, r8
 8027862:	464b      	mov	r3, r9
 8027864:	f7ff ff0c 	bl	8027680 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027868:	8020      	strh	r0, [r4, #0]
 802786a:	3402      	adds	r4, #2
 802786c:	9b06      	ldr	r3, [sp, #24]
 802786e:	9a02      	ldr	r2, [sp, #8]
 8027870:	881b      	ldrh	r3, [r3, #0]
 8027872:	eba3 030b 	sub.w	r3, r3, fp
 8027876:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802787a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802787e:	4413      	add	r3, r2
 8027880:	9a07      	ldr	r2, [sp, #28]
 8027882:	fb93 f3f2 	sdiv	r3, r3, r2
 8027886:	441d      	add	r5, r3
 8027888:	e7a3      	b.n	80277d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802788a:	9b05      	ldr	r3, [sp, #20]
 802788c:	6818      	ldr	r0, [r3, #0]
 802788e:	6803      	ldr	r3, [r0, #0]
 8027890:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027892:	4798      	blx	r3
 8027894:	b00d      	add	sp, #52	; 0x34
 8027896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802789a:	bf00      	nop
 802789c:	20013834 	.word	0x20013834
 80278a0:	2001382e 	.word	0x2001382e

080278a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80278a4:	b570      	push	{r4, r5, r6, lr}
 80278a6:	1214      	asrs	r4, r2, #8
 80278a8:	788d      	ldrb	r5, [r1, #2]
 80278aa:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80278ae:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80278b2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80278b6:	fb15 f503 	smulbb	r5, r5, r3
 80278ba:	fb04 5506 	mla	r5, r4, r6, r5
 80278be:	10d0      	asrs	r0, r2, #3
 80278c0:	784c      	ldrb	r4, [r1, #1]
 80278c2:	7809      	ldrb	r1, [r1, #0]
 80278c4:	00d2      	lsls	r2, r2, #3
 80278c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80278ca:	b2d2      	uxtb	r2, r2
 80278cc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80278d0:	fb14 f403 	smulbb	r4, r4, r3
 80278d4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80278d8:	fb11 f303 	smulbb	r3, r1, r3
 80278dc:	fb00 4406 	mla	r4, r0, r6, r4
 80278e0:	fb02 3306 	mla	r3, r2, r6, r3
 80278e4:	b2ad      	uxth	r5, r5
 80278e6:	b29b      	uxth	r3, r3
 80278e8:	b2a4      	uxth	r4, r4
 80278ea:	1c68      	adds	r0, r5, #1
 80278ec:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80278f0:	1c62      	adds	r2, r4, #1
 80278f2:	1c58      	adds	r0, r3, #1
 80278f4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80278f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80278fc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027900:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027904:	0964      	lsrs	r4, r4, #5
 8027906:	4328      	orrs	r0, r5
 8027908:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802790c:	4320      	orrs	r0, r4
 802790e:	bd70      	pop	{r4, r5, r6, pc}

08027910 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8027910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027914:	b08f      	sub	sp, #60	; 0x3c
 8027916:	461c      	mov	r4, r3
 8027918:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802791c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802791e:	4682      	mov	sl, r0
 8027920:	460e      	mov	r6, r1
 8027922:	4615      	mov	r5, r2
 8027924:	2f00      	cmp	r7, #0
 8027926:	f000 8142 	beq.w	8027bae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802792a:	6820      	ldr	r0, [r4, #0]
 802792c:	6861      	ldr	r1, [r4, #4]
 802792e:	aa0a      	add	r2, sp, #40	; 0x28
 8027930:	c203      	stmia	r2!, {r0, r1}
 8027932:	6818      	ldr	r0, [r3, #0]
 8027934:	6859      	ldr	r1, [r3, #4]
 8027936:	aa0c      	add	r2, sp, #48	; 0x30
 8027938:	c203      	stmia	r2!, {r0, r1}
 802793a:	a80a      	add	r0, sp, #40	; 0x28
 802793c:	f7ef f80c 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027940:	4621      	mov	r1, r4
 8027942:	a80c      	add	r0, sp, #48	; 0x30
 8027944:	f7ef f84c 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027948:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802794c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8027950:	f002 0301 	and.w	r3, r2, #1
 8027954:	9306      	str	r3, [sp, #24]
 8027956:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802795a:	f003 0101 	and.w	r1, r3, #1
 802795e:	9105      	str	r1, [sp, #20]
 8027960:	9805      	ldr	r0, [sp, #20]
 8027962:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027966:	4403      	add	r3, r0
 8027968:	fb01 2303 	mla	r3, r1, r3, r2
 802796c:	f04f 0802 	mov.w	r8, #2
 8027970:	fb93 f3f8 	sdiv	r3, r3, r8
 8027974:	441e      	add	r6, r3
 8027976:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802797a:	441a      	add	r2, r3
 802797c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8027980:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027984:	4419      	add	r1, r3
 8027986:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802798a:	9303      	str	r3, [sp, #12]
 802798c:	4b89      	ldr	r3, [pc, #548]	; (8027bb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802798e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8027992:	6818      	ldr	r0, [r3, #0]
 8027994:	6803      	ldr	r3, [r0, #0]
 8027996:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8027998:	4798      	blx	r3
 802799a:	4a87      	ldr	r2, [pc, #540]	; (8027bb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802799c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80279a0:	8813      	ldrh	r3, [r2, #0]
 80279a2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80279a6:	2fff      	cmp	r7, #255	; 0xff
 80279a8:	fb03 9404 	mla	r4, r3, r4, r9
 80279ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80279b0:	f105 0504 	add.w	r5, r5, #4
 80279b4:	4694      	mov	ip, r2
 80279b6:	fb03 f30b 	mul.w	r3, r3, fp
 80279ba:	d071      	beq.n	8027aa0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80279bc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80279c0:	43f9      	mvns	r1, r7
 80279c2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80279c6:	b2c9      	uxtb	r1, r1
 80279c8:	9104      	str	r1, [sp, #16]
 80279ca:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80279ce:	9b07      	ldr	r3, [sp, #28]
 80279d0:	42a3      	cmp	r3, r4
 80279d2:	f240 80e7 	bls.w	8027ba4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80279d6:	9b06      	ldr	r3, [sp, #24]
 80279d8:	2b00      	cmp	r3, #0
 80279da:	d03d      	beq.n	8027a58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80279dc:	7831      	ldrb	r1, [r6, #0]
 80279de:	9b04      	ldr	r3, [sp, #16]
 80279e0:	8822      	ldrh	r2, [r4, #0]
 80279e2:	9300      	str	r3, [sp, #0]
 80279e4:	f001 010f 	and.w	r1, r1, #15
 80279e8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80279ec:	463b      	mov	r3, r7
 80279ee:	4429      	add	r1, r5
 80279f0:	4650      	mov	r0, sl
 80279f2:	f7ff ff57 	bl	80278a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80279f6:	9b03      	ldr	r3, [sp, #12]
 80279f8:	f824 0b02 	strh.w	r0, [r4], #2
 80279fc:	f106 0801 	add.w	r8, r6, #1
 8027a00:	f103 3bff 	add.w	fp, r3, #4294967295
 8027a04:	f1bb 0f01 	cmp.w	fp, #1
 8027a08:	46a1      	mov	r9, r4
 8027a0a:	f104 0404 	add.w	r4, r4, #4
 8027a0e:	dd27      	ble.n	8027a60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8027a10:	f898 1000 	ldrb.w	r1, [r8]
 8027a14:	9b04      	ldr	r3, [sp, #16]
 8027a16:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8027a1a:	9300      	str	r3, [sp, #0]
 8027a1c:	0909      	lsrs	r1, r1, #4
 8027a1e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027a22:	463b      	mov	r3, r7
 8027a24:	4429      	add	r1, r5
 8027a26:	4650      	mov	r0, sl
 8027a28:	f7ff ff3c 	bl	80278a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027a2c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027a30:	f818 1b01 	ldrb.w	r1, [r8], #1
 8027a34:	9b04      	ldr	r3, [sp, #16]
 8027a36:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8027a3a:	9300      	str	r3, [sp, #0]
 8027a3c:	f001 010f 	and.w	r1, r1, #15
 8027a40:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027a44:	463b      	mov	r3, r7
 8027a46:	4429      	add	r1, r5
 8027a48:	4650      	mov	r0, sl
 8027a4a:	f7ff ff2b 	bl	80278a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027a4e:	f1ab 0b02 	sub.w	fp, fp, #2
 8027a52:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027a56:	e7d5      	b.n	8027a04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027a58:	46b0      	mov	r8, r6
 8027a5a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8027a5e:	e7d1      	b.n	8027a04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027a60:	d10f      	bne.n	8027a82 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8027a62:	f898 1000 	ldrb.w	r1, [r8]
 8027a66:	9b04      	ldr	r3, [sp, #16]
 8027a68:	f8b9 2000 	ldrh.w	r2, [r9]
 8027a6c:	9300      	str	r3, [sp, #0]
 8027a6e:	0909      	lsrs	r1, r1, #4
 8027a70:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027a74:	463b      	mov	r3, r7
 8027a76:	4429      	add	r1, r5
 8027a78:	4650      	mov	r0, sl
 8027a7a:	f7ff ff13 	bl	80278a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027a7e:	f829 0b02 	strh.w	r0, [r9], #2
 8027a82:	9b08      	ldr	r3, [sp, #32]
 8027a84:	9a05      	ldr	r2, [sp, #20]
 8027a86:	881c      	ldrh	r4, [r3, #0]
 8027a88:	9b03      	ldr	r3, [sp, #12]
 8027a8a:	1ae4      	subs	r4, r4, r3
 8027a8c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8027a90:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8027a94:	4413      	add	r3, r2
 8027a96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027a98:	fb93 f3f2 	sdiv	r3, r3, r2
 8027a9c:	441e      	add	r6, r3
 8027a9e:	e796      	b.n	80279ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8027aa0:	4f46      	ldr	r7, [pc, #280]	; (8027bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8027aa2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8027aa6:	42a3      	cmp	r3, r4
 8027aa8:	d97c      	bls.n	8027ba4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8027aaa:	9a06      	ldr	r2, [sp, #24]
 8027aac:	2a00      	cmp	r2, #0
 8027aae:	d054      	beq.n	8027b5a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8027ab0:	7830      	ldrb	r0, [r6, #0]
 8027ab2:	f000 000f 	and.w	r0, r0, #15
 8027ab6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027aba:	eb05 0e00 	add.w	lr, r5, r0
 8027abe:	5c28      	ldrb	r0, [r5, r0]
 8027ac0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8027ac4:	f89e e001 	ldrb.w	lr, [lr, #1]
 8027ac8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8027acc:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8027ad0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027ad4:	ea42 020e 	orr.w	r2, r2, lr
 8027ad8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8027adc:	f824 2b02 	strh.w	r2, [r4], #2
 8027ae0:	9a03      	ldr	r2, [sp, #12]
 8027ae2:	1c71      	adds	r1, r6, #1
 8027ae4:	f102 3eff 	add.w	lr, r2, #4294967295
 8027ae8:	f1be 0f01 	cmp.w	lr, #1
 8027aec:	4620      	mov	r0, r4
 8027aee:	f104 0404 	add.w	r4, r4, #4
 8027af2:	dd36      	ble.n	8027b62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8027af4:	7808      	ldrb	r0, [r1, #0]
 8027af6:	0900      	lsrs	r0, r0, #4
 8027af8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027afc:	eb05 0a00 	add.w	sl, r5, r0
 8027b00:	f1ae 0e02 	sub.w	lr, lr, #2
 8027b04:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027b08:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027b0c:	00d2      	lsls	r2, r2, #3
 8027b0e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027b12:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027b16:	ea49 0202 	orr.w	r2, r9, r2
 8027b1a:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027b1e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027b22:	f824 2c04 	strh.w	r2, [r4, #-4]
 8027b26:	f811 0b01 	ldrb.w	r0, [r1], #1
 8027b2a:	f000 000f 	and.w	r0, r0, #15
 8027b2e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027b32:	eb05 0a00 	add.w	sl, r5, r0
 8027b36:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027b3a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027b3e:	00d2      	lsls	r2, r2, #3
 8027b40:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027b44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027b48:	ea49 0202 	orr.w	r2, r9, r2
 8027b4c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027b50:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027b54:	f824 2c02 	strh.w	r2, [r4, #-2]
 8027b58:	e7c6      	b.n	8027ae8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027b5a:	4631      	mov	r1, r6
 8027b5c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8027b60:	e7c2      	b.n	8027ae8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027b62:	d111      	bne.n	8027b88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8027b64:	7809      	ldrb	r1, [r1, #0]
 8027b66:	0909      	lsrs	r1, r1, #4
 8027b68:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027b6c:	186c      	adds	r4, r5, r1
 8027b6e:	5c69      	ldrb	r1, [r5, r1]
 8027b70:	78a2      	ldrb	r2, [r4, #2]
 8027b72:	7864      	ldrb	r4, [r4, #1]
 8027b74:	00e4      	lsls	r4, r4, #3
 8027b76:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027b7a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8027b7e:	4322      	orrs	r2, r4
 8027b80:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8027b84:	f820 2b02 	strh.w	r2, [r0], #2
 8027b88:	9a03      	ldr	r2, [sp, #12]
 8027b8a:	f8bc 4000 	ldrh.w	r4, [ip]
 8027b8e:	9905      	ldr	r1, [sp, #20]
 8027b90:	1aa4      	subs	r4, r4, r2
 8027b92:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8027b96:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027b9a:	440a      	add	r2, r1
 8027b9c:	fb92 f2f8 	sdiv	r2, r2, r8
 8027ba0:	4416      	add	r6, r2
 8027ba2:	e780      	b.n	8027aa6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8027ba4:	4b03      	ldr	r3, [pc, #12]	; (8027bb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027ba6:	6818      	ldr	r0, [r3, #0]
 8027ba8:	6803      	ldr	r3, [r0, #0]
 8027baa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027bac:	4798      	blx	r3
 8027bae:	b00f      	add	sp, #60	; 0x3c
 8027bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027bb4:	20013834 	.word	0x20013834
 8027bb8:	2001382e 	.word	0x2001382e
 8027bbc:	fffff800 	.word	0xfffff800

08027bc0 <CRC_Lock>:
 8027bc0:	b530      	push	{r4, r5, lr}
 8027bc2:	4a20      	ldr	r2, [pc, #128]	; (8027c44 <CRC_Lock+0x84>)
 8027bc4:	6813      	ldr	r3, [r2, #0]
 8027bc6:	f023 0301 	bic.w	r3, r3, #1
 8027bca:	6013      	str	r3, [r2, #0]
 8027bcc:	4b1e      	ldr	r3, [pc, #120]	; (8027c48 <CRC_Lock+0x88>)
 8027bce:	681a      	ldr	r2, [r3, #0]
 8027bd0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8027bd4:	4022      	ands	r2, r4
 8027bd6:	f24c 2540 	movw	r5, #49728	; 0xc240
 8027bda:	42aa      	cmp	r2, r5
 8027bdc:	d005      	beq.n	8027bea <CRC_Lock+0x2a>
 8027bde:	681b      	ldr	r3, [r3, #0]
 8027be0:	f24c 2270 	movw	r2, #49776	; 0xc270
 8027be4:	4023      	ands	r3, r4
 8027be6:	4293      	cmp	r3, r2
 8027be8:	d124      	bne.n	8027c34 <CRC_Lock+0x74>
 8027bea:	4b18      	ldr	r3, [pc, #96]	; (8027c4c <CRC_Lock+0x8c>)
 8027bec:	681b      	ldr	r3, [r3, #0]
 8027bee:	bb0b      	cbnz	r3, 8027c34 <CRC_Lock+0x74>
 8027bf0:	4b17      	ldr	r3, [pc, #92]	; (8027c50 <CRC_Lock+0x90>)
 8027bf2:	681a      	ldr	r2, [r3, #0]
 8027bf4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027bf8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8027bfc:	d00d      	beq.n	8027c1a <CRC_Lock+0x5a>
 8027bfe:	681a      	ldr	r2, [r3, #0]
 8027c00:	f240 4483 	movw	r4, #1155	; 0x483
 8027c04:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027c08:	42a2      	cmp	r2, r4
 8027c0a:	d006      	beq.n	8027c1a <CRC_Lock+0x5a>
 8027c0c:	681b      	ldr	r3, [r3, #0]
 8027c0e:	f240 4285 	movw	r2, #1157	; 0x485
 8027c12:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027c16:	4293      	cmp	r3, r2
 8027c18:	d10c      	bne.n	8027c34 <CRC_Lock+0x74>
 8027c1a:	4b0e      	ldr	r3, [pc, #56]	; (8027c54 <CRC_Lock+0x94>)
 8027c1c:	2201      	movs	r2, #1
 8027c1e:	601a      	str	r2, [r3, #0]
 8027c20:	681a      	ldr	r2, [r3, #0]
 8027c22:	2a00      	cmp	r2, #0
 8027c24:	d1fc      	bne.n	8027c20 <CRC_Lock+0x60>
 8027c26:	4b0c      	ldr	r3, [pc, #48]	; (8027c58 <CRC_Lock+0x98>)
 8027c28:	6018      	str	r0, [r3, #0]
 8027c2a:	6818      	ldr	r0, [r3, #0]
 8027c2c:	1a43      	subs	r3, r0, r1
 8027c2e:	4258      	negs	r0, r3
 8027c30:	4158      	adcs	r0, r3
 8027c32:	bd30      	pop	{r4, r5, pc}
 8027c34:	4b09      	ldr	r3, [pc, #36]	; (8027c5c <CRC_Lock+0x9c>)
 8027c36:	2201      	movs	r2, #1
 8027c38:	601a      	str	r2, [r3, #0]
 8027c3a:	681a      	ldr	r2, [r3, #0]
 8027c3c:	2a00      	cmp	r2, #0
 8027c3e:	d1fc      	bne.n	8027c3a <CRC_Lock+0x7a>
 8027c40:	4b07      	ldr	r3, [pc, #28]	; (8027c60 <CRC_Lock+0xa0>)
 8027c42:	e7f1      	b.n	8027c28 <CRC_Lock+0x68>
 8027c44:	e0002000 	.word	0xe0002000
 8027c48:	e000ed00 	.word	0xe000ed00
 8027c4c:	e0042000 	.word	0xe0042000
 8027c50:	5c001000 	.word	0x5c001000
 8027c54:	58024c08 	.word	0x58024c08
 8027c58:	58024c00 	.word	0x58024c00
 8027c5c:	40023008 	.word	0x40023008
 8027c60:	40023000 	.word	0x40023000

08027c64 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027c64:	6101      	str	r1, [r0, #16]
 8027c66:	4770      	bx	lr

08027c68 <_ZN8touchgfx8Gestures4tickEv>:
 8027c68:	7b83      	ldrb	r3, [r0, #14]
 8027c6a:	b14b      	cbz	r3, 8027c80 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8027c6c:	8903      	ldrh	r3, [r0, #8]
 8027c6e:	3301      	adds	r3, #1
 8027c70:	b29b      	uxth	r3, r3
 8027c72:	2b07      	cmp	r3, #7
 8027c74:	8103      	strh	r3, [r0, #8]
 8027c76:	bf81      	itttt	hi
 8027c78:	2300      	movhi	r3, #0
 8027c7a:	8143      	strhhi	r3, [r0, #10]
 8027c7c:	8183      	strhhi	r3, [r0, #12]
 8027c7e:	7383      	strbhi	r3, [r0, #14]
 8027c80:	4770      	bx	lr
	...

08027c84 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027c84:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027c88:	4698      	mov	r8, r3
 8027c8a:	8883      	ldrh	r3, [r0, #4]
 8027c8c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027c90:	eba8 0303 	sub.w	r3, r8, r3
 8027c94:	b21b      	sxth	r3, r3
 8027c96:	4604      	mov	r4, r0
 8027c98:	2b00      	cmp	r3, #0
 8027c9a:	4617      	mov	r7, r2
 8027c9c:	4a18      	ldr	r2, [pc, #96]	; (8027d00 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8027c9e:	9200      	str	r2, [sp, #0]
 8027ca0:	bfb8      	it	lt
 8027ca2:	425b      	neglt	r3, r3
 8027ca4:	8aa2      	ldrh	r2, [r4, #20]
 8027ca6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8027caa:	f8ad 800a 	strh.w	r8, [sp, #10]
 8027cae:	b21b      	sxth	r3, r3
 8027cb0:	460e      	mov	r6, r1
 8027cb2:	4293      	cmp	r3, r2
 8027cb4:	88c1      	ldrh	r1, [r0, #6]
 8027cb6:	f8ad 1008 	strh.w	r1, [sp, #8]
 8027cba:	f04f 0000 	mov.w	r0, #0
 8027cbe:	f88d 0004 	strb.w	r0, [sp, #4]
 8027cc2:	f8ad 500c 	strh.w	r5, [sp, #12]
 8027cc6:	dc07      	bgt.n	8027cd8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8027cc8:	1a69      	subs	r1, r5, r1
 8027cca:	b209      	sxth	r1, r1
 8027ccc:	2900      	cmp	r1, #0
 8027cce:	bfb8      	it	lt
 8027cd0:	4249      	neglt	r1, r1
 8027cd2:	b209      	sxth	r1, r1
 8027cd4:	428a      	cmp	r2, r1
 8027cd6:	da10      	bge.n	8027cfa <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8027cd8:	6920      	ldr	r0, [r4, #16]
 8027cda:	6803      	ldr	r3, [r0, #0]
 8027cdc:	4669      	mov	r1, sp
 8027cde:	685b      	ldr	r3, [r3, #4]
 8027ce0:	4798      	blx	r3
 8027ce2:	eba8 0606 	sub.w	r6, r8, r6
 8027ce6:	2300      	movs	r3, #0
 8027ce8:	1bef      	subs	r7, r5, r7
 8027cea:	2001      	movs	r0, #1
 8027cec:	8123      	strh	r3, [r4, #8]
 8027cee:	8166      	strh	r6, [r4, #10]
 8027cf0:	81a7      	strh	r7, [r4, #12]
 8027cf2:	f8a4 8004 	strh.w	r8, [r4, #4]
 8027cf6:	80e5      	strh	r5, [r4, #6]
 8027cf8:	73a0      	strb	r0, [r4, #14]
 8027cfa:	b004      	add	sp, #16
 8027cfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027d00:	0802ffa0 	.word	0x0802ffa0

08027d04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8027d04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027d06:	461e      	mov	r6, r3
 8027d08:	1e4b      	subs	r3, r1, #1
 8027d0a:	2b01      	cmp	r3, #1
 8027d0c:	b085      	sub	sp, #20
 8027d0e:	4604      	mov	r4, r0
 8027d10:	460d      	mov	r5, r1
 8027d12:	4617      	mov	r7, r2
 8027d14:	d84b      	bhi.n	8027dae <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8027d16:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8027d1a:	1cd3      	adds	r3, r2, #3
 8027d1c:	b29b      	uxth	r3, r3
 8027d1e:	2b06      	cmp	r3, #6
 8027d20:	d916      	bls.n	8027d50 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8027d22:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8027dc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027d26:	f8cd c004 	str.w	ip, [sp, #4]
 8027d2a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027d2e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027d32:	6900      	ldr	r0, [r0, #16]
 8027d34:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027d38:	f04f 0c00 	mov.w	ip, #0
 8027d3c:	f88d c008 	strb.w	ip, [sp, #8]
 8027d40:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027d44:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027d48:	6803      	ldr	r3, [r0, #0]
 8027d4a:	a901      	add	r1, sp, #4
 8027d4c:	689b      	ldr	r3, [r3, #8]
 8027d4e:	4798      	blx	r3
 8027d50:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027d54:	1cd3      	adds	r3, r2, #3
 8027d56:	b29b      	uxth	r3, r3
 8027d58:	2b06      	cmp	r3, #6
 8027d5a:	d916      	bls.n	8027d8a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027d5c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8027dc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027d60:	f8cd c004 	str.w	ip, [sp, #4]
 8027d64:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027d68:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027d6c:	6920      	ldr	r0, [r4, #16]
 8027d6e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027d72:	f04f 0c01 	mov.w	ip, #1
 8027d76:	f88d c008 	strb.w	ip, [sp, #8]
 8027d7a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027d7e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027d82:	6803      	ldr	r3, [r0, #0]
 8027d84:	a901      	add	r1, sp, #4
 8027d86:	689b      	ldr	r3, [r3, #8]
 8027d88:	4798      	blx	r3
 8027d8a:	4b0d      	ldr	r3, [pc, #52]	; (8027dc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8027d8c:	9301      	str	r3, [sp, #4]
 8027d8e:	6920      	ldr	r0, [r4, #16]
 8027d90:	f88d 5008 	strb.w	r5, [sp, #8]
 8027d94:	2300      	movs	r3, #0
 8027d96:	f8ad 700a 	strh.w	r7, [sp, #10]
 8027d9a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8027d9e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027da2:	6803      	ldr	r3, [r0, #0]
 8027da4:	a901      	add	r1, sp, #4
 8027da6:	681b      	ldr	r3, [r3, #0]
 8027da8:	4798      	blx	r3
 8027daa:	b005      	add	sp, #20
 8027dac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027dae:	2900      	cmp	r1, #0
 8027db0:	d1eb      	bne.n	8027d8a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027db2:	80a2      	strh	r2, [r4, #4]
 8027db4:	80c6      	strh	r6, [r0, #6]
 8027db6:	60a1      	str	r1, [r4, #8]
 8027db8:	81a1      	strh	r1, [r4, #12]
 8027dba:	73a1      	strb	r1, [r4, #14]
 8027dbc:	e7e5      	b.n	8027d8a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027dbe:	bf00      	nop
 8027dc0:	0802ff8c 	.word	0x0802ff8c
 8027dc4:	0802ffb4 	.word	0x0802ffb4

08027dc8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8027dc8:	10c9      	asrs	r1, r1, #3
 8027dca:	2900      	cmp	r1, #0
 8027dcc:	bfb8      	it	lt
 8027dce:	4249      	neglt	r1, r1
 8027dd0:	2801      	cmp	r0, #1
 8027dd2:	d108      	bne.n	8027de6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027dd4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8027dd8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8027ddc:	4601      	mov	r1, r0
 8027dde:	dd02      	ble.n	8027de6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8027de0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8027de4:	4770      	bx	lr
 8027de6:	29ff      	cmp	r1, #255	; 0xff
 8027de8:	bfa8      	it	ge
 8027dea:	21ff      	movge	r1, #255	; 0xff
 8027dec:	4608      	mov	r0, r1
 8027dee:	4770      	bx	lr

08027df0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8027df0:	b410      	push	{r4}
 8027df2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8027df6:	429c      	cmp	r4, r3
 8027df8:	d803      	bhi.n	8027e02 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8027dfa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027dfe:	f7ed b8b1 	b.w	8014f64 <_ZN8touchgfx7Outline6lineToEii>
 8027e02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027e06:	4770      	bx	lr

08027e08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8027e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027e0c:	b08b      	sub	sp, #44	; 0x2c
 8027e0e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8027e12:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8027e16:	9308      	str	r3, [sp, #32]
 8027e18:	4606      	mov	r6, r0
 8027e1a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8027e1e:	9309      	str	r3, [sp, #36]	; 0x24
 8027e20:	468a      	mov	sl, r1
 8027e22:	f7ed fa0c 	bl	801523e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8027e26:	68b5      	ldr	r5, [r6, #8]
 8027e28:	4604      	mov	r4, r0
 8027e2a:	2d00      	cmp	r5, #0
 8027e2c:	d044      	beq.n	8027eb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027e2e:	6873      	ldr	r3, [r6, #4]
 8027e30:	42ab      	cmp	r3, r5
 8027e32:	d33d      	bcc.n	8027eb0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8027e34:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8027e38:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8027e3c:	eb02 0b03 	add.w	fp, r2, r3
 8027e40:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8027e44:	fb02 1203 	mla	r2, r2, r3, r1
 8027e48:	9205      	str	r2, [sp, #20]
 8027e4a:	1e6a      	subs	r2, r5, #1
 8027e4c:	9204      	str	r2, [sp, #16]
 8027e4e:	f04f 0800 	mov.w	r8, #0
 8027e52:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8027e56:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027e5a:	454b      	cmp	r3, r9
 8027e5c:	463a      	mov	r2, r7
 8027e5e:	d008      	beq.n	8027e72 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8027e60:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8027e64:	eb03 0b09 	add.w	fp, r3, r9
 8027e68:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8027e6c:	fb03 1309 	mla	r3, r3, r9, r1
 8027e70:	9305      	str	r3, [sp, #20]
 8027e72:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8027e76:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8027e7a:	4498      	add	r8, r3
 8027e7c:	9b04      	ldr	r3, [sp, #16]
 8027e7e:	3b01      	subs	r3, #1
 8027e80:	9304      	str	r3, [sp, #16]
 8027e82:	9b04      	ldr	r3, [sp, #16]
 8027e84:	3301      	adds	r3, #1
 8027e86:	d015      	beq.n	8027eb4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8027e88:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8027e8c:	42bb      	cmp	r3, r7
 8027e8e:	d117      	bne.n	8027ec0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8027e90:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8027e94:	9b04      	ldr	r3, [sp, #16]
 8027e96:	4548      	cmp	r0, r9
 8027e98:	f103 33ff 	add.w	r3, r3, #4294967295
 8027e9c:	d17f      	bne.n	8027f9e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8027e9e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8027ea2:	4401      	add	r1, r0
 8027ea4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8027ea8:	4480      	add	r8, r0
 8027eaa:	e7e9      	b.n	8027e80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8027eac:	461f      	mov	r7, r3
 8027eae:	e044      	b.n	8027f3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8027eb0:	2000      	movs	r0, #0
 8027eb2:	e002      	b.n	8027eba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8027eb4:	2900      	cmp	r1, #0
 8027eb6:	d16f      	bne.n	8027f98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8027eb8:	2001      	movs	r0, #1
 8027eba:	b00b      	add	sp, #44	; 0x2c
 8027ebc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027ec0:	2900      	cmp	r1, #0
 8027ec2:	d030      	beq.n	8027f26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8027ec4:	2f00      	cmp	r7, #0
 8027ec6:	db29      	blt.n	8027f1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027ec8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027ecc:	42bb      	cmp	r3, r7
 8027ece:	dd25      	ble.n	8027f1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027ed0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8027ed4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027ed8:	f7ff ff76 	bl	8027dc8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027edc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027ede:	fb10 f003 	smulbb	r0, r0, r3
 8027ee2:	b280      	uxth	r0, r0
 8027ee4:	1c41      	adds	r1, r0, #1
 8027ee6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027eea:	1209      	asrs	r1, r1, #8
 8027eec:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027ef0:	d014      	beq.n	8027f1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027ef2:	9808      	ldr	r0, [sp, #32]
 8027ef4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027ef6:	b2c9      	uxtb	r1, r1
 8027ef8:	b2ba      	uxth	r2, r7
 8027efa:	9102      	str	r1, [sp, #8]
 8027efc:	2101      	movs	r1, #1
 8027efe:	4413      	add	r3, r2
 8027f00:	9101      	str	r1, [sp, #4]
 8027f02:	4402      	add	r2, r0
 8027f04:	fa0f f18b 	sxth.w	r1, fp
 8027f08:	f8da 0000 	ldr.w	r0, [sl]
 8027f0c:	9100      	str	r1, [sp, #0]
 8027f0e:	6941      	ldr	r1, [r0, #20]
 8027f10:	b21b      	sxth	r3, r3
 8027f12:	460d      	mov	r5, r1
 8027f14:	b212      	sxth	r2, r2
 8027f16:	9905      	ldr	r1, [sp, #20]
 8027f18:	4650      	mov	r0, sl
 8027f1a:	47a8      	blx	r5
 8027f1c:	9b04      	ldr	r3, [sp, #16]
 8027f1e:	3301      	adds	r3, #1
 8027f20:	f107 0201 	add.w	r2, r7, #1
 8027f24:	d0c8      	beq.n	8027eb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027f26:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027f2a:	1abb      	subs	r3, r7, r2
 8027f2c:	2b00      	cmp	r3, #0
 8027f2e:	dd31      	ble.n	8027f94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f30:	2a00      	cmp	r2, #0
 8027f32:	dabb      	bge.n	8027eac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8027f34:	2f00      	cmp	r7, #0
 8027f36:	dd2d      	ble.n	8027f94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f38:	2200      	movs	r2, #0
 8027f3a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027f3e:	19d1      	adds	r1, r2, r7
 8027f40:	4299      	cmp	r1, r3
 8027f42:	db02      	blt.n	8027f4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8027f44:	1a9f      	subs	r7, r3, r2
 8027f46:	2f00      	cmp	r7, #0
 8027f48:	dd24      	ble.n	8027f94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f4a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8027f4e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027f52:	f7ff ff39 	bl	8027dc8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027f56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027f58:	fb10 f003 	smulbb	r0, r0, r3
 8027f5c:	b280      	uxth	r0, r0
 8027f5e:	1c41      	adds	r1, r0, #1
 8027f60:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027f64:	1209      	asrs	r1, r1, #8
 8027f66:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027f6a:	d013      	beq.n	8027f94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027f6c:	9808      	ldr	r0, [sp, #32]
 8027f6e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027f70:	b292      	uxth	r2, r2
 8027f72:	b2c9      	uxtb	r1, r1
 8027f74:	4413      	add	r3, r2
 8027f76:	9102      	str	r1, [sp, #8]
 8027f78:	4402      	add	r2, r0
 8027f7a:	b23f      	sxth	r7, r7
 8027f7c:	f8da 0000 	ldr.w	r0, [sl]
 8027f80:	9701      	str	r7, [sp, #4]
 8027f82:	fa0f f18b 	sxth.w	r1, fp
 8027f86:	9100      	str	r1, [sp, #0]
 8027f88:	6947      	ldr	r7, [r0, #20]
 8027f8a:	9905      	ldr	r1, [sp, #20]
 8027f8c:	b21b      	sxth	r3, r3
 8027f8e:	b212      	sxth	r2, r2
 8027f90:	4650      	mov	r0, sl
 8027f92:	47b8      	blx	r7
 8027f94:	464b      	mov	r3, r9
 8027f96:	e75c      	b.n	8027e52 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8027f98:	2f00      	cmp	r7, #0
 8027f9a:	da95      	bge.n	8027ec8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8027f9c:	e78c      	b.n	8027eb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027f9e:	2900      	cmp	r1, #0
 8027fa0:	d0f8      	beq.n	8027f94 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027fa2:	e78f      	b.n	8027ec4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08027fa4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8027fa4:	4b4b      	ldr	r3, [pc, #300]	; (80280d4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8027fa6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8027faa:	2500      	movs	r5, #0
 8027fac:	f100 0620 	add.w	r6, r0, #32
 8027fb0:	4604      	mov	r4, r0
 8027fb2:	e9c0 3100 	strd	r3, r1, [r0]
 8027fb6:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8027fba:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8027fbe:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8027fc2:	f100 0718 	add.w	r7, r0, #24
 8027fc6:	4630      	mov	r0, r6
 8027fc8:	4690      	mov	r8, r2
 8027fca:	f7ec fb03 	bl	80145d4 <_ZN8touchgfx7OutlineC1Ev>
 8027fce:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8027fd2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8027fd6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8027fda:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8027fde:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8027fe2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8027fe6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8027fea:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8027fee:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8027ff2:	f9b8 2000 	ldrsh.w	r2, [r8]
 8027ff6:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8027ffa:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8027ffe:	9500      	str	r5, [sp, #0]
 8028000:	4410      	add	r0, r2
 8028002:	b280      	uxth	r0, r0
 8028004:	fa0f fa80 	sxth.w	sl, r0
 8028008:	45aa      	cmp	sl, r5
 802800a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802800e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8028012:	dd5c      	ble.n	80280ce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8028014:	4591      	cmp	r9, r2
 8028016:	dd5a      	ble.n	80280ce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8028018:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802801c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8028020:	440b      	add	r3, r1
 8028022:	b29b      	uxth	r3, r3
 8028024:	b21d      	sxth	r5, r3
 8028026:	2d00      	cmp	r5, #0
 8028028:	dd51      	ble.n	80280ce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802802a:	458e      	cmp	lr, r1
 802802c:	dd4f      	ble.n	80280ce <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802802e:	45d1      	cmp	r9, sl
 8028030:	bfb8      	it	lt
 8028032:	fa1f f089 	uxthlt.w	r0, r9
 8028036:	45ae      	cmp	lr, r5
 8028038:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802803c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8028040:	bfb8      	it	lt
 8028042:	fa1f f38e 	uxthlt.w	r3, lr
 8028046:	1a80      	subs	r0, r0, r2
 8028048:	1a5b      	subs	r3, r3, r1
 802804a:	f8ad 0004 	strh.w	r0, [sp, #4]
 802804e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8028052:	f8ad 2000 	strh.w	r2, [sp]
 8028056:	f8ad 1002 	strh.w	r1, [sp, #2]
 802805a:	466d      	mov	r5, sp
 802805c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8028060:	e887 0003 	stmia.w	r7, {r0, r1}
 8028064:	f8dc 3000 	ldr.w	r3, [ip]
 8028068:	4660      	mov	r0, ip
 802806a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802806c:	4639      	mov	r1, r7
 802806e:	4798      	blx	r3
 8028070:	6861      	ldr	r1, [r4, #4]
 8028072:	4628      	mov	r0, r5
 8028074:	3104      	adds	r1, #4
 8028076:	f7ee fcb3 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802807a:	4638      	mov	r0, r7
 802807c:	f7ee fc6c 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8028080:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8028084:	f8bd 2000 	ldrh.w	r2, [sp]
 8028088:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802808c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8028090:	4630      	mov	r0, r6
 8028092:	f7ec fa83 	bl	801459c <_ZN8touchgfx7Outline5resetEv>
 8028096:	f9bd 3000 	ldrsh.w	r3, [sp]
 802809a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802809e:	015b      	lsls	r3, r3, #5
 80280a0:	60a3      	str	r3, [r4, #8]
 80280a2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80280a6:	015b      	lsls	r3, r3, #5
 80280a8:	60e3      	str	r3, [r4, #12]
 80280aa:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80280ae:	015b      	lsls	r3, r3, #5
 80280b0:	6123      	str	r3, [r4, #16]
 80280b2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80280b6:	015b      	lsls	r3, r3, #5
 80280b8:	6163      	str	r3, [r4, #20]
 80280ba:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 80280be:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 80280c2:	4620      	mov	r0, r4
 80280c4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 80280c8:	b002      	add	sp, #8
 80280ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80280ce:	2300      	movs	r3, #0
 80280d0:	9301      	str	r3, [sp, #4]
 80280d2:	e7c2      	b.n	802805a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 80280d4:	080302d8 	.word	0x080302d8

080280d8 <_ZN8touchgfx6Canvas5closeEv>:
 80280d8:	b538      	push	{r3, r4, r5, lr}
 80280da:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80280de:	4604      	mov	r4, r0
 80280e0:	b193      	cbz	r3, 8028108 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80280e2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 80280e6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 80280ea:	4213      	tst	r3, r2
 80280ec:	d10c      	bne.n	8028108 <_ZN8touchgfx6Canvas5closeEv+0x30>
 80280ee:	f100 0520 	add.w	r5, r0, #32
 80280f2:	b123      	cbz	r3, 80280fe <_ZN8touchgfx6Canvas5closeEv+0x26>
 80280f4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80280f8:	4628      	mov	r0, r5
 80280fa:	f7ff fe79 	bl	8027df0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80280fe:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8028102:	4628      	mov	r0, r5
 8028104:	f7ff fe74 	bl	8027df0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028108:	2300      	movs	r3, #0
 802810a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802810e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8028112:	4298      	cmp	r0, r3
 8028114:	bf34      	ite	cc
 8028116:	2000      	movcc	r0, #0
 8028118:	2001      	movcs	r0, #1
 802811a:	bd38      	pop	{r3, r4, r5, pc}

0802811c <_ZN8touchgfx6Canvas6renderEh>:
 802811c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8028120:	4604      	mov	r4, r0
 8028122:	6840      	ldr	r0, [r0, #4]
 8028124:	6803      	ldr	r3, [r0, #0]
 8028126:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8028128:	460d      	mov	r5, r1
 802812a:	4798      	blx	r3
 802812c:	fb10 f105 	smulbb	r1, r0, r5
 8028130:	b289      	uxth	r1, r1
 8028132:	1c4d      	adds	r5, r1, #1
 8028134:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8028138:	122d      	asrs	r5, r5, #8
 802813a:	f000 809d 	beq.w	8028278 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802813e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8028142:	2b00      	cmp	r3, #0
 8028144:	f000 8098 	beq.w	8028278 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8028148:	4620      	mov	r0, r4
 802814a:	f7ff ffc5 	bl	80280d8 <_ZN8touchgfx6Canvas5closeEv>
 802814e:	4607      	mov	r7, r0
 8028150:	2800      	cmp	r0, #0
 8028152:	d048      	beq.n	80281e6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8028154:	6863      	ldr	r3, [r4, #4]
 8028156:	4e49      	ldr	r6, [pc, #292]	; (802827c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8028158:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802815a:	6837      	ldr	r7, [r6, #0]
 802815c:	6803      	ldr	r3, [r0, #0]
 802815e:	689b      	ldr	r3, [r3, #8]
 8028160:	4798      	blx	r3
 8028162:	4601      	mov	r1, r0
 8028164:	4638      	mov	r0, r7
 8028166:	f7ea f9bb 	bl	80124e0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802816a:	4607      	mov	r7, r0
 802816c:	f7dc fbd0 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 8028170:	6803      	ldr	r3, [r0, #0]
 8028172:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8028174:	4798      	blx	r3
 8028176:	4680      	mov	r8, r0
 8028178:	f7dc fbca 	bl	8004910 <_ZN8touchgfx3HAL3lcdEv>
 802817c:	6803      	ldr	r3, [r0, #0]
 802817e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8028180:	4798      	blx	r3
 8028182:	280b      	cmp	r0, #11
 8028184:	d85d      	bhi.n	8028242 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8028186:	e8df f000 	tbb	[pc, r0]
 802818a:	5e53      	.short	0x5e53
 802818c:	325c066e 	.word	0x325c066e
 8028190:	67676742 	.word	0x67676742
 8028194:	6767      	.short	0x6767
 8028196:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802819a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802819e:	2208      	movs	r2, #8
 80281a0:	fb91 f2f2 	sdiv	r2, r1, r2
 80281a4:	fb08 2303 	mla	r3, r8, r3, r2
 80281a8:	441f      	add	r7, r3
 80281aa:	424b      	negs	r3, r1
 80281ac:	f003 0307 	and.w	r3, r3, #7
 80281b0:	f001 0107 	and.w	r1, r1, #7
 80281b4:	bf58      	it	pl
 80281b6:	4259      	negpl	r1, r3
 80281b8:	b2c9      	uxtb	r1, r1
 80281ba:	b2ed      	uxtb	r5, r5
 80281bc:	e9cd 1500 	strd	r1, r5, [sp]
 80281c0:	6860      	ldr	r0, [r4, #4]
 80281c2:	463a      	mov	r2, r7
 80281c4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80281c6:	fa0f f388 	sxth.w	r3, r8
 80281ca:	f104 0020 	add.w	r0, r4, #32
 80281ce:	f7ff fe1b 	bl	8027e08 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80281d2:	6863      	ldr	r3, [r4, #4]
 80281d4:	4607      	mov	r7, r0
 80281d6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80281d8:	6803      	ldr	r3, [r0, #0]
 80281da:	691b      	ldr	r3, [r3, #16]
 80281dc:	4798      	blx	r3
 80281de:	6830      	ldr	r0, [r6, #0]
 80281e0:	6803      	ldr	r3, [r0, #0]
 80281e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80281e4:	4798      	blx	r3
 80281e6:	4638      	mov	r0, r7
 80281e8:	b002      	add	sp, #8
 80281ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80281ee:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80281f2:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80281f6:	2204      	movs	r2, #4
 80281f8:	fb91 f2f2 	sdiv	r2, r1, r2
 80281fc:	fb08 2303 	mla	r3, r8, r3, r2
 8028200:	441f      	add	r7, r3
 8028202:	424b      	negs	r3, r1
 8028204:	f003 0303 	and.w	r3, r3, #3
 8028208:	f001 0103 	and.w	r1, r1, #3
 802820c:	e7d2      	b.n	80281b4 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802820e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8028212:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028216:	2900      	cmp	r1, #0
 8028218:	f04f 0202 	mov.w	r2, #2
 802821c:	fb91 f2f2 	sdiv	r2, r1, r2
 8028220:	f001 0101 	and.w	r1, r1, #1
 8028224:	fb08 2303 	mla	r3, r8, r3, r2
 8028228:	441f      	add	r7, r3
 802822a:	bfb8      	it	lt
 802822c:	4249      	neglt	r1, r1
 802822e:	e7c3      	b.n	80281b8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8028230:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8028234:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8028238:	fb08 f303 	mul.w	r3, r8, r3
 802823c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028240:	441f      	add	r7, r3
 8028242:	2100      	movs	r1, #0
 8028244:	e7b9      	b.n	80281ba <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8028246:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802824a:	fb08 f203 	mul.w	r2, r8, r3
 802824e:	8b23      	ldrh	r3, [r4, #24]
 8028250:	2103      	movs	r1, #3
 8028252:	fb13 2301 	smlabb	r3, r3, r1, r2
 8028256:	e7f3      	b.n	8028240 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028258:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802825c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8028260:	fb08 2303 	mla	r3, r8, r3, r2
 8028264:	e7ec      	b.n	8028240 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028266:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802826a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802826e:	fb08 f303 	mul.w	r3, r8, r3
 8028272:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8028276:	e7e3      	b.n	8028240 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8028278:	2701      	movs	r7, #1
 802827a:	e7b4      	b.n	80281e6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 802827c:	20013834 	.word	0x20013834

08028280 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8028280:	b510      	push	{r4, lr}
 8028282:	4b07      	ldr	r3, [pc, #28]	; (80282a0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8028284:	781b      	ldrb	r3, [r3, #0]
 8028286:	2b01      	cmp	r3, #1
 8028288:	d108      	bne.n	802829c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802828a:	6843      	ldr	r3, [r0, #4]
 802828c:	6814      	ldr	r4, [r2, #0]
 802828e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8028292:	680b      	ldr	r3, [r1, #0]
 8028294:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8028298:	6013      	str	r3, [r2, #0]
 802829a:	600c      	str	r4, [r1, #0]
 802829c:	bd10      	pop	{r4, pc}
 802829e:	bf00      	nop
 80282a0:	2001382c 	.word	0x2001382c

080282a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80282a4:	b513      	push	{r0, r1, r4, lr}
 80282a6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80282aa:	4604      	mov	r4, r0
 80282ac:	e9cd 2100 	strd	r2, r1, [sp]
 80282b0:	b9a3      	cbnz	r3, 80282dc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80282b2:	466a      	mov	r2, sp
 80282b4:	a901      	add	r1, sp, #4
 80282b6:	4620      	mov	r0, r4
 80282b8:	f7ff ffe2 	bl	8028280 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80282bc:	68a3      	ldr	r3, [r4, #8]
 80282be:	9901      	ldr	r1, [sp, #4]
 80282c0:	9a00      	ldr	r2, [sp, #0]
 80282c2:	1ac9      	subs	r1, r1, r3
 80282c4:	68e3      	ldr	r3, [r4, #12]
 80282c6:	9101      	str	r1, [sp, #4]
 80282c8:	1ad2      	subs	r2, r2, r3
 80282ca:	2a00      	cmp	r2, #0
 80282cc:	9200      	str	r2, [sp, #0]
 80282ce:	da0b      	bge.n	80282e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80282d0:	2301      	movs	r3, #1
 80282d2:	2900      	cmp	r1, #0
 80282d4:	da0e      	bge.n	80282f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80282d6:	f043 0304 	orr.w	r3, r3, #4
 80282da:	e013      	b.n	8028304 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80282dc:	f7ff fefc 	bl	80280d8 <_ZN8touchgfx6Canvas5closeEv>
 80282e0:	2800      	cmp	r0, #0
 80282e2:	d1e6      	bne.n	80282b2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80282e4:	b002      	add	sp, #8
 80282e6:	bd10      	pop	{r4, pc}
 80282e8:	6963      	ldr	r3, [r4, #20]
 80282ea:	429a      	cmp	r2, r3
 80282ec:	bfac      	ite	ge
 80282ee:	2302      	movge	r3, #2
 80282f0:	2300      	movlt	r3, #0
 80282f2:	e7ee      	b.n	80282d2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80282f4:	6920      	ldr	r0, [r4, #16]
 80282f6:	4281      	cmp	r1, r0
 80282f8:	bfac      	ite	ge
 80282fa:	2008      	movge	r0, #8
 80282fc:	2000      	movlt	r0, #0
 80282fe:	4318      	orrs	r0, r3
 8028300:	b2c3      	uxtb	r3, r0
 8028302:	b158      	cbz	r0, 802831c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8028304:	2200      	movs	r2, #0
 8028306:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802830a:	9901      	ldr	r1, [sp, #4]
 802830c:	9a00      	ldr	r2, [sp, #0]
 802830e:	66a1      	str	r1, [r4, #104]	; 0x68
 8028310:	66e2      	str	r2, [r4, #108]	; 0x6c
 8028312:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8028316:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802831a:	e7e3      	b.n	80282e4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802831c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8028320:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8028324:	4298      	cmp	r0, r3
 8028326:	d803      	bhi.n	8028330 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8028328:	f104 0020 	add.w	r0, r4, #32
 802832c:	f7ec fe34 	bl	8014f98 <_ZN8touchgfx7Outline6moveToEii>
 8028330:	2301      	movs	r3, #1
 8028332:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8028336:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802833a:	2300      	movs	r3, #0
 802833c:	e7e5      	b.n	802830a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802833e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8028340:	ab02      	add	r3, sp, #8
 8028342:	4604      	mov	r4, r0
 8028344:	f843 2d08 	str.w	r2, [r3, #-8]!
 8028348:	9101      	str	r1, [sp, #4]
 802834a:	461a      	mov	r2, r3
 802834c:	a901      	add	r1, sp, #4
 802834e:	f7ff ff97 	bl	8028280 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8028352:	68a3      	ldr	r3, [r4, #8]
 8028354:	9901      	ldr	r1, [sp, #4]
 8028356:	9a00      	ldr	r2, [sp, #0]
 8028358:	1ac9      	subs	r1, r1, r3
 802835a:	68e3      	ldr	r3, [r4, #12]
 802835c:	9101      	str	r1, [sp, #4]
 802835e:	1ad2      	subs	r2, r2, r3
 8028360:	2a00      	cmp	r2, #0
 8028362:	9200      	str	r2, [sp, #0]
 8028364:	db1c      	blt.n	80283a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8028366:	6963      	ldr	r3, [r4, #20]
 8028368:	429a      	cmp	r2, r3
 802836a:	bfac      	ite	ge
 802836c:	2002      	movge	r0, #2
 802836e:	2000      	movlt	r0, #0
 8028370:	2900      	cmp	r1, #0
 8028372:	db17      	blt.n	80283a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8028374:	6923      	ldr	r3, [r4, #16]
 8028376:	4299      	cmp	r1, r3
 8028378:	bfac      	ite	ge
 802837a:	2308      	movge	r3, #8
 802837c:	2300      	movlt	r3, #0
 802837e:	4303      	orrs	r3, r0
 8028380:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8028384:	b2dd      	uxtb	r5, r3
 8028386:	b978      	cbnz	r0, 80283a8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8028388:	f104 0020 	add.w	r0, r4, #32
 802838c:	f7ff fd30 	bl	8027df0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8028390:	9b01      	ldr	r3, [sp, #4]
 8028392:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028394:	9b00      	ldr	r3, [sp, #0]
 8028396:	6623      	str	r3, [r4, #96]	; 0x60
 8028398:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802839c:	b002      	add	sp, #8
 802839e:	bd70      	pop	{r4, r5, r6, pc}
 80283a0:	2001      	movs	r0, #1
 80283a2:	e7e5      	b.n	8028370 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80283a4:	2304      	movs	r3, #4
 80283a6:	e7ea      	b.n	802837e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80283a8:	b113      	cbz	r3, 80283b0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80283aa:	ea10 0305 	ands.w	r3, r0, r5
 80283ae:	d11c      	bne.n	80283ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80283b0:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80283b4:	f104 0620 	add.w	r6, r4, #32
 80283b8:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80283bc:	b98b      	cbnz	r3, 80283e2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80283be:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80283c2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80283c6:	4298      	cmp	r0, r3
 80283c8:	d802      	bhi.n	80283d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80283ca:	4630      	mov	r0, r6
 80283cc:	f7ec fde4 	bl	8014f98 <_ZN8touchgfx7Outline6moveToEii>
 80283d0:	2301      	movs	r3, #1
 80283d2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80283d6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80283da:	e9dd 2100 	ldrd	r2, r1, [sp]
 80283de:	4630      	mov	r0, r6
 80283e0:	e7d4      	b.n	802838c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80283e2:	4630      	mov	r0, r6
 80283e4:	f7ff fd04 	bl	8027df0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80283e8:	e7f7      	b.n	80283da <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80283ea:	461d      	mov	r5, r3
 80283ec:	e7d0      	b.n	8028390 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080283f0 <_ZN8touchgfx6CanvasD1Ev>:
 80283f0:	b510      	push	{r4, lr}
 80283f2:	4b04      	ldr	r3, [pc, #16]	; (8028404 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80283f4:	4604      	mov	r4, r0
 80283f6:	f840 3b20 	str.w	r3, [r0], #32
 80283fa:	f7ec f8c7 	bl	801458c <_ZN8touchgfx7OutlineD1Ev>
 80283fe:	4620      	mov	r0, r4
 8028400:	bd10      	pop	{r4, pc}
 8028402:	bf00      	nop
 8028404:	080302d8 	.word	0x080302d8

08028408 <_ZN8touchgfx6CanvasD0Ev>:
 8028408:	b510      	push	{r4, lr}
 802840a:	4604      	mov	r4, r0
 802840c:	f7ff fff0 	bl	80283f0 <_ZN8touchgfx6CanvasD1Ev>
 8028410:	4620      	mov	r0, r4
 8028412:	2170      	movs	r1, #112	; 0x70
 8028414:	f002 fd09 	bl	802ae2a <_ZdlPvj>
 8028418:	4620      	mov	r0, r4
 802841a:	bd10      	pop	{r4, pc}

0802841c <_ZN8touchgfx6CircleD1Ev>:
 802841c:	4770      	bx	lr

0802841e <_ZN8touchgfx6CircleD0Ev>:
 802841e:	b510      	push	{r4, lr}
 8028420:	2148      	movs	r1, #72	; 0x48
 8028422:	4604      	mov	r4, r0
 8028424:	f002 fd01 	bl	802ae2a <_ZdlPvj>
 8028428:	4620      	mov	r0, r4
 802842a:	bd10      	pop	{r4, pc}

0802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 802842c:	b508      	push	{r3, lr}
 802842e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8028432:	f7ea fbab 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028436:	bd08      	pop	{r3, pc}

08028438 <_ZN8touchgfx6CircleC1Ev>:
 8028438:	b510      	push	{r4, lr}
 802843a:	4604      	mov	r4, r0
 802843c:	f7ea fa42 	bl	80128c4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8028440:	4b08      	ldr	r3, [pc, #32]	; (8028464 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8028442:	6023      	str	r3, [r4, #0]
 8028444:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8028448:	2300      	movs	r3, #0
 802844a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 802844e:	f24b 4205 	movw	r2, #46085	; 0xb405
 8028452:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8028456:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802845a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 802845e:	60a3      	str	r3, [r4, #8]
 8028460:	4620      	mov	r0, r4
 8028462:	bd10      	pop	{r4, pc}
 8028464:	080302ec 	.word	0x080302ec

08028468 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8028468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802846c:	428a      	cmp	r2, r1
 802846e:	4680      	mov	r8, r0
 8028470:	4610      	mov	r0, r2
 8028472:	4699      	mov	r9, r3
 8028474:	bfa6      	itte	ge
 8028476:	460a      	movge	r2, r1
 8028478:	4603      	movge	r3, r0
 802847a:	460b      	movlt	r3, r1
 802847c:	1a99      	subs	r1, r3, r2
 802847e:	b085      	sub	sp, #20
 8028480:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8028484:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8028488:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802848a:	bfa4      	itt	ge
 802848c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8028490:	2200      	movge	r2, #0
 8028492:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8028496:	9300      	str	r3, [sp, #0]
 8028498:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 802849c:	f102 0b01 	add.w	fp, r2, #1
 80284a0:	2c00      	cmp	r4, #0
 80284a2:	f040 80af 	bne.w	8028604 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80284a6:	4610      	mov	r0, r2
 80284a8:	9201      	str	r2, [sp, #4]
 80284aa:	f7ea fb6f 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80284ae:	a903      	add	r1, sp, #12
 80284b0:	9003      	str	r0, [sp, #12]
 80284b2:	4650      	mov	r0, sl
 80284b4:	f7ea fa32 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284b8:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80284bc:	9a01      	ldr	r2, [sp, #4]
 80284be:	4408      	add	r0, r1
 80284c0:	f8d9 1000 	ldr.w	r1, [r9]
 80284c4:	4281      	cmp	r1, r0
 80284c6:	bfc8      	it	gt
 80284c8:	f8c9 0000 	strgt.w	r0, [r9]
 80284cc:	6839      	ldr	r1, [r7, #0]
 80284ce:	4288      	cmp	r0, r1
 80284d0:	bfc8      	it	gt
 80284d2:	6038      	strgt	r0, [r7, #0]
 80284d4:	4610      	mov	r0, r2
 80284d6:	f7ff ffa9 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80284da:	a903      	add	r1, sp, #12
 80284dc:	9003      	str	r0, [sp, #12]
 80284de:	4650      	mov	r0, sl
 80284e0:	f7ea fa1c 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284e4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80284e8:	1a10      	subs	r0, r2, r0
 80284ea:	6832      	ldr	r2, [r6, #0]
 80284ec:	4282      	cmp	r2, r0
 80284ee:	bfc8      	it	gt
 80284f0:	6030      	strgt	r0, [r6, #0]
 80284f2:	682a      	ldr	r2, [r5, #0]
 80284f4:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80284f8:	4290      	cmp	r0, r2
 80284fa:	fb9b f2f1 	sdiv	r2, fp, r1
 80284fe:	fb01 b212 	mls	r2, r1, r2, fp
 8028502:	eba1 0202 	sub.w	r2, r1, r2
 8028506:	bfc8      	it	gt
 8028508:	6028      	strgt	r0, [r5, #0]
 802850a:	fb92 f0f1 	sdiv	r0, r2, r1
 802850e:	fb01 2210 	mls	r2, r1, r0, r2
 8028512:	4493      	add	fp, r2
 8028514:	9b00      	ldr	r3, [sp, #0]
 8028516:	455b      	cmp	r3, fp
 8028518:	db2a      	blt.n	8028570 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802851a:	4658      	mov	r0, fp
 802851c:	f7ea fb36 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028520:	a903      	add	r1, sp, #12
 8028522:	9003      	str	r0, [sp, #12]
 8028524:	4650      	mov	r0, sl
 8028526:	f7ea f9f9 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802852a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802852e:	4410      	add	r0, r2
 8028530:	f8d9 2000 	ldr.w	r2, [r9]
 8028534:	4282      	cmp	r2, r0
 8028536:	bfc8      	it	gt
 8028538:	f8c9 0000 	strgt.w	r0, [r9]
 802853c:	683a      	ldr	r2, [r7, #0]
 802853e:	4290      	cmp	r0, r2
 8028540:	bfc8      	it	gt
 8028542:	6038      	strgt	r0, [r7, #0]
 8028544:	4658      	mov	r0, fp
 8028546:	f7ff ff71 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802854a:	a903      	add	r1, sp, #12
 802854c:	9003      	str	r0, [sp, #12]
 802854e:	4650      	mov	r0, sl
 8028550:	f7ea f9e4 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028554:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028558:	1a10      	subs	r0, r2, r0
 802855a:	6832      	ldr	r2, [r6, #0]
 802855c:	4282      	cmp	r2, r0
 802855e:	bfc8      	it	gt
 8028560:	6030      	strgt	r0, [r6, #0]
 8028562:	682a      	ldr	r2, [r5, #0]
 8028564:	4290      	cmp	r0, r2
 8028566:	bfc8      	it	gt
 8028568:	6028      	strgt	r0, [r5, #0]
 802856a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802856e:	e7d1      	b.n	8028514 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8028570:	9b00      	ldr	r3, [sp, #0]
 8028572:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028576:	455b      	cmp	r3, fp
 8028578:	dd27      	ble.n	80285ca <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802857a:	4618      	mov	r0, r3
 802857c:	f7ea fb06 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028580:	a903      	add	r1, sp, #12
 8028582:	9003      	str	r0, [sp, #12]
 8028584:	4650      	mov	r0, sl
 8028586:	f7ea f9c9 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802858a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802858e:	4410      	add	r0, r2
 8028590:	f8d9 2000 	ldr.w	r2, [r9]
 8028594:	4282      	cmp	r2, r0
 8028596:	bfc8      	it	gt
 8028598:	f8c9 0000 	strgt.w	r0, [r9]
 802859c:	683a      	ldr	r2, [r7, #0]
 802859e:	4290      	cmp	r0, r2
 80285a0:	bfc8      	it	gt
 80285a2:	6038      	strgt	r0, [r7, #0]
 80285a4:	9800      	ldr	r0, [sp, #0]
 80285a6:	f7ff ff41 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80285aa:	a903      	add	r1, sp, #12
 80285ac:	9003      	str	r0, [sp, #12]
 80285ae:	4650      	mov	r0, sl
 80285b0:	f7ea f9b4 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80285b4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80285b8:	1a10      	subs	r0, r2, r0
 80285ba:	6832      	ldr	r2, [r6, #0]
 80285bc:	4282      	cmp	r2, r0
 80285be:	bfc8      	it	gt
 80285c0:	6030      	strgt	r0, [r6, #0]
 80285c2:	682a      	ldr	r2, [r5, #0]
 80285c4:	4290      	cmp	r0, r2
 80285c6:	bfc8      	it	gt
 80285c8:	6028      	strgt	r0, [r5, #0]
 80285ca:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80285ce:	f8d9 1000 	ldr.w	r1, [r9]
 80285d2:	4291      	cmp	r1, r2
 80285d4:	bfc8      	it	gt
 80285d6:	f8c9 2000 	strgt.w	r2, [r9]
 80285da:	683a      	ldr	r2, [r7, #0]
 80285dc:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80285e0:	429a      	cmp	r2, r3
 80285e2:	bfb8      	it	lt
 80285e4:	603b      	strlt	r3, [r7, #0]
 80285e6:	6832      	ldr	r2, [r6, #0]
 80285e8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80285ec:	429a      	cmp	r2, r3
 80285ee:	bfc8      	it	gt
 80285f0:	6033      	strgt	r3, [r6, #0]
 80285f2:	682a      	ldr	r2, [r5, #0]
 80285f4:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80285f8:	429a      	cmp	r2, r3
 80285fa:	da00      	bge.n	80285fe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 80285fc:	602b      	str	r3, [r5, #0]
 80285fe:	b005      	add	sp, #20
 8028600:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028604:	2002      	movs	r0, #2
 8028606:	3401      	adds	r4, #1
 8028608:	fb94 f4f0 	sdiv	r4, r4, r0
 802860c:	4610      	mov	r0, r2
 802860e:	9201      	str	r2, [sp, #4]
 8028610:	f7ea fabc 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028614:	a903      	add	r1, sp, #12
 8028616:	9003      	str	r0, [sp, #12]
 8028618:	4650      	mov	r0, sl
 802861a:	f7ea f97f 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802861e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8028622:	9a01      	ldr	r2, [sp, #4]
 8028624:	4408      	add	r0, r1
 8028626:	f8d9 1000 	ldr.w	r1, [r9]
 802862a:	1b03      	subs	r3, r0, r4
 802862c:	4299      	cmp	r1, r3
 802862e:	bfc8      	it	gt
 8028630:	f8c9 3000 	strgt.w	r3, [r9]
 8028634:	6839      	ldr	r1, [r7, #0]
 8028636:	428b      	cmp	r3, r1
 8028638:	bfc8      	it	gt
 802863a:	603b      	strgt	r3, [r7, #0]
 802863c:	f8d9 1000 	ldr.w	r1, [r9]
 8028640:	4420      	add	r0, r4
 8028642:	4281      	cmp	r1, r0
 8028644:	bfc8      	it	gt
 8028646:	f8c9 0000 	strgt.w	r0, [r9]
 802864a:	6839      	ldr	r1, [r7, #0]
 802864c:	4288      	cmp	r0, r1
 802864e:	bfc8      	it	gt
 8028650:	6038      	strgt	r0, [r7, #0]
 8028652:	4610      	mov	r0, r2
 8028654:	f7ff feea 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028658:	a903      	add	r1, sp, #12
 802865a:	9003      	str	r0, [sp, #12]
 802865c:	4650      	mov	r0, sl
 802865e:	f7ea f95d 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028662:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028666:	1a10      	subs	r0, r2, r0
 8028668:	6832      	ldr	r2, [r6, #0]
 802866a:	1b01      	subs	r1, r0, r4
 802866c:	428a      	cmp	r2, r1
 802866e:	bfc8      	it	gt
 8028670:	6031      	strgt	r1, [r6, #0]
 8028672:	682a      	ldr	r2, [r5, #0]
 8028674:	4291      	cmp	r1, r2
 8028676:	bfc8      	it	gt
 8028678:	6029      	strgt	r1, [r5, #0]
 802867a:	6832      	ldr	r2, [r6, #0]
 802867c:	4420      	add	r0, r4
 802867e:	4282      	cmp	r2, r0
 8028680:	bfc8      	it	gt
 8028682:	6030      	strgt	r0, [r6, #0]
 8028684:	682a      	ldr	r2, [r5, #0]
 8028686:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802868a:	4290      	cmp	r0, r2
 802868c:	fb9b f2f1 	sdiv	r2, fp, r1
 8028690:	fb01 b212 	mls	r2, r1, r2, fp
 8028694:	eba1 0202 	sub.w	r2, r1, r2
 8028698:	bfc8      	it	gt
 802869a:	6028      	strgt	r0, [r5, #0]
 802869c:	fb92 f0f1 	sdiv	r0, r2, r1
 80286a0:	fb01 2210 	mls	r2, r1, r0, r2
 80286a4:	4493      	add	fp, r2
 80286a6:	9b00      	ldr	r3, [sp, #0]
 80286a8:	455b      	cmp	r3, fp
 80286aa:	db40      	blt.n	802872e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80286ac:	4658      	mov	r0, fp
 80286ae:	f7ea fa6d 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80286b2:	a903      	add	r1, sp, #12
 80286b4:	9003      	str	r0, [sp, #12]
 80286b6:	4650      	mov	r0, sl
 80286b8:	f7ea f930 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286bc:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80286c0:	4410      	add	r0, r2
 80286c2:	f8d9 2000 	ldr.w	r2, [r9]
 80286c6:	1b01      	subs	r1, r0, r4
 80286c8:	428a      	cmp	r2, r1
 80286ca:	bfc8      	it	gt
 80286cc:	f8c9 1000 	strgt.w	r1, [r9]
 80286d0:	683a      	ldr	r2, [r7, #0]
 80286d2:	4291      	cmp	r1, r2
 80286d4:	bfc8      	it	gt
 80286d6:	6039      	strgt	r1, [r7, #0]
 80286d8:	f8d9 2000 	ldr.w	r2, [r9]
 80286dc:	4420      	add	r0, r4
 80286de:	4282      	cmp	r2, r0
 80286e0:	bfc8      	it	gt
 80286e2:	f8c9 0000 	strgt.w	r0, [r9]
 80286e6:	683a      	ldr	r2, [r7, #0]
 80286e8:	4290      	cmp	r0, r2
 80286ea:	bfc8      	it	gt
 80286ec:	6038      	strgt	r0, [r7, #0]
 80286ee:	4658      	mov	r0, fp
 80286f0:	f7ff fe9c 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80286f4:	a903      	add	r1, sp, #12
 80286f6:	9003      	str	r0, [sp, #12]
 80286f8:	4650      	mov	r0, sl
 80286fa:	f7ea f90f 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286fe:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028702:	1a10      	subs	r0, r2, r0
 8028704:	6832      	ldr	r2, [r6, #0]
 8028706:	1b01      	subs	r1, r0, r4
 8028708:	428a      	cmp	r2, r1
 802870a:	bfc8      	it	gt
 802870c:	6031      	strgt	r1, [r6, #0]
 802870e:	682a      	ldr	r2, [r5, #0]
 8028710:	4291      	cmp	r1, r2
 8028712:	bfc8      	it	gt
 8028714:	6029      	strgt	r1, [r5, #0]
 8028716:	6832      	ldr	r2, [r6, #0]
 8028718:	4420      	add	r0, r4
 802871a:	4282      	cmp	r2, r0
 802871c:	bfc8      	it	gt
 802871e:	6030      	strgt	r0, [r6, #0]
 8028720:	682a      	ldr	r2, [r5, #0]
 8028722:	4290      	cmp	r0, r2
 8028724:	bfc8      	it	gt
 8028726:	6028      	strgt	r0, [r5, #0]
 8028728:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802872c:	e7bb      	b.n	80286a6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802872e:	9b00      	ldr	r3, [sp, #0]
 8028730:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028734:	455b      	cmp	r3, fp
 8028736:	f77f af62 	ble.w	80285fe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802873a:	4618      	mov	r0, r3
 802873c:	f7ea fa26 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028740:	a903      	add	r1, sp, #12
 8028742:	9003      	str	r0, [sp, #12]
 8028744:	4650      	mov	r0, sl
 8028746:	f7ea f8e9 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802874a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802874e:	4410      	add	r0, r2
 8028750:	f8d9 2000 	ldr.w	r2, [r9]
 8028754:	1b01      	subs	r1, r0, r4
 8028756:	428a      	cmp	r2, r1
 8028758:	bfc8      	it	gt
 802875a:	f8c9 1000 	strgt.w	r1, [r9]
 802875e:	683a      	ldr	r2, [r7, #0]
 8028760:	4291      	cmp	r1, r2
 8028762:	bfc8      	it	gt
 8028764:	6039      	strgt	r1, [r7, #0]
 8028766:	f8d9 2000 	ldr.w	r2, [r9]
 802876a:	4420      	add	r0, r4
 802876c:	4282      	cmp	r2, r0
 802876e:	bfc8      	it	gt
 8028770:	f8c9 0000 	strgt.w	r0, [r9]
 8028774:	683b      	ldr	r3, [r7, #0]
 8028776:	4298      	cmp	r0, r3
 8028778:	bfc8      	it	gt
 802877a:	6038      	strgt	r0, [r7, #0]
 802877c:	9800      	ldr	r0, [sp, #0]
 802877e:	f7ff fe55 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028782:	a903      	add	r1, sp, #12
 8028784:	9003      	str	r0, [sp, #12]
 8028786:	4650      	mov	r0, sl
 8028788:	f7ea f8c8 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802878c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8028790:	6832      	ldr	r2, [r6, #0]
 8028792:	1a18      	subs	r0, r3, r0
 8028794:	1b03      	subs	r3, r0, r4
 8028796:	429a      	cmp	r2, r3
 8028798:	bfc8      	it	gt
 802879a:	6033      	strgt	r3, [r6, #0]
 802879c:	682a      	ldr	r2, [r5, #0]
 802879e:	4293      	cmp	r3, r2
 80287a0:	bfc8      	it	gt
 80287a2:	602b      	strgt	r3, [r5, #0]
 80287a4:	6833      	ldr	r3, [r6, #0]
 80287a6:	4404      	add	r4, r0
 80287a8:	42a3      	cmp	r3, r4
 80287aa:	bfc8      	it	gt
 80287ac:	6034      	strgt	r4, [r6, #0]
 80287ae:	682b      	ldr	r3, [r5, #0]
 80287b0:	429c      	cmp	r4, r3
 80287b2:	bfc8      	it	gt
 80287b4:	602c      	strgt	r4, [r5, #0]
 80287b6:	e722      	b.n	80285fe <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080287b8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80287b8:	b530      	push	{r4, r5, lr}
 80287ba:	4604      	mov	r4, r0
 80287bc:	4608      	mov	r0, r1
 80287be:	4611      	mov	r1, r2
 80287c0:	461a      	mov	r2, r3
 80287c2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80287c6:	b089      	sub	sp, #36	; 0x24
 80287c8:	015b      	lsls	r3, r3, #5
 80287ca:	9304      	str	r3, [sp, #16]
 80287cc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80287d0:	2500      	movs	r5, #0
 80287d2:	015b      	lsls	r3, r3, #5
 80287d4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80287d8:	ab07      	add	r3, sp, #28
 80287da:	9302      	str	r3, [sp, #8]
 80287dc:	ab06      	add	r3, sp, #24
 80287de:	9301      	str	r3, [sp, #4]
 80287e0:	ab05      	add	r3, sp, #20
 80287e2:	9300      	str	r3, [sp, #0]
 80287e4:	ab04      	add	r3, sp, #16
 80287e6:	9505      	str	r5, [sp, #20]
 80287e8:	f7ff fe3e 	bl	8028468 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80287ec:	2520      	movs	r5, #32
 80287ee:	9a04      	ldr	r2, [sp, #16]
 80287f0:	9805      	ldr	r0, [sp, #20]
 80287f2:	fb92 f2f5 	sdiv	r2, r2, r5
 80287f6:	fb90 f0f5 	sdiv	r0, r0, r5
 80287fa:	b292      	uxth	r2, r2
 80287fc:	3002      	adds	r0, #2
 80287fe:	1a80      	subs	r0, r0, r2
 8028800:	9b06      	ldr	r3, [sp, #24]
 8028802:	9907      	ldr	r1, [sp, #28]
 8028804:	fb93 f3f5 	sdiv	r3, r3, r5
 8028808:	fb91 f1f5 	sdiv	r1, r1, r5
 802880c:	b29b      	uxth	r3, r3
 802880e:	3102      	adds	r1, #2
 8028810:	1ac9      	subs	r1, r1, r3
 8028812:	3a01      	subs	r2, #1
 8028814:	3b01      	subs	r3, #1
 8028816:	80a0      	strh	r0, [r4, #4]
 8028818:	4620      	mov	r0, r4
 802881a:	8022      	strh	r2, [r4, #0]
 802881c:	8063      	strh	r3, [r4, #2]
 802881e:	80e1      	strh	r1, [r4, #6]
 8028820:	b009      	add	sp, #36	; 0x24
 8028822:	bd30      	pop	{r4, r5, pc}

08028824 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8028824:	b510      	push	{r4, lr}
 8028826:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802882a:	4604      	mov	r4, r0
 802882c:	f7ff ffc4 	bl	80287b8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028830:	4620      	mov	r0, r4
 8028832:	bd10      	pop	{r4, pc}

08028834 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8028834:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028836:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802883a:	4606      	mov	r6, r0
 802883c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8028840:	6813      	ldr	r3, [r2, #0]
 8028842:	42a5      	cmp	r5, r4
 8028844:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8028848:	da2b      	bge.n	80288a2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802884a:	42a3      	cmp	r3, r4
 802884c:	dd14      	ble.n	8028878 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802884e:	b168      	cbz	r0, 802886c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028850:	4267      	negs	r7, r4
 8028852:	fb97 f2f0 	sdiv	r2, r7, r0
 8028856:	fb00 7212 	mls	r2, r0, r2, r7
 802885a:	1a82      	subs	r2, r0, r2
 802885c:	fb92 f7f0 	sdiv	r7, r2, r0
 8028860:	fb00 2017 	mls	r0, r0, r7, r2
 8028864:	1a24      	subs	r4, r4, r0
 8028866:	42ac      	cmp	r4, r5
 8028868:	bfb8      	it	lt
 802886a:	462c      	movlt	r4, r5
 802886c:	4630      	mov	r0, r6
 802886e:	4622      	mov	r2, r4
 8028870:	f7ff ffa2 	bl	80287b8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028874:	4630      	mov	r0, r6
 8028876:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028878:	42ab      	cmp	r3, r5
 802887a:	dd0e      	ble.n	802889a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802887c:	b168      	cbz	r0, 802889a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802887e:	425f      	negs	r7, r3
 8028880:	fb97 f2f0 	sdiv	r2, r7, r0
 8028884:	fb00 7212 	mls	r2, r0, r2, r7
 8028888:	1a82      	subs	r2, r0, r2
 802888a:	fb92 f7f0 	sdiv	r7, r2, r0
 802888e:	fb00 2017 	mls	r0, r0, r7, r2
 8028892:	1a1b      	subs	r3, r3, r0
 8028894:	42ab      	cmp	r3, r5
 8028896:	bfb8      	it	lt
 8028898:	462b      	movlt	r3, r5
 802889a:	4622      	mov	r2, r4
 802889c:	461c      	mov	r4, r3
 802889e:	4613      	mov	r3, r2
 80288a0:	e7e4      	b.n	802886c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288a2:	42a3      	cmp	r3, r4
 80288a4:	da10      	bge.n	80288c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80288a6:	b148      	cbz	r0, 80288bc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80288a8:	fb94 f2f0 	sdiv	r2, r4, r0
 80288ac:	fb00 4212 	mls	r2, r0, r2, r4
 80288b0:	1a82      	subs	r2, r0, r2
 80288b2:	fb92 f7f0 	sdiv	r7, r2, r0
 80288b6:	fb00 2017 	mls	r0, r0, r7, r2
 80288ba:	4404      	add	r4, r0
 80288bc:	42a5      	cmp	r5, r4
 80288be:	bfa8      	it	ge
 80288c0:	4625      	movge	r5, r4
 80288c2:	461c      	mov	r4, r3
 80288c4:	462b      	mov	r3, r5
 80288c6:	e7d1      	b.n	802886c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288c8:	42ab      	cmp	r3, r5
 80288ca:	dacf      	bge.n	802886c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288cc:	2800      	cmp	r0, #0
 80288ce:	d0cd      	beq.n	802886c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80288d0:	fb93 f2f0 	sdiv	r2, r3, r0
 80288d4:	fb00 3212 	mls	r2, r0, r2, r3
 80288d8:	1a82      	subs	r2, r0, r2
 80288da:	fb92 f7f0 	sdiv	r7, r2, r0
 80288de:	fb00 2017 	mls	r0, r0, r7, r2
 80288e2:	4403      	add	r3, r0
 80288e4:	42ab      	cmp	r3, r5
 80288e6:	bfa8      	it	ge
 80288e8:	462b      	movge	r3, r5
 80288ea:	e7bf      	b.n	802886c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080288ec <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80288ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80288f0:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80288f4:	42ae      	cmp	r6, r5
 80288f6:	bfa2      	ittt	ge
 80288f8:	4633      	movge	r3, r6
 80288fa:	462e      	movge	r6, r5
 80288fc:	461d      	movge	r5, r3
 80288fe:	1bab      	subs	r3, r5, r6
 8028900:	468b      	mov	fp, r1
 8028902:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8028904:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8028908:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802890c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028910:	f04f 0220 	mov.w	r2, #32
 8028914:	b0ab      	sub	sp, #172	; 0xac
 8028916:	4604      	mov	r4, r0
 8028918:	bfa4      	itt	ge
 802891a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802891e:	2600      	movge	r6, #0
 8028920:	fb99 f9f2 	sdiv	r9, r9, r2
 8028924:	fb9a faf2 	sdiv	sl, sl, r2
 8028928:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802892a:	2900      	cmp	r1, #0
 802892c:	f000 80f5 	beq.w	8028b1a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8028930:	f9bb 0000 	ldrsh.w	r0, [fp]
 8028934:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8028938:	eba9 0700 	sub.w	r7, r9, r0
 802893c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8028940:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8028944:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8028948:	ebaa 0802 	sub.w	r8, sl, r2
 802894c:	4407      	add	r7, r0
 802894e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8028952:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8028956:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802895a:	b23f      	sxth	r7, r7
 802895c:	4490      	add	r8, r2
 802895e:	eba9 0707 	sub.w	r7, r9, r7
 8028962:	fa0f f888 	sxth.w	r8, r8
 8028966:	ebaa 0808 	sub.w	r8, sl, r8
 802896a:	2f00      	cmp	r7, #0
 802896c:	bfb8      	it	lt
 802896e:	427f      	neglt	r7, r7
 8028970:	f1b8 0f00 	cmp.w	r8, #0
 8028974:	bfb8      	it	lt
 8028976:	f1c8 0800 	rsblt	r8, r8, #0
 802897a:	45bc      	cmp	ip, r7
 802897c:	bfcc      	ite	gt
 802897e:	f10c 0701 	addgt.w	r7, ip, #1
 8028982:	3701      	addle	r7, #1
 8028984:	4540      	cmp	r0, r8
 8028986:	bfc8      	it	gt
 8028988:	f100 0801 	addgt.w	r8, r0, #1
 802898c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8028990:	f100 0001 	add.w	r0, r0, #1
 8028994:	ea4f 0060 	mov.w	r0, r0, asr #1
 8028998:	f04f 0202 	mov.w	r2, #2
 802899c:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80289a0:	fb91 f1f2 	sdiv	r1, r1, r2
 80289a4:	eba3 0301 	sub.w	r3, r3, r1
 80289a8:	bfd8      	it	le
 80289aa:	f108 0801 	addle.w	r8, r8, #1
 80289ae:	9201      	str	r2, [sp, #4]
 80289b0:	930d      	str	r3, [sp, #52]	; 0x34
 80289b2:	f7ea f8cb 	bl	8012b4c <_ZN8touchgfx7CWRUtil4sineEi>
 80289b6:	a92a      	add	r1, sp, #168	; 0xa8
 80289b8:	fb08 f808 	mul.w	r8, r8, r8
 80289bc:	f841 0d70 	str.w	r0, [r1, #-112]!
 80289c0:	a80d      	add	r0, sp, #52	; 0x34
 80289c2:	f7e9 ffab 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80289c6:	fb07 8707 	mla	r7, r7, r7, r8
 80289ca:	f04f 0c20 	mov.w	ip, #32
 80289ce:	fb90 f0fc 	sdiv	r0, r0, ip
 80289d2:	4340      	muls	r0, r0
 80289d4:	4287      	cmp	r7, r0
 80289d6:	9a01      	ldr	r2, [sp, #4]
 80289d8:	da04      	bge.n	80289e4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80289da:	2401      	movs	r4, #1
 80289dc:	4620      	mov	r0, r4
 80289de:	b02b      	add	sp, #172	; 0xac
 80289e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80289e4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80289e6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80289e8:	fb91 f3f2 	sdiv	r3, r1, r2
 80289ec:	4403      	add	r3, r0
 80289ee:	fb93 f3fc 	sdiv	r3, r3, ip
 80289f2:	f9bb 1000 	ldrsh.w	r1, [fp]
 80289f6:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80289fa:	440a      	add	r2, r1
 80289fc:	b212      	sxth	r2, r2
 80289fe:	454a      	cmp	r2, r9
 8028a00:	bfa8      	it	ge
 8028a02:	464a      	movge	r2, r9
 8028a04:	428a      	cmp	r2, r1
 8028a06:	bfac      	ite	ge
 8028a08:	eba9 0902 	subge.w	r9, r9, r2
 8028a0c:	eba9 0901 	sublt.w	r9, r9, r1
 8028a10:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8028a14:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8028a18:	440a      	add	r2, r1
 8028a1a:	b212      	sxth	r2, r2
 8028a1c:	4552      	cmp	r2, sl
 8028a1e:	bfa8      	it	ge
 8028a20:	4652      	movge	r2, sl
 8028a22:	428a      	cmp	r2, r1
 8028a24:	bfac      	ite	ge
 8028a26:	ebaa 0a02 	subge.w	sl, sl, r2
 8028a2a:	ebaa 0a01 	sublt.w	sl, sl, r1
 8028a2e:	3301      	adds	r3, #1
 8028a30:	fb0a fa0a 	mul.w	sl, sl, sl
 8028a34:	fb09 a909 	mla	r9, r9, r9, sl
 8028a38:	435b      	muls	r3, r3
 8028a3a:	4599      	cmp	r9, r3
 8028a3c:	dccd      	bgt.n	80289da <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8028a3e:	465a      	mov	r2, fp
 8028a40:	4621      	mov	r1, r4
 8028a42:	a80e      	add	r0, sp, #56	; 0x38
 8028a44:	f7ff faae 	bl	8027fa4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8028a48:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8028a4a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8028a4c:	9209      	str	r2, [sp, #36]	; 0x24
 8028a4e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8028a52:	930a      	str	r3, [sp, #40]	; 0x28
 8028a54:	dd07      	ble.n	8028a66 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8028a56:	2102      	movs	r1, #2
 8028a58:	fb93 f3f1 	sdiv	r3, r3, r1
 8028a5c:	4413      	add	r3, r2
 8028a5e:	930a      	str	r3, [sp, #40]	; 0x28
 8028a60:	fb93 f3f1 	sdiv	r3, r3, r1
 8028a64:	9309      	str	r3, [sp, #36]	; 0x24
 8028a66:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028a6a:	4630      	mov	r0, r6
 8028a6c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028a70:	930b      	str	r3, [sp, #44]	; 0x2c
 8028a72:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8028a76:	f7ea f889 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028a7a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8028a7e:	f04f 0a02 	mov.w	sl, #2
 8028a82:	f849 0d74 	str.w	r0, [r9, #-116]!
 8028a86:	a80b      	add	r0, sp, #44	; 0x2c
 8028a88:	4649      	mov	r1, r9
 8028a8a:	f7e9 ff47 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028a8e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028a90:	fb90 f0fa 	sdiv	r0, r0, sl
 8028a94:	eb00 0b03 	add.w	fp, r0, r3
 8028a98:	4630      	mov	r0, r6
 8028a9a:	f7ff fcc7 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028a9e:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8028aa2:	017f      	lsls	r7, r7, #5
 8028aa4:	f848 0d78 	str.w	r0, [r8, #-120]!
 8028aa8:	a80b      	add	r0, sp, #44	; 0x2c
 8028aaa:	4641      	mov	r1, r8
 8028aac:	f7e9 ff36 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028ab0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028ab2:	fb90 f0fa 	sdiv	r0, r0, sl
 8028ab6:	4659      	mov	r1, fp
 8028ab8:	1a12      	subs	r2, r2, r0
 8028aba:	a80e      	add	r0, sp, #56	; 0x38
 8028abc:	f7ff fbf2 	bl	80282a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8028ac0:	f106 0a20 	add.w	sl, r6, #32
 8028ac4:	bb67      	cbnz	r7, 8028b20 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8028ac6:	46b3      	mov	fp, r6
 8028ac8:	45aa      	cmp	sl, r5
 8028aca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028acc:	dc33      	bgt.n	8028b36 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8028ace:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028ad0:	4650      	mov	r0, sl
 8028ad2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8028ad6:	920b      	str	r2, [sp, #44]	; 0x2c
 8028ad8:	f7ea f858 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028adc:	4641      	mov	r1, r8
 8028ade:	900c      	str	r0, [sp, #48]	; 0x30
 8028ae0:	a80b      	add	r0, sp, #44	; 0x2c
 8028ae2:	f7e9 ff1b 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028ae6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8028ae8:	2302      	movs	r3, #2
 8028aea:	fb90 f0f3 	sdiv	r0, r0, r3
 8028aee:	eb00 0b02 	add.w	fp, r0, r2
 8028af2:	4650      	mov	r0, sl
 8028af4:	f7ff fc9a 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028af8:	4649      	mov	r1, r9
 8028afa:	900d      	str	r0, [sp, #52]	; 0x34
 8028afc:	a80b      	add	r0, sp, #44	; 0x2c
 8028afe:	f7e9 ff0d 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028b02:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028b04:	2302      	movs	r3, #2
 8028b06:	4659      	mov	r1, fp
 8028b08:	fb90 f0f3 	sdiv	r0, r0, r3
 8028b0c:	1a12      	subs	r2, r2, r0
 8028b0e:	a80e      	add	r0, sp, #56	; 0x38
 8028b10:	46d3      	mov	fp, sl
 8028b12:	f7ff fc14 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028b16:	44ba      	add	sl, r7
 8028b18:	e7d6      	b.n	8028ac8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8028b1a:	fb93 f3f2 	sdiv	r3, r3, r2
 8028b1e:	e768      	b.n	80289f2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8028b20:	fb9a f2f7 	sdiv	r2, sl, r7
 8028b24:	fb07 a212 	mls	r2, r7, r2, sl
 8028b28:	1aba      	subs	r2, r7, r2
 8028b2a:	fb92 f1f7 	sdiv	r1, r2, r7
 8028b2e:	fb07 2211 	mls	r2, r7, r1, r2
 8028b32:	4492      	add	sl, r2
 8028b34:	e7c7      	b.n	8028ac6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8028b36:	45ab      	cmp	fp, r5
 8028b38:	da23      	bge.n	8028b82 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8028b3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028b3c:	4628      	mov	r0, r5
 8028b3e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8028b42:	920b      	str	r2, [sp, #44]	; 0x2c
 8028b44:	f7ea f822 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028b48:	4641      	mov	r1, r8
 8028b4a:	900c      	str	r0, [sp, #48]	; 0x30
 8028b4c:	a80b      	add	r0, sp, #44	; 0x2c
 8028b4e:	f7e9 fee5 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028b52:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028b54:	f04f 0a02 	mov.w	sl, #2
 8028b58:	fb90 f0fa 	sdiv	r0, r0, sl
 8028b5c:	4403      	add	r3, r0
 8028b5e:	4628      	mov	r0, r5
 8028b60:	9301      	str	r3, [sp, #4]
 8028b62:	f7ff fc63 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028b66:	4649      	mov	r1, r9
 8028b68:	900d      	str	r0, [sp, #52]	; 0x34
 8028b6a:	a80b      	add	r0, sp, #44	; 0x2c
 8028b6c:	f7e9 fed6 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028b70:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028b72:	9b01      	ldr	r3, [sp, #4]
 8028b74:	fb90 f0fa 	sdiv	r0, r0, sl
 8028b78:	4619      	mov	r1, r3
 8028b7a:	1a12      	subs	r2, r2, r0
 8028b7c:	a80e      	add	r0, sp, #56	; 0x38
 8028b7e:	f7ff fbde 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028b82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028b84:	b99b      	cbnz	r3, 8028bae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8028b86:	1bad      	subs	r5, r5, r6
 8028b88:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8028b8c:	da04      	bge.n	8028b98 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028b8e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8028b92:	a80e      	add	r0, sp, #56	; 0x38
 8028b94:	f7ff fbd3 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028b98:	21ff      	movs	r1, #255	; 0xff
 8028b9a:	a80e      	add	r0, sp, #56	; 0x38
 8028b9c:	f7ff fabe 	bl	802811c <_ZN8touchgfx6Canvas6renderEh>
 8028ba0:	4604      	mov	r4, r0
 8028ba2:	4b8a      	ldr	r3, [pc, #552]	; (8028dcc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8028ba4:	930e      	str	r3, [sp, #56]	; 0x38
 8028ba6:	a816      	add	r0, sp, #88	; 0x58
 8028ba8:	f7eb fcf0 	bl	801458c <_ZN8touchgfx7OutlineD1Ev>
 8028bac:	e716      	b.n	80289dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8028bae:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8028bb2:	429a      	cmp	r2, r3
 8028bb4:	f0c0 8107 	bcc.w	8028dc6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8028bb8:	1bab      	subs	r3, r5, r6
 8028bba:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8028bbe:	9301      	str	r3, [sp, #4]
 8028bc0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028bc4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8028bc8:	da43      	bge.n	8028c52 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028bca:	4628      	mov	r0, r5
 8028bcc:	f7e9 ffde 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028bd0:	4649      	mov	r1, r9
 8028bd2:	900d      	str	r0, [sp, #52]	; 0x34
 8028bd4:	a809      	add	r0, sp, #36	; 0x24
 8028bd6:	f7e9 fea1 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028bda:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028bdc:	18c3      	adds	r3, r0, r3
 8028bde:	4628      	mov	r0, r5
 8028be0:	9303      	str	r3, [sp, #12]
 8028be2:	f7ff fc23 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028be6:	4649      	mov	r1, r9
 8028be8:	900d      	str	r0, [sp, #52]	; 0x34
 8028bea:	a809      	add	r0, sp, #36	; 0x24
 8028bec:	f7e9 fe96 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028bf0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028bf2:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8028bf6:	1a1b      	subs	r3, r3, r0
 8028bf8:	9302      	str	r3, [sp, #8]
 8028bfa:	9204      	str	r2, [sp, #16]
 8028bfc:	eb0a 0305 	add.w	r3, sl, r5
 8028c00:	9a04      	ldr	r2, [sp, #16]
 8028c02:	4293      	cmp	r3, r2
 8028c04:	da25      	bge.n	8028c52 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028c06:	4618      	mov	r0, r3
 8028c08:	9306      	str	r3, [sp, #24]
 8028c0a:	f7e9 ffbf 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028c0e:	4649      	mov	r1, r9
 8028c10:	900d      	str	r0, [sp, #52]	; 0x34
 8028c12:	a80a      	add	r0, sp, #40	; 0x28
 8028c14:	f7e9 fe82 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c18:	9b03      	ldr	r3, [sp, #12]
 8028c1a:	2202      	movs	r2, #2
 8028c1c:	fb90 f0f2 	sdiv	r0, r0, r2
 8028c20:	18c3      	adds	r3, r0, r3
 8028c22:	9305      	str	r3, [sp, #20]
 8028c24:	9b06      	ldr	r3, [sp, #24]
 8028c26:	9207      	str	r2, [sp, #28]
 8028c28:	4618      	mov	r0, r3
 8028c2a:	f7ff fbff 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028c2e:	a92a      	add	r1, sp, #168	; 0xa8
 8028c30:	f841 0d78 	str.w	r0, [r1, #-120]!
 8028c34:	a80a      	add	r0, sp, #40	; 0x28
 8028c36:	f7e9 fe71 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c3a:	9b02      	ldr	r3, [sp, #8]
 8028c3c:	9a07      	ldr	r2, [sp, #28]
 8028c3e:	9905      	ldr	r1, [sp, #20]
 8028c40:	fb90 f2f2 	sdiv	r2, r0, r2
 8028c44:	a80e      	add	r0, sp, #56	; 0x38
 8028c46:	1a9a      	subs	r2, r3, r2
 8028c48:	f7ff fb79 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028c4c:	9b06      	ldr	r3, [sp, #24]
 8028c4e:	4453      	add	r3, sl
 8028c50:	e7d6      	b.n	8028c00 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8028c52:	45ab      	cmp	fp, r5
 8028c54:	da25      	bge.n	8028ca2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8028c56:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028c5a:	4628      	mov	r0, r5
 8028c5c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028c60:	930b      	str	r3, [sp, #44]	; 0x2c
 8028c62:	f7e9 ff93 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028c66:	4641      	mov	r1, r8
 8028c68:	900c      	str	r0, [sp, #48]	; 0x30
 8028c6a:	a80b      	add	r0, sp, #44	; 0x2c
 8028c6c:	f7e9 fe56 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c70:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028c72:	2202      	movs	r2, #2
 8028c74:	fb90 f0f2 	sdiv	r0, r0, r2
 8028c78:	eb00 0903 	add.w	r9, r0, r3
 8028c7c:	4628      	mov	r0, r5
 8028c7e:	9202      	str	r2, [sp, #8]
 8028c80:	f7ff fbd4 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028c84:	a92a      	add	r1, sp, #168	; 0xa8
 8028c86:	f841 0d74 	str.w	r0, [r1, #-116]!
 8028c8a:	a80b      	add	r0, sp, #44	; 0x2c
 8028c8c:	f7e9 fe46 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028c90:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028c92:	9a02      	ldr	r2, [sp, #8]
 8028c94:	fb90 f2f2 	sdiv	r2, r0, r2
 8028c98:	4649      	mov	r1, r9
 8028c9a:	1a9a      	subs	r2, r3, r2
 8028c9c:	a80e      	add	r0, sp, #56	; 0x38
 8028c9e:	f7ff fb4e 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028ca2:	46d9      	mov	r9, fp
 8028ca4:	2502      	movs	r5, #2
 8028ca6:	45b1      	cmp	r9, r6
 8028ca8:	db25      	blt.n	8028cf6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8028caa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028cae:	4648      	mov	r0, r9
 8028cb0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028cb4:	930b      	str	r3, [sp, #44]	; 0x2c
 8028cb6:	f7e9 ff69 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028cba:	4641      	mov	r1, r8
 8028cbc:	900c      	str	r0, [sp, #48]	; 0x30
 8028cbe:	a80b      	add	r0, sp, #44	; 0x2c
 8028cc0:	f7e9 fe2c 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028cc4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028cc6:	fb90 f0f5 	sdiv	r0, r0, r5
 8028cca:	eb00 0b03 	add.w	fp, r0, r3
 8028cce:	4648      	mov	r0, r9
 8028cd0:	f7ff fbac 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028cd4:	a90d      	add	r1, sp, #52	; 0x34
 8028cd6:	900d      	str	r0, [sp, #52]	; 0x34
 8028cd8:	a80b      	add	r0, sp, #44	; 0x2c
 8028cda:	f7e9 fe1f 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028cde:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028ce0:	fb90 f0f5 	sdiv	r0, r0, r5
 8028ce4:	4659      	mov	r1, fp
 8028ce6:	1a12      	subs	r2, r2, r0
 8028ce8:	a80e      	add	r0, sp, #56	; 0x38
 8028cea:	46cb      	mov	fp, r9
 8028cec:	f7ff fb27 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028cf0:	eba9 0907 	sub.w	r9, r9, r7
 8028cf4:	e7d7      	b.n	8028ca6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8028cf6:	455e      	cmp	r6, fp
 8028cf8:	da22      	bge.n	8028d40 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8028cfa:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8028cfe:	4630      	mov	r0, r6
 8028d00:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028d04:	930b      	str	r3, [sp, #44]	; 0x2c
 8028d06:	f7e9 ff41 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028d0a:	4641      	mov	r1, r8
 8028d0c:	900c      	str	r0, [sp, #48]	; 0x30
 8028d0e:	a80b      	add	r0, sp, #44	; 0x2c
 8028d10:	f7e9 fe04 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d14:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8028d16:	2502      	movs	r5, #2
 8028d18:	fb90 f0f5 	sdiv	r0, r0, r5
 8028d1c:	4407      	add	r7, r0
 8028d1e:	4630      	mov	r0, r6
 8028d20:	f7ff fb84 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028d24:	a92a      	add	r1, sp, #168	; 0xa8
 8028d26:	f841 0d74 	str.w	r0, [r1, #-116]!
 8028d2a:	a80b      	add	r0, sp, #44	; 0x2c
 8028d2c:	f7e9 fdf6 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d30:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028d32:	fb90 f0f5 	sdiv	r0, r0, r5
 8028d36:	4639      	mov	r1, r7
 8028d38:	1a12      	subs	r2, r2, r0
 8028d3a:	a80e      	add	r0, sp, #56	; 0x38
 8028d3c:	f7ff faff 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028d40:	9b01      	ldr	r3, [sp, #4]
 8028d42:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028d46:	f6bf af27 	bge.w	8028b98 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028d4a:	4630      	mov	r0, r6
 8028d4c:	f7e9 ff1e 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028d50:	ad2a      	add	r5, sp, #168	; 0xa8
 8028d52:	f04f 0b02 	mov.w	fp, #2
 8028d56:	f845 0d74 	str.w	r0, [r5, #-116]!
 8028d5a:	a809      	add	r0, sp, #36	; 0x24
 8028d5c:	4629      	mov	r1, r5
 8028d5e:	f7e9 fddd 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d62:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028d64:	eb00 0903 	add.w	r9, r0, r3
 8028d68:	4630      	mov	r0, r6
 8028d6a:	f7ff fb5f 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028d6e:	4629      	mov	r1, r5
 8028d70:	900d      	str	r0, [sp, #52]	; 0x34
 8028d72:	a809      	add	r0, sp, #36	; 0x24
 8028d74:	f7e9 fdd2 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d78:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028d7a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8028d7e:	eba3 0800 	sub.w	r8, r3, r0
 8028d82:	4454      	add	r4, sl
 8028d84:	42a6      	cmp	r6, r4
 8028d86:	f77f af07 	ble.w	8028b98 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8028d8a:	4620      	mov	r0, r4
 8028d8c:	f7e9 fefe 	bl	8012b8c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028d90:	4629      	mov	r1, r5
 8028d92:	900d      	str	r0, [sp, #52]	; 0x34
 8028d94:	a80a      	add	r0, sp, #40	; 0x28
 8028d96:	f7e9 fdc1 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028d9a:	fb90 f0fb 	sdiv	r0, r0, fp
 8028d9e:	eb00 0709 	add.w	r7, r0, r9
 8028da2:	4620      	mov	r0, r4
 8028da4:	f7ff fb42 	bl	802842c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028da8:	a90c      	add	r1, sp, #48	; 0x30
 8028daa:	900c      	str	r0, [sp, #48]	; 0x30
 8028dac:	a80a      	add	r0, sp, #40	; 0x28
 8028dae:	f7e9 fdb5 	bl	801291c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028db2:	4639      	mov	r1, r7
 8028db4:	fb90 f2fb 	sdiv	r2, r0, fp
 8028db8:	a80e      	add	r0, sp, #56	; 0x38
 8028dba:	eba8 0202 	sub.w	r2, r8, r2
 8028dbe:	f7ff fabe 	bl	802833e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028dc2:	4454      	add	r4, sl
 8028dc4:	e7de      	b.n	8028d84 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8028dc6:	2400      	movs	r4, #0
 8028dc8:	e6eb      	b.n	8028ba2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8028dca:	bf00      	nop
 8028dcc:	080302d8 	.word	0x080302d8

08028dd0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8028dd0:	b570      	push	{r4, r5, r6, lr}
 8028dd2:	790b      	ldrb	r3, [r1, #4]
 8028dd4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8028dd8:	2b00      	cmp	r3, #0
 8028dda:	bf0c      	ite	eq
 8028ddc:	2301      	moveq	r3, #1
 8028dde:	2300      	movne	r3, #0
 8028de0:	4604      	mov	r4, r0
 8028de2:	460e      	mov	r6, r1
 8028de4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8028de8:	d109      	bne.n	8028dfe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8028dea:	b14d      	cbz	r5, 8028e00 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8028dec:	7933      	ldrb	r3, [r6, #4]
 8028dee:	2b01      	cmp	r3, #1
 8028df0:	d10c      	bne.n	8028e0c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028df2:	6823      	ldr	r3, [r4, #0]
 8028df4:	4620      	mov	r0, r4
 8028df6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8028df8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8028dfc:	4718      	bx	r3
 8028dfe:	b12d      	cbz	r5, 8028e0c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028e00:	6823      	ldr	r3, [r4, #0]
 8028e02:	4620      	mov	r0, r4
 8028e04:	695b      	ldr	r3, [r3, #20]
 8028e06:	4798      	blx	r3
 8028e08:	2d00      	cmp	r5, #0
 8028e0a:	d1ef      	bne.n	8028dec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8028e0c:	bd70      	pop	{r4, r5, r6, pc}

08028e0e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8028e0e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8028e12:	4770      	bx	lr

08028e14 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8028e14:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8028e18:	4770      	bx	lr

08028e1a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8028e1a:	6802      	ldr	r2, [r0, #0]
 8028e1c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e20:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028e22:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e26:	4710      	bx	r2

08028e28 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8028e28:	6802      	ldr	r2, [r0, #0]
 8028e2a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e2e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028e30:	eef0 0a40 	vmov.f32	s1, s0
 8028e34:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e38:	4710      	bx	r2

08028e3a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8028e3a:	6802      	ldr	r2, [r0, #0]
 8028e3c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e40:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028e42:	eeb0 1a40 	vmov.f32	s2, s0
 8028e46:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e4a:	4710      	bx	r2

08028e4c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8028e4c:	6802      	ldr	r2, [r0, #0]
 8028e4e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e52:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028e54:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e58:	4710      	bx	r2

08028e5a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8028e5a:	6802      	ldr	r2, [r0, #0]
 8028e5c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028e60:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028e62:	eef0 0a40 	vmov.f32	s1, s0
 8028e66:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e6a:	4710      	bx	r2

08028e6c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8028e6c:	6802      	ldr	r2, [r0, #0]
 8028e6e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028e72:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028e74:	eeb0 1a40 	vmov.f32	s2, s0
 8028e78:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e7c:	4710      	bx	r2

08028e7e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8028e7e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028e82:	4770      	bx	lr

08028e84 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8028e84:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8028e88:	4770      	bx	lr

08028e8a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8028e8a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8028e8e:	4770      	bx	lr

08028e90 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8028e90:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8028e94:	4770      	bx	lr

08028e96 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8028e96:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8028e9a:	4770      	bx	lr

08028e9c <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8028e9c:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8028ea0:	4770      	bx	lr

08028ea2 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8028ea2:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8028ea6:	4770      	bx	lr

08028ea8 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8028ea8:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8028eac:	4770      	bx	lr

08028eae <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8028eae:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8028eb2:	4770      	bx	lr

08028eb4 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8028eb4:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8028eb8:	4770      	bx	lr

08028eba <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8028eba:	ee07 2a90 	vmov	s15, r2
 8028ebe:	6803      	ldr	r3, [r0, #0]
 8028ec0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8028ec4:	ee07 1a90 	vmov	s15, r1
 8028ec8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8028ecc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8028ed0:	4718      	bx	r3

08028ed2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8028ed2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8028ed6:	4770      	bx	lr

08028ed8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8028ed8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8028edc:	4770      	bx	lr

08028ede <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8028ede:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8028ee2:	4770      	bx	lr

08028ee4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8028ee4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8028ee8:	4770      	bx	lr

08028eea <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8028eea:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8028eee:	4770      	bx	lr

08028ef0 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8028ef0:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8028ef4:	4770      	bx	lr

08028ef6 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8028ef6:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8028efa:	4770      	bx	lr

08028efc <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8028efc:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8028f00:	4770      	bx	lr

08028f02 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8028f02:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8028f06:	4770      	bx	lr

08028f08 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8028f08:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8028f0c:	4770      	bx	lr

08028f0e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8028f0e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8028f12:	4770      	bx	lr

08028f14 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8028f14:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8028f18:	4770      	bx	lr

08028f1a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8028f1a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8028f1e:	4770      	bx	lr

08028f20 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8028f20:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8028f24:	4770      	bx	lr

08028f26 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8028f26:	b510      	push	{r4, lr}
 8028f28:	ed2d 8b04 	vpush	{d8-d9}
 8028f2c:	6803      	ldr	r3, [r0, #0]
 8028f2e:	4604      	mov	r4, r0
 8028f30:	699b      	ldr	r3, [r3, #24]
 8028f32:	eeb0 8a40 	vmov.f32	s16, s0
 8028f36:	eef0 8a60 	vmov.f32	s17, s1
 8028f3a:	eeb0 9a41 	vmov.f32	s18, s2
 8028f3e:	4798      	blx	r3
 8028f40:	6823      	ldr	r3, [r4, #0]
 8028f42:	4620      	mov	r0, r4
 8028f44:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8028f46:	eeb0 1a49 	vmov.f32	s2, s18
 8028f4a:	eef0 0a68 	vmov.f32	s1, s17
 8028f4e:	eeb0 0a48 	vmov.f32	s0, s16
 8028f52:	4798      	blx	r3
 8028f54:	ecbd 8b04 	vpop	{d8-d9}
 8028f58:	6823      	ldr	r3, [r4, #0]
 8028f5a:	4620      	mov	r0, r4
 8028f5c:	699b      	ldr	r3, [r3, #24]
 8028f5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028f62:	4718      	bx	r3

08028f64 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8028f64:	b510      	push	{r4, lr}
 8028f66:	ed2d 8b02 	vpush	{d8}
 8028f6a:	6803      	ldr	r3, [r0, #0]
 8028f6c:	4604      	mov	r4, r0
 8028f6e:	699b      	ldr	r3, [r3, #24]
 8028f70:	eeb0 8a40 	vmov.f32	s16, s0
 8028f74:	4798      	blx	r3
 8028f76:	6823      	ldr	r3, [r4, #0]
 8028f78:	4620      	mov	r0, r4
 8028f7a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8028f7e:	eeb0 0a48 	vmov.f32	s0, s16
 8028f82:	4798      	blx	r3
 8028f84:	ecbd 8b02 	vpop	{d8}
 8028f88:	6823      	ldr	r3, [r4, #0]
 8028f8a:	4620      	mov	r0, r4
 8028f8c:	699b      	ldr	r3, [r3, #24]
 8028f8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028f92:	4718      	bx	r3

08028f94 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8028f94:	2200      	movs	r2, #0
 8028f96:	8002      	strh	r2, [r0, #0]
 8028f98:	8042      	strh	r2, [r0, #2]
 8028f9a:	8082      	strh	r2, [r0, #4]
 8028f9c:	80c2      	strh	r2, [r0, #6]
 8028f9e:	4770      	bx	lr

08028fa0 <_ZN8touchgfx13TextureMapperD1Ev>:
 8028fa0:	4770      	bx	lr

08028fa2 <_ZN8touchgfx13TextureMapperD0Ev>:
 8028fa2:	b510      	push	{r4, lr}
 8028fa4:	2190      	movs	r1, #144	; 0x90
 8028fa6:	4604      	mov	r4, r0
 8028fa8:	f001 ff3f 	bl	802ae2a <_ZdlPvj>
 8028fac:	4620      	mov	r0, r4
 8028fae:	bd10      	pop	{r4, pc}

08028fb0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8028fb0:	b538      	push	{r3, r4, r5, lr}
 8028fb2:	2500      	movs	r5, #0
 8028fb4:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8028fb8:	2301      	movs	r3, #1
 8028fba:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8028fbe:	4b1f      	ldr	r3, [pc, #124]	; (802903c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028fc0:	8085      	strh	r5, [r0, #4]
 8028fc2:	80c5      	strh	r5, [r0, #6]
 8028fc4:	8105      	strh	r5, [r0, #8]
 8028fc6:	8145      	strh	r5, [r0, #10]
 8028fc8:	8185      	strh	r5, [r0, #12]
 8028fca:	81c5      	strh	r5, [r0, #14]
 8028fcc:	8205      	strh	r5, [r0, #16]
 8028fce:	8245      	strh	r5, [r0, #18]
 8028fd0:	61c5      	str	r5, [r0, #28]
 8028fd2:	8405      	strh	r5, [r0, #32]
 8028fd4:	8445      	strh	r5, [r0, #34]	; 0x22
 8028fd6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8028fda:	6003      	str	r3, [r0, #0]
 8028fdc:	880b      	ldrh	r3, [r1, #0]
 8028fde:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028fe0:	23ff      	movs	r3, #255	; 0xff
 8028fe2:	4604      	mov	r4, r0
 8028fe4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8028fe8:	f7eb f96b 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028fec:	4b14      	ldr	r3, [pc, #80]	; (8029040 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8028fee:	6023      	str	r3, [r4, #0]
 8028ff0:	2300      	movs	r3, #0
 8028ff2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8028ff6:	4913      	ldr	r1, [pc, #76]	; (8029044 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8028ff8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8028ffa:	6323      	str	r3, [r4, #48]	; 0x30
 8028ffc:	6363      	str	r3, [r4, #52]	; 0x34
 8028ffe:	63a3      	str	r3, [r4, #56]	; 0x38
 8029000:	63e3      	str	r3, [r4, #60]	; 0x3c
 8029002:	6463      	str	r3, [r4, #68]	; 0x44
 8029004:	64a3      	str	r3, [r4, #72]	; 0x48
 8029006:	6523      	str	r3, [r4, #80]	; 0x50
 8029008:	6563      	str	r3, [r4, #84]	; 0x54
 802900a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802900c:	6623      	str	r3, [r4, #96]	; 0x60
 802900e:	66a3      	str	r3, [r4, #104]	; 0x68
 8029010:	66e3      	str	r3, [r4, #108]	; 0x6c
 8029012:	6763      	str	r3, [r4, #116]	; 0x74
 8029014:	67a3      	str	r3, [r4, #120]	; 0x78
 8029016:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 802901a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802901e:	230c      	movs	r3, #12
 8029020:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8029024:	6422      	str	r2, [r4, #64]	; 0x40
 8029026:	64e1      	str	r1, [r4, #76]	; 0x4c
 8029028:	65a1      	str	r1, [r4, #88]	; 0x58
 802902a:	6662      	str	r2, [r4, #100]	; 0x64
 802902c:	6722      	str	r2, [r4, #112]	; 0x70
 802902e:	67e2      	str	r2, [r4, #124]	; 0x7c
 8029030:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8029034:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8029038:	4620      	mov	r0, r4
 802903a:	bd38      	pop	{r3, r4, r5, pc}
 802903c:	0802fd80 	.word	0x0802fd80
 8029040:	08030364 	.word	0x08030364
 8029044:	447a0000 	.word	0x447a0000

08029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8029048:	b570      	push	{r4, r5, r6, lr}
 802904a:	ed2d 8b04 	vpush	{d8-d9}
 802904e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8029052:	add0      	add	r5, sp, #832	; 0x340
 8029054:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8029056:	f825 3d40 	strh.w	r3, [r5, #-64]!
 802905a:	4604      	mov	r4, r0
 802905c:	4628      	mov	r0, r5
 802905e:	f7f1 fa7f 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029062:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8029064:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8029068:	4606      	mov	r6, r0
 802906a:	4628      	mov	r0, r5
 802906c:	f7f1 faac 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029070:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8029074:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8029078:	6da3      	ldr	r3, [r4, #88]	; 0x58
 802907a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 802907e:	9312      	str	r3, [sp, #72]	; 0x48
 8029080:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029084:	1c72      	adds	r2, r6, #1
 8029086:	3001      	adds	r0, #1
 8029088:	ee76 5ac7 	vsub.f32	s11, s13, s14
 802908c:	ee07 2a90 	vmov	s15, r2
 8029090:	ee06 0a90 	vmov	s13, r0
 8029094:	ee36 6a47 	vsub.f32	s12, s12, s14
 8029098:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802909c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80290a0:	ee77 7a86 	vadd.f32	s15, s15, s12
 80290a4:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80290a8:	9316      	str	r3, [sp, #88]	; 0x58
 80290aa:	931a      	str	r3, [sp, #104]	; 0x68
 80290ac:	931e      	str	r3, [sp, #120]	; 0x78
 80290ae:	2300      	movs	r3, #0
 80290b0:	9320      	str	r3, [sp, #128]	; 0x80
 80290b2:	9321      	str	r3, [sp, #132]	; 0x84
 80290b4:	9322      	str	r3, [sp, #136]	; 0x88
 80290b6:	9324      	str	r3, [sp, #144]	; 0x90
 80290b8:	9325      	str	r3, [sp, #148]	; 0x94
 80290ba:	9326      	str	r3, [sp, #152]	; 0x98
 80290bc:	9328      	str	r3, [sp, #160]	; 0xa0
 80290be:	9329      	str	r3, [sp, #164]	; 0xa4
 80290c0:	932a      	str	r3, [sp, #168]	; 0xa8
 80290c2:	932c      	str	r3, [sp, #176]	; 0xb0
 80290c4:	932d      	str	r3, [sp, #180]	; 0xb4
 80290c6:	932e      	str	r3, [sp, #184]	; 0xb8
 80290c8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80290cc:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 80290d0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 80290d4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 80290d8:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 80290dc:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 80290e0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 80290e4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80290e8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 80290ec:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 80290f0:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80290f4:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 80290f8:	a830      	add	r0, sp, #192	; 0xc0
 80290fa:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 80290fe:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8029102:	f000 fc43 	bl	802998c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029106:	eeb1 0a49 	vneg.f32	s0, s18
 802910a:	a830      	add	r0, sp, #192	; 0xc0
 802910c:	f000 fd12 	bl	8029b34 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029110:	eeb1 0a68 	vneg.f32	s0, s17
 8029114:	f000 fd1c 	bl	8029b50 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029118:	eeb1 0a48 	vneg.f32	s0, s16
 802911c:	f000 fd27 	bl	8029b6e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8029120:	a840      	add	r0, sp, #256	; 0x100
 8029122:	f000 fc33 	bl	802998c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029126:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802912a:	a840      	add	r0, sp, #256	; 0x100
 802912c:	f000 fc86 	bl	8029a3c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8029130:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8029134:	f000 fcac 	bl	8029a90 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8029138:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 802913c:	f000 fcd1 	bl	8029ae2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8029140:	a850      	add	r0, sp, #320	; 0x140
 8029142:	f000 fc23 	bl	802998c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029146:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802914a:	a850      	add	r0, sp, #320	; 0x140
 802914c:	f000 fd1e 	bl	8029b8c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8029150:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8029154:	f000 fd26 	bl	8029ba4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8029158:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802915c:	f000 fd2f 	bl	8029bbe <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8029160:	a860      	add	r0, sp, #384	; 0x180
 8029162:	f000 fc13 	bl	802998c <_ZN8touchgfx9Matrix4x4C1Ev>
 8029166:	eeb0 0a49 	vmov.f32	s0, s18
 802916a:	a860      	add	r0, sp, #384	; 0x180
 802916c:	f000 fce2 	bl	8029b34 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8029170:	eeb0 0a68 	vmov.f32	s0, s17
 8029174:	f000 fcec 	bl	8029b50 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8029178:	eeb0 0a48 	vmov.f32	s0, s16
 802917c:	f000 fcf7 	bl	8029b6e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8029180:	aa50      	add	r2, sp, #320	; 0x140
 8029182:	a960      	add	r1, sp, #384	; 0x180
 8029184:	a8b0      	add	r0, sp, #704	; 0x2c0
 8029186:	f000 fc1b 	bl	80299c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802918a:	4628      	mov	r0, r5
 802918c:	aa40      	add	r2, sp, #256	; 0x100
 802918e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8029190:	f000 fc16 	bl	80299c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029194:	4629      	mov	r1, r5
 8029196:	aa30      	add	r2, sp, #192	; 0xc0
 8029198:	a870      	add	r0, sp, #448	; 0x1c0
 802919a:	f000 fc11 	bl	80299c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802919e:	a880      	add	r0, sp, #512	; 0x200
 80291a0:	f000 fbf4 	bl	802998c <_ZN8touchgfx9Matrix4x4C1Ev>
 80291a4:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80291a8:	a880      	add	r0, sp, #512	; 0x200
 80291aa:	eeb1 0a40 	vneg.f32	s0, s0
 80291ae:	f000 fcc1 	bl	8029b34 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80291b2:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80291b6:	a880      	add	r0, sp, #512	; 0x200
 80291b8:	eeb1 0a40 	vneg.f32	s0, s0
 80291bc:	f000 fcc8 	bl	8029b50 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80291c0:	a890      	add	r0, sp, #576	; 0x240
 80291c2:	f000 fbe3 	bl	802998c <_ZN8touchgfx9Matrix4x4C1Ev>
 80291c6:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 80291ca:	a890      	add	r0, sp, #576	; 0x240
 80291cc:	f000 fc26 	bl	8029a1c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 80291d0:	a8a0      	add	r0, sp, #640	; 0x280
 80291d2:	f000 fbdb 	bl	802998c <_ZN8touchgfx9Matrix4x4C1Ev>
 80291d6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80291da:	a8a0      	add	r0, sp, #640	; 0x280
 80291dc:	f000 fcaa 	bl	8029b34 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80291e0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80291e4:	f000 fcb4 	bl	8029b50 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80291e8:	aa90      	add	r2, sp, #576	; 0x240
 80291ea:	a9a0      	add	r1, sp, #640	; 0x280
 80291ec:	a8b0      	add	r0, sp, #704	; 0x2c0
 80291ee:	f000 fbe7 	bl	80299c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80291f2:	4628      	mov	r0, r5
 80291f4:	aa80      	add	r2, sp, #512	; 0x200
 80291f6:	a9b0      	add	r1, sp, #704	; 0x2c0
 80291f8:	f000 fbe2 	bl	80299c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80291fc:	4629      	mov	r1, r5
 80291fe:	aa70      	add	r2, sp, #448	; 0x1c0
 8029200:	4668      	mov	r0, sp
 8029202:	466d      	mov	r5, sp
 8029204:	f000 fbdc 	bl	80299c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8029208:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802920a:	ae70      	add	r6, sp, #448	; 0x1c0
 802920c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802920e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8029210:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8029212:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8029214:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8029216:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802921a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802921e:	2500      	movs	r5, #0
 8029220:	0129      	lsls	r1, r5, #4
 8029222:	ab20      	add	r3, sp, #128	; 0x80
 8029224:	185e      	adds	r6, r3, r1
 8029226:	ab10      	add	r3, sp, #64	; 0x40
 8029228:	4419      	add	r1, r3
 802922a:	a870      	add	r0, sp, #448	; 0x1c0
 802922c:	f000 fb7e 	bl	802992c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8029230:	3501      	adds	r5, #1
 8029232:	2d04      	cmp	r5, #4
 8029234:	ed86 0a00 	vstr	s0, [r6]
 8029238:	edc6 0a01 	vstr	s1, [r6, #4]
 802923c:	ed86 1a02 	vstr	s2, [r6, #8]
 8029240:	edc6 1a03 	vstr	s3, [r6, #12]
 8029244:	d1ec      	bne.n	8029220 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8029246:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802924a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 802924e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8029252:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8029256:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802925a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802925e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8029262:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8029266:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802926a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802926e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8029272:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8029276:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802927a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802927e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8029282:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8029286:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802928a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 802928e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8029292:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8029296:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802929a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 802929e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80292a2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80292a6:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 80292aa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80292ae:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80292b2:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80292b6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80292ba:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80292be:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80292c2:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80292c6:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80292ca:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80292ce:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80292d2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80292d6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80292da:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80292de:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80292e2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80292e6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80292ea:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80292ee:	ecbd 8b04 	vpop	{d8-d9}
 80292f2:	bd70      	pop	{r4, r5, r6, pc}

080292f4 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80292f4:	b510      	push	{r4, lr}
 80292f6:	4604      	mov	r4, r0
 80292f8:	f7ea ffe3 	bl	80142c2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80292fc:	4620      	mov	r0, r4
 80292fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029302:	f7ff bea1 	b.w	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029306 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8029306:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802930a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802930e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8029312:	f7ff be99 	b.w	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029316 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8029316:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802931a:	f7ff be95 	b.w	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802931e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802931e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8029322:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8029326:	f7ff be8f 	b.w	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802932a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802932a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802932e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029336:	bfd8      	it	le
 8029338:	eeb0 0a67 	vmovle.f32	s0, s15
 802933c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8029340:	f7ff be82 	b.w	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029344 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8029344:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8029348:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 802934c:	f7ff be7c 	b.w	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08029350 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8029350:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8029354:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8029358:	f7ff be76 	b.w	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802935c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 802935c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8029360:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8029364:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8029368:	f7ff be6e 	b.w	8029048 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802936c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 802936c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029370:	ed2d 8b04 	vpush	{d8-d9}
 8029374:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8029378:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 802937c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8029380:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8029384:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8029388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802938c:	bf54      	ite	pl
 802938e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8029392:	eeb0 0a48 	vmovmi.f32	s0, s16
 8029396:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802939a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802939e:	bfd8      	it	le
 80293a0:	eeb0 0a49 	vmovle.f32	s0, s18
 80293a4:	eef4 8ac0 	vcmpe.f32	s17, s0
 80293a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293ac:	bfd8      	it	le
 80293ae:	eeb0 0a68 	vmovle.f32	s0, s17
 80293b2:	460c      	mov	r4, r1
 80293b4:	4607      	mov	r7, r0
 80293b6:	f001 fe4f 	bl	802b058 <floorf>
 80293ba:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80293be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293c2:	bf58      	it	pl
 80293c4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80293c8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80293cc:	bf56      	itet	pl
 80293ce:	ee10 3a10 	vmovpl	r3, s0
 80293d2:	2600      	movmi	r6, #0
 80293d4:	b21e      	sxthpl	r6, r3
 80293d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293da:	bfd8      	it	le
 80293dc:	eeb0 8a69 	vmovle.f32	s16, s19
 80293e0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80293e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293e8:	bf58      	it	pl
 80293ea:	eeb0 8a49 	vmovpl.f32	s16, s18
 80293ee:	eef4 8ac8 	vcmpe.f32	s17, s16
 80293f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80293f6:	bf54      	ite	pl
 80293f8:	eeb0 0a68 	vmovpl.f32	s0, s17
 80293fc:	eeb0 0a48 	vmovmi.f32	s0, s16
 8029400:	f001 fde8 	bl	802afd4 <ceilf>
 8029404:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8029408:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 802940c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8029410:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8029414:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8029418:	ee07 8a90 	vmov	s15, r8
 802941c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029420:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8029424:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029428:	bfd8      	it	le
 802942a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802942e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8029432:	bfdc      	itt	le
 8029434:	ee10 3a10 	vmovle	r3, s0
 8029438:	fa0f f883 	sxthle.w	r8, r3
 802943c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029440:	bf54      	ite	pl
 8029442:	eeb0 0a69 	vmovpl.f32	s0, s19
 8029446:	eeb0 0a48 	vmovmi.f32	s0, s16
 802944a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802944e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029452:	bfd8      	it	le
 8029454:	eeb0 0a49 	vmovle.f32	s0, s18
 8029458:	eef4 8ac0 	vcmpe.f32	s17, s0
 802945c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029460:	bfd8      	it	le
 8029462:	eeb0 0a68 	vmovle.f32	s0, s17
 8029466:	f001 fdf7 	bl	802b058 <floorf>
 802946a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802946e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029472:	bf58      	it	pl
 8029474:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8029478:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802947c:	bf56      	itet	pl
 802947e:	ee10 3a10 	vmovpl	r3, s0
 8029482:	2500      	movmi	r5, #0
 8029484:	b21d      	sxthpl	r5, r3
 8029486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802948a:	bfd8      	it	le
 802948c:	eeb0 8a69 	vmovle.f32	s16, s19
 8029490:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8029494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029498:	bf58      	it	pl
 802949a:	eeb0 8a49 	vmovpl.f32	s16, s18
 802949e:	eef4 8ac8 	vcmpe.f32	s17, s16
 80294a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294a6:	bf54      	ite	pl
 80294a8:	eeb0 0a68 	vmovpl.f32	s0, s17
 80294ac:	eeb0 0a48 	vmovmi.f32	s0, s16
 80294b0:	f001 fd90 	bl	802afd4 <ceilf>
 80294b4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80294b8:	803e      	strh	r6, [r7, #0]
 80294ba:	ee07 3a90 	vmov	s15, r3
 80294be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80294c2:	807d      	strh	r5, [r7, #2]
 80294c4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80294c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80294cc:	bfd8      	it	le
 80294ce:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80294d2:	eba8 0606 	sub.w	r6, r8, r6
 80294d6:	bfdc      	itt	le
 80294d8:	ee10 3a10 	vmovle	r3, s0
 80294dc:	b21b      	sxthle	r3, r3
 80294de:	1b5d      	subs	r5, r3, r5
 80294e0:	80be      	strh	r6, [r7, #4]
 80294e2:	80fd      	strh	r5, [r7, #6]
 80294e4:	ecbd 8b04 	vpop	{d8-d9}
 80294e8:	4638      	mov	r0, r7
 80294ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080294ee <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80294ee:	b513      	push	{r0, r1, r4, lr}
 80294f0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80294f4:	4604      	mov	r4, r0
 80294f6:	b143      	cbz	r3, 802950a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80294f8:	4601      	mov	r1, r0
 80294fa:	4668      	mov	r0, sp
 80294fc:	f7ff ff36 	bl	802936c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8029500:	6823      	ldr	r3, [r4, #0]
 8029502:	4669      	mov	r1, sp
 8029504:	691b      	ldr	r3, [r3, #16]
 8029506:	4620      	mov	r0, r4
 8029508:	4798      	blx	r3
 802950a:	b002      	add	sp, #8
 802950c:	bd10      	pop	{r4, pc}

0802950e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802950e:	4603      	mov	r3, r0
 8029510:	3026      	adds	r0, #38	; 0x26
 8029512:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8029516:	b90b      	cbnz	r3, 802951c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8029518:	f7ee bdfa 	b.w	8018110 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802951c:	f7ee be08 	b.w	8018130 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08029520 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8029520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029524:	ed2d 8b04 	vpush	{d8-d9}
 8029528:	4604      	mov	r4, r0
 802952a:	469b      	mov	fp, r3
 802952c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8029530:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8029534:	f9b1 6000 	ldrsh.w	r6, [r1]
 8029538:	8888      	ldrh	r0, [r1, #4]
 802953a:	b0b3      	sub	sp, #204	; 0xcc
 802953c:	4430      	add	r0, r6
 802953e:	b280      	uxth	r0, r0
 8029540:	9206      	str	r2, [sp, #24]
 8029542:	fa0f fe80 	sxth.w	lr, r0
 8029546:	2200      	movs	r2, #0
 8029548:	4596      	cmp	lr, r2
 802954a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802954e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8029552:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8029556:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8029558:	9211      	str	r2, [sp, #68]	; 0x44
 802955a:	f340 8129 	ble.w	80297b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802955e:	45b4      	cmp	ip, r6
 8029560:	f340 8126 	ble.w	80297b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8029564:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8029568:	88ca      	ldrh	r2, [r1, #6]
 802956a:	442a      	add	r2, r5
 802956c:	b292      	uxth	r2, r2
 802956e:	b211      	sxth	r1, r2
 8029570:	2900      	cmp	r1, #0
 8029572:	f340 811d 	ble.w	80297b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8029576:	42ab      	cmp	r3, r5
 8029578:	f340 811a 	ble.w	80297b0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802957c:	45f4      	cmp	ip, lr
 802957e:	bfb8      	it	lt
 8029580:	fa1f f08c 	uxthlt.w	r0, ip
 8029584:	428b      	cmp	r3, r1
 8029586:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802958a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802958e:	bfb8      	it	lt
 8029590:	b29a      	uxthlt	r2, r3
 8029592:	1b80      	subs	r0, r0, r6
 8029594:	1b52      	subs	r2, r2, r5
 8029596:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802959a:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 802959e:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80295a2:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80295a6:	ab11      	add	r3, sp, #68	; 0x44
 80295a8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80295ac:	6822      	ldr	r2, [r4, #0]
 80295ae:	9307      	str	r3, [sp, #28]
 80295b0:	ad13      	add	r5, sp, #76	; 0x4c
 80295b2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80295b4:	e885 0003 	stmia.w	r5, {r0, r1}
 80295b8:	4629      	mov	r1, r5
 80295ba:	4620      	mov	r0, r4
 80295bc:	4790      	blx	r2
 80295be:	4621      	mov	r1, r4
 80295c0:	a815      	add	r0, sp, #84	; 0x54
 80295c2:	f7ee fd01 	bl	8017fc8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80295c6:	a815      	add	r0, sp, #84	; 0x54
 80295c8:	f7ed f9c6 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80295cc:	9b07      	ldr	r3, [sp, #28]
 80295ce:	1d26      	adds	r6, r4, #4
 80295d0:	4618      	mov	r0, r3
 80295d2:	4631      	mov	r1, r6
 80295d4:	f7ed fa04 	bl	80169e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80295d8:	4628      	mov	r0, r5
 80295da:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80295de:	f7ed f9bb 	bl	8016958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80295e2:	4628      	mov	r0, r5
 80295e4:	f7f1 f8a8 	bl	801a738 <_ZNK8touchgfx6Bitmap7getDataEv>
 80295e8:	9007      	str	r0, [sp, #28]
 80295ea:	2800      	cmp	r0, #0
 80295ec:	f000 80db 	beq.w	80297a6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80295f0:	f8db 2000 	ldr.w	r2, [fp]
 80295f4:	9209      	str	r2, [sp, #36]	; 0x24
 80295f6:	f8db 2004 	ldr.w	r2, [fp, #4]
 80295fa:	920a      	str	r2, [sp, #40]	; 0x28
 80295fc:	f8db 2008 	ldr.w	r2, [fp, #8]
 8029600:	920b      	str	r2, [sp, #44]	; 0x2c
 8029602:	f8db 200c 	ldr.w	r2, [fp, #12]
 8029606:	920c      	str	r2, [sp, #48]	; 0x30
 8029608:	f8da 2000 	ldr.w	r2, [sl]
 802960c:	920d      	str	r2, [sp, #52]	; 0x34
 802960e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8029612:	920e      	str	r2, [sp, #56]	; 0x38
 8029614:	f8da 2008 	ldr.w	r2, [sl, #8]
 8029618:	920f      	str	r2, [sp, #60]	; 0x3c
 802961a:	f8da 200c 	ldr.w	r2, [sl, #12]
 802961e:	9210      	str	r2, [sp, #64]	; 0x40
 8029620:	a90d      	add	r1, sp, #52	; 0x34
 8029622:	4632      	mov	r2, r6
 8029624:	a809      	add	r0, sp, #36	; 0x24
 8029626:	f7ed f9bf 	bl	80169a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802962a:	4632      	mov	r2, r6
 802962c:	a90e      	add	r1, sp, #56	; 0x38
 802962e:	a80a      	add	r0, sp, #40	; 0x28
 8029630:	f7ed f9ba 	bl	80169a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029634:	4632      	mov	r2, r6
 8029636:	a90f      	add	r1, sp, #60	; 0x3c
 8029638:	a80b      	add	r0, sp, #44	; 0x2c
 802963a:	f7ed f9b5 	bl	80169a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802963e:	4632      	mov	r2, r6
 8029640:	a910      	add	r1, sp, #64	; 0x40
 8029642:	a80c      	add	r0, sp, #48	; 0x30
 8029644:	f7ed f9b0 	bl	80169a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029648:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802964c:	edd7 4a00 	vldr	s9, [r7]
 8029650:	edd7 5a01 	vldr	s11, [r7, #4]
 8029654:	ed98 4a00 	vldr	s8, [r8]
 8029658:	ed98 5a01 	vldr	s10, [r8, #4]
 802965c:	ed99 9a00 	vldr	s18, [r9]
 8029660:	ed99 8a01 	vldr	s16, [r9, #4]
 8029664:	edd9 8a02 	vldr	s17, [r9, #8]
 8029668:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802966c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8029670:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8029674:	eef0 6a67 	vmov.f32	s13, s15
 8029678:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802967c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8029680:	eeb0 7a67 	vmov.f32	s14, s15
 8029684:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8029688:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802968c:	eeb0 6a67 	vmov.f32	s12, s15
 8029690:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029694:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8029698:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 802969c:	ee16 6a10 	vmov	r6, s12
 80296a0:	eeb0 6a67 	vmov.f32	s12, s15
 80296a4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296a8:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80296ac:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80296b0:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80296b4:	68ff      	ldr	r7, [r7, #12]
 80296b6:	9624      	str	r6, [sp, #144]	; 0x90
 80296b8:	ee16 0a10 	vmov	r0, s12
 80296bc:	eeb0 6a67 	vmov.f32	s12, s15
 80296c0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296c4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80296c8:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80296cc:	ee16 1a10 	vmov	r1, s12
 80296d0:	eeb0 6a67 	vmov.f32	s12, s15
 80296d4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296d8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80296dc:	ee16 2a10 	vmov	r2, s12
 80296e0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80296e4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80296e8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80296ec:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80296f0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80296f4:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80296f8:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80296fc:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8029700:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8029704:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8029708:	922d      	str	r2, [sp, #180]	; 0xb4
 802970a:	4a2b      	ldr	r2, [pc, #172]	; (80297b8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802970c:	9b06      	ldr	r3, [sp, #24]
 802970e:	8812      	ldrh	r2, [r2, #0]
 8029710:	9317      	str	r3, [sp, #92]	; 0x5c
 8029712:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8029716:	9b07      	ldr	r3, [sp, #28]
 8029718:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802971c:	4628      	mov	r0, r5
 802971e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8029722:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8029726:	9218      	str	r2, [sp, #96]	; 0x60
 8029728:	9319      	str	r3, [sp, #100]	; 0x64
 802972a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802972e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8029732:	9731      	str	r7, [sp, #196]	; 0xc4
 8029734:	f7f1 f830 	bl	801a798 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8029738:	901a      	str	r0, [sp, #104]	; 0x68
 802973a:	4628      	mov	r0, r5
 802973c:	f7f0 ff10 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029740:	901b      	str	r0, [sp, #108]	; 0x6c
 8029742:	4628      	mov	r0, r5
 8029744:	f7f0 ff40 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029748:	901c      	str	r0, [sp, #112]	; 0x70
 802974a:	4628      	mov	r0, r5
 802974c:	f7f0 ff08 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029750:	eeb4 9a48 	vcmp.f32	s18, s16
 8029754:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029758:	901d      	str	r0, [sp, #116]	; 0x74
 802975a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802975e:	d107      	bne.n	8029770 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8029760:	eeb4 8a68 	vcmp.f32	s16, s17
 8029764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029768:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802976c:	bf08      	it	eq
 802976e:	461e      	moveq	r6, r3
 8029770:	4b12      	ldr	r3, [pc, #72]	; (80297bc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8029772:	681b      	ldr	r3, [r3, #0]
 8029774:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8029778:	b10a      	cbz	r2, 802977e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802977a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802977c:	b905      	cbnz	r5, 8029780 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802977e:	689d      	ldr	r5, [r3, #8]
 8029780:	682b      	ldr	r3, [r5, #0]
 8029782:	4620      	mov	r0, r4
 8029784:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8029786:	f7ff fec2 	bl	802950e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802978a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802978e:	9604      	str	r6, [sp, #16]
 8029790:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8029794:	ab13      	add	r3, sp, #76	; 0x4c
 8029796:	9301      	str	r3, [sp, #4]
 8029798:	ab15      	add	r3, sp, #84	; 0x54
 802979a:	9300      	str	r3, [sp, #0]
 802979c:	aa1e      	add	r2, sp, #120	; 0x78
 802979e:	ab19      	add	r3, sp, #100	; 0x64
 80297a0:	a917      	add	r1, sp, #92	; 0x5c
 80297a2:	4628      	mov	r0, r5
 80297a4:	47b8      	blx	r7
 80297a6:	b033      	add	sp, #204	; 0xcc
 80297a8:	ecbd 8b04 	vpop	{d8-d9}
 80297ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80297b0:	2300      	movs	r3, #0
 80297b2:	9312      	str	r3, [sp, #72]	; 0x48
 80297b4:	e6f7      	b.n	80295a6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80297b6:	bf00      	nop
 80297b8:	2001382e 	.word	0x2001382e
 80297bc:	20013834 	.word	0x20013834

080297c0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80297c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80297c4:	ed2d 8b02 	vpush	{d8}
 80297c8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80297cc:	b098      	sub	sp, #96	; 0x60
 80297ce:	4604      	mov	r4, r0
 80297d0:	4688      	mov	r8, r1
 80297d2:	2b00      	cmp	r3, #0
 80297d4:	d077      	beq.n	80298c6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80297d6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80297da:	4628      	mov	r0, r5
 80297dc:	f7f0 fec0 	bl	801a560 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80297e0:	ee07 0a90 	vmov	s15, r0
 80297e4:	4628      	mov	r0, r5
 80297e6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80297ea:	f7f0 feed 	bl	801a5c8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80297ee:	4b4e      	ldr	r3, [pc, #312]	; (8029928 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80297f0:	781b      	ldrb	r3, [r3, #0]
 80297f2:	ee07 0a90 	vmov	s15, r0
 80297f6:	2b01      	cmp	r3, #1
 80297f8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80297fc:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8029800:	d066      	beq.n	80298d0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8029802:	eeb0 6a47 	vmov.f32	s12, s14
 8029806:	ee17 3a10 	vmov	r3, s14
 802980a:	eeb0 4a48 	vmov.f32	s8, s16
 802980e:	eeb0 7a48 	vmov.f32	s14, s16
 8029812:	eef0 4a67 	vmov.f32	s9, s15
 8029816:	eeb0 8a67 	vmov.f32	s16, s15
 802981a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802981e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8029822:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8029826:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802982a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802982e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8029832:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8029834:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8029836:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8029838:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802983c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8029840:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8029844:	ee73 1a65 	vsub.f32	s3, s6, s11
 8029848:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802984c:	ee32 1a45 	vsub.f32	s2, s4, s10
 8029850:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8029854:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8029858:	eee1 6a21 	vfma.f32	s13, s2, s3
 802985c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8029860:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029864:	dd3d      	ble.n	80298e2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8029866:	ed8d 5a04 	vstr	s10, [sp, #16]
 802986a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802986e:	edcd 2a06 	vstr	s5, [sp, #24]
 8029872:	f8cd c01c 	str.w	ip, [sp, #28]
 8029876:	edcd 5a08 	vstr	s11, [sp, #32]
 802987a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802987e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8029882:	970b      	str	r7, [sp, #44]	; 0x2c
 8029884:	960c      	str	r6, [sp, #48]	; 0x30
 8029886:	950d      	str	r5, [sp, #52]	; 0x34
 8029888:	920e      	str	r2, [sp, #56]	; 0x38
 802988a:	900f      	str	r0, [sp, #60]	; 0x3c
 802988c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8029890:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8029894:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8029898:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 802989c:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80298a0:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80298a4:	9316      	str	r3, [sp, #88]	; 0x58
 80298a6:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 80298aa:	ab14      	add	r3, sp, #80	; 0x50
 80298ac:	9303      	str	r3, [sp, #12]
 80298ae:	ab10      	add	r3, sp, #64	; 0x40
 80298b0:	9302      	str	r3, [sp, #8]
 80298b2:	ab0c      	add	r3, sp, #48	; 0x30
 80298b4:	9301      	str	r3, [sp, #4]
 80298b6:	ab08      	add	r3, sp, #32
 80298b8:	9300      	str	r3, [sp, #0]
 80298ba:	2200      	movs	r2, #0
 80298bc:	ab04      	add	r3, sp, #16
 80298be:	4641      	mov	r1, r8
 80298c0:	4620      	mov	r0, r4
 80298c2:	f7ff fe2d 	bl	8029520 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80298c6:	b018      	add	sp, #96	; 0x60
 80298c8:	ecbd 8b02 	vpop	{d8}
 80298cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80298d0:	eeb0 6a48 	vmov.f32	s12, s16
 80298d4:	eef0 4a47 	vmov.f32	s9, s14
 80298d8:	ee17 3a90 	vmov	r3, s15
 80298dc:	eeb0 4a67 	vmov.f32	s8, s15
 80298e0:	e79b      	b.n	802981a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80298e2:	ed8d 5a05 	vstr	s10, [sp, #20]
 80298e6:	ed8d 2a04 	vstr	s4, [sp, #16]
 80298ea:	f8cd c018 	str.w	ip, [sp, #24]
 80298ee:	edcd 2a07 	vstr	s5, [sp, #28]
 80298f2:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80298f6:	ed8d 3a08 	vstr	s6, [sp, #32]
 80298fa:	970a      	str	r7, [sp, #40]	; 0x28
 80298fc:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8029900:	960d      	str	r6, [sp, #52]	; 0x34
 8029902:	950c      	str	r5, [sp, #48]	; 0x30
 8029904:	900e      	str	r0, [sp, #56]	; 0x38
 8029906:	920f      	str	r2, [sp, #60]	; 0x3c
 8029908:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802990c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8029910:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8029914:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8029918:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802991c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8029920:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8029924:	9317      	str	r3, [sp, #92]	; 0x5c
 8029926:	e7c0      	b.n	80298aa <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8029928:	2001382c 	.word	0x2001382c

0802992c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802992c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802992e:	b08d      	sub	sp, #52	; 0x34
 8029930:	2300      	movs	r3, #0
 8029932:	9304      	str	r3, [sp, #16]
 8029934:	9305      	str	r3, [sp, #20]
 8029936:	9306      	str	r3, [sp, #24]
 8029938:	aa04      	add	r2, sp, #16
 802993a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802993e:	9307      	str	r3, [sp, #28]
 8029940:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8029944:	4613      	mov	r3, r2
 8029946:	f101 0710 	add.w	r7, r1, #16
 802994a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029988 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802994e:	460c      	mov	r4, r1
 8029950:	4605      	mov	r5, r0
 8029952:	ecb4 7a01 	vldmia	r4!, {s14}
 8029956:	ecf5 6a01 	vldmia	r5!, {s13}
 802995a:	42bc      	cmp	r4, r7
 802995c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029960:	d1f7      	bne.n	8029952 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8029962:	3010      	adds	r0, #16
 8029964:	42b0      	cmp	r0, r6
 8029966:	ece2 7a01 	vstmia	r2!, {s15}
 802996a:	d1ee      	bne.n	802994a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802996c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802996e:	ac0c      	add	r4, sp, #48	; 0x30
 8029970:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8029974:	ed9d 0a08 	vldr	s0, [sp, #32]
 8029978:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802997c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8029980:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8029984:	b00d      	add	sp, #52	; 0x34
 8029986:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029988:	00000000 	.word	0x00000000

0802998c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802998c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 80299bc <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8029990:	2300      	movs	r3, #0
 8029992:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029996:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802999a:	2200      	movs	r2, #0
 802999c:	4293      	cmp	r3, r2
 802999e:	f102 0201 	add.w	r2, r2, #1
 80299a2:	bf14      	ite	ne
 80299a4:	eef0 6a47 	vmovne.f32	s13, s14
 80299a8:	eef0 6a67 	vmoveq.f32	s13, s15
 80299ac:	2a04      	cmp	r2, #4
 80299ae:	ece1 6a01 	vstmia	r1!, {s13}
 80299b2:	d1f3      	bne.n	802999c <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80299b4:	3301      	adds	r3, #1
 80299b6:	2b04      	cmp	r3, #4
 80299b8:	d1ed      	bne.n	8029996 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80299ba:	4770      	bx	lr
 80299bc:	00000000 	.word	0x00000000

080299c0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80299c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80299c4:	460c      	mov	r4, r1
 80299c6:	4605      	mov	r5, r0
 80299c8:	4690      	mov	r8, r2
 80299ca:	f7ff ffdf 	bl	802998c <_ZN8touchgfx9Matrix4x4C1Ev>
 80299ce:	4628      	mov	r0, r5
 80299d0:	4621      	mov	r1, r4
 80299d2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80299d6:	2300      	movs	r3, #0
 80299d8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029a18 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80299dc:	eb08 0603 	add.w	r6, r8, r3
 80299e0:	460f      	mov	r7, r1
 80299e2:	2400      	movs	r4, #0
 80299e4:	4632      	mov	r2, r6
 80299e6:	ecf7 6a01 	vldmia	r7!, {s13}
 80299ea:	ed92 7a00 	vldr	s14, [r2]
 80299ee:	3401      	adds	r4, #1
 80299f0:	2c04      	cmp	r4, #4
 80299f2:	f106 0610 	add.w	r6, r6, #16
 80299f6:	eee6 7a87 	vfma.f32	s15, s13, s14
 80299fa:	d1f3      	bne.n	80299e4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 80299fc:	18c2      	adds	r2, r0, r3
 80299fe:	3304      	adds	r3, #4
 8029a00:	2b10      	cmp	r3, #16
 8029a02:	edc2 7a00 	vstr	s15, [r2]
 8029a06:	d1e7      	bne.n	80299d8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8029a08:	3110      	adds	r1, #16
 8029a0a:	4561      	cmp	r1, ip
 8029a0c:	f100 0010 	add.w	r0, r0, #16
 8029a10:	d1e1      	bne.n	80299d6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8029a12:	4628      	mov	r0, r5
 8029a14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029a18:	00000000 	.word	0x00000000

08029a1c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8029a1c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029a20:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8029a24:	f100 0320 	add.w	r3, r0, #32
 8029a28:	3030      	adds	r0, #48	; 0x30
 8029a2a:	ecf3 7a01 	vldmia	r3!, {s15}
 8029a2e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029a32:	4283      	cmp	r3, r0
 8029a34:	edc3 7a03 	vstr	s15, [r3, #12]
 8029a38:	d1f7      	bne.n	8029a2a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8029a3a:	4770      	bx	lr

08029a3c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8029a3c:	b510      	push	{r4, lr}
 8029a3e:	ed2d 8b02 	vpush	{d8}
 8029a42:	4604      	mov	r4, r0
 8029a44:	eef0 8a40 	vmov.f32	s17, s0
 8029a48:	f001 fa7a 	bl	802af40 <sinf>
 8029a4c:	eeb0 8a40 	vmov.f32	s16, s0
 8029a50:	eeb0 0a68 	vmov.f32	s0, s17
 8029a54:	f001 fa30 	bl	802aeb8 <cosf>
 8029a58:	f104 0310 	add.w	r3, r4, #16
 8029a5c:	f104 0220 	add.w	r2, r4, #32
 8029a60:	eeb1 6a48 	vneg.f32	s12, s16
 8029a64:	edd3 7a04 	vldr	s15, [r3, #16]
 8029a68:	edd3 6a00 	vldr	s13, [r3]
 8029a6c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029a70:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029a74:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029a78:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029a7c:	eca3 7a01 	vstmia	r3!, {s14}
 8029a80:	429a      	cmp	r2, r3
 8029a82:	edc3 7a03 	vstr	s15, [r3, #12]
 8029a86:	d1ed      	bne.n	8029a64 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8029a88:	ecbd 8b02 	vpop	{d8}
 8029a8c:	4620      	mov	r0, r4
 8029a8e:	bd10      	pop	{r4, pc}

08029a90 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8029a90:	b510      	push	{r4, lr}
 8029a92:	ed2d 8b02 	vpush	{d8}
 8029a96:	4604      	mov	r4, r0
 8029a98:	eef0 8a40 	vmov.f32	s17, s0
 8029a9c:	f001 fa50 	bl	802af40 <sinf>
 8029aa0:	eeb0 8a40 	vmov.f32	s16, s0
 8029aa4:	eeb0 0a68 	vmov.f32	s0, s17
 8029aa8:	f001 fa06 	bl	802aeb8 <cosf>
 8029aac:	4623      	mov	r3, r4
 8029aae:	f104 0210 	add.w	r2, r4, #16
 8029ab2:	eeb1 6a48 	vneg.f32	s12, s16
 8029ab6:	edd3 7a08 	vldr	s15, [r3, #32]
 8029aba:	edd3 6a00 	vldr	s13, [r3]
 8029abe:	ee27 7a88 	vmul.f32	s14, s15, s16
 8029ac2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029ac6:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029aca:	eee6 7a26 	vfma.f32	s15, s12, s13
 8029ace:	eca3 7a01 	vstmia	r3!, {s14}
 8029ad2:	429a      	cmp	r2, r3
 8029ad4:	edc3 7a07 	vstr	s15, [r3, #28]
 8029ad8:	d1ed      	bne.n	8029ab6 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8029ada:	ecbd 8b02 	vpop	{d8}
 8029ade:	4620      	mov	r0, r4
 8029ae0:	bd10      	pop	{r4, pc}

08029ae2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8029ae2:	b510      	push	{r4, lr}
 8029ae4:	ed2d 8b02 	vpush	{d8}
 8029ae8:	4604      	mov	r4, r0
 8029aea:	eef0 8a40 	vmov.f32	s17, s0
 8029aee:	f001 fa27 	bl	802af40 <sinf>
 8029af2:	eeb0 8a40 	vmov.f32	s16, s0
 8029af6:	eeb0 0a68 	vmov.f32	s0, s17
 8029afa:	f001 f9dd 	bl	802aeb8 <cosf>
 8029afe:	4623      	mov	r3, r4
 8029b00:	f104 0210 	add.w	r2, r4, #16
 8029b04:	eeb1 6a48 	vneg.f32	s12, s16
 8029b08:	edd3 7a04 	vldr	s15, [r3, #16]
 8029b0c:	edd3 6a00 	vldr	s13, [r3]
 8029b10:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029b14:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029b18:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029b1c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029b20:	eca3 7a01 	vstmia	r3!, {s14}
 8029b24:	429a      	cmp	r2, r3
 8029b26:	edc3 7a03 	vstr	s15, [r3, #12]
 8029b2a:	d1ed      	bne.n	8029b08 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8029b2c:	ecbd 8b02 	vpop	{d8}
 8029b30:	4620      	mov	r0, r4
 8029b32:	bd10      	pop	{r4, pc}

08029b34 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8029b34:	4603      	mov	r3, r0
 8029b36:	f100 0210 	add.w	r2, r0, #16
 8029b3a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8029b3e:	edd3 7a00 	vldr	s15, [r3]
 8029b42:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029b46:	ece3 7a01 	vstmia	r3!, {s15}
 8029b4a:	4293      	cmp	r3, r2
 8029b4c:	d1f5      	bne.n	8029b3a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8029b4e:	4770      	bx	lr

08029b50 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8029b50:	f100 0310 	add.w	r3, r0, #16
 8029b54:	f100 0220 	add.w	r2, r0, #32
 8029b58:	ed93 7a08 	vldr	s14, [r3, #32]
 8029b5c:	edd3 7a00 	vldr	s15, [r3]
 8029b60:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029b64:	ece3 7a01 	vstmia	r3!, {s15}
 8029b68:	4293      	cmp	r3, r2
 8029b6a:	d1f5      	bne.n	8029b58 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8029b6c:	4770      	bx	lr

08029b6e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8029b6e:	f100 0320 	add.w	r3, r0, #32
 8029b72:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029b76:	ed93 7a04 	vldr	s14, [r3, #16]
 8029b7a:	edd3 7a00 	vldr	s15, [r3]
 8029b7e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029b82:	ece3 7a01 	vstmia	r3!, {s15}
 8029b86:	4293      	cmp	r3, r2
 8029b88:	d1f5      	bne.n	8029b76 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8029b8a:	4770      	bx	lr

08029b8c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8029b8c:	4603      	mov	r3, r0
 8029b8e:	f100 0210 	add.w	r2, r0, #16
 8029b92:	edd3 7a00 	vldr	s15, [r3]
 8029b96:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029b9a:	ece3 7a01 	vstmia	r3!, {s15}
 8029b9e:	4293      	cmp	r3, r2
 8029ba0:	d1f7      	bne.n	8029b92 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8029ba2:	4770      	bx	lr

08029ba4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8029ba4:	f100 0310 	add.w	r3, r0, #16
 8029ba8:	f100 0220 	add.w	r2, r0, #32
 8029bac:	edd3 7a00 	vldr	s15, [r3]
 8029bb0:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029bb4:	ece3 7a01 	vstmia	r3!, {s15}
 8029bb8:	4293      	cmp	r3, r2
 8029bba:	d1f7      	bne.n	8029bac <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8029bbc:	4770      	bx	lr

08029bbe <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8029bbe:	f100 0320 	add.w	r3, r0, #32
 8029bc2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029bc6:	edd3 7a00 	vldr	s15, [r3]
 8029bca:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029bce:	ece3 7a01 	vstmia	r3!, {s15}
 8029bd2:	4293      	cmp	r3, r2
 8029bd4:	d1f7      	bne.n	8029bc6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8029bd6:	4770      	bx	lr

08029bd8 <arm_max_f32>:
 8029bd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029bdc:	1e4f      	subs	r7, r1, #1
 8029bde:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8029be2:	f100 0e04 	add.w	lr, r0, #4
 8029be6:	edd0 7a00 	vldr	s15, [r0]
 8029bea:	d058      	beq.n	8029c9e <arm_max_f32+0xc6>
 8029bec:	3014      	adds	r0, #20
 8029bee:	46c4      	mov	ip, r8
 8029bf0:	2604      	movs	r6, #4
 8029bf2:	2400      	movs	r4, #0
 8029bf4:	ed10 6a04 	vldr	s12, [r0, #-16]
 8029bf8:	ed50 6a03 	vldr	s13, [r0, #-12]
 8029bfc:	ed10 7a02 	vldr	s14, [r0, #-8]
 8029c00:	ed50 5a01 	vldr	s11, [r0, #-4]
 8029c04:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8029c08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c0c:	bfc8      	it	gt
 8029c0e:	eef0 7a46 	vmovgt.f32	s15, s12
 8029c12:	f1a6 0503 	sub.w	r5, r6, #3
 8029c16:	eef4 7ae6 	vcmpe.f32	s15, s13
 8029c1a:	bfc8      	it	gt
 8029c1c:	462c      	movgt	r4, r5
 8029c1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c22:	bf48      	it	mi
 8029c24:	eef0 7a66 	vmovmi.f32	s15, s13
 8029c28:	f1a6 0502 	sub.w	r5, r6, #2
 8029c2c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8029c30:	bf48      	it	mi
 8029c32:	462c      	movmi	r4, r5
 8029c34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c38:	bf48      	it	mi
 8029c3a:	eef0 7a47 	vmovmi.f32	s15, s14
 8029c3e:	f106 35ff 	add.w	r5, r6, #4294967295
 8029c42:	eef4 7ae5 	vcmpe.f32	s15, s11
 8029c46:	bf48      	it	mi
 8029c48:	462c      	movmi	r4, r5
 8029c4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c4e:	bf48      	it	mi
 8029c50:	4634      	movmi	r4, r6
 8029c52:	bf48      	it	mi
 8029c54:	eef0 7a65 	vmovmi.f32	s15, s11
 8029c58:	f1bc 0c01 	subs.w	ip, ip, #1
 8029c5c:	f106 0604 	add.w	r6, r6, #4
 8029c60:	f100 0010 	add.w	r0, r0, #16
 8029c64:	d1c6      	bne.n	8029bf4 <arm_max_f32+0x1c>
 8029c66:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8029c6a:	f017 0003 	ands.w	r0, r7, #3
 8029c6e:	d018      	beq.n	8029ca2 <arm_max_f32+0xca>
 8029c70:	1a08      	subs	r0, r1, r0
 8029c72:	ecbe 7a01 	vldmia	lr!, {s14}
 8029c76:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8029c7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029c7e:	bfc8      	it	gt
 8029c80:	4604      	movgt	r4, r0
 8029c82:	f100 0001 	add.w	r0, r0, #1
 8029c86:	bfd8      	it	le
 8029c88:	eeb0 7a67 	vmovle.f32	s14, s15
 8029c8c:	4288      	cmp	r0, r1
 8029c8e:	eef0 7a47 	vmov.f32	s15, s14
 8029c92:	d1ee      	bne.n	8029c72 <arm_max_f32+0x9a>
 8029c94:	ed82 7a00 	vstr	s14, [r2]
 8029c98:	601c      	str	r4, [r3, #0]
 8029c9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029c9e:	4644      	mov	r4, r8
 8029ca0:	e7e3      	b.n	8029c6a <arm_max_f32+0x92>
 8029ca2:	eeb0 7a67 	vmov.f32	s14, s15
 8029ca6:	e7f5      	b.n	8029c94 <arm_max_f32+0xbc>

08029ca8 <arm_rfft_fast_init_f32>:
 8029ca8:	084b      	lsrs	r3, r1, #1
 8029caa:	2b80      	cmp	r3, #128	; 0x80
 8029cac:	b410      	push	{r4}
 8029cae:	8201      	strh	r1, [r0, #16]
 8029cb0:	8003      	strh	r3, [r0, #0]
 8029cb2:	d047      	beq.n	8029d44 <arm_rfft_fast_init_f32+0x9c>
 8029cb4:	d917      	bls.n	8029ce6 <arm_rfft_fast_init_f32+0x3e>
 8029cb6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8029cba:	d03d      	beq.n	8029d38 <arm_rfft_fast_init_f32+0x90>
 8029cbc:	d929      	bls.n	8029d12 <arm_rfft_fast_init_f32+0x6a>
 8029cbe:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8029cc2:	d020      	beq.n	8029d06 <arm_rfft_fast_init_f32+0x5e>
 8029cc4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8029cc8:	d113      	bne.n	8029cf2 <arm_rfft_fast_init_f32+0x4a>
 8029cca:	4921      	ldr	r1, [pc, #132]	; (8029d50 <arm_rfft_fast_init_f32+0xa8>)
 8029ccc:	4a21      	ldr	r2, [pc, #132]	; (8029d54 <arm_rfft_fast_init_f32+0xac>)
 8029cce:	4b22      	ldr	r3, [pc, #136]	; (8029d58 <arm_rfft_fast_init_f32+0xb0>)
 8029cd0:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8029cd4:	8184      	strh	r4, [r0, #12]
 8029cd6:	6081      	str	r1, [r0, #8]
 8029cd8:	6042      	str	r2, [r0, #4]
 8029cda:	6143      	str	r3, [r0, #20]
 8029cdc:	2000      	movs	r0, #0
 8029cde:	b240      	sxtb	r0, r0
 8029ce0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029ce4:	4770      	bx	lr
 8029ce6:	2b20      	cmp	r3, #32
 8029ce8:	d01c      	beq.n	8029d24 <arm_rfft_fast_init_f32+0x7c>
 8029cea:	2b40      	cmp	r3, #64	; 0x40
 8029cec:	d006      	beq.n	8029cfc <arm_rfft_fast_init_f32+0x54>
 8029cee:	2b10      	cmp	r3, #16
 8029cf0:	d01d      	beq.n	8029d2e <arm_rfft_fast_init_f32+0x86>
 8029cf2:	20ff      	movs	r0, #255	; 0xff
 8029cf4:	b240      	sxtb	r0, r0
 8029cf6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8029cfa:	4770      	bx	lr
 8029cfc:	2438      	movs	r4, #56	; 0x38
 8029cfe:	4917      	ldr	r1, [pc, #92]	; (8029d5c <arm_rfft_fast_init_f32+0xb4>)
 8029d00:	4a17      	ldr	r2, [pc, #92]	; (8029d60 <arm_rfft_fast_init_f32+0xb8>)
 8029d02:	4b18      	ldr	r3, [pc, #96]	; (8029d64 <arm_rfft_fast_init_f32+0xbc>)
 8029d04:	e7e6      	b.n	8029cd4 <arm_rfft_fast_init_f32+0x2c>
 8029d06:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8029d0a:	4917      	ldr	r1, [pc, #92]	; (8029d68 <arm_rfft_fast_init_f32+0xc0>)
 8029d0c:	4a17      	ldr	r2, [pc, #92]	; (8029d6c <arm_rfft_fast_init_f32+0xc4>)
 8029d0e:	4b18      	ldr	r3, [pc, #96]	; (8029d70 <arm_rfft_fast_init_f32+0xc8>)
 8029d10:	e7e0      	b.n	8029cd4 <arm_rfft_fast_init_f32+0x2c>
 8029d12:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8029d16:	d1ec      	bne.n	8029cf2 <arm_rfft_fast_init_f32+0x4a>
 8029d18:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8029d1c:	4915      	ldr	r1, [pc, #84]	; (8029d74 <arm_rfft_fast_init_f32+0xcc>)
 8029d1e:	4a16      	ldr	r2, [pc, #88]	; (8029d78 <arm_rfft_fast_init_f32+0xd0>)
 8029d20:	4b16      	ldr	r3, [pc, #88]	; (8029d7c <arm_rfft_fast_init_f32+0xd4>)
 8029d22:	e7d7      	b.n	8029cd4 <arm_rfft_fast_init_f32+0x2c>
 8029d24:	2430      	movs	r4, #48	; 0x30
 8029d26:	4916      	ldr	r1, [pc, #88]	; (8029d80 <arm_rfft_fast_init_f32+0xd8>)
 8029d28:	4a16      	ldr	r2, [pc, #88]	; (8029d84 <arm_rfft_fast_init_f32+0xdc>)
 8029d2a:	4b17      	ldr	r3, [pc, #92]	; (8029d88 <arm_rfft_fast_init_f32+0xe0>)
 8029d2c:	e7d2      	b.n	8029cd4 <arm_rfft_fast_init_f32+0x2c>
 8029d2e:	2414      	movs	r4, #20
 8029d30:	4916      	ldr	r1, [pc, #88]	; (8029d8c <arm_rfft_fast_init_f32+0xe4>)
 8029d32:	4a17      	ldr	r2, [pc, #92]	; (8029d90 <arm_rfft_fast_init_f32+0xe8>)
 8029d34:	4b17      	ldr	r3, [pc, #92]	; (8029d94 <arm_rfft_fast_init_f32+0xec>)
 8029d36:	e7cd      	b.n	8029cd4 <arm_rfft_fast_init_f32+0x2c>
 8029d38:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8029d3c:	4916      	ldr	r1, [pc, #88]	; (8029d98 <arm_rfft_fast_init_f32+0xf0>)
 8029d3e:	4a17      	ldr	r2, [pc, #92]	; (8029d9c <arm_rfft_fast_init_f32+0xf4>)
 8029d40:	4b17      	ldr	r3, [pc, #92]	; (8029da0 <arm_rfft_fast_init_f32+0xf8>)
 8029d42:	e7c7      	b.n	8029cd4 <arm_rfft_fast_init_f32+0x2c>
 8029d44:	24d0      	movs	r4, #208	; 0xd0
 8029d46:	4917      	ldr	r1, [pc, #92]	; (8029da4 <arm_rfft_fast_init_f32+0xfc>)
 8029d48:	4a17      	ldr	r2, [pc, #92]	; (8029da8 <arm_rfft_fast_init_f32+0x100>)
 8029d4a:	4b18      	ldr	r3, [pc, #96]	; (8029dac <arm_rfft_fast_init_f32+0x104>)
 8029d4c:	e7c2      	b.n	8029cd4 <arm_rfft_fast_init_f32+0x2c>
 8029d4e:	bf00      	nop
 8029d50:	0803f278 	.word	0x0803f278
 8029d54:	08030470 	.word	0x08030470
 8029d58:	080365e0 	.word	0x080365e0
 8029d5c:	08034570 	.word	0x08034570
 8029d60:	08041038 	.word	0x08041038
 8029d64:	08043528 	.word	0x08043528
 8029d68:	0803cf60 	.word	0x0803cf60
 8029d6c:	0803ae60 	.word	0x0803ae60
 8029d70:	080345e0 	.word	0x080345e0
 8029d74:	080431b8 	.word	0x080431b8
 8029d78:	0803a5e0 	.word	0x0803a5e0
 8029d7c:	08041238 	.word	0x08041238
 8029d80:	0803de18 	.word	0x0803de18
 8029d84:	0803ce60 	.word	0x0803ce60
 8029d88:	08034470 	.word	0x08034470
 8029d8c:	0803dd70 	.word	0x0803dd70
 8029d90:	0803ade0 	.word	0x0803ade0
 8029d94:	0803dd98 	.word	0x0803dd98
 8029d98:	08041a38 	.word	0x08041a38
 8029d9c:	0803e278 	.word	0x0803e278
 8029da0:	08041db8 	.word	0x08041db8
 8029da4:	08043728 	.word	0x08043728
 8029da8:	0803de78 	.word	0x0803de78
 8029dac:	08042db8 	.word	0x08042db8

08029db0 <arm_rfft_fast_f32>:
 8029db0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029db4:	8a06      	ldrh	r6, [r0, #16]
 8029db6:	0876      	lsrs	r6, r6, #1
 8029db8:	4607      	mov	r7, r0
 8029dba:	4615      	mov	r5, r2
 8029dbc:	8006      	strh	r6, [r0, #0]
 8029dbe:	460c      	mov	r4, r1
 8029dc0:	2b00      	cmp	r3, #0
 8029dc2:	d15c      	bne.n	8029e7e <arm_rfft_fast_f32+0xce>
 8029dc4:	461a      	mov	r2, r3
 8029dc6:	2301      	movs	r3, #1
 8029dc8:	f000 fbe6 	bl	802a598 <arm_cfft_f32>
 8029dcc:	edd4 7a00 	vldr	s15, [r4]
 8029dd0:	ed94 7a01 	vldr	s14, [r4, #4]
 8029dd4:	883e      	ldrh	r6, [r7, #0]
 8029dd6:	6978      	ldr	r0, [r7, #20]
 8029dd8:	ee37 7a07 	vadd.f32	s14, s14, s14
 8029ddc:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8029de0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8029de4:	ee77 6a87 	vadd.f32	s13, s15, s14
 8029de8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029dec:	3e01      	subs	r6, #1
 8029dee:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8029df2:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029df6:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8029dfa:	ed85 7a00 	vstr	s14, [r5]
 8029dfe:	edc5 7a01 	vstr	s15, [r5, #4]
 8029e02:	3010      	adds	r0, #16
 8029e04:	f105 0210 	add.w	r2, r5, #16
 8029e08:	3b08      	subs	r3, #8
 8029e0a:	f104 0110 	add.w	r1, r4, #16
 8029e0e:	ed51 4a02 	vldr	s9, [r1, #-8]
 8029e12:	ed93 5a02 	vldr	s10, [r3, #8]
 8029e16:	ed11 7a01 	vldr	s14, [r1, #-4]
 8029e1a:	ed10 6a02 	vldr	s12, [r0, #-8]
 8029e1e:	edd3 5a03 	vldr	s11, [r3, #12]
 8029e22:	ed50 6a01 	vldr	s13, [r0, #-4]
 8029e26:	ee75 7a64 	vsub.f32	s15, s10, s9
 8029e2a:	ee35 4a87 	vadd.f32	s8, s11, s14
 8029e2e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029e32:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029e36:	ee66 4a27 	vmul.f32	s9, s12, s15
 8029e3a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8029e3e:	ee34 5a85 	vadd.f32	s10, s9, s10
 8029e42:	ee26 6a04 	vmul.f32	s12, s12, s8
 8029e46:	ee66 6a84 	vmul.f32	s13, s13, s8
 8029e4a:	ee77 7a25 	vadd.f32	s15, s14, s11
 8029e4e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8029e52:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029e56:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8029e5a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029e5e:	3e01      	subs	r6, #1
 8029e60:	ed42 6a02 	vstr	s13, [r2, #-8]
 8029e64:	ed42 7a01 	vstr	s15, [r2, #-4]
 8029e68:	f1a3 0308 	sub.w	r3, r3, #8
 8029e6c:	f101 0108 	add.w	r1, r1, #8
 8029e70:	f100 0008 	add.w	r0, r0, #8
 8029e74:	f102 0208 	add.w	r2, r2, #8
 8029e78:	d1c9      	bne.n	8029e0e <arm_rfft_fast_f32+0x5e>
 8029e7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029e7e:	edd1 7a00 	vldr	s15, [r1]
 8029e82:	edd1 6a01 	vldr	s13, [r1, #4]
 8029e86:	6941      	ldr	r1, [r0, #20]
 8029e88:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029e8c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029e90:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8029e94:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029e98:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029e9c:	3e01      	subs	r6, #1
 8029e9e:	ed82 7a00 	vstr	s14, [r2]
 8029ea2:	edc2 7a01 	vstr	s15, [r2, #4]
 8029ea6:	00f0      	lsls	r0, r6, #3
 8029ea8:	b3ee      	cbz	r6, 8029f26 <arm_rfft_fast_f32+0x176>
 8029eaa:	3808      	subs	r0, #8
 8029eac:	f101 0e10 	add.w	lr, r1, #16
 8029eb0:	4420      	add	r0, r4
 8029eb2:	f104 0110 	add.w	r1, r4, #16
 8029eb6:	f102 0c10 	add.w	ip, r2, #16
 8029eba:	ed90 7a02 	vldr	s14, [r0, #8]
 8029ebe:	ed51 6a02 	vldr	s13, [r1, #-8]
 8029ec2:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8029ec6:	ed90 4a03 	vldr	s8, [r0, #12]
 8029eca:	ed11 5a01 	vldr	s10, [r1, #-4]
 8029ece:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8029ed2:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8029ed6:	ee74 4a05 	vadd.f32	s9, s8, s10
 8029eda:	ee26 3a27 	vmul.f32	s6, s12, s15
 8029ede:	ee77 6a26 	vadd.f32	s13, s14, s13
 8029ee2:	ee35 5a44 	vsub.f32	s10, s10, s8
 8029ee6:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8029eea:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029eee:	ee77 7a05 	vadd.f32	s15, s14, s10
 8029ef2:	ee26 6a24 	vmul.f32	s12, s12, s9
 8029ef6:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8029efa:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029efe:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8029f02:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029f06:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029f0a:	3e01      	subs	r6, #1
 8029f0c:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8029f10:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8029f14:	f1a0 0008 	sub.w	r0, r0, #8
 8029f18:	f101 0108 	add.w	r1, r1, #8
 8029f1c:	f10e 0e08 	add.w	lr, lr, #8
 8029f20:	f10c 0c08 	add.w	ip, ip, #8
 8029f24:	d1c9      	bne.n	8029eba <arm_rfft_fast_f32+0x10a>
 8029f26:	4638      	mov	r0, r7
 8029f28:	4629      	mov	r1, r5
 8029f2a:	461a      	mov	r2, r3
 8029f2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029f30:	2301      	movs	r3, #1
 8029f32:	f000 bb31 	b.w	802a598 <arm_cfft_f32>
 8029f36:	bf00      	nop

08029f38 <arm_cfft_radix8by2_f32>:
 8029f38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029f3c:	ed2d 8b08 	vpush	{d8-d11}
 8029f40:	f8b0 e000 	ldrh.w	lr, [r0]
 8029f44:	6842      	ldr	r2, [r0, #4]
 8029f46:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8029f4a:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8029f4e:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8029f52:	4607      	mov	r7, r0
 8029f54:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8029f58:	f000 80af 	beq.w	802a0ba <arm_cfft_radix8by2_f32+0x182>
 8029f5c:	3310      	adds	r3, #16
 8029f5e:	18ce      	adds	r6, r1, r3
 8029f60:	3210      	adds	r2, #16
 8029f62:	4443      	add	r3, r8
 8029f64:	f101 0510 	add.w	r5, r1, #16
 8029f68:	f108 0410 	add.w	r4, r8, #16
 8029f6c:	ed54 1a04 	vldr	s3, [r4, #-16]
 8029f70:	ed13 4a04 	vldr	s8, [r3, #-16]
 8029f74:	ed53 3a03 	vldr	s7, [r3, #-12]
 8029f78:	ed53 5a02 	vldr	s11, [r3, #-8]
 8029f7c:	ed13 5a01 	vldr	s10, [r3, #-4]
 8029f80:	ed54 6a03 	vldr	s13, [r4, #-12]
 8029f84:	ed14 0a02 	vldr	s0, [r4, #-8]
 8029f88:	ed16 2a04 	vldr	s4, [r6, #-16]
 8029f8c:	ed56 2a03 	vldr	s5, [r6, #-12]
 8029f90:	ed15 6a03 	vldr	s12, [r5, #-12]
 8029f94:	ed15 7a01 	vldr	s14, [r5, #-4]
 8029f98:	ed15 3a04 	vldr	s6, [r5, #-16]
 8029f9c:	ed54 7a01 	vldr	s15, [r4, #-4]
 8029fa0:	ed56 0a02 	vldr	s1, [r6, #-8]
 8029fa4:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029fa8:	ed55 4a02 	vldr	s9, [r5, #-8]
 8029fac:	ee73 ba21 	vadd.f32	s23, s6, s3
 8029fb0:	ee36 ba26 	vadd.f32	s22, s12, s13
 8029fb4:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029fb8:	ee72 9a04 	vadd.f32	s19, s4, s8
 8029fbc:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029fc0:	ee31 8a05 	vadd.f32	s16, s2, s10
 8029fc4:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029fc8:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8029fcc:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029fd0:	ed05 ba03 	vstr	s22, [r5, #-12]
 8029fd4:	ed45 aa02 	vstr	s21, [r5, #-8]
 8029fd8:	ed05 aa01 	vstr	s20, [r5, #-4]
 8029fdc:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029fe0:	ed46 9a04 	vstr	s19, [r6, #-16]
 8029fe4:	ed06 9a03 	vstr	s18, [r6, #-12]
 8029fe8:	ed46 8a02 	vstr	s17, [r6, #-8]
 8029fec:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029ff0:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8029ff4:	ed12 6a03 	vldr	s12, [r2, #-12]
 8029ff8:	ed52 2a04 	vldr	s5, [r2, #-16]
 8029ffc:	ee33 3a61 	vsub.f32	s6, s6, s3
 802a000:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a004:	ee26 8a86 	vmul.f32	s16, s13, s12
 802a008:	ee24 2a06 	vmul.f32	s4, s8, s12
 802a00c:	ee63 1a22 	vmul.f32	s3, s6, s5
 802a010:	ee24 4a22 	vmul.f32	s8, s8, s5
 802a014:	ee23 3a06 	vmul.f32	s6, s6, s12
 802a018:	ee66 6aa2 	vmul.f32	s13, s13, s5
 802a01c:	ee23 6a86 	vmul.f32	s12, s7, s12
 802a020:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a024:	ee36 6a04 	vadd.f32	s12, s12, s8
 802a028:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a02c:	ee72 3a63 	vsub.f32	s7, s4, s7
 802a030:	ee71 2a88 	vadd.f32	s5, s3, s16
 802a034:	ed44 6a03 	vstr	s13, [r4, #-12]
 802a038:	ed44 2a04 	vstr	s5, [r4, #-16]
 802a03c:	ed43 3a04 	vstr	s7, [r3, #-16]
 802a040:	ed03 6a03 	vstr	s12, [r3, #-12]
 802a044:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a048:	ee75 6ae0 	vsub.f32	s13, s11, s1
 802a04c:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a050:	ed52 5a02 	vldr	s11, [r2, #-8]
 802a054:	ee35 6a41 	vsub.f32	s12, s10, s2
 802a058:	ee74 4ac0 	vsub.f32	s9, s9, s0
 802a05c:	ee67 3a87 	vmul.f32	s7, s15, s14
 802a060:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a064:	ee24 4aa5 	vmul.f32	s8, s9, s11
 802a068:	ee67 7aa5 	vmul.f32	s15, s15, s11
 802a06c:	ee64 4a87 	vmul.f32	s9, s9, s14
 802a070:	ee66 6aa5 	vmul.f32	s13, s13, s11
 802a074:	ee26 7a07 	vmul.f32	s14, s12, s14
 802a078:	ee26 6a25 	vmul.f32	s12, s12, s11
 802a07c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 802a080:	ee74 5a23 	vadd.f32	s11, s8, s7
 802a084:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a088:	ee37 7a26 	vadd.f32	s14, s14, s13
 802a08c:	f1be 0e01 	subs.w	lr, lr, #1
 802a090:	ed44 5a02 	vstr	s11, [r4, #-8]
 802a094:	f105 0510 	add.w	r5, r5, #16
 802a098:	ed44 7a01 	vstr	s15, [r4, #-4]
 802a09c:	f106 0610 	add.w	r6, r6, #16
 802a0a0:	ed03 6a02 	vstr	s12, [r3, #-8]
 802a0a4:	ed03 7a01 	vstr	s14, [r3, #-4]
 802a0a8:	f102 0210 	add.w	r2, r2, #16
 802a0ac:	f104 0410 	add.w	r4, r4, #16
 802a0b0:	f103 0310 	add.w	r3, r3, #16
 802a0b4:	f47f af5a 	bne.w	8029f6c <arm_cfft_radix8by2_f32+0x34>
 802a0b8:	687a      	ldr	r2, [r7, #4]
 802a0ba:	fa1f f48c 	uxth.w	r4, ip
 802a0be:	4608      	mov	r0, r1
 802a0c0:	2302      	movs	r3, #2
 802a0c2:	4621      	mov	r1, r4
 802a0c4:	f000 fbca 	bl	802a85c <arm_radix8_butterfly_f32>
 802a0c8:	ecbd 8b08 	vpop	{d8-d11}
 802a0cc:	4640      	mov	r0, r8
 802a0ce:	4621      	mov	r1, r4
 802a0d0:	687a      	ldr	r2, [r7, #4]
 802a0d2:	2302      	movs	r3, #2
 802a0d4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802a0d8:	f000 bbc0 	b.w	802a85c <arm_radix8_butterfly_f32>

0802a0dc <arm_cfft_radix8by4_f32>:
 802a0dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a0e0:	ed2d 8b0a 	vpush	{d8-d12}
 802a0e4:	8802      	ldrh	r2, [r0, #0]
 802a0e6:	ed91 6a00 	vldr	s12, [r1]
 802a0ea:	b08f      	sub	sp, #60	; 0x3c
 802a0ec:	460f      	mov	r7, r1
 802a0ee:	0852      	lsrs	r2, r2, #1
 802a0f0:	0093      	lsls	r3, r2, #2
 802a0f2:	900c      	str	r0, [sp, #48]	; 0x30
 802a0f4:	9103      	str	r1, [sp, #12]
 802a0f6:	6841      	ldr	r1, [r0, #4]
 802a0f8:	ed97 7a01 	vldr	s14, [r7, #4]
 802a0fc:	4638      	mov	r0, r7
 802a0fe:	4418      	add	r0, r3
 802a100:	4606      	mov	r6, r0
 802a102:	9009      	str	r0, [sp, #36]	; 0x24
 802a104:	4418      	add	r0, r3
 802a106:	edd0 6a00 	vldr	s13, [r0]
 802a10a:	edd6 3a00 	vldr	s7, [r6]
 802a10e:	edd6 2a01 	vldr	s5, [r6, #4]
 802a112:	edd0 7a01 	vldr	s15, [r0, #4]
 802a116:	900a      	str	r0, [sp, #40]	; 0x28
 802a118:	ee76 5a26 	vadd.f32	s11, s12, s13
 802a11c:	4604      	mov	r4, r0
 802a11e:	4625      	mov	r5, r4
 802a120:	441c      	add	r4, r3
 802a122:	ed94 4a00 	vldr	s8, [r4]
 802a126:	ed94 5a01 	vldr	s10, [r4, #4]
 802a12a:	9401      	str	r4, [sp, #4]
 802a12c:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802a130:	4630      	mov	r0, r6
 802a132:	ee74 4a24 	vadd.f32	s9, s8, s9
 802a136:	463e      	mov	r6, r7
 802a138:	ee14 ea90 	vmov	lr, s9
 802a13c:	ee76 6a66 	vsub.f32	s13, s12, s13
 802a140:	f846 eb08 	str.w	lr, [r6], #8
 802a144:	ee37 6a27 	vadd.f32	s12, s14, s15
 802a148:	edd0 4a01 	vldr	s9, [r0, #4]
 802a14c:	9604      	str	r6, [sp, #16]
 802a14e:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a152:	9e01      	ldr	r6, [sp, #4]
 802a154:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802a158:	ed96 2a01 	vldr	s4, [r6, #4]
 802a15c:	ee36 7a24 	vadd.f32	s14, s12, s9
 802a160:	ee75 5ae3 	vsub.f32	s11, s11, s7
 802a164:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802a168:	ee36 6a62 	vsub.f32	s12, s12, s5
 802a16c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 802a170:	ee76 6ae2 	vsub.f32	s13, s13, s5
 802a174:	ee73 3a45 	vsub.f32	s7, s6, s10
 802a178:	4604      	mov	r4, r0
 802a17a:	ee36 6a45 	vsub.f32	s12, s12, s10
 802a17e:	ee75 6a26 	vadd.f32	s13, s10, s13
 802a182:	46a3      	mov	fp, r4
 802a184:	ee37 7a02 	vadd.f32	s14, s14, s4
 802a188:	ee34 5a84 	vadd.f32	s10, s9, s8
 802a18c:	ee13 8a90 	vmov	r8, s7
 802a190:	46a4      	mov	ip, r4
 802a192:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802a196:	ed87 7a01 	vstr	s14, [r7, #4]
 802a19a:	f84b 8b08 	str.w	r8, [fp], #8
 802a19e:	f1ac 0704 	sub.w	r7, ip, #4
 802a1a2:	ed8c 5a01 	vstr	s10, [ip, #4]
 802a1a6:	f101 0c08 	add.w	ip, r1, #8
 802a1aa:	462c      	mov	r4, r5
 802a1ac:	f8cd c014 	str.w	ip, [sp, #20]
 802a1b0:	ee15 ca90 	vmov	ip, s11
 802a1b4:	f844 cb08 	str.w	ip, [r4], #8
 802a1b8:	9407      	str	r4, [sp, #28]
 802a1ba:	f101 0410 	add.w	r4, r1, #16
 802a1be:	ed85 6a01 	vstr	s12, [r5, #4]
 802a1c2:	0852      	lsrs	r2, r2, #1
 802a1c4:	9402      	str	r4, [sp, #8]
 802a1c6:	462c      	mov	r4, r5
 802a1c8:	f101 0518 	add.w	r5, r1, #24
 802a1cc:	920b      	str	r2, [sp, #44]	; 0x2c
 802a1ce:	46b2      	mov	sl, r6
 802a1d0:	9506      	str	r5, [sp, #24]
 802a1d2:	ee77 7ac4 	vsub.f32	s15, s15, s8
 802a1d6:	3a02      	subs	r2, #2
 802a1d8:	ee16 5a90 	vmov	r5, s13
 802a1dc:	46b6      	mov	lr, r6
 802a1de:	4630      	mov	r0, r6
 802a1e0:	0852      	lsrs	r2, r2, #1
 802a1e2:	f84a 5b08 	str.w	r5, [sl], #8
 802a1e6:	f1a0 0604 	sub.w	r6, r0, #4
 802a1ea:	edce 7a01 	vstr	s15, [lr, #4]
 802a1ee:	9208      	str	r2, [sp, #32]
 802a1f0:	f000 8130 	beq.w	802a454 <arm_cfft_radix8by4_f32+0x378>
 802a1f4:	4691      	mov	r9, r2
 802a1f6:	9a03      	ldr	r2, [sp, #12]
 802a1f8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 802a1fc:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802a200:	3b08      	subs	r3, #8
 802a202:	f102 0510 	add.w	r5, r2, #16
 802a206:	f101 0c20 	add.w	ip, r1, #32
 802a20a:	f1a4 020c 	sub.w	r2, r4, #12
 802a20e:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802a212:	4433      	add	r3, r6
 802a214:	3410      	adds	r4, #16
 802a216:	4650      	mov	r0, sl
 802a218:	4659      	mov	r1, fp
 802a21a:	ed55 3a02 	vldr	s7, [r5, #-8]
 802a21e:	ed14 5a02 	vldr	s10, [r4, #-8]
 802a222:	ed91 7a00 	vldr	s14, [r1]
 802a226:	edd0 7a00 	vldr	s15, [r0]
 802a22a:	ed15 4a01 	vldr	s8, [r5, #-4]
 802a22e:	ed54 5a01 	vldr	s11, [r4, #-4]
 802a232:	edd0 6a01 	vldr	s13, [r0, #4]
 802a236:	ed91 6a01 	vldr	s12, [r1, #4]
 802a23a:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a23e:	ee34 0a25 	vadd.f32	s0, s8, s11
 802a242:	ee78 4a07 	vadd.f32	s9, s16, s14
 802a246:	ee74 5a65 	vsub.f32	s11, s8, s11
 802a24a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 802a24e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 802a252:	ed45 4a02 	vstr	s9, [r5, #-8]
 802a256:	edd1 4a01 	vldr	s9, [r1, #4]
 802a25a:	ed90 4a01 	vldr	s8, [r0, #4]
 802a25e:	ee70 4a24 	vadd.f32	s9, s0, s9
 802a262:	ee76 aa05 	vadd.f32	s21, s12, s10
 802a266:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a26a:	ee35 aac7 	vsub.f32	s20, s11, s14
 802a26e:	ed45 4a01 	vstr	s9, [r5, #-4]
 802a272:	edd6 1a00 	vldr	s3, [r6]
 802a276:	edd7 0a00 	vldr	s1, [r7]
 802a27a:	ed92 4a02 	vldr	s8, [r2, #8]
 802a27e:	edd3 3a02 	vldr	s7, [r3, #8]
 802a282:	ed93 2a01 	vldr	s4, [r3, #4]
 802a286:	ed16 1a01 	vldr	s2, [r6, #-4]
 802a28a:	edd2 2a01 	vldr	s5, [r2, #4]
 802a28e:	ed57 9a01 	vldr	s19, [r7, #-4]
 802a292:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802a296:	ee39 3a81 	vadd.f32	s6, s19, s2
 802a29a:	ee74 8a84 	vadd.f32	s17, s9, s8
 802a29e:	ee70 1ae1 	vsub.f32	s3, s1, s3
 802a2a2:	ee73 8aa8 	vadd.f32	s17, s7, s17
 802a2a6:	ee7a aae6 	vsub.f32	s21, s21, s13
 802a2aa:	ee18 aa90 	vmov	sl, s17
 802a2ae:	f847 a908 	str.w	sl, [r7], #-8
 802a2b2:	edd2 8a01 	vldr	s17, [r2, #4]
 802a2b6:	ed93 9a01 	vldr	s18, [r3, #4]
 802a2ba:	ee73 8a28 	vadd.f32	s17, s6, s17
 802a2be:	ee3a aa27 	vadd.f32	s20, s20, s15
 802a2c2:	ee78 8a89 	vadd.f32	s17, s17, s18
 802a2c6:	ee74 0a63 	vsub.f32	s1, s8, s7
 802a2ca:	edc7 8a01 	vstr	s17, [r7, #4]
 802a2ce:	ed18 ba02 	vldr	s22, [r8, #-8]
 802a2d2:	ed58 8a01 	vldr	s17, [r8, #-4]
 802a2d6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 802a2da:	ee6a ba28 	vmul.f32	s23, s20, s17
 802a2de:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802a2e2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 802a2e6:	ee30 9a81 	vadd.f32	s18, s1, s2
 802a2ea:	ee79 9a82 	vadd.f32	s19, s19, s4
 802a2ee:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802a2f2:	ee6a aaa8 	vmul.f32	s21, s21, s17
 802a2f6:	ee69 baa8 	vmul.f32	s23, s19, s17
 802a2fa:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802a2fe:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802a302:	ee69 8a28 	vmul.f32	s17, s18, s17
 802a306:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802a30a:	ee1c aa10 	vmov	sl, s24
 802a30e:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802a312:	f841 ab08 	str.w	sl, [r1], #8
 802a316:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802a31a:	ee3b bacb 	vsub.f32	s22, s23, s22
 802a31e:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802a322:	ee33 3a62 	vsub.f32	s6, s6, s5
 802a326:	ed01 aa01 	vstr	s20, [r1, #-4]
 802a32a:	edc2 8a01 	vstr	s17, [r2, #4]
 802a32e:	ed82 ba02 	vstr	s22, [r2, #8]
 802a332:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802a336:	ee74 3a63 	vsub.f32	s7, s8, s7
 802a33a:	ee38 8a47 	vsub.f32	s16, s16, s14
 802a33e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802a342:	ee30 0a46 	vsub.f32	s0, s0, s12
 802a346:	ee33 3a42 	vsub.f32	s6, s6, s4
 802a34a:	ee38 8a67 	vsub.f32	s16, s16, s15
 802a34e:	ee30 0a66 	vsub.f32	s0, s0, s13
 802a352:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802a356:	ee63 8a04 	vmul.f32	s17, s6, s8
 802a35a:	ee28 aa24 	vmul.f32	s20, s16, s9
 802a35e:	ee60 9a04 	vmul.f32	s19, s0, s8
 802a362:	ee28 8a04 	vmul.f32	s16, s16, s8
 802a366:	ee20 0a24 	vmul.f32	s0, s0, s9
 802a36a:	ee63 3a84 	vmul.f32	s7, s7, s8
 802a36e:	ee39 4a68 	vsub.f32	s8, s18, s17
 802a372:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802a376:	ee14 aa10 	vmov	sl, s8
 802a37a:	ee30 0a48 	vsub.f32	s0, s0, s16
 802a37e:	ee63 4a24 	vmul.f32	s9, s6, s9
 802a382:	ed44 9a02 	vstr	s19, [r4, #-8]
 802a386:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802a38a:	ed04 0a01 	vstr	s0, [r4, #-4]
 802a38e:	f846 a908 	str.w	sl, [r6], #-8
 802a392:	ee35 6a46 	vsub.f32	s12, s10, s12
 802a396:	ee35 7a87 	vadd.f32	s14, s11, s14
 802a39a:	edc6 3a01 	vstr	s7, [r6, #4]
 802a39e:	ee76 6a86 	vadd.f32	s13, s13, s12
 802a3a2:	ee77 7a67 	vsub.f32	s15, s14, s15
 802a3a6:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 802a3aa:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802a3ae:	ee67 5a86 	vmul.f32	s11, s15, s12
 802a3b2:	ee26 5a87 	vmul.f32	s10, s13, s14
 802a3b6:	ee72 2a62 	vsub.f32	s5, s4, s5
 802a3ba:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a3be:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802a3c2:	ee75 5a25 	vadd.f32	s11, s10, s11
 802a3c6:	ee62 0a86 	vmul.f32	s1, s5, s12
 802a3ca:	ee66 6a86 	vmul.f32	s13, s13, s12
 802a3ce:	ee67 7a87 	vmul.f32	s15, s15, s14
 802a3d2:	ee21 6a06 	vmul.f32	s12, s2, s12
 802a3d6:	ee62 2a87 	vmul.f32	s5, s5, s14
 802a3da:	ee21 1a07 	vmul.f32	s2, s2, s14
 802a3de:	ee15 aa90 	vmov	sl, s11
 802a3e2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802a3e6:	f840 ab08 	str.w	sl, [r0], #8
 802a3ea:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802a3ee:	ee76 2a22 	vadd.f32	s5, s12, s5
 802a3f2:	f1b9 0901 	subs.w	r9, r9, #1
 802a3f6:	ed40 7a01 	vstr	s15, [r0, #-4]
 802a3fa:	f105 0508 	add.w	r5, r5, #8
 802a3fe:	ed83 1a02 	vstr	s2, [r3, #8]
 802a402:	edc3 2a01 	vstr	s5, [r3, #4]
 802a406:	f108 0808 	add.w	r8, r8, #8
 802a40a:	f1a2 0208 	sub.w	r2, r2, #8
 802a40e:	f10c 0c10 	add.w	ip, ip, #16
 802a412:	f104 0408 	add.w	r4, r4, #8
 802a416:	f10e 0e18 	add.w	lr, lr, #24
 802a41a:	f1a3 0308 	sub.w	r3, r3, #8
 802a41e:	f47f aefc 	bne.w	802a21a <arm_cfft_radix8by4_f32+0x13e>
 802a422:	9908      	ldr	r1, [sp, #32]
 802a424:	9802      	ldr	r0, [sp, #8]
 802a426:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802a42a:	00cb      	lsls	r3, r1, #3
 802a42c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802a430:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 802a434:	9102      	str	r1, [sp, #8]
 802a436:	9904      	ldr	r1, [sp, #16]
 802a438:	4419      	add	r1, r3
 802a43a:	9104      	str	r1, [sp, #16]
 802a43c:	9905      	ldr	r1, [sp, #20]
 802a43e:	4419      	add	r1, r3
 802a440:	9105      	str	r1, [sp, #20]
 802a442:	9907      	ldr	r1, [sp, #28]
 802a444:	449b      	add	fp, r3
 802a446:	4419      	add	r1, r3
 802a448:	449a      	add	sl, r3
 802a44a:	9b06      	ldr	r3, [sp, #24]
 802a44c:	9107      	str	r1, [sp, #28]
 802a44e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 802a452:	9306      	str	r3, [sp, #24]
 802a454:	9a04      	ldr	r2, [sp, #16]
 802a456:	9807      	ldr	r0, [sp, #28]
 802a458:	edd2 3a00 	vldr	s7, [r2]
 802a45c:	ed90 4a00 	vldr	s8, [r0]
 802a460:	eddb 7a00 	vldr	s15, [fp]
 802a464:	ed9a 3a00 	vldr	s6, [sl]
 802a468:	edd2 4a01 	vldr	s9, [r2, #4]
 802a46c:	ed90 7a01 	vldr	s14, [r0, #4]
 802a470:	ed9b 2a01 	vldr	s4, [fp, #4]
 802a474:	edda 5a01 	vldr	s11, [sl, #4]
 802a478:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 802a47c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802a47e:	ee73 6a84 	vadd.f32	s13, s7, s8
 802a482:	ee34 6a87 	vadd.f32	s12, s9, s14
 802a486:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802a48a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 802a48e:	ee33 5a05 	vadd.f32	s10, s6, s10
 802a492:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802a496:	ed82 5a00 	vstr	s10, [r2]
 802a49a:	ed9b 5a01 	vldr	s10, [fp, #4]
 802a49e:	edda 4a01 	vldr	s9, [sl, #4]
 802a4a2:	ee36 5a05 	vadd.f32	s10, s12, s10
 802a4a6:	ee72 3a04 	vadd.f32	s7, s4, s8
 802a4aa:	ee35 5a24 	vadd.f32	s10, s10, s9
 802a4ae:	ee77 4a67 	vsub.f32	s9, s14, s15
 802a4b2:	ed82 5a01 	vstr	s10, [r2, #4]
 802a4b6:	9a05      	ldr	r2, [sp, #20]
 802a4b8:	ee34 5a83 	vadd.f32	s10, s9, s6
 802a4bc:	edd2 1a00 	vldr	s3, [r2]
 802a4c0:	edd2 2a01 	vldr	s5, [r2, #4]
 802a4c4:	9a02      	ldr	r2, [sp, #8]
 802a4c6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 802a4ca:	ee36 6a42 	vsub.f32	s12, s12, s4
 802a4ce:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802a4d2:	ee63 3aa2 	vmul.f32	s7, s7, s5
 802a4d6:	ee65 2a22 	vmul.f32	s5, s10, s5
 802a4da:	ee25 5a21 	vmul.f32	s10, s10, s3
 802a4de:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802a4e2:	ee35 5a63 	vsub.f32	s10, s10, s7
 802a4e6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 802a4ea:	edcb 2a00 	vstr	s5, [fp]
 802a4ee:	ed8b 5a01 	vstr	s10, [fp, #4]
 802a4f2:	edd2 3a01 	vldr	s7, [r2, #4]
 802a4f6:	ed92 5a00 	vldr	s10, [r2]
 802a4fa:	9a06      	ldr	r2, [sp, #24]
 802a4fc:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a500:	ee36 6a65 	vsub.f32	s12, s12, s11
 802a504:	ee66 4a85 	vmul.f32	s9, s13, s10
 802a508:	ee26 5a05 	vmul.f32	s10, s12, s10
 802a50c:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802a510:	ee26 6a23 	vmul.f32	s12, s12, s7
 802a514:	ee75 6a66 	vsub.f32	s13, s10, s13
 802a518:	ee34 6a86 	vadd.f32	s12, s9, s12
 802a51c:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a520:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a524:	edc0 6a01 	vstr	s13, [r0, #4]
 802a528:	ed80 6a00 	vstr	s12, [r0]
 802a52c:	ed92 6a01 	vldr	s12, [r2, #4]
 802a530:	9803      	ldr	r0, [sp, #12]
 802a532:	ee77 7a43 	vsub.f32	s15, s14, s6
 802a536:	ee75 5a84 	vadd.f32	s11, s11, s8
 802a53a:	ed92 7a00 	vldr	s14, [r2]
 802a53e:	ee65 6a87 	vmul.f32	s13, s11, s14
 802a542:	ee27 7a87 	vmul.f32	s14, s15, s14
 802a546:	ee65 5a86 	vmul.f32	s11, s11, s12
 802a54a:	ee67 7a86 	vmul.f32	s15, s15, s12
 802a54e:	ee77 5a65 	vsub.f32	s11, s14, s11
 802a552:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802a556:	edca 5a01 	vstr	s11, [sl, #4]
 802a55a:	edca 7a00 	vstr	s15, [sl]
 802a55e:	6872      	ldr	r2, [r6, #4]
 802a560:	4621      	mov	r1, r4
 802a562:	2304      	movs	r3, #4
 802a564:	f000 f97a 	bl	802a85c <arm_radix8_butterfly_f32>
 802a568:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a56a:	6872      	ldr	r2, [r6, #4]
 802a56c:	4621      	mov	r1, r4
 802a56e:	2304      	movs	r3, #4
 802a570:	f000 f974 	bl	802a85c <arm_radix8_butterfly_f32>
 802a574:	980a      	ldr	r0, [sp, #40]	; 0x28
 802a576:	6872      	ldr	r2, [r6, #4]
 802a578:	4621      	mov	r1, r4
 802a57a:	2304      	movs	r3, #4
 802a57c:	f000 f96e 	bl	802a85c <arm_radix8_butterfly_f32>
 802a580:	9801      	ldr	r0, [sp, #4]
 802a582:	6872      	ldr	r2, [r6, #4]
 802a584:	4621      	mov	r1, r4
 802a586:	2304      	movs	r3, #4
 802a588:	b00f      	add	sp, #60	; 0x3c
 802a58a:	ecbd 8b0a 	vpop	{d8-d12}
 802a58e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a592:	f000 b963 	b.w	802a85c <arm_radix8_butterfly_f32>
 802a596:	bf00      	nop

0802a598 <arm_cfft_f32>:
 802a598:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a59c:	2a01      	cmp	r2, #1
 802a59e:	4606      	mov	r6, r0
 802a5a0:	4617      	mov	r7, r2
 802a5a2:	460c      	mov	r4, r1
 802a5a4:	4698      	mov	r8, r3
 802a5a6:	8805      	ldrh	r5, [r0, #0]
 802a5a8:	d054      	beq.n	802a654 <arm_cfft_f32+0xbc>
 802a5aa:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a5ae:	d04c      	beq.n	802a64a <arm_cfft_f32+0xb2>
 802a5b0:	d916      	bls.n	802a5e0 <arm_cfft_f32+0x48>
 802a5b2:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802a5b6:	d01a      	beq.n	802a5ee <arm_cfft_f32+0x56>
 802a5b8:	d95c      	bls.n	802a674 <arm_cfft_f32+0xdc>
 802a5ba:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802a5be:	d044      	beq.n	802a64a <arm_cfft_f32+0xb2>
 802a5c0:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802a5c4:	d105      	bne.n	802a5d2 <arm_cfft_f32+0x3a>
 802a5c6:	4620      	mov	r0, r4
 802a5c8:	4629      	mov	r1, r5
 802a5ca:	6872      	ldr	r2, [r6, #4]
 802a5cc:	2301      	movs	r3, #1
 802a5ce:	f000 f945 	bl	802a85c <arm_radix8_butterfly_f32>
 802a5d2:	f1b8 0f00 	cmp.w	r8, #0
 802a5d6:	d111      	bne.n	802a5fc <arm_cfft_f32+0x64>
 802a5d8:	2f01      	cmp	r7, #1
 802a5da:	d016      	beq.n	802a60a <arm_cfft_f32+0x72>
 802a5dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a5e0:	2d20      	cmp	r5, #32
 802a5e2:	d032      	beq.n	802a64a <arm_cfft_f32+0xb2>
 802a5e4:	d94a      	bls.n	802a67c <arm_cfft_f32+0xe4>
 802a5e6:	2d40      	cmp	r5, #64	; 0x40
 802a5e8:	d0ed      	beq.n	802a5c6 <arm_cfft_f32+0x2e>
 802a5ea:	2d80      	cmp	r5, #128	; 0x80
 802a5ec:	d1f1      	bne.n	802a5d2 <arm_cfft_f32+0x3a>
 802a5ee:	4630      	mov	r0, r6
 802a5f0:	4621      	mov	r1, r4
 802a5f2:	f7ff fca1 	bl	8029f38 <arm_cfft_radix8by2_f32>
 802a5f6:	f1b8 0f00 	cmp.w	r8, #0
 802a5fa:	d0ed      	beq.n	802a5d8 <arm_cfft_f32+0x40>
 802a5fc:	4620      	mov	r0, r4
 802a5fe:	89b1      	ldrh	r1, [r6, #12]
 802a600:	68b2      	ldr	r2, [r6, #8]
 802a602:	f7d5 fdf5 	bl	80001f0 <arm_bitreversal_32>
 802a606:	2f01      	cmp	r7, #1
 802a608:	d1e8      	bne.n	802a5dc <arm_cfft_f32+0x44>
 802a60a:	ee07 5a90 	vmov	s15, r5
 802a60e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802a612:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a616:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802a61a:	2d00      	cmp	r5, #0
 802a61c:	d0de      	beq.n	802a5dc <arm_cfft_f32+0x44>
 802a61e:	f104 0108 	add.w	r1, r4, #8
 802a622:	2300      	movs	r3, #0
 802a624:	3301      	adds	r3, #1
 802a626:	429d      	cmp	r5, r3
 802a628:	f101 0108 	add.w	r1, r1, #8
 802a62c:	ed11 7a04 	vldr	s14, [r1, #-16]
 802a630:	ed51 7a03 	vldr	s15, [r1, #-12]
 802a634:	ee27 7a26 	vmul.f32	s14, s14, s13
 802a638:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a63c:	ed01 7a04 	vstr	s14, [r1, #-16]
 802a640:	ed41 7a03 	vstr	s15, [r1, #-12]
 802a644:	d1ee      	bne.n	802a624 <arm_cfft_f32+0x8c>
 802a646:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a64a:	4630      	mov	r0, r6
 802a64c:	4621      	mov	r1, r4
 802a64e:	f7ff fd45 	bl	802a0dc <arm_cfft_radix8by4_f32>
 802a652:	e7be      	b.n	802a5d2 <arm_cfft_f32+0x3a>
 802a654:	b1ad      	cbz	r5, 802a682 <arm_cfft_f32+0xea>
 802a656:	f101 030c 	add.w	r3, r1, #12
 802a65a:	2200      	movs	r2, #0
 802a65c:	ed53 7a02 	vldr	s15, [r3, #-8]
 802a660:	3201      	adds	r2, #1
 802a662:	eef1 7a67 	vneg.f32	s15, s15
 802a666:	4295      	cmp	r5, r2
 802a668:	ed43 7a02 	vstr	s15, [r3, #-8]
 802a66c:	f103 0308 	add.w	r3, r3, #8
 802a670:	d1f4      	bne.n	802a65c <arm_cfft_f32+0xc4>
 802a672:	e79a      	b.n	802a5aa <arm_cfft_f32+0x12>
 802a674:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802a678:	d0a5      	beq.n	802a5c6 <arm_cfft_f32+0x2e>
 802a67a:	e7aa      	b.n	802a5d2 <arm_cfft_f32+0x3a>
 802a67c:	2d10      	cmp	r5, #16
 802a67e:	d0b6      	beq.n	802a5ee <arm_cfft_f32+0x56>
 802a680:	e7a7      	b.n	802a5d2 <arm_cfft_f32+0x3a>
 802a682:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a686:	d894      	bhi.n	802a5b2 <arm_cfft_f32+0x1a>
 802a688:	e7aa      	b.n	802a5e0 <arm_cfft_f32+0x48>
 802a68a:	bf00      	nop

0802a68c <arm_cmplx_mag_f32>:
 802a68c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a690:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802a694:	b084      	sub	sp, #16
 802a696:	d07f      	beq.n	802a798 <arm_cmplx_mag_f32+0x10c>
 802a698:	2700      	movs	r7, #0
 802a69a:	f100 0420 	add.w	r4, r0, #32
 802a69e:	f101 0510 	add.w	r5, r1, #16
 802a6a2:	4646      	mov	r6, r8
 802a6a4:	e05a      	b.n	802a75c <arm_cmplx_mag_f32+0xd0>
 802a6a6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a6aa:	eeb4 0a40 	vcmp.f32	s0, s0
 802a6ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6b2:	f040 80a4 	bne.w	802a7fe <arm_cmplx_mag_f32+0x172>
 802a6b6:	ed05 0a04 	vstr	s0, [r5, #-16]
 802a6ba:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802a6be:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802a6c2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a6c6:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a6ca:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a6ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a6d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6d6:	f2c0 808f 	blt.w	802a7f8 <arm_cmplx_mag_f32+0x16c>
 802a6da:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a6de:	eeb4 0a40 	vcmp.f32	s0, s0
 802a6e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a6e6:	f040 80af 	bne.w	802a848 <arm_cmplx_mag_f32+0x1bc>
 802a6ea:	ed05 0a03 	vstr	s0, [r5, #-12]
 802a6ee:	ed54 7a04 	vldr	s15, [r4, #-16]
 802a6f2:	ed14 0a03 	vldr	s0, [r4, #-12]
 802a6f6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a6fa:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a6fe:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a702:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a70a:	db72      	blt.n	802a7f2 <arm_cmplx_mag_f32+0x166>
 802a70c:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a710:	eeb4 0a40 	vcmp.f32	s0, s0
 802a714:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a718:	f040 808c 	bne.w	802a834 <arm_cmplx_mag_f32+0x1a8>
 802a71c:	ed05 0a02 	vstr	s0, [r5, #-8]
 802a720:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a724:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a728:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a72c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a730:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a734:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a738:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a73c:	db20      	blt.n	802a780 <arm_cmplx_mag_f32+0xf4>
 802a73e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a742:	eeb4 0a40 	vcmp.f32	s0, s0
 802a746:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a74a:	d169      	bne.n	802a820 <arm_cmplx_mag_f32+0x194>
 802a74c:	3e01      	subs	r6, #1
 802a74e:	ed05 0a01 	vstr	s0, [r5, #-4]
 802a752:	f104 0420 	add.w	r4, r4, #32
 802a756:	f105 0510 	add.w	r5, r5, #16
 802a75a:	d019      	beq.n	802a790 <arm_cmplx_mag_f32+0x104>
 802a75c:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802a760:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802a764:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a768:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a76c:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a770:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a778:	da95      	bge.n	802a6a6 <arm_cmplx_mag_f32+0x1a>
 802a77a:	f845 7c10 	str.w	r7, [r5, #-16]
 802a77e:	e79c      	b.n	802a6ba <arm_cmplx_mag_f32+0x2e>
 802a780:	3e01      	subs	r6, #1
 802a782:	f845 7c04 	str.w	r7, [r5, #-4]
 802a786:	f104 0420 	add.w	r4, r4, #32
 802a78a:	f105 0510 	add.w	r5, r5, #16
 802a78e:	d1e5      	bne.n	802a75c <arm_cmplx_mag_f32+0xd0>
 802a790:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802a794:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802a798:	f012 0503 	ands.w	r5, r2, #3
 802a79c:	d026      	beq.n	802a7ec <arm_cmplx_mag_f32+0x160>
 802a79e:	2600      	movs	r6, #0
 802a7a0:	f100 0408 	add.w	r4, r0, #8
 802a7a4:	e00c      	b.n	802a7c0 <arm_cmplx_mag_f32+0x134>
 802a7a6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a7aa:	eeb4 0a40 	vcmp.f32	s0, s0
 802a7ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a7b2:	d12e      	bne.n	802a812 <arm_cmplx_mag_f32+0x186>
 802a7b4:	3d01      	subs	r5, #1
 802a7b6:	ed01 0a01 	vstr	s0, [r1, #-4]
 802a7ba:	f104 0408 	add.w	r4, r4, #8
 802a7be:	d015      	beq.n	802a7ec <arm_cmplx_mag_f32+0x160>
 802a7c0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a7c4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a7c8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a7cc:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a7d0:	3104      	adds	r1, #4
 802a7d2:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a7d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a7da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a7de:	dae2      	bge.n	802a7a6 <arm_cmplx_mag_f32+0x11a>
 802a7e0:	3d01      	subs	r5, #1
 802a7e2:	f841 6c04 	str.w	r6, [r1, #-4]
 802a7e6:	f104 0408 	add.w	r4, r4, #8
 802a7ea:	d1e9      	bne.n	802a7c0 <arm_cmplx_mag_f32+0x134>
 802a7ec:	b004      	add	sp, #16
 802a7ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a7f2:	f845 7c08 	str.w	r7, [r5, #-8]
 802a7f6:	e793      	b.n	802a720 <arm_cmplx_mag_f32+0x94>
 802a7f8:	f845 7c0c 	str.w	r7, [r5, #-12]
 802a7fc:	e777      	b.n	802a6ee <arm_cmplx_mag_f32+0x62>
 802a7fe:	eeb0 0a67 	vmov.f32	s0, s15
 802a802:	9203      	str	r2, [sp, #12]
 802a804:	9102      	str	r1, [sp, #8]
 802a806:	9001      	str	r0, [sp, #4]
 802a808:	f000 fb38 	bl	802ae7c <sqrtf>
 802a80c:	a801      	add	r0, sp, #4
 802a80e:	c807      	ldmia	r0, {r0, r1, r2}
 802a810:	e751      	b.n	802a6b6 <arm_cmplx_mag_f32+0x2a>
 802a812:	eeb0 0a67 	vmov.f32	s0, s15
 802a816:	9101      	str	r1, [sp, #4]
 802a818:	f000 fb30 	bl	802ae7c <sqrtf>
 802a81c:	9901      	ldr	r1, [sp, #4]
 802a81e:	e7c9      	b.n	802a7b4 <arm_cmplx_mag_f32+0x128>
 802a820:	eeb0 0a67 	vmov.f32	s0, s15
 802a824:	9203      	str	r2, [sp, #12]
 802a826:	9102      	str	r1, [sp, #8]
 802a828:	9001      	str	r0, [sp, #4]
 802a82a:	f000 fb27 	bl	802ae7c <sqrtf>
 802a82e:	a801      	add	r0, sp, #4
 802a830:	c807      	ldmia	r0, {r0, r1, r2}
 802a832:	e78b      	b.n	802a74c <arm_cmplx_mag_f32+0xc0>
 802a834:	eeb0 0a67 	vmov.f32	s0, s15
 802a838:	9203      	str	r2, [sp, #12]
 802a83a:	9102      	str	r1, [sp, #8]
 802a83c:	9001      	str	r0, [sp, #4]
 802a83e:	f000 fb1d 	bl	802ae7c <sqrtf>
 802a842:	a801      	add	r0, sp, #4
 802a844:	c807      	ldmia	r0, {r0, r1, r2}
 802a846:	e769      	b.n	802a71c <arm_cmplx_mag_f32+0x90>
 802a848:	eeb0 0a67 	vmov.f32	s0, s15
 802a84c:	9203      	str	r2, [sp, #12]
 802a84e:	9102      	str	r1, [sp, #8]
 802a850:	9001      	str	r0, [sp, #4]
 802a852:	f000 fb13 	bl	802ae7c <sqrtf>
 802a856:	a801      	add	r0, sp, #4
 802a858:	c807      	ldmia	r0, {r0, r1, r2}
 802a85a:	e746      	b.n	802a6ea <arm_cmplx_mag_f32+0x5e>

0802a85c <arm_radix8_butterfly_f32>:
 802a85c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a860:	ed2d 8b10 	vpush	{d8-d15}
 802a864:	b09d      	sub	sp, #116	; 0x74
 802a866:	461c      	mov	r4, r3
 802a868:	ed9f bac8 	vldr	s22, [pc, #800]	; 802ab8c <arm_radix8_butterfly_f32+0x330>
 802a86c:	921a      	str	r2, [sp, #104]	; 0x68
 802a86e:	1d03      	adds	r3, r0, #4
 802a870:	4682      	mov	sl, r0
 802a872:	4689      	mov	r9, r1
 802a874:	468b      	mov	fp, r1
 802a876:	931b      	str	r3, [sp, #108]	; 0x6c
 802a878:	9400      	str	r4, [sp, #0]
 802a87a:	469e      	mov	lr, r3
 802a87c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802a880:	005a      	lsls	r2, r3, #1
 802a882:	18d6      	adds	r6, r2, r3
 802a884:	18f5      	adds	r5, r6, r3
 802a886:	9203      	str	r2, [sp, #12]
 802a888:	195a      	adds	r2, r3, r5
 802a88a:	18d0      	adds	r0, r2, r3
 802a88c:	00df      	lsls	r7, r3, #3
 802a88e:	1819      	adds	r1, r3, r0
 802a890:	463c      	mov	r4, r7
 802a892:	9701      	str	r7, [sp, #4]
 802a894:	4457      	add	r7, sl
 802a896:	930c      	str	r3, [sp, #48]	; 0x30
 802a898:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802a89c:	011b      	lsls	r3, r3, #4
 802a89e:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802a8a2:	eb07 0c04 	add.w	ip, r7, r4
 802a8a6:	9c00      	ldr	r4, [sp, #0]
 802a8a8:	9302      	str	r3, [sp, #8]
 802a8aa:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802a8ae:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802a8b2:	3204      	adds	r2, #4
 802a8b4:	3104      	adds	r1, #4
 802a8b6:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802a8ba:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802a8be:	f04f 0800 	mov.w	r8, #0
 802a8c2:	eddc 7a00 	vldr	s15, [ip]
 802a8c6:	edd7 6a00 	vldr	s13, [r7]
 802a8ca:	edd6 3a00 	vldr	s7, [r6]
 802a8ce:	ed5e aa01 	vldr	s21, [lr, #-4]
 802a8d2:	edd5 4a00 	vldr	s9, [r5]
 802a8d6:	ed90 2a00 	vldr	s4, [r0]
 802a8da:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a8de:	ed51 0a01 	vldr	s1, [r1, #-4]
 802a8e2:	ee77 8a82 	vadd.f32	s17, s15, s4
 802a8e6:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802a8ea:	ee76 1a87 	vadd.f32	s3, s13, s14
 802a8ee:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802a8f2:	ee31 6a84 	vadd.f32	s12, s3, s8
 802a8f6:	ee33 5a28 	vadd.f32	s10, s6, s17
 802a8fa:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802a8fe:	ee75 6a06 	vadd.f32	s13, s10, s12
 802a902:	ee35 5a46 	vsub.f32	s10, s10, s12
 802a906:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802a90a:	ed85 5a00 	vstr	s10, [r5]
 802a90e:	ed96 1a01 	vldr	s2, [r6, #4]
 802a912:	edd7 5a01 	vldr	s11, [r7, #4]
 802a916:	ed92 aa00 	vldr	s20, [r2]
 802a91a:	ed91 6a00 	vldr	s12, [r1]
 802a91e:	ed9e 9a00 	vldr	s18, [lr]
 802a922:	ed95 5a01 	vldr	s10, [r5, #4]
 802a926:	eddc 6a01 	vldr	s13, [ip, #4]
 802a92a:	edd0 9a01 	vldr	s19, [r0, #4]
 802a92e:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802a932:	ee71 2a46 	vsub.f32	s5, s2, s12
 802a936:	ee75 3aca 	vsub.f32	s7, s11, s20
 802a93a:	ee37 0a60 	vsub.f32	s0, s14, s1
 802a93e:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802a942:	ee37 7a20 	vadd.f32	s14, s14, s1
 802a946:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802a94a:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802a94e:	ee79 3a05 	vadd.f32	s7, s18, s10
 802a952:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802a956:	ee39 5a45 	vsub.f32	s10, s18, s10
 802a95a:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802a95e:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802a962:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802a966:	ee31 6a06 	vadd.f32	s12, s2, s12
 802a96a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802a96e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802a972:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802a976:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802a97a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802a97e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802a982:	ee75 8a86 	vadd.f32	s17, s11, s12
 802a986:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802a98a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802a98e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802a992:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802a996:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802a99a:	ee33 1a89 	vadd.f32	s2, s7, s18
 802a99e:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802a9a2:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802a9a6:	ee75 4a22 	vadd.f32	s9, s10, s5
 802a9aa:	ee32 5a27 	vadd.f32	s10, s4, s15
 802a9ae:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a9b2:	ee33 8a06 	vadd.f32	s16, s6, s12
 802a9b6:	ee75 2a87 	vadd.f32	s5, s11, s14
 802a9ba:	ee31 9a28 	vadd.f32	s18, s2, s17
 802a9be:	ee33 6a46 	vsub.f32	s12, s6, s12
 802a9c2:	ee74 0a61 	vsub.f32	s1, s8, s3
 802a9c6:	ee33 2a80 	vadd.f32	s4, s7, s0
 802a9ca:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802a9ce:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802a9d2:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a9d6:	ee31 1a68 	vsub.f32	s2, s2, s17
 802a9da:	ee34 4a21 	vadd.f32	s8, s8, s3
 802a9de:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802a9e2:	ee74 4a85 	vadd.f32	s9, s9, s10
 802a9e6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802a9ea:	44d8      	add	r8, fp
 802a9ec:	45c1      	cmp	r9, r8
 802a9ee:	ed8e 9a00 	vstr	s18, [lr]
 802a9f2:	ed85 1a01 	vstr	s2, [r5, #4]
 802a9f6:	449e      	add	lr, r3
 802a9f8:	ed8c 8a00 	vstr	s16, [ip]
 802a9fc:	441d      	add	r5, r3
 802a9fe:	ed80 6a00 	vstr	s12, [r0]
 802aa02:	edcc 0a01 	vstr	s1, [ip, #4]
 802aa06:	ed80 4a01 	vstr	s8, [r0, #4]
 802aa0a:	449c      	add	ip, r3
 802aa0c:	ed87 2a00 	vstr	s4, [r7]
 802aa10:	4418      	add	r0, r3
 802aa12:	ed41 3a01 	vstr	s7, [r1, #-4]
 802aa16:	ed42 2a01 	vstr	s5, [r2, #-4]
 802aa1a:	ed86 7a00 	vstr	s14, [r6]
 802aa1e:	ed87 3a01 	vstr	s6, [r7, #4]
 802aa22:	edc1 4a00 	vstr	s9, [r1]
 802aa26:	441f      	add	r7, r3
 802aa28:	edc2 5a00 	vstr	s11, [r2]
 802aa2c:	4419      	add	r1, r3
 802aa2e:	edc6 6a01 	vstr	s13, [r6, #4]
 802aa32:	441a      	add	r2, r3
 802aa34:	441e      	add	r6, r3
 802aa36:	f63f af44 	bhi.w	802a8c2 <arm_radix8_butterfly_f32+0x66>
 802aa3a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802aa3c:	2907      	cmp	r1, #7
 802aa3e:	4620      	mov	r0, r4
 802aa40:	f240 81e9 	bls.w	802ae16 <arm_radix8_butterfly_f32+0x5ba>
 802aa44:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802aa48:	193e      	adds	r6, r7, r4
 802aa4a:	1935      	adds	r5, r6, r4
 802aa4c:	9c03      	ldr	r4, [sp, #12]
 802aa4e:	9000      	str	r0, [sp, #0]
 802aa50:	4622      	mov	r2, r4
 802aa52:	3201      	adds	r2, #1
 802aa54:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802aa58:	9900      	ldr	r1, [sp, #0]
 802aa5a:	1828      	adds	r0, r5, r0
 802aa5c:	eb00 0e01 	add.w	lr, r0, r1
 802aa60:	990c      	ldr	r1, [sp, #48]	; 0x30
 802aa62:	440a      	add	r2, r1
 802aa64:	eb04 0c01 	add.w	ip, r4, r1
 802aa68:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802aa6c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802aa70:	9a00      	ldr	r2, [sp, #0]
 802aa72:	940f      	str	r4, [sp, #60]	; 0x3c
 802aa74:	00ed      	lsls	r5, r5, #3
 802aa76:	9511      	str	r5, [sp, #68]	; 0x44
 802aa78:	00d5      	lsls	r5, r2, #3
 802aa7a:	950d      	str	r5, [sp, #52]	; 0x34
 802aa7c:	9d01      	ldr	r5, [sp, #4]
 802aa7e:	3508      	adds	r5, #8
 802aa80:	9516      	str	r5, [sp, #88]	; 0x58
 802aa82:	9d02      	ldr	r5, [sp, #8]
 802aa84:	3508      	adds	r5, #8
 802aa86:	0114      	lsls	r4, r2, #4
 802aa88:	9517      	str	r5, [sp, #92]	; 0x5c
 802aa8a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802aa8c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802aa8e:	940e      	str	r4, [sp, #56]	; 0x38
 802aa90:	00c0      	lsls	r0, r0, #3
 802aa92:	9010      	str	r0, [sp, #64]	; 0x40
 802aa94:	18aa      	adds	r2, r5, r2
 802aa96:	9207      	str	r2, [sp, #28]
 802aa98:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802aa9a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802aa9c:	18aa      	adds	r2, r5, r2
 802aa9e:	9208      	str	r2, [sp, #32]
 802aaa0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802aaa2:	18aa      	adds	r2, r5, r2
 802aaa4:	9209      	str	r2, [sp, #36]	; 0x24
 802aaa6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802aaaa:	f10e 0204 	add.w	r2, lr, #4
 802aaae:	920a      	str	r2, [sp, #40]	; 0x28
 802aab0:	00c9      	lsls	r1, r1, #3
 802aab2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802aab4:	310c      	adds	r1, #12
 802aab6:	00f6      	lsls	r6, r6, #3
 802aab8:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802aabc:	9114      	str	r1, [sp, #80]	; 0x50
 802aabe:	18a9      	adds	r1, r5, r2
 802aac0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802aac2:	9612      	str	r6, [sp, #72]	; 0x48
 802aac4:	00ff      	lsls	r7, r7, #3
 802aac6:	19ae      	adds	r6, r5, r6
 802aac8:	3008      	adds	r0, #8
 802aaca:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802aace:	9606      	str	r6, [sp, #24]
 802aad0:	9019      	str	r0, [sp, #100]	; 0x64
 802aad2:	18aa      	adds	r2, r5, r2
 802aad4:	0164      	lsls	r4, r4, #5
 802aad6:	19ee      	adds	r6, r5, r7
 802aad8:	f10c 000c 	add.w	r0, ip, #12
 802aadc:	9713      	str	r7, [sp, #76]	; 0x4c
 802aade:	9604      	str	r6, [sp, #16]
 802aae0:	9015      	str	r0, [sp, #84]	; 0x54
 802aae2:	9103      	str	r1, [sp, #12]
 802aae4:	9205      	str	r2, [sp, #20]
 802aae6:	f104 0208 	add.w	r2, r4, #8
 802aaea:	9218      	str	r2, [sp, #96]	; 0x60
 802aaec:	f04f 0801 	mov.w	r8, #1
 802aaf0:	2200      	movs	r2, #0
 802aaf2:	f102 0108 	add.w	r1, r2, #8
 802aaf6:	460f      	mov	r7, r1
 802aaf8:	910b      	str	r1, [sp, #44]	; 0x2c
 802aafa:	9918      	ldr	r1, [sp, #96]	; 0x60
 802aafc:	188e      	adds	r6, r1, r2
 802aafe:	9916      	ldr	r1, [sp, #88]	; 0x58
 802ab00:	188d      	adds	r5, r1, r2
 802ab02:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802ab04:	188c      	adds	r4, r1, r2
 802ab06:	9919      	ldr	r1, [sp, #100]	; 0x64
 802ab08:	1888      	adds	r0, r1, r2
 802ab0a:	9914      	ldr	r1, [sp, #80]	; 0x50
 802ab0c:	eb01 0c02 	add.w	ip, r1, r2
 802ab10:	9915      	ldr	r1, [sp, #84]	; 0x54
 802ab12:	440a      	add	r2, r1
 802ab14:	9903      	ldr	r1, [sp, #12]
 802ab16:	edd1 fa00 	vldr	s31, [r1]
 802ab1a:	9905      	ldr	r1, [sp, #20]
 802ab1c:	ed91 fa00 	vldr	s30, [r1]
 802ab20:	9904      	ldr	r1, [sp, #16]
 802ab22:	edd1 ea00 	vldr	s29, [r1]
 802ab26:	9906      	ldr	r1, [sp, #24]
 802ab28:	ed91 ea00 	vldr	s28, [r1]
 802ab2c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802ab2e:	edd1 da00 	vldr	s27, [r1]
 802ab32:	9908      	ldr	r1, [sp, #32]
 802ab34:	ed91 da00 	vldr	s26, [r1]
 802ab38:	9907      	ldr	r1, [sp, #28]
 802ab3a:	edd1 ca00 	vldr	s25, [r1]
 802ab3e:	9903      	ldr	r1, [sp, #12]
 802ab40:	ed91 ca01 	vldr	s24, [r1, #4]
 802ab44:	9905      	ldr	r1, [sp, #20]
 802ab46:	edd1 ba01 	vldr	s23, [r1, #4]
 802ab4a:	9904      	ldr	r1, [sp, #16]
 802ab4c:	edd1 aa01 	vldr	s21, [r1, #4]
 802ab50:	9906      	ldr	r1, [sp, #24]
 802ab52:	ed91 aa01 	vldr	s20, [r1, #4]
 802ab56:	9909      	ldr	r1, [sp, #36]	; 0x24
 802ab58:	edd1 7a01 	vldr	s15, [r1, #4]
 802ab5c:	9908      	ldr	r1, [sp, #32]
 802ab5e:	edcd 7a00 	vstr	s15, [sp]
 802ab62:	edd1 7a01 	vldr	s15, [r1, #4]
 802ab66:	9907      	ldr	r1, [sp, #28]
 802ab68:	edcd 7a01 	vstr	s15, [sp, #4]
 802ab6c:	edd1 7a01 	vldr	s15, [r1, #4]
 802ab70:	eb0a 0e07 	add.w	lr, sl, r7
 802ab74:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802ab76:	edcd 7a02 	vstr	s15, [sp, #8]
 802ab7a:	eb0c 010a 	add.w	r1, ip, sl
 802ab7e:	4456      	add	r6, sl
 802ab80:	4455      	add	r5, sl
 802ab82:	4454      	add	r4, sl
 802ab84:	4450      	add	r0, sl
 802ab86:	4452      	add	r2, sl
 802ab88:	46c4      	mov	ip, r8
 802ab8a:	e001      	b.n	802ab90 <arm_radix8_butterfly_f32+0x334>
 802ab8c:	3f3504f3 	.word	0x3f3504f3
 802ab90:	ed96 5a00 	vldr	s10, [r6]
 802ab94:	ed52 9a01 	vldr	s19, [r2, #-4]
 802ab98:	ed11 6a01 	vldr	s12, [r1, #-4]
 802ab9c:	edd0 7a00 	vldr	s15, [r0]
 802aba0:	ed17 7a01 	vldr	s14, [r7, #-4]
 802aba4:	edde 3a00 	vldr	s7, [lr]
 802aba8:	ed94 3a00 	vldr	s6, [r4]
 802abac:	ed95 2a00 	vldr	s4, [r5]
 802abb0:	ed9e 0a01 	vldr	s0, [lr, #4]
 802abb4:	ee33 8a85 	vadd.f32	s16, s7, s10
 802abb8:	ee32 1a06 	vadd.f32	s2, s4, s12
 802abbc:	ee33 4a29 	vadd.f32	s8, s6, s19
 802abc0:	ee77 4a87 	vadd.f32	s9, s15, s14
 802abc4:	ee78 1a04 	vadd.f32	s3, s16, s8
 802abc8:	ee71 6a24 	vadd.f32	s13, s2, s9
 802abcc:	ee32 2a46 	vsub.f32	s4, s4, s12
 802abd0:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802abd4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802abd8:	ed8e 6a00 	vstr	s12, [lr]
 802abdc:	edd0 8a01 	vldr	s17, [r0, #4]
 802abe0:	ed95 9a01 	vldr	s18, [r5, #4]
 802abe4:	edd1 2a00 	vldr	s5, [r1]
 802abe8:	ed97 7a00 	vldr	s14, [r7]
 802abec:	edd4 0a01 	vldr	s1, [r4, #4]
 802abf0:	ed96 6a01 	vldr	s12, [r6, #4]
 802abf4:	edd2 5a00 	vldr	s11, [r2]
 802abf8:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802abfc:	ee33 3a69 	vsub.f32	s6, s6, s19
 802ac00:	ee39 5a62 	vsub.f32	s10, s18, s5
 802ac04:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802ac08:	ee38 4a44 	vsub.f32	s8, s16, s8
 802ac0c:	ee38 7a87 	vadd.f32	s14, s17, s14
 802ac10:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802ac14:	ee79 2a22 	vadd.f32	s5, s18, s5
 802ac18:	ee75 8a69 	vsub.f32	s17, s10, s19
 802ac1c:	ee32 9a27 	vadd.f32	s18, s4, s15
 802ac20:	ee35 5a29 	vadd.f32	s10, s10, s19
 802ac24:	ee72 7a67 	vsub.f32	s15, s4, s15
 802ac28:	ee30 2a06 	vadd.f32	s4, s0, s12
 802ac2c:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802ac30:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802ac34:	ee32 9a08 	vadd.f32	s18, s4, s16
 802ac38:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802ac3c:	ee32 2a48 	vsub.f32	s4, s4, s16
 802ac40:	ee71 4a64 	vsub.f32	s9, s2, s9
 802ac44:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802ac48:	ee32 1a87 	vadd.f32	s2, s5, s14
 802ac4c:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802ac50:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802ac54:	ee30 6a46 	vsub.f32	s12, s0, s12
 802ac58:	ee73 0a29 	vadd.f32	s1, s6, s19
 802ac5c:	ee36 0a28 	vadd.f32	s0, s12, s17
 802ac60:	ee33 3a69 	vsub.f32	s6, s6, s19
 802ac64:	ee32 7a64 	vsub.f32	s14, s4, s9
 802ac68:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802ac6c:	ee36 6a68 	vsub.f32	s12, s12, s17
 802ac70:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802ac74:	ee75 8a85 	vadd.f32	s17, s11, s10
 802ac78:	ee74 3a22 	vadd.f32	s7, s8, s5
 802ac7c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802ac80:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802ac84:	ee79 1a41 	vsub.f32	s3, s18, s2
 802ac88:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802ac8c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802ac90:	ee74 2a62 	vsub.f32	s5, s8, s5
 802ac94:	ee72 4a24 	vadd.f32	s9, s4, s9
 802ac98:	ee30 4a60 	vsub.f32	s8, s0, s1
 802ac9c:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802aca0:	ee30 0a20 	vadd.f32	s0, s0, s1
 802aca4:	ee77 9a85 	vadd.f32	s19, s15, s10
 802aca8:	ee36 6a03 	vadd.f32	s12, s12, s6
 802acac:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802acb0:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802acb4:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802acb8:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802acbc:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802acc0:	ee39 1a01 	vadd.f32	s2, s18, s2
 802acc4:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802acc8:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802accc:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802acd0:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802acd4:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802acd8:	ee35 3a03 	vadd.f32	s6, s10, s6
 802acdc:	ee72 6a66 	vsub.f32	s13, s4, s13
 802ace0:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802ace4:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802ace8:	ed9d 4a02 	vldr	s8, [sp, #8]
 802acec:	ed8e 1a01 	vstr	s2, [lr, #4]
 802acf0:	ee77 3a63 	vsub.f32	s7, s14, s7
 802acf4:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802acf8:	ed9d 7a01 	vldr	s14, [sp, #4]
 802acfc:	ed86 3a00 	vstr	s6, [r6]
 802ad00:	ee30 9a89 	vadd.f32	s18, s1, s18
 802ad04:	ee32 2a05 	vadd.f32	s4, s4, s10
 802ad08:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802ad0c:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802ad10:	ee67 2a22 	vmul.f32	s5, s14, s5
 802ad14:	ee64 1a00 	vmul.f32	s3, s8, s0
 802ad18:	ee27 7a24 	vmul.f32	s14, s14, s9
 802ad1c:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802ad20:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802ad24:	ee64 8a28 	vmul.f32	s17, s8, s17
 802ad28:	ed9d 4a00 	vldr	s8, [sp]
 802ad2c:	edc6 6a01 	vstr	s13, [r6, #4]
 802ad30:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802ad34:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802ad38:	ee64 9a29 	vmul.f32	s19, s8, s19
 802ad3c:	ee24 4a25 	vmul.f32	s8, s8, s11
 802ad40:	ee30 7a87 	vadd.f32	s14, s1, s14
 802ad44:	ee74 4a84 	vadd.f32	s9, s9, s8
 802ad48:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802ad4c:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802ad50:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802ad54:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802ad58:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802ad5c:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802ad60:	ee75 1a21 	vadd.f32	s3, s10, s3
 802ad64:	ee30 0a68 	vsub.f32	s0, s0, s17
 802ad68:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802ad6c:	ee70 0a84 	vadd.f32	s1, s1, s8
 802ad70:	ee36 6a67 	vsub.f32	s12, s12, s15
 802ad74:	44dc      	add	ip, fp
 802ad76:	45e1      	cmp	r9, ip
 802ad78:	ed84 9a00 	vstr	s18, [r4]
 802ad7c:	edc4 3a01 	vstr	s7, [r4, #4]
 802ad80:	449e      	add	lr, r3
 802ad82:	ed02 7a01 	vstr	s14, [r2, #-4]
 802ad86:	edc2 2a00 	vstr	s5, [r2]
 802ad8a:	441e      	add	r6, r3
 802ad8c:	ed85 2a00 	vstr	s4, [r5]
 802ad90:	ed85 8a01 	vstr	s16, [r5, #4]
 802ad94:	441c      	add	r4, r3
 802ad96:	ed47 1a01 	vstr	s3, [r7, #-4]
 802ad9a:	ed87 0a00 	vstr	s0, [r7]
 802ad9e:	441a      	add	r2, r3
 802ada0:	ed41 4a01 	vstr	s9, [r1, #-4]
 802ada4:	edc1 9a00 	vstr	s19, [r1]
 802ada8:	441d      	add	r5, r3
 802adaa:	edc0 0a00 	vstr	s1, [r0]
 802adae:	441f      	add	r7, r3
 802adb0:	ed80 6a01 	vstr	s12, [r0, #4]
 802adb4:	4419      	add	r1, r3
 802adb6:	4418      	add	r0, r3
 802adb8:	f63f aeea 	bhi.w	802ab90 <arm_radix8_butterfly_f32+0x334>
 802adbc:	9a03      	ldr	r2, [sp, #12]
 802adbe:	990d      	ldr	r1, [sp, #52]	; 0x34
 802adc0:	440a      	add	r2, r1
 802adc2:	9203      	str	r2, [sp, #12]
 802adc4:	990e      	ldr	r1, [sp, #56]	; 0x38
 802adc6:	9a05      	ldr	r2, [sp, #20]
 802adc8:	440a      	add	r2, r1
 802adca:	9205      	str	r2, [sp, #20]
 802adcc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802adce:	9a04      	ldr	r2, [sp, #16]
 802add0:	440a      	add	r2, r1
 802add2:	9204      	str	r2, [sp, #16]
 802add4:	9912      	ldr	r1, [sp, #72]	; 0x48
 802add6:	9a06      	ldr	r2, [sp, #24]
 802add8:	440a      	add	r2, r1
 802adda:	9206      	str	r2, [sp, #24]
 802addc:	9911      	ldr	r1, [sp, #68]	; 0x44
 802adde:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802ade0:	440a      	add	r2, r1
 802ade2:	9209      	str	r2, [sp, #36]	; 0x24
 802ade4:	9910      	ldr	r1, [sp, #64]	; 0x40
 802ade6:	9a08      	ldr	r2, [sp, #32]
 802ade8:	440a      	add	r2, r1
 802adea:	9208      	str	r2, [sp, #32]
 802adec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802adee:	9a07      	ldr	r2, [sp, #28]
 802adf0:	440a      	add	r2, r1
 802adf2:	9207      	str	r2, [sp, #28]
 802adf4:	990c      	ldr	r1, [sp, #48]	; 0x30
 802adf6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802adf8:	f108 0801 	add.w	r8, r8, #1
 802adfc:	3208      	adds	r2, #8
 802adfe:	4588      	cmp	r8, r1
 802ae00:	920a      	str	r2, [sp, #40]	; 0x28
 802ae02:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802ae04:	f47f ae75 	bne.w	802aaf2 <arm_radix8_butterfly_f32+0x296>
 802ae08:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802ae0c:	9300      	str	r3, [sp, #0]
 802ae0e:	46c3      	mov	fp, r8
 802ae10:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802ae14:	e532      	b.n	802a87c <arm_radix8_butterfly_f32+0x20>
 802ae16:	b01d      	add	sp, #116	; 0x74
 802ae18:	ecbd 8b10 	vpop	{d8-d15}
 802ae1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802ae20 <__aeabi_atexit>:
 802ae20:	460b      	mov	r3, r1
 802ae22:	4601      	mov	r1, r0
 802ae24:	4618      	mov	r0, r3
 802ae26:	f000 bef3 	b.w	802bc10 <__cxa_atexit>

0802ae2a <_ZdlPvj>:
 802ae2a:	f000 b812 	b.w	802ae52 <_ZdlPv>

0802ae2e <__cxa_guard_acquire>:
 802ae2e:	6803      	ldr	r3, [r0, #0]
 802ae30:	07db      	lsls	r3, r3, #31
 802ae32:	d406      	bmi.n	802ae42 <__cxa_guard_acquire+0x14>
 802ae34:	7843      	ldrb	r3, [r0, #1]
 802ae36:	b103      	cbz	r3, 802ae3a <__cxa_guard_acquire+0xc>
 802ae38:	deff      	udf	#255	; 0xff
 802ae3a:	2301      	movs	r3, #1
 802ae3c:	7043      	strb	r3, [r0, #1]
 802ae3e:	4618      	mov	r0, r3
 802ae40:	4770      	bx	lr
 802ae42:	2000      	movs	r0, #0
 802ae44:	4770      	bx	lr

0802ae46 <__cxa_guard_release>:
 802ae46:	2301      	movs	r3, #1
 802ae48:	6003      	str	r3, [r0, #0]
 802ae4a:	4770      	bx	lr

0802ae4c <__cxa_pure_virtual>:
 802ae4c:	b508      	push	{r3, lr}
 802ae4e:	f000 f80f 	bl	802ae70 <_ZSt9terminatev>

0802ae52 <_ZdlPv>:
 802ae52:	f000 be29 	b.w	802baa8 <free>

0802ae56 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802ae56:	b508      	push	{r3, lr}
 802ae58:	4780      	blx	r0
 802ae5a:	f000 fdf1 	bl	802ba40 <abort>
	...

0802ae60 <_ZSt13get_terminatev>:
 802ae60:	4b02      	ldr	r3, [pc, #8]	; (802ae6c <_ZSt13get_terminatev+0xc>)
 802ae62:	6818      	ldr	r0, [r3, #0]
 802ae64:	f3bf 8f5b 	dmb	ish
 802ae68:	4770      	bx	lr
 802ae6a:	bf00      	nop
 802ae6c:	20000104 	.word	0x20000104

0802ae70 <_ZSt9terminatev>:
 802ae70:	b508      	push	{r3, lr}
 802ae72:	f7ff fff5 	bl	802ae60 <_ZSt13get_terminatev>
 802ae76:	f7ff ffee 	bl	802ae56 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802ae7c <sqrtf>:
 802ae7c:	b508      	push	{r3, lr}
 802ae7e:	ed2d 8b02 	vpush	{d8}
 802ae82:	eeb0 8a40 	vmov.f32	s16, s0
 802ae86:	f000 f8a1 	bl	802afcc <__ieee754_sqrtf>
 802ae8a:	eeb4 8a48 	vcmp.f32	s16, s16
 802ae8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ae92:	d60c      	bvs.n	802aeae <sqrtf+0x32>
 802ae94:	eddf 8a07 	vldr	s17, [pc, #28]	; 802aeb4 <sqrtf+0x38>
 802ae98:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802ae9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802aea0:	d505      	bpl.n	802aeae <sqrtf+0x32>
 802aea2:	f001 f8d3 	bl	802c04c <__errno>
 802aea6:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802aeaa:	2321      	movs	r3, #33	; 0x21
 802aeac:	6003      	str	r3, [r0, #0]
 802aeae:	ecbd 8b02 	vpop	{d8}
 802aeb2:	bd08      	pop	{r3, pc}
 802aeb4:	00000000 	.word	0x00000000

0802aeb8 <cosf>:
 802aeb8:	ee10 3a10 	vmov	r3, s0
 802aebc:	b507      	push	{r0, r1, r2, lr}
 802aebe:	4a1e      	ldr	r2, [pc, #120]	; (802af38 <cosf+0x80>)
 802aec0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802aec4:	4293      	cmp	r3, r2
 802aec6:	dc06      	bgt.n	802aed6 <cosf+0x1e>
 802aec8:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802af3c <cosf+0x84>
 802aecc:	b003      	add	sp, #12
 802aece:	f85d eb04 	ldr.w	lr, [sp], #4
 802aed2:	f000 b903 	b.w	802b0dc <__kernel_cosf>
 802aed6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802aeda:	db04      	blt.n	802aee6 <cosf+0x2e>
 802aedc:	ee30 0a40 	vsub.f32	s0, s0, s0
 802aee0:	b003      	add	sp, #12
 802aee2:	f85d fb04 	ldr.w	pc, [sp], #4
 802aee6:	4668      	mov	r0, sp
 802aee8:	f000 f99e 	bl	802b228 <__ieee754_rem_pio2f>
 802aeec:	f000 0003 	and.w	r0, r0, #3
 802aef0:	2801      	cmp	r0, #1
 802aef2:	d009      	beq.n	802af08 <cosf+0x50>
 802aef4:	2802      	cmp	r0, #2
 802aef6:	d010      	beq.n	802af1a <cosf+0x62>
 802aef8:	b9b0      	cbnz	r0, 802af28 <cosf+0x70>
 802aefa:	eddd 0a01 	vldr	s1, [sp, #4]
 802aefe:	ed9d 0a00 	vldr	s0, [sp]
 802af02:	f000 f8eb 	bl	802b0dc <__kernel_cosf>
 802af06:	e7eb      	b.n	802aee0 <cosf+0x28>
 802af08:	eddd 0a01 	vldr	s1, [sp, #4]
 802af0c:	ed9d 0a00 	vldr	s0, [sp]
 802af10:	f000 f942 	bl	802b198 <__kernel_sinf>
 802af14:	eeb1 0a40 	vneg.f32	s0, s0
 802af18:	e7e2      	b.n	802aee0 <cosf+0x28>
 802af1a:	eddd 0a01 	vldr	s1, [sp, #4]
 802af1e:	ed9d 0a00 	vldr	s0, [sp]
 802af22:	f000 f8db 	bl	802b0dc <__kernel_cosf>
 802af26:	e7f5      	b.n	802af14 <cosf+0x5c>
 802af28:	eddd 0a01 	vldr	s1, [sp, #4]
 802af2c:	ed9d 0a00 	vldr	s0, [sp]
 802af30:	2001      	movs	r0, #1
 802af32:	f000 f931 	bl	802b198 <__kernel_sinf>
 802af36:	e7d3      	b.n	802aee0 <cosf+0x28>
 802af38:	3f490fd8 	.word	0x3f490fd8
 802af3c:	00000000 	.word	0x00000000

0802af40 <sinf>:
 802af40:	ee10 3a10 	vmov	r3, s0
 802af44:	b507      	push	{r0, r1, r2, lr}
 802af46:	4a1f      	ldr	r2, [pc, #124]	; (802afc4 <sinf+0x84>)
 802af48:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802af4c:	4293      	cmp	r3, r2
 802af4e:	dc07      	bgt.n	802af60 <sinf+0x20>
 802af50:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802afc8 <sinf+0x88>
 802af54:	2000      	movs	r0, #0
 802af56:	b003      	add	sp, #12
 802af58:	f85d eb04 	ldr.w	lr, [sp], #4
 802af5c:	f000 b91c 	b.w	802b198 <__kernel_sinf>
 802af60:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802af64:	db04      	blt.n	802af70 <sinf+0x30>
 802af66:	ee30 0a40 	vsub.f32	s0, s0, s0
 802af6a:	b003      	add	sp, #12
 802af6c:	f85d fb04 	ldr.w	pc, [sp], #4
 802af70:	4668      	mov	r0, sp
 802af72:	f000 f959 	bl	802b228 <__ieee754_rem_pio2f>
 802af76:	f000 0003 	and.w	r0, r0, #3
 802af7a:	2801      	cmp	r0, #1
 802af7c:	d00a      	beq.n	802af94 <sinf+0x54>
 802af7e:	2802      	cmp	r0, #2
 802af80:	d00f      	beq.n	802afa2 <sinf+0x62>
 802af82:	b9c0      	cbnz	r0, 802afb6 <sinf+0x76>
 802af84:	eddd 0a01 	vldr	s1, [sp, #4]
 802af88:	ed9d 0a00 	vldr	s0, [sp]
 802af8c:	2001      	movs	r0, #1
 802af8e:	f000 f903 	bl	802b198 <__kernel_sinf>
 802af92:	e7ea      	b.n	802af6a <sinf+0x2a>
 802af94:	eddd 0a01 	vldr	s1, [sp, #4]
 802af98:	ed9d 0a00 	vldr	s0, [sp]
 802af9c:	f000 f89e 	bl	802b0dc <__kernel_cosf>
 802afa0:	e7e3      	b.n	802af6a <sinf+0x2a>
 802afa2:	eddd 0a01 	vldr	s1, [sp, #4]
 802afa6:	ed9d 0a00 	vldr	s0, [sp]
 802afaa:	2001      	movs	r0, #1
 802afac:	f000 f8f4 	bl	802b198 <__kernel_sinf>
 802afb0:	eeb1 0a40 	vneg.f32	s0, s0
 802afb4:	e7d9      	b.n	802af6a <sinf+0x2a>
 802afb6:	eddd 0a01 	vldr	s1, [sp, #4]
 802afba:	ed9d 0a00 	vldr	s0, [sp]
 802afbe:	f000 f88d 	bl	802b0dc <__kernel_cosf>
 802afc2:	e7f5      	b.n	802afb0 <sinf+0x70>
 802afc4:	3f490fd8 	.word	0x3f490fd8
 802afc8:	00000000 	.word	0x00000000

0802afcc <__ieee754_sqrtf>:
 802afcc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802afd0:	4770      	bx	lr
	...

0802afd4 <ceilf>:
 802afd4:	ee10 3a10 	vmov	r3, s0
 802afd8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802afdc:	3a7f      	subs	r2, #127	; 0x7f
 802afde:	2a16      	cmp	r2, #22
 802afe0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802afe4:	dc2a      	bgt.n	802b03c <ceilf+0x68>
 802afe6:	2a00      	cmp	r2, #0
 802afe8:	da11      	bge.n	802b00e <ceilf+0x3a>
 802afea:	eddf 7a19 	vldr	s15, [pc, #100]	; 802b050 <ceilf+0x7c>
 802afee:	ee30 0a27 	vadd.f32	s0, s0, s15
 802aff2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802aff6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802affa:	dd05      	ble.n	802b008 <ceilf+0x34>
 802affc:	2b00      	cmp	r3, #0
 802affe:	db23      	blt.n	802b048 <ceilf+0x74>
 802b000:	2900      	cmp	r1, #0
 802b002:	bf18      	it	ne
 802b004:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802b008:	ee00 3a10 	vmov	s0, r3
 802b00c:	4770      	bx	lr
 802b00e:	4911      	ldr	r1, [pc, #68]	; (802b054 <ceilf+0x80>)
 802b010:	4111      	asrs	r1, r2
 802b012:	420b      	tst	r3, r1
 802b014:	d0fa      	beq.n	802b00c <ceilf+0x38>
 802b016:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b050 <ceilf+0x7c>
 802b01a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b01e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b022:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b026:	ddef      	ble.n	802b008 <ceilf+0x34>
 802b028:	2b00      	cmp	r3, #0
 802b02a:	bfc2      	ittt	gt
 802b02c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802b030:	fa40 f202 	asrgt.w	r2, r0, r2
 802b034:	189b      	addgt	r3, r3, r2
 802b036:	ea23 0301 	bic.w	r3, r3, r1
 802b03a:	e7e5      	b.n	802b008 <ceilf+0x34>
 802b03c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802b040:	d3e4      	bcc.n	802b00c <ceilf+0x38>
 802b042:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b046:	4770      	bx	lr
 802b048:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802b04c:	e7dc      	b.n	802b008 <ceilf+0x34>
 802b04e:	bf00      	nop
 802b050:	7149f2ca 	.word	0x7149f2ca
 802b054:	007fffff 	.word	0x007fffff

0802b058 <floorf>:
 802b058:	ee10 3a10 	vmov	r3, s0
 802b05c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802b060:	3a7f      	subs	r2, #127	; 0x7f
 802b062:	2a16      	cmp	r2, #22
 802b064:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802b068:	dc2a      	bgt.n	802b0c0 <floorf+0x68>
 802b06a:	2a00      	cmp	r2, #0
 802b06c:	da11      	bge.n	802b092 <floorf+0x3a>
 802b06e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802b0d0 <floorf+0x78>
 802b072:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b076:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b07a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b07e:	dd05      	ble.n	802b08c <floorf+0x34>
 802b080:	2b00      	cmp	r3, #0
 802b082:	da23      	bge.n	802b0cc <floorf+0x74>
 802b084:	4a13      	ldr	r2, [pc, #76]	; (802b0d4 <floorf+0x7c>)
 802b086:	2900      	cmp	r1, #0
 802b088:	bf18      	it	ne
 802b08a:	4613      	movne	r3, r2
 802b08c:	ee00 3a10 	vmov	s0, r3
 802b090:	4770      	bx	lr
 802b092:	4911      	ldr	r1, [pc, #68]	; (802b0d8 <floorf+0x80>)
 802b094:	4111      	asrs	r1, r2
 802b096:	420b      	tst	r3, r1
 802b098:	d0fa      	beq.n	802b090 <floorf+0x38>
 802b09a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802b0d0 <floorf+0x78>
 802b09e:	ee30 0a27 	vadd.f32	s0, s0, s15
 802b0a2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802b0a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b0aa:	ddef      	ble.n	802b08c <floorf+0x34>
 802b0ac:	2b00      	cmp	r3, #0
 802b0ae:	bfbe      	ittt	lt
 802b0b0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802b0b4:	fa40 f202 	asrlt.w	r2, r0, r2
 802b0b8:	189b      	addlt	r3, r3, r2
 802b0ba:	ea23 0301 	bic.w	r3, r3, r1
 802b0be:	e7e5      	b.n	802b08c <floorf+0x34>
 802b0c0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802b0c4:	d3e4      	bcc.n	802b090 <floorf+0x38>
 802b0c6:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b0ca:	4770      	bx	lr
 802b0cc:	2300      	movs	r3, #0
 802b0ce:	e7dd      	b.n	802b08c <floorf+0x34>
 802b0d0:	7149f2ca 	.word	0x7149f2ca
 802b0d4:	bf800000 	.word	0xbf800000
 802b0d8:	007fffff 	.word	0x007fffff

0802b0dc <__kernel_cosf>:
 802b0dc:	ee10 3a10 	vmov	r3, s0
 802b0e0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b0e4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802b0e8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802b0ec:	da05      	bge.n	802b0fa <__kernel_cosf+0x1e>
 802b0ee:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802b0f2:	ee17 2a90 	vmov	r2, s15
 802b0f6:	2a00      	cmp	r2, #0
 802b0f8:	d03b      	beq.n	802b172 <__kernel_cosf+0x96>
 802b0fa:	ee20 7a00 	vmul.f32	s14, s0, s0
 802b0fe:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802b178 <__kernel_cosf+0x9c>
 802b102:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802b17c <__kernel_cosf+0xa0>
 802b106:	4a1e      	ldr	r2, [pc, #120]	; (802b180 <__kernel_cosf+0xa4>)
 802b108:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b10c:	4293      	cmp	r3, r2
 802b10e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802b184 <__kernel_cosf+0xa8>
 802b112:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b116:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802b188 <__kernel_cosf+0xac>
 802b11a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b11e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802b18c <__kernel_cosf+0xb0>
 802b122:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b126:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802b190 <__kernel_cosf+0xb4>
 802b12a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b12e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802b132:	ee26 6a07 	vmul.f32	s12, s12, s14
 802b136:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b13a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802b13e:	ee67 7a27 	vmul.f32	s15, s14, s15
 802b142:	dc04      	bgt.n	802b14e <__kernel_cosf+0x72>
 802b144:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802b148:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802b14c:	4770      	bx	lr
 802b14e:	4a11      	ldr	r2, [pc, #68]	; (802b194 <__kernel_cosf+0xb8>)
 802b150:	4293      	cmp	r3, r2
 802b152:	bfda      	itte	le
 802b154:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802b158:	ee07 3a10 	vmovle	s14, r3
 802b15c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802b160:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b164:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802b168:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802b16c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802b170:	4770      	bx	lr
 802b172:	eeb0 0a66 	vmov.f32	s0, s13
 802b176:	4770      	bx	lr
 802b178:	ad47d74e 	.word	0xad47d74e
 802b17c:	310f74f6 	.word	0x310f74f6
 802b180:	3e999999 	.word	0x3e999999
 802b184:	b493f27c 	.word	0xb493f27c
 802b188:	37d00d01 	.word	0x37d00d01
 802b18c:	bab60b61 	.word	0xbab60b61
 802b190:	3d2aaaab 	.word	0x3d2aaaab
 802b194:	3f480000 	.word	0x3f480000

0802b198 <__kernel_sinf>:
 802b198:	ee10 3a10 	vmov	r3, s0
 802b19c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b1a0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802b1a4:	da04      	bge.n	802b1b0 <__kernel_sinf+0x18>
 802b1a6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802b1aa:	ee17 3a90 	vmov	r3, s15
 802b1ae:	b35b      	cbz	r3, 802b208 <__kernel_sinf+0x70>
 802b1b0:	ee20 7a00 	vmul.f32	s14, s0, s0
 802b1b4:	eddf 7a15 	vldr	s15, [pc, #84]	; 802b20c <__kernel_sinf+0x74>
 802b1b8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802b210 <__kernel_sinf+0x78>
 802b1bc:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b1c0:	eddf 7a14 	vldr	s15, [pc, #80]	; 802b214 <__kernel_sinf+0x7c>
 802b1c4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b1c8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802b218 <__kernel_sinf+0x80>
 802b1cc:	eea7 6a87 	vfma.f32	s12, s15, s14
 802b1d0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802b21c <__kernel_sinf+0x84>
 802b1d4:	ee60 6a07 	vmul.f32	s13, s0, s14
 802b1d8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802b1dc:	b930      	cbnz	r0, 802b1ec <__kernel_sinf+0x54>
 802b1de:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802b220 <__kernel_sinf+0x88>
 802b1e2:	eea7 6a27 	vfma.f32	s12, s14, s15
 802b1e6:	eea6 0a26 	vfma.f32	s0, s12, s13
 802b1ea:	4770      	bx	lr
 802b1ec:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802b1f0:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802b1f4:	eee0 7a86 	vfma.f32	s15, s1, s12
 802b1f8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802b1fc:	eddf 7a09 	vldr	s15, [pc, #36]	; 802b224 <__kernel_sinf+0x8c>
 802b200:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802b204:	ee30 0a60 	vsub.f32	s0, s0, s1
 802b208:	4770      	bx	lr
 802b20a:	bf00      	nop
 802b20c:	2f2ec9d3 	.word	0x2f2ec9d3
 802b210:	b2d72f34 	.word	0xb2d72f34
 802b214:	3638ef1b 	.word	0x3638ef1b
 802b218:	b9500d01 	.word	0xb9500d01
 802b21c:	3c088889 	.word	0x3c088889
 802b220:	be2aaaab 	.word	0xbe2aaaab
 802b224:	3e2aaaab 	.word	0x3e2aaaab

0802b228 <__ieee754_rem_pio2f>:
 802b228:	b5f0      	push	{r4, r5, r6, r7, lr}
 802b22a:	ee10 6a10 	vmov	r6, s0
 802b22e:	4b86      	ldr	r3, [pc, #536]	; (802b448 <__ieee754_rem_pio2f+0x220>)
 802b230:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802b234:	429d      	cmp	r5, r3
 802b236:	b087      	sub	sp, #28
 802b238:	4604      	mov	r4, r0
 802b23a:	dc05      	bgt.n	802b248 <__ieee754_rem_pio2f+0x20>
 802b23c:	2300      	movs	r3, #0
 802b23e:	ed80 0a00 	vstr	s0, [r0]
 802b242:	6043      	str	r3, [r0, #4]
 802b244:	2000      	movs	r0, #0
 802b246:	e020      	b.n	802b28a <__ieee754_rem_pio2f+0x62>
 802b248:	4b80      	ldr	r3, [pc, #512]	; (802b44c <__ieee754_rem_pio2f+0x224>)
 802b24a:	429d      	cmp	r5, r3
 802b24c:	dc38      	bgt.n	802b2c0 <__ieee754_rem_pio2f+0x98>
 802b24e:	2e00      	cmp	r6, #0
 802b250:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802b450 <__ieee754_rem_pio2f+0x228>
 802b254:	4b7f      	ldr	r3, [pc, #508]	; (802b454 <__ieee754_rem_pio2f+0x22c>)
 802b256:	f025 050f 	bic.w	r5, r5, #15
 802b25a:	dd18      	ble.n	802b28e <__ieee754_rem_pio2f+0x66>
 802b25c:	429d      	cmp	r5, r3
 802b25e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802b262:	bf09      	itett	eq
 802b264:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802b458 <__ieee754_rem_pio2f+0x230>
 802b268:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802b45c <__ieee754_rem_pio2f+0x234>
 802b26c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802b270:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802b460 <__ieee754_rem_pio2f+0x238>
 802b274:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802b278:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802b27c:	edc0 6a00 	vstr	s13, [r0]
 802b280:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b284:	edc0 7a01 	vstr	s15, [r0, #4]
 802b288:	2001      	movs	r0, #1
 802b28a:	b007      	add	sp, #28
 802b28c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802b28e:	429d      	cmp	r5, r3
 802b290:	ee70 7a07 	vadd.f32	s15, s0, s14
 802b294:	bf09      	itett	eq
 802b296:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802b458 <__ieee754_rem_pio2f+0x230>
 802b29a:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802b45c <__ieee754_rem_pio2f+0x234>
 802b29e:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802b2a2:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802b460 <__ieee754_rem_pio2f+0x238>
 802b2a6:	ee77 6a87 	vadd.f32	s13, s15, s14
 802b2aa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802b2ae:	edc0 6a00 	vstr	s13, [r0]
 802b2b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b2b6:	edc0 7a01 	vstr	s15, [r0, #4]
 802b2ba:	f04f 30ff 	mov.w	r0, #4294967295
 802b2be:	e7e4      	b.n	802b28a <__ieee754_rem_pio2f+0x62>
 802b2c0:	4b68      	ldr	r3, [pc, #416]	; (802b464 <__ieee754_rem_pio2f+0x23c>)
 802b2c2:	429d      	cmp	r5, r3
 802b2c4:	dc71      	bgt.n	802b3aa <__ieee754_rem_pio2f+0x182>
 802b2c6:	f000 f8db 	bl	802b480 <fabsf>
 802b2ca:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802b468 <__ieee754_rem_pio2f+0x240>
 802b2ce:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b2d2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802b2d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b2da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802b2de:	ee17 0a90 	vmov	r0, s15
 802b2e2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802b450 <__ieee754_rem_pio2f+0x228>
 802b2e6:	eea7 0a67 	vfms.f32	s0, s14, s15
 802b2ea:	281f      	cmp	r0, #31
 802b2ec:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802b45c <__ieee754_rem_pio2f+0x234>
 802b2f0:	ee67 7a27 	vmul.f32	s15, s14, s15
 802b2f4:	eeb1 6a47 	vneg.f32	s12, s14
 802b2f8:	ee70 6a67 	vsub.f32	s13, s0, s15
 802b2fc:	ee16 2a90 	vmov	r2, s13
 802b300:	dc1c      	bgt.n	802b33c <__ieee754_rem_pio2f+0x114>
 802b302:	495a      	ldr	r1, [pc, #360]	; (802b46c <__ieee754_rem_pio2f+0x244>)
 802b304:	1e47      	subs	r7, r0, #1
 802b306:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802b30a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802b30e:	428b      	cmp	r3, r1
 802b310:	d014      	beq.n	802b33c <__ieee754_rem_pio2f+0x114>
 802b312:	6022      	str	r2, [r4, #0]
 802b314:	ed94 7a00 	vldr	s14, [r4]
 802b318:	ee30 0a47 	vsub.f32	s0, s0, s14
 802b31c:	2e00      	cmp	r6, #0
 802b31e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802b322:	ed84 0a01 	vstr	s0, [r4, #4]
 802b326:	dab0      	bge.n	802b28a <__ieee754_rem_pio2f+0x62>
 802b328:	eeb1 7a47 	vneg.f32	s14, s14
 802b32c:	eeb1 0a40 	vneg.f32	s0, s0
 802b330:	ed84 7a00 	vstr	s14, [r4]
 802b334:	ed84 0a01 	vstr	s0, [r4, #4]
 802b338:	4240      	negs	r0, r0
 802b33a:	e7a6      	b.n	802b28a <__ieee754_rem_pio2f+0x62>
 802b33c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802b340:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802b344:	2908      	cmp	r1, #8
 802b346:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802b34a:	dde2      	ble.n	802b312 <__ieee754_rem_pio2f+0xea>
 802b34c:	eddf 5a42 	vldr	s11, [pc, #264]	; 802b458 <__ieee754_rem_pio2f+0x230>
 802b350:	eef0 6a40 	vmov.f32	s13, s0
 802b354:	eee6 6a25 	vfma.f32	s13, s12, s11
 802b358:	ee70 7a66 	vsub.f32	s15, s0, s13
 802b35c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802b360:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802b460 <__ieee754_rem_pio2f+0x238>
 802b364:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802b368:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802b36c:	ee15 2a90 	vmov	r2, s11
 802b370:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802b374:	1a5b      	subs	r3, r3, r1
 802b376:	2b19      	cmp	r3, #25
 802b378:	dc04      	bgt.n	802b384 <__ieee754_rem_pio2f+0x15c>
 802b37a:	edc4 5a00 	vstr	s11, [r4]
 802b37e:	eeb0 0a66 	vmov.f32	s0, s13
 802b382:	e7c7      	b.n	802b314 <__ieee754_rem_pio2f+0xec>
 802b384:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802b470 <__ieee754_rem_pio2f+0x248>
 802b388:	eeb0 0a66 	vmov.f32	s0, s13
 802b38c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802b390:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802b394:	eddf 6a37 	vldr	s13, [pc, #220]	; 802b474 <__ieee754_rem_pio2f+0x24c>
 802b398:	eee6 7a25 	vfma.f32	s15, s12, s11
 802b39c:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802b3a0:	ee30 7a67 	vsub.f32	s14, s0, s15
 802b3a4:	ed84 7a00 	vstr	s14, [r4]
 802b3a8:	e7b4      	b.n	802b314 <__ieee754_rem_pio2f+0xec>
 802b3aa:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802b3ae:	db06      	blt.n	802b3be <__ieee754_rem_pio2f+0x196>
 802b3b0:	ee70 7a40 	vsub.f32	s15, s0, s0
 802b3b4:	edc0 7a01 	vstr	s15, [r0, #4]
 802b3b8:	edc0 7a00 	vstr	s15, [r0]
 802b3bc:	e742      	b.n	802b244 <__ieee754_rem_pio2f+0x1c>
 802b3be:	15ea      	asrs	r2, r5, #23
 802b3c0:	3a86      	subs	r2, #134	; 0x86
 802b3c2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802b3c6:	ee07 3a90 	vmov	s15, r3
 802b3ca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802b3ce:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802b478 <__ieee754_rem_pio2f+0x250>
 802b3d2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802b3d6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b3da:	ed8d 7a03 	vstr	s14, [sp, #12]
 802b3de:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b3e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802b3e6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802b3ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b3ee:	ed8d 7a04 	vstr	s14, [sp, #16]
 802b3f2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802b3f6:	eef5 7a40 	vcmp.f32	s15, #0.0
 802b3fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b3fe:	edcd 7a05 	vstr	s15, [sp, #20]
 802b402:	d11e      	bne.n	802b442 <__ieee754_rem_pio2f+0x21a>
 802b404:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802b408:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b40c:	bf14      	ite	ne
 802b40e:	2302      	movne	r3, #2
 802b410:	2301      	moveq	r3, #1
 802b412:	491a      	ldr	r1, [pc, #104]	; (802b47c <__ieee754_rem_pio2f+0x254>)
 802b414:	9101      	str	r1, [sp, #4]
 802b416:	2102      	movs	r1, #2
 802b418:	9100      	str	r1, [sp, #0]
 802b41a:	a803      	add	r0, sp, #12
 802b41c:	4621      	mov	r1, r4
 802b41e:	f000 f89d 	bl	802b55c <__kernel_rem_pio2f>
 802b422:	2e00      	cmp	r6, #0
 802b424:	f6bf af31 	bge.w	802b28a <__ieee754_rem_pio2f+0x62>
 802b428:	edd4 7a00 	vldr	s15, [r4]
 802b42c:	eef1 7a67 	vneg.f32	s15, s15
 802b430:	edc4 7a00 	vstr	s15, [r4]
 802b434:	edd4 7a01 	vldr	s15, [r4, #4]
 802b438:	eef1 7a67 	vneg.f32	s15, s15
 802b43c:	edc4 7a01 	vstr	s15, [r4, #4]
 802b440:	e77a      	b.n	802b338 <__ieee754_rem_pio2f+0x110>
 802b442:	2303      	movs	r3, #3
 802b444:	e7e5      	b.n	802b412 <__ieee754_rem_pio2f+0x1ea>
 802b446:	bf00      	nop
 802b448:	3f490fd8 	.word	0x3f490fd8
 802b44c:	4016cbe3 	.word	0x4016cbe3
 802b450:	3fc90f80 	.word	0x3fc90f80
 802b454:	3fc90fd0 	.word	0x3fc90fd0
 802b458:	37354400 	.word	0x37354400
 802b45c:	37354443 	.word	0x37354443
 802b460:	2e85a308 	.word	0x2e85a308
 802b464:	43490f80 	.word	0x43490f80
 802b468:	3f22f984 	.word	0x3f22f984
 802b46c:	080438c8 	.word	0x080438c8
 802b470:	2e85a300 	.word	0x2e85a300
 802b474:	248d3132 	.word	0x248d3132
 802b478:	43800000 	.word	0x43800000
 802b47c:	08043948 	.word	0x08043948

0802b480 <fabsf>:
 802b480:	ee10 3a10 	vmov	r3, s0
 802b484:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802b488:	ee00 3a10 	vmov	s0, r3
 802b48c:	4770      	bx	lr
	...

0802b490 <scalbnf>:
 802b490:	ee10 3a10 	vmov	r3, s0
 802b494:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802b498:	d02b      	beq.n	802b4f2 <scalbnf+0x62>
 802b49a:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802b49e:	d302      	bcc.n	802b4a6 <scalbnf+0x16>
 802b4a0:	ee30 0a00 	vadd.f32	s0, s0, s0
 802b4a4:	4770      	bx	lr
 802b4a6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802b4aa:	d123      	bne.n	802b4f4 <scalbnf+0x64>
 802b4ac:	4b24      	ldr	r3, [pc, #144]	; (802b540 <scalbnf+0xb0>)
 802b4ae:	eddf 7a25 	vldr	s15, [pc, #148]	; 802b544 <scalbnf+0xb4>
 802b4b2:	4298      	cmp	r0, r3
 802b4b4:	ee20 0a27 	vmul.f32	s0, s0, s15
 802b4b8:	db17      	blt.n	802b4ea <scalbnf+0x5a>
 802b4ba:	ee10 3a10 	vmov	r3, s0
 802b4be:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802b4c2:	3a19      	subs	r2, #25
 802b4c4:	f24c 3150 	movw	r1, #50000	; 0xc350
 802b4c8:	4288      	cmp	r0, r1
 802b4ca:	dd15      	ble.n	802b4f8 <scalbnf+0x68>
 802b4cc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802b548 <scalbnf+0xb8>
 802b4d0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802b54c <scalbnf+0xbc>
 802b4d4:	ee10 3a10 	vmov	r3, s0
 802b4d8:	eeb0 7a67 	vmov.f32	s14, s15
 802b4dc:	2b00      	cmp	r3, #0
 802b4de:	bfb8      	it	lt
 802b4e0:	eef0 7a66 	vmovlt.f32	s15, s13
 802b4e4:	ee27 0a87 	vmul.f32	s0, s15, s14
 802b4e8:	4770      	bx	lr
 802b4ea:	eddf 7a19 	vldr	s15, [pc, #100]	; 802b550 <scalbnf+0xc0>
 802b4ee:	ee27 0a80 	vmul.f32	s0, s15, s0
 802b4f2:	4770      	bx	lr
 802b4f4:	0dd2      	lsrs	r2, r2, #23
 802b4f6:	e7e5      	b.n	802b4c4 <scalbnf+0x34>
 802b4f8:	4410      	add	r0, r2
 802b4fa:	28fe      	cmp	r0, #254	; 0xfe
 802b4fc:	dce6      	bgt.n	802b4cc <scalbnf+0x3c>
 802b4fe:	2800      	cmp	r0, #0
 802b500:	dd06      	ble.n	802b510 <scalbnf+0x80>
 802b502:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b506:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b50a:	ee00 3a10 	vmov	s0, r3
 802b50e:	4770      	bx	lr
 802b510:	f110 0f16 	cmn.w	r0, #22
 802b514:	da09      	bge.n	802b52a <scalbnf+0x9a>
 802b516:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b550 <scalbnf+0xc0>
 802b51a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802b554 <scalbnf+0xc4>
 802b51e:	ee10 3a10 	vmov	r3, s0
 802b522:	eeb0 7a67 	vmov.f32	s14, s15
 802b526:	2b00      	cmp	r3, #0
 802b528:	e7d9      	b.n	802b4de <scalbnf+0x4e>
 802b52a:	3019      	adds	r0, #25
 802b52c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b530:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b534:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802b558 <scalbnf+0xc8>
 802b538:	ee07 3a90 	vmov	s15, r3
 802b53c:	e7d7      	b.n	802b4ee <scalbnf+0x5e>
 802b53e:	bf00      	nop
 802b540:	ffff3cb0 	.word	0xffff3cb0
 802b544:	4c000000 	.word	0x4c000000
 802b548:	7149f2ca 	.word	0x7149f2ca
 802b54c:	f149f2ca 	.word	0xf149f2ca
 802b550:	0da24260 	.word	0x0da24260
 802b554:	8da24260 	.word	0x8da24260
 802b558:	33000000 	.word	0x33000000

0802b55c <__kernel_rem_pio2f>:
 802b55c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b560:	ed2d 8b04 	vpush	{d8-d9}
 802b564:	b0d9      	sub	sp, #356	; 0x164
 802b566:	4688      	mov	r8, r1
 802b568:	9002      	str	r0, [sp, #8]
 802b56a:	49b8      	ldr	r1, [pc, #736]	; (802b84c <__kernel_rem_pio2f+0x2f0>)
 802b56c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802b56e:	9301      	str	r3, [sp, #4]
 802b570:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802b574:	9901      	ldr	r1, [sp, #4]
 802b576:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802b578:	f101 3bff 	add.w	fp, r1, #4294967295
 802b57c:	1d11      	adds	r1, r2, #4
 802b57e:	db25      	blt.n	802b5cc <__kernel_rem_pio2f+0x70>
 802b580:	1ed0      	subs	r0, r2, #3
 802b582:	bf48      	it	mi
 802b584:	1d10      	addmi	r0, r2, #4
 802b586:	10c0      	asrs	r0, r0, #3
 802b588:	1c45      	adds	r5, r0, #1
 802b58a:	00e9      	lsls	r1, r5, #3
 802b58c:	eba0 070b 	sub.w	r7, r0, fp
 802b590:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802b85c <__kernel_rem_pio2f+0x300>
 802b594:	9103      	str	r1, [sp, #12]
 802b596:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802b59a:	eb0a 0c0b 	add.w	ip, sl, fp
 802b59e:	ae1c      	add	r6, sp, #112	; 0x70
 802b5a0:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802b5a4:	2400      	movs	r4, #0
 802b5a6:	4564      	cmp	r4, ip
 802b5a8:	dd12      	ble.n	802b5d0 <__kernel_rem_pio2f+0x74>
 802b5aa:	9901      	ldr	r1, [sp, #4]
 802b5ac:	ac1c      	add	r4, sp, #112	; 0x70
 802b5ae:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802b5b2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802b5b6:	f04f 0c00 	mov.w	ip, #0
 802b5ba:	45d4      	cmp	ip, sl
 802b5bc:	dc27      	bgt.n	802b60e <__kernel_rem_pio2f+0xb2>
 802b5be:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b5c2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802b85c <__kernel_rem_pio2f+0x300>
 802b5c6:	4627      	mov	r7, r4
 802b5c8:	2600      	movs	r6, #0
 802b5ca:	e016      	b.n	802b5fa <__kernel_rem_pio2f+0x9e>
 802b5cc:	2000      	movs	r0, #0
 802b5ce:	e7db      	b.n	802b588 <__kernel_rem_pio2f+0x2c>
 802b5d0:	42e7      	cmn	r7, r4
 802b5d2:	bf5d      	ittte	pl
 802b5d4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802b5d8:	ee07 1a90 	vmovpl	s15, r1
 802b5dc:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802b5e0:	eef0 7a47 	vmovmi.f32	s15, s14
 802b5e4:	ece6 7a01 	vstmia	r6!, {s15}
 802b5e8:	3401      	adds	r4, #1
 802b5ea:	e7dc      	b.n	802b5a6 <__kernel_rem_pio2f+0x4a>
 802b5ec:	ecfe 6a01 	vldmia	lr!, {s13}
 802b5f0:	ed97 7a00 	vldr	s14, [r7]
 802b5f4:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b5f8:	3601      	adds	r6, #1
 802b5fa:	455e      	cmp	r6, fp
 802b5fc:	f1a7 0704 	sub.w	r7, r7, #4
 802b600:	ddf4      	ble.n	802b5ec <__kernel_rem_pio2f+0x90>
 802b602:	ece9 7a01 	vstmia	r9!, {s15}
 802b606:	f10c 0c01 	add.w	ip, ip, #1
 802b60a:	3404      	adds	r4, #4
 802b60c:	e7d5      	b.n	802b5ba <__kernel_rem_pio2f+0x5e>
 802b60e:	a908      	add	r1, sp, #32
 802b610:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802b614:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802b618:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802b858 <__kernel_rem_pio2f+0x2fc>
 802b61c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802b854 <__kernel_rem_pio2f+0x2f8>
 802b620:	9105      	str	r1, [sp, #20]
 802b622:	9304      	str	r3, [sp, #16]
 802b624:	4656      	mov	r6, sl
 802b626:	00b3      	lsls	r3, r6, #2
 802b628:	9306      	str	r3, [sp, #24]
 802b62a:	ab58      	add	r3, sp, #352	; 0x160
 802b62c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b630:	ac08      	add	r4, sp, #32
 802b632:	ab44      	add	r3, sp, #272	; 0x110
 802b634:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802b638:	46a4      	mov	ip, r4
 802b63a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b63e:	4637      	mov	r7, r6
 802b640:	2f00      	cmp	r7, #0
 802b642:	f1a0 0004 	sub.w	r0, r0, #4
 802b646:	dc4a      	bgt.n	802b6de <__kernel_rem_pio2f+0x182>
 802b648:	4628      	mov	r0, r5
 802b64a:	9207      	str	r2, [sp, #28]
 802b64c:	f7ff ff20 	bl	802b490 <scalbnf>
 802b650:	eeb0 8a40 	vmov.f32	s16, s0
 802b654:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802b658:	ee28 0a00 	vmul.f32	s0, s16, s0
 802b65c:	f7ff fcfc 	bl	802b058 <floorf>
 802b660:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802b664:	eea0 8a67 	vfms.f32	s16, s0, s15
 802b668:	2d00      	cmp	r5, #0
 802b66a:	9a07      	ldr	r2, [sp, #28]
 802b66c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802b670:	ee17 9a90 	vmov	r9, s15
 802b674:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b678:	ee38 8a67 	vsub.f32	s16, s16, s15
 802b67c:	dd41      	ble.n	802b702 <__kernel_rem_pio2f+0x1a6>
 802b67e:	f106 3cff 	add.w	ip, r6, #4294967295
 802b682:	ab08      	add	r3, sp, #32
 802b684:	f1c5 0e08 	rsb	lr, r5, #8
 802b688:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802b68c:	fa47 f00e 	asr.w	r0, r7, lr
 802b690:	4481      	add	r9, r0
 802b692:	fa00 f00e 	lsl.w	r0, r0, lr
 802b696:	1a3f      	subs	r7, r7, r0
 802b698:	f1c5 0007 	rsb	r0, r5, #7
 802b69c:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802b6a0:	4107      	asrs	r7, r0
 802b6a2:	2f00      	cmp	r7, #0
 802b6a4:	dd3c      	ble.n	802b720 <__kernel_rem_pio2f+0x1c4>
 802b6a6:	f04f 0e00 	mov.w	lr, #0
 802b6aa:	f109 0901 	add.w	r9, r9, #1
 802b6ae:	4671      	mov	r1, lr
 802b6b0:	4576      	cmp	r6, lr
 802b6b2:	dc67      	bgt.n	802b784 <__kernel_rem_pio2f+0x228>
 802b6b4:	2d00      	cmp	r5, #0
 802b6b6:	dd03      	ble.n	802b6c0 <__kernel_rem_pio2f+0x164>
 802b6b8:	2d01      	cmp	r5, #1
 802b6ba:	d074      	beq.n	802b7a6 <__kernel_rem_pio2f+0x24a>
 802b6bc:	2d02      	cmp	r5, #2
 802b6be:	d07b      	beq.n	802b7b8 <__kernel_rem_pio2f+0x25c>
 802b6c0:	2f02      	cmp	r7, #2
 802b6c2:	d12d      	bne.n	802b720 <__kernel_rem_pio2f+0x1c4>
 802b6c4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b6c8:	ee30 8a48 	vsub.f32	s16, s0, s16
 802b6cc:	b341      	cbz	r1, 802b720 <__kernel_rem_pio2f+0x1c4>
 802b6ce:	4628      	mov	r0, r5
 802b6d0:	9207      	str	r2, [sp, #28]
 802b6d2:	f7ff fedd 	bl	802b490 <scalbnf>
 802b6d6:	9a07      	ldr	r2, [sp, #28]
 802b6d8:	ee38 8a40 	vsub.f32	s16, s16, s0
 802b6dc:	e020      	b.n	802b720 <__kernel_rem_pio2f+0x1c4>
 802b6de:	ee60 7a28 	vmul.f32	s15, s0, s17
 802b6e2:	3f01      	subs	r7, #1
 802b6e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b6e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b6ec:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802b6f0:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b6f4:	ecac 0a01 	vstmia	ip!, {s0}
 802b6f8:	ed90 0a00 	vldr	s0, [r0]
 802b6fc:	ee37 0a80 	vadd.f32	s0, s15, s0
 802b700:	e79e      	b.n	802b640 <__kernel_rem_pio2f+0xe4>
 802b702:	d105      	bne.n	802b710 <__kernel_rem_pio2f+0x1b4>
 802b704:	1e70      	subs	r0, r6, #1
 802b706:	ab08      	add	r3, sp, #32
 802b708:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802b70c:	11ff      	asrs	r7, r7, #7
 802b70e:	e7c8      	b.n	802b6a2 <__kernel_rem_pio2f+0x146>
 802b710:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b714:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802b718:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b71c:	da30      	bge.n	802b780 <__kernel_rem_pio2f+0x224>
 802b71e:	2700      	movs	r7, #0
 802b720:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802b724:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b728:	f040 809a 	bne.w	802b860 <__kernel_rem_pio2f+0x304>
 802b72c:	1e74      	subs	r4, r6, #1
 802b72e:	46a4      	mov	ip, r4
 802b730:	2100      	movs	r1, #0
 802b732:	45d4      	cmp	ip, sl
 802b734:	da47      	bge.n	802b7c6 <__kernel_rem_pio2f+0x26a>
 802b736:	2900      	cmp	r1, #0
 802b738:	d063      	beq.n	802b802 <__kernel_rem_pio2f+0x2a6>
 802b73a:	ab08      	add	r3, sp, #32
 802b73c:	3d08      	subs	r5, #8
 802b73e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802b742:	2b00      	cmp	r3, #0
 802b744:	d07f      	beq.n	802b846 <__kernel_rem_pio2f+0x2ea>
 802b746:	4628      	mov	r0, r5
 802b748:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b74c:	f7ff fea0 	bl	802b490 <scalbnf>
 802b750:	1c63      	adds	r3, r4, #1
 802b752:	aa44      	add	r2, sp, #272	; 0x110
 802b754:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802b858 <__kernel_rem_pio2f+0x2fc>
 802b758:	0099      	lsls	r1, r3, #2
 802b75a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802b75e:	4623      	mov	r3, r4
 802b760:	2b00      	cmp	r3, #0
 802b762:	f280 80ad 	bge.w	802b8c0 <__kernel_rem_pio2f+0x364>
 802b766:	4623      	mov	r3, r4
 802b768:	2b00      	cmp	r3, #0
 802b76a:	f2c0 80cb 	blt.w	802b904 <__kernel_rem_pio2f+0x3a8>
 802b76e:	aa44      	add	r2, sp, #272	; 0x110
 802b770:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802b774:	4e36      	ldr	r6, [pc, #216]	; (802b850 <__kernel_rem_pio2f+0x2f4>)
 802b776:	eddf 7a39 	vldr	s15, [pc, #228]	; 802b85c <__kernel_rem_pio2f+0x300>
 802b77a:	2000      	movs	r0, #0
 802b77c:	1ae2      	subs	r2, r4, r3
 802b77e:	e0b6      	b.n	802b8ee <__kernel_rem_pio2f+0x392>
 802b780:	2702      	movs	r7, #2
 802b782:	e790      	b.n	802b6a6 <__kernel_rem_pio2f+0x14a>
 802b784:	6820      	ldr	r0, [r4, #0]
 802b786:	b949      	cbnz	r1, 802b79c <__kernel_rem_pio2f+0x240>
 802b788:	b118      	cbz	r0, 802b792 <__kernel_rem_pio2f+0x236>
 802b78a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802b78e:	6020      	str	r0, [r4, #0]
 802b790:	2001      	movs	r0, #1
 802b792:	f10e 0e01 	add.w	lr, lr, #1
 802b796:	3404      	adds	r4, #4
 802b798:	4601      	mov	r1, r0
 802b79a:	e789      	b.n	802b6b0 <__kernel_rem_pio2f+0x154>
 802b79c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802b7a0:	6020      	str	r0, [r4, #0]
 802b7a2:	4608      	mov	r0, r1
 802b7a4:	e7f5      	b.n	802b792 <__kernel_rem_pio2f+0x236>
 802b7a6:	1e74      	subs	r4, r6, #1
 802b7a8:	ab08      	add	r3, sp, #32
 802b7aa:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b7ae:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802b7b2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802b7b6:	e783      	b.n	802b6c0 <__kernel_rem_pio2f+0x164>
 802b7b8:	1e74      	subs	r4, r6, #1
 802b7ba:	ab08      	add	r3, sp, #32
 802b7bc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b7c0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802b7c4:	e7f5      	b.n	802b7b2 <__kernel_rem_pio2f+0x256>
 802b7c6:	ab08      	add	r3, sp, #32
 802b7c8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802b7cc:	f10c 3cff 	add.w	ip, ip, #4294967295
 802b7d0:	4301      	orrs	r1, r0
 802b7d2:	e7ae      	b.n	802b732 <__kernel_rem_pio2f+0x1d6>
 802b7d4:	3001      	adds	r0, #1
 802b7d6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802b7da:	2f00      	cmp	r7, #0
 802b7dc:	d0fa      	beq.n	802b7d4 <__kernel_rem_pio2f+0x278>
 802b7de:	9b06      	ldr	r3, [sp, #24]
 802b7e0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802b7e4:	eb0d 0403 	add.w	r4, sp, r3
 802b7e8:	9b01      	ldr	r3, [sp, #4]
 802b7ea:	18f7      	adds	r7, r6, r3
 802b7ec:	ab1c      	add	r3, sp, #112	; 0x70
 802b7ee:	f106 0c01 	add.w	ip, r6, #1
 802b7f2:	3c4c      	subs	r4, #76	; 0x4c
 802b7f4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802b7f8:	4430      	add	r0, r6
 802b7fa:	4560      	cmp	r0, ip
 802b7fc:	da04      	bge.n	802b808 <__kernel_rem_pio2f+0x2ac>
 802b7fe:	4606      	mov	r6, r0
 802b800:	e711      	b.n	802b626 <__kernel_rem_pio2f+0xca>
 802b802:	9c05      	ldr	r4, [sp, #20]
 802b804:	2001      	movs	r0, #1
 802b806:	e7e6      	b.n	802b7d6 <__kernel_rem_pio2f+0x27a>
 802b808:	9b04      	ldr	r3, [sp, #16]
 802b80a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b80e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802b812:	9306      	str	r3, [sp, #24]
 802b814:	ee07 3a90 	vmov	s15, r3
 802b818:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b81c:	2600      	movs	r6, #0
 802b81e:	ece7 7a01 	vstmia	r7!, {s15}
 802b822:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b85c <__kernel_rem_pio2f+0x300>
 802b826:	46b9      	mov	r9, r7
 802b828:	455e      	cmp	r6, fp
 802b82a:	dd04      	ble.n	802b836 <__kernel_rem_pio2f+0x2da>
 802b82c:	ece4 7a01 	vstmia	r4!, {s15}
 802b830:	f10c 0c01 	add.w	ip, ip, #1
 802b834:	e7e1      	b.n	802b7fa <__kernel_rem_pio2f+0x29e>
 802b836:	ecfe 6a01 	vldmia	lr!, {s13}
 802b83a:	ed39 7a01 	vldmdb	r9!, {s14}
 802b83e:	3601      	adds	r6, #1
 802b840:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b844:	e7f0      	b.n	802b828 <__kernel_rem_pio2f+0x2cc>
 802b846:	3c01      	subs	r4, #1
 802b848:	e777      	b.n	802b73a <__kernel_rem_pio2f+0x1de>
 802b84a:	bf00      	nop
 802b84c:	08043c8c 	.word	0x08043c8c
 802b850:	08043c60 	.word	0x08043c60
 802b854:	43800000 	.word	0x43800000
 802b858:	3b800000 	.word	0x3b800000
 802b85c:	00000000 	.word	0x00000000
 802b860:	9b03      	ldr	r3, [sp, #12]
 802b862:	eeb0 0a48 	vmov.f32	s0, s16
 802b866:	1a98      	subs	r0, r3, r2
 802b868:	f7ff fe12 	bl	802b490 <scalbnf>
 802b86c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802b854 <__kernel_rem_pio2f+0x2f8>
 802b870:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b874:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b878:	db19      	blt.n	802b8ae <__kernel_rem_pio2f+0x352>
 802b87a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802b858 <__kernel_rem_pio2f+0x2fc>
 802b87e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b882:	aa08      	add	r2, sp, #32
 802b884:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b888:	1c74      	adds	r4, r6, #1
 802b88a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b88e:	3508      	adds	r5, #8
 802b890:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b894:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b898:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b89c:	ee10 3a10 	vmov	r3, s0
 802b8a0:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b8a4:	ee17 3a90 	vmov	r3, s15
 802b8a8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b8ac:	e74b      	b.n	802b746 <__kernel_rem_pio2f+0x1ea>
 802b8ae:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b8b2:	aa08      	add	r2, sp, #32
 802b8b4:	ee10 3a10 	vmov	r3, s0
 802b8b8:	4634      	mov	r4, r6
 802b8ba:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b8be:	e742      	b.n	802b746 <__kernel_rem_pio2f+0x1ea>
 802b8c0:	a808      	add	r0, sp, #32
 802b8c2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b8c6:	9001      	str	r0, [sp, #4]
 802b8c8:	ee07 0a90 	vmov	s15, r0
 802b8cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b8d0:	3b01      	subs	r3, #1
 802b8d2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b8d6:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b8da:	ed62 7a01 	vstmdb	r2!, {s15}
 802b8de:	e73f      	b.n	802b760 <__kernel_rem_pio2f+0x204>
 802b8e0:	ecf6 6a01 	vldmia	r6!, {s13}
 802b8e4:	ecb5 7a01 	vldmia	r5!, {s14}
 802b8e8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b8ec:	3001      	adds	r0, #1
 802b8ee:	4550      	cmp	r0, sl
 802b8f0:	dc01      	bgt.n	802b8f6 <__kernel_rem_pio2f+0x39a>
 802b8f2:	4290      	cmp	r0, r2
 802b8f4:	ddf4      	ble.n	802b8e0 <__kernel_rem_pio2f+0x384>
 802b8f6:	a858      	add	r0, sp, #352	; 0x160
 802b8f8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b8fc:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b900:	3b01      	subs	r3, #1
 802b902:	e731      	b.n	802b768 <__kernel_rem_pio2f+0x20c>
 802b904:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b906:	2b02      	cmp	r3, #2
 802b908:	dc09      	bgt.n	802b91e <__kernel_rem_pio2f+0x3c2>
 802b90a:	2b00      	cmp	r3, #0
 802b90c:	dc2b      	bgt.n	802b966 <__kernel_rem_pio2f+0x40a>
 802b90e:	d044      	beq.n	802b99a <__kernel_rem_pio2f+0x43e>
 802b910:	f009 0007 	and.w	r0, r9, #7
 802b914:	b059      	add	sp, #356	; 0x164
 802b916:	ecbd 8b04 	vpop	{d8-d9}
 802b91a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b91e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b920:	2b03      	cmp	r3, #3
 802b922:	d1f5      	bne.n	802b910 <__kernel_rem_pio2f+0x3b4>
 802b924:	aa30      	add	r2, sp, #192	; 0xc0
 802b926:	1f0b      	subs	r3, r1, #4
 802b928:	4413      	add	r3, r2
 802b92a:	461a      	mov	r2, r3
 802b92c:	4620      	mov	r0, r4
 802b92e:	2800      	cmp	r0, #0
 802b930:	f1a2 0204 	sub.w	r2, r2, #4
 802b934:	dc52      	bgt.n	802b9dc <__kernel_rem_pio2f+0x480>
 802b936:	4622      	mov	r2, r4
 802b938:	2a01      	cmp	r2, #1
 802b93a:	f1a3 0304 	sub.w	r3, r3, #4
 802b93e:	dc5d      	bgt.n	802b9fc <__kernel_rem_pio2f+0x4a0>
 802b940:	ab30      	add	r3, sp, #192	; 0xc0
 802b942:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802b85c <__kernel_rem_pio2f+0x300>
 802b946:	440b      	add	r3, r1
 802b948:	2c01      	cmp	r4, #1
 802b94a:	dc67      	bgt.n	802ba1c <__kernel_rem_pio2f+0x4c0>
 802b94c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b950:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b954:	2f00      	cmp	r7, #0
 802b956:	d167      	bne.n	802ba28 <__kernel_rem_pio2f+0x4cc>
 802b958:	edc8 6a00 	vstr	s13, [r8]
 802b95c:	ed88 7a01 	vstr	s14, [r8, #4]
 802b960:	edc8 7a02 	vstr	s15, [r8, #8]
 802b964:	e7d4      	b.n	802b910 <__kernel_rem_pio2f+0x3b4>
 802b966:	ab30      	add	r3, sp, #192	; 0xc0
 802b968:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802b85c <__kernel_rem_pio2f+0x300>
 802b96c:	440b      	add	r3, r1
 802b96e:	4622      	mov	r2, r4
 802b970:	2a00      	cmp	r2, #0
 802b972:	da24      	bge.n	802b9be <__kernel_rem_pio2f+0x462>
 802b974:	b34f      	cbz	r7, 802b9ca <__kernel_rem_pio2f+0x46e>
 802b976:	eef1 7a47 	vneg.f32	s15, s14
 802b97a:	edc8 7a00 	vstr	s15, [r8]
 802b97e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b982:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b986:	aa31      	add	r2, sp, #196	; 0xc4
 802b988:	2301      	movs	r3, #1
 802b98a:	429c      	cmp	r4, r3
 802b98c:	da20      	bge.n	802b9d0 <__kernel_rem_pio2f+0x474>
 802b98e:	b10f      	cbz	r7, 802b994 <__kernel_rem_pio2f+0x438>
 802b990:	eef1 7a67 	vneg.f32	s15, s15
 802b994:	edc8 7a01 	vstr	s15, [r8, #4]
 802b998:	e7ba      	b.n	802b910 <__kernel_rem_pio2f+0x3b4>
 802b99a:	ab30      	add	r3, sp, #192	; 0xc0
 802b99c:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802b85c <__kernel_rem_pio2f+0x300>
 802b9a0:	440b      	add	r3, r1
 802b9a2:	2c00      	cmp	r4, #0
 802b9a4:	da05      	bge.n	802b9b2 <__kernel_rem_pio2f+0x456>
 802b9a6:	b10f      	cbz	r7, 802b9ac <__kernel_rem_pio2f+0x450>
 802b9a8:	eef1 7a67 	vneg.f32	s15, s15
 802b9ac:	edc8 7a00 	vstr	s15, [r8]
 802b9b0:	e7ae      	b.n	802b910 <__kernel_rem_pio2f+0x3b4>
 802b9b2:	ed33 7a01 	vldmdb	r3!, {s14}
 802b9b6:	3c01      	subs	r4, #1
 802b9b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b9bc:	e7f1      	b.n	802b9a2 <__kernel_rem_pio2f+0x446>
 802b9be:	ed73 7a01 	vldmdb	r3!, {s15}
 802b9c2:	3a01      	subs	r2, #1
 802b9c4:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b9c8:	e7d2      	b.n	802b970 <__kernel_rem_pio2f+0x414>
 802b9ca:	eef0 7a47 	vmov.f32	s15, s14
 802b9ce:	e7d4      	b.n	802b97a <__kernel_rem_pio2f+0x41e>
 802b9d0:	ecb2 7a01 	vldmia	r2!, {s14}
 802b9d4:	3301      	adds	r3, #1
 802b9d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b9da:	e7d6      	b.n	802b98a <__kernel_rem_pio2f+0x42e>
 802b9dc:	edd2 7a00 	vldr	s15, [r2]
 802b9e0:	edd2 6a01 	vldr	s13, [r2, #4]
 802b9e4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b9e8:	3801      	subs	r0, #1
 802b9ea:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b9ee:	ed82 7a00 	vstr	s14, [r2]
 802b9f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b9f6:	edc2 7a01 	vstr	s15, [r2, #4]
 802b9fa:	e798      	b.n	802b92e <__kernel_rem_pio2f+0x3d2>
 802b9fc:	edd3 7a00 	vldr	s15, [r3]
 802ba00:	edd3 6a01 	vldr	s13, [r3, #4]
 802ba04:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802ba08:	3a01      	subs	r2, #1
 802ba0a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ba0e:	ed83 7a00 	vstr	s14, [r3]
 802ba12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802ba16:	edc3 7a01 	vstr	s15, [r3, #4]
 802ba1a:	e78d      	b.n	802b938 <__kernel_rem_pio2f+0x3dc>
 802ba1c:	ed33 7a01 	vldmdb	r3!, {s14}
 802ba20:	3c01      	subs	r4, #1
 802ba22:	ee77 7a87 	vadd.f32	s15, s15, s14
 802ba26:	e78f      	b.n	802b948 <__kernel_rem_pio2f+0x3ec>
 802ba28:	eef1 6a66 	vneg.f32	s13, s13
 802ba2c:	eeb1 7a47 	vneg.f32	s14, s14
 802ba30:	edc8 6a00 	vstr	s13, [r8]
 802ba34:	ed88 7a01 	vstr	s14, [r8, #4]
 802ba38:	eef1 7a67 	vneg.f32	s15, s15
 802ba3c:	e790      	b.n	802b960 <__kernel_rem_pio2f+0x404>
 802ba3e:	bf00      	nop

0802ba40 <abort>:
 802ba40:	b508      	push	{r3, lr}
 802ba42:	2006      	movs	r0, #6
 802ba44:	f000 fa3a 	bl	802bebc <raise>
 802ba48:	2001      	movs	r0, #1
 802ba4a:	f7d6 f8f1 	bl	8001c30 <_exit>
	...

0802ba50 <__assert_func>:
 802ba50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802ba52:	4614      	mov	r4, r2
 802ba54:	461a      	mov	r2, r3
 802ba56:	4b09      	ldr	r3, [pc, #36]	; (802ba7c <__assert_func+0x2c>)
 802ba58:	681b      	ldr	r3, [r3, #0]
 802ba5a:	4605      	mov	r5, r0
 802ba5c:	68d8      	ldr	r0, [r3, #12]
 802ba5e:	b14c      	cbz	r4, 802ba74 <__assert_func+0x24>
 802ba60:	4b07      	ldr	r3, [pc, #28]	; (802ba80 <__assert_func+0x30>)
 802ba62:	9100      	str	r1, [sp, #0]
 802ba64:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802ba68:	4906      	ldr	r1, [pc, #24]	; (802ba84 <__assert_func+0x34>)
 802ba6a:	462b      	mov	r3, r5
 802ba6c:	f000 f982 	bl	802bd74 <fiprintf>
 802ba70:	f7ff ffe6 	bl	802ba40 <abort>
 802ba74:	4b04      	ldr	r3, [pc, #16]	; (802ba88 <__assert_func+0x38>)
 802ba76:	461c      	mov	r4, r3
 802ba78:	e7f3      	b.n	802ba62 <__assert_func+0x12>
 802ba7a:	bf00      	nop
 802ba7c:	20000160 	.word	0x20000160
 802ba80:	08043c98 	.word	0x08043c98
 802ba84:	08043ca5 	.word	0x08043ca5
 802ba88:	08043cd3 	.word	0x08043cd3

0802ba8c <atexit>:
 802ba8c:	2300      	movs	r3, #0
 802ba8e:	4601      	mov	r1, r0
 802ba90:	461a      	mov	r2, r3
 802ba92:	4618      	mov	r0, r3
 802ba94:	f000 bb16 	b.w	802c0c4 <__register_exitproc>

0802ba98 <malloc>:
 802ba98:	4b02      	ldr	r3, [pc, #8]	; (802baa4 <malloc+0xc>)
 802ba9a:	4601      	mov	r1, r0
 802ba9c:	6818      	ldr	r0, [r3, #0]
 802ba9e:	f000 b82b 	b.w	802baf8 <_malloc_r>
 802baa2:	bf00      	nop
 802baa4:	20000160 	.word	0x20000160

0802baa8 <free>:
 802baa8:	4b02      	ldr	r3, [pc, #8]	; (802bab4 <free+0xc>)
 802baaa:	4601      	mov	r1, r0
 802baac:	6818      	ldr	r0, [r3, #0]
 802baae:	f000 bb67 	b.w	802c180 <_free_r>
 802bab2:	bf00      	nop
 802bab4:	20000160 	.word	0x20000160

0802bab8 <sbrk_aligned>:
 802bab8:	b570      	push	{r4, r5, r6, lr}
 802baba:	4e0e      	ldr	r6, [pc, #56]	; (802baf4 <sbrk_aligned+0x3c>)
 802babc:	460c      	mov	r4, r1
 802babe:	6831      	ldr	r1, [r6, #0]
 802bac0:	4605      	mov	r5, r0
 802bac2:	b911      	cbnz	r1, 802baca <sbrk_aligned+0x12>
 802bac4:	f000 faa0 	bl	802c008 <_sbrk_r>
 802bac8:	6030      	str	r0, [r6, #0]
 802baca:	4621      	mov	r1, r4
 802bacc:	4628      	mov	r0, r5
 802bace:	f000 fa9b 	bl	802c008 <_sbrk_r>
 802bad2:	1c43      	adds	r3, r0, #1
 802bad4:	d00a      	beq.n	802baec <sbrk_aligned+0x34>
 802bad6:	1cc4      	adds	r4, r0, #3
 802bad8:	f024 0403 	bic.w	r4, r4, #3
 802badc:	42a0      	cmp	r0, r4
 802bade:	d007      	beq.n	802baf0 <sbrk_aligned+0x38>
 802bae0:	1a21      	subs	r1, r4, r0
 802bae2:	4628      	mov	r0, r5
 802bae4:	f000 fa90 	bl	802c008 <_sbrk_r>
 802bae8:	3001      	adds	r0, #1
 802baea:	d101      	bne.n	802baf0 <sbrk_aligned+0x38>
 802baec:	f04f 34ff 	mov.w	r4, #4294967295
 802baf0:	4620      	mov	r0, r4
 802baf2:	bd70      	pop	{r4, r5, r6, pc}
 802baf4:	2001418c 	.word	0x2001418c

0802baf8 <_malloc_r>:
 802baf8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802bafc:	1ccd      	adds	r5, r1, #3
 802bafe:	f025 0503 	bic.w	r5, r5, #3
 802bb02:	3508      	adds	r5, #8
 802bb04:	2d0c      	cmp	r5, #12
 802bb06:	bf38      	it	cc
 802bb08:	250c      	movcc	r5, #12
 802bb0a:	2d00      	cmp	r5, #0
 802bb0c:	4607      	mov	r7, r0
 802bb0e:	db01      	blt.n	802bb14 <_malloc_r+0x1c>
 802bb10:	42a9      	cmp	r1, r5
 802bb12:	d905      	bls.n	802bb20 <_malloc_r+0x28>
 802bb14:	230c      	movs	r3, #12
 802bb16:	603b      	str	r3, [r7, #0]
 802bb18:	2600      	movs	r6, #0
 802bb1a:	4630      	mov	r0, r6
 802bb1c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bb20:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802bbf4 <_malloc_r+0xfc>
 802bb24:	f000 f868 	bl	802bbf8 <__malloc_lock>
 802bb28:	f8d8 3000 	ldr.w	r3, [r8]
 802bb2c:	461c      	mov	r4, r3
 802bb2e:	bb5c      	cbnz	r4, 802bb88 <_malloc_r+0x90>
 802bb30:	4629      	mov	r1, r5
 802bb32:	4638      	mov	r0, r7
 802bb34:	f7ff ffc0 	bl	802bab8 <sbrk_aligned>
 802bb38:	1c43      	adds	r3, r0, #1
 802bb3a:	4604      	mov	r4, r0
 802bb3c:	d155      	bne.n	802bbea <_malloc_r+0xf2>
 802bb3e:	f8d8 4000 	ldr.w	r4, [r8]
 802bb42:	4626      	mov	r6, r4
 802bb44:	2e00      	cmp	r6, #0
 802bb46:	d145      	bne.n	802bbd4 <_malloc_r+0xdc>
 802bb48:	2c00      	cmp	r4, #0
 802bb4a:	d048      	beq.n	802bbde <_malloc_r+0xe6>
 802bb4c:	6823      	ldr	r3, [r4, #0]
 802bb4e:	4631      	mov	r1, r6
 802bb50:	4638      	mov	r0, r7
 802bb52:	eb04 0903 	add.w	r9, r4, r3
 802bb56:	f000 fa57 	bl	802c008 <_sbrk_r>
 802bb5a:	4581      	cmp	r9, r0
 802bb5c:	d13f      	bne.n	802bbde <_malloc_r+0xe6>
 802bb5e:	6821      	ldr	r1, [r4, #0]
 802bb60:	1a6d      	subs	r5, r5, r1
 802bb62:	4629      	mov	r1, r5
 802bb64:	4638      	mov	r0, r7
 802bb66:	f7ff ffa7 	bl	802bab8 <sbrk_aligned>
 802bb6a:	3001      	adds	r0, #1
 802bb6c:	d037      	beq.n	802bbde <_malloc_r+0xe6>
 802bb6e:	6823      	ldr	r3, [r4, #0]
 802bb70:	442b      	add	r3, r5
 802bb72:	6023      	str	r3, [r4, #0]
 802bb74:	f8d8 3000 	ldr.w	r3, [r8]
 802bb78:	2b00      	cmp	r3, #0
 802bb7a:	d038      	beq.n	802bbee <_malloc_r+0xf6>
 802bb7c:	685a      	ldr	r2, [r3, #4]
 802bb7e:	42a2      	cmp	r2, r4
 802bb80:	d12b      	bne.n	802bbda <_malloc_r+0xe2>
 802bb82:	2200      	movs	r2, #0
 802bb84:	605a      	str	r2, [r3, #4]
 802bb86:	e00f      	b.n	802bba8 <_malloc_r+0xb0>
 802bb88:	6822      	ldr	r2, [r4, #0]
 802bb8a:	1b52      	subs	r2, r2, r5
 802bb8c:	d41f      	bmi.n	802bbce <_malloc_r+0xd6>
 802bb8e:	2a0b      	cmp	r2, #11
 802bb90:	d917      	bls.n	802bbc2 <_malloc_r+0xca>
 802bb92:	1961      	adds	r1, r4, r5
 802bb94:	42a3      	cmp	r3, r4
 802bb96:	6025      	str	r5, [r4, #0]
 802bb98:	bf18      	it	ne
 802bb9a:	6059      	strne	r1, [r3, #4]
 802bb9c:	6863      	ldr	r3, [r4, #4]
 802bb9e:	bf08      	it	eq
 802bba0:	f8c8 1000 	streq.w	r1, [r8]
 802bba4:	5162      	str	r2, [r4, r5]
 802bba6:	604b      	str	r3, [r1, #4]
 802bba8:	4638      	mov	r0, r7
 802bbaa:	f104 060b 	add.w	r6, r4, #11
 802bbae:	f000 f829 	bl	802bc04 <__malloc_unlock>
 802bbb2:	f026 0607 	bic.w	r6, r6, #7
 802bbb6:	1d23      	adds	r3, r4, #4
 802bbb8:	1af2      	subs	r2, r6, r3
 802bbba:	d0ae      	beq.n	802bb1a <_malloc_r+0x22>
 802bbbc:	1b9b      	subs	r3, r3, r6
 802bbbe:	50a3      	str	r3, [r4, r2]
 802bbc0:	e7ab      	b.n	802bb1a <_malloc_r+0x22>
 802bbc2:	42a3      	cmp	r3, r4
 802bbc4:	6862      	ldr	r2, [r4, #4]
 802bbc6:	d1dd      	bne.n	802bb84 <_malloc_r+0x8c>
 802bbc8:	f8c8 2000 	str.w	r2, [r8]
 802bbcc:	e7ec      	b.n	802bba8 <_malloc_r+0xb0>
 802bbce:	4623      	mov	r3, r4
 802bbd0:	6864      	ldr	r4, [r4, #4]
 802bbd2:	e7ac      	b.n	802bb2e <_malloc_r+0x36>
 802bbd4:	4634      	mov	r4, r6
 802bbd6:	6876      	ldr	r6, [r6, #4]
 802bbd8:	e7b4      	b.n	802bb44 <_malloc_r+0x4c>
 802bbda:	4613      	mov	r3, r2
 802bbdc:	e7cc      	b.n	802bb78 <_malloc_r+0x80>
 802bbde:	230c      	movs	r3, #12
 802bbe0:	603b      	str	r3, [r7, #0]
 802bbe2:	4638      	mov	r0, r7
 802bbe4:	f000 f80e 	bl	802bc04 <__malloc_unlock>
 802bbe8:	e797      	b.n	802bb1a <_malloc_r+0x22>
 802bbea:	6025      	str	r5, [r4, #0]
 802bbec:	e7dc      	b.n	802bba8 <_malloc_r+0xb0>
 802bbee:	605b      	str	r3, [r3, #4]
 802bbf0:	deff      	udf	#255	; 0xff
 802bbf2:	bf00      	nop
 802bbf4:	20014188 	.word	0x20014188

0802bbf8 <__malloc_lock>:
 802bbf8:	4801      	ldr	r0, [pc, #4]	; (802bc00 <__malloc_lock+0x8>)
 802bbfa:	f000 ba52 	b.w	802c0a2 <__retarget_lock_acquire_recursive>
 802bbfe:	bf00      	nop
 802bc00:	200142d1 	.word	0x200142d1

0802bc04 <__malloc_unlock>:
 802bc04:	4801      	ldr	r0, [pc, #4]	; (802bc0c <__malloc_unlock+0x8>)
 802bc06:	f000 ba4d 	b.w	802c0a4 <__retarget_lock_release_recursive>
 802bc0a:	bf00      	nop
 802bc0c:	200142d1 	.word	0x200142d1

0802bc10 <__cxa_atexit>:
 802bc10:	b510      	push	{r4, lr}
 802bc12:	4c05      	ldr	r4, [pc, #20]	; (802bc28 <__cxa_atexit+0x18>)
 802bc14:	4613      	mov	r3, r2
 802bc16:	b12c      	cbz	r4, 802bc24 <__cxa_atexit+0x14>
 802bc18:	460a      	mov	r2, r1
 802bc1a:	4601      	mov	r1, r0
 802bc1c:	2002      	movs	r0, #2
 802bc1e:	f000 fa51 	bl	802c0c4 <__register_exitproc>
 802bc22:	bd10      	pop	{r4, pc}
 802bc24:	4620      	mov	r0, r4
 802bc26:	e7fc      	b.n	802bc22 <__cxa_atexit+0x12>
 802bc28:	0802c0c5 	.word	0x0802c0c5

0802bc2c <std>:
 802bc2c:	2300      	movs	r3, #0
 802bc2e:	b510      	push	{r4, lr}
 802bc30:	4604      	mov	r4, r0
 802bc32:	e9c0 3300 	strd	r3, r3, [r0]
 802bc36:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802bc3a:	6083      	str	r3, [r0, #8]
 802bc3c:	8181      	strh	r1, [r0, #12]
 802bc3e:	6643      	str	r3, [r0, #100]	; 0x64
 802bc40:	81c2      	strh	r2, [r0, #14]
 802bc42:	6183      	str	r3, [r0, #24]
 802bc44:	4619      	mov	r1, r3
 802bc46:	2208      	movs	r2, #8
 802bc48:	305c      	adds	r0, #92	; 0x5c
 802bc4a:	f000 f906 	bl	802be5a <memset>
 802bc4e:	4b0d      	ldr	r3, [pc, #52]	; (802bc84 <std+0x58>)
 802bc50:	6263      	str	r3, [r4, #36]	; 0x24
 802bc52:	4b0d      	ldr	r3, [pc, #52]	; (802bc88 <std+0x5c>)
 802bc54:	62a3      	str	r3, [r4, #40]	; 0x28
 802bc56:	4b0d      	ldr	r3, [pc, #52]	; (802bc8c <std+0x60>)
 802bc58:	62e3      	str	r3, [r4, #44]	; 0x2c
 802bc5a:	4b0d      	ldr	r3, [pc, #52]	; (802bc90 <std+0x64>)
 802bc5c:	6323      	str	r3, [r4, #48]	; 0x30
 802bc5e:	4b0d      	ldr	r3, [pc, #52]	; (802bc94 <std+0x68>)
 802bc60:	6224      	str	r4, [r4, #32]
 802bc62:	429c      	cmp	r4, r3
 802bc64:	d006      	beq.n	802bc74 <std+0x48>
 802bc66:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802bc6a:	4294      	cmp	r4, r2
 802bc6c:	d002      	beq.n	802bc74 <std+0x48>
 802bc6e:	33d0      	adds	r3, #208	; 0xd0
 802bc70:	429c      	cmp	r4, r3
 802bc72:	d105      	bne.n	802bc80 <std+0x54>
 802bc74:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802bc78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bc7c:	f000 ba10 	b.w	802c0a0 <__retarget_lock_init_recursive>
 802bc80:	bd10      	pop	{r4, pc}
 802bc82:	bf00      	nop
 802bc84:	0802bdd5 	.word	0x0802bdd5
 802bc88:	0802bdf7 	.word	0x0802bdf7
 802bc8c:	0802be2f 	.word	0x0802be2f
 802bc90:	0802be53 	.word	0x0802be53
 802bc94:	20014190 	.word	0x20014190

0802bc98 <stdio_exit_handler>:
 802bc98:	4a02      	ldr	r2, [pc, #8]	; (802bca4 <stdio_exit_handler+0xc>)
 802bc9a:	4903      	ldr	r1, [pc, #12]	; (802bca8 <stdio_exit_handler+0x10>)
 802bc9c:	4803      	ldr	r0, [pc, #12]	; (802bcac <stdio_exit_handler+0x14>)
 802bc9e:	f000 b87b 	b.w	802bd98 <_fwalk_sglue>
 802bca2:	bf00      	nop
 802bca4:	20000108 	.word	0x20000108
 802bca8:	0802c8cd 	.word	0x0802c8cd
 802bcac:	20000114 	.word	0x20000114

0802bcb0 <cleanup_stdio>:
 802bcb0:	6841      	ldr	r1, [r0, #4]
 802bcb2:	4b0c      	ldr	r3, [pc, #48]	; (802bce4 <cleanup_stdio+0x34>)
 802bcb4:	4299      	cmp	r1, r3
 802bcb6:	b510      	push	{r4, lr}
 802bcb8:	4604      	mov	r4, r0
 802bcba:	d001      	beq.n	802bcc0 <cleanup_stdio+0x10>
 802bcbc:	f000 fe06 	bl	802c8cc <_fflush_r>
 802bcc0:	68a1      	ldr	r1, [r4, #8]
 802bcc2:	4b09      	ldr	r3, [pc, #36]	; (802bce8 <cleanup_stdio+0x38>)
 802bcc4:	4299      	cmp	r1, r3
 802bcc6:	d002      	beq.n	802bcce <cleanup_stdio+0x1e>
 802bcc8:	4620      	mov	r0, r4
 802bcca:	f000 fdff 	bl	802c8cc <_fflush_r>
 802bcce:	68e1      	ldr	r1, [r4, #12]
 802bcd0:	4b06      	ldr	r3, [pc, #24]	; (802bcec <cleanup_stdio+0x3c>)
 802bcd2:	4299      	cmp	r1, r3
 802bcd4:	d004      	beq.n	802bce0 <cleanup_stdio+0x30>
 802bcd6:	4620      	mov	r0, r4
 802bcd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bcdc:	f000 bdf6 	b.w	802c8cc <_fflush_r>
 802bce0:	bd10      	pop	{r4, pc}
 802bce2:	bf00      	nop
 802bce4:	20014190 	.word	0x20014190
 802bce8:	200141f8 	.word	0x200141f8
 802bcec:	20014260 	.word	0x20014260

0802bcf0 <global_stdio_init.part.0>:
 802bcf0:	b510      	push	{r4, lr}
 802bcf2:	4b0b      	ldr	r3, [pc, #44]	; (802bd20 <global_stdio_init.part.0+0x30>)
 802bcf4:	4c0b      	ldr	r4, [pc, #44]	; (802bd24 <global_stdio_init.part.0+0x34>)
 802bcf6:	4a0c      	ldr	r2, [pc, #48]	; (802bd28 <global_stdio_init.part.0+0x38>)
 802bcf8:	601a      	str	r2, [r3, #0]
 802bcfa:	4620      	mov	r0, r4
 802bcfc:	2200      	movs	r2, #0
 802bcfe:	2104      	movs	r1, #4
 802bd00:	f7ff ff94 	bl	802bc2c <std>
 802bd04:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802bd08:	2201      	movs	r2, #1
 802bd0a:	2109      	movs	r1, #9
 802bd0c:	f7ff ff8e 	bl	802bc2c <std>
 802bd10:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802bd14:	2202      	movs	r2, #2
 802bd16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bd1a:	2112      	movs	r1, #18
 802bd1c:	f7ff bf86 	b.w	802bc2c <std>
 802bd20:	200142c8 	.word	0x200142c8
 802bd24:	20014190 	.word	0x20014190
 802bd28:	0802bc99 	.word	0x0802bc99

0802bd2c <__sfp_lock_acquire>:
 802bd2c:	4801      	ldr	r0, [pc, #4]	; (802bd34 <__sfp_lock_acquire+0x8>)
 802bd2e:	f000 b9b8 	b.w	802c0a2 <__retarget_lock_acquire_recursive>
 802bd32:	bf00      	nop
 802bd34:	200142d2 	.word	0x200142d2

0802bd38 <__sfp_lock_release>:
 802bd38:	4801      	ldr	r0, [pc, #4]	; (802bd40 <__sfp_lock_release+0x8>)
 802bd3a:	f000 b9b3 	b.w	802c0a4 <__retarget_lock_release_recursive>
 802bd3e:	bf00      	nop
 802bd40:	200142d2 	.word	0x200142d2

0802bd44 <__sinit>:
 802bd44:	b510      	push	{r4, lr}
 802bd46:	4604      	mov	r4, r0
 802bd48:	f7ff fff0 	bl	802bd2c <__sfp_lock_acquire>
 802bd4c:	6a23      	ldr	r3, [r4, #32]
 802bd4e:	b11b      	cbz	r3, 802bd58 <__sinit+0x14>
 802bd50:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802bd54:	f7ff bff0 	b.w	802bd38 <__sfp_lock_release>
 802bd58:	4b04      	ldr	r3, [pc, #16]	; (802bd6c <__sinit+0x28>)
 802bd5a:	6223      	str	r3, [r4, #32]
 802bd5c:	4b04      	ldr	r3, [pc, #16]	; (802bd70 <__sinit+0x2c>)
 802bd5e:	681b      	ldr	r3, [r3, #0]
 802bd60:	2b00      	cmp	r3, #0
 802bd62:	d1f5      	bne.n	802bd50 <__sinit+0xc>
 802bd64:	f7ff ffc4 	bl	802bcf0 <global_stdio_init.part.0>
 802bd68:	e7f2      	b.n	802bd50 <__sinit+0xc>
 802bd6a:	bf00      	nop
 802bd6c:	0802bcb1 	.word	0x0802bcb1
 802bd70:	200142c8 	.word	0x200142c8

0802bd74 <fiprintf>:
 802bd74:	b40e      	push	{r1, r2, r3}
 802bd76:	b503      	push	{r0, r1, lr}
 802bd78:	4601      	mov	r1, r0
 802bd7a:	ab03      	add	r3, sp, #12
 802bd7c:	4805      	ldr	r0, [pc, #20]	; (802bd94 <fiprintf+0x20>)
 802bd7e:	f853 2b04 	ldr.w	r2, [r3], #4
 802bd82:	6800      	ldr	r0, [r0, #0]
 802bd84:	9301      	str	r3, [sp, #4]
 802bd86:	f000 fa71 	bl	802c26c <_vfiprintf_r>
 802bd8a:	b002      	add	sp, #8
 802bd8c:	f85d eb04 	ldr.w	lr, [sp], #4
 802bd90:	b003      	add	sp, #12
 802bd92:	4770      	bx	lr
 802bd94:	20000160 	.word	0x20000160

0802bd98 <_fwalk_sglue>:
 802bd98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802bd9c:	4607      	mov	r7, r0
 802bd9e:	4688      	mov	r8, r1
 802bda0:	4614      	mov	r4, r2
 802bda2:	2600      	movs	r6, #0
 802bda4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802bda8:	f1b9 0901 	subs.w	r9, r9, #1
 802bdac:	d505      	bpl.n	802bdba <_fwalk_sglue+0x22>
 802bdae:	6824      	ldr	r4, [r4, #0]
 802bdb0:	2c00      	cmp	r4, #0
 802bdb2:	d1f7      	bne.n	802bda4 <_fwalk_sglue+0xc>
 802bdb4:	4630      	mov	r0, r6
 802bdb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bdba:	89ab      	ldrh	r3, [r5, #12]
 802bdbc:	2b01      	cmp	r3, #1
 802bdbe:	d907      	bls.n	802bdd0 <_fwalk_sglue+0x38>
 802bdc0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802bdc4:	3301      	adds	r3, #1
 802bdc6:	d003      	beq.n	802bdd0 <_fwalk_sglue+0x38>
 802bdc8:	4629      	mov	r1, r5
 802bdca:	4638      	mov	r0, r7
 802bdcc:	47c0      	blx	r8
 802bdce:	4306      	orrs	r6, r0
 802bdd0:	3568      	adds	r5, #104	; 0x68
 802bdd2:	e7e9      	b.n	802bda8 <_fwalk_sglue+0x10>

0802bdd4 <__sread>:
 802bdd4:	b510      	push	{r4, lr}
 802bdd6:	460c      	mov	r4, r1
 802bdd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802bddc:	f000 f8ee 	bl	802bfbc <_read_r>
 802bde0:	2800      	cmp	r0, #0
 802bde2:	bfab      	itete	ge
 802bde4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802bde6:	89a3      	ldrhlt	r3, [r4, #12]
 802bde8:	181b      	addge	r3, r3, r0
 802bdea:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802bdee:	bfac      	ite	ge
 802bdf0:	6563      	strge	r3, [r4, #84]	; 0x54
 802bdf2:	81a3      	strhlt	r3, [r4, #12]
 802bdf4:	bd10      	pop	{r4, pc}

0802bdf6 <__swrite>:
 802bdf6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802bdfa:	461f      	mov	r7, r3
 802bdfc:	898b      	ldrh	r3, [r1, #12]
 802bdfe:	05db      	lsls	r3, r3, #23
 802be00:	4605      	mov	r5, r0
 802be02:	460c      	mov	r4, r1
 802be04:	4616      	mov	r6, r2
 802be06:	d505      	bpl.n	802be14 <__swrite+0x1e>
 802be08:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802be0c:	2302      	movs	r3, #2
 802be0e:	2200      	movs	r2, #0
 802be10:	f000 f8c2 	bl	802bf98 <_lseek_r>
 802be14:	89a3      	ldrh	r3, [r4, #12]
 802be16:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802be1a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802be1e:	81a3      	strh	r3, [r4, #12]
 802be20:	4632      	mov	r2, r6
 802be22:	463b      	mov	r3, r7
 802be24:	4628      	mov	r0, r5
 802be26:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802be2a:	f000 b8fd 	b.w	802c028 <_write_r>

0802be2e <__sseek>:
 802be2e:	b510      	push	{r4, lr}
 802be30:	460c      	mov	r4, r1
 802be32:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802be36:	f000 f8af 	bl	802bf98 <_lseek_r>
 802be3a:	1c43      	adds	r3, r0, #1
 802be3c:	89a3      	ldrh	r3, [r4, #12]
 802be3e:	bf15      	itete	ne
 802be40:	6560      	strne	r0, [r4, #84]	; 0x54
 802be42:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802be46:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802be4a:	81a3      	strheq	r3, [r4, #12]
 802be4c:	bf18      	it	ne
 802be4e:	81a3      	strhne	r3, [r4, #12]
 802be50:	bd10      	pop	{r4, pc}

0802be52 <__sclose>:
 802be52:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802be56:	f000 b839 	b.w	802becc <_close_r>

0802be5a <memset>:
 802be5a:	4402      	add	r2, r0
 802be5c:	4603      	mov	r3, r0
 802be5e:	4293      	cmp	r3, r2
 802be60:	d100      	bne.n	802be64 <memset+0xa>
 802be62:	4770      	bx	lr
 802be64:	f803 1b01 	strb.w	r1, [r3], #1
 802be68:	e7f9      	b.n	802be5e <memset+0x4>

0802be6a <_raise_r>:
 802be6a:	291f      	cmp	r1, #31
 802be6c:	b538      	push	{r3, r4, r5, lr}
 802be6e:	4604      	mov	r4, r0
 802be70:	460d      	mov	r5, r1
 802be72:	d904      	bls.n	802be7e <_raise_r+0x14>
 802be74:	2316      	movs	r3, #22
 802be76:	6003      	str	r3, [r0, #0]
 802be78:	f04f 30ff 	mov.w	r0, #4294967295
 802be7c:	bd38      	pop	{r3, r4, r5, pc}
 802be7e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802be80:	b112      	cbz	r2, 802be88 <_raise_r+0x1e>
 802be82:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802be86:	b94b      	cbnz	r3, 802be9c <_raise_r+0x32>
 802be88:	4620      	mov	r0, r4
 802be8a:	f000 f8bb 	bl	802c004 <_getpid_r>
 802be8e:	462a      	mov	r2, r5
 802be90:	4601      	mov	r1, r0
 802be92:	4620      	mov	r0, r4
 802be94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802be98:	f000 b8a2 	b.w	802bfe0 <_kill_r>
 802be9c:	2b01      	cmp	r3, #1
 802be9e:	d00a      	beq.n	802beb6 <_raise_r+0x4c>
 802bea0:	1c59      	adds	r1, r3, #1
 802bea2:	d103      	bne.n	802beac <_raise_r+0x42>
 802bea4:	2316      	movs	r3, #22
 802bea6:	6003      	str	r3, [r0, #0]
 802bea8:	2001      	movs	r0, #1
 802beaa:	e7e7      	b.n	802be7c <_raise_r+0x12>
 802beac:	2400      	movs	r4, #0
 802beae:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802beb2:	4628      	mov	r0, r5
 802beb4:	4798      	blx	r3
 802beb6:	2000      	movs	r0, #0
 802beb8:	e7e0      	b.n	802be7c <_raise_r+0x12>
	...

0802bebc <raise>:
 802bebc:	4b02      	ldr	r3, [pc, #8]	; (802bec8 <raise+0xc>)
 802bebe:	4601      	mov	r1, r0
 802bec0:	6818      	ldr	r0, [r3, #0]
 802bec2:	f7ff bfd2 	b.w	802be6a <_raise_r>
 802bec6:	bf00      	nop
 802bec8:	20000160 	.word	0x20000160

0802becc <_close_r>:
 802becc:	b538      	push	{r3, r4, r5, lr}
 802bece:	4d06      	ldr	r5, [pc, #24]	; (802bee8 <_close_r+0x1c>)
 802bed0:	2300      	movs	r3, #0
 802bed2:	4604      	mov	r4, r0
 802bed4:	4608      	mov	r0, r1
 802bed6:	602b      	str	r3, [r5, #0]
 802bed8:	f7d5 fecc 	bl	8001c74 <_close>
 802bedc:	1c43      	adds	r3, r0, #1
 802bede:	d102      	bne.n	802bee6 <_close_r+0x1a>
 802bee0:	682b      	ldr	r3, [r5, #0]
 802bee2:	b103      	cbz	r3, 802bee6 <_close_r+0x1a>
 802bee4:	6023      	str	r3, [r4, #0]
 802bee6:	bd38      	pop	{r3, r4, r5, pc}
 802bee8:	200142cc 	.word	0x200142cc

0802beec <_reclaim_reent>:
 802beec:	4b29      	ldr	r3, [pc, #164]	; (802bf94 <_reclaim_reent+0xa8>)
 802beee:	681b      	ldr	r3, [r3, #0]
 802bef0:	4283      	cmp	r3, r0
 802bef2:	b570      	push	{r4, r5, r6, lr}
 802bef4:	4604      	mov	r4, r0
 802bef6:	d04b      	beq.n	802bf90 <_reclaim_reent+0xa4>
 802bef8:	69c3      	ldr	r3, [r0, #28]
 802befa:	b143      	cbz	r3, 802bf0e <_reclaim_reent+0x22>
 802befc:	68db      	ldr	r3, [r3, #12]
 802befe:	2b00      	cmp	r3, #0
 802bf00:	d144      	bne.n	802bf8c <_reclaim_reent+0xa0>
 802bf02:	69e3      	ldr	r3, [r4, #28]
 802bf04:	6819      	ldr	r1, [r3, #0]
 802bf06:	b111      	cbz	r1, 802bf0e <_reclaim_reent+0x22>
 802bf08:	4620      	mov	r0, r4
 802bf0a:	f000 f939 	bl	802c180 <_free_r>
 802bf0e:	6961      	ldr	r1, [r4, #20]
 802bf10:	b111      	cbz	r1, 802bf18 <_reclaim_reent+0x2c>
 802bf12:	4620      	mov	r0, r4
 802bf14:	f000 f934 	bl	802c180 <_free_r>
 802bf18:	69e1      	ldr	r1, [r4, #28]
 802bf1a:	b111      	cbz	r1, 802bf22 <_reclaim_reent+0x36>
 802bf1c:	4620      	mov	r0, r4
 802bf1e:	f000 f92f 	bl	802c180 <_free_r>
 802bf22:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802bf24:	b111      	cbz	r1, 802bf2c <_reclaim_reent+0x40>
 802bf26:	4620      	mov	r0, r4
 802bf28:	f000 f92a 	bl	802c180 <_free_r>
 802bf2c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802bf2e:	b111      	cbz	r1, 802bf36 <_reclaim_reent+0x4a>
 802bf30:	4620      	mov	r0, r4
 802bf32:	f000 f925 	bl	802c180 <_free_r>
 802bf36:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802bf38:	b111      	cbz	r1, 802bf40 <_reclaim_reent+0x54>
 802bf3a:	4620      	mov	r0, r4
 802bf3c:	f000 f920 	bl	802c180 <_free_r>
 802bf40:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802bf42:	b111      	cbz	r1, 802bf4a <_reclaim_reent+0x5e>
 802bf44:	4620      	mov	r0, r4
 802bf46:	f000 f91b 	bl	802c180 <_free_r>
 802bf4a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802bf4c:	b111      	cbz	r1, 802bf54 <_reclaim_reent+0x68>
 802bf4e:	4620      	mov	r0, r4
 802bf50:	f000 f916 	bl	802c180 <_free_r>
 802bf54:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802bf56:	b111      	cbz	r1, 802bf5e <_reclaim_reent+0x72>
 802bf58:	4620      	mov	r0, r4
 802bf5a:	f000 f911 	bl	802c180 <_free_r>
 802bf5e:	6a23      	ldr	r3, [r4, #32]
 802bf60:	b1b3      	cbz	r3, 802bf90 <_reclaim_reent+0xa4>
 802bf62:	4620      	mov	r0, r4
 802bf64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802bf68:	4718      	bx	r3
 802bf6a:	5949      	ldr	r1, [r1, r5]
 802bf6c:	b941      	cbnz	r1, 802bf80 <_reclaim_reent+0x94>
 802bf6e:	3504      	adds	r5, #4
 802bf70:	69e3      	ldr	r3, [r4, #28]
 802bf72:	2d80      	cmp	r5, #128	; 0x80
 802bf74:	68d9      	ldr	r1, [r3, #12]
 802bf76:	d1f8      	bne.n	802bf6a <_reclaim_reent+0x7e>
 802bf78:	4620      	mov	r0, r4
 802bf7a:	f000 f901 	bl	802c180 <_free_r>
 802bf7e:	e7c0      	b.n	802bf02 <_reclaim_reent+0x16>
 802bf80:	680e      	ldr	r6, [r1, #0]
 802bf82:	4620      	mov	r0, r4
 802bf84:	f000 f8fc 	bl	802c180 <_free_r>
 802bf88:	4631      	mov	r1, r6
 802bf8a:	e7ef      	b.n	802bf6c <_reclaim_reent+0x80>
 802bf8c:	2500      	movs	r5, #0
 802bf8e:	e7ef      	b.n	802bf70 <_reclaim_reent+0x84>
 802bf90:	bd70      	pop	{r4, r5, r6, pc}
 802bf92:	bf00      	nop
 802bf94:	20000160 	.word	0x20000160

0802bf98 <_lseek_r>:
 802bf98:	b538      	push	{r3, r4, r5, lr}
 802bf9a:	4d07      	ldr	r5, [pc, #28]	; (802bfb8 <_lseek_r+0x20>)
 802bf9c:	4604      	mov	r4, r0
 802bf9e:	4608      	mov	r0, r1
 802bfa0:	4611      	mov	r1, r2
 802bfa2:	2200      	movs	r2, #0
 802bfa4:	602a      	str	r2, [r5, #0]
 802bfa6:	461a      	mov	r2, r3
 802bfa8:	f7d5 fe70 	bl	8001c8c <_lseek>
 802bfac:	1c43      	adds	r3, r0, #1
 802bfae:	d102      	bne.n	802bfb6 <_lseek_r+0x1e>
 802bfb0:	682b      	ldr	r3, [r5, #0]
 802bfb2:	b103      	cbz	r3, 802bfb6 <_lseek_r+0x1e>
 802bfb4:	6023      	str	r3, [r4, #0]
 802bfb6:	bd38      	pop	{r3, r4, r5, pc}
 802bfb8:	200142cc 	.word	0x200142cc

0802bfbc <_read_r>:
 802bfbc:	b538      	push	{r3, r4, r5, lr}
 802bfbe:	4d07      	ldr	r5, [pc, #28]	; (802bfdc <_read_r+0x20>)
 802bfc0:	4604      	mov	r4, r0
 802bfc2:	4608      	mov	r0, r1
 802bfc4:	4611      	mov	r1, r2
 802bfc6:	2200      	movs	r2, #0
 802bfc8:	602a      	str	r2, [r5, #0]
 802bfca:	461a      	mov	r2, r3
 802bfcc:	f7d5 fe36 	bl	8001c3c <_read>
 802bfd0:	1c43      	adds	r3, r0, #1
 802bfd2:	d102      	bne.n	802bfda <_read_r+0x1e>
 802bfd4:	682b      	ldr	r3, [r5, #0]
 802bfd6:	b103      	cbz	r3, 802bfda <_read_r+0x1e>
 802bfd8:	6023      	str	r3, [r4, #0]
 802bfda:	bd38      	pop	{r3, r4, r5, pc}
 802bfdc:	200142cc 	.word	0x200142cc

0802bfe0 <_kill_r>:
 802bfe0:	b538      	push	{r3, r4, r5, lr}
 802bfe2:	4d07      	ldr	r5, [pc, #28]	; (802c000 <_kill_r+0x20>)
 802bfe4:	2300      	movs	r3, #0
 802bfe6:	4604      	mov	r4, r0
 802bfe8:	4608      	mov	r0, r1
 802bfea:	4611      	mov	r1, r2
 802bfec:	602b      	str	r3, [r5, #0]
 802bfee:	f7d5 fe17 	bl	8001c20 <_kill>
 802bff2:	1c43      	adds	r3, r0, #1
 802bff4:	d102      	bne.n	802bffc <_kill_r+0x1c>
 802bff6:	682b      	ldr	r3, [r5, #0]
 802bff8:	b103      	cbz	r3, 802bffc <_kill_r+0x1c>
 802bffa:	6023      	str	r3, [r4, #0]
 802bffc:	bd38      	pop	{r3, r4, r5, pc}
 802bffe:	bf00      	nop
 802c000:	200142cc 	.word	0x200142cc

0802c004 <_getpid_r>:
 802c004:	f7d5 be0a 	b.w	8001c1c <_getpid>

0802c008 <_sbrk_r>:
 802c008:	b538      	push	{r3, r4, r5, lr}
 802c00a:	4d06      	ldr	r5, [pc, #24]	; (802c024 <_sbrk_r+0x1c>)
 802c00c:	2300      	movs	r3, #0
 802c00e:	4604      	mov	r4, r0
 802c010:	4608      	mov	r0, r1
 802c012:	602b      	str	r3, [r5, #0]
 802c014:	f7d5 fe3c 	bl	8001c90 <_sbrk>
 802c018:	1c43      	adds	r3, r0, #1
 802c01a:	d102      	bne.n	802c022 <_sbrk_r+0x1a>
 802c01c:	682b      	ldr	r3, [r5, #0]
 802c01e:	b103      	cbz	r3, 802c022 <_sbrk_r+0x1a>
 802c020:	6023      	str	r3, [r4, #0]
 802c022:	bd38      	pop	{r3, r4, r5, pc}
 802c024:	200142cc 	.word	0x200142cc

0802c028 <_write_r>:
 802c028:	b538      	push	{r3, r4, r5, lr}
 802c02a:	4d07      	ldr	r5, [pc, #28]	; (802c048 <_write_r+0x20>)
 802c02c:	4604      	mov	r4, r0
 802c02e:	4608      	mov	r0, r1
 802c030:	4611      	mov	r1, r2
 802c032:	2200      	movs	r2, #0
 802c034:	602a      	str	r2, [r5, #0]
 802c036:	461a      	mov	r2, r3
 802c038:	f7d5 fe0e 	bl	8001c58 <_write>
 802c03c:	1c43      	adds	r3, r0, #1
 802c03e:	d102      	bne.n	802c046 <_write_r+0x1e>
 802c040:	682b      	ldr	r3, [r5, #0]
 802c042:	b103      	cbz	r3, 802c046 <_write_r+0x1e>
 802c044:	6023      	str	r3, [r4, #0]
 802c046:	bd38      	pop	{r3, r4, r5, pc}
 802c048:	200142cc 	.word	0x200142cc

0802c04c <__errno>:
 802c04c:	4b01      	ldr	r3, [pc, #4]	; (802c054 <__errno+0x8>)
 802c04e:	6818      	ldr	r0, [r3, #0]
 802c050:	4770      	bx	lr
 802c052:	bf00      	nop
 802c054:	20000160 	.word	0x20000160

0802c058 <__libc_init_array>:
 802c058:	b570      	push	{r4, r5, r6, lr}
 802c05a:	4d0d      	ldr	r5, [pc, #52]	; (802c090 <__libc_init_array+0x38>)
 802c05c:	4c0d      	ldr	r4, [pc, #52]	; (802c094 <__libc_init_array+0x3c>)
 802c05e:	1b64      	subs	r4, r4, r5
 802c060:	10a4      	asrs	r4, r4, #2
 802c062:	2600      	movs	r6, #0
 802c064:	42a6      	cmp	r6, r4
 802c066:	d109      	bne.n	802c07c <__libc_init_array+0x24>
 802c068:	4d0b      	ldr	r5, [pc, #44]	; (802c098 <__libc_init_array+0x40>)
 802c06a:	4c0c      	ldr	r4, [pc, #48]	; (802c09c <__libc_init_array+0x44>)
 802c06c:	f000 fd70 	bl	802cb50 <_init>
 802c070:	1b64      	subs	r4, r4, r5
 802c072:	10a4      	asrs	r4, r4, #2
 802c074:	2600      	movs	r6, #0
 802c076:	42a6      	cmp	r6, r4
 802c078:	d105      	bne.n	802c086 <__libc_init_array+0x2e>
 802c07a:	bd70      	pop	{r4, r5, r6, pc}
 802c07c:	f855 3b04 	ldr.w	r3, [r5], #4
 802c080:	4798      	blx	r3
 802c082:	3601      	adds	r6, #1
 802c084:	e7ee      	b.n	802c064 <__libc_init_array+0xc>
 802c086:	f855 3b04 	ldr.w	r3, [r5], #4
 802c08a:	4798      	blx	r3
 802c08c:	3601      	adds	r6, #1
 802c08e:	e7f2      	b.n	802c076 <__libc_init_array+0x1e>
 802c090:	080cd3c8 	.word	0x080cd3c8
 802c094:	080cd3c8 	.word	0x080cd3c8
 802c098:	080cd3c8 	.word	0x080cd3c8
 802c09c:	080cd3dc 	.word	0x080cd3dc

0802c0a0 <__retarget_lock_init_recursive>:
 802c0a0:	4770      	bx	lr

0802c0a2 <__retarget_lock_acquire_recursive>:
 802c0a2:	4770      	bx	lr

0802c0a4 <__retarget_lock_release_recursive>:
 802c0a4:	4770      	bx	lr

0802c0a6 <memcpy>:
 802c0a6:	440a      	add	r2, r1
 802c0a8:	4291      	cmp	r1, r2
 802c0aa:	f100 33ff 	add.w	r3, r0, #4294967295
 802c0ae:	d100      	bne.n	802c0b2 <memcpy+0xc>
 802c0b0:	4770      	bx	lr
 802c0b2:	b510      	push	{r4, lr}
 802c0b4:	f811 4b01 	ldrb.w	r4, [r1], #1
 802c0b8:	f803 4f01 	strb.w	r4, [r3, #1]!
 802c0bc:	4291      	cmp	r1, r2
 802c0be:	d1f9      	bne.n	802c0b4 <memcpy+0xe>
 802c0c0:	bd10      	pop	{r4, pc}
	...

0802c0c4 <__register_exitproc>:
 802c0c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802c0c8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802c17c <__register_exitproc+0xb8>
 802c0cc:	4606      	mov	r6, r0
 802c0ce:	f8d8 0000 	ldr.w	r0, [r8]
 802c0d2:	461f      	mov	r7, r3
 802c0d4:	460d      	mov	r5, r1
 802c0d6:	4691      	mov	r9, r2
 802c0d8:	f7ff ffe3 	bl	802c0a2 <__retarget_lock_acquire_recursive>
 802c0dc:	4b23      	ldr	r3, [pc, #140]	; (802c16c <__register_exitproc+0xa8>)
 802c0de:	681c      	ldr	r4, [r3, #0]
 802c0e0:	b934      	cbnz	r4, 802c0f0 <__register_exitproc+0x2c>
 802c0e2:	4c23      	ldr	r4, [pc, #140]	; (802c170 <__register_exitproc+0xac>)
 802c0e4:	601c      	str	r4, [r3, #0]
 802c0e6:	4b23      	ldr	r3, [pc, #140]	; (802c174 <__register_exitproc+0xb0>)
 802c0e8:	b113      	cbz	r3, 802c0f0 <__register_exitproc+0x2c>
 802c0ea:	681b      	ldr	r3, [r3, #0]
 802c0ec:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802c0f0:	6863      	ldr	r3, [r4, #4]
 802c0f2:	2b1f      	cmp	r3, #31
 802c0f4:	dd07      	ble.n	802c106 <__register_exitproc+0x42>
 802c0f6:	f8d8 0000 	ldr.w	r0, [r8]
 802c0fa:	f7ff ffd3 	bl	802c0a4 <__retarget_lock_release_recursive>
 802c0fe:	f04f 30ff 	mov.w	r0, #4294967295
 802c102:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802c106:	b32e      	cbz	r6, 802c154 <__register_exitproc+0x90>
 802c108:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802c10c:	b968      	cbnz	r0, 802c12a <__register_exitproc+0x66>
 802c10e:	4b1a      	ldr	r3, [pc, #104]	; (802c178 <__register_exitproc+0xb4>)
 802c110:	2b00      	cmp	r3, #0
 802c112:	d0f0      	beq.n	802c0f6 <__register_exitproc+0x32>
 802c114:	f44f 7084 	mov.w	r0, #264	; 0x108
 802c118:	f7ff fcbe 	bl	802ba98 <malloc>
 802c11c:	2800      	cmp	r0, #0
 802c11e:	d0ea      	beq.n	802c0f6 <__register_exitproc+0x32>
 802c120:	2300      	movs	r3, #0
 802c122:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802c126:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802c12a:	6863      	ldr	r3, [r4, #4]
 802c12c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802c130:	2201      	movs	r2, #1
 802c132:	409a      	lsls	r2, r3
 802c134:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802c138:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802c13c:	4313      	orrs	r3, r2
 802c13e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802c142:	2e02      	cmp	r6, #2
 802c144:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802c148:	bf02      	ittt	eq
 802c14a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802c14e:	4313      	orreq	r3, r2
 802c150:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802c154:	6863      	ldr	r3, [r4, #4]
 802c156:	f8d8 0000 	ldr.w	r0, [r8]
 802c15a:	1c5a      	adds	r2, r3, #1
 802c15c:	3302      	adds	r3, #2
 802c15e:	6062      	str	r2, [r4, #4]
 802c160:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802c164:	f7ff ff9e 	bl	802c0a4 <__retarget_lock_release_recursive>
 802c168:	2000      	movs	r0, #0
 802c16a:	e7ca      	b.n	802c102 <__register_exitproc+0x3e>
 802c16c:	20014360 	.word	0x20014360
 802c170:	200142d4 	.word	0x200142d4
 802c174:	08043cd4 	.word	0x08043cd4
 802c178:	0802ba99 	.word	0x0802ba99
 802c17c:	20000164 	.word	0x20000164

0802c180 <_free_r>:
 802c180:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802c182:	2900      	cmp	r1, #0
 802c184:	d044      	beq.n	802c210 <_free_r+0x90>
 802c186:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802c18a:	9001      	str	r0, [sp, #4]
 802c18c:	2b00      	cmp	r3, #0
 802c18e:	f1a1 0404 	sub.w	r4, r1, #4
 802c192:	bfb8      	it	lt
 802c194:	18e4      	addlt	r4, r4, r3
 802c196:	f7ff fd2f 	bl	802bbf8 <__malloc_lock>
 802c19a:	4a1e      	ldr	r2, [pc, #120]	; (802c214 <_free_r+0x94>)
 802c19c:	9801      	ldr	r0, [sp, #4]
 802c19e:	6813      	ldr	r3, [r2, #0]
 802c1a0:	b933      	cbnz	r3, 802c1b0 <_free_r+0x30>
 802c1a2:	6063      	str	r3, [r4, #4]
 802c1a4:	6014      	str	r4, [r2, #0]
 802c1a6:	b003      	add	sp, #12
 802c1a8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802c1ac:	f7ff bd2a 	b.w	802bc04 <__malloc_unlock>
 802c1b0:	42a3      	cmp	r3, r4
 802c1b2:	d908      	bls.n	802c1c6 <_free_r+0x46>
 802c1b4:	6825      	ldr	r5, [r4, #0]
 802c1b6:	1961      	adds	r1, r4, r5
 802c1b8:	428b      	cmp	r3, r1
 802c1ba:	bf01      	itttt	eq
 802c1bc:	6819      	ldreq	r1, [r3, #0]
 802c1be:	685b      	ldreq	r3, [r3, #4]
 802c1c0:	1949      	addeq	r1, r1, r5
 802c1c2:	6021      	streq	r1, [r4, #0]
 802c1c4:	e7ed      	b.n	802c1a2 <_free_r+0x22>
 802c1c6:	461a      	mov	r2, r3
 802c1c8:	685b      	ldr	r3, [r3, #4]
 802c1ca:	b10b      	cbz	r3, 802c1d0 <_free_r+0x50>
 802c1cc:	42a3      	cmp	r3, r4
 802c1ce:	d9fa      	bls.n	802c1c6 <_free_r+0x46>
 802c1d0:	6811      	ldr	r1, [r2, #0]
 802c1d2:	1855      	adds	r5, r2, r1
 802c1d4:	42a5      	cmp	r5, r4
 802c1d6:	d10b      	bne.n	802c1f0 <_free_r+0x70>
 802c1d8:	6824      	ldr	r4, [r4, #0]
 802c1da:	4421      	add	r1, r4
 802c1dc:	1854      	adds	r4, r2, r1
 802c1de:	42a3      	cmp	r3, r4
 802c1e0:	6011      	str	r1, [r2, #0]
 802c1e2:	d1e0      	bne.n	802c1a6 <_free_r+0x26>
 802c1e4:	681c      	ldr	r4, [r3, #0]
 802c1e6:	685b      	ldr	r3, [r3, #4]
 802c1e8:	6053      	str	r3, [r2, #4]
 802c1ea:	440c      	add	r4, r1
 802c1ec:	6014      	str	r4, [r2, #0]
 802c1ee:	e7da      	b.n	802c1a6 <_free_r+0x26>
 802c1f0:	d902      	bls.n	802c1f8 <_free_r+0x78>
 802c1f2:	230c      	movs	r3, #12
 802c1f4:	6003      	str	r3, [r0, #0]
 802c1f6:	e7d6      	b.n	802c1a6 <_free_r+0x26>
 802c1f8:	6825      	ldr	r5, [r4, #0]
 802c1fa:	1961      	adds	r1, r4, r5
 802c1fc:	428b      	cmp	r3, r1
 802c1fe:	bf04      	itt	eq
 802c200:	6819      	ldreq	r1, [r3, #0]
 802c202:	685b      	ldreq	r3, [r3, #4]
 802c204:	6063      	str	r3, [r4, #4]
 802c206:	bf04      	itt	eq
 802c208:	1949      	addeq	r1, r1, r5
 802c20a:	6021      	streq	r1, [r4, #0]
 802c20c:	6054      	str	r4, [r2, #4]
 802c20e:	e7ca      	b.n	802c1a6 <_free_r+0x26>
 802c210:	b003      	add	sp, #12
 802c212:	bd30      	pop	{r4, r5, pc}
 802c214:	20014188 	.word	0x20014188

0802c218 <__sfputc_r>:
 802c218:	6893      	ldr	r3, [r2, #8]
 802c21a:	3b01      	subs	r3, #1
 802c21c:	2b00      	cmp	r3, #0
 802c21e:	b410      	push	{r4}
 802c220:	6093      	str	r3, [r2, #8]
 802c222:	da08      	bge.n	802c236 <__sfputc_r+0x1e>
 802c224:	6994      	ldr	r4, [r2, #24]
 802c226:	42a3      	cmp	r3, r4
 802c228:	db01      	blt.n	802c22e <__sfputc_r+0x16>
 802c22a:	290a      	cmp	r1, #10
 802c22c:	d103      	bne.n	802c236 <__sfputc_r+0x1e>
 802c22e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c232:	f000 bb73 	b.w	802c91c <__swbuf_r>
 802c236:	6813      	ldr	r3, [r2, #0]
 802c238:	1c58      	adds	r0, r3, #1
 802c23a:	6010      	str	r0, [r2, #0]
 802c23c:	7019      	strb	r1, [r3, #0]
 802c23e:	4608      	mov	r0, r1
 802c240:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c244:	4770      	bx	lr

0802c246 <__sfputs_r>:
 802c246:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c248:	4606      	mov	r6, r0
 802c24a:	460f      	mov	r7, r1
 802c24c:	4614      	mov	r4, r2
 802c24e:	18d5      	adds	r5, r2, r3
 802c250:	42ac      	cmp	r4, r5
 802c252:	d101      	bne.n	802c258 <__sfputs_r+0x12>
 802c254:	2000      	movs	r0, #0
 802c256:	e007      	b.n	802c268 <__sfputs_r+0x22>
 802c258:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c25c:	463a      	mov	r2, r7
 802c25e:	4630      	mov	r0, r6
 802c260:	f7ff ffda 	bl	802c218 <__sfputc_r>
 802c264:	1c43      	adds	r3, r0, #1
 802c266:	d1f3      	bne.n	802c250 <__sfputs_r+0xa>
 802c268:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802c26c <_vfiprintf_r>:
 802c26c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c270:	460d      	mov	r5, r1
 802c272:	b09d      	sub	sp, #116	; 0x74
 802c274:	4614      	mov	r4, r2
 802c276:	4698      	mov	r8, r3
 802c278:	4606      	mov	r6, r0
 802c27a:	b118      	cbz	r0, 802c284 <_vfiprintf_r+0x18>
 802c27c:	6a03      	ldr	r3, [r0, #32]
 802c27e:	b90b      	cbnz	r3, 802c284 <_vfiprintf_r+0x18>
 802c280:	f7ff fd60 	bl	802bd44 <__sinit>
 802c284:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c286:	07d9      	lsls	r1, r3, #31
 802c288:	d405      	bmi.n	802c296 <_vfiprintf_r+0x2a>
 802c28a:	89ab      	ldrh	r3, [r5, #12]
 802c28c:	059a      	lsls	r2, r3, #22
 802c28e:	d402      	bmi.n	802c296 <_vfiprintf_r+0x2a>
 802c290:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c292:	f7ff ff06 	bl	802c0a2 <__retarget_lock_acquire_recursive>
 802c296:	89ab      	ldrh	r3, [r5, #12]
 802c298:	071b      	lsls	r3, r3, #28
 802c29a:	d501      	bpl.n	802c2a0 <_vfiprintf_r+0x34>
 802c29c:	692b      	ldr	r3, [r5, #16]
 802c29e:	b99b      	cbnz	r3, 802c2c8 <_vfiprintf_r+0x5c>
 802c2a0:	4629      	mov	r1, r5
 802c2a2:	4630      	mov	r0, r6
 802c2a4:	f000 fb78 	bl	802c998 <__swsetup_r>
 802c2a8:	b170      	cbz	r0, 802c2c8 <_vfiprintf_r+0x5c>
 802c2aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c2ac:	07dc      	lsls	r4, r3, #31
 802c2ae:	d504      	bpl.n	802c2ba <_vfiprintf_r+0x4e>
 802c2b0:	f04f 30ff 	mov.w	r0, #4294967295
 802c2b4:	b01d      	add	sp, #116	; 0x74
 802c2b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c2ba:	89ab      	ldrh	r3, [r5, #12]
 802c2bc:	0598      	lsls	r0, r3, #22
 802c2be:	d4f7      	bmi.n	802c2b0 <_vfiprintf_r+0x44>
 802c2c0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c2c2:	f7ff feef 	bl	802c0a4 <__retarget_lock_release_recursive>
 802c2c6:	e7f3      	b.n	802c2b0 <_vfiprintf_r+0x44>
 802c2c8:	2300      	movs	r3, #0
 802c2ca:	9309      	str	r3, [sp, #36]	; 0x24
 802c2cc:	2320      	movs	r3, #32
 802c2ce:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802c2d2:	f8cd 800c 	str.w	r8, [sp, #12]
 802c2d6:	2330      	movs	r3, #48	; 0x30
 802c2d8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802c48c <_vfiprintf_r+0x220>
 802c2dc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802c2e0:	f04f 0901 	mov.w	r9, #1
 802c2e4:	4623      	mov	r3, r4
 802c2e6:	469a      	mov	sl, r3
 802c2e8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802c2ec:	b10a      	cbz	r2, 802c2f2 <_vfiprintf_r+0x86>
 802c2ee:	2a25      	cmp	r2, #37	; 0x25
 802c2f0:	d1f9      	bne.n	802c2e6 <_vfiprintf_r+0x7a>
 802c2f2:	ebba 0b04 	subs.w	fp, sl, r4
 802c2f6:	d00b      	beq.n	802c310 <_vfiprintf_r+0xa4>
 802c2f8:	465b      	mov	r3, fp
 802c2fa:	4622      	mov	r2, r4
 802c2fc:	4629      	mov	r1, r5
 802c2fe:	4630      	mov	r0, r6
 802c300:	f7ff ffa1 	bl	802c246 <__sfputs_r>
 802c304:	3001      	adds	r0, #1
 802c306:	f000 80a9 	beq.w	802c45c <_vfiprintf_r+0x1f0>
 802c30a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802c30c:	445a      	add	r2, fp
 802c30e:	9209      	str	r2, [sp, #36]	; 0x24
 802c310:	f89a 3000 	ldrb.w	r3, [sl]
 802c314:	2b00      	cmp	r3, #0
 802c316:	f000 80a1 	beq.w	802c45c <_vfiprintf_r+0x1f0>
 802c31a:	2300      	movs	r3, #0
 802c31c:	f04f 32ff 	mov.w	r2, #4294967295
 802c320:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802c324:	f10a 0a01 	add.w	sl, sl, #1
 802c328:	9304      	str	r3, [sp, #16]
 802c32a:	9307      	str	r3, [sp, #28]
 802c32c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802c330:	931a      	str	r3, [sp, #104]	; 0x68
 802c332:	4654      	mov	r4, sl
 802c334:	2205      	movs	r2, #5
 802c336:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c33a:	4854      	ldr	r0, [pc, #336]	; (802c48c <_vfiprintf_r+0x220>)
 802c33c:	f7d3 ffb8 	bl	80002b0 <memchr>
 802c340:	9a04      	ldr	r2, [sp, #16]
 802c342:	b9d8      	cbnz	r0, 802c37c <_vfiprintf_r+0x110>
 802c344:	06d1      	lsls	r1, r2, #27
 802c346:	bf44      	itt	mi
 802c348:	2320      	movmi	r3, #32
 802c34a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c34e:	0713      	lsls	r3, r2, #28
 802c350:	bf44      	itt	mi
 802c352:	232b      	movmi	r3, #43	; 0x2b
 802c354:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c358:	f89a 3000 	ldrb.w	r3, [sl]
 802c35c:	2b2a      	cmp	r3, #42	; 0x2a
 802c35e:	d015      	beq.n	802c38c <_vfiprintf_r+0x120>
 802c360:	9a07      	ldr	r2, [sp, #28]
 802c362:	4654      	mov	r4, sl
 802c364:	2000      	movs	r0, #0
 802c366:	f04f 0c0a 	mov.w	ip, #10
 802c36a:	4621      	mov	r1, r4
 802c36c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802c370:	3b30      	subs	r3, #48	; 0x30
 802c372:	2b09      	cmp	r3, #9
 802c374:	d94d      	bls.n	802c412 <_vfiprintf_r+0x1a6>
 802c376:	b1b0      	cbz	r0, 802c3a6 <_vfiprintf_r+0x13a>
 802c378:	9207      	str	r2, [sp, #28]
 802c37a:	e014      	b.n	802c3a6 <_vfiprintf_r+0x13a>
 802c37c:	eba0 0308 	sub.w	r3, r0, r8
 802c380:	fa09 f303 	lsl.w	r3, r9, r3
 802c384:	4313      	orrs	r3, r2
 802c386:	9304      	str	r3, [sp, #16]
 802c388:	46a2      	mov	sl, r4
 802c38a:	e7d2      	b.n	802c332 <_vfiprintf_r+0xc6>
 802c38c:	9b03      	ldr	r3, [sp, #12]
 802c38e:	1d19      	adds	r1, r3, #4
 802c390:	681b      	ldr	r3, [r3, #0]
 802c392:	9103      	str	r1, [sp, #12]
 802c394:	2b00      	cmp	r3, #0
 802c396:	bfbb      	ittet	lt
 802c398:	425b      	neglt	r3, r3
 802c39a:	f042 0202 	orrlt.w	r2, r2, #2
 802c39e:	9307      	strge	r3, [sp, #28]
 802c3a0:	9307      	strlt	r3, [sp, #28]
 802c3a2:	bfb8      	it	lt
 802c3a4:	9204      	strlt	r2, [sp, #16]
 802c3a6:	7823      	ldrb	r3, [r4, #0]
 802c3a8:	2b2e      	cmp	r3, #46	; 0x2e
 802c3aa:	d10c      	bne.n	802c3c6 <_vfiprintf_r+0x15a>
 802c3ac:	7863      	ldrb	r3, [r4, #1]
 802c3ae:	2b2a      	cmp	r3, #42	; 0x2a
 802c3b0:	d134      	bne.n	802c41c <_vfiprintf_r+0x1b0>
 802c3b2:	9b03      	ldr	r3, [sp, #12]
 802c3b4:	1d1a      	adds	r2, r3, #4
 802c3b6:	681b      	ldr	r3, [r3, #0]
 802c3b8:	9203      	str	r2, [sp, #12]
 802c3ba:	2b00      	cmp	r3, #0
 802c3bc:	bfb8      	it	lt
 802c3be:	f04f 33ff 	movlt.w	r3, #4294967295
 802c3c2:	3402      	adds	r4, #2
 802c3c4:	9305      	str	r3, [sp, #20]
 802c3c6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802c49c <_vfiprintf_r+0x230>
 802c3ca:	7821      	ldrb	r1, [r4, #0]
 802c3cc:	2203      	movs	r2, #3
 802c3ce:	4650      	mov	r0, sl
 802c3d0:	f7d3 ff6e 	bl	80002b0 <memchr>
 802c3d4:	b138      	cbz	r0, 802c3e6 <_vfiprintf_r+0x17a>
 802c3d6:	9b04      	ldr	r3, [sp, #16]
 802c3d8:	eba0 000a 	sub.w	r0, r0, sl
 802c3dc:	2240      	movs	r2, #64	; 0x40
 802c3de:	4082      	lsls	r2, r0
 802c3e0:	4313      	orrs	r3, r2
 802c3e2:	3401      	adds	r4, #1
 802c3e4:	9304      	str	r3, [sp, #16]
 802c3e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c3ea:	4829      	ldr	r0, [pc, #164]	; (802c490 <_vfiprintf_r+0x224>)
 802c3ec:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802c3f0:	2206      	movs	r2, #6
 802c3f2:	f7d3 ff5d 	bl	80002b0 <memchr>
 802c3f6:	2800      	cmp	r0, #0
 802c3f8:	d03f      	beq.n	802c47a <_vfiprintf_r+0x20e>
 802c3fa:	4b26      	ldr	r3, [pc, #152]	; (802c494 <_vfiprintf_r+0x228>)
 802c3fc:	bb1b      	cbnz	r3, 802c446 <_vfiprintf_r+0x1da>
 802c3fe:	9b03      	ldr	r3, [sp, #12]
 802c400:	3307      	adds	r3, #7
 802c402:	f023 0307 	bic.w	r3, r3, #7
 802c406:	3308      	adds	r3, #8
 802c408:	9303      	str	r3, [sp, #12]
 802c40a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802c40c:	443b      	add	r3, r7
 802c40e:	9309      	str	r3, [sp, #36]	; 0x24
 802c410:	e768      	b.n	802c2e4 <_vfiprintf_r+0x78>
 802c412:	fb0c 3202 	mla	r2, ip, r2, r3
 802c416:	460c      	mov	r4, r1
 802c418:	2001      	movs	r0, #1
 802c41a:	e7a6      	b.n	802c36a <_vfiprintf_r+0xfe>
 802c41c:	2300      	movs	r3, #0
 802c41e:	3401      	adds	r4, #1
 802c420:	9305      	str	r3, [sp, #20]
 802c422:	4619      	mov	r1, r3
 802c424:	f04f 0c0a 	mov.w	ip, #10
 802c428:	4620      	mov	r0, r4
 802c42a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802c42e:	3a30      	subs	r2, #48	; 0x30
 802c430:	2a09      	cmp	r2, #9
 802c432:	d903      	bls.n	802c43c <_vfiprintf_r+0x1d0>
 802c434:	2b00      	cmp	r3, #0
 802c436:	d0c6      	beq.n	802c3c6 <_vfiprintf_r+0x15a>
 802c438:	9105      	str	r1, [sp, #20]
 802c43a:	e7c4      	b.n	802c3c6 <_vfiprintf_r+0x15a>
 802c43c:	fb0c 2101 	mla	r1, ip, r1, r2
 802c440:	4604      	mov	r4, r0
 802c442:	2301      	movs	r3, #1
 802c444:	e7f0      	b.n	802c428 <_vfiprintf_r+0x1bc>
 802c446:	ab03      	add	r3, sp, #12
 802c448:	9300      	str	r3, [sp, #0]
 802c44a:	462a      	mov	r2, r5
 802c44c:	4b12      	ldr	r3, [pc, #72]	; (802c498 <_vfiprintf_r+0x22c>)
 802c44e:	a904      	add	r1, sp, #16
 802c450:	4630      	mov	r0, r6
 802c452:	f3af 8000 	nop.w
 802c456:	4607      	mov	r7, r0
 802c458:	1c78      	adds	r0, r7, #1
 802c45a:	d1d6      	bne.n	802c40a <_vfiprintf_r+0x19e>
 802c45c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c45e:	07d9      	lsls	r1, r3, #31
 802c460:	d405      	bmi.n	802c46e <_vfiprintf_r+0x202>
 802c462:	89ab      	ldrh	r3, [r5, #12]
 802c464:	059a      	lsls	r2, r3, #22
 802c466:	d402      	bmi.n	802c46e <_vfiprintf_r+0x202>
 802c468:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c46a:	f7ff fe1b 	bl	802c0a4 <__retarget_lock_release_recursive>
 802c46e:	89ab      	ldrh	r3, [r5, #12]
 802c470:	065b      	lsls	r3, r3, #25
 802c472:	f53f af1d 	bmi.w	802c2b0 <_vfiprintf_r+0x44>
 802c476:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c478:	e71c      	b.n	802c2b4 <_vfiprintf_r+0x48>
 802c47a:	ab03      	add	r3, sp, #12
 802c47c:	9300      	str	r3, [sp, #0]
 802c47e:	462a      	mov	r2, r5
 802c480:	4b05      	ldr	r3, [pc, #20]	; (802c498 <_vfiprintf_r+0x22c>)
 802c482:	a904      	add	r1, sp, #16
 802c484:	4630      	mov	r0, r6
 802c486:	f000 f879 	bl	802c57c <_printf_i>
 802c48a:	e7e4      	b.n	802c456 <_vfiprintf_r+0x1ea>
 802c48c:	08043cd8 	.word	0x08043cd8
 802c490:	08043ce2 	.word	0x08043ce2
 802c494:	00000000 	.word	0x00000000
 802c498:	0802c247 	.word	0x0802c247
 802c49c:	08043cde 	.word	0x08043cde

0802c4a0 <_printf_common>:
 802c4a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c4a4:	4616      	mov	r6, r2
 802c4a6:	4699      	mov	r9, r3
 802c4a8:	688a      	ldr	r2, [r1, #8]
 802c4aa:	690b      	ldr	r3, [r1, #16]
 802c4ac:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802c4b0:	4293      	cmp	r3, r2
 802c4b2:	bfb8      	it	lt
 802c4b4:	4613      	movlt	r3, r2
 802c4b6:	6033      	str	r3, [r6, #0]
 802c4b8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802c4bc:	4607      	mov	r7, r0
 802c4be:	460c      	mov	r4, r1
 802c4c0:	b10a      	cbz	r2, 802c4c6 <_printf_common+0x26>
 802c4c2:	3301      	adds	r3, #1
 802c4c4:	6033      	str	r3, [r6, #0]
 802c4c6:	6823      	ldr	r3, [r4, #0]
 802c4c8:	0699      	lsls	r1, r3, #26
 802c4ca:	bf42      	ittt	mi
 802c4cc:	6833      	ldrmi	r3, [r6, #0]
 802c4ce:	3302      	addmi	r3, #2
 802c4d0:	6033      	strmi	r3, [r6, #0]
 802c4d2:	6825      	ldr	r5, [r4, #0]
 802c4d4:	f015 0506 	ands.w	r5, r5, #6
 802c4d8:	d106      	bne.n	802c4e8 <_printf_common+0x48>
 802c4da:	f104 0a19 	add.w	sl, r4, #25
 802c4de:	68e3      	ldr	r3, [r4, #12]
 802c4e0:	6832      	ldr	r2, [r6, #0]
 802c4e2:	1a9b      	subs	r3, r3, r2
 802c4e4:	42ab      	cmp	r3, r5
 802c4e6:	dc26      	bgt.n	802c536 <_printf_common+0x96>
 802c4e8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802c4ec:	1e13      	subs	r3, r2, #0
 802c4ee:	6822      	ldr	r2, [r4, #0]
 802c4f0:	bf18      	it	ne
 802c4f2:	2301      	movne	r3, #1
 802c4f4:	0692      	lsls	r2, r2, #26
 802c4f6:	d42b      	bmi.n	802c550 <_printf_common+0xb0>
 802c4f8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802c4fc:	4649      	mov	r1, r9
 802c4fe:	4638      	mov	r0, r7
 802c500:	47c0      	blx	r8
 802c502:	3001      	adds	r0, #1
 802c504:	d01e      	beq.n	802c544 <_printf_common+0xa4>
 802c506:	6823      	ldr	r3, [r4, #0]
 802c508:	6922      	ldr	r2, [r4, #16]
 802c50a:	f003 0306 	and.w	r3, r3, #6
 802c50e:	2b04      	cmp	r3, #4
 802c510:	bf02      	ittt	eq
 802c512:	68e5      	ldreq	r5, [r4, #12]
 802c514:	6833      	ldreq	r3, [r6, #0]
 802c516:	1aed      	subeq	r5, r5, r3
 802c518:	68a3      	ldr	r3, [r4, #8]
 802c51a:	bf0c      	ite	eq
 802c51c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802c520:	2500      	movne	r5, #0
 802c522:	4293      	cmp	r3, r2
 802c524:	bfc4      	itt	gt
 802c526:	1a9b      	subgt	r3, r3, r2
 802c528:	18ed      	addgt	r5, r5, r3
 802c52a:	2600      	movs	r6, #0
 802c52c:	341a      	adds	r4, #26
 802c52e:	42b5      	cmp	r5, r6
 802c530:	d11a      	bne.n	802c568 <_printf_common+0xc8>
 802c532:	2000      	movs	r0, #0
 802c534:	e008      	b.n	802c548 <_printf_common+0xa8>
 802c536:	2301      	movs	r3, #1
 802c538:	4652      	mov	r2, sl
 802c53a:	4649      	mov	r1, r9
 802c53c:	4638      	mov	r0, r7
 802c53e:	47c0      	blx	r8
 802c540:	3001      	adds	r0, #1
 802c542:	d103      	bne.n	802c54c <_printf_common+0xac>
 802c544:	f04f 30ff 	mov.w	r0, #4294967295
 802c548:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c54c:	3501      	adds	r5, #1
 802c54e:	e7c6      	b.n	802c4de <_printf_common+0x3e>
 802c550:	18e1      	adds	r1, r4, r3
 802c552:	1c5a      	adds	r2, r3, #1
 802c554:	2030      	movs	r0, #48	; 0x30
 802c556:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802c55a:	4422      	add	r2, r4
 802c55c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802c560:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802c564:	3302      	adds	r3, #2
 802c566:	e7c7      	b.n	802c4f8 <_printf_common+0x58>
 802c568:	2301      	movs	r3, #1
 802c56a:	4622      	mov	r2, r4
 802c56c:	4649      	mov	r1, r9
 802c56e:	4638      	mov	r0, r7
 802c570:	47c0      	blx	r8
 802c572:	3001      	adds	r0, #1
 802c574:	d0e6      	beq.n	802c544 <_printf_common+0xa4>
 802c576:	3601      	adds	r6, #1
 802c578:	e7d9      	b.n	802c52e <_printf_common+0x8e>
	...

0802c57c <_printf_i>:
 802c57c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802c580:	7e0f      	ldrb	r7, [r1, #24]
 802c582:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802c584:	2f78      	cmp	r7, #120	; 0x78
 802c586:	4691      	mov	r9, r2
 802c588:	4680      	mov	r8, r0
 802c58a:	460c      	mov	r4, r1
 802c58c:	469a      	mov	sl, r3
 802c58e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802c592:	d807      	bhi.n	802c5a4 <_printf_i+0x28>
 802c594:	2f62      	cmp	r7, #98	; 0x62
 802c596:	d80a      	bhi.n	802c5ae <_printf_i+0x32>
 802c598:	2f00      	cmp	r7, #0
 802c59a:	f000 80d4 	beq.w	802c746 <_printf_i+0x1ca>
 802c59e:	2f58      	cmp	r7, #88	; 0x58
 802c5a0:	f000 80c0 	beq.w	802c724 <_printf_i+0x1a8>
 802c5a4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c5a8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802c5ac:	e03a      	b.n	802c624 <_printf_i+0xa8>
 802c5ae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802c5b2:	2b15      	cmp	r3, #21
 802c5b4:	d8f6      	bhi.n	802c5a4 <_printf_i+0x28>
 802c5b6:	a101      	add	r1, pc, #4	; (adr r1, 802c5bc <_printf_i+0x40>)
 802c5b8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802c5bc:	0802c615 	.word	0x0802c615
 802c5c0:	0802c629 	.word	0x0802c629
 802c5c4:	0802c5a5 	.word	0x0802c5a5
 802c5c8:	0802c5a5 	.word	0x0802c5a5
 802c5cc:	0802c5a5 	.word	0x0802c5a5
 802c5d0:	0802c5a5 	.word	0x0802c5a5
 802c5d4:	0802c629 	.word	0x0802c629
 802c5d8:	0802c5a5 	.word	0x0802c5a5
 802c5dc:	0802c5a5 	.word	0x0802c5a5
 802c5e0:	0802c5a5 	.word	0x0802c5a5
 802c5e4:	0802c5a5 	.word	0x0802c5a5
 802c5e8:	0802c72d 	.word	0x0802c72d
 802c5ec:	0802c655 	.word	0x0802c655
 802c5f0:	0802c6e7 	.word	0x0802c6e7
 802c5f4:	0802c5a5 	.word	0x0802c5a5
 802c5f8:	0802c5a5 	.word	0x0802c5a5
 802c5fc:	0802c74f 	.word	0x0802c74f
 802c600:	0802c5a5 	.word	0x0802c5a5
 802c604:	0802c655 	.word	0x0802c655
 802c608:	0802c5a5 	.word	0x0802c5a5
 802c60c:	0802c5a5 	.word	0x0802c5a5
 802c610:	0802c6ef 	.word	0x0802c6ef
 802c614:	682b      	ldr	r3, [r5, #0]
 802c616:	1d1a      	adds	r2, r3, #4
 802c618:	681b      	ldr	r3, [r3, #0]
 802c61a:	602a      	str	r2, [r5, #0]
 802c61c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c620:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802c624:	2301      	movs	r3, #1
 802c626:	e09f      	b.n	802c768 <_printf_i+0x1ec>
 802c628:	6820      	ldr	r0, [r4, #0]
 802c62a:	682b      	ldr	r3, [r5, #0]
 802c62c:	0607      	lsls	r7, r0, #24
 802c62e:	f103 0104 	add.w	r1, r3, #4
 802c632:	6029      	str	r1, [r5, #0]
 802c634:	d501      	bpl.n	802c63a <_printf_i+0xbe>
 802c636:	681e      	ldr	r6, [r3, #0]
 802c638:	e003      	b.n	802c642 <_printf_i+0xc6>
 802c63a:	0646      	lsls	r6, r0, #25
 802c63c:	d5fb      	bpl.n	802c636 <_printf_i+0xba>
 802c63e:	f9b3 6000 	ldrsh.w	r6, [r3]
 802c642:	2e00      	cmp	r6, #0
 802c644:	da03      	bge.n	802c64e <_printf_i+0xd2>
 802c646:	232d      	movs	r3, #45	; 0x2d
 802c648:	4276      	negs	r6, r6
 802c64a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c64e:	485a      	ldr	r0, [pc, #360]	; (802c7b8 <_printf_i+0x23c>)
 802c650:	230a      	movs	r3, #10
 802c652:	e012      	b.n	802c67a <_printf_i+0xfe>
 802c654:	682b      	ldr	r3, [r5, #0]
 802c656:	6820      	ldr	r0, [r4, #0]
 802c658:	1d19      	adds	r1, r3, #4
 802c65a:	6029      	str	r1, [r5, #0]
 802c65c:	0605      	lsls	r5, r0, #24
 802c65e:	d501      	bpl.n	802c664 <_printf_i+0xe8>
 802c660:	681e      	ldr	r6, [r3, #0]
 802c662:	e002      	b.n	802c66a <_printf_i+0xee>
 802c664:	0641      	lsls	r1, r0, #25
 802c666:	d5fb      	bpl.n	802c660 <_printf_i+0xe4>
 802c668:	881e      	ldrh	r6, [r3, #0]
 802c66a:	4853      	ldr	r0, [pc, #332]	; (802c7b8 <_printf_i+0x23c>)
 802c66c:	2f6f      	cmp	r7, #111	; 0x6f
 802c66e:	bf0c      	ite	eq
 802c670:	2308      	moveq	r3, #8
 802c672:	230a      	movne	r3, #10
 802c674:	2100      	movs	r1, #0
 802c676:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802c67a:	6865      	ldr	r5, [r4, #4]
 802c67c:	60a5      	str	r5, [r4, #8]
 802c67e:	2d00      	cmp	r5, #0
 802c680:	bfa2      	ittt	ge
 802c682:	6821      	ldrge	r1, [r4, #0]
 802c684:	f021 0104 	bicge.w	r1, r1, #4
 802c688:	6021      	strge	r1, [r4, #0]
 802c68a:	b90e      	cbnz	r6, 802c690 <_printf_i+0x114>
 802c68c:	2d00      	cmp	r5, #0
 802c68e:	d04b      	beq.n	802c728 <_printf_i+0x1ac>
 802c690:	4615      	mov	r5, r2
 802c692:	fbb6 f1f3 	udiv	r1, r6, r3
 802c696:	fb03 6711 	mls	r7, r3, r1, r6
 802c69a:	5dc7      	ldrb	r7, [r0, r7]
 802c69c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802c6a0:	4637      	mov	r7, r6
 802c6a2:	42bb      	cmp	r3, r7
 802c6a4:	460e      	mov	r6, r1
 802c6a6:	d9f4      	bls.n	802c692 <_printf_i+0x116>
 802c6a8:	2b08      	cmp	r3, #8
 802c6aa:	d10b      	bne.n	802c6c4 <_printf_i+0x148>
 802c6ac:	6823      	ldr	r3, [r4, #0]
 802c6ae:	07de      	lsls	r6, r3, #31
 802c6b0:	d508      	bpl.n	802c6c4 <_printf_i+0x148>
 802c6b2:	6923      	ldr	r3, [r4, #16]
 802c6b4:	6861      	ldr	r1, [r4, #4]
 802c6b6:	4299      	cmp	r1, r3
 802c6b8:	bfde      	ittt	le
 802c6ba:	2330      	movle	r3, #48	; 0x30
 802c6bc:	f805 3c01 	strble.w	r3, [r5, #-1]
 802c6c0:	f105 35ff 	addle.w	r5, r5, #4294967295
 802c6c4:	1b52      	subs	r2, r2, r5
 802c6c6:	6122      	str	r2, [r4, #16]
 802c6c8:	f8cd a000 	str.w	sl, [sp]
 802c6cc:	464b      	mov	r3, r9
 802c6ce:	aa03      	add	r2, sp, #12
 802c6d0:	4621      	mov	r1, r4
 802c6d2:	4640      	mov	r0, r8
 802c6d4:	f7ff fee4 	bl	802c4a0 <_printf_common>
 802c6d8:	3001      	adds	r0, #1
 802c6da:	d14a      	bne.n	802c772 <_printf_i+0x1f6>
 802c6dc:	f04f 30ff 	mov.w	r0, #4294967295
 802c6e0:	b004      	add	sp, #16
 802c6e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c6e6:	6823      	ldr	r3, [r4, #0]
 802c6e8:	f043 0320 	orr.w	r3, r3, #32
 802c6ec:	6023      	str	r3, [r4, #0]
 802c6ee:	4833      	ldr	r0, [pc, #204]	; (802c7bc <_printf_i+0x240>)
 802c6f0:	2778      	movs	r7, #120	; 0x78
 802c6f2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802c6f6:	6823      	ldr	r3, [r4, #0]
 802c6f8:	6829      	ldr	r1, [r5, #0]
 802c6fa:	061f      	lsls	r7, r3, #24
 802c6fc:	f851 6b04 	ldr.w	r6, [r1], #4
 802c700:	d402      	bmi.n	802c708 <_printf_i+0x18c>
 802c702:	065f      	lsls	r7, r3, #25
 802c704:	bf48      	it	mi
 802c706:	b2b6      	uxthmi	r6, r6
 802c708:	07df      	lsls	r7, r3, #31
 802c70a:	bf48      	it	mi
 802c70c:	f043 0320 	orrmi.w	r3, r3, #32
 802c710:	6029      	str	r1, [r5, #0]
 802c712:	bf48      	it	mi
 802c714:	6023      	strmi	r3, [r4, #0]
 802c716:	b91e      	cbnz	r6, 802c720 <_printf_i+0x1a4>
 802c718:	6823      	ldr	r3, [r4, #0]
 802c71a:	f023 0320 	bic.w	r3, r3, #32
 802c71e:	6023      	str	r3, [r4, #0]
 802c720:	2310      	movs	r3, #16
 802c722:	e7a7      	b.n	802c674 <_printf_i+0xf8>
 802c724:	4824      	ldr	r0, [pc, #144]	; (802c7b8 <_printf_i+0x23c>)
 802c726:	e7e4      	b.n	802c6f2 <_printf_i+0x176>
 802c728:	4615      	mov	r5, r2
 802c72a:	e7bd      	b.n	802c6a8 <_printf_i+0x12c>
 802c72c:	682b      	ldr	r3, [r5, #0]
 802c72e:	6826      	ldr	r6, [r4, #0]
 802c730:	6961      	ldr	r1, [r4, #20]
 802c732:	1d18      	adds	r0, r3, #4
 802c734:	6028      	str	r0, [r5, #0]
 802c736:	0635      	lsls	r5, r6, #24
 802c738:	681b      	ldr	r3, [r3, #0]
 802c73a:	d501      	bpl.n	802c740 <_printf_i+0x1c4>
 802c73c:	6019      	str	r1, [r3, #0]
 802c73e:	e002      	b.n	802c746 <_printf_i+0x1ca>
 802c740:	0670      	lsls	r0, r6, #25
 802c742:	d5fb      	bpl.n	802c73c <_printf_i+0x1c0>
 802c744:	8019      	strh	r1, [r3, #0]
 802c746:	2300      	movs	r3, #0
 802c748:	6123      	str	r3, [r4, #16]
 802c74a:	4615      	mov	r5, r2
 802c74c:	e7bc      	b.n	802c6c8 <_printf_i+0x14c>
 802c74e:	682b      	ldr	r3, [r5, #0]
 802c750:	1d1a      	adds	r2, r3, #4
 802c752:	602a      	str	r2, [r5, #0]
 802c754:	681d      	ldr	r5, [r3, #0]
 802c756:	6862      	ldr	r2, [r4, #4]
 802c758:	2100      	movs	r1, #0
 802c75a:	4628      	mov	r0, r5
 802c75c:	f7d3 fda8 	bl	80002b0 <memchr>
 802c760:	b108      	cbz	r0, 802c766 <_printf_i+0x1ea>
 802c762:	1b40      	subs	r0, r0, r5
 802c764:	6060      	str	r0, [r4, #4]
 802c766:	6863      	ldr	r3, [r4, #4]
 802c768:	6123      	str	r3, [r4, #16]
 802c76a:	2300      	movs	r3, #0
 802c76c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c770:	e7aa      	b.n	802c6c8 <_printf_i+0x14c>
 802c772:	6923      	ldr	r3, [r4, #16]
 802c774:	462a      	mov	r2, r5
 802c776:	4649      	mov	r1, r9
 802c778:	4640      	mov	r0, r8
 802c77a:	47d0      	blx	sl
 802c77c:	3001      	adds	r0, #1
 802c77e:	d0ad      	beq.n	802c6dc <_printf_i+0x160>
 802c780:	6823      	ldr	r3, [r4, #0]
 802c782:	079b      	lsls	r3, r3, #30
 802c784:	d413      	bmi.n	802c7ae <_printf_i+0x232>
 802c786:	68e0      	ldr	r0, [r4, #12]
 802c788:	9b03      	ldr	r3, [sp, #12]
 802c78a:	4298      	cmp	r0, r3
 802c78c:	bfb8      	it	lt
 802c78e:	4618      	movlt	r0, r3
 802c790:	e7a6      	b.n	802c6e0 <_printf_i+0x164>
 802c792:	2301      	movs	r3, #1
 802c794:	4632      	mov	r2, r6
 802c796:	4649      	mov	r1, r9
 802c798:	4640      	mov	r0, r8
 802c79a:	47d0      	blx	sl
 802c79c:	3001      	adds	r0, #1
 802c79e:	d09d      	beq.n	802c6dc <_printf_i+0x160>
 802c7a0:	3501      	adds	r5, #1
 802c7a2:	68e3      	ldr	r3, [r4, #12]
 802c7a4:	9903      	ldr	r1, [sp, #12]
 802c7a6:	1a5b      	subs	r3, r3, r1
 802c7a8:	42ab      	cmp	r3, r5
 802c7aa:	dcf2      	bgt.n	802c792 <_printf_i+0x216>
 802c7ac:	e7eb      	b.n	802c786 <_printf_i+0x20a>
 802c7ae:	2500      	movs	r5, #0
 802c7b0:	f104 0619 	add.w	r6, r4, #25
 802c7b4:	e7f5      	b.n	802c7a2 <_printf_i+0x226>
 802c7b6:	bf00      	nop
 802c7b8:	08043ce9 	.word	0x08043ce9
 802c7bc:	08043cfa 	.word	0x08043cfa

0802c7c0 <__sflush_r>:
 802c7c0:	898a      	ldrh	r2, [r1, #12]
 802c7c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c7c6:	4605      	mov	r5, r0
 802c7c8:	0710      	lsls	r0, r2, #28
 802c7ca:	460c      	mov	r4, r1
 802c7cc:	d458      	bmi.n	802c880 <__sflush_r+0xc0>
 802c7ce:	684b      	ldr	r3, [r1, #4]
 802c7d0:	2b00      	cmp	r3, #0
 802c7d2:	dc05      	bgt.n	802c7e0 <__sflush_r+0x20>
 802c7d4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802c7d6:	2b00      	cmp	r3, #0
 802c7d8:	dc02      	bgt.n	802c7e0 <__sflush_r+0x20>
 802c7da:	2000      	movs	r0, #0
 802c7dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c7e0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c7e2:	2e00      	cmp	r6, #0
 802c7e4:	d0f9      	beq.n	802c7da <__sflush_r+0x1a>
 802c7e6:	2300      	movs	r3, #0
 802c7e8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802c7ec:	682f      	ldr	r7, [r5, #0]
 802c7ee:	6a21      	ldr	r1, [r4, #32]
 802c7f0:	602b      	str	r3, [r5, #0]
 802c7f2:	d032      	beq.n	802c85a <__sflush_r+0x9a>
 802c7f4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802c7f6:	89a3      	ldrh	r3, [r4, #12]
 802c7f8:	075a      	lsls	r2, r3, #29
 802c7fa:	d505      	bpl.n	802c808 <__sflush_r+0x48>
 802c7fc:	6863      	ldr	r3, [r4, #4]
 802c7fe:	1ac0      	subs	r0, r0, r3
 802c800:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802c802:	b10b      	cbz	r3, 802c808 <__sflush_r+0x48>
 802c804:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802c806:	1ac0      	subs	r0, r0, r3
 802c808:	2300      	movs	r3, #0
 802c80a:	4602      	mov	r2, r0
 802c80c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c80e:	6a21      	ldr	r1, [r4, #32]
 802c810:	4628      	mov	r0, r5
 802c812:	47b0      	blx	r6
 802c814:	1c43      	adds	r3, r0, #1
 802c816:	89a3      	ldrh	r3, [r4, #12]
 802c818:	d106      	bne.n	802c828 <__sflush_r+0x68>
 802c81a:	6829      	ldr	r1, [r5, #0]
 802c81c:	291d      	cmp	r1, #29
 802c81e:	d82b      	bhi.n	802c878 <__sflush_r+0xb8>
 802c820:	4a29      	ldr	r2, [pc, #164]	; (802c8c8 <__sflush_r+0x108>)
 802c822:	410a      	asrs	r2, r1
 802c824:	07d6      	lsls	r6, r2, #31
 802c826:	d427      	bmi.n	802c878 <__sflush_r+0xb8>
 802c828:	2200      	movs	r2, #0
 802c82a:	6062      	str	r2, [r4, #4]
 802c82c:	04d9      	lsls	r1, r3, #19
 802c82e:	6922      	ldr	r2, [r4, #16]
 802c830:	6022      	str	r2, [r4, #0]
 802c832:	d504      	bpl.n	802c83e <__sflush_r+0x7e>
 802c834:	1c42      	adds	r2, r0, #1
 802c836:	d101      	bne.n	802c83c <__sflush_r+0x7c>
 802c838:	682b      	ldr	r3, [r5, #0]
 802c83a:	b903      	cbnz	r3, 802c83e <__sflush_r+0x7e>
 802c83c:	6560      	str	r0, [r4, #84]	; 0x54
 802c83e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c840:	602f      	str	r7, [r5, #0]
 802c842:	2900      	cmp	r1, #0
 802c844:	d0c9      	beq.n	802c7da <__sflush_r+0x1a>
 802c846:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c84a:	4299      	cmp	r1, r3
 802c84c:	d002      	beq.n	802c854 <__sflush_r+0x94>
 802c84e:	4628      	mov	r0, r5
 802c850:	f7ff fc96 	bl	802c180 <_free_r>
 802c854:	2000      	movs	r0, #0
 802c856:	6360      	str	r0, [r4, #52]	; 0x34
 802c858:	e7c0      	b.n	802c7dc <__sflush_r+0x1c>
 802c85a:	2301      	movs	r3, #1
 802c85c:	4628      	mov	r0, r5
 802c85e:	47b0      	blx	r6
 802c860:	1c41      	adds	r1, r0, #1
 802c862:	d1c8      	bne.n	802c7f6 <__sflush_r+0x36>
 802c864:	682b      	ldr	r3, [r5, #0]
 802c866:	2b00      	cmp	r3, #0
 802c868:	d0c5      	beq.n	802c7f6 <__sflush_r+0x36>
 802c86a:	2b1d      	cmp	r3, #29
 802c86c:	d001      	beq.n	802c872 <__sflush_r+0xb2>
 802c86e:	2b16      	cmp	r3, #22
 802c870:	d101      	bne.n	802c876 <__sflush_r+0xb6>
 802c872:	602f      	str	r7, [r5, #0]
 802c874:	e7b1      	b.n	802c7da <__sflush_r+0x1a>
 802c876:	89a3      	ldrh	r3, [r4, #12]
 802c878:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c87c:	81a3      	strh	r3, [r4, #12]
 802c87e:	e7ad      	b.n	802c7dc <__sflush_r+0x1c>
 802c880:	690f      	ldr	r7, [r1, #16]
 802c882:	2f00      	cmp	r7, #0
 802c884:	d0a9      	beq.n	802c7da <__sflush_r+0x1a>
 802c886:	0793      	lsls	r3, r2, #30
 802c888:	680e      	ldr	r6, [r1, #0]
 802c88a:	bf08      	it	eq
 802c88c:	694b      	ldreq	r3, [r1, #20]
 802c88e:	600f      	str	r7, [r1, #0]
 802c890:	bf18      	it	ne
 802c892:	2300      	movne	r3, #0
 802c894:	eba6 0807 	sub.w	r8, r6, r7
 802c898:	608b      	str	r3, [r1, #8]
 802c89a:	f1b8 0f00 	cmp.w	r8, #0
 802c89e:	dd9c      	ble.n	802c7da <__sflush_r+0x1a>
 802c8a0:	6a21      	ldr	r1, [r4, #32]
 802c8a2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802c8a4:	4643      	mov	r3, r8
 802c8a6:	463a      	mov	r2, r7
 802c8a8:	4628      	mov	r0, r5
 802c8aa:	47b0      	blx	r6
 802c8ac:	2800      	cmp	r0, #0
 802c8ae:	dc06      	bgt.n	802c8be <__sflush_r+0xfe>
 802c8b0:	89a3      	ldrh	r3, [r4, #12]
 802c8b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c8b6:	81a3      	strh	r3, [r4, #12]
 802c8b8:	f04f 30ff 	mov.w	r0, #4294967295
 802c8bc:	e78e      	b.n	802c7dc <__sflush_r+0x1c>
 802c8be:	4407      	add	r7, r0
 802c8c0:	eba8 0800 	sub.w	r8, r8, r0
 802c8c4:	e7e9      	b.n	802c89a <__sflush_r+0xda>
 802c8c6:	bf00      	nop
 802c8c8:	dfbffffe 	.word	0xdfbffffe

0802c8cc <_fflush_r>:
 802c8cc:	b538      	push	{r3, r4, r5, lr}
 802c8ce:	690b      	ldr	r3, [r1, #16]
 802c8d0:	4605      	mov	r5, r0
 802c8d2:	460c      	mov	r4, r1
 802c8d4:	b913      	cbnz	r3, 802c8dc <_fflush_r+0x10>
 802c8d6:	2500      	movs	r5, #0
 802c8d8:	4628      	mov	r0, r5
 802c8da:	bd38      	pop	{r3, r4, r5, pc}
 802c8dc:	b118      	cbz	r0, 802c8e6 <_fflush_r+0x1a>
 802c8de:	6a03      	ldr	r3, [r0, #32]
 802c8e0:	b90b      	cbnz	r3, 802c8e6 <_fflush_r+0x1a>
 802c8e2:	f7ff fa2f 	bl	802bd44 <__sinit>
 802c8e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c8ea:	2b00      	cmp	r3, #0
 802c8ec:	d0f3      	beq.n	802c8d6 <_fflush_r+0xa>
 802c8ee:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802c8f0:	07d0      	lsls	r0, r2, #31
 802c8f2:	d404      	bmi.n	802c8fe <_fflush_r+0x32>
 802c8f4:	0599      	lsls	r1, r3, #22
 802c8f6:	d402      	bmi.n	802c8fe <_fflush_r+0x32>
 802c8f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c8fa:	f7ff fbd2 	bl	802c0a2 <__retarget_lock_acquire_recursive>
 802c8fe:	4628      	mov	r0, r5
 802c900:	4621      	mov	r1, r4
 802c902:	f7ff ff5d 	bl	802c7c0 <__sflush_r>
 802c906:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c908:	07da      	lsls	r2, r3, #31
 802c90a:	4605      	mov	r5, r0
 802c90c:	d4e4      	bmi.n	802c8d8 <_fflush_r+0xc>
 802c90e:	89a3      	ldrh	r3, [r4, #12]
 802c910:	059b      	lsls	r3, r3, #22
 802c912:	d4e1      	bmi.n	802c8d8 <_fflush_r+0xc>
 802c914:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c916:	f7ff fbc5 	bl	802c0a4 <__retarget_lock_release_recursive>
 802c91a:	e7dd      	b.n	802c8d8 <_fflush_r+0xc>

0802c91c <__swbuf_r>:
 802c91c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c91e:	460e      	mov	r6, r1
 802c920:	4614      	mov	r4, r2
 802c922:	4605      	mov	r5, r0
 802c924:	b118      	cbz	r0, 802c92e <__swbuf_r+0x12>
 802c926:	6a03      	ldr	r3, [r0, #32]
 802c928:	b90b      	cbnz	r3, 802c92e <__swbuf_r+0x12>
 802c92a:	f7ff fa0b 	bl	802bd44 <__sinit>
 802c92e:	69a3      	ldr	r3, [r4, #24]
 802c930:	60a3      	str	r3, [r4, #8]
 802c932:	89a3      	ldrh	r3, [r4, #12]
 802c934:	071a      	lsls	r2, r3, #28
 802c936:	d525      	bpl.n	802c984 <__swbuf_r+0x68>
 802c938:	6923      	ldr	r3, [r4, #16]
 802c93a:	b31b      	cbz	r3, 802c984 <__swbuf_r+0x68>
 802c93c:	6823      	ldr	r3, [r4, #0]
 802c93e:	6922      	ldr	r2, [r4, #16]
 802c940:	1a98      	subs	r0, r3, r2
 802c942:	6963      	ldr	r3, [r4, #20]
 802c944:	b2f6      	uxtb	r6, r6
 802c946:	4283      	cmp	r3, r0
 802c948:	4637      	mov	r7, r6
 802c94a:	dc04      	bgt.n	802c956 <__swbuf_r+0x3a>
 802c94c:	4621      	mov	r1, r4
 802c94e:	4628      	mov	r0, r5
 802c950:	f7ff ffbc 	bl	802c8cc <_fflush_r>
 802c954:	b9e0      	cbnz	r0, 802c990 <__swbuf_r+0x74>
 802c956:	68a3      	ldr	r3, [r4, #8]
 802c958:	3b01      	subs	r3, #1
 802c95a:	60a3      	str	r3, [r4, #8]
 802c95c:	6823      	ldr	r3, [r4, #0]
 802c95e:	1c5a      	adds	r2, r3, #1
 802c960:	6022      	str	r2, [r4, #0]
 802c962:	701e      	strb	r6, [r3, #0]
 802c964:	6962      	ldr	r2, [r4, #20]
 802c966:	1c43      	adds	r3, r0, #1
 802c968:	429a      	cmp	r2, r3
 802c96a:	d004      	beq.n	802c976 <__swbuf_r+0x5a>
 802c96c:	89a3      	ldrh	r3, [r4, #12]
 802c96e:	07db      	lsls	r3, r3, #31
 802c970:	d506      	bpl.n	802c980 <__swbuf_r+0x64>
 802c972:	2e0a      	cmp	r6, #10
 802c974:	d104      	bne.n	802c980 <__swbuf_r+0x64>
 802c976:	4621      	mov	r1, r4
 802c978:	4628      	mov	r0, r5
 802c97a:	f7ff ffa7 	bl	802c8cc <_fflush_r>
 802c97e:	b938      	cbnz	r0, 802c990 <__swbuf_r+0x74>
 802c980:	4638      	mov	r0, r7
 802c982:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c984:	4621      	mov	r1, r4
 802c986:	4628      	mov	r0, r5
 802c988:	f000 f806 	bl	802c998 <__swsetup_r>
 802c98c:	2800      	cmp	r0, #0
 802c98e:	d0d5      	beq.n	802c93c <__swbuf_r+0x20>
 802c990:	f04f 37ff 	mov.w	r7, #4294967295
 802c994:	e7f4      	b.n	802c980 <__swbuf_r+0x64>
	...

0802c998 <__swsetup_r>:
 802c998:	b538      	push	{r3, r4, r5, lr}
 802c99a:	4b2a      	ldr	r3, [pc, #168]	; (802ca44 <__swsetup_r+0xac>)
 802c99c:	4605      	mov	r5, r0
 802c99e:	6818      	ldr	r0, [r3, #0]
 802c9a0:	460c      	mov	r4, r1
 802c9a2:	b118      	cbz	r0, 802c9ac <__swsetup_r+0x14>
 802c9a4:	6a03      	ldr	r3, [r0, #32]
 802c9a6:	b90b      	cbnz	r3, 802c9ac <__swsetup_r+0x14>
 802c9a8:	f7ff f9cc 	bl	802bd44 <__sinit>
 802c9ac:	89a3      	ldrh	r3, [r4, #12]
 802c9ae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c9b2:	0718      	lsls	r0, r3, #28
 802c9b4:	d422      	bmi.n	802c9fc <__swsetup_r+0x64>
 802c9b6:	06d9      	lsls	r1, r3, #27
 802c9b8:	d407      	bmi.n	802c9ca <__swsetup_r+0x32>
 802c9ba:	2309      	movs	r3, #9
 802c9bc:	602b      	str	r3, [r5, #0]
 802c9be:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c9c2:	81a3      	strh	r3, [r4, #12]
 802c9c4:	f04f 30ff 	mov.w	r0, #4294967295
 802c9c8:	e034      	b.n	802ca34 <__swsetup_r+0x9c>
 802c9ca:	0758      	lsls	r0, r3, #29
 802c9cc:	d512      	bpl.n	802c9f4 <__swsetup_r+0x5c>
 802c9ce:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c9d0:	b141      	cbz	r1, 802c9e4 <__swsetup_r+0x4c>
 802c9d2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c9d6:	4299      	cmp	r1, r3
 802c9d8:	d002      	beq.n	802c9e0 <__swsetup_r+0x48>
 802c9da:	4628      	mov	r0, r5
 802c9dc:	f7ff fbd0 	bl	802c180 <_free_r>
 802c9e0:	2300      	movs	r3, #0
 802c9e2:	6363      	str	r3, [r4, #52]	; 0x34
 802c9e4:	89a3      	ldrh	r3, [r4, #12]
 802c9e6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c9ea:	81a3      	strh	r3, [r4, #12]
 802c9ec:	2300      	movs	r3, #0
 802c9ee:	6063      	str	r3, [r4, #4]
 802c9f0:	6923      	ldr	r3, [r4, #16]
 802c9f2:	6023      	str	r3, [r4, #0]
 802c9f4:	89a3      	ldrh	r3, [r4, #12]
 802c9f6:	f043 0308 	orr.w	r3, r3, #8
 802c9fa:	81a3      	strh	r3, [r4, #12]
 802c9fc:	6923      	ldr	r3, [r4, #16]
 802c9fe:	b94b      	cbnz	r3, 802ca14 <__swsetup_r+0x7c>
 802ca00:	89a3      	ldrh	r3, [r4, #12]
 802ca02:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802ca06:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802ca0a:	d003      	beq.n	802ca14 <__swsetup_r+0x7c>
 802ca0c:	4621      	mov	r1, r4
 802ca0e:	4628      	mov	r0, r5
 802ca10:	f000 f840 	bl	802ca94 <__smakebuf_r>
 802ca14:	89a0      	ldrh	r0, [r4, #12]
 802ca16:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ca1a:	f010 0301 	ands.w	r3, r0, #1
 802ca1e:	d00a      	beq.n	802ca36 <__swsetup_r+0x9e>
 802ca20:	2300      	movs	r3, #0
 802ca22:	60a3      	str	r3, [r4, #8]
 802ca24:	6963      	ldr	r3, [r4, #20]
 802ca26:	425b      	negs	r3, r3
 802ca28:	61a3      	str	r3, [r4, #24]
 802ca2a:	6923      	ldr	r3, [r4, #16]
 802ca2c:	b943      	cbnz	r3, 802ca40 <__swsetup_r+0xa8>
 802ca2e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ca32:	d1c4      	bne.n	802c9be <__swsetup_r+0x26>
 802ca34:	bd38      	pop	{r3, r4, r5, pc}
 802ca36:	0781      	lsls	r1, r0, #30
 802ca38:	bf58      	it	pl
 802ca3a:	6963      	ldrpl	r3, [r4, #20]
 802ca3c:	60a3      	str	r3, [r4, #8]
 802ca3e:	e7f4      	b.n	802ca2a <__swsetup_r+0x92>
 802ca40:	2000      	movs	r0, #0
 802ca42:	e7f7      	b.n	802ca34 <__swsetup_r+0x9c>
 802ca44:	20000160 	.word	0x20000160

0802ca48 <__swhatbuf_r>:
 802ca48:	b570      	push	{r4, r5, r6, lr}
 802ca4a:	460c      	mov	r4, r1
 802ca4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ca50:	2900      	cmp	r1, #0
 802ca52:	b096      	sub	sp, #88	; 0x58
 802ca54:	4615      	mov	r5, r2
 802ca56:	461e      	mov	r6, r3
 802ca58:	da0d      	bge.n	802ca76 <__swhatbuf_r+0x2e>
 802ca5a:	89a3      	ldrh	r3, [r4, #12]
 802ca5c:	f013 0f80 	tst.w	r3, #128	; 0x80
 802ca60:	f04f 0100 	mov.w	r1, #0
 802ca64:	bf0c      	ite	eq
 802ca66:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802ca6a:	2340      	movne	r3, #64	; 0x40
 802ca6c:	2000      	movs	r0, #0
 802ca6e:	6031      	str	r1, [r6, #0]
 802ca70:	602b      	str	r3, [r5, #0]
 802ca72:	b016      	add	sp, #88	; 0x58
 802ca74:	bd70      	pop	{r4, r5, r6, pc}
 802ca76:	466a      	mov	r2, sp
 802ca78:	f000 f848 	bl	802cb0c <_fstat_r>
 802ca7c:	2800      	cmp	r0, #0
 802ca7e:	dbec      	blt.n	802ca5a <__swhatbuf_r+0x12>
 802ca80:	9901      	ldr	r1, [sp, #4]
 802ca82:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802ca86:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802ca8a:	4259      	negs	r1, r3
 802ca8c:	4159      	adcs	r1, r3
 802ca8e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802ca92:	e7eb      	b.n	802ca6c <__swhatbuf_r+0x24>

0802ca94 <__smakebuf_r>:
 802ca94:	898b      	ldrh	r3, [r1, #12]
 802ca96:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802ca98:	079d      	lsls	r5, r3, #30
 802ca9a:	4606      	mov	r6, r0
 802ca9c:	460c      	mov	r4, r1
 802ca9e:	d507      	bpl.n	802cab0 <__smakebuf_r+0x1c>
 802caa0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802caa4:	6023      	str	r3, [r4, #0]
 802caa6:	6123      	str	r3, [r4, #16]
 802caa8:	2301      	movs	r3, #1
 802caaa:	6163      	str	r3, [r4, #20]
 802caac:	b002      	add	sp, #8
 802caae:	bd70      	pop	{r4, r5, r6, pc}
 802cab0:	ab01      	add	r3, sp, #4
 802cab2:	466a      	mov	r2, sp
 802cab4:	f7ff ffc8 	bl	802ca48 <__swhatbuf_r>
 802cab8:	9900      	ldr	r1, [sp, #0]
 802caba:	4605      	mov	r5, r0
 802cabc:	4630      	mov	r0, r6
 802cabe:	f7ff f81b 	bl	802baf8 <_malloc_r>
 802cac2:	b948      	cbnz	r0, 802cad8 <__smakebuf_r+0x44>
 802cac4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802cac8:	059a      	lsls	r2, r3, #22
 802caca:	d4ef      	bmi.n	802caac <__smakebuf_r+0x18>
 802cacc:	f023 0303 	bic.w	r3, r3, #3
 802cad0:	f043 0302 	orr.w	r3, r3, #2
 802cad4:	81a3      	strh	r3, [r4, #12]
 802cad6:	e7e3      	b.n	802caa0 <__smakebuf_r+0xc>
 802cad8:	89a3      	ldrh	r3, [r4, #12]
 802cada:	6020      	str	r0, [r4, #0]
 802cadc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802cae0:	81a3      	strh	r3, [r4, #12]
 802cae2:	9b00      	ldr	r3, [sp, #0]
 802cae4:	6163      	str	r3, [r4, #20]
 802cae6:	9b01      	ldr	r3, [sp, #4]
 802cae8:	6120      	str	r0, [r4, #16]
 802caea:	b15b      	cbz	r3, 802cb04 <__smakebuf_r+0x70>
 802caec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802caf0:	4630      	mov	r0, r6
 802caf2:	f000 f81d 	bl	802cb30 <_isatty_r>
 802caf6:	b128      	cbz	r0, 802cb04 <__smakebuf_r+0x70>
 802caf8:	89a3      	ldrh	r3, [r4, #12]
 802cafa:	f023 0303 	bic.w	r3, r3, #3
 802cafe:	f043 0301 	orr.w	r3, r3, #1
 802cb02:	81a3      	strh	r3, [r4, #12]
 802cb04:	89a3      	ldrh	r3, [r4, #12]
 802cb06:	431d      	orrs	r5, r3
 802cb08:	81a5      	strh	r5, [r4, #12]
 802cb0a:	e7cf      	b.n	802caac <__smakebuf_r+0x18>

0802cb0c <_fstat_r>:
 802cb0c:	b538      	push	{r3, r4, r5, lr}
 802cb0e:	4d07      	ldr	r5, [pc, #28]	; (802cb2c <_fstat_r+0x20>)
 802cb10:	2300      	movs	r3, #0
 802cb12:	4604      	mov	r4, r0
 802cb14:	4608      	mov	r0, r1
 802cb16:	4611      	mov	r1, r2
 802cb18:	602b      	str	r3, [r5, #0]
 802cb1a:	f7d5 f8af 	bl	8001c7c <_fstat>
 802cb1e:	1c43      	adds	r3, r0, #1
 802cb20:	d102      	bne.n	802cb28 <_fstat_r+0x1c>
 802cb22:	682b      	ldr	r3, [r5, #0]
 802cb24:	b103      	cbz	r3, 802cb28 <_fstat_r+0x1c>
 802cb26:	6023      	str	r3, [r4, #0]
 802cb28:	bd38      	pop	{r3, r4, r5, pc}
 802cb2a:	bf00      	nop
 802cb2c:	200142cc 	.word	0x200142cc

0802cb30 <_isatty_r>:
 802cb30:	b538      	push	{r3, r4, r5, lr}
 802cb32:	4d06      	ldr	r5, [pc, #24]	; (802cb4c <_isatty_r+0x1c>)
 802cb34:	2300      	movs	r3, #0
 802cb36:	4604      	mov	r4, r0
 802cb38:	4608      	mov	r0, r1
 802cb3a:	602b      	str	r3, [r5, #0]
 802cb3c:	f7d5 f8a4 	bl	8001c88 <_isatty>
 802cb40:	1c43      	adds	r3, r0, #1
 802cb42:	d102      	bne.n	802cb4a <_isatty_r+0x1a>
 802cb44:	682b      	ldr	r3, [r5, #0]
 802cb46:	b103      	cbz	r3, 802cb4a <_isatty_r+0x1a>
 802cb48:	6023      	str	r3, [r4, #0]
 802cb4a:	bd38      	pop	{r3, r4, r5, pc}
 802cb4c:	200142cc 	.word	0x200142cc

0802cb50 <_init>:
 802cb50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802cb52:	bf00      	nop
 802cb54:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802cb56:	bc08      	pop	{r3}
 802cb58:	469e      	mov	lr, r3
 802cb5a:	4770      	bx	lr

0802cb5c <_fini>:
 802cb5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802cb5e:	bf00      	nop
 802cb60:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802cb62:	bc08      	pop	{r3}
 802cb64:	469e      	mov	lr, r3
 802cb66:	4770      	bx	lr

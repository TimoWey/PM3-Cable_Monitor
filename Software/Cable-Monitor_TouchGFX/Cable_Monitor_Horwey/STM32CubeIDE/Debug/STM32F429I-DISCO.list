
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002ab14  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017528  0802acc4  0802acc4  0003acc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002d3e  080421ec  080421ec  000521ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  08044f2c  08044f2c  00054f2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000668  0804509c  0804509c  0005509c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  08045704  08045704  00055704  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0815e734  0815e734  00170168  2**0
                  CONTENTS
  8 .ARM          00000008  0815e734  0815e734  0016e734  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0815e73c  0815e73c  00170168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0815e73c  0815e73c  0016e73c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  0815e750  0815e750  0016e750  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  0815e754  00170000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013944  20000168  0815e8bc  00170168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20013aac  0815e8bc  00173aac  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00170168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00180000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00170198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009b922  00000000  00000000  001702ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  0020bbec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   00292ecb  00000000  00000000  0020bc7f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 000328b5  00000000  00000000  0049eb4a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004800  00000000  00000000  004d1400  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0012088d  00000000  00000000  004d5c00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00008002  00000000  00000000  005f648d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00032738  00000000  00000000  005fe48f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003c7cc  00000000  00000000  00630bc7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d428  00000000  00000000  0066d394  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  0067a7bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  0067db34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802acac 	.word	0x0802acac

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802acac 	.word	0x0802acac

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_drsub>:
 8000350:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000354:	e002      	b.n	800035c <__adddf3>
 8000356:	bf00      	nop

08000358 <__aeabi_dsub>:
 8000358:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800035c <__adddf3>:
 800035c:	b530      	push	{r4, r5, lr}
 800035e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000362:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	bf1f      	itttt	ne
 8000372:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000376:	ea55 0c02 	orrsne.w	ip, r5, r2
 800037a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800037e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000382:	f000 80e2 	beq.w	800054a <__adddf3+0x1ee>
 8000386:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800038a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800038e:	bfb8      	it	lt
 8000390:	426d      	neglt	r5, r5
 8000392:	dd0c      	ble.n	80003ae <__adddf3+0x52>
 8000394:	442c      	add	r4, r5
 8000396:	ea80 0202 	eor.w	r2, r0, r2
 800039a:	ea81 0303 	eor.w	r3, r1, r3
 800039e:	ea82 0000 	eor.w	r0, r2, r0
 80003a2:	ea83 0101 	eor.w	r1, r3, r1
 80003a6:	ea80 0202 	eor.w	r2, r0, r2
 80003aa:	ea81 0303 	eor.w	r3, r1, r3
 80003ae:	2d36      	cmp	r5, #54	; 0x36
 80003b0:	bf88      	it	hi
 80003b2:	bd30      	pophi	{r4, r5, pc}
 80003b4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80003b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80003bc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80003c0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80003c4:	d002      	beq.n	80003cc <__adddf3+0x70>
 80003c6:	4240      	negs	r0, r0
 80003c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80003cc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80003d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80003d4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80003d8:	d002      	beq.n	80003e0 <__adddf3+0x84>
 80003da:	4252      	negs	r2, r2
 80003dc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80003e0:	ea94 0f05 	teq	r4, r5
 80003e4:	f000 80a7 	beq.w	8000536 <__adddf3+0x1da>
 80003e8:	f1a4 0401 	sub.w	r4, r4, #1
 80003ec:	f1d5 0e20 	rsbs	lr, r5, #32
 80003f0:	db0d      	blt.n	800040e <__adddf3+0xb2>
 80003f2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80003f6:	fa22 f205 	lsr.w	r2, r2, r5
 80003fa:	1880      	adds	r0, r0, r2
 80003fc:	f141 0100 	adc.w	r1, r1, #0
 8000400:	fa03 f20e 	lsl.w	r2, r3, lr
 8000404:	1880      	adds	r0, r0, r2
 8000406:	fa43 f305 	asr.w	r3, r3, r5
 800040a:	4159      	adcs	r1, r3
 800040c:	e00e      	b.n	800042c <__adddf3+0xd0>
 800040e:	f1a5 0520 	sub.w	r5, r5, #32
 8000412:	f10e 0e20 	add.w	lr, lr, #32
 8000416:	2a01      	cmp	r2, #1
 8000418:	fa03 fc0e 	lsl.w	ip, r3, lr
 800041c:	bf28      	it	cs
 800041e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000422:	fa43 f305 	asr.w	r3, r3, r5
 8000426:	18c0      	adds	r0, r0, r3
 8000428:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800042c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000430:	d507      	bpl.n	8000442 <__adddf3+0xe6>
 8000432:	f04f 0e00 	mov.w	lr, #0
 8000436:	f1dc 0c00 	rsbs	ip, ip, #0
 800043a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800043e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000442:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000446:	d31b      	bcc.n	8000480 <__adddf3+0x124>
 8000448:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800044c:	d30c      	bcc.n	8000468 <__adddf3+0x10c>
 800044e:	0849      	lsrs	r1, r1, #1
 8000450:	ea5f 0030 	movs.w	r0, r0, rrx
 8000454:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000458:	f104 0401 	add.w	r4, r4, #1
 800045c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000460:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000464:	f080 809a 	bcs.w	800059c <__adddf3+0x240>
 8000468:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800046c:	bf08      	it	eq
 800046e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000472:	f150 0000 	adcs.w	r0, r0, #0
 8000476:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800047a:	ea41 0105 	orr.w	r1, r1, r5
 800047e:	bd30      	pop	{r4, r5, pc}
 8000480:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000484:	4140      	adcs	r0, r0
 8000486:	eb41 0101 	adc.w	r1, r1, r1
 800048a:	3c01      	subs	r4, #1
 800048c:	bf28      	it	cs
 800048e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000492:	d2e9      	bcs.n	8000468 <__adddf3+0x10c>
 8000494:	f091 0f00 	teq	r1, #0
 8000498:	bf04      	itt	eq
 800049a:	4601      	moveq	r1, r0
 800049c:	2000      	moveq	r0, #0
 800049e:	fab1 f381 	clz	r3, r1
 80004a2:	bf08      	it	eq
 80004a4:	3320      	addeq	r3, #32
 80004a6:	f1a3 030b 	sub.w	r3, r3, #11
 80004aa:	f1b3 0220 	subs.w	r2, r3, #32
 80004ae:	da0c      	bge.n	80004ca <__adddf3+0x16e>
 80004b0:	320c      	adds	r2, #12
 80004b2:	dd08      	ble.n	80004c6 <__adddf3+0x16a>
 80004b4:	f102 0c14 	add.w	ip, r2, #20
 80004b8:	f1c2 020c 	rsb	r2, r2, #12
 80004bc:	fa01 f00c 	lsl.w	r0, r1, ip
 80004c0:	fa21 f102 	lsr.w	r1, r1, r2
 80004c4:	e00c      	b.n	80004e0 <__adddf3+0x184>
 80004c6:	f102 0214 	add.w	r2, r2, #20
 80004ca:	bfd8      	it	le
 80004cc:	f1c2 0c20 	rsble	ip, r2, #32
 80004d0:	fa01 f102 	lsl.w	r1, r1, r2
 80004d4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80004d8:	bfdc      	itt	le
 80004da:	ea41 010c 	orrle.w	r1, r1, ip
 80004de:	4090      	lslle	r0, r2
 80004e0:	1ae4      	subs	r4, r4, r3
 80004e2:	bfa2      	ittt	ge
 80004e4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80004e8:	4329      	orrge	r1, r5
 80004ea:	bd30      	popge	{r4, r5, pc}
 80004ec:	ea6f 0404 	mvn.w	r4, r4
 80004f0:	3c1f      	subs	r4, #31
 80004f2:	da1c      	bge.n	800052e <__adddf3+0x1d2>
 80004f4:	340c      	adds	r4, #12
 80004f6:	dc0e      	bgt.n	8000516 <__adddf3+0x1ba>
 80004f8:	f104 0414 	add.w	r4, r4, #20
 80004fc:	f1c4 0220 	rsb	r2, r4, #32
 8000500:	fa20 f004 	lsr.w	r0, r0, r4
 8000504:	fa01 f302 	lsl.w	r3, r1, r2
 8000508:	ea40 0003 	orr.w	r0, r0, r3
 800050c:	fa21 f304 	lsr.w	r3, r1, r4
 8000510:	ea45 0103 	orr.w	r1, r5, r3
 8000514:	bd30      	pop	{r4, r5, pc}
 8000516:	f1c4 040c 	rsb	r4, r4, #12
 800051a:	f1c4 0220 	rsb	r2, r4, #32
 800051e:	fa20 f002 	lsr.w	r0, r0, r2
 8000522:	fa01 f304 	lsl.w	r3, r1, r4
 8000526:	ea40 0003 	orr.w	r0, r0, r3
 800052a:	4629      	mov	r1, r5
 800052c:	bd30      	pop	{r4, r5, pc}
 800052e:	fa21 f004 	lsr.w	r0, r1, r4
 8000532:	4629      	mov	r1, r5
 8000534:	bd30      	pop	{r4, r5, pc}
 8000536:	f094 0f00 	teq	r4, #0
 800053a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800053e:	bf06      	itte	eq
 8000540:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000544:	3401      	addeq	r4, #1
 8000546:	3d01      	subne	r5, #1
 8000548:	e74e      	b.n	80003e8 <__adddf3+0x8c>
 800054a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800054e:	bf18      	it	ne
 8000550:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000554:	d029      	beq.n	80005aa <__adddf3+0x24e>
 8000556:	ea94 0f05 	teq	r4, r5
 800055a:	bf08      	it	eq
 800055c:	ea90 0f02 	teqeq	r0, r2
 8000560:	d005      	beq.n	800056e <__adddf3+0x212>
 8000562:	ea54 0c00 	orrs.w	ip, r4, r0
 8000566:	bf04      	itt	eq
 8000568:	4619      	moveq	r1, r3
 800056a:	4610      	moveq	r0, r2
 800056c:	bd30      	pop	{r4, r5, pc}
 800056e:	ea91 0f03 	teq	r1, r3
 8000572:	bf1e      	ittt	ne
 8000574:	2100      	movne	r1, #0
 8000576:	2000      	movne	r0, #0
 8000578:	bd30      	popne	{r4, r5, pc}
 800057a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800057e:	d105      	bne.n	800058c <__adddf3+0x230>
 8000580:	0040      	lsls	r0, r0, #1
 8000582:	4149      	adcs	r1, r1
 8000584:	bf28      	it	cs
 8000586:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800058a:	bd30      	pop	{r4, r5, pc}
 800058c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000590:	bf3c      	itt	cc
 8000592:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000596:	bd30      	popcc	{r4, r5, pc}
 8000598:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800059c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80005a0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80005a4:	f04f 0000 	mov.w	r0, #0
 80005a8:	bd30      	pop	{r4, r5, pc}
 80005aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80005ae:	bf1a      	itte	ne
 80005b0:	4619      	movne	r1, r3
 80005b2:	4610      	movne	r0, r2
 80005b4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80005b8:	bf1c      	itt	ne
 80005ba:	460b      	movne	r3, r1
 80005bc:	4602      	movne	r2, r0
 80005be:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80005c2:	bf06      	itte	eq
 80005c4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80005c8:	ea91 0f03 	teqeq	r1, r3
 80005cc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80005d0:	bd30      	pop	{r4, r5, pc}
 80005d2:	bf00      	nop

080005d4 <__aeabi_ui2d>:
 80005d4:	f090 0f00 	teq	r0, #0
 80005d8:	bf04      	itt	eq
 80005da:	2100      	moveq	r1, #0
 80005dc:	4770      	bxeq	lr
 80005de:	b530      	push	{r4, r5, lr}
 80005e0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005e4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005e8:	f04f 0500 	mov.w	r5, #0
 80005ec:	f04f 0100 	mov.w	r1, #0
 80005f0:	e750      	b.n	8000494 <__adddf3+0x138>
 80005f2:	bf00      	nop

080005f4 <__aeabi_i2d>:
 80005f4:	f090 0f00 	teq	r0, #0
 80005f8:	bf04      	itt	eq
 80005fa:	2100      	moveq	r1, #0
 80005fc:	4770      	bxeq	lr
 80005fe:	b530      	push	{r4, r5, lr}
 8000600:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000604:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000608:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800060c:	bf48      	it	mi
 800060e:	4240      	negmi	r0, r0
 8000610:	f04f 0100 	mov.w	r1, #0
 8000614:	e73e      	b.n	8000494 <__adddf3+0x138>
 8000616:	bf00      	nop

08000618 <__aeabi_f2d>:
 8000618:	0042      	lsls	r2, r0, #1
 800061a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800061e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000622:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000626:	bf1f      	itttt	ne
 8000628:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800062c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000630:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000634:	4770      	bxne	lr
 8000636:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800063a:	bf08      	it	eq
 800063c:	4770      	bxeq	lr
 800063e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000642:	bf04      	itt	eq
 8000644:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000648:	4770      	bxeq	lr
 800064a:	b530      	push	{r4, r5, lr}
 800064c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000650:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000654:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000658:	e71c      	b.n	8000494 <__adddf3+0x138>
 800065a:	bf00      	nop

0800065c <__aeabi_ul2d>:
 800065c:	ea50 0201 	orrs.w	r2, r0, r1
 8000660:	bf08      	it	eq
 8000662:	4770      	bxeq	lr
 8000664:	b530      	push	{r4, r5, lr}
 8000666:	f04f 0500 	mov.w	r5, #0
 800066a:	e00a      	b.n	8000682 <__aeabi_l2d+0x16>

0800066c <__aeabi_l2d>:
 800066c:	ea50 0201 	orrs.w	r2, r0, r1
 8000670:	bf08      	it	eq
 8000672:	4770      	bxeq	lr
 8000674:	b530      	push	{r4, r5, lr}
 8000676:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800067a:	d502      	bpl.n	8000682 <__aeabi_l2d+0x16>
 800067c:	4240      	negs	r0, r0
 800067e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000682:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000686:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800068a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800068e:	f43f aed8 	beq.w	8000442 <__adddf3+0xe6>
 8000692:	f04f 0203 	mov.w	r2, #3
 8000696:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800069a:	bf18      	it	ne
 800069c:	3203      	addne	r2, #3
 800069e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80006a2:	bf18      	it	ne
 80006a4:	3203      	addne	r2, #3
 80006a6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80006aa:	f1c2 0320 	rsb	r3, r2, #32
 80006ae:	fa00 fc03 	lsl.w	ip, r0, r3
 80006b2:	fa20 f002 	lsr.w	r0, r0, r2
 80006b6:	fa01 fe03 	lsl.w	lr, r1, r3
 80006ba:	ea40 000e 	orr.w	r0, r0, lr
 80006be:	fa21 f102 	lsr.w	r1, r1, r2
 80006c2:	4414      	add	r4, r2
 80006c4:	e6bd      	b.n	8000442 <__adddf3+0xe6>
 80006c6:	bf00      	nop

080006c8 <__aeabi_uldivmod>:
 80006c8:	b953      	cbnz	r3, 80006e0 <__aeabi_uldivmod+0x18>
 80006ca:	b94a      	cbnz	r2, 80006e0 <__aeabi_uldivmod+0x18>
 80006cc:	2900      	cmp	r1, #0
 80006ce:	bf08      	it	eq
 80006d0:	2800      	cmpeq	r0, #0
 80006d2:	bf1c      	itt	ne
 80006d4:	f04f 31ff 	movne.w	r1, #4294967295
 80006d8:	f04f 30ff 	movne.w	r0, #4294967295
 80006dc:	f000 b970 	b.w	80009c0 <__aeabi_idiv0>
 80006e0:	f1ad 0c08 	sub.w	ip, sp, #8
 80006e4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80006e8:	f000 f806 	bl	80006f8 <__udivmoddi4>
 80006ec:	f8dd e004 	ldr.w	lr, [sp, #4]
 80006f0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80006f4:	b004      	add	sp, #16
 80006f6:	4770      	bx	lr

080006f8 <__udivmoddi4>:
 80006f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80006fc:	9e08      	ldr	r6, [sp, #32]
 80006fe:	460d      	mov	r5, r1
 8000700:	4604      	mov	r4, r0
 8000702:	460f      	mov	r7, r1
 8000704:	2b00      	cmp	r3, #0
 8000706:	d14a      	bne.n	800079e <__udivmoddi4+0xa6>
 8000708:	428a      	cmp	r2, r1
 800070a:	4694      	mov	ip, r2
 800070c:	d965      	bls.n	80007da <__udivmoddi4+0xe2>
 800070e:	fab2 f382 	clz	r3, r2
 8000712:	b143      	cbz	r3, 8000726 <__udivmoddi4+0x2e>
 8000714:	fa02 fc03 	lsl.w	ip, r2, r3
 8000718:	f1c3 0220 	rsb	r2, r3, #32
 800071c:	409f      	lsls	r7, r3
 800071e:	fa20 f202 	lsr.w	r2, r0, r2
 8000722:	4317      	orrs	r7, r2
 8000724:	409c      	lsls	r4, r3
 8000726:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 800072a:	fa1f f58c 	uxth.w	r5, ip
 800072e:	fbb7 f1fe 	udiv	r1, r7, lr
 8000732:	0c22      	lsrs	r2, r4, #16
 8000734:	fb0e 7711 	mls	r7, lr, r1, r7
 8000738:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 800073c:	fb01 f005 	mul.w	r0, r1, r5
 8000740:	4290      	cmp	r0, r2
 8000742:	d90a      	bls.n	800075a <__udivmoddi4+0x62>
 8000744:	eb1c 0202 	adds.w	r2, ip, r2
 8000748:	f101 37ff 	add.w	r7, r1, #4294967295
 800074c:	f080 811c 	bcs.w	8000988 <__udivmoddi4+0x290>
 8000750:	4290      	cmp	r0, r2
 8000752:	f240 8119 	bls.w	8000988 <__udivmoddi4+0x290>
 8000756:	3902      	subs	r1, #2
 8000758:	4462      	add	r2, ip
 800075a:	1a12      	subs	r2, r2, r0
 800075c:	b2a4      	uxth	r4, r4
 800075e:	fbb2 f0fe 	udiv	r0, r2, lr
 8000762:	fb0e 2210 	mls	r2, lr, r0, r2
 8000766:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800076a:	fb00 f505 	mul.w	r5, r0, r5
 800076e:	42a5      	cmp	r5, r4
 8000770:	d90a      	bls.n	8000788 <__udivmoddi4+0x90>
 8000772:	eb1c 0404 	adds.w	r4, ip, r4
 8000776:	f100 32ff 	add.w	r2, r0, #4294967295
 800077a:	f080 8107 	bcs.w	800098c <__udivmoddi4+0x294>
 800077e:	42a5      	cmp	r5, r4
 8000780:	f240 8104 	bls.w	800098c <__udivmoddi4+0x294>
 8000784:	4464      	add	r4, ip
 8000786:	3802      	subs	r0, #2
 8000788:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800078c:	1b64      	subs	r4, r4, r5
 800078e:	2100      	movs	r1, #0
 8000790:	b11e      	cbz	r6, 800079a <__udivmoddi4+0xa2>
 8000792:	40dc      	lsrs	r4, r3
 8000794:	2300      	movs	r3, #0
 8000796:	e9c6 4300 	strd	r4, r3, [r6]
 800079a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800079e:	428b      	cmp	r3, r1
 80007a0:	d908      	bls.n	80007b4 <__udivmoddi4+0xbc>
 80007a2:	2e00      	cmp	r6, #0
 80007a4:	f000 80ed 	beq.w	8000982 <__udivmoddi4+0x28a>
 80007a8:	2100      	movs	r1, #0
 80007aa:	e9c6 0500 	strd	r0, r5, [r6]
 80007ae:	4608      	mov	r0, r1
 80007b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80007b4:	fab3 f183 	clz	r1, r3
 80007b8:	2900      	cmp	r1, #0
 80007ba:	d149      	bne.n	8000850 <__udivmoddi4+0x158>
 80007bc:	42ab      	cmp	r3, r5
 80007be:	d302      	bcc.n	80007c6 <__udivmoddi4+0xce>
 80007c0:	4282      	cmp	r2, r0
 80007c2:	f200 80f8 	bhi.w	80009b6 <__udivmoddi4+0x2be>
 80007c6:	1a84      	subs	r4, r0, r2
 80007c8:	eb65 0203 	sbc.w	r2, r5, r3
 80007cc:	2001      	movs	r0, #1
 80007ce:	4617      	mov	r7, r2
 80007d0:	2e00      	cmp	r6, #0
 80007d2:	d0e2      	beq.n	800079a <__udivmoddi4+0xa2>
 80007d4:	e9c6 4700 	strd	r4, r7, [r6]
 80007d8:	e7df      	b.n	800079a <__udivmoddi4+0xa2>
 80007da:	b902      	cbnz	r2, 80007de <__udivmoddi4+0xe6>
 80007dc:	deff      	udf	#255	; 0xff
 80007de:	fab2 f382 	clz	r3, r2
 80007e2:	2b00      	cmp	r3, #0
 80007e4:	f040 8090 	bne.w	8000908 <__udivmoddi4+0x210>
 80007e8:	1a8a      	subs	r2, r1, r2
 80007ea:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80007ee:	fa1f fe8c 	uxth.w	lr, ip
 80007f2:	2101      	movs	r1, #1
 80007f4:	fbb2 f5f7 	udiv	r5, r2, r7
 80007f8:	fb07 2015 	mls	r0, r7, r5, r2
 80007fc:	0c22      	lsrs	r2, r4, #16
 80007fe:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000802:	fb0e f005 	mul.w	r0, lr, r5
 8000806:	4290      	cmp	r0, r2
 8000808:	d908      	bls.n	800081c <__udivmoddi4+0x124>
 800080a:	eb1c 0202 	adds.w	r2, ip, r2
 800080e:	f105 38ff 	add.w	r8, r5, #4294967295
 8000812:	d202      	bcs.n	800081a <__udivmoddi4+0x122>
 8000814:	4290      	cmp	r0, r2
 8000816:	f200 80cb 	bhi.w	80009b0 <__udivmoddi4+0x2b8>
 800081a:	4645      	mov	r5, r8
 800081c:	1a12      	subs	r2, r2, r0
 800081e:	b2a4      	uxth	r4, r4
 8000820:	fbb2 f0f7 	udiv	r0, r2, r7
 8000824:	fb07 2210 	mls	r2, r7, r0, r2
 8000828:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800082c:	fb0e fe00 	mul.w	lr, lr, r0
 8000830:	45a6      	cmp	lr, r4
 8000832:	d908      	bls.n	8000846 <__udivmoddi4+0x14e>
 8000834:	eb1c 0404 	adds.w	r4, ip, r4
 8000838:	f100 32ff 	add.w	r2, r0, #4294967295
 800083c:	d202      	bcs.n	8000844 <__udivmoddi4+0x14c>
 800083e:	45a6      	cmp	lr, r4
 8000840:	f200 80bb 	bhi.w	80009ba <__udivmoddi4+0x2c2>
 8000844:	4610      	mov	r0, r2
 8000846:	eba4 040e 	sub.w	r4, r4, lr
 800084a:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800084e:	e79f      	b.n	8000790 <__udivmoddi4+0x98>
 8000850:	f1c1 0720 	rsb	r7, r1, #32
 8000854:	408b      	lsls	r3, r1
 8000856:	fa22 fc07 	lsr.w	ip, r2, r7
 800085a:	ea4c 0c03 	orr.w	ip, ip, r3
 800085e:	fa05 f401 	lsl.w	r4, r5, r1
 8000862:	fa20 f307 	lsr.w	r3, r0, r7
 8000866:	40fd      	lsrs	r5, r7
 8000868:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800086c:	4323      	orrs	r3, r4
 800086e:	fbb5 f8f9 	udiv	r8, r5, r9
 8000872:	fa1f fe8c 	uxth.w	lr, ip
 8000876:	fb09 5518 	mls	r5, r9, r8, r5
 800087a:	0c1c      	lsrs	r4, r3, #16
 800087c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000880:	fb08 f50e 	mul.w	r5, r8, lr
 8000884:	42a5      	cmp	r5, r4
 8000886:	fa02 f201 	lsl.w	r2, r2, r1
 800088a:	fa00 f001 	lsl.w	r0, r0, r1
 800088e:	d90b      	bls.n	80008a8 <__udivmoddi4+0x1b0>
 8000890:	eb1c 0404 	adds.w	r4, ip, r4
 8000894:	f108 3aff 	add.w	sl, r8, #4294967295
 8000898:	f080 8088 	bcs.w	80009ac <__udivmoddi4+0x2b4>
 800089c:	42a5      	cmp	r5, r4
 800089e:	f240 8085 	bls.w	80009ac <__udivmoddi4+0x2b4>
 80008a2:	f1a8 0802 	sub.w	r8, r8, #2
 80008a6:	4464      	add	r4, ip
 80008a8:	1b64      	subs	r4, r4, r5
 80008aa:	b29d      	uxth	r5, r3
 80008ac:	fbb4 f3f9 	udiv	r3, r4, r9
 80008b0:	fb09 4413 	mls	r4, r9, r3, r4
 80008b4:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 80008b8:	fb03 fe0e 	mul.w	lr, r3, lr
 80008bc:	45a6      	cmp	lr, r4
 80008be:	d908      	bls.n	80008d2 <__udivmoddi4+0x1da>
 80008c0:	eb1c 0404 	adds.w	r4, ip, r4
 80008c4:	f103 35ff 	add.w	r5, r3, #4294967295
 80008c8:	d26c      	bcs.n	80009a4 <__udivmoddi4+0x2ac>
 80008ca:	45a6      	cmp	lr, r4
 80008cc:	d96a      	bls.n	80009a4 <__udivmoddi4+0x2ac>
 80008ce:	3b02      	subs	r3, #2
 80008d0:	4464      	add	r4, ip
 80008d2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80008d6:	fba3 9502 	umull	r9, r5, r3, r2
 80008da:	eba4 040e 	sub.w	r4, r4, lr
 80008de:	42ac      	cmp	r4, r5
 80008e0:	46c8      	mov	r8, r9
 80008e2:	46ae      	mov	lr, r5
 80008e4:	d356      	bcc.n	8000994 <__udivmoddi4+0x29c>
 80008e6:	d053      	beq.n	8000990 <__udivmoddi4+0x298>
 80008e8:	b156      	cbz	r6, 8000900 <__udivmoddi4+0x208>
 80008ea:	ebb0 0208 	subs.w	r2, r0, r8
 80008ee:	eb64 040e 	sbc.w	r4, r4, lr
 80008f2:	fa04 f707 	lsl.w	r7, r4, r7
 80008f6:	40ca      	lsrs	r2, r1
 80008f8:	40cc      	lsrs	r4, r1
 80008fa:	4317      	orrs	r7, r2
 80008fc:	e9c6 7400 	strd	r7, r4, [r6]
 8000900:	4618      	mov	r0, r3
 8000902:	2100      	movs	r1, #0
 8000904:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000908:	f1c3 0120 	rsb	r1, r3, #32
 800090c:	fa02 fc03 	lsl.w	ip, r2, r3
 8000910:	fa20 f201 	lsr.w	r2, r0, r1
 8000914:	fa25 f101 	lsr.w	r1, r5, r1
 8000918:	409d      	lsls	r5, r3
 800091a:	432a      	orrs	r2, r5
 800091c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000920:	fa1f fe8c 	uxth.w	lr, ip
 8000924:	fbb1 f0f7 	udiv	r0, r1, r7
 8000928:	fb07 1510 	mls	r5, r7, r0, r1
 800092c:	0c11      	lsrs	r1, r2, #16
 800092e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000932:	fb00 f50e 	mul.w	r5, r0, lr
 8000936:	428d      	cmp	r5, r1
 8000938:	fa04 f403 	lsl.w	r4, r4, r3
 800093c:	d908      	bls.n	8000950 <__udivmoddi4+0x258>
 800093e:	eb1c 0101 	adds.w	r1, ip, r1
 8000942:	f100 38ff 	add.w	r8, r0, #4294967295
 8000946:	d22f      	bcs.n	80009a8 <__udivmoddi4+0x2b0>
 8000948:	428d      	cmp	r5, r1
 800094a:	d92d      	bls.n	80009a8 <__udivmoddi4+0x2b0>
 800094c:	3802      	subs	r0, #2
 800094e:	4461      	add	r1, ip
 8000950:	1b49      	subs	r1, r1, r5
 8000952:	b292      	uxth	r2, r2
 8000954:	fbb1 f5f7 	udiv	r5, r1, r7
 8000958:	fb07 1115 	mls	r1, r7, r5, r1
 800095c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000960:	fb05 f10e 	mul.w	r1, r5, lr
 8000964:	4291      	cmp	r1, r2
 8000966:	d908      	bls.n	800097a <__udivmoddi4+0x282>
 8000968:	eb1c 0202 	adds.w	r2, ip, r2
 800096c:	f105 38ff 	add.w	r8, r5, #4294967295
 8000970:	d216      	bcs.n	80009a0 <__udivmoddi4+0x2a8>
 8000972:	4291      	cmp	r1, r2
 8000974:	d914      	bls.n	80009a0 <__udivmoddi4+0x2a8>
 8000976:	3d02      	subs	r5, #2
 8000978:	4462      	add	r2, ip
 800097a:	1a52      	subs	r2, r2, r1
 800097c:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000980:	e738      	b.n	80007f4 <__udivmoddi4+0xfc>
 8000982:	4631      	mov	r1, r6
 8000984:	4630      	mov	r0, r6
 8000986:	e708      	b.n	800079a <__udivmoddi4+0xa2>
 8000988:	4639      	mov	r1, r7
 800098a:	e6e6      	b.n	800075a <__udivmoddi4+0x62>
 800098c:	4610      	mov	r0, r2
 800098e:	e6fb      	b.n	8000788 <__udivmoddi4+0x90>
 8000990:	4548      	cmp	r0, r9
 8000992:	d2a9      	bcs.n	80008e8 <__udivmoddi4+0x1f0>
 8000994:	ebb9 0802 	subs.w	r8, r9, r2
 8000998:	eb65 0e0c 	sbc.w	lr, r5, ip
 800099c:	3b01      	subs	r3, #1
 800099e:	e7a3      	b.n	80008e8 <__udivmoddi4+0x1f0>
 80009a0:	4645      	mov	r5, r8
 80009a2:	e7ea      	b.n	800097a <__udivmoddi4+0x282>
 80009a4:	462b      	mov	r3, r5
 80009a6:	e794      	b.n	80008d2 <__udivmoddi4+0x1da>
 80009a8:	4640      	mov	r0, r8
 80009aa:	e7d1      	b.n	8000950 <__udivmoddi4+0x258>
 80009ac:	46d0      	mov	r8, sl
 80009ae:	e77b      	b.n	80008a8 <__udivmoddi4+0x1b0>
 80009b0:	3d02      	subs	r5, #2
 80009b2:	4462      	add	r2, ip
 80009b4:	e732      	b.n	800081c <__udivmoddi4+0x124>
 80009b6:	4608      	mov	r0, r1
 80009b8:	e70a      	b.n	80007d0 <__udivmoddi4+0xd8>
 80009ba:	4464      	add	r4, ip
 80009bc:	3802      	subs	r0, #2
 80009be:	e742      	b.n	8000846 <__udivmoddi4+0x14e>

080009c0 <__aeabi_idiv0>:
 80009c0:	4770      	bx	lr
 80009c2:	bf00      	nop

080009c4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 80009c4:	f8df d034 	ldr.w	sp, [pc, #52]	; 80009fc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 80009c8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80009ca:	e003      	b.n	80009d4 <LoopCopyDataInit>

080009cc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80009cc:	4b0c      	ldr	r3, [pc, #48]	; (8000a00 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80009ce:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80009d0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80009d2:	3104      	adds	r1, #4

080009d4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80009d4:	480b      	ldr	r0, [pc, #44]	; (8000a04 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80009d6:	4b0c      	ldr	r3, [pc, #48]	; (8000a08 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80009d8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80009da:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80009dc:	d3f6      	bcc.n	80009cc <CopyDataInit>
  ldr  r2, =_sbss
 80009de:	4a0b      	ldr	r2, [pc, #44]	; (8000a0c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80009e0:	e002      	b.n	80009e8 <LoopFillZerobss>

080009e2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80009e2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80009e4:	f842 3b04 	str.w	r3, [r2], #4

080009e8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80009e8:	4b09      	ldr	r3, [pc, #36]	; (8000a10 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80009ea:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80009ec:	d3f9      	bcc.n	80009e2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80009ee:	f008 fc2d 	bl	800924c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80009f2:	f029 fbdf 	bl	802a1b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80009f6:	f000 fe8f 	bl	8001718 <main>
  bx  lr    
 80009fa:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80009fc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000a00:	0815e754 	.word	0x0815e754
  ldr  r0, =_sdata
 8000a04:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000a08:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000a0c:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000a10:	20013aac 	.word	0x20013aac

08000a14 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000a14:	e7fe      	b.n	8000a14 <ADC_IRQHandler>
	...

08000a18 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000a18:	4770      	bx	lr
 8000a1a:	bf00      	nop

08000a1c <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000a1c:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8000a1e:	f000 fbab 	bl	8001178 <touchgfx_components_init>
  touchgfx_init();
}
 8000a22:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8000a26:	f000 bb33 	b.w	8001090 <touchgfx_init>
 8000a2a:	bf00      	nop

08000a2c <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000a2c:	f000 bba6 	b.w	800117c <touchgfx_taskEntry>

08000a30 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000a30:	4770      	bx	lr

08000a32 <_ZN20STM32TouchControllerD0Ev>:
 8000a32:	b510      	push	{r4, lr}
 8000a34:	2104      	movs	r1, #4
 8000a36:	4604      	mov	r4, r0
 8000a38:	f028 faa5 	bl	8028f86 <_ZdlPvj>
 8000a3c:	4620      	mov	r0, r4
 8000a3e:	bd10      	pop	{r4, pc}

08000a40 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000a40:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000a42:	4b0c      	ldr	r3, [pc, #48]	; (8000a74 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000a44:	4c0c      	ldr	r4, [pc, #48]	; (8000a78 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000a46:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000a48:	4b0c      	ldr	r3, [pc, #48]	; (8000a7c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000a4a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000a4c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000a4e:	6863      	ldr	r3, [r4, #4]
 8000a50:	4798      	blx	r3
 8000a52:	f640 0311 	movw	r3, #2065	; 0x811
 8000a56:	4298      	cmp	r0, r3
 8000a58:	d10a      	bne.n	8000a70 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000a5a:	4d09      	ldr	r5, [pc, #36]	; (8000a80 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000a5c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8000a5e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000a60:	2082      	movs	r0, #130	; 0x82
 8000a62:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000a64:	682b      	ldr	r3, [r5, #0]
 8000a66:	2082      	movs	r0, #130	; 0x82
 8000a68:	68db      	ldr	r3, [r3, #12]
 8000a6a:	4798      	blx	r3
 8000a6c:	2000      	movs	r0, #0
    }

    return ret;
}
 8000a6e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000a70:	2001      	movs	r0, #1
 8000a72:	e7fc      	b.n	8000a6e <_Z11BSP_TS_Inittt+0x2e>
 8000a74:	20000184 	.word	0x20000184
 8000a78:	20000050 	.word	0x20000050
 8000a7c:	20000186 	.word	0x20000186
 8000a80:	20000188 	.word	0x20000188

08000a84 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000a84:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000a88:	20f0      	movs	r0, #240	; 0xf0
 8000a8a:	f7ff bfd9 	b.w	8000a40 <_Z11BSP_TS_Inittt>
	...

08000a90 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000a90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000a92:	4d33      	ldr	r5, [pc, #204]	; (8000b60 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8000a94:	682b      	ldr	r3, [r5, #0]
{
 8000a96:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000a98:	691b      	ldr	r3, [r3, #16]
 8000a9a:	2082      	movs	r0, #130	; 0x82
 8000a9c:	4798      	blx	r3
 8000a9e:	b280      	uxth	r0, r0
 8000aa0:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000aa2:	2800      	cmp	r0, #0
 8000aa4:	d04a      	beq.n	8000b3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000aa6:	682b      	ldr	r3, [r5, #0]
 8000aa8:	f10d 0206 	add.w	r2, sp, #6
 8000aac:	695b      	ldr	r3, [r3, #20]
 8000aae:	a901      	add	r1, sp, #4
 8000ab0:	2082      	movs	r0, #130	; 0x82
 8000ab2:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8000ab4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000ab8:	f640 6274 	movw	r2, #3700	; 0xe74
 8000abc:	4293      	cmp	r3, r2
 8000abe:	d93f      	bls.n	8000b40 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000ac0:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8000ac4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000ac8:	1ad2      	subs	r2, r2, r3
 8000aca:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000acc:	2a0a      	cmp	r2, #10
 8000ace:	d93d      	bls.n	8000b4c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000ad0:	230b      	movs	r3, #11
 8000ad2:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000ad6:	4b23      	ldr	r3, [pc, #140]	; (8000b64 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000ad8:	881b      	ldrh	r3, [r3, #0]
 8000ada:	429a      	cmp	r2, r3
 8000adc:	d901      	bls.n	8000ae2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000ade:	3b01      	subs	r3, #1
 8000ae0:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000ae2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000ae6:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000aea:	428b      	cmp	r3, r1
 8000aec:	d830      	bhi.n	8000b50 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000aee:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8000af2:	330e      	adds	r3, #14
 8000af4:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8000af6:	210f      	movs	r1, #15
 8000af8:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000afc:	491a      	ldr	r1, [pc, #104]	; (8000b68 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000afe:	8809      	ldrh	r1, [r1, #0]
 8000b00:	428b      	cmp	r3, r1
 8000b02:	d901      	bls.n	8000b08 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8000b04:	3901      	subs	r1, #1
 8000b06:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000b08:	4e18      	ldr	r6, [pc, #96]	; (8000b6c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000b0a:	4d19      	ldr	r5, [pc, #100]	; (8000b70 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000b0c:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000b0e:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000b10:	4283      	cmp	r3, r0
 8000b12:	b281      	uxth	r1, r0
 8000b14:	bf8c      	ite	hi
 8000b16:	1a59      	subhi	r1, r3, r1
 8000b18:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000b1a:	b2b8      	uxth	r0, r7
 8000b1c:	42ba      	cmp	r2, r7
 8000b1e:	bf8c      	ite	hi
 8000b20:	1a10      	subhi	r0, r2, r0
 8000b22:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000b24:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000b26:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8000b28:	4401      	add	r1, r0
 8000b2a:	2905      	cmp	r1, #5
        {
            _x = x;
 8000b2c:	bfc8      	it	gt
 8000b2e:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8000b30:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8000b32:	bfc8      	it	gt
 8000b34:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8000b36:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8000b38:	682b      	ldr	r3, [r5, #0]
 8000b3a:	80a3      	strh	r3, [r4, #4]
    }
}
 8000b3c:	b003      	add	sp, #12
 8000b3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8000b40:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8000b42:	bf9c      	itt	ls
 8000b44:	23b4      	movls	r3, #180	; 0xb4
 8000b46:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8000b4a:	e7bb      	b.n	8000ac4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	e7c8      	b.n	8000ae2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8000b50:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8000b54:	3308      	adds	r3, #8
 8000b56:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8000b58:	2b0e      	cmp	r3, #14
 8000b5a:	d8cc      	bhi.n	8000af6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8000b5c:	2300      	movs	r3, #0
 8000b5e:	e7d3      	b.n	8000b08 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8000b60:	20000188 	.word	0x20000188
 8000b64:	20000186 	.word	0x20000186
 8000b68:	20000184 	.word	0x20000184
 8000b6c:	2000018c 	.word	0x2000018c
 8000b70:	20000190 	.word	0x20000190

08000b74 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000b74:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8000b76:	4668      	mov	r0, sp
{
 8000b78:	460d      	mov	r5, r1
 8000b7a:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000b7c:	f7ff ff88 	bl	8000a90 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000b80:	f8bd 0000 	ldrh.w	r0, [sp]
 8000b84:	b148      	cbz	r0, 8000b9a <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8000b86:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000b8a:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000b8c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000b90:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8000b92:	4b03      	ldr	r3, [pc, #12]	; (8000ba0 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8000b94:	223c      	movs	r2, #60	; 0x3c
 8000b96:	601a      	str	r2, [r3, #0]
        return true;
 8000b98:	2001      	movs	r0, #1
}
 8000b9a:	b003      	add	sp, #12
 8000b9c:	bd30      	pop	{r4, r5, pc}
 8000b9e:	bf00      	nop
 8000ba0:	20000014 	.word	0x20000014

08000ba4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000ba4:	b110      	cbz	r0, 8000bac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000ba6:	2802      	cmp	r0, #2
 8000ba8:	d009      	beq.n	8000bbe <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000baa:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000bac:	4b07      	ldr	r3, [pc, #28]	; (8000bcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000bae:	681a      	ldr	r2, [r3, #0]
 8000bb0:	fab2 f282 	clz	r2, r2
 8000bb4:	0952      	lsrs	r2, r2, #5
 8000bb6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000bb8:	4805      	ldr	r0, [pc, #20]	; (8000bd0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000bba:	f008 bde3 	b.w	8009784 <HAL_GPIO_WritePin>
 8000bbe:	4b03      	ldr	r3, [pc, #12]	; (8000bcc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000bc0:	689a      	ldr	r2, [r3, #8]
 8000bc2:	fab2 f282 	clz	r2, r2
 8000bc6:	0952      	lsrs	r2, r2, #5
 8000bc8:	2110      	movs	r1, #16
 8000bca:	e7f5      	b.n	8000bb8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000bcc:	20000194 	.word	0x20000194
 8000bd0:	40021000 	.word	0x40021000

08000bd4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000bd4:	b110      	cbz	r0, 8000bdc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8000bd6:	2802      	cmp	r0, #2
 8000bd8:	d009      	beq.n	8000bee <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000bda:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000bdc:	4b07      	ldr	r3, [pc, #28]	; (8000bfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000bde:	681a      	ldr	r2, [r3, #0]
 8000be0:	3a00      	subs	r2, #0
 8000be2:	bf18      	it	ne
 8000be4:	2201      	movne	r2, #1
 8000be6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000be8:	4805      	ldr	r0, [pc, #20]	; (8000c00 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000bea:	f008 bdcb 	b.w	8009784 <HAL_GPIO_WritePin>
 8000bee:	4b03      	ldr	r3, [pc, #12]	; (8000bfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000bf0:	689a      	ldr	r2, [r3, #8]
 8000bf2:	3a00      	subs	r2, #0
 8000bf4:	bf18      	it	ne
 8000bf6:	2201      	movne	r2, #1
 8000bf8:	2110      	movs	r1, #16
 8000bfa:	e7f5      	b.n	8000be8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8000bfc:	20000194 	.word	0x20000194
 8000c00:	40021000 	.word	0x40021000

08000c04 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000c04:	b110      	cbz	r0, 8000c0c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8000c06:	2802      	cmp	r0, #2
 8000c08:	d004      	beq.n	8000c14 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8000c0a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000c0c:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000c0e:	4802      	ldr	r0, [pc, #8]	; (8000c18 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8000c10:	f008 bdbc 	b.w	800978c <HAL_GPIO_TogglePin>
 8000c14:	2110      	movs	r1, #16
 8000c16:	e7fa      	b.n	8000c0e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8000c18:	40021000 	.word	0x40021000

08000c1c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000c1c:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000c1e:	b130      	cbz	r0, 8000c2e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8000c20:	2802      	cmp	r0, #2
 8000c22:	d009      	beq.n	8000c38 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8000c24:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000c26:	1e43      	subs	r3, r0, #1
 8000c28:	4258      	negs	r0, r3
 8000c2a:	4158      	adcs	r0, r3
 8000c2c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000c2e:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000c30:	4802      	ldr	r0, [pc, #8]	; (8000c3c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8000c32:	f008 fda1 	bl	8009778 <HAL_GPIO_ReadPin>
        break;
 8000c36:	e7f6      	b.n	8000c26 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000c38:	2110      	movs	r1, #16
 8000c3a:	e7f9      	b.n	8000c30 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8000c3c:	40021000 	.word	0x40021000

08000c40 <_ZN8touchgfx4GPIO4initEv>:
{
 8000c40:	b570      	push	{r4, r5, r6, lr}
 8000c42:	4d08      	ldr	r5, [pc, #32]	; (8000c64 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000c44:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000c46:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000c48:	b2e0      	uxtb	r0, r4
 8000c4a:	f7ff ffe7 	bl	8000c1c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000c4e:	b118      	cbz	r0, 8000c58 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000c50:	682b      	ldr	r3, [r5, #0]
 8000c52:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000c54:	bf18      	it	ne
 8000c56:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000c58:	3401      	adds	r4, #1
 8000c5a:	2c05      	cmp	r4, #5
 8000c5c:	f105 0504 	add.w	r5, r5, #4
 8000c60:	d1f2      	bne.n	8000c48 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000c62:	bd70      	pop	{r4, r5, r6, pc}
 8000c64:	20000194 	.word	0x20000194

08000c68 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000c68:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000c6a:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000c6e:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8000c72:	4770      	bx	lr

08000c74 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000c74:	2000      	movs	r0, #0
 8000c76:	4770      	bx	lr

08000c78 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000c78:	4b03      	ldr	r3, [pc, #12]	; (8000c88 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000c7a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000c7c:	3900      	subs	r1, #0
 8000c7e:	bf18      	it	ne
 8000c80:	2101      	movne	r1, #1
 8000c82:	7019      	strb	r1, [r3, #0]
    }
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop
 8000c88:	20012e73 	.word	0x20012e73

08000c8c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000c8c:	2000      	movs	r0, #0
 8000c8e:	4770      	bx	lr

08000c90 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000c90:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000c92:	b10b      	cbz	r3, 8000c98 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000c94:	4608      	mov	r0, r1
 8000c96:	4718      	bx	r3
        }
    }
 8000c98:	4770      	bx	lr

08000c9a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000c9a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000c9e:	4770      	bx	lr

08000ca0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000ca0:	6840      	ldr	r0, [r0, #4]
 8000ca2:	6803      	ldr	r3, [r0, #0]
 8000ca4:	699b      	ldr	r3, [r3, #24]
 8000ca6:	4718      	bx	r3

08000ca8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000ca8:	4770      	bx	lr

08000caa <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000caa:	4770      	bx	lr

08000cac <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000cac:	4770      	bx	lr
	...

08000cb0 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000cb0:	b510      	push	{r4, lr}
 8000cb2:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8000cb4:	f000 fb4e 	bl	8001354 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000cb8:	6823      	ldr	r3, [r4, #0]
 8000cba:	4903      	ldr	r1, [pc, #12]	; (8000cc8 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000cbc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000cc0:	4620      	mov	r0, r4
}
 8000cc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8000cc6:	4718      	bx	r3
 8000cc8:	d0000000 	.word	0xd0000000

08000ccc <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000ccc:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000cce:	6803      	ldr	r3, [r0, #0]
{
 8000cd0:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000cd2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8000cd6:	4798      	blx	r3
    enableInterrupts();
 8000cd8:	6823      	ldr	r3, [r4, #0]
 8000cda:	4620      	mov	r0, r4
 8000cdc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000cde:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000ce0:	f000 f8ec 	bl	8000ebc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000ce4:	6823      	ldr	r3, [r4, #0]
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000cea:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000cec:	2029      	movs	r0, #41	; 0x29
 8000cee:	f001 f81b 	bl	8001d28 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8000cf2:	f000 f8e3 	bl	8000ebc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000cf6:	6823      	ldr	r3, [r4, #0]
 8000cf8:	4620      	mov	r0, r4
 8000cfa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000cfc:	4798      	blx	r3
    for (;;)
 8000cfe:	e7f8      	b.n	8000cf2 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000d00 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000d00:	b510      	push	{r4, lr}
 8000d02:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000d04:	f010 f84e 	bl	8010da4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000d08:	6823      	ldr	r3, [r4, #0]
 8000d0a:	4620      	mov	r0, r4
 8000d0c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000d10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000d14:	4718      	bx	r3

08000d16 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8000d16:	f000 bb0f 	b.w	8001338 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000d1a <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000d1a:	f000 bb13 	b.w	8001344 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000d1e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000d1e:	f000 bb37 	b.w	8001390 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000d22 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000d22:	f000 badf 	b.w	80012e4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000d26 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000d26:	f000 bae5 	b.w	80012f4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000d2a <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000d2a:	f000 bb3d 	b.w	80013a8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000d2e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000d2e:	f000 bae9 	b.w	8001304 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000d32 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000d32:	f00f baa3 	b.w	801027c <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000d36 <_ZN11TouchGFXHALD0Ev>:
 8000d36:	b510      	push	{r4, lr}
 8000d38:	217c      	movs	r1, #124	; 0x7c
 8000d3a:	4604      	mov	r4, r0
 8000d3c:	f028 f923 	bl	8028f86 <_ZdlPvj>
 8000d40:	4620      	mov	r0, r4
 8000d42:	bd10      	pop	{r4, pc}

08000d44 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000d44:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000d48:	b11b      	cbz	r3, 8000d52 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000d4a:	6840      	ldr	r0, [r0, #4]
 8000d4c:	6803      	ldr	r3, [r0, #0]
 8000d4e:	681b      	ldr	r3, [r3, #0]
 8000d50:	4718      	bx	r3
    }
 8000d52:	4618      	mov	r0, r3
 8000d54:	4770      	bx	lr
	...

08000d58 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000d58:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000d5a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000d5e:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000d62:	4b0c      	ldr	r3, [pc, #48]	; (8000d94 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000d64:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000d66:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000d68:	d009      	beq.n	8000d7e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000d6a:	b93a      	cbnz	r2, 8000d7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000d6c:	4a0a      	ldr	r2, [pc, #40]	; (8000d98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000d6e:	490b      	ldr	r1, [pc, #44]	; (8000d9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000d70:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000d72:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000d74:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000d76:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000d78:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000d7a:	701a      	strb	r2, [r3, #0]
    }
 8000d7c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000d7e:	2a00      	cmp	r2, #0
 8000d80:	d0fc      	beq.n	8000d7c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000d82:	4a05      	ldr	r2, [pc, #20]	; (8000d98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000d84:	4905      	ldr	r1, [pc, #20]	; (8000d9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000d86:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000d88:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000d8a:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000d8c:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000d8e:	2200      	movs	r2, #0
 8000d90:	e7f3      	b.n	8000d7a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000d92:	bf00      	nop
 8000d94:	20012e6c 	.word	0x20012e6c
 8000d98:	20012e68 	.word	0x20012e68
 8000d9c:	20012e6a 	.word	0x20012e6a

08000da0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000da0:	b570      	push	{r4, r5, r6, lr}
 8000da2:	460d      	mov	r5, r1
 8000da4:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000da6:	b935      	cbnz	r5, 8000db6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000da8:	4b09      	ldr	r3, [pc, #36]	; (8000dd0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000daa:	4a0a      	ldr	r2, [pc, #40]	; (8000dd4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000dac:	480a      	ldr	r0, [pc, #40]	; (8000dd8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000dae:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000db2:	f028 fefb 	bl	8029bac <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000db6:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000dba:	4b08      	ldr	r3, [pc, #32]	; (8000ddc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000dbc:	3a00      	subs	r2, #0
 8000dbe:	bf18      	it	ne
 8000dc0:	2201      	movne	r2, #1
 8000dc2:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000dc4:	6803      	ldr	r3, [r0, #0]
    }
 8000dc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000dca:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000dce:	4718      	bx	r3
 8000dd0:	0802ad1c 	.word	0x0802ad1c
 8000dd4:	0802ad54 	.word	0x0802ad54
 8000dd8:	0802ada2 	.word	0x0802ada2
 8000ddc:	20012e72 	.word	0x20012e72

08000de0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000de0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000de2:	4b09      	ldr	r3, [pc, #36]	; (8000e08 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000de4:	881b      	ldrh	r3, [r3, #0]
 8000de6:	428b      	cmp	r3, r1
 8000de8:	d803      	bhi.n	8000df2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000dea:	4b08      	ldr	r3, [pc, #32]	; (8000e0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000dec:	881b      	ldrh	r3, [r3, #0]
 8000dee:	4293      	cmp	r3, r2
 8000df0:	d905      	bls.n	8000dfe <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000df2:	4b07      	ldr	r3, [pc, #28]	; (8000e10 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000df4:	4a07      	ldr	r2, [pc, #28]	; (8000e14 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000df6:	4808      	ldr	r0, [pc, #32]	; (8000e18 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000df8:	219e      	movs	r1, #158	; 0x9e
 8000dfa:	f028 fed7 	bl	8029bac <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000dfe:	4b07      	ldr	r3, [pc, #28]	; (8000e1c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000e00:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000e02:	4b07      	ldr	r3, [pc, #28]	; (8000e20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000e04:	801a      	strh	r2, [r3, #0]
    }
 8000e06:	bd08      	pop	{r3, pc}
 8000e08:	20012e68 	.word	0x20012e68
 8000e0c:	20012e6a 	.word	0x20012e6a
 8000e10:	0802ade7 	.word	0x0802ade7
 8000e14:	0802ae4a 	.word	0x0802ae4a
 8000e18:	0802ada2 	.word	0x0802ada2
 8000e1c:	20012e6e 	.word	0x20012e6e
 8000e20:	20012e70 	.word	0x20012e70

08000e24 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000e24:	2101      	movs	r1, #1
{
 8000e26:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000e28:	2200      	movs	r2, #0
 8000e2a:	4608      	mov	r0, r1
 8000e2c:	f00c f82e 	bl	800ce8c <osSemaphoreNew>
 8000e30:	4b0a      	ldr	r3, [pc, #40]	; (8000e5c <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000e32:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000e34:	b928      	cbnz	r0, 8000e42 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000e36:	4b0a      	ldr	r3, [pc, #40]	; (8000e60 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000e38:	4a0a      	ldr	r2, [pc, #40]	; (8000e64 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000e3a:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000e3c:	480a      	ldr	r0, [pc, #40]	; (8000e68 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000e3e:	f028 feb5 	bl	8029bac <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000e42:	2200      	movs	r2, #0
 8000e44:	2104      	movs	r1, #4
 8000e46:	2001      	movs	r0, #1
 8000e48:	f00c f8d4 	bl	800cff4 <osMessageQueueNew>
 8000e4c:	4b07      	ldr	r3, [pc, #28]	; (8000e6c <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000e4e:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000e50:	b918      	cbnz	r0, 8000e5a <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000e52:	4b07      	ldr	r3, [pc, #28]	; (8000e70 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000e54:	4a03      	ldr	r2, [pc, #12]	; (8000e64 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000e56:	212c      	movs	r1, #44	; 0x2c
 8000e58:	e7f0      	b.n	8000e3c <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000e5a:	bd08      	pop	{r3, pc}
 8000e5c:	200001a8 	.word	0x200001a8
 8000e60:	0802af68 	.word	0x0802af68
 8000e64:	0802afb1 	.word	0x0802afb1
 8000e68:	0802afe0 	.word	0x0802afe0
 8000e6c:	200001a4 	.word	0x200001a4
 8000e70:	0802b05a 	.word	0x0802b05a

08000e74 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000e74:	4b02      	ldr	r3, [pc, #8]	; (8000e80 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000e76:	f04f 31ff 	mov.w	r1, #4294967295
 8000e7a:	6818      	ldr	r0, [r3, #0]
 8000e7c:	f00c b85a 	b.w	800cf34 <osSemaphoreAcquire>
 8000e80:	200001a8 	.word	0x200001a8

08000e84 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000e84:	4b01      	ldr	r3, [pc, #4]	; (8000e8c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000e86:	6818      	ldr	r0, [r3, #0]
 8000e88:	f00c b888 	b.w	800cf9c <osSemaphoreRelease>
 8000e8c:	200001a8 	.word	0x200001a8

08000e90 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000e90:	4b02      	ldr	r3, [pc, #8]	; (8000e9c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000e92:	2100      	movs	r1, #0
 8000e94:	6818      	ldr	r0, [r3, #0]
 8000e96:	f00c b84d 	b.w	800cf34 <osSemaphoreAcquire>
 8000e9a:	bf00      	nop
 8000e9c:	200001a8 	.word	0x200001a8

08000ea0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000ea0:	f7ff bff0 	b.w	8000e84 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000ea4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000ea4:	4803      	ldr	r0, [pc, #12]	; (8000eb4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000ea6:	4904      	ldr	r1, [pc, #16]	; (8000eb8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000ea8:	6800      	ldr	r0, [r0, #0]
 8000eaa:	2300      	movs	r3, #0
 8000eac:	461a      	mov	r2, r3
 8000eae:	f00c b8db 	b.w	800d068 <osMessageQueuePut>
 8000eb2:	bf00      	nop
 8000eb4:	200001a4 	.word	0x200001a4
 8000eb8:	20000004 	.word	0x20000004

08000ebc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000ebc:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000ebe:	4c08      	ldr	r4, [pc, #32]	; (8000ee0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	461a      	mov	r2, r3
 8000ec4:	a901      	add	r1, sp, #4
 8000ec6:	6820      	ldr	r0, [r4, #0]
 8000ec8:	f00c f904 	bl	800d0d4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000ecc:	6820      	ldr	r0, [r4, #0]
 8000ece:	f04f 33ff 	mov.w	r3, #4294967295
 8000ed2:	2200      	movs	r2, #0
 8000ed4:	a901      	add	r1, sp, #4
 8000ed6:	f00c f8fd 	bl	800d0d4 <osMessageQueueGet>
}
 8000eda:	b002      	add	sp, #8
 8000edc:	bd10      	pop	{r4, pc}
 8000ede:	bf00      	nop
 8000ee0:	200001a4 	.word	0x200001a4

08000ee4 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000ee4:	4770      	bx	lr

08000ee6 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000ee6:	2000      	movs	r0, #0
 8000ee8:	4770      	bx	lr

08000eea <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000eea:	4770      	bx	lr

08000eec <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000eec:	4770      	bx	lr

08000eee <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000eee:	2000      	movs	r0, #0
 8000ef0:	4770      	bx	lr

08000ef2 <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000ef2:	4770      	bx	lr

08000ef4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000ef4:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000ef6:	4a03      	ldr	r2, [pc, #12]	; (8000f04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000ef8:	4b03      	ldr	r3, [pc, #12]	; (8000f08 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000efa:	4804      	ldr	r0, [pc, #16]	; (8000f0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000efc:	2122      	movs	r1, #34	; 0x22
 8000efe:	f028 fe55 	bl	8029bac <__assert_func>
 8000f02:	bf00      	nop
 8000f04:	0802b0bf 	.word	0x0802b0bf
 8000f08:	0802b09c 	.word	0x0802b09c
 8000f0c:	0802b0fd 	.word	0x0802b0fd

08000f10 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000f10:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000f12:	4a03      	ldr	r2, [pc, #12]	; (8000f20 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000f14:	4b03      	ldr	r3, [pc, #12]	; (8000f24 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000f16:	4804      	ldr	r0, [pc, #16]	; (8000f28 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000f18:	2127      	movs	r1, #39	; 0x27
 8000f1a:	f028 fe47 	bl	8029bac <__assert_func>
 8000f1e:	bf00      	nop
 8000f20:	0802b175 	.word	0x0802b175
 8000f24:	0802b09c 	.word	0x0802b09c
 8000f28:	0802b0fd 	.word	0x0802b0fd

08000f2c <_ZN8STM32DMAD0Ev>:
 8000f2c:	b510      	push	{r4, lr}
 8000f2e:	2144      	movs	r1, #68	; 0x44
 8000f30:	4604      	mov	r4, r0
 8000f32:	f028 f828 	bl	8028f86 <_ZdlPvj>
 8000f36:	4620      	mov	r0, r4
 8000f38:	bd10      	pop	{r4, pc}
	...

08000f3c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000f3c:	b538      	push	{r3, r4, r5, lr}
 8000f3e:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000f40:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000f42:	2500      	movs	r5, #0
 8000f44:	4b06      	ldr	r3, [pc, #24]	; (8000f60 <_ZN8STM32DMAC1Ev+0x24>)
 8000f46:	7225      	strb	r5, [r4, #8]
 8000f48:	300c      	adds	r0, #12
 8000f4a:	6060      	str	r0, [r4, #4]
 8000f4c:	7265      	strb	r5, [r4, #9]
 8000f4e:	2201      	movs	r2, #1
 8000f50:	f841 3b20 	str.w	r3, [r1], #32
 8000f54:	f010 f87e 	bl	8011054 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000f58:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8000f5a:	4620      	mov	r0, r4
 8000f5c:	bd38      	pop	{r3, r4, r5, pc}
 8000f5e:	bf00      	nop
 8000f60:	0802b1bc 	.word	0x0802b1bc

08000f64 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000f64:	2001      	movs	r0, #1
 8000f66:	4770      	bx	lr

08000f68 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000f68:	2038      	movs	r0, #56	; 0x38
 8000f6a:	4770      	bx	lr

08000f6c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000f6c:	2338      	movs	r3, #56	; 0x38
 8000f6e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000f72:	3008      	adds	r0, #8
 8000f74:	4770      	bx	lr

08000f76 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000f76:	2338      	movs	r3, #56	; 0x38
 8000f78:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000f7c:	3008      	adds	r0, #8
 8000f7e:	4770      	bx	lr

08000f80 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000f80:	2001      	movs	r0, #1
 8000f82:	4770      	bx	lr

08000f84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000f84:	f241 30f4 	movw	r0, #5108	; 0x13f4
 8000f88:	4770      	bx	lr

08000f8a <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000f8a:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000f8e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000f92:	3008      	adds	r0, #8
 8000f94:	4770      	bx	lr

08000f96 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000f96:	f241 33f4 	movw	r3, #5108	; 0x13f4
 8000f9a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000f9e:	3008      	adds	r0, #8
 8000fa0:	4770      	bx	lr

08000fa2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000fa2:	2001      	movs	r0, #1
 8000fa4:	4770      	bx	lr

08000fa6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000fa6:	2010      	movs	r0, #16
 8000fa8:	4770      	bx	lr

08000faa <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000faa:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000fae:	3008      	adds	r0, #8
 8000fb0:	4770      	bx	lr

08000fb2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000fb2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000fb6:	3008      	adds	r0, #8
 8000fb8:	4770      	bx	lr

08000fba <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 8000fba:	4608      	mov	r0, r1
 8000fbc:	f002 bdec 	b.w	8003b98 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

08000fc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000fc0:	b510      	push	{r4, lr}
 8000fc2:	4b03      	ldr	r3, [pc, #12]	; (8000fd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000fc4:	6003      	str	r3, [r0, #0]
 8000fc6:	4604      	mov	r4, r0
 8000fc8:	f00e fce1 	bl	800f98e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000fcc:	4620      	mov	r0, r4
 8000fce:	bd10      	pop	{r4, pc}
 8000fd0:	0802b274 	.word	0x0802b274

08000fd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000fd4:	b510      	push	{r4, lr}
 8000fd6:	4604      	mov	r4, r0
 8000fd8:	f7ff fff2 	bl	8000fc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000fdc:	4620      	mov	r0, r4
 8000fde:	2140      	movs	r1, #64	; 0x40
 8000fe0:	f027 ffd1 	bl	8028f86 <_ZdlPvj>
 8000fe4:	4620      	mov	r0, r4
 8000fe6:	bd10      	pop	{r4, pc}

08000fe8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000fe8:	b510      	push	{r4, lr}
 8000fea:	4b03      	ldr	r3, [pc, #12]	; (8000ff8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000fec:	6003      	str	r3, [r0, #0]
 8000fee:	4604      	mov	r4, r0
 8000ff0:	f00e fccd 	bl	800f98e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ff4:	4620      	mov	r0, r4
 8000ff6:	bd10      	pop	{r4, pc}
 8000ff8:	0802b240 	.word	0x0802b240

08000ffc <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ffc:	b510      	push	{r4, lr}
 8000ffe:	4604      	mov	r4, r0
 8001000:	f7ff fff2 	bl	8000fe8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001004:	4620      	mov	r0, r4
 8001006:	f241 31fc 	movw	r1, #5116	; 0x13fc
 800100a:	f027 ffbc 	bl	8028f86 <_ZdlPvj>
 800100e:	4620      	mov	r0, r4
 8001010:	bd10      	pop	{r4, pc}
	...

08001014 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001014:	b510      	push	{r4, lr}
 8001016:	4b03      	ldr	r3, [pc, #12]	; (8001024 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001018:	6003      	str	r3, [r0, #0]
 800101a:	4604      	mov	r4, r0
 800101c:	f00e fcb7 	bl	800f98e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001020:	4620      	mov	r0, r4
 8001022:	bd10      	pop	{r4, pc}
 8001024:	0802b20c 	.word	0x0802b20c

08001028 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001028:	b510      	push	{r4, lr}
 800102a:	4604      	mov	r4, r0
 800102c:	f7ff fff2 	bl	8001014 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001030:	4620      	mov	r0, r4
 8001032:	2118      	movs	r1, #24
 8001034:	f027 ffa7 	bl	8028f86 <_ZdlPvj>
 8001038:	4620      	mov	r0, r4
 800103a:	bd10      	pop	{r4, pc}

0800103c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 800103c:	b510      	push	{r4, lr}
 800103e:	4b09      	ldr	r3, [pc, #36]	; (8001064 <_ZN12FrontendHeapD1Ev+0x28>)
 8001040:	6003      	str	r3, [r0, #0]
 8001042:	4604      	mov	r4, r0
 8001044:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8001048:	3008      	adds	r0, #8
 800104a:	f7ff ffb9 	bl	8000fc0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800104e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001052:	f7ff ffc9 	bl	8000fe8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001056:	f104 0014 	add.w	r0, r4, #20
 800105a:	f7ff ffdb 	bl	8001014 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800105e:	4620      	mov	r0, r4
 8001060:	bd10      	pop	{r4, pc}
 8001062:	bf00      	nop
 8001064:	0802b2a8 	.word	0x0802b2a8

08001068 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001068:	b508      	push	{r3, lr}
 800106a:	4802      	ldr	r0, [pc, #8]	; (8001074 <__tcf_0+0xc>)
 800106c:	f7ff ffe6 	bl	800103c <_ZN12FrontendHeapD1Ev>
 8001070:	bd08      	pop	{r3, pc}
 8001072:	bf00      	nop
 8001074:	200001b0 	.word	0x200001b0

08001078 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001078:	b510      	push	{r4, lr}
 800107a:	4604      	mov	r4, r0
 800107c:	f7ff ffde 	bl	800103c <_ZN12FrontendHeapD1Ev>
 8001080:	4620      	mov	r0, r4
 8001082:	f241 51cc 	movw	r1, #5580	; 0x15cc
 8001086:	f027 ff7e 	bl	8028f86 <_ZdlPvj>
 800108a:	4620      	mov	r0, r4
 800108c:	bd10      	pop	{r4, pc}
	...

08001090 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001090:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001094:	f001 fb72 	bl	800277c <_ZN14BitmapDatabase11getInstanceEv>
 8001098:	4605      	mov	r5, r0
 800109a:	f001 fb73 	bl	8002784 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800109e:	2400      	movs	r4, #0
 80010a0:	4601      	mov	r1, r0
 80010a2:	4623      	mov	r3, r4
 80010a4:	4628      	mov	r0, r5
 80010a6:	4622      	mov	r2, r4
 80010a8:	9400      	str	r4, [sp, #0]
 80010aa:	f017 faf3 	bl	8018694 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80010ae:	4b26      	ldr	r3, [pc, #152]	; (8001148 <touchgfx_init+0xb8>)
 80010b0:	4a26      	ldr	r2, [pc, #152]	; (800114c <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80010b2:	4d27      	ldr	r5, [pc, #156]	; (8001150 <touchgfx_init+0xc0>)
 80010b4:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80010b6:	4620      	mov	r0, r4
 80010b8:	f007 f936 	bl	8008328 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80010bc:	4825      	ldr	r0, [pc, #148]	; (8001154 <touchgfx_init+0xc4>)
 80010be:	f017 fa51 	bl	8018564 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80010c2:	682b      	ldr	r3, [r5, #0]
 80010c4:	f3bf 8f5b 	dmb	ish
 80010c8:	07db      	lsls	r3, r3, #31
 80010ca:	d436      	bmi.n	800113a <touchgfx_init+0xaa>
 80010cc:	4628      	mov	r0, r5
 80010ce:	f027 ff5c 	bl	8028f8a <__cxa_guard_acquire>
 80010d2:	b390      	cbz	r0, 800113a <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80010d4:	4c20      	ldr	r4, [pc, #128]	; (8001158 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
 80010d6:	4f21      	ldr	r7, [pc, #132]	; (800115c <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80010d8:	4b21      	ldr	r3, [pc, #132]	; (8001160 <touchgfx_init+0xd0>)
 80010da:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 80010dc:	f107 0648 	add.w	r6, r7, #72	; 0x48
        : presenterStorage(pres),
 80010e0:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80010e4:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 80010e8:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80010ea:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80010ee:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80010f0:	6126      	str	r6, [r4, #16]
 80010f2:	f00e fc4d 	bl	800f990 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80010f6:	4b1b      	ldr	r3, [pc, #108]	; (8001164 <touchgfx_init+0xd4>)
 80010f8:	6163      	str	r3, [r4, #20]
 80010fa:	4640      	mov	r0, r8
 80010fc:	f00e fc48 	bl	800f990 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001100:	4b19      	ldr	r3, [pc, #100]	; (8001168 <touchgfx_init+0xd8>)
 8001102:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001104:	4638      	mov	r0, r7
 8001106:	f00e fc43 	bl	800f990 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800110a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800110e:	4a17      	ldr	r2, [pc, #92]	; (800116c <touchgfx_init+0xdc>)
 8001110:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
 8001114:	f503 608d 	add.w	r0, r3, #1128	; 0x468
 8001118:	f007 fd58 	bl	8008bcc <_ZN5ModelC1Ev>
 800111c:	4622      	mov	r2, r4
 800111e:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8001122:	4630      	mov	r0, r6
 8001124:	f007 fa5a 	bl	80085dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001128:	4630      	mov	r0, r6
 800112a:	f002 fd35 	bl	8003b98 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800112e:	4810      	ldr	r0, [pc, #64]	; (8001170 <touchgfx_init+0xe0>)
 8001130:	f028 fd5a 	bl	8029be8 <atexit>
 8001134:	4628      	mov	r0, r5
 8001136:	f027 ff34 	bl	8028fa2 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800113a:	480e      	ldr	r0, [pc, #56]	; (8001174 <touchgfx_init+0xe4>)
}
 800113c:	b002      	add	sp, #8
 800113e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001142:	f7ff bdb5 	b.w	8000cb0 <_ZN11TouchGFXHAL10initializeEv>
 8001146:	bf00      	nop
 8001148:	20012ed8 	.word	0x20012ed8
 800114c:	20001840 	.word	0x20001840
 8001150:	200001ac 	.word	0x200001ac
 8001154:	20000008 	.word	0x20000008
 8001158:	200001b0 	.word	0x200001b0
 800115c:	200015d8 	.word	0x200015d8
 8001160:	0802b2a8 	.word	0x0802b2a8
 8001164:	0802b20c 	.word	0x0802b20c
 8001168:	0802b240 	.word	0x0802b240
 800116c:	0802b274 	.word	0x0802b274
 8001170:	08001069 	.word	0x08001069
 8001174:	200017c4 	.word	0x200017c4

08001178 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001178:	4770      	bx	lr
	...

0800117c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800117c:	4801      	ldr	r0, [pc, #4]	; (8001184 <touchgfx_taskEntry+0x8>)
 800117e:	f7ff bda5 	b.w	8000ccc <_ZN11TouchGFXHAL9taskEntryEv>
 8001182:	bf00      	nop
 8001184:	200017c4 	.word	0x200017c4

08001188 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001188:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800118a:	4e22      	ldr	r6, [pc, #136]	; (8001214 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 800118c:	4c22      	ldr	r4, [pc, #136]	; (8001218 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800118e:	4d23      	ldr	r5, [pc, #140]	; (800121c <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001190:	4b23      	ldr	r3, [pc, #140]	; (8001220 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001192:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001194:	4630      	mov	r0, r6
 8001196:	f7ff fed1 	bl	8000f3c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800119a:	4628      	mov	r0, r5
 800119c:	f01b fd46 	bl	801cc2c <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 80011a0:	4b20      	ldr	r3, [pc, #128]	; (8001224 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80011a2:	4821      	ldr	r0, [pc, #132]	; (8001228 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 80011a4:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 80011a6:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80011a8:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 80011ac:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 80011b0:	491e      	ldr	r1, [pc, #120]	; (800122c <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 80011b2:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 80011b4:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80011b8:	491d      	ldr	r1, [pc, #116]	; (8001230 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80011ba:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 80011bc:	491d      	ldr	r1, [pc, #116]	; (8001234 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80011be:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 80011c2:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80011c4:	21f0      	movs	r1, #240	; 0xf0
 80011c6:	8001      	strh	r1, [r0, #0]
 80011c8:	481b      	ldr	r0, [pc, #108]	; (8001238 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80011ca:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80011cc:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80011ce:	481b      	ldr	r0, [pc, #108]	; (800123c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80011d0:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80011d4:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80011d8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80011dc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80011e0:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80011e4:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80011e8:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80011ec:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80011f0:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80011f4:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80011f8:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80011fa:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80011fe:	8001      	strh	r1, [r0, #0]
 8001200:	480f      	ldr	r0, [pc, #60]	; (8001240 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8001202:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001204:	490f      	ldr	r1, [pc, #60]	; (8001244 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001206:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001208:	2201      	movs	r2, #1
 800120a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800120e:	4a0e      	ldr	r2, [pc, #56]	; (8001248 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001210:	601a      	str	r2, [r3, #0]
}
 8001212:	bd70      	pop	{r4, r5, r6, pc}
 8001214:	20001780 	.word	0x20001780
 8001218:	2000177c 	.word	0x2000177c
 800121c:	20001844 	.word	0x20001844
 8001220:	0802ad0c 	.word	0x0802ad0c
 8001224:	200017c4 	.word	0x200017c4
 8001228:	20012e68 	.word	0x20012e68
 800122c:	01000001 	.word	0x01000001
 8001230:	01010000 	.word	0x01010000
 8001234:	20012e74 	.word	0x20012e74
 8001238:	20012e6e 	.word	0x20012e6e
 800123c:	20012e6a 	.word	0x20012e6a
 8001240:	20012e70 	.word	0x20012e70
 8001244:	20012e6c 	.word	0x20012e6c
 8001248:	0802ae98 	.word	0x0802ae98

0800124c <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 800124c:	2000      	movs	r0, #0
 800124e:	4770      	bx	lr

08001250 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001250:	8081      	strh	r1, [r0, #4]
    }
 8001252:	4770      	bx	lr

08001254 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001254:	80c1      	strh	r1, [r0, #6]
    }
 8001256:	4770      	bx	lr

08001258 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001258:	8101      	strh	r1, [r0, #8]
    }
 800125a:	4770      	bx	lr

0800125c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 800125c:	8141      	strh	r1, [r0, #10]
    }
 800125e:	4770      	bx	lr

08001260 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001260:	4770      	bx	lr

08001262 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001262:	4770      	bx	lr

08001264 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001264:	4770      	bx	lr

08001266 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001266:	4770      	bx	lr

08001268 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001268:	4770      	bx	lr

0800126a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800126a:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 800126c:	88c4      	ldrh	r4, [r0, #6]
 800126e:	6803      	ldr	r3, [r0, #0]
 8001270:	1b12      	subs	r2, r2, r4
 8001272:	8884      	ldrh	r4, [r0, #4]
 8001274:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001276:	1b09      	subs	r1, r1, r4
 8001278:	b212      	sxth	r2, r2
    }
 800127a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800127e:	b209      	sxth	r1, r1
 8001280:	4718      	bx	r3

08001282 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001282:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001286:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001288:	f04f 33ff 	mov.w	r3, #4294967295
 800128c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800128e:	6813      	ldr	r3, [r2, #0]
 8001290:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001292:	6010      	str	r0, [r2, #0]
    }
 8001294:	4770      	bx	lr

08001296 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001296:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800129a:	b11a      	cbz	r2, 80012a4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800129c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80012a0:	b102      	cbz	r2, 80012a4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80012a2:	6018      	str	r0, [r3, #0]
        }
    }
 80012a4:	4770      	bx	lr

080012a6 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80012a6:	2000      	movs	r0, #0
 80012a8:	4770      	bx	lr

080012aa <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80012aa:	888b      	ldrh	r3, [r1, #4]
 80012ac:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80012ae:	2001      	movs	r0, #1
 80012b0:	4770      	bx	lr

080012b2 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80012b2:	4770      	bx	lr

080012b4 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80012b4:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80012b8:	4770      	bx	lr

080012ba <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80012ba:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80012be:	4770      	bx	lr

080012c0 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80012c0:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80012c2:	2200      	movs	r2, #0
        return rect.width;
 80012c4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80012c8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80012cc:	8002      	strh	r2, [r0, #0]
 80012ce:	8042      	strh	r2, [r0, #2]
 80012d0:	8084      	strh	r4, [r0, #4]
 80012d2:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80012d4:	bd10      	pop	{r4, pc}

080012d6 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80012d6:	2200      	movs	r2, #0
 80012d8:	8002      	strh	r2, [r0, #0]
 80012da:	8042      	strh	r2, [r0, #2]
 80012dc:	8082      	strh	r2, [r0, #4]
 80012de:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80012e0:	4770      	bx	lr
	...

080012e4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80012e4:	4b02      	ldr	r3, [pc, #8]	; (80012f0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80012e6:	2290      	movs	r2, #144	; 0x90
 80012e8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80012ec:	4770      	bx	lr
 80012ee:	bf00      	nop
 80012f0:	e000e100 	.word	0xe000e100

080012f4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80012f4:	4b02      	ldr	r3, [pc, #8]	; (8001300 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80012f6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80012fa:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80012fc:	4770      	bx	lr
 80012fe:	bf00      	nop
 8001300:	e000e100 	.word	0xe000e100

08001304 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001304:	4a09      	ldr	r2, [pc, #36]	; (800132c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001306:	490a      	ldr	r1, [pc, #40]	; (8001330 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001308:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800130a:	480a      	ldr	r0, [pc, #40]	; (8001334 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800130c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001310:	3b01      	subs	r3, #1
 8001312:	b29b      	uxth	r3, r3
 8001314:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001316:	6911      	ldr	r1, [r2, #16]
 8001318:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800131c:	3901      	subs	r1, #1
 800131e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001320:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001322:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001324:	f043 0301 	orr.w	r3, r3, #1
 8001328:	6353      	str	r3, [r2, #52]	; 0x34
}
 800132a:	4770      	bx	lr
 800132c:	40016800 	.word	0x40016800
 8001330:	200018ca 	.word	0x200018ca
 8001334:	200018c8 	.word	0x200018c8

08001338 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001338:	4b01      	ldr	r3, [pc, #4]	; (8001340 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800133a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800133e:	4770      	bx	lr
 8001340:	40016800 	.word	0x40016800

08001344 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001344:	4b02      	ldr	r3, [pc, #8]	; (8001350 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001346:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001348:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800134c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800134e:	4770      	bx	lr
 8001350:	40016800 	.word	0x40016800

08001354 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001354:	b570      	push	{r4, r5, r6, lr}
 8001356:	4604      	mov	r4, r0
    HAL::initialize();
 8001358:	f00e ffe5 	bl	8010326 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800135c:	6823      	ldr	r3, [r4, #0]
 800135e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001360:	f013 ff8e 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
 8001364:	4601      	mov	r1, r0
 8001366:	4620      	mov	r0, r4
 8001368:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800136a:	6823      	ldr	r3, [r4, #0]
 800136c:	4a05      	ldr	r2, [pc, #20]	; (8001384 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800136e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001372:	4620      	mov	r0, r4
 8001374:	46ac      	mov	ip, r5
 8001376:	2300      	movs	r3, #0
}
 8001378:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800137c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001380:	4760      	bx	ip
 8001382:	bf00      	nop
 8001384:	d004b000 	.word	0xd004b000

08001388 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001388:	f00e bfb4 	b.w	80102f4 <_ZN8touchgfx3HAL10beginFrameEv>

0800138c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 800138c:	f00e bfbe 	b.w	801030c <_ZN8touchgfx3HAL8endFrameEv>

08001390 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001390:	f00e bf7a 	b.w	8010288 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001394 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001394:	f00f b8db 	b.w	801054e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001398 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001398:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800139c:	b112      	cbz	r2, 80013a4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800139e:	6803      	ldr	r3, [r0, #0]
 80013a0:	695b      	ldr	r3, [r3, #20]
 80013a2:	4718      	bx	r3
    }
 80013a4:	4770      	bx	lr
	...

080013a8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013a8:	4b04      	ldr	r3, [pc, #16]	; (80013bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013aa:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80013ae:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80013b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013b6:	f3bf 8f6f 	isb	sy
}
 80013ba:	4770      	bx	lr
 80013bc:	e000e100 	.word	0xe000e100

080013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80013c0:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80013c2:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80013c4:	4e12      	ldr	r6, [pc, #72]	; (8001410 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80013c6:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80013c8:	4b12      	ldr	r3, [pc, #72]	; (8001414 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80013ca:	6003      	str	r3, [r0, #0]
 80013cc:	6833      	ldr	r3, [r6, #0]
 80013ce:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80013d2:	4605      	mov	r5, r0
 80013d4:	b10a      	cbz	r2, 80013da <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80013d6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80013d8:	b900      	cbnz	r0, 80013dc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80013da:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80013dc:	6803      	ldr	r3, [r0, #0]
 80013de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80013e0:	4798      	blx	r3
        return auxiliaryLCD;
 80013e2:	6833      	ldr	r3, [r6, #0]
 80013e4:	fab0 f480 	clz	r4, r0
 80013e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80013ea:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80013ec:	b130      	cbz	r0, 80013fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80013ee:	6803      	ldr	r3, [r0, #0]
 80013f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80013f2:	4798      	blx	r3
 80013f4:	2800      	cmp	r0, #0
 80013f6:	bf08      	it	eq
 80013f8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80013fc:	b92c      	cbnz	r4, 800140a <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80013fe:	4b06      	ldr	r3, [pc, #24]	; (8001418 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001400:	4a06      	ldr	r2, [pc, #24]	; (800141c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001402:	4807      	ldr	r0, [pc, #28]	; (8001420 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001404:	212c      	movs	r1, #44	; 0x2c
 8001406:	f028 fbd1 	bl	8029bac <__assert_func>
    }
 800140a:	4628      	mov	r0, r5
 800140c:	bd70      	pop	{r4, r5, r6, pc}
 800140e:	bf00      	nop
 8001410:	20012e74 	.word	0x20012e74
 8001414:	0802b3b8 	.word	0x0802b3b8
 8001418:	0802b2b4 	.word	0x0802b2b4
 800141c:	0802b312 	.word	0x0802b312
 8001420:	0802b34b 	.word	0x0802b34b

08001424 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8001424:	4770      	bx	lr
	...

08001428 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8001428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 800142c:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 800142e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 8001432:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8001436:	d105      	bne.n	8001444 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8001438:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 800143c:	4281      	cmp	r1, r0
 800143e:	d8fb      	bhi.n	8001438 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 8001440:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8001444:	4f17      	ldr	r7, [pc, #92]	; (80014a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001446:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800144a:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800144e:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001452:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001456:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8001458:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 800145a:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800145c:	b2db      	uxtb	r3, r3
 800145e:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8001460:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001464:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001468:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800146c:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001470:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8001474:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001478:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800147c:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001480:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001482:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001486:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800148a:	fb03 4e0e 	mla	lr, r3, lr, r4
 800148e:	fbbe fef5 	udiv	lr, lr, r5
 8001492:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001496:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800149a:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 800149e:	4281      	cmp	r1, r0
 80014a0:	d8de      	bhi.n	8001460 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 80014a2:	e7cd      	b.n	8001440 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 80014a4:	fffff800 	.word	0xfffff800

080014a8 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80014a8:	b510      	push	{r4, lr}
        return instance;
 80014aa:	4c14      	ldr	r4, [pc, #80]	; (80014fc <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 80014ac:	6823      	ldr	r3, [r4, #0]
 80014ae:	b323      	cbz	r3, 80014fa <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80014b0:	4b13      	ldr	r3, [pc, #76]	; (8001500 <HAL_LTDC_LineEventCallback+0x58>)
 80014b2:	4a14      	ldr	r2, [pc, #80]	; (8001504 <HAL_LTDC_LineEventCallback+0x5c>)
 80014b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80014b6:	8811      	ldrh	r1, [r2, #0]
 80014b8:	428b      	cmp	r3, r1
 80014ba:	d113      	bne.n	80014e4 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80014bc:	4b12      	ldr	r3, [pc, #72]	; (8001508 <HAL_LTDC_LineEventCallback+0x60>)
 80014be:	8819      	ldrh	r1, [r3, #0]
 80014c0:	f009 ff7c 	bl	800b3bc <HAL_LTDC_ProgramLineEvent>
 80014c4:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80014c6:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80014ca:	3301      	adds	r3, #1
 80014cc:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80014d0:	f7ff fce8 	bl	8000ea4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80014d4:	6820      	ldr	r0, [r4, #0]
 80014d6:	f00f fc65 	bl	8010da4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80014da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80014de:	2000      	movs	r0, #0
 80014e0:	f7ff bb60 	b.w	8000ba4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80014e4:	f009 ff6a 	bl	800b3bc <HAL_LTDC_ProgramLineEvent>
        return instance;
 80014e8:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80014ea:	6803      	ldr	r3, [r0, #0]
 80014ec:	6a1b      	ldr	r3, [r3, #32]
 80014ee:	4798      	blx	r3
    }
 80014f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80014f4:	2000      	movs	r0, #0
 80014f6:	f7ff bb6d 	b.w	8000bd4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80014fa:	bd10      	pop	{r4, pc}
 80014fc:	20012e74 	.word	0x20012e74
 8001500:	40016800 	.word	0x40016800
 8001504:	200018ca 	.word	0x200018ca
 8001508:	200018c8 	.word	0x200018c8

0800150c <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 800150c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001510:	ed2d 8b02 	vpush	{d8}
 8001514:	b091      	sub	sp, #68	; 0x44
 8001516:	af00      	add	r7, sp, #0
 8001518:	4605      	mov	r5, r0
 800151a:	4688      	mov	r8, r1
 800151c:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
    uint8_t buffer_size = MEAS_get_num_of_samples();
 800151e:	f000 fdb3 	bl	8002088 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 8001522:	b203      	sxth	r3, r0
 8001524:	60bb      	str	r3, [r7, #8]
 8001526:	009b      	lsls	r3, r3, #2
 8001528:	607b      	str	r3, [r7, #4]
 800152a:	3307      	adds	r3, #7
 800152c:	f023 0307 	bic.w	r3, r3, #7
 8001530:	ebad 0d03 	sub.w	sp, sp, r3
    uint8_t buffer_size = MEAS_get_num_of_samples();
 8001534:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8001536:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8001538:	b1f0      	cbz	r0, 8001578 <calculate_freq_and_signalstrength+0x6c>
 800153a:	3d01      	subs	r5, #1
 800153c:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800153e:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 8001540:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8001542:	f000 fd9f 	bl	8002084 <MEAS_get_num_of_chan>
 8001546:	fb06 5000 	mla	r0, r6, r0, r5
 800154a:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 800154e:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 8001552:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 8001554:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 8001558:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800155a:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 800155e:	d1f0      	bne.n	8001542 <calculate_freq_and_signalstrength+0x36>
 8001560:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 8001562:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001610 <calculate_freq_and_signalstrength+0x104>
 8001566:	4456      	add	r6, sl
 8001568:	edd9 7a00 	vldr	s15, [r9]
 800156c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001570:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 8001574:	454e      	cmp	r6, r9
 8001576:	d1f7      	bne.n	8001568 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 8001578:	68bb      	ldr	r3, [r7, #8]
 800157a:	466a      	mov	r2, sp
 800157c:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8001580:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001582:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001586:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 8001588:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800158a:	b2a1      	uxth	r1, r4
 800158c:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001590:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001594:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 8001598:	f026 fc34 	bl	8027e04 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 800159c:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 800159e:	2300      	movs	r3, #0
 80015a0:	4651      	mov	r1, sl
 80015a2:	f107 0028 	add.w	r0, r7, #40	; 0x28
 80015a6:	462a      	mov	r2, r5
 80015a8:	f026 fcb0 	bl	8027f0c <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80015ac:	4622      	mov	r2, r4
 80015ae:	4629      	mov	r1, r5
 80015b0:	4628      	mov	r0, r5
 80015b2:	f027 f919 	bl	80287e8 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80015b6:	f000 fd69 	bl	800208c <MEAS_get_samp_freq>
 80015ba:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80015be:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 80015c2:	edd9 7a00 	vldr	s15, [r9]
 80015c6:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 80015ca:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80015ce:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 80015d2:	f107 021c 	add.w	r2, r7, #28
 80015d6:	4621      	mov	r1, r4
 80015d8:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80015da:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 80015de:	f026 fba9 	bl	8027d34 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 80015e2:	edd7 7a06 	vldr	s15, [r7, #24]
 80015e6:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 80015ea:	f000 fd4f 	bl	800208c <MEAS_get_samp_freq>
 80015ee:	ee07 0a90 	vmov	s15, r0
 80015f2:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 80015f6:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 80015fa:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 80015fe:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001600:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8001604:	46bd      	mov	sp, r7
 8001606:	ecbd 8b02 	vpop	{d8}
 800160a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800160e:	bf00      	nop
 8001610:	44fff000 	.word	0x44fff000

08001614 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001614:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001616:	2064      	movs	r0, #100	; 0x64
 8001618:	f00b fc2a 	bl	800ce70 <osDelay>
  for(;;)
 800161c:	e7fb      	b.n	8001616 <StartDefaultTask+0x2>
 800161e:	bf00      	nop

08001620 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 8001620:	b580      	push	{r7, lr}
 8001622:	4c10      	ldr	r4, [pc, #64]	; (8001664 <StartTimeoutTask+0x44>)
 8001624:	f8df 8048 	ldr.w	r8, [pc, #72]	; 8001670 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001628:	4f0f      	ldr	r7, [pc, #60]	; (8001668 <StartTimeoutTask+0x48>)
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;


	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 800162a:	4e10      	ldr	r6, [pc, #64]	; (800166c <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 800162c:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800162e:	2300      	movs	r3, #0
 8001630:	461a      	mov	r2, r3
 8001632:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8001634:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8001636:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 800163a:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800163c:	f00b fd14 	bl	800d068 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 8001640:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 8001642:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8001644:	4638      	mov	r0, r7
 8001646:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 8001648:	b912      	cbnz	r2, 8001650 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 800164a:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 800164c:	f008 f89a 	bl	8009784 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8001650:	4630      	mov	r0, r6
 8001652:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001656:	f008 f899 	bl	800978c <HAL_GPIO_TogglePin>

	  osDelay(1000);
 800165a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800165e:	f00b fc07 	bl	800ce70 <osDelay>
	  sleep_timeout_value--;
 8001662:	e7e3      	b.n	800162c <StartTimeoutTask+0xc>
 8001664:	20000014 	.word	0x20000014
 8001668:	40021000 	.word	0x40021000
 800166c:	40021800 	.word	0x40021800
 8001670:	200018d4 	.word	0x200018d4

08001674 <updateGUI_test>:
	return sleep_timeout_value;
 8001674:	4b01      	ldr	r3, [pc, #4]	; (800167c <updateGUI_test+0x8>)
}
 8001676:	6818      	ldr	r0, [r3, #0]
 8001678:	4770      	bx	lr
 800167a:	bf00      	nop
 800167c:	20000014 	.word	0x20000014

08001680 <SystemClock_Config>:
{
 8001680:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001682:	2400      	movs	r4, #0
{
 8001684:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001686:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 800168a:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800168e:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8001692:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001696:	4a1e      	ldr	r2, [pc, #120]	; (8001710 <SystemClock_Config+0x90>)
 8001698:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800169a:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 800169c:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800169e:	4b1d      	ldr	r3, [pc, #116]	; (8001714 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80016a0:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80016a4:	6411      	str	r1, [r2, #64]	; 0x40
 80016a6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80016a8:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80016ac:	9201      	str	r2, [sp, #4]
 80016ae:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80016b0:	9402      	str	r4, [sp, #8]
 80016b2:	681a      	ldr	r2, [r3, #0]
 80016b4:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80016b8:	601a      	str	r2, [r3, #0]
 80016ba:	681b      	ldr	r3, [r3, #0]
 80016bc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80016c0:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80016c2:	2201      	movs	r2, #1
 80016c4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016c8:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80016cc:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80016ce:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80016d0:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80016d2:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80016d6:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80016da:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80016de:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80016e0:	2202      	movs	r2, #2
 80016e2:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80016e4:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80016e6:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80016ea:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80016ec:	f009 fe88 	bl	800b400 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80016f0:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80016f2:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80016f6:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80016fa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80016fe:	a803      	add	r0, sp, #12
 8001700:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001702:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001706:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001708:	f00a f892 	bl	800b830 <HAL_RCC_ClockConfig>
}
 800170c:	b015      	add	sp, #84	; 0x54
 800170e:	bd30      	pop	{r4, r5, pc}
 8001710:	40023800 	.word	0x40023800
 8001714:	40007000 	.word	0x40007000

08001718 <main>:
{
 8001718:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800171c:	2400      	movs	r4, #0
{
 800171e:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8001720:	f007 fda2 	bl	8009268 <HAL_Init>
  SystemClock_Config();
 8001724:	f7ff ffac 	bl	8001680 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001728:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 800172c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001730:	4bc1      	ldr	r3, [pc, #772]	; (8001a38 <main+0x320>)
 8001732:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001734:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001736:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001738:	48c0      	ldr	r0, [pc, #768]	; (8001a3c <main+0x324>)
  hi2c3.Instance = I2C3;
 800173a:	4dc1      	ldr	r5, [pc, #772]	; (8001a40 <main+0x328>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800173c:	f041 0110 	orr.w	r1, r1, #16
 8001740:	6319      	str	r1, [r3, #48]	; 0x30
 8001742:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001744:	f001 0110 	and.w	r1, r1, #16
 8001748:	9100      	str	r1, [sp, #0]
 800174a:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800174c:	9401      	str	r4, [sp, #4]
 800174e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001750:	f041 0120 	orr.w	r1, r1, #32
 8001754:	6319      	str	r1, [r3, #48]	; 0x30
 8001756:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001758:	f001 0120 	and.w	r1, r1, #32
 800175c:	9101      	str	r1, [sp, #4]
 800175e:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001760:	9402      	str	r4, [sp, #8]
 8001762:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001764:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001768:	6319      	str	r1, [r3, #48]	; 0x30
 800176a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800176c:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8001770:	9102      	str	r1, [sp, #8]
 8001772:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001774:	9403      	str	r4, [sp, #12]
 8001776:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001778:	f041 0104 	orr.w	r1, r1, #4
 800177c:	6319      	str	r1, [r3, #48]	; 0x30
 800177e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001780:	f001 0104 	and.w	r1, r1, #4
 8001784:	9103      	str	r1, [sp, #12]
 8001786:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001788:	9404      	str	r4, [sp, #16]
 800178a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800178c:	f041 0101 	orr.w	r1, r1, #1
 8001790:	6319      	str	r1, [r3, #48]	; 0x30
 8001792:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001794:	f001 0101 	and.w	r1, r1, #1
 8001798:	9104      	str	r1, [sp, #16]
 800179a:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800179c:	9405      	str	r4, [sp, #20]
 800179e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017a0:	f041 0102 	orr.w	r1, r1, #2
 80017a4:	6319      	str	r1, [r3, #48]	; 0x30
 80017a6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017a8:	f001 0102 	and.w	r1, r1, #2
 80017ac:	9105      	str	r1, [sp, #20]
 80017ae:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80017b0:	9406      	str	r4, [sp, #24]
 80017b2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017b4:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80017b8:	6319      	str	r1, [r3, #48]	; 0x30
 80017ba:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017bc:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80017c0:	9106      	str	r1, [sp, #24]
 80017c2:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017c4:	9407      	str	r4, [sp, #28]
 80017c6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80017c8:	f041 0108 	orr.w	r1, r1, #8
 80017cc:	6319      	str	r1, [r3, #48]	; 0x30
 80017ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017d0:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017d4:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017d6:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017d8:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80017da:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80017dc:	f007 ffd2 	bl	8009784 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80017e0:	4896      	ldr	r0, [pc, #600]	; (8001a3c <main+0x324>)
 80017e2:	2120      	movs	r1, #32
 80017e4:	2201      	movs	r2, #1
 80017e6:	f007 ffcd 	bl	8009784 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80017ea:	4896      	ldr	r0, [pc, #600]	; (8001a44 <main+0x32c>)
 80017ec:	4622      	mov	r2, r4
 80017ee:	2104      	movs	r1, #4
 80017f0:	f007 ffc8 	bl	8009784 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80017f4:	4894      	ldr	r0, [pc, #592]	; (8001a48 <main+0x330>)
 80017f6:	4622      	mov	r2, r4
 80017f8:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80017fc:	f007 ffc2 	bl	8009784 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001800:	2201      	movs	r2, #1
 8001802:	4892      	ldr	r0, [pc, #584]	; (8001a4c <main+0x334>)
 8001804:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001808:	f007 ffbc 	bl	8009784 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800180c:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800180e:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8001812:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001814:	4889      	ldr	r0, [pc, #548]	; (8001a3c <main+0x324>)
 8001816:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001818:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800181c:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001820:	e9cd 4911 	strd	r4, r9, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001824:	f007 fe6a 	bl	80094fc <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001828:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 800182c:	4883      	ldr	r0, [pc, #524]	; (8001a3c <main+0x324>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800182e:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001832:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001834:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001836:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001838:	f007 fe60 	bl	80094fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 800183c:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800183e:	487f      	ldr	r0, [pc, #508]	; (8001a3c <main+0x324>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001840:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001842:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001844:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001846:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800184a:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800184e:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001850:	f007 fe54 	bl	80094fc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001854:	487b      	ldr	r0, [pc, #492]	; (8001a44 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001856:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800185a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800185c:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001860:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001862:	f007 fe4b 	bl	80094fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8001866:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800186a:	4877      	ldr	r0, [pc, #476]	; (8001a48 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800186c:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800186e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001870:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001874:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001876:	f007 fe41 	bl	80094fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 800187a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800187e:	4874      	ldr	r0, [pc, #464]	; (8001a50 <main+0x338>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001880:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001882:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8001884:	230f      	movs	r3, #15
 8001886:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001888:	f44f 5b00 	mov.w	fp, #8192	; 0x2000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800188c:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001890:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001892:	f007 fe33 	bl	80094fc <HAL_GPIO_Init>
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 8001896:	486d      	ldr	r0, [pc, #436]	; (8001a4c <main+0x334>)
  GPIO_InitStruct.Pin = DEVICE_ON_Pin;
 8001898:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 800189c:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800189e:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018a2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEVICE_ON_GPIO_Port, &GPIO_InitStruct);
 80018a4:	f007 fe2a 	bl	80094fc <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 80018a8:	4622      	mov	r2, r4
 80018aa:	2105      	movs	r1, #5
 80018ac:	2009      	movs	r0, #9
 80018ae:	f007 fd2b 	bl	8009308 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80018b2:	2009      	movs	r0, #9
 80018b4:	f007 fd66 	bl	8009384 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 80018b8:	4866      	ldr	r0, [pc, #408]	; (8001a54 <main+0x33c>)
 80018ba:	4b67      	ldr	r3, [pc, #412]	; (8001a58 <main+0x340>)
 80018bc:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80018be:	f007 fd6f 	bl	80093a0 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80018c2:	4966      	ldr	r1, [pc, #408]	; (8001a5c <main+0x344>)
 80018c4:	4b66      	ldr	r3, [pc, #408]	; (8001a60 <main+0x348>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80018c6:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 80018c8:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80018cc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80018d0:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80018d2:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 80018d6:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80018da:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80018de:	f008 f9b7 	bl	8009c50 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80018e2:	2110      	movs	r1, #16
 80018e4:	4628      	mov	r0, r5
 80018e6:	f009 fb7f 	bl	800afe8 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80018ea:	4621      	mov	r1, r4
 80018ec:	4628      	mov	r0, r5
 80018ee:	f009 fb9b 	bl	800b028 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80018f2:	f8df c184 	ldr.w	ip, [pc, #388]	; 8001a78 <main+0x360>
  hspi5.Instance = SPI5;
 80018f6:	485b      	ldr	r0, [pc, #364]	; (8001a64 <main+0x34c>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80018f8:	4d5b      	ldr	r5, [pc, #364]	; (8001a68 <main+0x350>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80018fa:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80018fc:	f44f 7382 	mov.w	r3, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001900:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001904:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001908:	2318      	movs	r3, #24
 800190a:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 800190e:	230a      	movs	r3, #10
 8001910:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001912:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001916:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800191a:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800191e:	f00a fa75 	bl	800be0c <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001922:	2307      	movs	r3, #7
 8001924:	9310      	str	r3, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8001926:	9312      	str	r3, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001928:	4b50      	ldr	r3, [pc, #320]	; (8001a6c <main+0x354>)
 800192a:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800192c:	2040      	movs	r0, #64	; 0x40
 800192e:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8001932:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001936:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800193a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 800193e:	f04f 0b10 	mov.w	fp, #16
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001942:	a90f      	add	r1, sp, #60	; 0x3c
 8001944:	4628      	mov	r0, r5
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001946:	622b      	str	r3, [r5, #32]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001948:	f8c5 a00c 	str.w	sl, [r5, #12]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 800194c:	e9c5 6401 	strd	r6, r4, [r5, #4]
  SdramTiming.RPDelay = 2;
 8001950:	e9cd 9713 	strd	r9, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001954:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001956:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8001958:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 800195c:	f8c5 b010 	str.w	fp, [r5, #16]
  SdramTiming.LoadToActiveDelay = 2;
 8001960:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 8001962:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001964:	f00a f960 	bl	800bc28 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001968:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800196c:	a90b      	add	r1, sp, #44	; 0x2c
 800196e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001970:	e9cd 680b 	strd	r6, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001974:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8001978:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800197a:	f00a f977 	bl	800bc6c <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800197e:	4630      	mov	r0, r6
 8001980:	f007 fc9e 	bl	80092c0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001984:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001988:	a90b      	add	r1, sp, #44	; 0x2c
 800198a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800198c:	e9cd 780b 	strd	r7, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8001990:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001994:	f00a f96a 	bl	800bc6c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001998:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800199c:	a90b      	add	r1, sp, #44	; 0x2c
 800199e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019a0:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 80019a4:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019a8:	f00a f960 	bl	800bc6c <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80019ac:	f44f 730c 	mov.w	r3, #560	; 0x230
 80019b0:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80019b2:	9b08      	ldr	r3, [sp, #32]
 80019b4:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019b6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80019ba:	a90b      	add	r1, sp, #44	; 0x2c
 80019bc:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80019be:	e9cd a80b 	strd	sl, r8, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 80019c2:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80019c4:	f00a f952 	bl	800bc6c <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80019c8:	4628      	mov	r0, r5
 80019ca:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 80019ce:	4d28      	ldr	r5, [pc, #160]	; (8001a70 <main+0x358>)
  htim3.Instance = TIM3;
 80019d0:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 8001a7c <main+0x364>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80019d4:	f00a f968 	bl	800bca8 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80019d8:	2234      	movs	r2, #52	; 0x34
 80019da:	4621      	mov	r1, r4
 80019dc:	a80f      	add	r0, sp, #60	; 0x3c
 80019de:	f028 faea 	bl	8029fb6 <memset>
  hltdc.Instance = LTDC;
 80019e2:	4b24      	ldr	r3, [pc, #144]	; (8001a74 <main+0x35c>)
 80019e4:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 80019e6:	2309      	movs	r3, #9
 80019e8:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80019ea:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedVBP = 3;
 80019ec:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 80019f0:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80019f2:	f240 190d 	movw	r9, #269	; 0x10d
 80019f6:	f240 1343 	movw	r3, #323	; 0x143
 80019fa:	e9c5 9309 	strd	r9, r3, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 80019fe:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8001a00:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a04:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001a06:	f240 1a17 	movw	sl, #279	; 0x117
 8001a0a:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001a0e:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001a12:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.VerticalSync = 1;
 8001a16:	61ae      	str	r6, [r5, #24]
  hltdc.Init.Backcolor.Red = 0;
 8001a18:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001a1c:	f009 fb28 	bl	800b070 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 8001a20:	23f0      	movs	r3, #240	; 0xf0
 8001a22:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8001a24:	9319      	str	r3, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8001a26:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8001a2a:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8001a2c:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8001a2e:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001a30:	f44f 6c80 	mov.w	ip, #1024	; 0x400
 8001a34:	e024      	b.n	8001a80 <main+0x368>
 8001a36:	bf00      	nop
 8001a38:	40023800 	.word	0x40023800
 8001a3c:	40021000 	.word	0x40021000
 8001a40:	20001928 	.word	0x20001928
 8001a44:	40020800 	.word	0x40020800
 8001a48:	40020c00 	.word	0x40020c00
 8001a4c:	40021800 	.word	0x40021800
 8001a50:	40020000 	.word	0x40020000
 8001a54:	200018e0 	.word	0x200018e0
 8001a58:	40023000 	.word	0x40023000
 8001a5c:	40005c00 	.word	0x40005c00
 8001a60:	000186a0 	.word	0x000186a0
 8001a64:	20001a58 	.word	0x20001a58
 8001a68:	20001a24 	.word	0x20001a24
 8001a6c:	a0000140 	.word	0xa0000140
 8001a70:	2000197c 	.word	0x2000197c
 8001a74:	40016800 	.word	0x40016800
 8001a78:	40015000 	.word	0x40015000
 8001a7c:	20001af8 	.word	0x20001af8
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001a80:	4622      	mov	r2, r4
 8001a82:	a90f      	add	r1, sp, #60	; 0x3c
 8001a84:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 8001a86:	9314      	str	r3, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001a88:	2305      	movs	r3, #5
 8001a8a:	e9cd c316 	strd	ip, r3, [sp, #88]	; 0x58
  LcdDrv = &ili9341_drv;
 8001a8e:	4d4e      	ldr	r5, [pc, #312]	; (8001bc8 <main+0x4b0>)
  pLayerCfg.WindowX0 = 0;
 8001a90:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.WindowY0 = 0;
 8001a92:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001a94:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 8001a96:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8001a98:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8001a9a:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8001a9e:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001aa2:	f009 fbbb 	bl	800b21c <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001aa6:	4b49      	ldr	r3, [pc, #292]	; (8001bcc <main+0x4b4>)
 8001aa8:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001aaa:	681b      	ldr	r3, [r3, #0]
 8001aac:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001aae:	682b      	ldr	r3, [r5, #0]
  htim1.Instance = TIM1;
 8001ab0:	4d47      	ldr	r5, [pc, #284]	; (8001bd0 <main+0x4b8>)
  LcdDrv->DisplayOff();
 8001ab2:	68db      	ldr	r3, [r3, #12]
 8001ab4:	4798      	blx	r3
  htim1.Init.Period = 65535;
 8001ab6:	f64f 79ff 	movw	r9, #65535	; 0xffff
  htim1.Instance = TIM1;
 8001aba:	4b46      	ldr	r3, [pc, #280]	; (8001bd4 <main+0x4bc>)
 8001abc:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001abe:	4628      	mov	r0, r5
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001ac0:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim1.Init.RepetitionCounter = 0;
 8001ac4:	e9c5 4404 	strd	r4, r4, [r5, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001ac8:	61ac      	str	r4, [r5, #24]
  htim1.Init.Period = 65535;
 8001aca:	f8c5 900c 	str.w	r9, [r5, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001ace:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001ad2:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001ad6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001ada:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8001adc:	f00a fd86 	bl	800c5ec <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001ae0:	a90f      	add	r1, sp, #60	; 0x3c
 8001ae2:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001ae4:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8001ae8:	f00a fefa 	bl	800c8e0 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001aec:	a90b      	add	r1, sp, #44	; 0x2c
 8001aee:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001af0:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001af4:	f00b f832 	bl	800cb5c <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8001af8:	4b37      	ldr	r3, [pc, #220]	; (8001bd8 <main+0x4c0>)
 8001afa:	f8c8 3000 	str.w	r3, [r8]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001afe:	4640      	mov	r0, r8
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b00:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8001b04:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001b08:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8001b0c:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b10:	e9c8 4401 	strd	r4, r4, [r8, #4]
  htim3.Init.Period = 65535;
 8001b14:	f8c8 900c 	str.w	r9, [r8, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001b18:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001b1a:	9409      	str	r4, [sp, #36]	; 0x24
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b1c:	f8c8 4010 	str.w	r4, [r8, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001b20:	f8c8 4018 	str.w	r4, [r8, #24]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001b24:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001b26:	f00a fd61 	bl	800c5ec <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b2a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001b2e:	a90b      	add	r1, sp, #44	; 0x2c
 8001b30:	4640      	mov	r0, r8
  hdma2d.Instance = DMA2D;
 8001b32:	4d2a      	ldr	r5, [pc, #168]	; (8001bdc <main+0x4c4>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001b34:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8001b36:	f00a fe23 	bl	800c780 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001b3a:	a90f      	add	r1, sp, #60	; 0x3c
 8001b3c:	4640      	mov	r0, r8
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8001b3e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8001b42:	f00a fecd 	bl	800c8e0 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001b46:	a909      	add	r1, sp, #36	; 0x24
 8001b48:	4640      	mov	r0, r8
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001b4a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8001b4e:	f00b f805 	bl	800cb5c <HAL_TIMEx_MasterConfigSynchronization>
  hdma2d.Instance = DMA2D;
 8001b52:	4b23      	ldr	r3, [pc, #140]	; (8001be0 <main+0x4c8>)
 8001b54:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001b56:	e9c5 440a 	strd	r4, r4, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001b5a:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001b5e:	4628      	mov	r0, r5
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 8001b60:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hdma2d.Init.OutputOffset = 0;
 8001b64:	60ec      	str	r4, [r5, #12]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001b66:	f007 fc45 	bl	80093f4 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001b6a:	4631      	mov	r1, r6
 8001b6c:	4628      	mov	r0, r5
 8001b6e:	f007 fc6f 	bl	8009450 <HAL_DMA2D_ConfigLayer>
  MX_TouchGFX_Init();
 8001b72:	f7fe ff53 	bl	8000a1c <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001b76:	f7fe ff4f 	bl	8000a18 <MX_TouchGFX_PreOSInit>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001b7a:	f000 f94b 	bl	8001e14 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001b7e:	f000 f97d 	bl	8001e7c <MEAS_timer_init>
  osKernelInitialize();
 8001b82:	f00b f8fd 	bl	800cd80 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001b86:	4a17      	ldr	r2, [pc, #92]	; (8001be4 <main+0x4cc>)
 8001b88:	4639      	mov	r1, r7
 8001b8a:	4658      	mov	r0, fp
 8001b8c:	f00b fa32 	bl	800cff4 <osMessageQueueNew>
 8001b90:	4b15      	ldr	r3, [pc, #84]	; (8001be8 <main+0x4d0>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001b92:	4a16      	ldr	r2, [pc, #88]	; (8001bec <main+0x4d4>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 8001b94:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001b96:	4621      	mov	r1, r4
 8001b98:	4815      	ldr	r0, [pc, #84]	; (8001bf0 <main+0x4d8>)
 8001b9a:	f00b f91d 	bl	800cdd8 <osThreadNew>
 8001b9e:	4b15      	ldr	r3, [pc, #84]	; (8001bf4 <main+0x4dc>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001ba0:	4a15      	ldr	r2, [pc, #84]	; (8001bf8 <main+0x4e0>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8001ba2:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001ba4:	4621      	mov	r1, r4
 8001ba6:	4815      	ldr	r0, [pc, #84]	; (8001bfc <main+0x4e4>)
 8001ba8:	f00b f916 	bl	800cdd8 <osThreadNew>
 8001bac:	4b14      	ldr	r3, [pc, #80]	; (8001c00 <main+0x4e8>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001bae:	4a15      	ldr	r2, [pc, #84]	; (8001c04 <main+0x4ec>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001bb0:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001bb2:	4621      	mov	r1, r4
 8001bb4:	4814      	ldr	r0, [pc, #80]	; (8001c08 <main+0x4f0>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001bb6:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001bb8:	f00b f90e 	bl	800cdd8 <osThreadNew>
 8001bbc:	4b13      	ldr	r3, [pc, #76]	; (8001c0c <main+0x4f4>)
 8001bbe:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001bc0:	f00b f8f0 	bl	800cda4 <osKernelStart>
  while (1)
 8001bc4:	e7fe      	b.n	8001bc4 <main+0x4ac>
 8001bc6:	bf00      	nop
 8001bc8:	200018d0 	.word	0x200018d0
 8001bcc:	20000018 	.word	0x20000018
 8001bd0:	20001ab0 	.word	0x20001ab0
 8001bd4:	40010000 	.word	0x40010000
 8001bd8:	40000400 	.word	0x40000400
 8001bdc:	200018e8 	.word	0x200018e8
 8001be0:	4002b000 	.word	0x4002b000
 8001be4:	0802b428 	.word	0x0802b428
 8001be8:	200018d4 	.word	0x200018d4
 8001bec:	0802b464 	.word	0x0802b464
 8001bf0:	08001615 	.word	0x08001615
 8001bf4:	200018dc 	.word	0x200018dc
 8001bf8:	0802b404 	.word	0x0802b404
 8001bfc:	08000a2d 	.word	0x08000a2d
 8001c00:	200018cc 	.word	0x200018cc
 8001c04:	0802b440 	.word	0x0802b440
 8001c08:	08001621 	.word	0x08001621
 8001c0c:	200018d8 	.word	0x200018d8

08001c10 <IOE_Init>:
 8001c10:	4770      	bx	lr
 8001c12:	bf00      	nop

08001c14 <IOE_ITConfig>:
 8001c14:	4770      	bx	lr
 8001c16:	bf00      	nop

08001c18 <IOE_Write>:
{
 8001c18:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001c1a:	4c09      	ldr	r4, [pc, #36]	; (8001c40 <IOE_Write+0x28>)
{
 8001c1c:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001c1e:	6824      	ldr	r4, [r4, #0]
 8001c20:	9402      	str	r4, [sp, #8]
{
 8001c22:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001c24:	2301      	movs	r3, #1
 8001c26:	f88d 4017 	strb.w	r4, [sp, #23]
 8001c2a:	f10d 0417 	add.w	r4, sp, #23
 8001c2e:	460a      	mov	r2, r1
 8001c30:	9301      	str	r3, [sp, #4]
 8001c32:	4601      	mov	r1, r0
 8001c34:	9400      	str	r4, [sp, #0]
 8001c36:	4803      	ldr	r0, [pc, #12]	; (8001c44 <IOE_Write+0x2c>)
 8001c38:	f008 f8d2 	bl	8009de0 <HAL_I2C_Mem_Write>
}
 8001c3c:	b006      	add	sp, #24
 8001c3e:	bd10      	pop	{r4, pc}
 8001c40:	2000000c 	.word	0x2000000c
 8001c44:	20001928 	.word	0x20001928

08001c48 <IOE_Read>:
{
 8001c48:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001c4a:	4b0b      	ldr	r3, [pc, #44]	; (8001c78 <IOE_Read+0x30>)
{
 8001c4c:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	9302      	str	r3, [sp, #8]
{
 8001c52:	4684      	mov	ip, r0
 8001c54:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001c56:	2301      	movs	r3, #1
 8001c58:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001c5c:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001c5e:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001c62:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001c66:	4661      	mov	r1, ip
 8001c68:	4804      	ldr	r0, [pc, #16]	; (8001c7c <IOE_Read+0x34>)
 8001c6a:	f008 f9ab 	bl	8009fc4 <HAL_I2C_Mem_Read>
}
 8001c6e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001c72:	b007      	add	sp, #28
 8001c74:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c78:	2000000c 	.word	0x2000000c
 8001c7c:	20001928 	.word	0x20001928

08001c80 <IOE_ReadMultiple>:
{
 8001c80:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001c82:	4c09      	ldr	r4, [pc, #36]	; (8001ca8 <IOE_ReadMultiple+0x28>)
{
 8001c84:	b084      	sub	sp, #16
 8001c86:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001c88:	6820      	ldr	r0, [r4, #0]
 8001c8a:	9002      	str	r0, [sp, #8]
 8001c8c:	e9cd 2300 	strd	r2, r3, [sp]
 8001c90:	4806      	ldr	r0, [pc, #24]	; (8001cac <IOE_ReadMultiple+0x2c>)
 8001c92:	460a      	mov	r2, r1
 8001c94:	2301      	movs	r3, #1
 8001c96:	4661      	mov	r1, ip
 8001c98:	f008 f994 	bl	8009fc4 <HAL_I2C_Mem_Read>
}
 8001c9c:	3800      	subs	r0, #0
 8001c9e:	bf18      	it	ne
 8001ca0:	2001      	movne	r0, #1
 8001ca2:	b004      	add	sp, #16
 8001ca4:	bd10      	pop	{r4, pc}
 8001ca6:	bf00      	nop
 8001ca8:	2000000c 	.word	0x2000000c
 8001cac:	20001928 	.word	0x20001928

08001cb0 <IOE_Delay>:
 8001cb0:	f007 bb06 	b.w	80092c0 <HAL_Delay>

08001cb4 <LCD_IO_Init>:
{
 8001cb4:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001cb6:	4806      	ldr	r0, [pc, #24]	; (8001cd0 <LCD_IO_Init+0x1c>)
 8001cb8:	2200      	movs	r2, #0
 8001cba:	2104      	movs	r1, #4
 8001cbc:	f007 fd62 	bl	8009784 <HAL_GPIO_WritePin>
}
 8001cc0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001cc4:	4802      	ldr	r0, [pc, #8]	; (8001cd0 <LCD_IO_Init+0x1c>)
 8001cc6:	2201      	movs	r2, #1
 8001cc8:	2104      	movs	r1, #4
 8001cca:	f007 bd5b 	b.w	8009784 <HAL_GPIO_WritePin>
 8001cce:	bf00      	nop
 8001cd0:	40020800 	.word	0x40020800

08001cd4 <LCD_IO_WriteData>:
{
 8001cd4:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001cd6:	4d10      	ldr	r5, [pc, #64]	; (8001d18 <LCD_IO_WriteData+0x44>)
{
 8001cd8:	b083      	sub	sp, #12
 8001cda:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001cdc:	2201      	movs	r2, #1
 8001cde:	480f      	ldr	r0, [pc, #60]	; (8001d1c <LCD_IO_WriteData+0x48>)
 8001ce0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ce4:	f007 fd4e 	bl	8009784 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ce8:	4628      	mov	r0, r5
 8001cea:	2200      	movs	r2, #0
 8001cec:	2104      	movs	r1, #4
 8001cee:	f007 fd49 	bl	8009784 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001cf2:	4b0b      	ldr	r3, [pc, #44]	; (8001d20 <LCD_IO_WriteData+0x4c>)
 8001cf4:	480b      	ldr	r0, [pc, #44]	; (8001d24 <LCD_IO_WriteData+0x50>)
 8001cf6:	681b      	ldr	r3, [r3, #0]
 8001cf8:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001cfc:	f10d 0106 	add.w	r1, sp, #6
 8001d00:	2201      	movs	r2, #1
 8001d02:	f00a f8e5 	bl	800bed0 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d06:	2201      	movs	r2, #1
 8001d08:	2104      	movs	r1, #4
 8001d0a:	4628      	mov	r0, r5
}
 8001d0c:	b003      	add	sp, #12
 8001d0e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d12:	f007 bd37 	b.w	8009784 <HAL_GPIO_WritePin>
 8001d16:	bf00      	nop
 8001d18:	40020800 	.word	0x40020800
 8001d1c:	40020c00 	.word	0x40020c00
 8001d20:	20000010 	.word	0x20000010
 8001d24:	20001a58 	.word	0x20001a58

08001d28 <LCD_IO_WriteReg>:
{
 8001d28:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d2a:	4d10      	ldr	r5, [pc, #64]	; (8001d6c <LCD_IO_WriteReg+0x44>)
{
 8001d2c:	b083      	sub	sp, #12
 8001d2e:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001d30:	2200      	movs	r2, #0
 8001d32:	480f      	ldr	r0, [pc, #60]	; (8001d70 <LCD_IO_WriteReg+0x48>)
 8001d34:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001d38:	f007 fd24 	bl	8009784 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d3c:	4628      	mov	r0, r5
 8001d3e:	2200      	movs	r2, #0
 8001d40:	2104      	movs	r1, #4
 8001d42:	f007 fd1f 	bl	8009784 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001d46:	4b0b      	ldr	r3, [pc, #44]	; (8001d74 <LCD_IO_WriteReg+0x4c>)
 8001d48:	480b      	ldr	r0, [pc, #44]	; (8001d78 <LCD_IO_WriteReg+0x50>)
 8001d4a:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001d4c:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001d50:	f10d 0106 	add.w	r1, sp, #6
 8001d54:	2201      	movs	r2, #1
 8001d56:	f00a f8bb 	bl	800bed0 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d5a:	2201      	movs	r2, #1
 8001d5c:	2104      	movs	r1, #4
 8001d5e:	4628      	mov	r0, r5
}
 8001d60:	b003      	add	sp, #12
 8001d62:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001d66:	f007 bd0d 	b.w	8009784 <HAL_GPIO_WritePin>
 8001d6a:	bf00      	nop
 8001d6c:	40020800 	.word	0x40020800
 8001d70:	40020c00 	.word	0x40020c00
 8001d74:	20000010 	.word	0x20000010
 8001d78:	20001a58 	.word	0x20001a58

08001d7c <LCD_IO_ReadData>:
{
 8001d7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d80:	4e19      	ldr	r6, [pc, #100]	; (8001de8 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001d82:	4f1a      	ldr	r7, [pc, #104]	; (8001dec <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001d84:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001df0 <LCD_IO_ReadData+0x74>
 8001d88:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001df4 <LCD_IO_ReadData+0x78>
{
 8001d8c:	b083      	sub	sp, #12
 8001d8e:	460c      	mov	r4, r1
 8001d90:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d92:	2200      	movs	r2, #0
 8001d94:	4630      	mov	r0, r6
 8001d96:	2104      	movs	r1, #4
 8001d98:	f007 fcf4 	bl	8009784 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001d9c:	4638      	mov	r0, r7
 8001d9e:	2200      	movs	r2, #0
 8001da0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001da4:	f007 fcee 	bl	8009784 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001da8:	f8d9 3000 	ldr.w	r3, [r9]
 8001dac:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001db0:	a901      	add	r1, sp, #4
 8001db2:	2201      	movs	r2, #1
 8001db4:	4640      	mov	r0, r8
 8001db6:	f00a f88b 	bl	800bed0 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001dba:	f8d9 3000 	ldr.w	r3, [r9]
 8001dbe:	4622      	mov	r2, r4
 8001dc0:	a901      	add	r1, sp, #4
 8001dc2:	4640      	mov	r0, r8
 8001dc4:	f00a fb2c 	bl	800c420 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001dc8:	4638      	mov	r0, r7
 8001dca:	2201      	movs	r2, #1
 8001dcc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001dd0:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001dd2:	f007 fcd7 	bl	8009784 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001dd6:	4630      	mov	r0, r6
 8001dd8:	2201      	movs	r2, #1
 8001dda:	2104      	movs	r1, #4
 8001ddc:	f007 fcd2 	bl	8009784 <HAL_GPIO_WritePin>
}
 8001de0:	4620      	mov	r0, r4
 8001de2:	b003      	add	sp, #12
 8001de4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001de8:	40020800 	.word	0x40020800
 8001dec:	40020c00 	.word	0x40020c00
 8001df0:	20000010 	.word	0x20000010
 8001df4:	20001a58 	.word	0x20001a58

08001df8 <LCD_Delay>:
  HAL_Delay(Delay);
 8001df8:	f007 ba62 	b.w	80092c0 <HAL_Delay>

08001dfc <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001dfc:	4b03      	ldr	r3, [pc, #12]	; (8001e0c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001dfe:	6802      	ldr	r2, [r0, #0]
 8001e00:	429a      	cmp	r2, r3
 8001e02:	d000      	beq.n	8001e06 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001e04:	4770      	bx	lr
    HAL_IncTick();
 8001e06:	f007 ba49 	b.w	800929c <HAL_IncTick>
 8001e0a:	bf00      	nop
 8001e0c:	40001000 	.word	0x40001000

08001e10 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001e10:	4770      	bx	lr
 8001e12:	bf00      	nop

08001e14 <MEAS_GPIO_analog_init>:
 * - ADC3_IN4 = GPIO PF6 (Pad left)
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void) {
 8001e14:	b410      	push	{r4}
 8001e16:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001e18:	4b15      	ldr	r3, [pc, #84]	; (8001e70 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001e1a:	4916      	ldr	r1, [pc, #88]	; (8001e74 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001e1c:	2400      	movs	r4, #0
 8001e1e:	9400      	str	r4, [sp, #0]
 8001e20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e22:	f042 0220 	orr.w	r2, r2, #32
 8001e26:	631a      	str	r2, [r3, #48]	; 0x30
 8001e28:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e2a:	f002 0220 	and.w	r2, r2, #32
 8001e2e:	9200      	str	r2, [sp, #0]
 8001e30:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001e32:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001e34:	4a10      	ldr	r2, [pc, #64]	; (8001e78 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001e36:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001e3a:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001e3c:	6808      	ldr	r0, [r1, #0]
 8001e3e:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001e42:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001e44:	9401      	str	r4, [sp, #4]
 8001e46:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001e48:	f041 0104 	orr.w	r1, r1, #4
 8001e4c:	6319      	str	r1, [r3, #48]	; 0x30
 8001e4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e50:	f003 0304 	and.w	r3, r3, #4
 8001e54:	9301      	str	r3, [sp, #4]
 8001e56:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001e58:	6813      	ldr	r3, [r2, #0]
 8001e5a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001e5e:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001e60:	6813      	ldr	r3, [r2, #0]
 8001e62:	f043 030c 	orr.w	r3, r3, #12
 8001e66:	6013      	str	r3, [r2, #0]
}
 8001e68:	b003      	add	sp, #12
 8001e6a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001e6e:	4770      	bx	lr
 8001e70:	40023800 	.word	0x40023800
 8001e74:	40021400 	.word	0x40021400
 8001e78:	40020800 	.word	0x40020800

08001e7c <MEAS_timer_init>:
/** ***************************************************************************
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void) {
 8001e7c:	b082      	sub	sp, #8
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001e7e:	4a0c      	ldr	r2, [pc, #48]	; (8001eb0 <MEAS_timer_init+0x34>)
 8001e80:	2300      	movs	r3, #0
 8001e82:	9301      	str	r3, [sp, #4]
 8001e84:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001e86:	f041 0101 	orr.w	r1, r1, #1
 8001e8a:	6411      	str	r1, [r2, #64]	; 0x40
 8001e8c:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001e8e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001e92:	f002 0201 	and.w	r2, r2, #1
 8001e96:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001e98:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001e9c:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001e9e:	9801      	ldr	r0, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001ea0:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001ea2:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001ea4:	685a      	ldr	r2, [r3, #4]
 8001ea6:	f042 0220 	orr.w	r2, r2, #32
 8001eaa:	605a      	str	r2, [r3, #4]
}
 8001eac:	b002      	add	sp, #8
 8001eae:	4770      	bx	lr
 8001eb0:	40023800 	.word	0x40023800

08001eb4 <MEAS_ADC3_scan_init>:
 * @n As each conversion triggers the DMA, the number of transfers is doubled.
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void) {
 8001eb4:	b410      	push	{r4}
 8001eb6:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001eb8:	4934      	ldr	r1, [pc, #208]	; (8001f8c <MEAS_ADC3_scan_init+0xd8>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001eba:	4a35      	ldr	r2, [pc, #212]	; (8001f90 <MEAS_ADC3_scan_init+0xdc>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001ebc:	2400      	movs	r4, #0
 8001ebe:	9400      	str	r4, [sp, #0]
 8001ec0:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001ec2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001ec6:	644b      	str	r3, [r1, #68]	; 0x44
 8001ec8:	6c4b      	ldr	r3, [r1, #68]	; 0x44
 8001eca:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001ece:	9300      	str	r3, [sp, #0]
 8001ed0:	9b00      	ldr	r3, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001ed2:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001ed4:	4b2f      	ldr	r3, [pc, #188]	; (8001f94 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001ed6:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 8001eda:	62d0      	str	r0, [r2, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001edc:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001ede:	f040 0004 	orr.w	r0, r0, #4
 8001ee2:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001ee4:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001ee6:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 8001eea:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001eec:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001eee:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 8001ef2:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001ef4:	6b50      	ldr	r0, [r2, #52]	; 0x34
 8001ef6:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 8001efa:	6350      	str	r0, [r2, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001efc:	6850      	ldr	r0, [r2, #4]
 8001efe:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001f02:	6050      	str	r0, [r2, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001f04:	6890      	ldr	r0, [r2, #8]
 8001f06:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001f0a:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001f0c:	6890      	ldr	r0, [r2, #8]
 8001f0e:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 8001f12:	6090      	str	r0, [r2, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001f14:	6890      	ldr	r0, [r2, #8]
 8001f16:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 8001f1a:	6090      	str	r0, [r2, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001f1c:	9401      	str	r4, [sp, #4]
 8001f1e:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001f20:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8001f24:	630a      	str	r2, [r1, #48]	; 0x30
 8001f26:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 8001f28:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8001f2c:	9201      	str	r2, [sp, #4]
 8001f2e:	9a01      	ldr	r2, [sp, #4]
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001f30:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f32:	f022 0201 	bic.w	r2, r2, #1
 8001f36:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN) {
 8001f38:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f3a:	07d2      	lsls	r2, r2, #31
 8001f3c:	d4fc      	bmi.n	8001f38 <MEAS_ADC3_scan_init+0x84>
        ;
    }                                 // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001f3e:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    DMA2_Stream1->NDTR =
        INPUT_COUNT * ADC_NUMS;  // Number of data items to transfer
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001f40:	4815      	ldr	r0, [pc, #84]	; (8001f98 <MEAS_ADC3_scan_init+0xe4>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001f42:	4916      	ldr	r1, [pc, #88]	; (8001f9c <MEAS_ADC3_scan_init+0xe8>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001f44:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001f48:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001f4a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f4c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001f50:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_1;                // Priority high
 8001f52:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f54:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001f58:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001f5a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f5c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001f60:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001f62:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f64:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001f68:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001f6a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001f6c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001f70:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001f72:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001f74:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001f78:	f042 0210 	orr.w	r2, r2, #16
 8001f7c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001f7e:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001f80:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001f82:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001f84:	b003      	add	sp, #12
 8001f86:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001f8a:	4770      	bx	lr
 8001f8c:	40023800 	.word	0x40023800
 8001f90:	40012200 	.word	0x40012200
 8001f94:	40026400 	.word	0x40026400
 8001f98:	4001224c 	.word	0x4001224c
 8001f9c:	20001b40 	.word	0x20001b40

08001fa0 <DMA2_Stream1_IRQHandler>:
 *
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void) {
    if (DMA2->LISR & DMA_LISR_TCIF1) {  // Stream1 transfer compl. interrupt f.
 8001fa0:	4b1e      	ldr	r3, [pc, #120]	; (800201c <DMA2_Stream1_IRQHandler+0x7c>)
 8001fa2:	681a      	ldr	r2, [r3, #0]
 8001fa4:	0511      	lsls	r1, r2, #20
 8001fa6:	d400      	bmi.n	8001faa <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
        // copy data from DMA buffer to ADC_samples
        MEAS_ADC_reset();
        MEAS_data_ready = true;
    }
}
 8001fa8:	4770      	bx	lr
 8001faa:	4a1d      	ldr	r2, [pc, #116]	; (8002020 <DMA2_Stream1_IRQHandler+0x80>)
 8001fac:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8001fb0:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001fb4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001fb8:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001fbc:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001fc0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001fc2:	f022 0201 	bic.w	r2, r2, #1
 8001fc6:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN) {
 8001fc8:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001fca:	07d2      	lsls	r2, r2, #31
 8001fcc:	d4fc      	bmi.n	8001fc8 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |=
 8001fce:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001fd0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |=
 8001fd4:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8001fd8:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001fda:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001fdc:	4911      	ldr	r1, [pc, #68]	; (8002024 <DMA2_Stream1_IRQHandler+0x84>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001fde:	f023 0301 	bic.w	r3, r3, #1
 8001fe2:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001fe4:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001fe6:	4b10      	ldr	r3, [pc, #64]	; (8002028 <DMA2_Stream1_IRQHandler+0x88>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001fe8:	f020 0001 	bic.w	r0, r0, #1
 8001fec:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001fee:	6888      	ldr	r0, [r1, #8]
 8001ff0:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001ff4:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001ff6:	6a59      	ldr	r1, [r3, #36]	; 0x24
        MEAS_data_ready = true;
 8001ff8:	480c      	ldr	r0, [pc, #48]	; (800202c <DMA2_Stream1_IRQHandler+0x8c>)
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001ffa:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001ffe:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8002000:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002002:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8002006:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8002008:	6813      	ldr	r3, [r2, #0]
        MEAS_data_ready = true;
 800200a:	f04f 0c01 	mov.w	ip, #1
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 800200e:	f023 0301 	bic.w	r3, r3, #1
 8002012:	6013      	str	r3, [r2, #0]
        MEAS_data_ready = true;
 8002014:	f880 c000 	strb.w	ip, [r0]
}
 8002018:	4770      	bx	lr
 800201a:	bf00      	nop
 800201c:	40026400 	.word	0x40026400
 8002020:	e000e100 	.word	0xe000e100
 8002024:	40012200 	.word	0x40012200
 8002028:	40023800 	.word	0x40023800
 800202c:	20001f40 	.word	0x20001f40

08002030 <MEAS_start_measure>:
 * @return ADC samples pointer
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void) {
 8002030:	b538      	push	{r3, r4, r5, lr}
        buffer[i] = 0;
 8002032:	4c10      	ldr	r4, [pc, #64]	; (8002074 <MEAS_start_measure+0x44>)
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8002034:	4d10      	ldr	r5, [pc, #64]	; (8002078 <MEAS_start_measure+0x48>)
        buffer[i] = 0;
 8002036:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800203a:	2100      	movs	r1, #0
 800203c:	4620      	mov	r0, r4
 800203e:	f027 ffba 	bl	8029fb6 <memset>
    MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
    MEAS_ADC3_scan_init();
 8002042:	f7ff ff37 	bl	8001eb4 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8002046:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8002048:	4a0c      	ldr	r2, [pc, #48]	; (800207c <MEAS_start_measure+0x4c>)
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800204a:	490d      	ldr	r1, [pc, #52]	; (8002080 <MEAS_start_measure+0x50>)
 800204c:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8002050:	f043 0301 	orr.w	r3, r3, #1
 8002054:	62ab      	str	r3, [r5, #40]	; 0x28
 8002056:	f8c2 0184 	str.w	r0, [r2, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800205a:	6050      	str	r0, [r2, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800205c:	688b      	ldr	r3, [r1, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 800205e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8002062:	f043 0301 	orr.w	r3, r3, #1
 8002066:	608b      	str	r3, [r1, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8002068:	6813      	ldr	r3, [r2, #0]
 800206a:	f043 0301 	orr.w	r3, r3, #1
//    while (!MEAS_data_ready)
//        ;  // Wait for data
//    MEAS_data_ready = false;

    return ADC_samples;
}
 800206e:	4620      	mov	r0, r4
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8002070:	6013      	str	r3, [r2, #0]
}
 8002072:	bd38      	pop	{r3, r4, r5, pc}
 8002074:	20001b40 	.word	0x20001b40
 8002078:	40026400 	.word	0x40026400
 800207c:	e000e100 	.word	0xe000e100
 8002080:	40012200 	.word	0x40012200

08002084 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8002084:	2004      	movs	r0, #4
 8002086:	4770      	bx	lr

08002088 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8002088:	2040      	movs	r0, #64	; 0x40
 800208a:	4770      	bx	lr

0800208c <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 800208c:	f44f 7020 	mov.w	r0, #640	; 0x280
 8002090:	4770      	bx	lr
 8002092:	bf00      	nop

08002094 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002094:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002096:	4b0e      	ldr	r3, [pc, #56]	; (80020d0 <HAL_MspInit+0x3c>)
 8002098:	2200      	movs	r2, #0
 800209a:	9200      	str	r2, [sp, #0]
 800209c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800209e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80020a2:	6459      	str	r1, [r3, #68]	; 0x44
 80020a4:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80020a6:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 80020aa:	9000      	str	r0, [sp, #0]
 80020ac:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80020ae:	9201      	str	r2, [sp, #4]
 80020b0:	6c18      	ldr	r0, [r3, #64]	; 0x40
 80020b2:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80020b6:	6418      	str	r0, [r3, #64]	; 0x40
 80020b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80020be:	9301      	str	r3, [sp, #4]
 80020c0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80020c2:	210f      	movs	r1, #15
 80020c4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80020c8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80020ca:	f007 b91d 	b.w	8009308 <HAL_NVIC_SetPriority>
 80020ce:	bf00      	nop
 80020d0:	40023800 	.word	0x40023800

080020d4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80020d4:	4b0b      	ldr	r3, [pc, #44]	; (8002104 <HAL_CRC_MspInit+0x30>)
 80020d6:	6802      	ldr	r2, [r0, #0]
 80020d8:	429a      	cmp	r2, r3
 80020da:	d000      	beq.n	80020de <HAL_CRC_MspInit+0xa>
 80020dc:	4770      	bx	lr
{
 80020de:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80020e0:	2200      	movs	r2, #0
 80020e2:	9201      	str	r2, [sp, #4]
 80020e4:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 80020e8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80020ec:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 80020f0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80020f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80020f6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80020fa:	9301      	str	r3, [sp, #4]
 80020fc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80020fe:	b002      	add	sp, #8
 8002100:	4770      	bx	lr
 8002102:	bf00      	nop
 8002104:	40023000 	.word	0x40023000

08002108 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8002108:	4b0a      	ldr	r3, [pc, #40]	; (8002134 <HAL_DMA2D_MspInit+0x2c>)
 800210a:	6802      	ldr	r2, [r0, #0]
 800210c:	429a      	cmp	r2, r3
 800210e:	d000      	beq.n	8002112 <HAL_DMA2D_MspInit+0xa>
 8002110:	4770      	bx	lr
{
 8002112:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002114:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002118:	2200      	movs	r2, #0
 800211a:	9201      	str	r2, [sp, #4]
 800211c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800211e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8002122:	631a      	str	r2, [r3, #48]	; 0x30
 8002124:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002126:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800212a:	9301      	str	r3, [sp, #4]
 800212c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 800212e:	b002      	add	sp, #8
 8002130:	4770      	bx	lr
 8002132:	bf00      	nop
 8002134:	4002b000 	.word	0x4002b000

08002138 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002138:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 800213c:	4b2e      	ldr	r3, [pc, #184]	; (80021f8 <HAL_I2C_MspInit+0xc0>)
 800213e:	6802      	ldr	r2, [r0, #0]
{
 8002140:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002142:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8002144:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002146:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800214a:	e9cd 4406 	strd	r4, r4, [sp, #24]
 800214e:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8002150:	d002      	beq.n	8002158 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8002152:	b00a      	add	sp, #40	; 0x28
 8002154:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002158:	4d28      	ldr	r5, [pc, #160]	; (80021fc <HAL_I2C_MspInit+0xc4>)
 800215a:	9401      	str	r4, [sp, #4]
 800215c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800215e:	4828      	ldr	r0, [pc, #160]	; (8002200 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002160:	f043 0304 	orr.w	r3, r3, #4
 8002164:	632b      	str	r3, [r5, #48]	; 0x30
 8002166:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002168:	f003 0304 	and.w	r3, r3, #4
 800216c:	9301      	str	r3, [sp, #4]
 800216e:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002170:	9402      	str	r4, [sp, #8]
 8002172:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002174:	f043 0301 	orr.w	r3, r3, #1
 8002178:	632b      	str	r3, [r5, #48]	; 0x30
 800217a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800217c:	f003 0301 	and.w	r3, r3, #1
 8002180:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002182:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002186:	f04f 0801 	mov.w	r8, #1
 800218a:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800218e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002190:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8002192:	2312      	movs	r3, #18
 8002194:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002198:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800219c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800219e:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80021a0:	f007 f9ac 	bl	80094fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021a4:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80021a6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80021aa:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021ac:	4815      	ldr	r0, [pc, #84]	; (8002204 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 80021ae:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80021b0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80021b4:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021b8:	f007 f9a0 	bl	80094fc <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 80021bc:	9403      	str	r4, [sp, #12]
 80021be:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80021c0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80021c4:	642b      	str	r3, [r5, #64]	; 0x40
 80021c6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 80021c8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80021cc:	4622      	mov	r2, r4
 80021ce:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 80021d0:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80021d2:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 80021d4:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 80021d6:	f007 f897 	bl	8009308 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 80021da:	2048      	movs	r0, #72	; 0x48
 80021dc:	f007 f8d2 	bl	8009384 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 80021e0:	6a2b      	ldr	r3, [r5, #32]
 80021e2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80021e6:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 80021e8:	6a2b      	ldr	r3, [r5, #32]
 80021ea:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80021ee:	622b      	str	r3, [r5, #32]
}
 80021f0:	b00a      	add	sp, #40	; 0x28
 80021f2:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80021f6:	bf00      	nop
 80021f8:	40005c00 	.word	0x40005c00
 80021fc:	40023800 	.word	0x40023800
 8002200:	40020800 	.word	0x40020800
 8002204:	40020000 	.word	0x40020000

08002208 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002208:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800220c:	4604      	mov	r4, r0
 800220e:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002210:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002212:	2230      	movs	r2, #48	; 0x30
 8002214:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002216:	e9cd 1108 	strd	r1, r1, [sp, #32]
 800221a:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 800221e:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002220:	f027 fec9 	bl	8029fb6 <memset>
  if(hltdc->Instance==LTDC)
 8002224:	4b67      	ldr	r3, [pc, #412]	; (80023c4 <HAL_LTDC_MspInit+0x1bc>)
 8002226:	6822      	ldr	r2, [r4, #0]
 8002228:	429a      	cmp	r2, r3
 800222a:	d002      	beq.n	8002232 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 800222c:	b01a      	add	sp, #104	; 0x68
 800222e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002232:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002234:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002236:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002238:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800223a:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800223c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002240:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002242:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002244:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002246:	f009 fbc3 	bl	800b9d0 <HAL_RCCEx_PeriphCLKConfig>
 800224a:	2800      	cmp	r0, #0
 800224c:	f040 80b7 	bne.w	80023be <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002250:	4b5d      	ldr	r3, [pc, #372]	; (80023c8 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002252:	485e      	ldr	r0, [pc, #376]	; (80023cc <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002254:	2400      	movs	r4, #0
 8002256:	9401      	str	r4, [sp, #4]
 8002258:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800225a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800225e:	645a      	str	r2, [r3, #68]	; 0x44
 8002260:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002262:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8002266:	9201      	str	r2, [sp, #4]
 8002268:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800226a:	9402      	str	r4, [sp, #8]
 800226c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800226e:	f042 0220 	orr.w	r2, r2, #32
 8002272:	631a      	str	r2, [r3, #48]	; 0x30
 8002274:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002276:	f002 0220 	and.w	r2, r2, #32
 800227a:	9202      	str	r2, [sp, #8]
 800227c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800227e:	9403      	str	r4, [sp, #12]
 8002280:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002282:	f042 0201 	orr.w	r2, r2, #1
 8002286:	631a      	str	r2, [r3, #48]	; 0x30
 8002288:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800228a:	f002 0201 	and.w	r2, r2, #1
 800228e:	9203      	str	r2, [sp, #12]
 8002290:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002292:	9404      	str	r4, [sp, #16]
 8002294:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002296:	f042 0202 	orr.w	r2, r2, #2
 800229a:	631a      	str	r2, [r3, #48]	; 0x30
 800229c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800229e:	f002 0202 	and.w	r2, r2, #2
 80022a2:	9204      	str	r2, [sp, #16]
 80022a4:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80022a6:	9405      	str	r4, [sp, #20]
 80022a8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022aa:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80022ae:	631a      	str	r2, [r3, #48]	; 0x30
 80022b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022b2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80022b6:	9205      	str	r2, [sp, #20]
 80022b8:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80022ba:	9406      	str	r4, [sp, #24]
 80022bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022be:	f042 0204 	orr.w	r2, r2, #4
 80022c2:	631a      	str	r2, [r3, #48]	; 0x30
 80022c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022c6:	f002 0204 	and.w	r2, r2, #4
 80022ca:	9206      	str	r2, [sp, #24]
 80022cc:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80022ce:	9407      	str	r4, [sp, #28]
 80022d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80022d2:	f042 0208 	orr.w	r2, r2, #8
 80022d6:	631a      	str	r2, [r3, #48]	; 0x30
 80022d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80022da:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80022de:	2600      	movs	r6, #0
 80022e0:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022e2:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80022e4:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80022e6:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80022e8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80022ec:	2302      	movs	r3, #2
 80022ee:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80022f2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80022f6:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80022f8:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80022fa:	f007 f8ff 	bl	80094fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022fe:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002300:	f641 0258 	movw	r2, #6232	; 0x1858
 8002304:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002306:	4832      	ldr	r0, [pc, #200]	; (80023d0 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002308:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800230a:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800230e:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002312:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002316:	f007 f8f1 	bl	80094fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800231a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800231c:	2203      	movs	r2, #3
 800231e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002320:	482c      	ldr	r0, [pc, #176]	; (80023d4 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002322:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002326:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800232a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800232e:	f007 f8e5 	bl	80094fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002332:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002334:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8002338:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800233a:	4826      	ldr	r0, [pc, #152]	; (80023d4 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800233c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800233e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002342:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002346:	f007 f8d9 	bl	80094fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800234a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800234c:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8002350:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002352:	4821      	ldr	r0, [pc, #132]	; (80023d8 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002354:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002356:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800235a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800235e:	f007 f8cd 	bl	80094fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002362:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002364:	22c0      	movs	r2, #192	; 0xc0
 8002366:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002368:	481c      	ldr	r0, [pc, #112]	; (80023dc <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800236a:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800236c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002370:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002374:	f007 f8c2 	bl	80094fc <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002378:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800237a:	2208      	movs	r2, #8
 800237c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800237e:	4818      	ldr	r0, [pc, #96]	; (80023e0 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002380:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002382:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002386:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800238a:	f007 f8b7 	bl	80094fc <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800238e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002390:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002392:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002396:	4810      	ldr	r0, [pc, #64]	; (80023d8 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002398:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800239c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80023a0:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80023a4:	f007 f8aa 	bl	80094fc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80023a8:	4622      	mov	r2, r4
 80023aa:	2105      	movs	r1, #5
 80023ac:	2058      	movs	r0, #88	; 0x58
 80023ae:	f006 ffab 	bl	8009308 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80023b2:	2058      	movs	r0, #88	; 0x58
 80023b4:	f006 ffe6 	bl	8009384 <HAL_NVIC_EnableIRQ>
}
 80023b8:	b01a      	add	sp, #104	; 0x68
 80023ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80023be:	f7ff fd27 	bl	8001e10 <Error_Handler>
 80023c2:	e745      	b.n	8002250 <HAL_LTDC_MspInit+0x48>
 80023c4:	40016800 	.word	0x40016800
 80023c8:	40023800 	.word	0x40023800
 80023cc:	40021400 	.word	0x40021400
 80023d0:	40020000 	.word	0x40020000
 80023d4:	40020400 	.word	0x40020400
 80023d8:	40021800 	.word	0x40021800
 80023dc:	40020800 	.word	0x40020800
 80023e0:	40020c00 	.word	0x40020c00
 80023e4:	00000000 	.word	0x00000000

080023e8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80023e8:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 80023ea:	4a1b      	ldr	r2, [pc, #108]	; (8002458 <HAL_SPI_MspInit+0x70>)
 80023ec:	6801      	ldr	r1, [r0, #0]
{
 80023ee:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023f0:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 80023f2:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80023f4:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80023f8:	e9cd 3304 	strd	r3, r3, [sp, #16]
 80023fc:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 80023fe:	d001      	beq.n	8002404 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002400:	b008      	add	sp, #32
 8002402:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002404:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002408:	9300      	str	r3, [sp, #0]
 800240a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800240c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002410:	6450      	str	r0, [r2, #68]	; 0x44
 8002412:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002414:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002418:	9000      	str	r0, [sp, #0]
 800241a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800241c:	9301      	str	r3, [sp, #4]
 800241e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002420:	480e      	ldr	r0, [pc, #56]	; (800245c <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002422:	f043 0320 	orr.w	r3, r3, #32
 8002426:	6313      	str	r3, [r2, #48]	; 0x30
 8002428:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800242a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002450 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800242e:	f003 0320 	and.w	r3, r3, #32
 8002432:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002434:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002436:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002438:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800243a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800243e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002442:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002444:	f007 f85a 	bl	80094fc <HAL_GPIO_Init>
}
 8002448:	b008      	add	sp, #32
 800244a:	bd10      	pop	{r4, pc}
 800244c:	f3af 8000 	nop.w
 8002450:	00000380 	.word	0x00000380
 8002454:	00000002 	.word	0x00000002
 8002458:	40015000 	.word	0x40015000
 800245c:	40021400 	.word	0x40021400

08002460 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM1)
 8002460:	4a12      	ldr	r2, [pc, #72]	; (80024ac <HAL_TIM_Base_MspInit+0x4c>)
 8002462:	6803      	ldr	r3, [r0, #0]
 8002464:	4293      	cmp	r3, r2
{
 8002466:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM1)
 8002468:	d012      	beq.n	8002490 <HAL_TIM_Base_MspInit+0x30>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 800246a:	4a11      	ldr	r2, [pc, #68]	; (80024b0 <HAL_TIM_Base_MspInit+0x50>)
 800246c:	4293      	cmp	r3, r2
 800246e:	d001      	beq.n	8002474 <HAL_TIM_Base_MspInit+0x14>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002470:	b002      	add	sp, #8
 8002472:	4770      	bx	lr
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002474:	4b0f      	ldr	r3, [pc, #60]	; (80024b4 <HAL_TIM_Base_MspInit+0x54>)
 8002476:	2200      	movs	r2, #0
 8002478:	9201      	str	r2, [sp, #4]
 800247a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800247c:	f042 0202 	orr.w	r2, r2, #2
 8002480:	641a      	str	r2, [r3, #64]	; 0x40
 8002482:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002484:	f003 0302 	and.w	r3, r3, #2
 8002488:	9301      	str	r3, [sp, #4]
 800248a:	9b01      	ldr	r3, [sp, #4]
}
 800248c:	b002      	add	sp, #8
 800248e:	4770      	bx	lr
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002490:	4b08      	ldr	r3, [pc, #32]	; (80024b4 <HAL_TIM_Base_MspInit+0x54>)
 8002492:	2200      	movs	r2, #0
 8002494:	9200      	str	r2, [sp, #0]
 8002496:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002498:	f042 0201 	orr.w	r2, r2, #1
 800249c:	645a      	str	r2, [r3, #68]	; 0x44
 800249e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80024a0:	f003 0301 	and.w	r3, r3, #1
 80024a4:	9300      	str	r3, [sp, #0]
 80024a6:	9b00      	ldr	r3, [sp, #0]
}
 80024a8:	b002      	add	sp, #8
 80024aa:	4770      	bx	lr
 80024ac:	40010000 	.word	0x40010000
 80024b0:	40000400 	.word	0x40000400
 80024b4:	40023800 	.word	0x40023800

080024b8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80024b8:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 80024ba:	4b2b      	ldr	r3, [pc, #172]	; (8002568 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80024bc:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 80024be:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80024c0:	2200      	movs	r2, #0
 80024c2:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 80024c4:	2c00      	cmp	r4, #0
 80024c6:	d14c      	bne.n	8002562 <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 80024c8:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 80024ca:	4a28      	ldr	r2, [pc, #160]	; (800256c <HAL_SDRAM_MspInit+0xb4>)
 80024cc:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 80024ce:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 80024d0:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024d2:	4827      	ldr	r0, [pc, #156]	; (8002570 <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80024d4:	433b      	orrs	r3, r7
 80024d6:	6393      	str	r3, [r2, #56]	; 0x38
 80024d8:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80024da:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024dc:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80024de:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80024e0:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 80024e4:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024e6:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80024e8:	2302      	movs	r3, #2
 80024ea:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80024ee:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80024f2:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80024f4:	f007 f802 	bl	80094fc <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80024f8:	481e      	ldr	r0, [pc, #120]	; (8002574 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80024fa:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80024fc:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024fe:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002500:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002504:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002508:	f006 fff8 	bl	80094fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800250c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002510:	4819      	ldr	r0, [pc, #100]	; (8002578 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002512:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002514:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002516:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800251a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800251e:	f006 ffed 	bl	80094fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002522:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002526:	4815      	ldr	r0, [pc, #84]	; (800257c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002528:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800252a:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800252c:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002530:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002534:	f006 ffe2 	bl	80094fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002538:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800253c:	4810      	ldr	r0, [pc, #64]	; (8002580 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800253e:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002540:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002542:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002546:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800254a:	f006 ffd7 	bl	80094fc <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800254e:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002550:	480c      	ldr	r0, [pc, #48]	; (8002584 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002552:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002554:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002556:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800255a:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 800255c:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800255e:	f006 ffcd 	bl	80094fc <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002562:	b009      	add	sp, #36	; 0x24
 8002564:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002566:	bf00      	nop
 8002568:	20001f44 	.word	0x20001f44
 800256c:	40023800 	.word	0x40023800
 8002570:	40021400 	.word	0x40021400
 8002574:	40020800 	.word	0x40020800
 8002578:	40021800 	.word	0x40021800
 800257c:	40021000 	.word	0x40021000
 8002580:	40020c00 	.word	0x40020c00
 8002584:	40020400 	.word	0x40020400

08002588 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002588:	b570      	push	{r4, r5, r6, lr}
 800258a:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 800258c:	4b23      	ldr	r3, [pc, #140]	; (800261c <HAL_InitTick+0x94>)
 800258e:	2200      	movs	r2, #0
 8002590:	9202      	str	r2, [sp, #8]
 8002592:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002594:	f042 0210 	orr.w	r2, r2, #16
 8002598:	641a      	str	r2, [r3, #64]	; 0x40
 800259a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800259c:	f003 0310 	and.w	r3, r3, #16
 80025a0:	9302      	str	r3, [sp, #8]
{
 80025a2:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80025a4:	a901      	add	r1, sp, #4
 80025a6:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 80025a8:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80025aa:	f009 f9ef 	bl	800b98c <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 80025ae:	9b06      	ldr	r3, [sp, #24]
 80025b0:	b9d3      	cbnz	r3, 80025e8 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 80025b2:	f009 f9db 	bl	800b96c <HAL_RCC_GetPCLK1Freq>
 80025b6:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80025b8:	4a19      	ldr	r2, [pc, #100]	; (8002620 <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 80025ba:	4c1a      	ldr	r4, [pc, #104]	; (8002624 <HAL_InitTick+0x9c>)
 80025bc:	491a      	ldr	r1, [pc, #104]	; (8002628 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 80025be:	fba2 2303 	umull	r2, r3, r2, r3
 80025c2:	0c9b      	lsrs	r3, r3, #18
 80025c4:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 80025c6:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 80025c8:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 80025cc:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80025ce:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 80025d2:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80025d4:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80025d6:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 80025d8:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 80025da:	f00a f807 	bl	800c5ec <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80025de:	4606      	mov	r6, r0
 80025e0:	b130      	cbz	r0, 80025f0 <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 80025e2:	4630      	mov	r0, r6
 80025e4:	b008      	add	sp, #32
 80025e6:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80025e8:	f009 f9c0 	bl	800b96c <HAL_RCC_GetPCLK1Freq>
 80025ec:	0043      	lsls	r3, r0, #1
 80025ee:	e7e3      	b.n	80025b8 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 80025f0:	4620      	mov	r0, r4
 80025f2:	f00a f889 	bl	800c708 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80025f6:	4606      	mov	r6, r0
 80025f8:	2800      	cmp	r0, #0
 80025fa:	d1f2      	bne.n	80025e2 <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80025fc:	2036      	movs	r0, #54	; 0x36
 80025fe:	f006 fec1 	bl	8009384 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002602:	2d0f      	cmp	r5, #15
 8002604:	d901      	bls.n	800260a <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8002606:	2601      	movs	r6, #1
 8002608:	e7eb      	b.n	80025e2 <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800260a:	4632      	mov	r2, r6
 800260c:	4629      	mov	r1, r5
 800260e:	2036      	movs	r0, #54	; 0x36
 8002610:	f006 fe7a 	bl	8009308 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002614:	4b05      	ldr	r3, [pc, #20]	; (800262c <HAL_InitTick+0xa4>)
 8002616:	601d      	str	r5, [r3, #0]
 8002618:	e7e3      	b.n	80025e2 <HAL_InitTick+0x5a>
 800261a:	bf00      	nop
 800261c:	40023800 	.word	0x40023800
 8002620:	431bde83 	.word	0x431bde83
 8002624:	20001f48 	.word	0x20001f48
 8002628:	40001000 	.word	0x40001000
 800262c:	20000080 	.word	0x20000080

08002630 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002630:	4770      	bx	lr
 8002632:	bf00      	nop

08002634 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002634:	e7fe      	b.n	8002634 <HardFault_Handler>
 8002636:	bf00      	nop

08002638 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002638:	e7fe      	b.n	8002638 <MemManage_Handler>
 800263a:	bf00      	nop

0800263c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800263c:	e7fe      	b.n	800263c <BusFault_Handler>
 800263e:	bf00      	nop

08002640 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002640:	e7fe      	b.n	8002640 <UsageFault_Handler>
 8002642:	bf00      	nop

08002644 <DebugMon_Handler>:
 8002644:	4770      	bx	lr
 8002646:	bf00      	nop

08002648 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8002648:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 800264a:	20c8      	movs	r0, #200	; 0xc8
 800264c:	f006 fe38 	bl	80092c0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8002650:	4804      	ldr	r0, [pc, #16]	; (8002664 <EXTI3_IRQHandler+0x1c>)
 8002652:	2200      	movs	r2, #0
 8002654:	2120      	movs	r1, #32
 8002656:	f007 f895 	bl	8009784 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 800265a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 800265e:	2008      	movs	r0, #8
 8002660:	f007 b8a0 	b.w	80097a4 <HAL_GPIO_EXTI_IRQHandler>
 8002664:	40021000 	.word	0x40021000

08002668 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002668:	4801      	ldr	r0, [pc, #4]	; (8002670 <TIM6_DAC_IRQHandler+0x8>)
 800266a:	f00a b9cd 	b.w	800ca08 <HAL_TIM_IRQHandler>
 800266e:	bf00      	nop
 8002670:	20001f48 	.word	0x20001f48

08002674 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8002674:	4801      	ldr	r0, [pc, #4]	; (800267c <I2C3_EV_IRQHandler+0x8>)
 8002676:	f007 bff5 	b.w	800a664 <HAL_I2C_EV_IRQHandler>
 800267a:	bf00      	nop
 800267c:	20001928 	.word	0x20001928

08002680 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002680:	4801      	ldr	r0, [pc, #4]	; (8002688 <LTDC_IRQHandler+0x8>)
 8002682:	f008 bd69 	b.w	800b158 <HAL_LTDC_IRQHandler>
 8002686:	bf00      	nop
 8002688:	2000197c 	.word	0x2000197c

0800268c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800268c:	2001      	movs	r0, #1
 800268e:	4770      	bx	lr

08002690 <_kill>:

int _kill(int pid, int sig)
{
 8002690:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002692:	f027 fd89 	bl	802a1a8 <__errno>
 8002696:	2316      	movs	r3, #22
 8002698:	6003      	str	r3, [r0, #0]
	return -1;
}
 800269a:	f04f 30ff 	mov.w	r0, #4294967295
 800269e:	bd08      	pop	{r3, pc}

080026a0 <_exit>:

void _exit (int status)
{
 80026a0:	b508      	push	{r3, lr}
	errno = EINVAL;
 80026a2:	f027 fd81 	bl	802a1a8 <__errno>
 80026a6:	2316      	movs	r3, #22
 80026a8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80026aa:	e7fe      	b.n	80026aa <_exit+0xa>

080026ac <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80026ac:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026ae:	1e16      	subs	r6, r2, #0
 80026b0:	dd07      	ble.n	80026c2 <_read+0x16>
 80026b2:	460c      	mov	r4, r1
 80026b4:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 80026b6:	f3af 8000 	nop.w
 80026ba:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026be:	42a5      	cmp	r5, r4
 80026c0:	d1f9      	bne.n	80026b6 <_read+0xa>
	}

return len;
}
 80026c2:	4630      	mov	r0, r6
 80026c4:	bd70      	pop	{r4, r5, r6, pc}
 80026c6:	bf00      	nop

080026c8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80026c8:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026ca:	1e16      	subs	r6, r2, #0
 80026cc:	dd07      	ble.n	80026de <_write+0x16>
 80026ce:	460c      	mov	r4, r1
 80026d0:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 80026d2:	f814 0b01 	ldrb.w	r0, [r4], #1
 80026d6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80026da:	42ac      	cmp	r4, r5
 80026dc:	d1f9      	bne.n	80026d2 <_write+0xa>
	}
	return len;
}
 80026de:	4630      	mov	r0, r6
 80026e0:	bd70      	pop	{r4, r5, r6, pc}
 80026e2:	bf00      	nop

080026e4 <_close>:

int _close(int file)
{
	return -1;
}
 80026e4:	f04f 30ff 	mov.w	r0, #4294967295
 80026e8:	4770      	bx	lr
 80026ea:	bf00      	nop

080026ec <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80026ec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80026f0:	604b      	str	r3, [r1, #4]
	return 0;
}
 80026f2:	2000      	movs	r0, #0
 80026f4:	4770      	bx	lr
 80026f6:	bf00      	nop

080026f8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80026f8:	2001      	movs	r0, #1
 80026fa:	4770      	bx	lr

080026fc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80026fc:	2000      	movs	r0, #0
 80026fe:	4770      	bx	lr

08002700 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002700:	4a0b      	ldr	r2, [pc, #44]	; (8002730 <_sbrk+0x30>)
{
 8002702:	b508      	push	{r3, lr}
 8002704:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002706:	6810      	ldr	r0, [r2, #0]
 8002708:	b128      	cbz	r0, 8002716 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 800270a:	4403      	add	r3, r0
 800270c:	4669      	mov	r1, sp
 800270e:	428b      	cmp	r3, r1
 8002710:	d807      	bhi.n	8002722 <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8002712:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002714:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002716:	4807      	ldr	r0, [pc, #28]	; (8002734 <_sbrk+0x34>)
 8002718:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 800271a:	4403      	add	r3, r0
 800271c:	4669      	mov	r1, sp
 800271e:	428b      	cmp	r3, r1
 8002720:	d9f7      	bls.n	8002712 <_sbrk+0x12>
		errno = ENOMEM;
 8002722:	f027 fd41 	bl	802a1a8 <__errno>
 8002726:	230c      	movs	r3, #12
 8002728:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 800272a:	f04f 30ff 	mov.w	r0, #4294967295
}
 800272e:	bd08      	pop	{r3, pc}
 8002730:	20001f90 	.word	0x20001f90
 8002734:	20013ab0 	.word	0x20013ab0

08002738 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002738:	4770      	bx	lr

0800273a <_ZN23ApplicationFontProviderD0Ev>:
 800273a:	b510      	push	{r4, lr}
 800273c:	2104      	movs	r1, #4
 800273e:	4604      	mov	r4, r0
 8002740:	f026 fc21 	bl	8028f86 <_ZdlPvj>
 8002744:	4620      	mov	r0, r4
 8002746:	bd10      	pop	{r4, pc}

08002748 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002748:	b508      	push	{r3, lr}
    switch (typography)
 800274a:	2903      	cmp	r1, #3
 800274c:	d813      	bhi.n	8002776 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800274e:	e8df f001 	tbb	[pc, r1]
 8002752:	0602      	.short	0x0602
 8002754:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002756:	f005 fe33 	bl	80083c0 <_ZN17TypedTextDatabase8getFontsEv>
 800275a:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 800275c:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800275e:	f005 fe2f 	bl	80083c0 <_ZN17TypedTextDatabase8getFontsEv>
 8002762:	6840      	ldr	r0, [r0, #4]
 8002764:	e7fa      	b.n	800275c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002766:	f005 fe2b 	bl	80083c0 <_ZN17TypedTextDatabase8getFontsEv>
 800276a:	6880      	ldr	r0, [r0, #8]
 800276c:	e7f6      	b.n	800275c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800276e:	f005 fe27 	bl	80083c0 <_ZN17TypedTextDatabase8getFontsEv>
 8002772:	68c0      	ldr	r0, [r0, #12]
 8002774:	e7f2      	b.n	800275c <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002776:	2000      	movs	r0, #0
 8002778:	e7f0      	b.n	800275c <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

0800277c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800277c:	4800      	ldr	r0, [pc, #0]	; (8002780 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800277e:	4770      	bx	lr
 8002780:	0802b49c 	.word	0x0802b49c

08002784 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002784:	200d      	movs	r0, #13
 8002786:	4770      	bx	lr

08002788 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002788:	b513      	push	{r0, r1, r4, lr}
 800278a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800278c:	b151      	cbz	r1, 80027a4 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800278e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002790:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002792:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002796:	aa01      	add	r2, sp, #4
 8002798:	689c      	ldr	r4, [r3, #8]
 800279a:	f10d 0303 	add.w	r3, sp, #3
 800279e:	47a0      	blx	r4
        return glyph;
    }
 80027a0:	b002      	add	sp, #8
 80027a2:	bd10      	pop	{r4, pc}
            return 0;
 80027a4:	4608      	mov	r0, r1
 80027a6:	e7fb      	b.n	80027a0 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080027a8 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80027a8:	89c0      	ldrh	r0, [r0, #14]
 80027aa:	4770      	bx	lr

080027ac <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80027ac:	8a00      	ldrh	r0, [r0, #16]
 80027ae:	4770      	bx	lr

080027b0 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80027b0:	88c0      	ldrh	r0, [r0, #6]
 80027b2:	4770      	bx	lr

080027b4 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80027b4:	8880      	ldrh	r0, [r0, #4]
 80027b6:	4770      	bx	lr

080027b8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80027b8:	7a80      	ldrb	r0, [r0, #10]
    }
 80027ba:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80027be:	4770      	bx	lr

080027c0 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80027c0:	7a80      	ldrb	r0, [r0, #10]
    }
 80027c2:	09c0      	lsrs	r0, r0, #7
 80027c4:	4770      	bx	lr

080027c6 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80027c6:	4770      	bx	lr

080027c8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80027c8:	4770      	bx	lr

080027ca <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80027ca:	4770      	bx	lr

080027cc <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80027cc:	4770      	bx	lr

080027ce <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 80027ce:	4770      	bx	lr

080027d0 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80027d0:	4770      	bx	lr

080027d2 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 80027d2:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 80027d4:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80027d6:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 80027d8:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027da:	466d      	mov	r5, sp
 80027dc:	4601      	mov	r1, r0
 80027de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80027e2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027e4:	4628      	mov	r0, r5
 80027e6:	4798      	blx	r3
 80027e8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027ec:	343c      	adds	r4, #60	; 0x3c
 80027ee:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80027f2:	b005      	add	sp, #20
 80027f4:	bd30      	pop	{r4, r5, pc}

080027f6 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80027f6:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80027f8:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80027fa:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80027fc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027fe:	466d      	mov	r5, sp
 8002800:	4601      	mov	r1, r0
 8002802:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002806:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002808:	4628      	mov	r0, r5
 800280a:	4798      	blx	r3
 800280c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002810:	343c      	adds	r4, #60	; 0x3c
 8002812:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002816:	b005      	add	sp, #20
 8002818:	bd30      	pop	{r4, r5, pc}

0800281a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800281a:	2200      	movs	r2, #0
 800281c:	8002      	strh	r2, [r0, #0]
 800281e:	8042      	strh	r2, [r0, #2]
 8002820:	8082      	strh	r2, [r0, #4]
 8002822:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002824:	4770      	bx	lr

08002826 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002826:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800282a:	4770      	bx	lr

0800282c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800282c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800282e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002830:	4604      	mov	r4, r0
        setX(x);
 8002832:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002834:	4615      	mov	r5, r2
        setX(x);
 8002836:	4798      	blx	r3
        setBaselineY(baselineY);
 8002838:	6823      	ldr	r3, [r4, #0]
 800283a:	4629      	mov	r1, r5
 800283c:	4620      	mov	r0, r4
 800283e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002840:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002844:	4718      	bx	r3

08002846 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002846:	2000      	movs	r0, #0
 8002848:	4770      	bx	lr

0800284a <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800284a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800284c:	4770      	bx	lr

0800284e <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 800284e:	4770      	bx	lr

08002850 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002850:	4770      	bx	lr

08002852 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002852:	4770      	bx	lr

08002854 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002854:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002856:	68c2      	ldr	r2, [r0, #12]
 8002858:	6844      	ldr	r4, [r0, #4]
 800285a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800285c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800285e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002862:	07d2      	lsls	r2, r2, #31
 8002864:	bf48      	it	mi
 8002866:	5962      	ldrmi	r2, [r4, r5]
 8002868:	689b      	ldr	r3, [r3, #8]
    }
 800286a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800286c:	bf48      	it	mi
 800286e:	58d3      	ldrmi	r3, [r2, r3]
 8002870:	4718      	bx	r3

08002872 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002872:	6843      	ldr	r3, [r0, #4]
 8002874:	b12b      	cbz	r3, 8002882 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002876:	6883      	ldr	r3, [r0, #8]
 8002878:	b92b      	cbnz	r3, 8002886 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800287a:	68c0      	ldr	r0, [r0, #12]
 800287c:	f000 0001 	and.w	r0, r0, #1
 8002880:	4770      	bx	lr
 8002882:	4618      	mov	r0, r3
 8002884:	4770      	bx	lr
 8002886:	2001      	movs	r0, #1
    }
 8002888:	4770      	bx	lr

0800288a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800288a:	b510      	push	{r4, lr}
    }
 800288c:	2108      	movs	r1, #8
    virtual ~TypedText()
 800288e:	4604      	mov	r4, r0
    }
 8002890:	f026 fb79 	bl	8028f86 <_ZdlPvj>
 8002894:	4620      	mov	r0, r4
 8002896:	bd10      	pop	{r4, pc}

08002898 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002898:	b510      	push	{r4, lr}
 800289a:	214c      	movs	r1, #76	; 0x4c
 800289c:	4604      	mov	r4, r0
 800289e:	f026 fb72 	bl	8028f86 <_ZdlPvj>
 80028a2:	4620      	mov	r0, r4
 80028a4:	bd10      	pop	{r4, pc}

080028a6 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80028a6:	b510      	push	{r4, lr}
 80028a8:	2110      	movs	r1, #16
 80028aa:	4604      	mov	r4, r0
 80028ac:	f026 fb6b 	bl	8028f86 <_ZdlPvj>
 80028b0:	4620      	mov	r0, r4
 80028b2:	bd10      	pop	{r4, pc}

080028b4 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80028b4:	b510      	push	{r4, lr}
 80028b6:	4b03      	ldr	r3, [pc, #12]	; (80028c4 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 80028b8:	6003      	str	r3, [r0, #0]
 80028ba:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80028bc:	f010 ffde 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80028c0:	4620      	mov	r0, r4
 80028c2:	bd10      	pop	{r4, pc}
 80028c4:	0802b808 	.word	0x0802b808

080028c8 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 80028c8:	b507      	push	{r0, r1, r2, lr}
 80028ca:	4b07      	ldr	r3, [pc, #28]	; (80028e8 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 80028cc:	6003      	str	r3, [r0, #0]
 80028ce:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80028d0:	f010 ffd4 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80028d4:	9801      	ldr	r0, [sp, #4]
 80028d6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80028da:	f026 fb54 	bl	8028f86 <_ZdlPvj>
 80028de:	9801      	ldr	r0, [sp, #4]
 80028e0:	b003      	add	sp, #12
 80028e2:	f85d fb04 	ldr.w	pc, [sp], #4
 80028e6:	bf00      	nop
 80028e8:	0802b808 	.word	0x0802b808

080028ec <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80028ec:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80028ee:	f7fe fd53 	bl	8001398 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80028f2:	bd08      	pop	{r3, pc}

080028f4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028f4:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028f6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028f8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80028fa:	4b12      	ldr	r3, [pc, #72]	; (8002944 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80028fc:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028fe:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002900:	b28d      	uxth	r5, r1
 8002902:	b92b      	cbnz	r3, 8002910 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002904:	4b10      	ldr	r3, [pc, #64]	; (8002948 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002906:	4a11      	ldr	r2, [pc, #68]	; (800294c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002908:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800290a:	4811      	ldr	r0, [pc, #68]	; (8002950 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 800290c:	f027 f94e 	bl	8029bac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002910:	4910      	ldr	r1, [pc, #64]	; (8002954 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002912:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002914:	8809      	ldrh	r1, [r1, #0]
 8002916:	4291      	cmp	r1, r2
 8002918:	d803      	bhi.n	8002922 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 800291a:	4b0f      	ldr	r3, [pc, #60]	; (8002958 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 800291c:	4a0b      	ldr	r2, [pc, #44]	; (800294c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800291e:	216d      	movs	r1, #109	; 0x6d
 8002920:	e7f3      	b.n	800290a <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002922:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002926:	4b0d      	ldr	r3, [pc, #52]	; (800295c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800292e:	6803      	ldr	r3, [r0, #0]
 8002930:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002932:	4798      	blx	r3
 8002934:	1a28      	subs	r0, r5, r0
 8002936:	b201      	sxth	r1, r0
 8002938:	4633      	mov	r3, r6
 800293a:	4620      	mov	r0, r4
    }
 800293c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002940:	4718      	bx	r3
 8002942:	bf00      	nop
 8002944:	20012ecc 	.word	0x20012ecc
 8002948:	0802b5a0 	.word	0x0802b5a0
 800294c:	0802b5e2 	.word	0x0802b5e2
 8002950:	0802b61d 	.word	0x0802b61d
 8002954:	20012ed0 	.word	0x20012ed0
 8002958:	0802b664 	.word	0x0802b664
 800295c:	20012ed4 	.word	0x20012ed4

08002960 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002960:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8002962:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8002966:	4299      	cmp	r1, r3
{
 8002968:	4604      	mov	r4, r0
 800296a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800296c:	d103      	bne.n	8002976 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800296e:	f012 fc87 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002972:	f001 f921 	bl	8003bb8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8002976:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800297a:	429d      	cmp	r5, r3
 800297c:	d103      	bne.n	8002986 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800297e:	f012 fc7f 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8002982:	f001 f9d9 	bl	8003d38 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8002986:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800298a:	42a5      	cmp	r5, r4
 800298c:	d105      	bne.n	800299a <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800298e:	f012 fc77 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 8002992:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 8002996:	f001 b9df 	b.w	8003d58 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 800299a:	bd38      	pop	{r3, r4, r5, pc}

0800299c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800299c:	2200      	movs	r2, #0
 800299e:	f04f 31ff 	mov.w	r1, #4294967295
 80029a2:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 80029a6:	6082      	str	r2, [r0, #8]
    }
 80029a8:	4770      	bx	lr

080029aa <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 80029aa:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 80029ac:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 80029ae:	4604      	mov	r4, r0
        setX(x);
 80029b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 80029b2:	4615      	mov	r5, r2
        setX(x);
 80029b4:	4798      	blx	r3
        setY(y);
 80029b6:	6823      	ldr	r3, [r4, #0]
 80029b8:	4629      	mov	r1, r5
 80029ba:	4620      	mov	r0, r4
 80029bc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 80029be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 80029c2:	4718      	bx	r3

080029c4 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80029c4:	b570      	push	{r4, r5, r6, lr}
 80029c6:	4604      	mov	r4, r0
 80029c8:	461d      	mov	r5, r3
 80029ca:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 80029ce:	f7ff ffec 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80029d2:	6823      	ldr	r3, [r4, #0]
 80029d4:	4629      	mov	r1, r5
 80029d6:	4620      	mov	r0, r4
 80029d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80029da:	4798      	blx	r3
        setHeight(height);
 80029dc:	6823      	ldr	r3, [r4, #0]
 80029de:	4631      	mov	r1, r6
 80029e0:	4620      	mov	r0, r4
 80029e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80029e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80029e8:	4718      	bx	r3
	...

080029ec <_ZN8touchgfx6WidgetC1Ev>:
 80029ec:	2200      	movs	r2, #0
 80029ee:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80029f2:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80029f6:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80029fa:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80029fe:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002a02:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002a04:	4a01      	ldr	r2, [pc, #4]	; (8002a0c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002a06:	6002      	str	r2, [r0, #0]
 8002a08:	4770      	bx	lr
 8002a0a:	bf00      	nop
 8002a0c:	0802b6e8 	.word	0x0802b6e8

08002a10 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002a10:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a12:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002a14:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a16:	2100      	movs	r1, #0
 8002a18:	f027 facd 	bl	8029fb6 <memset>
 8002a1c:	4620      	mov	r0, r4
 8002a1e:	f7ff ffe5 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8002a22:	4b0a      	ldr	r3, [pc, #40]	; (8002a4c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002a24:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002a26:	4b0a      	ldr	r3, [pc, #40]	; (8002a50 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002a28:	62a3      	str	r3, [r4, #40]	; 0x28
 8002a2a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002a2e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002a30:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002a34:	2300      	movs	r3, #0
 8002a36:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002a3a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002a3e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a42:	8723      	strh	r3, [r4, #56]	; 0x38
 8002a44:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002a46:	4620      	mov	r0, r4
 8002a48:	bd10      	pop	{r4, pc}
 8002a4a:	bf00      	nop
 8002a4c:	0802e008 	.word	0x0802e008
 8002a50:	0802b750 	.word	0x0802b750

08002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002a54:	4b1a      	ldr	r3, [pc, #104]	; (8002ac0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002a56:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002a58:	881b      	ldrh	r3, [r3, #0]
 8002a5a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002a5c:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002a5e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002a60:	d92b      	bls.n	8002aba <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002a62:	4b18      	ldr	r3, [pc, #96]	; (8002ac4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8002a64:	681b      	ldr	r3, [r3, #0]
 8002a66:	b92b      	cbnz	r3, 8002a74 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002a68:	4b17      	ldr	r3, [pc, #92]	; (8002ac8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002a6a:	4a18      	ldr	r2, [pc, #96]	; (8002acc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002a6c:	4818      	ldr	r0, [pc, #96]	; (8002ad0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002a6e:	216c      	movs	r1, #108	; 0x6c
 8002a70:	f027 f89c 	bl	8029bac <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002a74:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002a78:	4b16      	ldr	r3, [pc, #88]	; (8002ad4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002a80:	4b15      	ldr	r3, [pc, #84]	; (8002ad8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002a82:	6818      	ldr	r0, [r3, #0]
 8002a84:	f005 fc8c 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002a88:	682b      	ldr	r3, [r5, #0]
 8002a8a:	9001      	str	r0, [sp, #4]
 8002a8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a8e:	4628      	mov	r0, r5
 8002a90:	4798      	blx	r3
 8002a92:	682b      	ldr	r3, [r5, #0]
 8002a94:	9901      	ldr	r1, [sp, #4]
 8002a96:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002a98:	4604      	mov	r4, r0
 8002a9a:	4628      	mov	r0, r5
 8002a9c:	4798      	blx	r3
 8002a9e:	682b      	ldr	r3, [r5, #0]
 8002aa0:	9901      	ldr	r1, [sp, #4]
 8002aa2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002aa4:	fb14 f400 	smulbb	r4, r4, r0
 8002aa8:	4628      	mov	r0, r5
 8002aaa:	4798      	blx	r3
 8002aac:	b2a4      	uxth	r4, r4
 8002aae:	1823      	adds	r3, r4, r0
 8002ab0:	b21b      	sxth	r3, r3
 8002ab2:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002ab6:	b002      	add	sp, #8
 8002ab8:	bd70      	pop	{r4, r5, r6, pc}
 8002aba:	2300      	movs	r3, #0
 8002abc:	e7f9      	b.n	8002ab2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002abe:	bf00      	nop
 8002ac0:	20012ed0 	.word	0x20012ed0
 8002ac4:	20012ecc 	.word	0x20012ecc
 8002ac8:	0802b5a0 	.word	0x0802b5a0
 8002acc:	0802b5e2 	.word	0x0802b5e2
 8002ad0:	0802b61d 	.word	0x0802b61d
 8002ad4:	20012ed4 	.word	0x20012ed4
 8002ad8:	20012ed8 	.word	0x20012ed8

08002adc <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8002adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ae0:	ed2d 8b06 	vpush	{d8-d10}
 8002ae4:	4604      	mov	r4, r0
 8002ae6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 8002ae8:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002aea:	2500      	movs	r5, #0
 8002aec:	f014 f848 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 8002af0:	4b66      	ldr	r3, [pc, #408]	; (8002c8c <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 8002af2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002af4:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002af8:	2226      	movs	r2, #38	; 0x26
 8002afa:	4629      	mov	r1, r5
 8002afc:	4658      	mov	r0, fp
 8002afe:	f027 fa5a 	bl	8029fb6 <memset>
 8002b02:	4658      	mov	r0, fp
 8002b04:	f7ff ff72 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8002b08:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8002b0c:	26ff      	movs	r6, #255	; 0xff
 8002b0e:	4b60      	ldr	r3, [pc, #384]	; (8002c90 <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 8002b10:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002b12:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002b14:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b18:	4629      	mov	r1, r5
 8002b1a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002b1e:	4650      	mov	r0, sl
        : color(col)
 8002b20:	66a5      	str	r5, [r4, #104]	; 0x68
 8002b22:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002b26:	f027 fa46 	bl	8029fb6 <memset>
 8002b2a:	4650      	mov	r0, sl
 8002b2c:	f7ff ff5e 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8002b30:	4b58      	ldr	r3, [pc, #352]	; (8002c94 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 8002b32:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002b34:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002b38:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002b3c:	a90a      	add	r1, sp, #40	; 0x28
 8002b3e:	4650      	mov	r0, sl
 8002b40:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8002b44:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002b48:	f00f fe91 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8002b4c:	4648      	mov	r0, r9
 8002b4e:	f7ff ff5f 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8002b52:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8002b56:	4b50      	ldr	r3, [pc, #320]	; (8002c98 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 8002b58:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8002b5c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8002b60:	4638      	mov	r0, r7
 8002b62:	f00e fd4d 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 8002b66:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002b6a:	4618      	mov	r0, r3
 8002b6c:	9303      	str	r3, [sp, #12]
 8002b6e:	f7fe fc27 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002b72:	4b4a      	ldr	r3, [pc, #296]	; (8002c9c <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 8002b74:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8002b78:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8002b7c:	3324      	adds	r3, #36	; 0x24
 8002b7e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8002b82:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8002b86:	4640      	mov	r0, r8
 8002b88:	f7ff ff42 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8002b8c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8002b90:	4618      	mov	r0, r3
 8002b92:	ee08 3a10 	vmov	s16, r3
 8002b96:	f7ff ff3b 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8002b9a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8002b9e:	4618      	mov	r0, r3
 8002ba0:	ee08 3a90 	vmov	s17, r3
 8002ba4:	f7ff ff34 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8002ba8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002bac:	4618      	mov	r0, r3
 8002bae:	ee09 3a10 	vmov	s18, r3
 8002bb2:	f00f ff9d 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002bb6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002bba:	4618      	mov	r0, r3
 8002bbc:	ee09 3a90 	vmov	s19, r3
 8002bc0:	f00f ff96 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002bc4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002bc8:	4618      	mov	r0, r3
 8002bca:	ee0a 3a10 	vmov	s20, r3
 8002bce:	f00f ff8f 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002bd2:	4a33      	ldr	r2, [pc, #204]	; (8002ca0 <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002bd4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002bd8:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8002bdc:	4a31      	ldr	r2, [pc, #196]	; (8002ca4 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002bde:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002be2:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8002be6:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8002bea:	f010 fe3d 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002bee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002bf2:	462a      	mov	r2, r5
 8002bf4:	4658      	mov	r0, fp
 8002bf6:	9300      	str	r3, [sp, #0]
 8002bf8:	4629      	mov	r1, r5
 8002bfa:	23f0      	movs	r3, #240	; 0xf0
 8002bfc:	f7ff fee2 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002c00:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002c02:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002c06:	66a3      	str	r3, [r4, #104]	; 0x68
 8002c08:	4659      	mov	r1, fp
 8002c0a:	4630      	mov	r0, r6
 8002c0c:	f00d f8a0 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002c10:	462a      	mov	r2, r5
 8002c12:	4650      	mov	r0, sl
 8002c14:	4629      	mov	r1, r5
 8002c16:	f7ff fec8 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8002c1a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002c1c:	4650      	mov	r0, sl
 8002c1e:	a90a      	add	r1, sp, #40	; 0x28
 8002c20:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002c24:	f00f fe23 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002c28:	4651      	mov	r1, sl
 8002c2a:	4630      	mov	r0, r6
 8002c2c:	f00d f890 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 8002c30:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002c34:	2159      	movs	r1, #89	; 0x59
 8002c36:	4648      	mov	r0, r9
 8002c38:	f7ff feb7 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002c3c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8002c40:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8002c44:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8002c48:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8002c4c:	4650      	mov	r0, sl
 8002c4e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002c52:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8002c56:	4649      	mov	r1, r9
 8002c58:	4798      	blx	r3
 8002c5a:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8002c5e:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8002c62:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c66:	4b10      	ldr	r3, [pc, #64]	; (8002ca8 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 8002c68:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 8002c6a:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8002c6e:	b92b      	cbnz	r3, 8002c7c <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 8002c70:	4b0e      	ldr	r3, [pc, #56]	; (8002cac <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 8002c72:	4a0f      	ldr	r2, [pc, #60]	; (8002cb0 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002c74:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c76:	480f      	ldr	r0, [pc, #60]	; (8002cb4 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 8002c78:	f026 ff98 	bl	8029bac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002c7c:	4b0e      	ldr	r3, [pc, #56]	; (8002cb8 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c7e:	881b      	ldrh	r3, [r3, #0]
 8002c80:	2b14      	cmp	r3, #20
 8002c82:	d81d      	bhi.n	8002cc0 <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 8002c84:	4b0d      	ldr	r3, [pc, #52]	; (8002cbc <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 8002c86:	4a0a      	ldr	r2, [pc, #40]	; (8002cb0 <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 8002c88:	2161      	movs	r1, #97	; 0x61
 8002c8a:	e7f4      	b.n	8002c76 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 8002c8c:	0802b808 	.word	0x0802b808
 8002c90:	0802e098 	.word	0x0802e098
 8002c94:	0802e260 	.word	0x0802e260
 8002c98:	0802b760 	.word	0x0802b760
 8002c9c:	0802ddcc 	.word	0x0802ddcc
 8002ca0:	0802b7f0 	.word	0x0802b7f0
 8002ca4:	08002961 	.word	0x08002961
 8002ca8:	20012ecc 	.word	0x20012ecc
 8002cac:	0802b5a0 	.word	0x0802b5a0
 8002cb0:	0802b6a2 	.word	0x0802b6a2
 8002cb4:	0802b61d 	.word	0x0802b61d
 8002cb8:	20012ed0 	.word	0x20012ed0
 8002cbc:	0802b664 	.word	0x0802b664
        return texts->getText(typedTextId);
 8002cc0:	4b93      	ldr	r3, [pc, #588]	; (8002f10 <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002cc2:	2114      	movs	r1, #20
 8002cc4:	6818      	ldr	r0, [r3, #0]
 8002cc6:	f005 fb6b 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8002cca:	4a92      	ldr	r2, [pc, #584]	; (8002f14 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002ccc:	4603      	mov	r3, r0
 8002cce:	2104      	movs	r1, #4
 8002cd0:	4650      	mov	r0, sl
 8002cd2:	f015 fc39 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002cd6:	4648      	mov	r0, r9
        wc1 = value;
 8002cd8:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002cdc:	f00f f9cc 	bl	8012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002ce0:	4b8d      	ldr	r3, [pc, #564]	; (8002f18 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002ce2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002ce4:	a90a      	add	r1, sp, #40	; 0x28
 8002ce6:	2315      	movs	r3, #21
 8002ce8:	4648      	mov	r0, r9
 8002cea:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002cee:	f00f f9e3 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002cf2:	4649      	mov	r1, r9
 8002cf4:	4630      	mov	r0, r6
 8002cf6:	f00d f82b 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002cfa:	230a      	movs	r3, #10
 8002cfc:	9300      	str	r3, [sp, #0]
 8002cfe:	2232      	movs	r2, #50	; 0x32
 8002d00:	23f0      	movs	r3, #240	; 0xf0
 8002d02:	4629      	mov	r1, r5
 8002d04:	4638      	mov	r0, r7
 8002d06:	f7ff fe5d 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002d0a:	9b03      	ldr	r3, [sp, #12]
 8002d0c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002d10:	22a0      	movs	r2, #160	; 0xa0
 8002d12:	4611      	mov	r1, r2
 8002d14:	4638      	mov	r0, r7
 8002d16:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002d1a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002d1e:	f00e fd85 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002d22:	22a0      	movs	r2, #160	; 0xa0
 8002d24:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002d28:	4638      	mov	r0, r7
 8002d2a:	f00e fd8a 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002d2e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002d32:	2b20      	cmp	r3, #32
 8002d34:	d005      	beq.n	8002d42 <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002d36:	2320      	movs	r3, #32
 8002d38:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002d3c:	4638      	mov	r0, r7
 8002d3e:	f00e fc7f 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002d42:	4638      	mov	r0, r7
 8002d44:	2101      	movs	r1, #1
 8002d46:	f00e fd87 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002d4a:	4639      	mov	r1, r7
 8002d4c:	4630      	mov	r0, r6
 8002d4e:	ad04      	add	r5, sp, #16
        color = newColor;
 8002d50:	f04f 37ff 	mov.w	r7, #4294967295
 8002d54:	f00c fffc 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002d58:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002d5c:	223c      	movs	r2, #60	; 0x3c
 8002d5e:	4640      	mov	r0, r8
 8002d60:	2146      	movs	r1, #70	; 0x46
 8002d62:	f7ff fe22 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002d66:	4641      	mov	r1, r8
 8002d68:	4628      	mov	r0, r5
        color = newColor;
 8002d6a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002d6e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002d72:	f00e ff07 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002d76:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002d7a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002d7e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002d82:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002f18 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002d86:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002d8a:	230d      	movs	r3, #13
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002d8c:	a90a      	add	r1, sp, #40	; 0x28
 8002d8e:	4640      	mov	r0, r8
 8002d90:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002d94:	f00f f990 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002d98:	4641      	mov	r1, r8
 8002d9a:	4630      	mov	r0, r6
 8002d9c:	f00c ffd8 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002da0:	ee18 0a10 	vmov	r0, s16
 8002da4:	2223      	movs	r2, #35	; 0x23
 8002da6:	2145      	movs	r1, #69	; 0x45
 8002da8:	f7ff fdff 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8002dac:	ee18 1a10 	vmov	r1, s16
 8002db0:	4628      	mov	r0, r5
        color = newColor;
 8002db2:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002db6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002dba:	f00e fee3 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002dbe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002dc2:	ee18 3a10 	vmov	r3, s16
 8002dc6:	333c      	adds	r3, #60	; 0x3c
 8002dc8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002dcc:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002dce:	ee18 0a10 	vmov	r0, s16
 8002dd2:	a90a      	add	r1, sp, #40	; 0x28
 8002dd4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002dd8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002ddc:	f00f f96c 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002de0:	ee18 1a10 	vmov	r1, s16
 8002de4:	4630      	mov	r0, r6
 8002de6:	f00c ffb3 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002dea:	ee18 0a90 	vmov	r0, s17
 8002dee:	220c      	movs	r2, #12
 8002df0:	2136      	movs	r1, #54	; 0x36
 8002df2:	f7ff fdda 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8002df6:	ee18 1a90 	vmov	r1, s17
 8002dfa:	4628      	mov	r0, r5
        color = newColor;
 8002dfc:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002e00:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002e04:	f00e febe 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002e08:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e0c:	ee18 3a90 	vmov	r3, s17
 8002e10:	333c      	adds	r3, #60	; 0x3c
 8002e12:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002e16:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002e18:	ee18 0a90 	vmov	r0, s17
 8002e1c:	a90a      	add	r1, sp, #40	; 0x28
 8002e1e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002e22:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002e26:	f00f f947 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002e2a:	ee18 1a90 	vmov	r1, s17
 8002e2e:	4630      	mov	r0, r6
 8002e30:	f00c ff8e 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002e34:	ee19 0a10 	vmov	r0, s18
 8002e38:	22f0      	movs	r2, #240	; 0xf0
 8002e3a:	2121      	movs	r1, #33	; 0x21
 8002e3c:	f7ff fdb5 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8002e40:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002e44:	aa0a      	add	r2, sp, #40	; 0x28
 8002e46:	f04f 0802 	mov.w	r8, #2
 8002e4a:	a909      	add	r1, sp, #36	; 0x24
 8002e4c:	ee19 0a10 	vmov	r0, s18
 8002e50:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002e54:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002e58:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002e5c:	f00f fb11 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002e60:	2348      	movs	r3, #72	; 0x48
 8002e62:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002e66:	3510      	adds	r5, #16
        updateTextPosition();
 8002e68:	ee19 0a10 	vmov	r0, s18
 8002e6c:	f7ff fdf2 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002e70:	ee19 1a10 	vmov	r1, s18
 8002e74:	4630      	mov	r0, r6
        colorPressed = col;
 8002e76:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002e7a:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002e7e:	f00c ff67 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002e82:	ee19 0a90 	vmov	r0, s19
 8002e86:	22aa      	movs	r2, #170	; 0xaa
 8002e88:	2121      	movs	r1, #33	; 0x21
 8002e8a:	f7ff fd8e 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002e8e:	aa0a      	add	r2, sp, #40	; 0x28
 8002e90:	a909      	add	r1, sp, #36	; 0x24
 8002e92:	ee19 0a90 	vmov	r0, s19
 8002e96:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002e9a:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002e9e:	f00f faf0 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002ea2:	2347      	movs	r3, #71	; 0x47
 8002ea4:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002ea8:	ee19 0a90 	vmov	r0, s19
 8002eac:	f7ff fdd2 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002eb0:	ee19 1a90 	vmov	r1, s19
 8002eb4:	4630      	mov	r0, r6
        colorPressed = col;
 8002eb6:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002eba:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002ebe:	f00c ff47 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002ec2:	ee1a 0a10 	vmov	r0, s20
 8002ec6:	2264      	movs	r2, #100	; 0x64
 8002ec8:	2121      	movs	r1, #33	; 0x21
 8002eca:	f7ff fd6e 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002ece:	aa0a      	add	r2, sp, #40	; 0x28
 8002ed0:	a909      	add	r1, sp, #36	; 0x24
 8002ed2:	ee1a 0a10 	vmov	r0, s20
 8002ed6:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002eda:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002ede:	f00f fad0 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002ee2:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8002ee4:	ee1a 0a10 	vmov	r0, s20
 8002ee8:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002eec:	f7ff fdb2 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002ef0:	4630      	mov	r0, r6
        colorPressed = col;
 8002ef2:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002ef6:	ee1a 1a10 	vmov	r1, s20
 8002efa:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002efe:	f00c ff27 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002f02:	4620      	mov	r0, r4
 8002f04:	b00d      	add	sp, #52	; 0x34
 8002f06:	ecbd 8b06 	vpop	{d8-d10}
 8002f0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f0e:	bf00      	nop
 8002f10:	20012ed8 	.word	0x20012ed8
 8002f14:	0802b6da 	.word	0x0802b6da
 8002f18:	0802b750 	.word	0x0802b750

08002f1c <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002f1c:	4770      	bx	lr

08002f1e <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f1e:	4770      	bx	lr

08002f20 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002f20:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f22:	68c2      	ldr	r2, [r0, #12]
 8002f24:	6844      	ldr	r4, [r0, #4]
 8002f26:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002f28:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002f2a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002f2e:	07d2      	lsls	r2, r2, #31
 8002f30:	bf48      	it	mi
 8002f32:	5962      	ldrmi	r2, [r4, r5]
 8002f34:	689b      	ldr	r3, [r3, #8]
    }
 8002f36:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f38:	bf48      	it	mi
 8002f3a:	58d3      	ldrmi	r3, [r2, r3]
 8002f3c:	4718      	bx	r3

08002f3e <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002f3e:	6843      	ldr	r3, [r0, #4]
 8002f40:	b12b      	cbz	r3, 8002f4e <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002f42:	6883      	ldr	r3, [r0, #8]
 8002f44:	b92b      	cbnz	r3, 8002f52 <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002f46:	68c0      	ldr	r0, [r0, #12]
 8002f48:	f000 0001 	and.w	r0, r0, #1
 8002f4c:	4770      	bx	lr
 8002f4e:	4618      	mov	r0, r3
 8002f50:	4770      	bx	lr
 8002f52:	2001      	movs	r0, #1
    }
 8002f54:	4770      	bx	lr

08002f56 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f56:	b510      	push	{r4, lr}
 8002f58:	2110      	movs	r1, #16
 8002f5a:	4604      	mov	r4, r0
 8002f5c:	f026 f813 	bl	8028f86 <_ZdlPvj>
 8002f60:	4620      	mov	r0, r4
 8002f62:	bd10      	pop	{r4, pc}

08002f64 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002f64:	b510      	push	{r4, lr}
 8002f66:	4b03      	ldr	r3, [pc, #12]	; (8002f74 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002f68:	6003      	str	r3, [r0, #0]
 8002f6a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002f6c:	f010 fc86 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002f70:	4620      	mov	r0, r4
 8002f72:	bd10      	pop	{r4, pc}
 8002f74:	0802b854 	.word	0x0802b854

08002f78 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002f78:	b507      	push	{r0, r1, r2, lr}
 8002f7a:	4b07      	ldr	r3, [pc, #28]	; (8002f98 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002f7c:	6003      	str	r3, [r0, #0]
 8002f7e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002f80:	f010 fc7c 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002f84:	9801      	ldr	r0, [sp, #4]
 8002f86:	f241 015c 	movw	r1, #4188	; 0x105c
 8002f8a:	f025 fffc 	bl	8028f86 <_ZdlPvj>
 8002f8e:	9801      	ldr	r0, [sp, #4]
 8002f90:	b003      	add	sp, #12
 8002f92:	f85d fb04 	ldr.w	pc, [sp], #4
 8002f96:	bf00      	nop
 8002f98:	0802b854 	.word	0x0802b854

08002f9c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002f9c:	3098      	adds	r0, #152	; 0x98
 8002f9e:	4288      	cmp	r0, r1
{
 8002fa0:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002fa2:	d105      	bne.n	8002fb0 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002fa4:	f012 f96c 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002fa8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002fac:	f000 beb4 	b.w	8003d18 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002fb0:	bd08      	pop	{r3, pc}
	...

08002fb4 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002fb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002fb8:	ed2d 8b02 	vpush	{d8}
 8002fbc:	4604      	mov	r4, r0
 8002fbe:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002fc0:	46a1      	mov	r9, r4
 8002fc2:	2500      	movs	r5, #0
 8002fc4:	f013 fddc 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 8002fc8:	4ba5      	ldr	r3, [pc, #660]	; (8003260 <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002fca:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002fcc:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002fd0:	2226      	movs	r2, #38	; 0x26
 8002fd2:	4629      	mov	r1, r5
 8002fd4:	4648      	mov	r0, r9
 8002fd6:	f026 ffee 	bl	8029fb6 <memset>
 8002fda:	4648      	mov	r0, r9
 8002fdc:	f7ff fd06 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8002fe0:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002fe4:	26ff      	movs	r6, #255	; 0xff
 8002fe6:	4b9f      	ldr	r3, [pc, #636]	; (8003264 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002fe8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002fea:	2226      	movs	r2, #38	; 0x26
 8002fec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002ff0:	4629      	mov	r1, r5
 8002ff2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002ff6:	4640      	mov	r0, r8
 8002ff8:	66a5      	str	r5, [r4, #104]	; 0x68
 8002ffa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002ffe:	f026 ffda 	bl	8029fb6 <memset>
 8003002:	4640      	mov	r0, r8
 8003004:	f7ff fcf2 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8003008:	4b97      	ldr	r3, [pc, #604]	; (8003268 <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 800300a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800300c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003010:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003014:	a90a      	add	r1, sp, #40	; 0x28
 8003016:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800301a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 800301c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003020:	f00f fc25 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003024:	4658      	mov	r0, fp
 8003026:	f00f fd63 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800302a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800302e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8003032:	4618      	mov	r0, r3
 8003034:	ee08 3a90 	vmov	s17, r3
 8003038:	f7ff fcea 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 800303c:	4638      	mov	r0, r7
 800303e:	f00e fadf 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 8003042:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003046:	4618      	mov	r0, r3
 8003048:	9303      	str	r3, [sp, #12]
 800304a:	f7fe f9b9 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800304e:	4b87      	ldr	r3, [pc, #540]	; (800326c <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8003050:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8003054:	3324      	adds	r3, #36	; 0x24
 8003056:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800305a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800305e:	4618      	mov	r0, r3
 8003060:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8003064:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8003068:	ee08 3a10 	vmov	s16, r3
 800306c:	f7ff fcd0 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8003070:	4650      	mov	r0, sl
 8003072:	f7ff fccd 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003076:	4a7e      	ldr	r2, [pc, #504]	; (8003270 <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8003078:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800307c:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8003080:	4a7c      	ldr	r2, [pc, #496]	; (8003274 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8003082:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003086:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 800308a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800308e:	f010 fbeb 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8003092:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003096:	462a      	mov	r2, r5
 8003098:	4648      	mov	r0, r9
 800309a:	9300      	str	r3, [sp, #0]
 800309c:	4629      	mov	r1, r5
 800309e:	23f0      	movs	r3, #240	; 0xf0
 80030a0:	f7ff fc90 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80030a4:	1d26      	adds	r6, r4, #4
        color = newColor;
 80030a6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80030aa:	66a3      	str	r3, [r4, #104]	; 0x68
 80030ac:	4649      	mov	r1, r9
 80030ae:	4630      	mov	r0, r6
 80030b0:	f00c fe4e 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80030b4:	462a      	mov	r2, r5
 80030b6:	4640      	mov	r0, r8
 80030b8:	4629      	mov	r1, r5
 80030ba:	f7ff fc76 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80030be:	f04f 0909 	mov.w	r9, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80030c2:	4640      	mov	r0, r8
 80030c4:	a90a      	add	r1, sp, #40	; 0x28
 80030c6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80030ca:	f00f fbd0 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80030ce:	4641      	mov	r1, r8
 80030d0:	4630      	mov	r0, r6
 80030d2:	f00c fe3d 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80030d6:	4658      	mov	r0, fp
 80030d8:	f240 1201 	movw	r2, #257	; 0x101
 80030dc:	2121      	movs	r1, #33	; 0x21
 80030de:	f7ff fc64 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80030e2:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80030e4:	aa0a      	add	r2, sp, #40	; 0x28
 80030e6:	a909      	add	r1, sp, #36	; 0x24
 80030e8:	4658      	mov	r0, fp
 80030ea:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80030ee:	2302      	movs	r3, #2
 80030f0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80030f4:	f00f f9c5 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 80030f8:	4658      	mov	r0, fp
 80030fa:	f8a4 90d0 	strh.w	r9, [r4, #208]	; 0xd0
 80030fe:	f7ff fca9 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003102:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8003106:	330c      	adds	r3, #12
        color = col;
 8003108:	f04f 39ff 	mov.w	r9, #4294967295
 800310c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003110:	4659      	mov	r1, fp
 8003112:	4630      	mov	r0, r6
        colorPressed = col;
 8003114:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8003118:	f00c fe1a 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800311c:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8003120:	223c      	movs	r2, #60	; 0x3c
 8003122:	ee18 0a90 	vmov	r0, s17
 8003126:	2120      	movs	r1, #32
 8003128:	f7ff fc3f 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800312c:	ee18 1a90 	vmov	r1, s17
 8003130:	4640      	mov	r0, r8
        color = newColor;
 8003132:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8003136:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800313a:	f00e fd23 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800313e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003142:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8003146:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800314a:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003278 <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 800314e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003152:	230a      	movs	r3, #10
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8003154:	ee18 0a90 	vmov	r0, s17
 8003158:	a90a      	add	r1, sp, #40	; 0x28
 800315a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800315e:	f00e ffab 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003162:	ee18 1a90 	vmov	r1, s17
 8003166:	4630      	mov	r0, r6
 8003168:	f00c fdf2 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800316c:	230a      	movs	r3, #10
 800316e:	9300      	str	r3, [sp, #0]
 8003170:	2232      	movs	r2, #50	; 0x32
 8003172:	23f0      	movs	r3, #240	; 0xf0
 8003174:	4629      	mov	r1, r5
 8003176:	4638      	mov	r0, r7
 8003178:	f7ff fc24 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800317c:	9b03      	ldr	r3, [sp, #12]
 800317e:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003182:	22a0      	movs	r2, #160	; 0xa0
 8003184:	4611      	mov	r1, r2
 8003186:	4638      	mov	r0, r7
 8003188:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800318c:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8003190:	f00e fb4c 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003194:	22a0      	movs	r2, #160	; 0xa0
 8003196:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800319a:	4638      	mov	r0, r7
 800319c:	f00e fb51 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80031a0:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 80031a4:	2b20      	cmp	r3, #32
 80031a6:	d005      	beq.n	80031b4 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 80031a8:	2320      	movs	r3, #32
 80031aa:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 80031ae:	4638      	mov	r0, r7
 80031b0:	f00e fa46 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80031b4:	4638      	mov	r0, r7
 80031b6:	2101      	movs	r1, #1
 80031b8:	f00e fb4e 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80031bc:	4639      	mov	r1, r7
 80031be:	4630      	mov	r0, r6
 80031c0:	f00c fdc6 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80031c4:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 80031c8:	ee18 0a10 	vmov	r0, s16
 80031cc:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80031ce:	2500      	movs	r5, #0
 80031d0:	2145      	movs	r1, #69	; 0x45
 80031d2:	f7ff fbea 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80031d6:	ee18 1a10 	vmov	r1, s16
 80031da:	4640      	mov	r0, r8
        color = newColor;
 80031dc:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80031e0:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80031e4:	f00e fcce 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80031e8:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80031ec:	ee18 3a10 	vmov	r3, s16
 80031f0:	333c      	adds	r3, #60	; 0x3c
 80031f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80031f6:	230b      	movs	r3, #11
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 80031f8:	ee18 0a10 	vmov	r0, s16
 80031fc:	a90a      	add	r1, sp, #40	; 0x28
 80031fe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003202:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003206:	f00e ff57 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800320a:	ee18 1a10 	vmov	r1, s16
 800320e:	4630      	mov	r0, r6
 8003210:	f00c fd9e 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003214:	220c      	movs	r2, #12
 8003216:	4650      	mov	r0, sl
 8003218:	2136      	movs	r1, #54	; 0x36
 800321a:	f7ff fbc6 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800321e:	4651      	mov	r1, sl
 8003220:	4640      	mov	r0, r8
        color = newColor;
 8003222:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8003226:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800322a:	f00e fcab 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800322e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003232:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8003236:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800323a:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 800323c:	a90a      	add	r1, sp, #40	; 0x28
 800323e:	4650      	mov	r0, sl
 8003240:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003244:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003248:	f00e ff36 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800324c:	4630      	mov	r0, r6
 800324e:	4651      	mov	r1, sl
 8003250:	f00c fd7e 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003254:	4620      	mov	r0, r4
 8003256:	b00d      	add	sp, #52	; 0x34
 8003258:	ecbd 8b02 	vpop	{d8}
 800325c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003260:	0802b854 	.word	0x0802b854
 8003264:	0802e098 	.word	0x0802e098
 8003268:	0802e260 	.word	0x0802e260
 800326c:	0802ddcc 	.word	0x0802ddcc
 8003270:	0802b83c 	.word	0x0802b83c
 8003274:	08002f9d 	.word	0x08002f9d
 8003278:	0802b750 	.word	0x0802b750

0800327c <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 800327c:	4770      	bx	lr

0800327e <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800327e:	4770      	bx	lr

08003280 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003280:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003282:	68c2      	ldr	r2, [r0, #12]
 8003284:	6844      	ldr	r4, [r0, #4]
 8003286:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003288:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800328a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800328e:	07d2      	lsls	r2, r2, #31
 8003290:	bf48      	it	mi
 8003292:	5962      	ldrmi	r2, [r4, r5]
 8003294:	689b      	ldr	r3, [r3, #8]
    }
 8003296:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003298:	bf48      	it	mi
 800329a:	58d3      	ldrmi	r3, [r2, r3]
 800329c:	4718      	bx	r3

0800329e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800329e:	6843      	ldr	r3, [r0, #4]
 80032a0:	b12b      	cbz	r3, 80032ae <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80032a2:	6883      	ldr	r3, [r0, #8]
 80032a4:	b92b      	cbnz	r3, 80032b2 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80032a6:	68c0      	ldr	r0, [r0, #12]
 80032a8:	f000 0001 	and.w	r0, r0, #1
 80032ac:	4770      	bx	lr
 80032ae:	4618      	mov	r0, r3
 80032b0:	4770      	bx	lr
 80032b2:	2001      	movs	r0, #1
    }
 80032b4:	4770      	bx	lr

080032b6 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80032b6:	b510      	push	{r4, lr}
 80032b8:	2110      	movs	r1, #16
 80032ba:	4604      	mov	r4, r0
 80032bc:	f025 fe63 	bl	8028f86 <_ZdlPvj>
 80032c0:	4620      	mov	r0, r4
 80032c2:	bd10      	pop	{r4, pc}

080032c4 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80032c4:	b510      	push	{r4, lr}
 80032c6:	4b03      	ldr	r3, [pc, #12]	; (80032d4 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 80032c8:	6003      	str	r3, [r0, #0]
 80032ca:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80032cc:	f010 fad6 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80032d0:	4620      	mov	r0, r4
 80032d2:	bd10      	pop	{r4, pc}
 80032d4:	0802b8a0 	.word	0x0802b8a0

080032d8 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80032d8:	b507      	push	{r0, r1, r2, lr}
 80032da:	4b07      	ldr	r3, [pc, #28]	; (80032f8 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 80032dc:	6003      	str	r3, [r0, #0]
 80032de:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80032e0:	f010 facc 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80032e4:	9801      	ldr	r0, [sp, #4]
 80032e6:	f241 015c 	movw	r1, #4188	; 0x105c
 80032ea:	f025 fe4c 	bl	8028f86 <_ZdlPvj>
 80032ee:	9801      	ldr	r0, [sp, #4]
 80032f0:	b003      	add	sp, #12
 80032f2:	f85d fb04 	ldr.w	pc, [sp], #4
 80032f6:	bf00      	nop
 80032f8:	0802b8a0 	.word	0x0802b8a0

080032fc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80032fc:	3098      	adds	r0, #152	; 0x98
 80032fe:	4288      	cmp	r0, r1
{
 8003300:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8003302:	d105      	bne.n	8003310 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003304:	f011 ffbc 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8003308:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 800330c:	f000 bd04 	b.w	8003d18 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8003310:	bd08      	pop	{r3, pc}
	...

08003314 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003318:	ed2d 8b02 	vpush	{d8}
 800331c:	4604      	mov	r4, r0
 800331e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003320:	46a1      	mov	r9, r4
 8003322:	2500      	movs	r5, #0
 8003324:	f013 fc2c 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 8003328:	4ba5      	ldr	r3, [pc, #660]	; (80035c0 <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 800332a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800332c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8003330:	2226      	movs	r2, #38	; 0x26
 8003332:	4629      	mov	r1, r5
 8003334:	4648      	mov	r0, r9
 8003336:	f026 fe3e 	bl	8029fb6 <memset>
 800333a:	4648      	mov	r0, r9
 800333c:	f7ff fb56 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8003340:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8003344:	26ff      	movs	r6, #255	; 0xff
 8003346:	4b9f      	ldr	r3, [pc, #636]	; (80035c4 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 8003348:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800334a:	2226      	movs	r2, #38	; 0x26
 800334c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003350:	4629      	mov	r1, r5
 8003352:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8003356:	4640      	mov	r0, r8
 8003358:	66a5      	str	r5, [r4, #104]	; 0x68
 800335a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800335e:	f026 fe2a 	bl	8029fb6 <memset>
 8003362:	4640      	mov	r0, r8
 8003364:	f7ff fb42 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8003368:	4b97      	ldr	r3, [pc, #604]	; (80035c8 <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 800336a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800336c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8003370:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003374:	a90a      	add	r1, sp, #40	; 0x28
 8003376:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800337a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 800337c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003380:	f00f fa75 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003384:	4658      	mov	r0, fp
 8003386:	f00f fbb3 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800338a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800338e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8003392:	4618      	mov	r0, r3
 8003394:	ee08 3a90 	vmov	s17, r3
 8003398:	f7ff fb3a 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 800339c:	4638      	mov	r0, r7
 800339e:	f00e f92f 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 80033a2:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80033a6:	4618      	mov	r0, r3
 80033a8:	9303      	str	r3, [sp, #12]
 80033aa:	f7fe f809 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80033ae:	4b87      	ldr	r3, [pc, #540]	; (80035cc <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 80033b0:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80033b4:	3324      	adds	r3, #36	; 0x24
 80033b6:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80033ba:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80033be:	4618      	mov	r0, r3
 80033c0:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80033c4:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80033c8:	ee08 3a10 	vmov	s16, r3
 80033cc:	f7ff fb20 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80033d0:	4650      	mov	r0, sl
 80033d2:	f7ff fb1d 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80033d6:	4a7e      	ldr	r2, [pc, #504]	; (80035d0 <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 80033d8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80033dc:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 80033e0:	4a7c      	ldr	r2, [pc, #496]	; (80035d4 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80033e2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80033e6:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 80033ea:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80033ee:	f010 fa3b 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80033f2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80033f6:	462a      	mov	r2, r5
 80033f8:	4648      	mov	r0, r9
 80033fa:	9300      	str	r3, [sp, #0]
 80033fc:	4629      	mov	r1, r5
 80033fe:	23f0      	movs	r3, #240	; 0xf0
 8003400:	f7ff fae0 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003404:	1d26      	adds	r6, r4, #4
        color = newColor;
 8003406:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800340a:	66a3      	str	r3, [r4, #104]	; 0x68
 800340c:	4649      	mov	r1, r9
 800340e:	4630      	mov	r0, r6
 8003410:	f00c fc9e 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003414:	462a      	mov	r2, r5
 8003416:	4640      	mov	r0, r8
 8003418:	4629      	mov	r1, r5
 800341a:	f7ff fac6 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800341e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003420:	4640      	mov	r0, r8
 8003422:	a90a      	add	r1, sp, #40	; 0x28
 8003424:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003428:	f00f fa21 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800342c:	4641      	mov	r1, r8
 800342e:	4630      	mov	r0, r6
 8003430:	f00c fc8e 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003434:	4658      	mov	r0, fp
 8003436:	f240 1201 	movw	r2, #257	; 0x101
 800343a:	2121      	movs	r1, #33	; 0x21
 800343c:	f7ff fab5 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8003440:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003442:	aa0a      	add	r2, sp, #40	; 0x28
 8003444:	a909      	add	r1, sp, #36	; 0x24
 8003446:	4658      	mov	r0, fp
 8003448:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800344c:	2302      	movs	r3, #2
 800344e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003452:	f00f f816 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003456:	230f      	movs	r3, #15
        updateTextPosition();
 8003458:	4658      	mov	r0, fp
 800345a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800345e:	f7ff faf9 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8003462:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8003466:	330c      	adds	r3, #12
        color = col;
 8003468:	f04f 39ff 	mov.w	r9, #4294967295
 800346c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003470:	4659      	mov	r1, fp
 8003472:	4630      	mov	r0, r6
        colorPressed = col;
 8003474:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8003478:	f00c fc6a 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800347c:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 8003480:	223c      	movs	r2, #60	; 0x3c
 8003482:	ee18 0a90 	vmov	r0, s17
 8003486:	213a      	movs	r1, #58	; 0x3a
 8003488:	f7ff fa8f 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800348c:	ee18 1a90 	vmov	r1, s17
 8003490:	4640      	mov	r0, r8
        color = newColor;
 8003492:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8003496:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800349a:	f00e fb73 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800349e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80034a2:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80034a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80034aa:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80035d8 <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 80034ae:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80034b2:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 80034b4:	ee18 0a90 	vmov	r0, s17
 80034b8:	a90a      	add	r1, sp, #40	; 0x28
 80034ba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80034be:	f00e fdfb 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034c2:	ee18 1a90 	vmov	r1, s17
 80034c6:	4630      	mov	r0, r6
 80034c8:	f00c fc42 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80034cc:	230a      	movs	r3, #10
 80034ce:	9300      	str	r3, [sp, #0]
 80034d0:	2232      	movs	r2, #50	; 0x32
 80034d2:	23f0      	movs	r3, #240	; 0xf0
 80034d4:	4629      	mov	r1, r5
 80034d6:	4638      	mov	r0, r7
 80034d8:	f7ff fa74 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80034dc:	9b03      	ldr	r3, [sp, #12]
 80034de:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80034e2:	22a0      	movs	r2, #160	; 0xa0
 80034e4:	4611      	mov	r1, r2
 80034e6:	4638      	mov	r0, r7
 80034e8:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80034ec:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80034f0:	f00e f99c 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80034f4:	22a0      	movs	r2, #160	; 0xa0
 80034f6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80034fa:	4638      	mov	r0, r7
 80034fc:	f00e f9a1 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8003500:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8003504:	2b20      	cmp	r3, #32
 8003506:	d005      	beq.n	8003514 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8003508:	2320      	movs	r3, #32
 800350a:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800350e:	4638      	mov	r0, r7
 8003510:	f00e f896 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003514:	4638      	mov	r0, r7
 8003516:	2101      	movs	r1, #1
 8003518:	f00e f99e 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800351c:	4639      	mov	r1, r7
 800351e:	4630      	mov	r0, r6
 8003520:	f00c fc16 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003524:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8003528:	ee18 0a10 	vmov	r0, s16
 800352c:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800352e:	2500      	movs	r5, #0
 8003530:	2145      	movs	r1, #69	; 0x45
 8003532:	f7ff fa3a 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003536:	ee18 1a10 	vmov	r1, s16
 800353a:	4640      	mov	r0, r8
        color = newColor;
 800353c:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8003540:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8003544:	f00e fb1e 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003548:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800354c:	ee18 3a10 	vmov	r3, s16
 8003550:	333c      	adds	r3, #60	; 0x3c
 8003552:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003556:	2310      	movs	r3, #16
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 8003558:	ee18 0a10 	vmov	r0, s16
 800355c:	a90a      	add	r1, sp, #40	; 0x28
 800355e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003562:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003566:	f00e fda7 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800356a:	ee18 1a10 	vmov	r1, s16
 800356e:	4630      	mov	r0, r6
 8003570:	f00c fbee 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8003574:	220c      	movs	r2, #12
 8003576:	4650      	mov	r0, sl
 8003578:	2136      	movs	r1, #54	; 0x36
 800357a:	f7ff fa16 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800357e:	4651      	mov	r1, sl
 8003580:	4640      	mov	r0, r8
        color = newColor;
 8003582:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8003586:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800358a:	f00e fafb 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800358e:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8003592:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8003596:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800359a:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 800359c:	a90a      	add	r1, sp, #40	; 0x28
 800359e:	4650      	mov	r0, sl
 80035a0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80035a4:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80035a8:	f00e fd86 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035ac:	4630      	mov	r0, r6
 80035ae:	4651      	mov	r1, sl
 80035b0:	f00c fbce 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80035b4:	4620      	mov	r0, r4
 80035b6:	b00d      	add	sp, #52	; 0x34
 80035b8:	ecbd 8b02 	vpop	{d8}
 80035bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035c0:	0802b8a0 	.word	0x0802b8a0
 80035c4:	0802e098 	.word	0x0802e098
 80035c8:	0802e260 	.word	0x0802e260
 80035cc:	0802ddcc 	.word	0x0802ddcc
 80035d0:	0802b888 	.word	0x0802b888
 80035d4:	080032fd 	.word	0x080032fd
 80035d8:	0802b750 	.word	0x0802b750

080035dc <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80035dc:	4770      	bx	lr

080035de <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80035de:	4770      	bx	lr

080035e0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80035e0:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80035e4:	6808      	ldr	r0, [r1, #0]
 80035e6:	6849      	ldr	r1, [r1, #4]
 80035e8:	c303      	stmia	r3!, {r0, r1}
    }
 80035ea:	4770      	bx	lr

080035ec <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80035ec:	4770      	bx	lr

080035ee <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80035ee:	4770      	bx	lr

080035f0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80035f0:	6041      	str	r1, [r0, #4]
    }
 80035f2:	4770      	bx	lr

080035f4 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80035f4:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80035f6:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80035f8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80035fc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003600:	8002      	strh	r2, [r0, #0]
 8003602:	8042      	strh	r2, [r0, #2]
 8003604:	8084      	strh	r4, [r0, #4]
 8003606:	80c1      	strh	r1, [r0, #6]
        }
 8003608:	bd10      	pop	{r4, pc}

0800360a <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 800360a:	4770      	bx	lr

0800360c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800360c:	4770      	bx	lr
	...

08003610 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003610:	4b06      	ldr	r3, [pc, #24]	; (800362c <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003612:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003616:	2300      	movs	r3, #0
 8003618:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800361c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003620:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003624:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8003628:	4770      	bx	lr
 800362a:	bf00      	nop
 800362c:	080039cd 	.word	0x080039cd

08003630 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003630:	2301      	movs	r3, #1
 8003632:	7203      	strb	r3, [r0, #8]
    }
 8003634:	4770      	bx	lr

08003636 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003636:	4770      	bx	lr

08003638 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003638:	4770      	bx	lr

0800363a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 800363a:	4770      	bx	lr

0800363c <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800363c:	4770      	bx	lr

0800363e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800363e:	4770      	bx	lr

08003640 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003640:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003642:	6840      	ldr	r0, [r0, #4]
 8003644:	6803      	ldr	r3, [r0, #0]
 8003646:	3110      	adds	r1, #16
 8003648:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800364a:	4718      	bx	r3

0800364c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 800364c:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800364e:	6840      	ldr	r0, [r0, #4]
 8003650:	6803      	ldr	r3, [r0, #0]
 8003652:	3110      	adds	r1, #16
 8003654:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003656:	4718      	bx	r3

08003658 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003658:	4770      	bx	lr

0800365a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 800365a:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 800365c:	6840      	ldr	r0, [r0, #4]
 800365e:	6803      	ldr	r3, [r0, #0]
 8003660:	3110      	adds	r1, #16
 8003662:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003664:	4718      	bx	r3

08003666 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8003666:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8003668:	6840      	ldr	r0, [r0, #4]
 800366a:	6803      	ldr	r3, [r0, #0]
 800366c:	3110      	adds	r1, #16
 800366e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003670:	4718      	bx	r3

08003672 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 8003672:	4770      	bx	lr

08003674 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003674:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003676:	68c2      	ldr	r2, [r0, #12]
 8003678:	6841      	ldr	r1, [r0, #4]
 800367a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800367c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800367e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003682:	07d2      	lsls	r2, r2, #31
 8003684:	bf48      	it	mi
 8003686:	590a      	ldrmi	r2, [r1, r4]
 8003688:	689b      	ldr	r3, [r3, #8]
    }
 800368a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800368e:	bf48      	it	mi
 8003690:	58d3      	ldrmi	r3, [r2, r3]
 8003692:	4718      	bx	r3

08003694 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003694:	6843      	ldr	r3, [r0, #4]
 8003696:	b12b      	cbz	r3, 80036a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8003698:	6883      	ldr	r3, [r0, #8]
 800369a:	b92b      	cbnz	r3, 80036a8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800369c:	68c0      	ldr	r0, [r0, #12]
 800369e:	f000 0001 	and.w	r0, r0, #1
 80036a2:	4770      	bx	lr
 80036a4:	4618      	mov	r0, r3
 80036a6:	4770      	bx	lr
 80036a8:	2001      	movs	r0, #1
    }
 80036aa:	4770      	bx	lr

080036ac <_ZN8touchgfx12NoTransitionD0Ev>:
 80036ac:	b510      	push	{r4, lr}
 80036ae:	210c      	movs	r1, #12
 80036b0:	4604      	mov	r4, r0
 80036b2:	f025 fc68 	bl	8028f86 <_ZdlPvj>
 80036b6:	4620      	mov	r0, r4
 80036b8:	bd10      	pop	{r4, pc}

080036ba <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80036ba:	b510      	push	{r4, lr}
 80036bc:	2110      	movs	r1, #16
 80036be:	4604      	mov	r4, r0
 80036c0:	f025 fc61 	bl	8028f86 <_ZdlPvj>
 80036c4:	4620      	mov	r0, r4
 80036c6:	bd10      	pop	{r4, pc}

080036c8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80036c8:	b510      	push	{r4, lr}
 80036ca:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80036ce:	4604      	mov	r4, r0
 80036d0:	f025 fc59 	bl	8028f86 <_ZdlPvj>
 80036d4:	4620      	mov	r0, r4
 80036d6:	bd10      	pop	{r4, pc}

080036d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 80036d8:	b510      	push	{r4, lr}
 80036da:	2138      	movs	r1, #56	; 0x38
 80036dc:	4604      	mov	r4, r0
 80036de:	f025 fc52 	bl	8028f86 <_ZdlPvj>
 80036e2:	4620      	mov	r0, r4
 80036e4:	bd10      	pop	{r4, pc}

080036e6 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 80036e6:	b510      	push	{r4, lr}
 80036e8:	2128      	movs	r1, #40	; 0x28
 80036ea:	4604      	mov	r4, r0
 80036ec:	f025 fc4b 	bl	8028f86 <_ZdlPvj>
 80036f0:	4620      	mov	r0, r4
 80036f2:	bd10      	pop	{r4, pc}

080036f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 80036f4:	b510      	push	{r4, lr}
 80036f6:	2138      	movs	r1, #56	; 0x38
 80036f8:	4604      	mov	r4, r0
 80036fa:	f025 fc44 	bl	8028f86 <_ZdlPvj>
 80036fe:	4620      	mov	r0, r4
 8003700:	bd10      	pop	{r4, pc}

08003702 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003702:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003704:	f011 fdbc 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
 8003708:	6803      	ldr	r3, [r0, #0]
    }
 800370a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800370e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003710:	4718      	bx	r3
	...

08003714 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003714:	b513      	push	{r0, r1, r4, lr}
 8003716:	4604      	mov	r4, r0
        animationCounter++;
 8003718:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800371a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800371c:	3001      	adds	r0, #1
 800371e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003720:	4298      	cmp	r0, r3
        animationCounter++;
 8003722:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003724:	d905      	bls.n	8003732 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8003726:	2301      	movs	r3, #1
 8003728:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800372a:	2300      	movs	r3, #0
 800372c:	72a3      	strb	r3, [r4, #10]
    }
 800372e:	b002      	add	sp, #8
 8003730:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003732:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003736:	2100      	movs	r1, #0
 8003738:	f013 fbd4 	bl	8016ee4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800373c:	f010 0201 	ands.w	r2, r0, #1
 8003740:	b283      	uxth	r3, r0
 8003742:	d12a      	bne.n	800379a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003744:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003746:	4a19      	ldr	r2, [pc, #100]	; (80037ac <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8003748:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 800374c:	89e3      	ldrh	r3, [r4, #14]
 800374e:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 8003750:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8003754:	82a0      	strh	r0, [r4, #20]
 8003756:	2000      	movs	r0, #0
 8003758:	1ad2      	subs	r2, r2, r3
 800375a:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800375e:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 8003760:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 8003762:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8003764:	4a12      	ldr	r2, [pc, #72]	; (80037b0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8003766:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800376a:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 800376c:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 8003770:	691b      	ldr	r3, [r3, #16]
 8003772:	f8ad 1000 	strh.w	r1, [sp]
 8003776:	f8ad 2006 	strh.w	r2, [sp, #6]
 800377a:	4669      	mov	r1, sp
 800377c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800377e:	7aa3      	ldrb	r3, [r4, #10]
 8003780:	2b01      	cmp	r3, #1
 8003782:	d1d4      	bne.n	800372e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 8003784:	4b0b      	ldr	r3, [pc, #44]	; (80037b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 8003786:	781b      	ldrb	r3, [r3, #0]
 8003788:	2b00      	cmp	r3, #0
 800378a:	d0d0      	beq.n	800372e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800378c:	f011 fd78 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003790:	b002      	add	sp, #8
 8003792:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003796:	f011 bd79 	b.w	801528c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800379a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800379e:	2800      	cmp	r0, #0
 80037a0:	bfd8      	it	le
 80037a2:	460a      	movle	r2, r1
 80037a4:	4413      	add	r3, r2
 80037a6:	81e3      	strh	r3, [r4, #14]
 80037a8:	e7cd      	b.n	8003746 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80037aa:	bf00      	nop
 80037ac:	20012e68 	.word	0x20012e68
 80037b0:	20012e6a 	.word	0x20012e6a
 80037b4:	20012e72 	.word	0x20012e72

080037b8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80037b8:	b510      	push	{r4, lr}
 80037ba:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80037bc:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80037c0:	b158      	cbz	r0, 80037da <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80037c2:	6803      	ldr	r3, [r0, #0]
 80037c4:	68db      	ldr	r3, [r3, #12]
 80037c6:	4798      	blx	r3
 80037c8:	b138      	cbz	r0, 80037da <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80037ca:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80037ce:	6803      	ldr	r3, [r0, #0]
 80037d0:	689b      	ldr	r3, [r3, #8]
 80037d2:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80037d4:	2300      	movs	r3, #0
 80037d6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80037da:	bd10      	pop	{r4, pc}

080037dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 80037dc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80037e0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80037e4:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80037e6:	68a8      	ldr	r0, [r5, #8]
 80037e8:	6803      	ldr	r3, [r0, #0]
 80037ea:	6a1b      	ldr	r3, [r3, #32]
 80037ec:	4798      	blx	r3
 80037ee:	2897      	cmp	r0, #151	; 0x97
 80037f0:	d805      	bhi.n	80037fe <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 80037f2:	4b46      	ldr	r3, [pc, #280]	; (800390c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 80037f4:	4a46      	ldr	r2, [pc, #280]	; (8003910 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 80037f6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80037f8:	4846      	ldr	r0, [pc, #280]	; (8003914 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 80037fa:	f026 f9d7 	bl	8029bac <__assert_func>
 80037fe:	6868      	ldr	r0, [r5, #4]
 8003800:	6803      	ldr	r3, [r0, #0]
 8003802:	6a1b      	ldr	r3, [r3, #32]
 8003804:	4798      	blx	r3
 8003806:	280f      	cmp	r0, #15
 8003808:	d803      	bhi.n	8003812 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 800380a:	4b43      	ldr	r3, [pc, #268]	; (8003918 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 800380c:	4a40      	ldr	r2, [pc, #256]	; (8003910 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800380e:	21a4      	movs	r1, #164	; 0xa4
 8003810:	e7f2      	b.n	80037f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003812:	68e8      	ldr	r0, [r5, #12]
 8003814:	6803      	ldr	r3, [r0, #0]
 8003816:	6a1b      	ldr	r3, [r3, #32]
 8003818:	4798      	blx	r3
 800381a:	280b      	cmp	r0, #11
 800381c:	d803      	bhi.n	8003826 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 800381e:	4b3f      	ldr	r3, [pc, #252]	; (800391c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 8003820:	4a3b      	ldr	r2, [pc, #236]	; (8003910 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003822:	21a5      	movs	r1, #165	; 0xa5
 8003824:	e7e8      	b.n	80037f8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003826:	f011 fd2b 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800382a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003924 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800382e:	3004      	adds	r0, #4
 8003830:	f011 fd8c 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003834:	f8d9 0000 	ldr.w	r0, [r9]
 8003838:	b110      	cbz	r0, 8003840 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800383a:	6803      	ldr	r3, [r0, #0]
 800383c:	68db      	ldr	r3, [r3, #12]
 800383e:	4798      	blx	r3
    if (*currentTrans)
 8003840:	f8d9 0000 	ldr.w	r0, [r9]
 8003844:	b110      	cbz	r0, 800384c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003846:	6803      	ldr	r3, [r0, #0]
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	4798      	blx	r3
    if (*currentScreen)
 800384c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003928 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 8003850:	f8d8 0000 	ldr.w	r0, [r8]
 8003854:	b110      	cbz	r0, 800385c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003856:	6803      	ldr	r3, [r0, #0]
 8003858:	695b      	ldr	r3, [r3, #20]
 800385a:	4798      	blx	r3
    if (*currentPresenter)
 800385c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003860:	b110      	cbz	r0, 8003868 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003862:	6803      	ldr	r3, [r0, #0]
 8003864:	685b      	ldr	r3, [r3, #4]
 8003866:	4798      	blx	r3
    if (*currentScreen)
 8003868:	f8d8 0000 	ldr.w	r0, [r8]
 800386c:	b110      	cbz	r0, 8003874 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800386e:	6803      	ldr	r3, [r0, #0]
 8003870:	681b      	ldr	r3, [r3, #0]
 8003872:	4798      	blx	r3
    if (*currentPresenter)
 8003874:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003878:	b110      	cbz	r0, 8003880 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800387a:	6803      	ldr	r3, [r0, #0]
 800387c:	689b      	ldr	r3, [r3, #8]
 800387e:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003880:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8003882:	6803      	ldr	r3, [r0, #0]
 8003884:	2100      	movs	r1, #0
 8003886:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003888:	4798      	blx	r3
        : screenContainer(0), done(false)
 800388a:	f04f 0b00 	mov.w	fp, #0
 800388e:	4b24      	ldr	r3, [pc, #144]	; (8003920 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 8003890:	6003      	str	r3, [r0, #0]
 8003892:	4604      	mov	r4, r0
 8003894:	f8c0 b004 	str.w	fp, [r0, #4]
 8003898:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800389c:	68a8      	ldr	r0, [r5, #8]
 800389e:	6803      	ldr	r3, [r0, #0]
 80038a0:	4659      	mov	r1, fp
 80038a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038a4:	4798      	blx	r3
 80038a6:	4606      	mov	r6, r0
 80038a8:	f005 fa42 	bl	8008d30 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80038ac:	6868      	ldr	r0, [r5, #4]
 80038ae:	6803      	ldr	r3, [r0, #0]
 80038b0:	4659      	mov	r1, fp
 80038b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80038b4:	4798      	blx	r3
 80038b6:	4631      	mov	r1, r6
 80038b8:	4605      	mov	r5, r0
 80038ba:	f005 fa15 	bl	8008ce8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80038be:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80038c2:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80038c6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80038ca:	b1e5      	cbz	r5, 8003906 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80038cc:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80038ce:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80038d2:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80038d4:	f8c5 a008 	str.w	sl, [r5, #8]
 80038d8:	4630      	mov	r0, r6
 80038da:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80038dc:	63f5      	str	r5, [r6, #60]	; 0x3c
 80038de:	4798      	blx	r3
    newPresenter->activate();
 80038e0:	682b      	ldr	r3, [r5, #0]
 80038e2:	4628      	mov	r0, r5
 80038e4:	681b      	ldr	r3, [r3, #0]
 80038e6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80038e8:	4621      	mov	r1, r4
 80038ea:	4630      	mov	r0, r6
 80038ec:	f013 faf4 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80038f0:	6823      	ldr	r3, [r4, #0]
 80038f2:	4620      	mov	r0, r4
 80038f4:	691b      	ldr	r3, [r3, #16]
 80038f6:	4798      	blx	r3
    newTransition->invalidate();
 80038f8:	6823      	ldr	r3, [r4, #0]
 80038fa:	695b      	ldr	r3, [r3, #20]
 80038fc:	4620      	mov	r0, r4
}
 80038fe:	b001      	add	sp, #4
 8003900:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003904:	4718      	bx	r3
    model->bind(newPresenter);
 8003906:	462b      	mov	r3, r5
 8003908:	e7e1      	b.n	80038ce <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 800390a:	bf00      	nop
 800390c:	0802b8cc 	.word	0x0802b8cc
 8003910:	0802b95a 	.word	0x0802b95a
 8003914:	0802ba68 	.word	0x0802ba68
 8003918:	0802baaf 	.word	0x0802baaf
 800391c:	0802bb52 	.word	0x0802bb52
 8003920:	0802cf70 	.word	0x0802cf70
 8003924:	20012ebc 	.word	0x20012ebc
 8003928:	20012eb8 	.word	0x20012eb8

0800392c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800392c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800392e:	4604      	mov	r4, r0
        animationCounter++;
 8003930:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003932:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003934:	3001      	adds	r0, #1
 8003936:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003938:	4298      	cmp	r0, r3
        animationCounter++;
 800393a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 800393c:	d905      	bls.n	800394a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800393e:	2301      	movs	r3, #1
 8003940:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003942:	2300      	movs	r3, #0
 8003944:	72a3      	strb	r3, [r4, #10]
    }
 8003946:	b003      	add	sp, #12
 8003948:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800394a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800394e:	2100      	movs	r1, #0
 8003950:	f013 fac8 	bl	8016ee4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003954:	f010 0201 	ands.w	r2, r0, #1
 8003958:	b283      	uxth	r3, r0
 800395a:	d128      	bne.n	80039ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800395c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800395e:	4b18      	ldr	r3, [pc, #96]	; (80039c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003960:	4818      	ldr	r0, [pc, #96]	; (80039c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003962:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8003964:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003966:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8003968:	f9b0 0000 	ldrsh.w	r0, [r0]
 800396c:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003970:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8003972:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8003974:	442b      	add	r3, r5
 8003976:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8003978:	b212      	sxth	r2, r2
 800397a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800397e:	6803      	ldr	r3, [r0, #0]
 8003980:	8322      	strh	r2, [r4, #24]
 8003982:	f8ad 2000 	strh.w	r2, [sp]
 8003986:	2200      	movs	r2, #0
 8003988:	691b      	ldr	r3, [r3, #16]
 800398a:	f8ad 2002 	strh.w	r2, [sp, #2]
 800398e:	4669      	mov	r1, sp
 8003990:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 8003992:	7aa3      	ldrb	r3, [r4, #10]
 8003994:	2b01      	cmp	r3, #1
 8003996:	d1d6      	bne.n	8003946 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8003998:	4b0b      	ldr	r3, [pc, #44]	; (80039c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 800399a:	781b      	ldrb	r3, [r3, #0]
 800399c:	2b00      	cmp	r3, #0
 800399e:	d0d2      	beq.n	8003946 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80039a0:	f011 fc6e 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80039a4:	b003      	add	sp, #12
 80039a6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80039aa:	f011 bc6f 	b.w	801528c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80039ae:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80039b2:	2800      	cmp	r0, #0
 80039b4:	bfd8      	it	le
 80039b6:	460a      	movle	r2, r1
 80039b8:	4413      	add	r3, r2
 80039ba:	81e3      	strh	r3, [r4, #14]
 80039bc:	e7cf      	b.n	800395e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80039be:	bf00      	nop
 80039c0:	20012e68 	.word	0x20012e68
 80039c4:	20012e6a 	.word	0x20012e6a
 80039c8:	20012e72 	.word	0x20012e72

080039cc <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80039cc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80039d0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80039d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80039d6:	68a8      	ldr	r0, [r5, #8]
 80039d8:	6803      	ldr	r3, [r0, #0]
 80039da:	6a1b      	ldr	r3, [r3, #32]
 80039dc:	4798      	blx	r3
 80039de:	f241 137b 	movw	r3, #4475	; 0x117b
 80039e2:	4298      	cmp	r0, r3
 80039e4:	d805      	bhi.n	80039f2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 80039e6:	4b46      	ldr	r3, [pc, #280]	; (8003b00 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 80039e8:	4a46      	ldr	r2, [pc, #280]	; (8003b04 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 80039ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80039ec:	4846      	ldr	r0, [pc, #280]	; (8003b08 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 80039ee:	f026 f8dd 	bl	8029bac <__assert_func>
 80039f2:	6868      	ldr	r0, [r5, #4]
 80039f4:	6803      	ldr	r3, [r0, #0]
 80039f6:	6a1b      	ldr	r3, [r3, #32]
 80039f8:	4798      	blx	r3
 80039fa:	280f      	cmp	r0, #15
 80039fc:	d803      	bhi.n	8003a06 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 80039fe:	4b43      	ldr	r3, [pc, #268]	; (8003b0c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 8003a00:	4a40      	ldr	r2, [pc, #256]	; (8003b04 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003a02:	21a4      	movs	r1, #164	; 0xa4
 8003a04:	e7f2      	b.n	80039ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003a06:	68e8      	ldr	r0, [r5, #12]
 8003a08:	6803      	ldr	r3, [r0, #0]
 8003a0a:	6a1b      	ldr	r3, [r3, #32]
 8003a0c:	4798      	blx	r3
 8003a0e:	280b      	cmp	r0, #11
 8003a10:	d803      	bhi.n	8003a1a <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 8003a12:	4b3f      	ldr	r3, [pc, #252]	; (8003b10 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8003a14:	4a3b      	ldr	r2, [pc, #236]	; (8003b04 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8003a16:	21a5      	movs	r1, #165	; 0xa5
 8003a18:	e7e8      	b.n	80039ec <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003a1a:	f011 fc31 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003a1e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003b18 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 8003a22:	3004      	adds	r0, #4
 8003a24:	f011 fc92 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003a28:	f8d9 0000 	ldr.w	r0, [r9]
 8003a2c:	b110      	cbz	r0, 8003a34 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8003a2e:	6803      	ldr	r3, [r0, #0]
 8003a30:	68db      	ldr	r3, [r3, #12]
 8003a32:	4798      	blx	r3
    if (*currentTrans)
 8003a34:	f8d9 0000 	ldr.w	r0, [r9]
 8003a38:	b110      	cbz	r0, 8003a40 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003a3a:	6803      	ldr	r3, [r0, #0]
 8003a3c:	681b      	ldr	r3, [r3, #0]
 8003a3e:	4798      	blx	r3
    if (*currentScreen)
 8003a40:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003b1c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8003a44:	f8d8 0000 	ldr.w	r0, [r8]
 8003a48:	b110      	cbz	r0, 8003a50 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003a4a:	6803      	ldr	r3, [r0, #0]
 8003a4c:	695b      	ldr	r3, [r3, #20]
 8003a4e:	4798      	blx	r3
    if (*currentPresenter)
 8003a50:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003a54:	b110      	cbz	r0, 8003a5c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003a56:	6803      	ldr	r3, [r0, #0]
 8003a58:	685b      	ldr	r3, [r3, #4]
 8003a5a:	4798      	blx	r3
    if (*currentScreen)
 8003a5c:	f8d8 0000 	ldr.w	r0, [r8]
 8003a60:	b110      	cbz	r0, 8003a68 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003a62:	6803      	ldr	r3, [r0, #0]
 8003a64:	681b      	ldr	r3, [r3, #0]
 8003a66:	4798      	blx	r3
    if (*currentPresenter)
 8003a68:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003a6c:	b110      	cbz	r0, 8003a74 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003a6e:	6803      	ldr	r3, [r0, #0]
 8003a70:	689b      	ldr	r3, [r3, #8]
 8003a72:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003a74:	68e8      	ldr	r0, [r5, #12]
 8003a76:	6803      	ldr	r3, [r0, #0]
 8003a78:	2100      	movs	r1, #0
 8003a7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a7c:	4798      	blx	r3
 8003a7e:	f04f 0b00 	mov.w	fp, #0
 8003a82:	4b24      	ldr	r3, [pc, #144]	; (8003b14 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 8003a84:	6003      	str	r3, [r0, #0]
 8003a86:	4604      	mov	r4, r0
 8003a88:	f8c0 b004 	str.w	fp, [r0, #4]
 8003a8c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003a90:	68a8      	ldr	r0, [r5, #8]
 8003a92:	6803      	ldr	r3, [r0, #0]
 8003a94:	4659      	mov	r1, fp
 8003a96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a98:	4798      	blx	r3
 8003a9a:	4606      	mov	r6, r0
 8003a9c:	f004 fe06 	bl	80086ac <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003aa0:	6868      	ldr	r0, [r5, #4]
 8003aa2:	6803      	ldr	r3, [r0, #0]
 8003aa4:	4659      	mov	r1, fp
 8003aa6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aa8:	4798      	blx	r3
 8003aaa:	4631      	mov	r1, r6
 8003aac:	4605      	mov	r5, r0
 8003aae:	f004 fdd7 	bl	8008660 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8003ab2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003ab6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003aba:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003abe:	b1e5      	cbz	r5, 8003afa <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 8003ac0:	1d2b      	adds	r3, r5, #4
 8003ac2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003ac6:	6833      	ldr	r3, [r6, #0]
 8003ac8:	f8c5 a008 	str.w	sl, [r5, #8]
 8003acc:	4630      	mov	r0, r6
 8003ace:	68db      	ldr	r3, [r3, #12]
 8003ad0:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003ad2:	4798      	blx	r3
    newPresenter->activate();
 8003ad4:	682b      	ldr	r3, [r5, #0]
 8003ad6:	4628      	mov	r0, r5
 8003ad8:	681b      	ldr	r3, [r3, #0]
 8003ada:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003adc:	4621      	mov	r1, r4
 8003ade:	4630      	mov	r0, r6
 8003ae0:	f013 f9fa 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003ae4:	6823      	ldr	r3, [r4, #0]
 8003ae6:	4620      	mov	r0, r4
 8003ae8:	691b      	ldr	r3, [r3, #16]
 8003aea:	4798      	blx	r3
    newTransition->invalidate();
 8003aec:	6823      	ldr	r3, [r4, #0]
 8003aee:	695b      	ldr	r3, [r3, #20]
 8003af0:	4620      	mov	r0, r4
}
 8003af2:	b001      	add	sp, #4
 8003af4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003af8:	4718      	bx	r3
    model->bind(newPresenter);
 8003afa:	462b      	mov	r3, r5
 8003afc:	e7e1      	b.n	8003ac2 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 8003afe:	bf00      	nop
 8003b00:	0802b8cc 	.word	0x0802b8cc
 8003b04:	0802bbf5 	.word	0x0802bbf5
 8003b08:	0802ba68 	.word	0x0802ba68
 8003b0c:	0802baaf 	.word	0x0802baaf
 8003b10:	0802bb52 	.word	0x0802bb52
 8003b14:	0802cf70 	.word	0x0802cf70
 8003b18:	20012ebc 	.word	0x20012ebc
 8003b1c:	20012eb8 	.word	0x20012eb8

08003b20 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003b20:	4b04      	ldr	r3, [pc, #16]	; (8003b34 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8003b28:	b10a      	cbz	r2, 8003b2e <_ZN8touchgfx3HAL3lcdEv+0xe>
 8003b2a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003b2c:	b900      	cbnz	r0, 8003b30 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 8003b2e:	6898      	ldr	r0, [r3, #8]
    }
 8003b30:	4770      	bx	lr
 8003b32:	bf00      	nop
 8003b34:	20012e74 	.word	0x20012e74

08003b38 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003b38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003b3a:	4604      	mov	r4, r0
 8003b3c:	4617      	mov	r7, r2
 8003b3e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003b40:	f011 fcd2 	bl	80154e8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8003b44:	4b10      	ldr	r3, [pc, #64]	; (8003b88 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8003b46:	601c      	str	r4, [r3, #0]
      model(m)
 8003b48:	4b10      	ldr	r3, [pc, #64]	; (8003b8c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8003b4a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8003b4c:	4b10      	ldr	r3, [pc, #64]	; (8003b90 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 8003b4e:	2500      	movs	r5, #0
 8003b50:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8003b54:	4b0f      	ldr	r3, [pc, #60]	; (8003b94 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003b56:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8003b5a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003b5c:	6803      	ldr	r3, [r0, #0]
 8003b5e:	2101      	movs	r1, #1
 8003b60:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003b62:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8003b66:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003b6a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003b6c:	4628      	mov	r0, r5
 8003b6e:	f004 fbdb 	bl	8008328 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003b72:	f7ff ffd5 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 8003b76:	f01a fe88 	bl	801e88a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8003b7a:	f7ff ffd1 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 8003b7e:	f01a feff 	bl	801e980 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8003b82:	4620      	mov	r0, r4
 8003b84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003b86:	bf00      	nop
 8003b88:	20012ec8 	.word	0x20012ec8
 8003b8c:	0802cf1c 	.word	0x0802cf1c
 8003b90:	0802cf04 	.word	0x0802cf04
 8003b94:	20012e74 	.word	0x20012e74

08003b98 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003b98:	4b06      	ldr	r3, [pc, #24]	; (8003bb4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 8003b9a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003b9e:	2300      	movs	r3, #0
 8003ba0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ba4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ba8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003bac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003bb0:	4770      	bx	lr
 8003bb2:	bf00      	nop
 8003bb4:	080039cd 	.word	0x080039cd

08003bb8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 8003bb8:	4b06      	ldr	r3, [pc, #24]	; (8003bd4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 8003bba:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003bbe:	2300      	movs	r3, #0
 8003bc0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003bc4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003bc8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003bcc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003bd0:	4770      	bx	lr
 8003bd2:	bf00      	nop
 8003bd4:	080041dd 	.word	0x080041dd

08003bd8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003bd8:	4b06      	ldr	r3, [pc, #24]	; (8003bf4 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8003bda:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003bde:	2300      	movs	r3, #0
 8003be0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003be4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003be8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003bec:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003bf0:	4770      	bx	lr
 8003bf2:	bf00      	nop
 8003bf4:	08005001 	.word	0x08005001

08003bf8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8003bf8:	4b06      	ldr	r3, [pc, #24]	; (8003c14 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8003bfa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003bfe:	2300      	movs	r3, #0
 8003c00:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003c04:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003c08:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003c0c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003c10:	4770      	bx	lr
 8003c12:	bf00      	nop
 8003c14:	0800409d 	.word	0x0800409d

08003c18 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8003c18:	4b06      	ldr	r3, [pc, #24]	; (8003c34 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8003c1a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003c1e:	2300      	movs	r3, #0
 8003c20:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003c24:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003c28:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003c2c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003c30:	4770      	bx	lr
 8003c32:	bf00      	nop
 8003c34:	08004ec1 	.word	0x08004ec1

08003c38 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8003c38:	4b06      	ldr	r3, [pc, #24]	; (8003c54 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8003c3a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003c3e:	2300      	movs	r3, #0
 8003c40:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003c44:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003c48:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003c4c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003c50:	4770      	bx	lr
 8003c52:	bf00      	nop
 8003c54:	08004d81 	.word	0x08004d81

08003c58 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8003c58:	4b06      	ldr	r3, [pc, #24]	; (8003c74 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8003c5a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003c5e:	2300      	movs	r3, #0
 8003c60:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003c64:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003c68:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003c6c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003c70:	4770      	bx	lr
 8003c72:	bf00      	nop
 8003c74:	08004c41 	.word	0x08004c41

08003c78 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 8003c78:	4b06      	ldr	r3, [pc, #24]	; (8003c94 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 8003c7a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003c7e:	2300      	movs	r3, #0
 8003c80:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003c84:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003c88:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003c8c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003c90:	4770      	bx	lr
 8003c92:	bf00      	nop
 8003c94:	08004b01 	.word	0x08004b01

08003c98 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 8003c98:	4b06      	ldr	r3, [pc, #24]	; (8003cb4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 8003c9a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003c9e:	2300      	movs	r3, #0
 8003ca0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ca4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ca8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003cac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003cb0:	4770      	bx	lr
 8003cb2:	bf00      	nop
 8003cb4:	08003f5d 	.word	0x08003f5d

08003cb8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003cb8:	4b06      	ldr	r3, [pc, #24]	; (8003cd4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003cba:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003cbe:	2300      	movs	r3, #0
 8003cc0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003cc4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003cc8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ccc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003cd0:	4770      	bx	lr
 8003cd2:	bf00      	nop
 8003cd4:	080049c1 	.word	0x080049c1

08003cd8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003cd8:	4b06      	ldr	r3, [pc, #24]	; (8003cf4 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003cda:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003cde:	2300      	movs	r3, #0
 8003ce0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ce4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ce8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003cec:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003cf0:	4770      	bx	lr
 8003cf2:	bf00      	nop
 8003cf4:	08004881 	.word	0x08004881

08003cf8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8003cf8:	4b06      	ldr	r3, [pc, #24]	; (8003d14 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8003cfa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003cfe:	2300      	movs	r3, #0
 8003d00:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003d04:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003d08:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003d0c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003d10:	4770      	bx	lr
 8003d12:	bf00      	nop
 8003d14:	08004741 	.word	0x08004741

08003d18 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8003d18:	4b06      	ldr	r3, [pc, #24]	; (8003d34 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 8003d1a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003d1e:	2300      	movs	r3, #0
 8003d20:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003d24:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003d28:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003d2c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003d30:	4770      	bx	lr
 8003d32:	bf00      	nop
 8003d34:	08003e1d 	.word	0x08003e1d

08003d38 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8003d38:	4b06      	ldr	r3, [pc, #24]	; (8003d54 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8003d3a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003d3e:	2300      	movs	r3, #0
 8003d40:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003d44:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003d48:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003d4c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003d50:	4770      	bx	lr
 8003d52:	bf00      	nop
 8003d54:	08004601 	.word	0x08004601

08003d58 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8003d58:	4b06      	ldr	r3, [pc, #24]	; (8003d74 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8003d5a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003d5e:	2300      	movs	r3, #0
 8003d60:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003d64:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003d68:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003d6c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003d70:	4770      	bx	lr
 8003d72:	bf00      	nop
 8003d74:	080044c1 	.word	0x080044c1

08003d78 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003d78:	4b06      	ldr	r3, [pc, #24]	; (8003d94 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003d7a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003d7e:	2300      	movs	r3, #0
 8003d80:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003d84:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003d88:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003d8c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003d90:	4770      	bx	lr
 8003d92:	bf00      	nop
 8003d94:	08004381 	.word	0x08004381

08003d98 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8003d98:	4b06      	ldr	r3, [pc, #24]	; (8003db4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8003d9a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003d9e:	2300      	movs	r3, #0
 8003da0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003da4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003da8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003dac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003db0:	4770      	bx	lr
 8003db2:	bf00      	nop
 8003db4:	080037dd 	.word	0x080037dd

08003db8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003db8:	6803      	ldr	r3, [r0, #0]
 8003dba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003dbc:	4718      	bx	r3
	...

08003dc0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003dc0:	4b12      	ldr	r3, [pc, #72]	; (8003e0c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003dc2:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003dc4:	6003      	str	r3, [r0, #0]
 8003dc6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003dca:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003dcc:	4b10      	ldr	r3, [pc, #64]	; (8003e10 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003dce:	7241      	strb	r1, [r0, #9]
 8003dd0:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003dd2:	4910      	ldr	r1, [pc, #64]	; (8003e14 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003dd4:	4b10      	ldr	r3, [pc, #64]	; (8003e18 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003dd6:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003dda:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003dde:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003de0:	2200      	movs	r2, #0
 8003de2:	6042      	str	r2, [r0, #4]
 8003de4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003de6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003de8:	81c2      	strh	r2, [r0, #14]
          solid()
 8003dea:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003dee:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003df2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003df6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003dfa:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003dfc:	9100      	str	r1, [sp, #0]
 8003dfe:	3010      	adds	r0, #16
 8003e00:	4611      	mov	r1, r2
 8003e02:	f7fe fddf 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003e06:	4620      	mov	r0, r4
 8003e08:	b002      	add	sp, #8
 8003e0a:	bd10      	pop	{r4, pc}
 8003e0c:	0802cfb8 	.word	0x0802cfb8
 8003e10:	0802ce9c 	.word	0x0802ce9c
 8003e14:	20012e6a 	.word	0x20012e6a
 8003e18:	20012e68 	.word	0x20012e68

08003e1c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003e1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003e20:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e24:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e26:	68a0      	ldr	r0, [r4, #8]
 8003e28:	6803      	ldr	r3, [r0, #0]
 8003e2a:	6a1b      	ldr	r3, [r3, #32]
 8003e2c:	4798      	blx	r3
 8003e2e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003e32:	d205      	bcs.n	8003e40 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003e34:	4b42      	ldr	r3, [pc, #264]	; (8003f40 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8003e36:	4a43      	ldr	r2, [pc, #268]	; (8003f44 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003e38:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e3a:	4843      	ldr	r0, [pc, #268]	; (8003f48 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003e3c:	f025 feb6 	bl	8029bac <__assert_func>
 8003e40:	6860      	ldr	r0, [r4, #4]
 8003e42:	6803      	ldr	r3, [r0, #0]
 8003e44:	6a1b      	ldr	r3, [r3, #32]
 8003e46:	4798      	blx	r3
 8003e48:	280f      	cmp	r0, #15
 8003e4a:	d803      	bhi.n	8003e54 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003e4c:	4b3f      	ldr	r3, [pc, #252]	; (8003f4c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003e4e:	4a3d      	ldr	r2, [pc, #244]	; (8003f44 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003e50:	21a4      	movs	r1, #164	; 0xa4
 8003e52:	e7f2      	b.n	8003e3a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e54:	68e0      	ldr	r0, [r4, #12]
 8003e56:	6803      	ldr	r3, [r0, #0]
 8003e58:	6a1b      	ldr	r3, [r3, #32]
 8003e5a:	4798      	blx	r3
 8003e5c:	2837      	cmp	r0, #55	; 0x37
 8003e5e:	d803      	bhi.n	8003e68 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003e60:	4b3b      	ldr	r3, [pc, #236]	; (8003f50 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003e62:	4a38      	ldr	r2, [pc, #224]	; (8003f44 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003e64:	21a5      	movs	r1, #165	; 0xa5
 8003e66:	e7e8      	b.n	8003e3a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003e68:	f011 fa0a 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003e6c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003f54 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003e70:	3004      	adds	r0, #4
 8003e72:	f011 fa6b 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003e76:	f8d9 0000 	ldr.w	r0, [r9]
 8003e7a:	b110      	cbz	r0, 8003e82 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003e7c:	6803      	ldr	r3, [r0, #0]
 8003e7e:	68db      	ldr	r3, [r3, #12]
 8003e80:	4798      	blx	r3
    if (*currentTrans)
 8003e82:	f8d9 0000 	ldr.w	r0, [r9]
 8003e86:	b110      	cbz	r0, 8003e8e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003e88:	6803      	ldr	r3, [r0, #0]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	4798      	blx	r3
    if (*currentScreen)
 8003e8e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003f58 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003e92:	f8d8 0000 	ldr.w	r0, [r8]
 8003e96:	b110      	cbz	r0, 8003e9e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003e98:	6803      	ldr	r3, [r0, #0]
 8003e9a:	695b      	ldr	r3, [r3, #20]
 8003e9c:	4798      	blx	r3
    if (*currentPresenter)
 8003e9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ea2:	b110      	cbz	r0, 8003eaa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003ea4:	6803      	ldr	r3, [r0, #0]
 8003ea6:	685b      	ldr	r3, [r3, #4]
 8003ea8:	4798      	blx	r3
    if (*currentScreen)
 8003eaa:	f8d8 0000 	ldr.w	r0, [r8]
 8003eae:	b110      	cbz	r0, 8003eb6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003eb0:	6803      	ldr	r3, [r0, #0]
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	4798      	blx	r3
    if (*currentPresenter)
 8003eb6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003eba:	b110      	cbz	r0, 8003ec2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003ebc:	6803      	ldr	r3, [r0, #0]
 8003ebe:	689b      	ldr	r3, [r3, #8]
 8003ec0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003ec2:	68e0      	ldr	r0, [r4, #12]
 8003ec4:	2100      	movs	r1, #0
 8003ec6:	f7ff ff77 	bl	8003db8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003eca:	2114      	movs	r1, #20
 8003ecc:	4605      	mov	r5, r0
 8003ece:	f7ff ff77 	bl	8003dc0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003ed2:	68a0      	ldr	r0, [r4, #8]
 8003ed4:	6803      	ldr	r3, [r0, #0]
 8003ed6:	2100      	movs	r1, #0
 8003ed8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003eda:	4798      	blx	r3
 8003edc:	4606      	mov	r6, r0
 8003ede:	f004 fac1 	bl	8008464 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ee2:	6860      	ldr	r0, [r4, #4]
 8003ee4:	6803      	ldr	r3, [r0, #0]
 8003ee6:	2100      	movs	r1, #0
 8003ee8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003eea:	4798      	blx	r3
 8003eec:	4631      	mov	r1, r6
 8003eee:	4604      	mov	r4, r0
 8003ef0:	f004 fa92 	bl	8008418 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003ef4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003ef8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003efc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f00:	b1dc      	cbz	r4, 8003f3a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003f02:	1d23      	adds	r3, r4, #4
 8003f04:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f08:	6833      	ldr	r3, [r6, #0]
 8003f0a:	f8c4 a008 	str.w	sl, [r4, #8]
 8003f0e:	4630      	mov	r0, r6
 8003f10:	68db      	ldr	r3, [r3, #12]
 8003f12:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003f14:	4798      	blx	r3
    newPresenter->activate();
 8003f16:	6823      	ldr	r3, [r4, #0]
 8003f18:	4620      	mov	r0, r4
 8003f1a:	681b      	ldr	r3, [r3, #0]
 8003f1c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003f1e:	4629      	mov	r1, r5
 8003f20:	4630      	mov	r0, r6
 8003f22:	f012 ffd9 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f26:	682b      	ldr	r3, [r5, #0]
 8003f28:	4628      	mov	r0, r5
 8003f2a:	691b      	ldr	r3, [r3, #16]
 8003f2c:	4798      	blx	r3
    newTransition->invalidate();
 8003f2e:	682b      	ldr	r3, [r5, #0]
 8003f30:	4628      	mov	r0, r5
 8003f32:	695b      	ldr	r3, [r3, #20]
}
 8003f34:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f38:	4718      	bx	r3
    model->bind(newPresenter);
 8003f3a:	4623      	mov	r3, r4
 8003f3c:	e7e2      	b.n	8003f04 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003f3e:	bf00      	nop
 8003f40:	0802b8cc 	.word	0x0802b8cc
 8003f44:	0802bcfd 	.word	0x0802bcfd
 8003f48:	0802ba68 	.word	0x0802ba68
 8003f4c:	0802baaf 	.word	0x0802baaf
 8003f50:	0802bb52 	.word	0x0802bb52
 8003f54:	20012ebc 	.word	0x20012ebc
 8003f58:	20012eb8 	.word	0x20012eb8

08003f5c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003f5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f60:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003f64:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003f66:	68a0      	ldr	r0, [r4, #8]
 8003f68:	6803      	ldr	r3, [r0, #0]
 8003f6a:	6a1b      	ldr	r3, [r3, #32]
 8003f6c:	4798      	blx	r3
 8003f6e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003f72:	d205      	bcs.n	8003f80 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003f74:	4b42      	ldr	r3, [pc, #264]	; (8004080 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003f76:	4a43      	ldr	r2, [pc, #268]	; (8004084 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003f78:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003f7a:	4843      	ldr	r0, [pc, #268]	; (8004088 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003f7c:	f025 fe16 	bl	8029bac <__assert_func>
 8003f80:	6860      	ldr	r0, [r4, #4]
 8003f82:	6803      	ldr	r3, [r0, #0]
 8003f84:	6a1b      	ldr	r3, [r3, #32]
 8003f86:	4798      	blx	r3
 8003f88:	280f      	cmp	r0, #15
 8003f8a:	d803      	bhi.n	8003f94 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003f8c:	4b3f      	ldr	r3, [pc, #252]	; (800408c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003f8e:	4a3d      	ldr	r2, [pc, #244]	; (8004084 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003f90:	21a4      	movs	r1, #164	; 0xa4
 8003f92:	e7f2      	b.n	8003f7a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003f94:	68e0      	ldr	r0, [r4, #12]
 8003f96:	6803      	ldr	r3, [r0, #0]
 8003f98:	6a1b      	ldr	r3, [r3, #32]
 8003f9a:	4798      	blx	r3
 8003f9c:	2837      	cmp	r0, #55	; 0x37
 8003f9e:	d803      	bhi.n	8003fa8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003fa0:	4b3b      	ldr	r3, [pc, #236]	; (8004090 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003fa2:	4a38      	ldr	r2, [pc, #224]	; (8004084 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003fa4:	21a5      	movs	r1, #165	; 0xa5
 8003fa6:	e7e8      	b.n	8003f7a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003fa8:	f011 f96a 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003fac:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004094 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003fb0:	3004      	adds	r0, #4
 8003fb2:	f011 f9cb 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003fb6:	f8d9 0000 	ldr.w	r0, [r9]
 8003fba:	b110      	cbz	r0, 8003fc2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003fbc:	6803      	ldr	r3, [r0, #0]
 8003fbe:	68db      	ldr	r3, [r3, #12]
 8003fc0:	4798      	blx	r3
    if (*currentTrans)
 8003fc2:	f8d9 0000 	ldr.w	r0, [r9]
 8003fc6:	b110      	cbz	r0, 8003fce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003fc8:	6803      	ldr	r3, [r0, #0]
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	4798      	blx	r3
    if (*currentScreen)
 8003fce:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004098 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003fd2:	f8d8 0000 	ldr.w	r0, [r8]
 8003fd6:	b110      	cbz	r0, 8003fde <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003fd8:	6803      	ldr	r3, [r0, #0]
 8003fda:	695b      	ldr	r3, [r3, #20]
 8003fdc:	4798      	blx	r3
    if (*currentPresenter)
 8003fde:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003fe2:	b110      	cbz	r0, 8003fea <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003fe4:	6803      	ldr	r3, [r0, #0]
 8003fe6:	685b      	ldr	r3, [r3, #4]
 8003fe8:	4798      	blx	r3
    if (*currentScreen)
 8003fea:	f8d8 0000 	ldr.w	r0, [r8]
 8003fee:	b110      	cbz	r0, 8003ff6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003ff0:	6803      	ldr	r3, [r0, #0]
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	4798      	blx	r3
    if (*currentPresenter)
 8003ff6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003ffa:	b110      	cbz	r0, 8004002 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003ffc:	6803      	ldr	r3, [r0, #0]
 8003ffe:	689b      	ldr	r3, [r3, #8]
 8004000:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004002:	68e0      	ldr	r0, [r4, #12]
 8004004:	2100      	movs	r1, #0
 8004006:	f7ff fed7 	bl	8003db8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800400a:	2114      	movs	r1, #20
 800400c:	4605      	mov	r5, r0
 800400e:	f7ff fed7 	bl	8003dc0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004012:	68a0      	ldr	r0, [r4, #8]
 8004014:	6803      	ldr	r3, [r0, #0]
 8004016:	2100      	movs	r1, #0
 8004018:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800401a:	4798      	blx	r3
 800401c:	4606      	mov	r6, r0
 800401e:	f004 fc05 	bl	800882c <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004022:	6860      	ldr	r0, [r4, #4]
 8004024:	6803      	ldr	r3, [r0, #0]
 8004026:	2100      	movs	r1, #0
 8004028:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800402a:	4798      	blx	r3
 800402c:	4631      	mov	r1, r6
 800402e:	4604      	mov	r4, r0
 8004030:	f004 fbd6 	bl	80087e0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004034:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004038:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800403c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004040:	b1dc      	cbz	r4, 800407a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004042:	1d23      	adds	r3, r4, #4
 8004044:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004048:	6833      	ldr	r3, [r6, #0]
 800404a:	f8c4 a008 	str.w	sl, [r4, #8]
 800404e:	4630      	mov	r0, r6
 8004050:	68db      	ldr	r3, [r3, #12]
 8004052:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004054:	4798      	blx	r3
    newPresenter->activate();
 8004056:	6823      	ldr	r3, [r4, #0]
 8004058:	4620      	mov	r0, r4
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800405e:	4629      	mov	r1, r5
 8004060:	4630      	mov	r0, r6
 8004062:	f012 ff39 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004066:	682b      	ldr	r3, [r5, #0]
 8004068:	4628      	mov	r0, r5
 800406a:	691b      	ldr	r3, [r3, #16]
 800406c:	4798      	blx	r3
    newTransition->invalidate();
 800406e:	682b      	ldr	r3, [r5, #0]
 8004070:	4628      	mov	r0, r5
 8004072:	695b      	ldr	r3, [r3, #20]
}
 8004074:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004078:	4718      	bx	r3
    model->bind(newPresenter);
 800407a:	4623      	mov	r3, r4
 800407c:	e7e2      	b.n	8004044 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 800407e:	bf00      	nop
 8004080:	0802b8cc 	.word	0x0802b8cc
 8004084:	0802be1b 	.word	0x0802be1b
 8004088:	0802ba68 	.word	0x0802ba68
 800408c:	0802baaf 	.word	0x0802baaf
 8004090:	0802bb52 	.word	0x0802bb52
 8004094:	20012ebc 	.word	0x20012ebc
 8004098:	20012eb8 	.word	0x20012eb8

0800409c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 800409c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80040a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80040a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80040a6:	68a0      	ldr	r0, [r4, #8]
 80040a8:	6803      	ldr	r3, [r0, #0]
 80040aa:	6a1b      	ldr	r3, [r3, #32]
 80040ac:	4798      	blx	r3
 80040ae:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80040b2:	d205      	bcs.n	80040c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 80040b4:	4b42      	ldr	r3, [pc, #264]	; (80041c0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 80040b6:	4a43      	ldr	r2, [pc, #268]	; (80041c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80040b8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80040ba:	4843      	ldr	r0, [pc, #268]	; (80041c8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 80040bc:	f025 fd76 	bl	8029bac <__assert_func>
 80040c0:	6860      	ldr	r0, [r4, #4]
 80040c2:	6803      	ldr	r3, [r0, #0]
 80040c4:	6a1b      	ldr	r3, [r3, #32]
 80040c6:	4798      	blx	r3
 80040c8:	280f      	cmp	r0, #15
 80040ca:	d803      	bhi.n	80040d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 80040cc:	4b3f      	ldr	r3, [pc, #252]	; (80041cc <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 80040ce:	4a3d      	ldr	r2, [pc, #244]	; (80041c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80040d0:	21a4      	movs	r1, #164	; 0xa4
 80040d2:	e7f2      	b.n	80040ba <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80040d4:	68e0      	ldr	r0, [r4, #12]
 80040d6:	6803      	ldr	r3, [r0, #0]
 80040d8:	6a1b      	ldr	r3, [r3, #32]
 80040da:	4798      	blx	r3
 80040dc:	2837      	cmp	r0, #55	; 0x37
 80040de:	d803      	bhi.n	80040e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 80040e0:	4b3b      	ldr	r3, [pc, #236]	; (80041d0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 80040e2:	4a38      	ldr	r2, [pc, #224]	; (80041c4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 80040e4:	21a5      	movs	r1, #165	; 0xa5
 80040e6:	e7e8      	b.n	80040ba <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80040e8:	f011 f8ca 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80040ec:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80041d4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 80040f0:	3004      	adds	r0, #4
 80040f2:	f011 f92b 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80040f6:	f8d9 0000 	ldr.w	r0, [r9]
 80040fa:	b110      	cbz	r0, 8004102 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 80040fc:	6803      	ldr	r3, [r0, #0]
 80040fe:	68db      	ldr	r3, [r3, #12]
 8004100:	4798      	blx	r3
    if (*currentTrans)
 8004102:	f8d9 0000 	ldr.w	r0, [r9]
 8004106:	b110      	cbz	r0, 800410e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004108:	6803      	ldr	r3, [r0, #0]
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	4798      	blx	r3
    if (*currentScreen)
 800410e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80041d8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004112:	f8d8 0000 	ldr.w	r0, [r8]
 8004116:	b110      	cbz	r0, 800411e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004118:	6803      	ldr	r3, [r0, #0]
 800411a:	695b      	ldr	r3, [r3, #20]
 800411c:	4798      	blx	r3
    if (*currentPresenter)
 800411e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004122:	b110      	cbz	r0, 800412a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004124:	6803      	ldr	r3, [r0, #0]
 8004126:	685b      	ldr	r3, [r3, #4]
 8004128:	4798      	blx	r3
    if (*currentScreen)
 800412a:	f8d8 0000 	ldr.w	r0, [r8]
 800412e:	b110      	cbz	r0, 8004136 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004130:	6803      	ldr	r3, [r0, #0]
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	4798      	blx	r3
    if (*currentPresenter)
 8004136:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800413a:	b110      	cbz	r0, 8004142 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800413c:	6803      	ldr	r3, [r0, #0]
 800413e:	689b      	ldr	r3, [r3, #8]
 8004140:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004142:	68e0      	ldr	r0, [r4, #12]
 8004144:	2100      	movs	r1, #0
 8004146:	f7ff fe37 	bl	8003db8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800414a:	2114      	movs	r1, #20
 800414c:	4605      	mov	r5, r0
 800414e:	f7ff fe37 	bl	8003dc0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004152:	68a0      	ldr	r0, [r4, #8]
 8004154:	6803      	ldr	r3, [r0, #0]
 8004156:	2100      	movs	r1, #0
 8004158:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800415a:	4798      	blx	r3
 800415c:	4606      	mov	r6, r0
 800415e:	f004 fb05 	bl	800876c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004162:	6860      	ldr	r0, [r4, #4]
 8004164:	6803      	ldr	r3, [r0, #0]
 8004166:	2100      	movs	r1, #0
 8004168:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800416a:	4798      	blx	r3
 800416c:	4631      	mov	r1, r6
 800416e:	4604      	mov	r4, r0
 8004170:	f004 fad6 	bl	8008720 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004174:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004178:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800417c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004180:	b1dc      	cbz	r4, 80041ba <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004182:	1d23      	adds	r3, r4, #4
 8004184:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004188:	6833      	ldr	r3, [r6, #0]
 800418a:	f8c4 a008 	str.w	sl, [r4, #8]
 800418e:	4630      	mov	r0, r6
 8004190:	68db      	ldr	r3, [r3, #12]
 8004192:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004194:	4798      	blx	r3
    newPresenter->activate();
 8004196:	6823      	ldr	r3, [r4, #0]
 8004198:	4620      	mov	r0, r4
 800419a:	681b      	ldr	r3, [r3, #0]
 800419c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800419e:	4629      	mov	r1, r5
 80041a0:	4630      	mov	r0, r6
 80041a2:	f012 fe99 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80041a6:	682b      	ldr	r3, [r5, #0]
 80041a8:	4628      	mov	r0, r5
 80041aa:	691b      	ldr	r3, [r3, #16]
 80041ac:	4798      	blx	r3
    newTransition->invalidate();
 80041ae:	682b      	ldr	r3, [r5, #0]
 80041b0:	4628      	mov	r0, r5
 80041b2:	695b      	ldr	r3, [r3, #20]
}
 80041b4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80041b8:	4718      	bx	r3
    model->bind(newPresenter);
 80041ba:	4623      	mov	r3, r4
 80041bc:	e7e2      	b.n	8004184 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 80041be:	bf00      	nop
 80041c0:	0802b8cc 	.word	0x0802b8cc
 80041c4:	0802bf4b 	.word	0x0802bf4b
 80041c8:	0802ba68 	.word	0x0802ba68
 80041cc:	0802baaf 	.word	0x0802baaf
 80041d0:	0802bb52 	.word	0x0802bb52
 80041d4:	20012ebc 	.word	0x20012ebc
 80041d8:	20012eb8 	.word	0x20012eb8

080041dc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 80041dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80041e0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80041e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80041e6:	68a0      	ldr	r0, [r4, #8]
 80041e8:	6803      	ldr	r3, [r0, #0]
 80041ea:	6a1b      	ldr	r3, [r3, #32]
 80041ec:	4798      	blx	r3
 80041ee:	f241 137b 	movw	r3, #4475	; 0x117b
 80041f2:	4298      	cmp	r0, r3
 80041f4:	d805      	bhi.n	8004202 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 80041f6:	4b42      	ldr	r3, [pc, #264]	; (8004300 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 80041f8:	4a42      	ldr	r2, [pc, #264]	; (8004304 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 80041fa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80041fc:	4842      	ldr	r0, [pc, #264]	; (8004308 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 80041fe:	f025 fcd5 	bl	8029bac <__assert_func>
 8004202:	6860      	ldr	r0, [r4, #4]
 8004204:	6803      	ldr	r3, [r0, #0]
 8004206:	6a1b      	ldr	r3, [r3, #32]
 8004208:	4798      	blx	r3
 800420a:	280f      	cmp	r0, #15
 800420c:	d803      	bhi.n	8004216 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 800420e:	4b3f      	ldr	r3, [pc, #252]	; (800430c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004210:	4a3c      	ldr	r2, [pc, #240]	; (8004304 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004212:	21a4      	movs	r1, #164	; 0xa4
 8004214:	e7f2      	b.n	80041fc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004216:	68e0      	ldr	r0, [r4, #12]
 8004218:	6803      	ldr	r3, [r0, #0]
 800421a:	6a1b      	ldr	r3, [r3, #32]
 800421c:	4798      	blx	r3
 800421e:	2837      	cmp	r0, #55	; 0x37
 8004220:	d803      	bhi.n	800422a <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004222:	4b3b      	ldr	r3, [pc, #236]	; (8004310 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004224:	4a37      	ldr	r2, [pc, #220]	; (8004304 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004226:	21a5      	movs	r1, #165	; 0xa5
 8004228:	e7e8      	b.n	80041fc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800422a:	f011 f829 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800422e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004314 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004232:	3004      	adds	r0, #4
 8004234:	f011 f88a 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004238:	f8d9 0000 	ldr.w	r0, [r9]
 800423c:	b110      	cbz	r0, 8004244 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 800423e:	6803      	ldr	r3, [r0, #0]
 8004240:	68db      	ldr	r3, [r3, #12]
 8004242:	4798      	blx	r3
    if (*currentTrans)
 8004244:	f8d9 0000 	ldr.w	r0, [r9]
 8004248:	b110      	cbz	r0, 8004250 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 800424a:	6803      	ldr	r3, [r0, #0]
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	4798      	blx	r3
    if (*currentScreen)
 8004250:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004318 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004254:	f8d8 0000 	ldr.w	r0, [r8]
 8004258:	b110      	cbz	r0, 8004260 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800425a:	6803      	ldr	r3, [r0, #0]
 800425c:	695b      	ldr	r3, [r3, #20]
 800425e:	4798      	blx	r3
    if (*currentPresenter)
 8004260:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004264:	b110      	cbz	r0, 800426c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004266:	6803      	ldr	r3, [r0, #0]
 8004268:	685b      	ldr	r3, [r3, #4]
 800426a:	4798      	blx	r3
    if (*currentScreen)
 800426c:	f8d8 0000 	ldr.w	r0, [r8]
 8004270:	b110      	cbz	r0, 8004278 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004272:	6803      	ldr	r3, [r0, #0]
 8004274:	681b      	ldr	r3, [r3, #0]
 8004276:	4798      	blx	r3
    if (*currentPresenter)
 8004278:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800427c:	b110      	cbz	r0, 8004284 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800427e:	6803      	ldr	r3, [r0, #0]
 8004280:	689b      	ldr	r3, [r3, #8]
 8004282:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004284:	68e0      	ldr	r0, [r4, #12]
 8004286:	2100      	movs	r1, #0
 8004288:	f7ff fd96 	bl	8003db8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 800428c:	2114      	movs	r1, #20
 800428e:	4605      	mov	r5, r0
 8004290:	f7ff fd96 	bl	8003dc0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004294:	68a0      	ldr	r0, [r4, #8]
 8004296:	6803      	ldr	r3, [r0, #0]
 8004298:	2100      	movs	r1, #0
 800429a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800429c:	4798      	blx	r3
 800429e:	4606      	mov	r6, r0
 80042a0:	f004 fa04 	bl	80086ac <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80042a4:	6860      	ldr	r0, [r4, #4]
 80042a6:	6803      	ldr	r3, [r0, #0]
 80042a8:	2100      	movs	r1, #0
 80042aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042ac:	4798      	blx	r3
 80042ae:	4631      	mov	r1, r6
 80042b0:	4604      	mov	r4, r0
 80042b2:	f004 f9d5 	bl	8008660 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80042b6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80042ba:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80042be:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80042c2:	b1dc      	cbz	r4, 80042fc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 80042c4:	1d23      	adds	r3, r4, #4
 80042c6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80042ca:	6833      	ldr	r3, [r6, #0]
 80042cc:	f8c4 a008 	str.w	sl, [r4, #8]
 80042d0:	4630      	mov	r0, r6
 80042d2:	68db      	ldr	r3, [r3, #12]
 80042d4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80042d6:	4798      	blx	r3
    newPresenter->activate();
 80042d8:	6823      	ldr	r3, [r4, #0]
 80042da:	4620      	mov	r0, r4
 80042dc:	681b      	ldr	r3, [r3, #0]
 80042de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80042e0:	4629      	mov	r1, r5
 80042e2:	4630      	mov	r0, r6
 80042e4:	f012 fdf8 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80042e8:	682b      	ldr	r3, [r5, #0]
 80042ea:	4628      	mov	r0, r5
 80042ec:	691b      	ldr	r3, [r3, #16]
 80042ee:	4798      	blx	r3
    newTransition->invalidate();
 80042f0:	682b      	ldr	r3, [r5, #0]
 80042f2:	4628      	mov	r0, r5
 80042f4:	695b      	ldr	r3, [r3, #20]
}
 80042f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80042fa:	4718      	bx	r3
    model->bind(newPresenter);
 80042fc:	4623      	mov	r3, r4
 80042fe:	e7e2      	b.n	80042c6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004300:	0802b8cc 	.word	0x0802b8cc
 8004304:	0802c069 	.word	0x0802c069
 8004308:	0802ba68 	.word	0x0802ba68
 800430c:	0802baaf 	.word	0x0802baaf
 8004310:	0802bb52 	.word	0x0802bb52
 8004314:	20012ebc 	.word	0x20012ebc
 8004318:	20012eb8 	.word	0x20012eb8

0800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 800431c:	6803      	ldr	r3, [r0, #0]
 800431e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004320:	4718      	bx	r3
	...

08004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004324:	4b12      	ldr	r3, [pc, #72]	; (8004370 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004326:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004328:	6003      	str	r3, [r0, #0]
 800432a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800432e:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004330:	4b10      	ldr	r3, [pc, #64]	; (8004374 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004332:	7241      	strb	r1, [r0, #9]
 8004334:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004336:	4910      	ldr	r1, [pc, #64]	; (8004378 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004338:	4b10      	ldr	r3, [pc, #64]	; (800437c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800433a:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800433e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004342:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004344:	2200      	movs	r2, #0
 8004346:	6042      	str	r2, [r0, #4]
 8004348:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 800434a:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 800434c:	81c2      	strh	r2, [r0, #14]
          solid()
 800434e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004352:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004356:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 800435a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 800435e:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004360:	9100      	str	r1, [sp, #0]
 8004362:	3010      	adds	r0, #16
 8004364:	4611      	mov	r1, r2
 8004366:	f7fe fb2d 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800436a:	4620      	mov	r0, r4
 800436c:	b002      	add	sp, #8
 800436e:	bd10      	pop	{r4, pc}
 8004370:	0802cf94 	.word	0x0802cf94
 8004374:	0802ce9c 	.word	0x0802ce9c
 8004378:	20012e6a 	.word	0x20012e6a
 800437c:	20012e68 	.word	0x20012e68

08004380 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004384:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004388:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800438a:	68a0      	ldr	r0, [r4, #8]
 800438c:	6803      	ldr	r3, [r0, #0]
 800438e:	6a1b      	ldr	r3, [r3, #32]
 8004390:	4798      	blx	r3
 8004392:	f241 03af 	movw	r3, #4271	; 0x10af
 8004396:	4298      	cmp	r0, r3
 8004398:	d805      	bhi.n	80043a6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 800439a:	4b42      	ldr	r3, [pc, #264]	; (80044a4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 800439c:	4a42      	ldr	r2, [pc, #264]	; (80044a8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 800439e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80043a0:	4842      	ldr	r0, [pc, #264]	; (80044ac <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 80043a2:	f025 fc03 	bl	8029bac <__assert_func>
 80043a6:	6860      	ldr	r0, [r4, #4]
 80043a8:	6803      	ldr	r3, [r0, #0]
 80043aa:	6a1b      	ldr	r3, [r3, #32]
 80043ac:	4798      	blx	r3
 80043ae:	280f      	cmp	r0, #15
 80043b0:	d803      	bhi.n	80043ba <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 80043b2:	4b3f      	ldr	r3, [pc, #252]	; (80044b0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 80043b4:	4a3c      	ldr	r2, [pc, #240]	; (80044a8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80043b6:	21a4      	movs	r1, #164	; 0xa4
 80043b8:	e7f2      	b.n	80043a0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80043ba:	68e0      	ldr	r0, [r4, #12]
 80043bc:	6803      	ldr	r3, [r0, #0]
 80043be:	6a1b      	ldr	r3, [r3, #32]
 80043c0:	4798      	blx	r3
 80043c2:	2837      	cmp	r0, #55	; 0x37
 80043c4:	d803      	bhi.n	80043ce <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 80043c6:	4b3b      	ldr	r3, [pc, #236]	; (80044b4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 80043c8:	4a37      	ldr	r2, [pc, #220]	; (80044a8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80043ca:	21a5      	movs	r1, #165	; 0xa5
 80043cc:	e7e8      	b.n	80043a0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80043ce:	f010 ff57 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043d2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80044b8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 80043d6:	3004      	adds	r0, #4
 80043d8:	f010 ffb8 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043dc:	f8d9 0000 	ldr.w	r0, [r9]
 80043e0:	b110      	cbz	r0, 80043e8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80043e2:	6803      	ldr	r3, [r0, #0]
 80043e4:	68db      	ldr	r3, [r3, #12]
 80043e6:	4798      	blx	r3
    if (*currentTrans)
 80043e8:	f8d9 0000 	ldr.w	r0, [r9]
 80043ec:	b110      	cbz	r0, 80043f4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80043ee:	6803      	ldr	r3, [r0, #0]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	4798      	blx	r3
    if (*currentScreen)
 80043f4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80044bc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 80043f8:	f8d8 0000 	ldr.w	r0, [r8]
 80043fc:	b110      	cbz	r0, 8004404 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80043fe:	6803      	ldr	r3, [r0, #0]
 8004400:	695b      	ldr	r3, [r3, #20]
 8004402:	4798      	blx	r3
    if (*currentPresenter)
 8004404:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004408:	b110      	cbz	r0, 8004410 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800440a:	6803      	ldr	r3, [r0, #0]
 800440c:	685b      	ldr	r3, [r3, #4]
 800440e:	4798      	blx	r3
    if (*currentScreen)
 8004410:	f8d8 0000 	ldr.w	r0, [r8]
 8004414:	b110      	cbz	r0, 800441c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004416:	6803      	ldr	r3, [r0, #0]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	4798      	blx	r3
    if (*currentPresenter)
 800441c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004420:	b110      	cbz	r0, 8004428 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004422:	6803      	ldr	r3, [r0, #0]
 8004424:	689b      	ldr	r3, [r3, #8]
 8004426:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004428:	68e0      	ldr	r0, [r4, #12]
 800442a:	2100      	movs	r1, #0
 800442c:	f7ff ff76 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004430:	2114      	movs	r1, #20
 8004432:	4605      	mov	r5, r0
 8004434:	f7ff ff76 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004438:	68a0      	ldr	r0, [r4, #8]
 800443a:	6803      	ldr	r3, [r0, #0]
 800443c:	2100      	movs	r1, #0
 800443e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004440:	4798      	blx	r3
 8004442:	4606      	mov	r6, r0
 8004444:	f004 fc1c 	bl	8008c80 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004448:	6860      	ldr	r0, [r4, #4]
 800444a:	6803      	ldr	r3, [r0, #0]
 800444c:	2100      	movs	r1, #0
 800444e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004450:	4798      	blx	r3
 8004452:	4631      	mov	r1, r6
 8004454:	4604      	mov	r4, r0
 8004456:	f004 fbed 	bl	8008c34 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 800445a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800445e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004462:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004466:	b1dc      	cbz	r4, 80044a0 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004468:	1d23      	adds	r3, r4, #4
 800446a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800446e:	6833      	ldr	r3, [r6, #0]
 8004470:	f8c4 a008 	str.w	sl, [r4, #8]
 8004474:	4630      	mov	r0, r6
 8004476:	68db      	ldr	r3, [r3, #12]
 8004478:	63f4      	str	r4, [r6, #60]	; 0x3c
 800447a:	4798      	blx	r3
    newPresenter->activate();
 800447c:	6823      	ldr	r3, [r4, #0]
 800447e:	4620      	mov	r0, r4
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004484:	4629      	mov	r1, r5
 8004486:	4630      	mov	r0, r6
 8004488:	f012 fd26 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800448c:	682b      	ldr	r3, [r5, #0]
 800448e:	4628      	mov	r0, r5
 8004490:	691b      	ldr	r3, [r3, #16]
 8004492:	4798      	blx	r3
    newTransition->invalidate();
 8004494:	682b      	ldr	r3, [r5, #0]
 8004496:	4628      	mov	r0, r5
 8004498:	695b      	ldr	r3, [r3, #20]
}
 800449a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800449e:	4718      	bx	r3
    model->bind(newPresenter);
 80044a0:	4623      	mov	r3, r4
 80044a2:	e7e2      	b.n	800446a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 80044a4:	0802b8cc 	.word	0x0802b8cc
 80044a8:	0802c183 	.word	0x0802c183
 80044ac:	0802ba68 	.word	0x0802ba68
 80044b0:	0802baaf 	.word	0x0802baaf
 80044b4:	0802bb52 	.word	0x0802bb52
 80044b8:	20012ebc 	.word	0x20012ebc
 80044bc:	20012eb8 	.word	0x20012eb8

080044c0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 80044c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044c4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80044c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044ca:	68a0      	ldr	r0, [r4, #8]
 80044cc:	6803      	ldr	r3, [r0, #0]
 80044ce:	6a1b      	ldr	r3, [r3, #32]
 80044d0:	4798      	blx	r3
 80044d2:	f241 035b 	movw	r3, #4187	; 0x105b
 80044d6:	4298      	cmp	r0, r3
 80044d8:	d805      	bhi.n	80044e6 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 80044da:	4b42      	ldr	r3, [pc, #264]	; (80045e4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 80044dc:	4a42      	ldr	r2, [pc, #264]	; (80045e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80044de:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044e0:	4842      	ldr	r0, [pc, #264]	; (80045ec <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 80044e2:	f025 fb63 	bl	8029bac <__assert_func>
 80044e6:	6860      	ldr	r0, [r4, #4]
 80044e8:	6803      	ldr	r3, [r0, #0]
 80044ea:	6a1b      	ldr	r3, [r3, #32]
 80044ec:	4798      	blx	r3
 80044ee:	280f      	cmp	r0, #15
 80044f0:	d803      	bhi.n	80044fa <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 80044f2:	4b3f      	ldr	r3, [pc, #252]	; (80045f0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 80044f4:	4a3c      	ldr	r2, [pc, #240]	; (80045e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 80044f6:	21a4      	movs	r1, #164	; 0xa4
 80044f8:	e7f2      	b.n	80044e0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80044fa:	68e0      	ldr	r0, [r4, #12]
 80044fc:	6803      	ldr	r3, [r0, #0]
 80044fe:	6a1b      	ldr	r3, [r3, #32]
 8004500:	4798      	blx	r3
 8004502:	2837      	cmp	r0, #55	; 0x37
 8004504:	d803      	bhi.n	800450e <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 8004506:	4b3b      	ldr	r3, [pc, #236]	; (80045f4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 8004508:	4a37      	ldr	r2, [pc, #220]	; (80045e8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800450a:	21a5      	movs	r1, #165	; 0xa5
 800450c:	e7e8      	b.n	80044e0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800450e:	f010 feb7 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004512:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80045f8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 8004516:	3004      	adds	r0, #4
 8004518:	f010 ff18 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800451c:	f8d9 0000 	ldr.w	r0, [r9]
 8004520:	b110      	cbz	r0, 8004528 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004522:	6803      	ldr	r3, [r0, #0]
 8004524:	68db      	ldr	r3, [r3, #12]
 8004526:	4798      	blx	r3
    if (*currentTrans)
 8004528:	f8d9 0000 	ldr.w	r0, [r9]
 800452c:	b110      	cbz	r0, 8004534 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800452e:	6803      	ldr	r3, [r0, #0]
 8004530:	681b      	ldr	r3, [r3, #0]
 8004532:	4798      	blx	r3
    if (*currentScreen)
 8004534:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80045fc <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 8004538:	f8d8 0000 	ldr.w	r0, [r8]
 800453c:	b110      	cbz	r0, 8004544 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800453e:	6803      	ldr	r3, [r0, #0]
 8004540:	695b      	ldr	r3, [r3, #20]
 8004542:	4798      	blx	r3
    if (*currentPresenter)
 8004544:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004548:	b110      	cbz	r0, 8004550 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800454a:	6803      	ldr	r3, [r0, #0]
 800454c:	685b      	ldr	r3, [r3, #4]
 800454e:	4798      	blx	r3
    if (*currentScreen)
 8004550:	f8d8 0000 	ldr.w	r0, [r8]
 8004554:	b110      	cbz	r0, 800455c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004556:	6803      	ldr	r3, [r0, #0]
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	4798      	blx	r3
    if (*currentPresenter)
 800455c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004560:	b110      	cbz	r0, 8004568 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004562:	6803      	ldr	r3, [r0, #0]
 8004564:	689b      	ldr	r3, [r3, #8]
 8004566:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004568:	68e0      	ldr	r0, [r4, #12]
 800456a:	2100      	movs	r1, #0
 800456c:	f7ff fed6 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004570:	2114      	movs	r1, #20
 8004572:	4605      	mov	r5, r0
 8004574:	f7ff fed6 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004578:	68a0      	ldr	r0, [r4, #8]
 800457a:	6803      	ldr	r3, [r0, #0]
 800457c:	2100      	movs	r1, #0
 800457e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004580:	4798      	blx	r3
 8004582:	4606      	mov	r6, r0
 8004584:	f003 ffc8 	bl	8008518 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004588:	6860      	ldr	r0, [r4, #4]
 800458a:	6803      	ldr	r3, [r0, #0]
 800458c:	2100      	movs	r1, #0
 800458e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004590:	4798      	blx	r3
 8004592:	4631      	mov	r1, r6
 8004594:	4604      	mov	r4, r0
 8004596:	f003 ff99 	bl	80084cc <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 800459a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800459e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045a2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80045a6:	b1dc      	cbz	r4, 80045e0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 80045a8:	1d23      	adds	r3, r4, #4
 80045aa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045ae:	6833      	ldr	r3, [r6, #0]
 80045b0:	f8c4 a008 	str.w	sl, [r4, #8]
 80045b4:	4630      	mov	r0, r6
 80045b6:	68db      	ldr	r3, [r3, #12]
 80045b8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80045ba:	4798      	blx	r3
    newPresenter->activate();
 80045bc:	6823      	ldr	r3, [r4, #0]
 80045be:	4620      	mov	r0, r4
 80045c0:	681b      	ldr	r3, [r3, #0]
 80045c2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80045c4:	4629      	mov	r1, r5
 80045c6:	4630      	mov	r0, r6
 80045c8:	f012 fc86 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045cc:	682b      	ldr	r3, [r5, #0]
 80045ce:	4628      	mov	r0, r5
 80045d0:	691b      	ldr	r3, [r3, #16]
 80045d2:	4798      	blx	r3
    newTransition->invalidate();
 80045d4:	682b      	ldr	r3, [r5, #0]
 80045d6:	4628      	mov	r0, r5
 80045d8:	695b      	ldr	r3, [r3, #20]
}
 80045da:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80045de:	4718      	bx	r3
    model->bind(newPresenter);
 80045e0:	4623      	mov	r3, r4
 80045e2:	e7e2      	b.n	80045aa <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 80045e4:	0802b8cc 	.word	0x0802b8cc
 80045e8:	0802c2a3 	.word	0x0802c2a3
 80045ec:	0802ba68 	.word	0x0802ba68
 80045f0:	0802baaf 	.word	0x0802baaf
 80045f4:	0802bb52 	.word	0x0802bb52
 80045f8:	20012ebc 	.word	0x20012ebc
 80045fc:	20012eb8 	.word	0x20012eb8

08004600 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 8004600:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004604:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004608:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800460a:	68a0      	ldr	r0, [r4, #8]
 800460c:	6803      	ldr	r3, [r0, #0]
 800460e:	6a1b      	ldr	r3, [r3, #32]
 8004610:	4798      	blx	r3
 8004612:	f241 035b 	movw	r3, #4187	; 0x105b
 8004616:	4298      	cmp	r0, r3
 8004618:	d805      	bhi.n	8004626 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 800461a:	4b42      	ldr	r3, [pc, #264]	; (8004724 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 800461c:	4a42      	ldr	r2, [pc, #264]	; (8004728 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800461e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004620:	4842      	ldr	r0, [pc, #264]	; (800472c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 8004622:	f025 fac3 	bl	8029bac <__assert_func>
 8004626:	6860      	ldr	r0, [r4, #4]
 8004628:	6803      	ldr	r3, [r0, #0]
 800462a:	6a1b      	ldr	r3, [r3, #32]
 800462c:	4798      	blx	r3
 800462e:	280f      	cmp	r0, #15
 8004630:	d803      	bhi.n	800463a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 8004632:	4b3f      	ldr	r3, [pc, #252]	; (8004730 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004634:	4a3c      	ldr	r2, [pc, #240]	; (8004728 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004636:	21a4      	movs	r1, #164	; 0xa4
 8004638:	e7f2      	b.n	8004620 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800463a:	68e0      	ldr	r0, [r4, #12]
 800463c:	6803      	ldr	r3, [r0, #0]
 800463e:	6a1b      	ldr	r3, [r3, #32]
 8004640:	4798      	blx	r3
 8004642:	2837      	cmp	r0, #55	; 0x37
 8004644:	d803      	bhi.n	800464e <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8004646:	4b3b      	ldr	r3, [pc, #236]	; (8004734 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8004648:	4a37      	ldr	r2, [pc, #220]	; (8004728 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800464a:	21a5      	movs	r1, #165	; 0xa5
 800464c:	e7e8      	b.n	8004620 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800464e:	f010 fe17 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004652:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004738 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 8004656:	3004      	adds	r0, #4
 8004658:	f010 fe78 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800465c:	f8d9 0000 	ldr.w	r0, [r9]
 8004660:	b110      	cbz	r0, 8004668 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004662:	6803      	ldr	r3, [r0, #0]
 8004664:	68db      	ldr	r3, [r3, #12]
 8004666:	4798      	blx	r3
    if (*currentTrans)
 8004668:	f8d9 0000 	ldr.w	r0, [r9]
 800466c:	b110      	cbz	r0, 8004674 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800466e:	6803      	ldr	r3, [r0, #0]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	4798      	blx	r3
    if (*currentScreen)
 8004674:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800473c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 8004678:	f8d8 0000 	ldr.w	r0, [r8]
 800467c:	b110      	cbz	r0, 8004684 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800467e:	6803      	ldr	r3, [r0, #0]
 8004680:	695b      	ldr	r3, [r3, #20]
 8004682:	4798      	blx	r3
    if (*currentPresenter)
 8004684:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004688:	b110      	cbz	r0, 8004690 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800468a:	6803      	ldr	r3, [r0, #0]
 800468c:	685b      	ldr	r3, [r3, #4]
 800468e:	4798      	blx	r3
    if (*currentScreen)
 8004690:	f8d8 0000 	ldr.w	r0, [r8]
 8004694:	b110      	cbz	r0, 800469c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004696:	6803      	ldr	r3, [r0, #0]
 8004698:	681b      	ldr	r3, [r3, #0]
 800469a:	4798      	blx	r3
    if (*currentPresenter)
 800469c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80046a0:	b110      	cbz	r0, 80046a8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80046a2:	6803      	ldr	r3, [r0, #0]
 80046a4:	689b      	ldr	r3, [r3, #8]
 80046a6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80046a8:	68e0      	ldr	r0, [r4, #12]
 80046aa:	2100      	movs	r1, #0
 80046ac:	f7ff fe36 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80046b0:	2114      	movs	r1, #20
 80046b2:	4605      	mov	r5, r0
 80046b4:	f7ff fe36 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046b8:	68a0      	ldr	r0, [r4, #8]
 80046ba:	6803      	ldr	r3, [r0, #0]
 80046bc:	2100      	movs	r1, #0
 80046be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046c0:	4798      	blx	r3
 80046c2:	4606      	mov	r6, r0
 80046c4:	f003 ff6a 	bl	800859c <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046c8:	6860      	ldr	r0, [r4, #4]
 80046ca:	6803      	ldr	r3, [r0, #0]
 80046cc:	2100      	movs	r1, #0
 80046ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046d0:	4798      	blx	r3
 80046d2:	4631      	mov	r1, r6
 80046d4:	4604      	mov	r4, r0
 80046d6:	f003 ff3b 	bl	8008550 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 80046da:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80046de:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046e2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046e6:	b1dc      	cbz	r4, 8004720 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 80046e8:	1d23      	adds	r3, r4, #4
 80046ea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046ee:	6833      	ldr	r3, [r6, #0]
 80046f0:	f8c4 a008 	str.w	sl, [r4, #8]
 80046f4:	4630      	mov	r0, r6
 80046f6:	68db      	ldr	r3, [r3, #12]
 80046f8:	63f4      	str	r4, [r6, #60]	; 0x3c
 80046fa:	4798      	blx	r3
    newPresenter->activate();
 80046fc:	6823      	ldr	r3, [r4, #0]
 80046fe:	4620      	mov	r0, r4
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004704:	4629      	mov	r1, r5
 8004706:	4630      	mov	r0, r6
 8004708:	f012 fbe6 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800470c:	682b      	ldr	r3, [r5, #0]
 800470e:	4628      	mov	r0, r5
 8004710:	691b      	ldr	r3, [r3, #16]
 8004712:	4798      	blx	r3
    newTransition->invalidate();
 8004714:	682b      	ldr	r3, [r5, #0]
 8004716:	4628      	mov	r0, r5
 8004718:	695b      	ldr	r3, [r3, #20]
}
 800471a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800471e:	4718      	bx	r3
    model->bind(newPresenter);
 8004720:	4623      	mov	r3, r4
 8004722:	e7e2      	b.n	80046ea <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004724:	0802b8cc 	.word	0x0802b8cc
 8004728:	0802c3cb 	.word	0x0802c3cb
 800472c:	0802ba68 	.word	0x0802ba68
 8004730:	0802baaf 	.word	0x0802baaf
 8004734:	0802bb52 	.word	0x0802bb52
 8004738:	20012ebc 	.word	0x20012ebc
 800473c:	20012eb8 	.word	0x20012eb8

08004740 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 8004740:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004744:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004748:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800474a:	68a0      	ldr	r0, [r4, #8]
 800474c:	6803      	ldr	r3, [r0, #0]
 800474e:	6a1b      	ldr	r3, [r3, #32]
 8004750:	4798      	blx	r3
 8004752:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004756:	d205      	bcs.n	8004764 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 8004758:	4b42      	ldr	r3, [pc, #264]	; (8004864 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 800475a:	4a43      	ldr	r2, [pc, #268]	; (8004868 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 800475c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800475e:	4843      	ldr	r0, [pc, #268]	; (800486c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 8004760:	f025 fa24 	bl	8029bac <__assert_func>
 8004764:	6860      	ldr	r0, [r4, #4]
 8004766:	6803      	ldr	r3, [r0, #0]
 8004768:	6a1b      	ldr	r3, [r3, #32]
 800476a:	4798      	blx	r3
 800476c:	280f      	cmp	r0, #15
 800476e:	d803      	bhi.n	8004778 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 8004770:	4b3f      	ldr	r3, [pc, #252]	; (8004870 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 8004772:	4a3d      	ldr	r2, [pc, #244]	; (8004868 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004774:	21a4      	movs	r1, #164	; 0xa4
 8004776:	e7f2      	b.n	800475e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004778:	68e0      	ldr	r0, [r4, #12]
 800477a:	6803      	ldr	r3, [r0, #0]
 800477c:	6a1b      	ldr	r3, [r3, #32]
 800477e:	4798      	blx	r3
 8004780:	2837      	cmp	r0, #55	; 0x37
 8004782:	d803      	bhi.n	800478c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 8004784:	4b3b      	ldr	r3, [pc, #236]	; (8004874 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 8004786:	4a38      	ldr	r2, [pc, #224]	; (8004868 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 8004788:	21a5      	movs	r1, #165	; 0xa5
 800478a:	e7e8      	b.n	800475e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800478c:	f010 fd78 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004790:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004878 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 8004794:	3004      	adds	r0, #4
 8004796:	f010 fdd9 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800479a:	f8d9 0000 	ldr.w	r0, [r9]
 800479e:	b110      	cbz	r0, 80047a6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80047a0:	6803      	ldr	r3, [r0, #0]
 80047a2:	68db      	ldr	r3, [r3, #12]
 80047a4:	4798      	blx	r3
    if (*currentTrans)
 80047a6:	f8d9 0000 	ldr.w	r0, [r9]
 80047aa:	b110      	cbz	r0, 80047b2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80047ac:	6803      	ldr	r3, [r0, #0]
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	4798      	blx	r3
    if (*currentScreen)
 80047b2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800487c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 80047b6:	f8d8 0000 	ldr.w	r0, [r8]
 80047ba:	b110      	cbz	r0, 80047c2 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80047bc:	6803      	ldr	r3, [r0, #0]
 80047be:	695b      	ldr	r3, [r3, #20]
 80047c0:	4798      	blx	r3
    if (*currentPresenter)
 80047c2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047c6:	b110      	cbz	r0, 80047ce <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80047c8:	6803      	ldr	r3, [r0, #0]
 80047ca:	685b      	ldr	r3, [r3, #4]
 80047cc:	4798      	blx	r3
    if (*currentScreen)
 80047ce:	f8d8 0000 	ldr.w	r0, [r8]
 80047d2:	b110      	cbz	r0, 80047da <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80047d4:	6803      	ldr	r3, [r0, #0]
 80047d6:	681b      	ldr	r3, [r3, #0]
 80047d8:	4798      	blx	r3
    if (*currentPresenter)
 80047da:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047de:	b110      	cbz	r0, 80047e6 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80047e0:	6803      	ldr	r3, [r0, #0]
 80047e2:	689b      	ldr	r3, [r3, #8]
 80047e4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80047e6:	68e0      	ldr	r0, [r4, #12]
 80047e8:	2100      	movs	r1, #0
 80047ea:	f7ff fd97 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80047ee:	2114      	movs	r1, #20
 80047f0:	4605      	mov	r5, r0
 80047f2:	f7ff fd97 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047f6:	68a0      	ldr	r0, [r4, #8]
 80047f8:	6803      	ldr	r3, [r0, #0]
 80047fa:	2100      	movs	r1, #0
 80047fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047fe:	4798      	blx	r3
 8004800:	4606      	mov	r6, r0
 8004802:	f003 fe2f 	bl	8008464 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004806:	6860      	ldr	r0, [r4, #4]
 8004808:	6803      	ldr	r3, [r0, #0]
 800480a:	2100      	movs	r1, #0
 800480c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800480e:	4798      	blx	r3
 8004810:	4631      	mov	r1, r6
 8004812:	4604      	mov	r4, r0
 8004814:	f003 fe00 	bl	8008418 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004818:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800481c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004820:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004824:	b1dc      	cbz	r4, 800485e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 8004826:	1d23      	adds	r3, r4, #4
 8004828:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800482c:	6833      	ldr	r3, [r6, #0]
 800482e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004832:	4630      	mov	r0, r6
 8004834:	68db      	ldr	r3, [r3, #12]
 8004836:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004838:	4798      	blx	r3
    newPresenter->activate();
 800483a:	6823      	ldr	r3, [r4, #0]
 800483c:	4620      	mov	r0, r4
 800483e:	681b      	ldr	r3, [r3, #0]
 8004840:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004842:	4629      	mov	r1, r5
 8004844:	4630      	mov	r0, r6
 8004846:	f012 fb47 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800484a:	682b      	ldr	r3, [r5, #0]
 800484c:	4628      	mov	r0, r5
 800484e:	691b      	ldr	r3, [r3, #16]
 8004850:	4798      	blx	r3
    newTransition->invalidate();
 8004852:	682b      	ldr	r3, [r5, #0]
 8004854:	4628      	mov	r0, r5
 8004856:	695b      	ldr	r3, [r3, #20]
}
 8004858:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800485c:	4718      	bx	r3
    model->bind(newPresenter);
 800485e:	4623      	mov	r3, r4
 8004860:	e7e2      	b.n	8004828 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 8004862:	bf00      	nop
 8004864:	0802b8cc 	.word	0x0802b8cc
 8004868:	0802c4f1 	.word	0x0802c4f1
 800486c:	0802ba68 	.word	0x0802ba68
 8004870:	0802baaf 	.word	0x0802baaf
 8004874:	0802bb52 	.word	0x0802bb52
 8004878:	20012ebc 	.word	0x20012ebc
 800487c:	20012eb8 	.word	0x20012eb8

08004880 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 8004880:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004884:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004888:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800488a:	68a0      	ldr	r0, [r4, #8]
 800488c:	6803      	ldr	r3, [r0, #0]
 800488e:	6a1b      	ldr	r3, [r3, #32]
 8004890:	4798      	blx	r3
 8004892:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004896:	4298      	cmp	r0, r3
 8004898:	d805      	bhi.n	80048a6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 800489a:	4b42      	ldr	r3, [pc, #264]	; (80049a4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 800489c:	4a42      	ldr	r2, [pc, #264]	; (80049a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 800489e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80048a0:	4842      	ldr	r0, [pc, #264]	; (80049ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 80048a2:	f025 f983 	bl	8029bac <__assert_func>
 80048a6:	6860      	ldr	r0, [r4, #4]
 80048a8:	6803      	ldr	r3, [r0, #0]
 80048aa:	6a1b      	ldr	r3, [r3, #32]
 80048ac:	4798      	blx	r3
 80048ae:	280f      	cmp	r0, #15
 80048b0:	d803      	bhi.n	80048ba <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 80048b2:	4b3f      	ldr	r3, [pc, #252]	; (80049b0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 80048b4:	4a3c      	ldr	r2, [pc, #240]	; (80049a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80048b6:	21a4      	movs	r1, #164	; 0xa4
 80048b8:	e7f2      	b.n	80048a0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048ba:	68e0      	ldr	r0, [r4, #12]
 80048bc:	6803      	ldr	r3, [r0, #0]
 80048be:	6a1b      	ldr	r3, [r3, #32]
 80048c0:	4798      	blx	r3
 80048c2:	2837      	cmp	r0, #55	; 0x37
 80048c4:	d803      	bhi.n	80048ce <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80048c6:	4b3b      	ldr	r3, [pc, #236]	; (80049b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80048c8:	4a37      	ldr	r2, [pc, #220]	; (80049a8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80048ca:	21a5      	movs	r1, #165	; 0xa5
 80048cc:	e7e8      	b.n	80048a0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80048ce:	f010 fcd7 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048d2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80049b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80048d6:	3004      	adds	r0, #4
 80048d8:	f010 fd38 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80048dc:	f8d9 0000 	ldr.w	r0, [r9]
 80048e0:	b110      	cbz	r0, 80048e8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80048e2:	6803      	ldr	r3, [r0, #0]
 80048e4:	68db      	ldr	r3, [r3, #12]
 80048e6:	4798      	blx	r3
    if (*currentTrans)
 80048e8:	f8d9 0000 	ldr.w	r0, [r9]
 80048ec:	b110      	cbz	r0, 80048f4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80048ee:	6803      	ldr	r3, [r0, #0]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	4798      	blx	r3
    if (*currentScreen)
 80048f4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80049bc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 80048f8:	f8d8 0000 	ldr.w	r0, [r8]
 80048fc:	b110      	cbz	r0, 8004904 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80048fe:	6803      	ldr	r3, [r0, #0]
 8004900:	695b      	ldr	r3, [r3, #20]
 8004902:	4798      	blx	r3
    if (*currentPresenter)
 8004904:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004908:	b110      	cbz	r0, 8004910 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800490a:	6803      	ldr	r3, [r0, #0]
 800490c:	685b      	ldr	r3, [r3, #4]
 800490e:	4798      	blx	r3
    if (*currentScreen)
 8004910:	f8d8 0000 	ldr.w	r0, [r8]
 8004914:	b110      	cbz	r0, 800491c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004916:	6803      	ldr	r3, [r0, #0]
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	4798      	blx	r3
    if (*currentPresenter)
 800491c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004920:	b110      	cbz	r0, 8004928 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004922:	6803      	ldr	r3, [r0, #0]
 8004924:	689b      	ldr	r3, [r3, #8]
 8004926:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004928:	68e0      	ldr	r0, [r4, #12]
 800492a:	2100      	movs	r1, #0
 800492c:	f7ff fcf6 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004930:	2114      	movs	r1, #20
 8004932:	4605      	mov	r5, r0
 8004934:	f7ff fcf6 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004938:	68a0      	ldr	r0, [r4, #8]
 800493a:	6803      	ldr	r3, [r0, #0]
 800493c:	2100      	movs	r1, #0
 800493e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004940:	4798      	blx	r3
 8004942:	4606      	mov	r6, r0
 8004944:	f004 f80e 	bl	8008964 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004948:	6860      	ldr	r0, [r4, #4]
 800494a:	6803      	ldr	r3, [r0, #0]
 800494c:	2100      	movs	r1, #0
 800494e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004950:	4798      	blx	r3
 8004952:	4631      	mov	r1, r6
 8004954:	4604      	mov	r4, r0
 8004956:	f003 ffdf 	bl	8008918 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 800495a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800495e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004962:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004966:	b1dc      	cbz	r4, 80049a0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8004968:	1d23      	adds	r3, r4, #4
 800496a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800496e:	6833      	ldr	r3, [r6, #0]
 8004970:	f8c4 a008 	str.w	sl, [r4, #8]
 8004974:	4630      	mov	r0, r6
 8004976:	68db      	ldr	r3, [r3, #12]
 8004978:	63f4      	str	r4, [r6, #60]	; 0x3c
 800497a:	4798      	blx	r3
    newPresenter->activate();
 800497c:	6823      	ldr	r3, [r4, #0]
 800497e:	4620      	mov	r0, r4
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004984:	4629      	mov	r1, r5
 8004986:	4630      	mov	r0, r6
 8004988:	f012 faa6 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800498c:	682b      	ldr	r3, [r5, #0]
 800498e:	4628      	mov	r0, r5
 8004990:	691b      	ldr	r3, [r3, #16]
 8004992:	4798      	blx	r3
    newTransition->invalidate();
 8004994:	682b      	ldr	r3, [r5, #0]
 8004996:	4628      	mov	r0, r5
 8004998:	695b      	ldr	r3, [r3, #20]
}
 800499a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800499e:	4718      	bx	r3
    model->bind(newPresenter);
 80049a0:	4623      	mov	r3, r4
 80049a2:	e7e2      	b.n	800496a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 80049a4:	0802b8cc 	.word	0x0802b8cc
 80049a8:	0802c60f 	.word	0x0802c60f
 80049ac:	0802ba68 	.word	0x0802ba68
 80049b0:	0802baaf 	.word	0x0802baaf
 80049b4:	0802bb52 	.word	0x0802bb52
 80049b8:	20012ebc 	.word	0x20012ebc
 80049bc:	20012eb8 	.word	0x20012eb8

080049c0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80049c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049c4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80049c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049ca:	68a0      	ldr	r0, [r4, #8]
 80049cc:	6803      	ldr	r3, [r0, #0]
 80049ce:	6a1b      	ldr	r3, [r3, #32]
 80049d0:	4798      	blx	r3
 80049d2:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80049d6:	4298      	cmp	r0, r3
 80049d8:	d805      	bhi.n	80049e6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80049da:	4b42      	ldr	r3, [pc, #264]	; (8004ae4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80049dc:	4a42      	ldr	r2, [pc, #264]	; (8004ae8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80049de:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80049e0:	4842      	ldr	r0, [pc, #264]	; (8004aec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80049e2:	f025 f8e3 	bl	8029bac <__assert_func>
 80049e6:	6860      	ldr	r0, [r4, #4]
 80049e8:	6803      	ldr	r3, [r0, #0]
 80049ea:	6a1b      	ldr	r3, [r3, #32]
 80049ec:	4798      	blx	r3
 80049ee:	280f      	cmp	r0, #15
 80049f0:	d803      	bhi.n	80049fa <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80049f2:	4b3f      	ldr	r3, [pc, #252]	; (8004af0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 80049f4:	4a3c      	ldr	r2, [pc, #240]	; (8004ae8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80049f6:	21a4      	movs	r1, #164	; 0xa4
 80049f8:	e7f2      	b.n	80049e0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049fa:	68e0      	ldr	r0, [r4, #12]
 80049fc:	6803      	ldr	r3, [r0, #0]
 80049fe:	6a1b      	ldr	r3, [r3, #32]
 8004a00:	4798      	blx	r3
 8004a02:	2837      	cmp	r0, #55	; 0x37
 8004a04:	d803      	bhi.n	8004a0e <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8004a06:	4b3b      	ldr	r3, [pc, #236]	; (8004af4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8004a08:	4a37      	ldr	r2, [pc, #220]	; (8004ae8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004a0a:	21a5      	movs	r1, #165	; 0xa5
 8004a0c:	e7e8      	b.n	80049e0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004a0e:	f010 fc37 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004a12:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004af8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8004a16:	3004      	adds	r0, #4
 8004a18:	f010 fc98 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004a1c:	f8d9 0000 	ldr.w	r0, [r9]
 8004a20:	b110      	cbz	r0, 8004a28 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004a22:	6803      	ldr	r3, [r0, #0]
 8004a24:	68db      	ldr	r3, [r3, #12]
 8004a26:	4798      	blx	r3
    if (*currentTrans)
 8004a28:	f8d9 0000 	ldr.w	r0, [r9]
 8004a2c:	b110      	cbz	r0, 8004a34 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004a2e:	6803      	ldr	r3, [r0, #0]
 8004a30:	681b      	ldr	r3, [r3, #0]
 8004a32:	4798      	blx	r3
    if (*currentScreen)
 8004a34:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004afc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8004a38:	f8d8 0000 	ldr.w	r0, [r8]
 8004a3c:	b110      	cbz	r0, 8004a44 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004a3e:	6803      	ldr	r3, [r0, #0]
 8004a40:	695b      	ldr	r3, [r3, #20]
 8004a42:	4798      	blx	r3
    if (*currentPresenter)
 8004a44:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a48:	b110      	cbz	r0, 8004a50 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004a4a:	6803      	ldr	r3, [r0, #0]
 8004a4c:	685b      	ldr	r3, [r3, #4]
 8004a4e:	4798      	blx	r3
    if (*currentScreen)
 8004a50:	f8d8 0000 	ldr.w	r0, [r8]
 8004a54:	b110      	cbz	r0, 8004a5c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004a56:	6803      	ldr	r3, [r0, #0]
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	4798      	blx	r3
    if (*currentPresenter)
 8004a5c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a60:	b110      	cbz	r0, 8004a68 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004a62:	6803      	ldr	r3, [r0, #0]
 8004a64:	689b      	ldr	r3, [r3, #8]
 8004a66:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a68:	68e0      	ldr	r0, [r4, #12]
 8004a6a:	2100      	movs	r1, #0
 8004a6c:	f7ff fc56 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004a70:	2114      	movs	r1, #20
 8004a72:	4605      	mov	r5, r0
 8004a74:	f7ff fc56 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a78:	68a0      	ldr	r0, [r4, #8]
 8004a7a:	6803      	ldr	r3, [r0, #0]
 8004a7c:	2100      	movs	r1, #0
 8004a7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a80:	4798      	blx	r3
 8004a82:	4606      	mov	r6, r0
 8004a84:	f003 ff2c 	bl	80088e0 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a88:	6860      	ldr	r0, [r4, #4]
 8004a8a:	6803      	ldr	r3, [r0, #0]
 8004a8c:	2100      	movs	r1, #0
 8004a8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a90:	4798      	blx	r3
 8004a92:	4631      	mov	r1, r6
 8004a94:	4604      	mov	r4, r0
 8004a96:	f003 fefd 	bl	8008894 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 8004a9a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a9e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004aa2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004aa6:	b1dc      	cbz	r4, 8004ae0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8004aa8:	1d23      	adds	r3, r4, #4
 8004aaa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004aae:	6833      	ldr	r3, [r6, #0]
 8004ab0:	f8c4 a008 	str.w	sl, [r4, #8]
 8004ab4:	4630      	mov	r0, r6
 8004ab6:	68db      	ldr	r3, [r3, #12]
 8004ab8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004aba:	4798      	blx	r3
    newPresenter->activate();
 8004abc:	6823      	ldr	r3, [r4, #0]
 8004abe:	4620      	mov	r0, r4
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004ac4:	4629      	mov	r1, r5
 8004ac6:	4630      	mov	r0, r6
 8004ac8:	f012 fa06 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004acc:	682b      	ldr	r3, [r5, #0]
 8004ace:	4628      	mov	r0, r5
 8004ad0:	691b      	ldr	r3, [r3, #16]
 8004ad2:	4798      	blx	r3
    newTransition->invalidate();
 8004ad4:	682b      	ldr	r3, [r5, #0]
 8004ad6:	4628      	mov	r0, r5
 8004ad8:	695b      	ldr	r3, [r3, #20]
}
 8004ada:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ade:	4718      	bx	r3
    model->bind(newPresenter);
 8004ae0:	4623      	mov	r3, r4
 8004ae2:	e7e2      	b.n	8004aaa <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8004ae4:	0802b8cc 	.word	0x0802b8cc
 8004ae8:	0802c753 	.word	0x0802c753
 8004aec:	0802ba68 	.word	0x0802ba68
 8004af0:	0802baaf 	.word	0x0802baaf
 8004af4:	0802bb52 	.word	0x0802bb52
 8004af8:	20012ebc 	.word	0x20012ebc
 8004afc:	20012eb8 	.word	0x20012eb8

08004b00 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 8004b00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004b04:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004b08:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004b0a:	68a0      	ldr	r0, [r4, #8]
 8004b0c:	6803      	ldr	r3, [r0, #0]
 8004b0e:	6a1b      	ldr	r3, [r3, #32]
 8004b10:	4798      	blx	r3
 8004b12:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004b16:	d205      	bcs.n	8004b24 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8004b18:	4b42      	ldr	r3, [pc, #264]	; (8004c24 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8004b1a:	4a43      	ldr	r2, [pc, #268]	; (8004c28 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004b1c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b1e:	4843      	ldr	r0, [pc, #268]	; (8004c2c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 8004b20:	f025 f844 	bl	8029bac <__assert_func>
 8004b24:	6860      	ldr	r0, [r4, #4]
 8004b26:	6803      	ldr	r3, [r0, #0]
 8004b28:	6a1b      	ldr	r3, [r3, #32]
 8004b2a:	4798      	blx	r3
 8004b2c:	280f      	cmp	r0, #15
 8004b2e:	d803      	bhi.n	8004b38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 8004b30:	4b3f      	ldr	r3, [pc, #252]	; (8004c30 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 8004b32:	4a3d      	ldr	r2, [pc, #244]	; (8004c28 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004b34:	21a4      	movs	r1, #164	; 0xa4
 8004b36:	e7f2      	b.n	8004b1e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b38:	68e0      	ldr	r0, [r4, #12]
 8004b3a:	6803      	ldr	r3, [r0, #0]
 8004b3c:	6a1b      	ldr	r3, [r3, #32]
 8004b3e:	4798      	blx	r3
 8004b40:	2837      	cmp	r0, #55	; 0x37
 8004b42:	d803      	bhi.n	8004b4c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8004b44:	4b3b      	ldr	r3, [pc, #236]	; (8004c34 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8004b46:	4a38      	ldr	r2, [pc, #224]	; (8004c28 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004b48:	21a5      	movs	r1, #165	; 0xa5
 8004b4a:	e7e8      	b.n	8004b1e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004b4c:	f010 fb98 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b50:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c38 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8004b54:	3004      	adds	r0, #4
 8004b56:	f010 fbf9 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b5a:	f8d9 0000 	ldr.w	r0, [r9]
 8004b5e:	b110      	cbz	r0, 8004b66 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004b60:	6803      	ldr	r3, [r0, #0]
 8004b62:	68db      	ldr	r3, [r3, #12]
 8004b64:	4798      	blx	r3
    if (*currentTrans)
 8004b66:	f8d9 0000 	ldr.w	r0, [r9]
 8004b6a:	b110      	cbz	r0, 8004b72 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004b6c:	6803      	ldr	r3, [r0, #0]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	4798      	blx	r3
    if (*currentScreen)
 8004b72:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004c3c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8004b76:	f8d8 0000 	ldr.w	r0, [r8]
 8004b7a:	b110      	cbz	r0, 8004b82 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004b7c:	6803      	ldr	r3, [r0, #0]
 8004b7e:	695b      	ldr	r3, [r3, #20]
 8004b80:	4798      	blx	r3
    if (*currentPresenter)
 8004b82:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b86:	b110      	cbz	r0, 8004b8e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004b88:	6803      	ldr	r3, [r0, #0]
 8004b8a:	685b      	ldr	r3, [r3, #4]
 8004b8c:	4798      	blx	r3
    if (*currentScreen)
 8004b8e:	f8d8 0000 	ldr.w	r0, [r8]
 8004b92:	b110      	cbz	r0, 8004b9a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b94:	6803      	ldr	r3, [r0, #0]
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	4798      	blx	r3
    if (*currentPresenter)
 8004b9a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b9e:	b110      	cbz	r0, 8004ba6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004ba0:	6803      	ldr	r3, [r0, #0]
 8004ba2:	689b      	ldr	r3, [r3, #8]
 8004ba4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ba6:	68e0      	ldr	r0, [r4, #12]
 8004ba8:	2100      	movs	r1, #0
 8004baa:	f7ff fbb7 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004bae:	2114      	movs	r1, #20
 8004bb0:	4605      	mov	r5, r0
 8004bb2:	f7ff fbb7 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004bb6:	68a0      	ldr	r0, [r4, #8]
 8004bb8:	6803      	ldr	r3, [r0, #0]
 8004bba:	2100      	movs	r1, #0
 8004bbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bbe:	4798      	blx	r3
 8004bc0:	4606      	mov	r6, r0
 8004bc2:	f003 fe33 	bl	800882c <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004bc6:	6860      	ldr	r0, [r4, #4]
 8004bc8:	6803      	ldr	r3, [r0, #0]
 8004bca:	2100      	movs	r1, #0
 8004bcc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bce:	4798      	blx	r3
 8004bd0:	4631      	mov	r1, r6
 8004bd2:	4604      	mov	r4, r0
 8004bd4:	f003 fe04 	bl	80087e0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004bd8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004bdc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004be0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004be4:	b1dc      	cbz	r4, 8004c1e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8004be6:	1d23      	adds	r3, r4, #4
 8004be8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004bec:	6833      	ldr	r3, [r6, #0]
 8004bee:	f8c4 a008 	str.w	sl, [r4, #8]
 8004bf2:	4630      	mov	r0, r6
 8004bf4:	68db      	ldr	r3, [r3, #12]
 8004bf6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004bf8:	4798      	blx	r3
    newPresenter->activate();
 8004bfa:	6823      	ldr	r3, [r4, #0]
 8004bfc:	4620      	mov	r0, r4
 8004bfe:	681b      	ldr	r3, [r3, #0]
 8004c00:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004c02:	4629      	mov	r1, r5
 8004c04:	4630      	mov	r0, r6
 8004c06:	f012 f967 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004c0a:	682b      	ldr	r3, [r5, #0]
 8004c0c:	4628      	mov	r0, r5
 8004c0e:	691b      	ldr	r3, [r3, #16]
 8004c10:	4798      	blx	r3
    newTransition->invalidate();
 8004c12:	682b      	ldr	r3, [r5, #0]
 8004c14:	4628      	mov	r0, r5
 8004c16:	695b      	ldr	r3, [r3, #20]
}
 8004c18:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c1c:	4718      	bx	r3
    model->bind(newPresenter);
 8004c1e:	4623      	mov	r3, r4
 8004c20:	e7e2      	b.n	8004be8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 8004c22:	bf00      	nop
 8004c24:	0802b8cc 	.word	0x0802b8cc
 8004c28:	0802c893 	.word	0x0802c893
 8004c2c:	0802ba68 	.word	0x0802ba68
 8004c30:	0802baaf 	.word	0x0802baaf
 8004c34:	0802bb52 	.word	0x0802bb52
 8004c38:	20012ebc 	.word	0x20012ebc
 8004c3c:	20012eb8 	.word	0x20012eb8

08004c40 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 8004c40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c44:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c48:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c4a:	68a0      	ldr	r0, [r4, #8]
 8004c4c:	6803      	ldr	r3, [r0, #0]
 8004c4e:	6a1b      	ldr	r3, [r3, #32]
 8004c50:	4798      	blx	r3
 8004c52:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004c56:	4298      	cmp	r0, r3
 8004c58:	d805      	bhi.n	8004c66 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8004c5a:	4b42      	ldr	r3, [pc, #264]	; (8004d64 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8004c5c:	4a42      	ldr	r2, [pc, #264]	; (8004d68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004c5e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c60:	4842      	ldr	r0, [pc, #264]	; (8004d6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 8004c62:	f024 ffa3 	bl	8029bac <__assert_func>
 8004c66:	6860      	ldr	r0, [r4, #4]
 8004c68:	6803      	ldr	r3, [r0, #0]
 8004c6a:	6a1b      	ldr	r3, [r3, #32]
 8004c6c:	4798      	blx	r3
 8004c6e:	280f      	cmp	r0, #15
 8004c70:	d803      	bhi.n	8004c7a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 8004c72:	4b3f      	ldr	r3, [pc, #252]	; (8004d70 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8004c74:	4a3c      	ldr	r2, [pc, #240]	; (8004d68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004c76:	21a4      	movs	r1, #164	; 0xa4
 8004c78:	e7f2      	b.n	8004c60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c7a:	68e0      	ldr	r0, [r4, #12]
 8004c7c:	6803      	ldr	r3, [r0, #0]
 8004c7e:	6a1b      	ldr	r3, [r3, #32]
 8004c80:	4798      	blx	r3
 8004c82:	2837      	cmp	r0, #55	; 0x37
 8004c84:	d803      	bhi.n	8004c8e <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8004c86:	4b3b      	ldr	r3, [pc, #236]	; (8004d74 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8004c88:	4a37      	ldr	r2, [pc, #220]	; (8004d68 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8004c8a:	21a5      	movs	r1, #165	; 0xa5
 8004c8c:	e7e8      	b.n	8004c60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004c8e:	f010 faf7 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c92:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d78 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 8004c96:	3004      	adds	r0, #4
 8004c98:	f010 fb58 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c9c:	f8d9 0000 	ldr.w	r0, [r9]
 8004ca0:	b110      	cbz	r0, 8004ca8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004ca2:	6803      	ldr	r3, [r0, #0]
 8004ca4:	68db      	ldr	r3, [r3, #12]
 8004ca6:	4798      	blx	r3
    if (*currentTrans)
 8004ca8:	f8d9 0000 	ldr.w	r0, [r9]
 8004cac:	b110      	cbz	r0, 8004cb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004cae:	6803      	ldr	r3, [r0, #0]
 8004cb0:	681b      	ldr	r3, [r3, #0]
 8004cb2:	4798      	blx	r3
    if (*currentScreen)
 8004cb4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004d7c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8004cb8:	f8d8 0000 	ldr.w	r0, [r8]
 8004cbc:	b110      	cbz	r0, 8004cc4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004cbe:	6803      	ldr	r3, [r0, #0]
 8004cc0:	695b      	ldr	r3, [r3, #20]
 8004cc2:	4798      	blx	r3
    if (*currentPresenter)
 8004cc4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cc8:	b110      	cbz	r0, 8004cd0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004cca:	6803      	ldr	r3, [r0, #0]
 8004ccc:	685b      	ldr	r3, [r3, #4]
 8004cce:	4798      	blx	r3
    if (*currentScreen)
 8004cd0:	f8d8 0000 	ldr.w	r0, [r8]
 8004cd4:	b110      	cbz	r0, 8004cdc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004cd6:	6803      	ldr	r3, [r0, #0]
 8004cd8:	681b      	ldr	r3, [r3, #0]
 8004cda:	4798      	blx	r3
    if (*currentPresenter)
 8004cdc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ce0:	b110      	cbz	r0, 8004ce8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004ce2:	6803      	ldr	r3, [r0, #0]
 8004ce4:	689b      	ldr	r3, [r3, #8]
 8004ce6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004ce8:	68e0      	ldr	r0, [r4, #12]
 8004cea:	2100      	movs	r1, #0
 8004cec:	f7ff fb16 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004cf0:	2114      	movs	r1, #20
 8004cf2:	4605      	mov	r5, r0
 8004cf4:	f7ff fb16 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cf8:	68a0      	ldr	r0, [r4, #8]
 8004cfa:	6803      	ldr	r3, [r0, #0]
 8004cfc:	2100      	movs	r1, #0
 8004cfe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d00:	4798      	blx	r3
 8004d02:	4606      	mov	r6, r0
 8004d04:	f003 ff56 	bl	8008bb4 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004d08:	6860      	ldr	r0, [r4, #4]
 8004d0a:	6803      	ldr	r3, [r0, #0]
 8004d0c:	2100      	movs	r1, #0
 8004d0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d10:	4798      	blx	r3
 8004d12:	4631      	mov	r1, r6
 8004d14:	4604      	mov	r4, r0
 8004d16:	f003 ff27 	bl	8008b68 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8004d1a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d1e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d22:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d26:	b1dc      	cbz	r4, 8004d60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8004d28:	1d23      	adds	r3, r4, #4
 8004d2a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d2e:	6833      	ldr	r3, [r6, #0]
 8004d30:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d34:	4630      	mov	r0, r6
 8004d36:	68db      	ldr	r3, [r3, #12]
 8004d38:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d3a:	4798      	blx	r3
    newPresenter->activate();
 8004d3c:	6823      	ldr	r3, [r4, #0]
 8004d3e:	4620      	mov	r0, r4
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d44:	4629      	mov	r1, r5
 8004d46:	4630      	mov	r0, r6
 8004d48:	f012 f8c6 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d4c:	682b      	ldr	r3, [r5, #0]
 8004d4e:	4628      	mov	r0, r5
 8004d50:	691b      	ldr	r3, [r3, #16]
 8004d52:	4798      	blx	r3
    newTransition->invalidate();
 8004d54:	682b      	ldr	r3, [r5, #0]
 8004d56:	4628      	mov	r0, r5
 8004d58:	695b      	ldr	r3, [r3, #20]
}
 8004d5a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d5e:	4718      	bx	r3
    model->bind(newPresenter);
 8004d60:	4623      	mov	r3, r4
 8004d62:	e7e2      	b.n	8004d2a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004d64:	0802b8cc 	.word	0x0802b8cc
 8004d68:	0802c9c3 	.word	0x0802c9c3
 8004d6c:	0802ba68 	.word	0x0802ba68
 8004d70:	0802baaf 	.word	0x0802baaf
 8004d74:	0802bb52 	.word	0x0802bb52
 8004d78:	20012ebc 	.word	0x20012ebc
 8004d7c:	20012eb8 	.word	0x20012eb8

08004d80 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004d80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d84:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d88:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d8a:	68a0      	ldr	r0, [r4, #8]
 8004d8c:	6803      	ldr	r3, [r0, #0]
 8004d8e:	6a1b      	ldr	r3, [r3, #32]
 8004d90:	4798      	blx	r3
 8004d92:	f241 33f3 	movw	r3, #5107	; 0x13f3
 8004d96:	4298      	cmp	r0, r3
 8004d98:	d805      	bhi.n	8004da6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004d9a:	4b42      	ldr	r3, [pc, #264]	; (8004ea4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004d9c:	4a42      	ldr	r2, [pc, #264]	; (8004ea8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004d9e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004da0:	4842      	ldr	r0, [pc, #264]	; (8004eac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004da2:	f024 ff03 	bl	8029bac <__assert_func>
 8004da6:	6860      	ldr	r0, [r4, #4]
 8004da8:	6803      	ldr	r3, [r0, #0]
 8004daa:	6a1b      	ldr	r3, [r3, #32]
 8004dac:	4798      	blx	r3
 8004dae:	280f      	cmp	r0, #15
 8004db0:	d803      	bhi.n	8004dba <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004db2:	4b3f      	ldr	r3, [pc, #252]	; (8004eb0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004db4:	4a3c      	ldr	r2, [pc, #240]	; (8004ea8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004db6:	21a4      	movs	r1, #164	; 0xa4
 8004db8:	e7f2      	b.n	8004da0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004dba:	68e0      	ldr	r0, [r4, #12]
 8004dbc:	6803      	ldr	r3, [r0, #0]
 8004dbe:	6a1b      	ldr	r3, [r3, #32]
 8004dc0:	4798      	blx	r3
 8004dc2:	2837      	cmp	r0, #55	; 0x37
 8004dc4:	d803      	bhi.n	8004dce <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004dc6:	4b3b      	ldr	r3, [pc, #236]	; (8004eb4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004dc8:	4a37      	ldr	r2, [pc, #220]	; (8004ea8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004dca:	21a5      	movs	r1, #165	; 0xa5
 8004dcc:	e7e8      	b.n	8004da0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004dce:	f010 fa57 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004dd2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004eb8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004dd6:	3004      	adds	r0, #4
 8004dd8:	f010 fab8 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004ddc:	f8d9 0000 	ldr.w	r0, [r9]
 8004de0:	b110      	cbz	r0, 8004de8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004de2:	6803      	ldr	r3, [r0, #0]
 8004de4:	68db      	ldr	r3, [r3, #12]
 8004de6:	4798      	blx	r3
    if (*currentTrans)
 8004de8:	f8d9 0000 	ldr.w	r0, [r9]
 8004dec:	b110      	cbz	r0, 8004df4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004dee:	6803      	ldr	r3, [r0, #0]
 8004df0:	681b      	ldr	r3, [r3, #0]
 8004df2:	4798      	blx	r3
    if (*currentScreen)
 8004df4:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004ebc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004df8:	f8d8 0000 	ldr.w	r0, [r8]
 8004dfc:	b110      	cbz	r0, 8004e04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004dfe:	6803      	ldr	r3, [r0, #0]
 8004e00:	695b      	ldr	r3, [r3, #20]
 8004e02:	4798      	blx	r3
    if (*currentPresenter)
 8004e04:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e08:	b110      	cbz	r0, 8004e10 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004e0a:	6803      	ldr	r3, [r0, #0]
 8004e0c:	685b      	ldr	r3, [r3, #4]
 8004e0e:	4798      	blx	r3
    if (*currentScreen)
 8004e10:	f8d8 0000 	ldr.w	r0, [r8]
 8004e14:	b110      	cbz	r0, 8004e1c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004e16:	6803      	ldr	r3, [r0, #0]
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	4798      	blx	r3
    if (*currentPresenter)
 8004e1c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e20:	b110      	cbz	r0, 8004e28 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004e22:	6803      	ldr	r3, [r0, #0]
 8004e24:	689b      	ldr	r3, [r3, #8]
 8004e26:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e28:	68e0      	ldr	r0, [r4, #12]
 8004e2a:	2100      	movs	r1, #0
 8004e2c:	f7ff fa76 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004e30:	2114      	movs	r1, #20
 8004e32:	4605      	mov	r5, r0
 8004e34:	f7ff fa76 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e38:	68a0      	ldr	r0, [r4, #8]
 8004e3a:	6803      	ldr	r3, [r0, #0]
 8004e3c:	2100      	movs	r1, #0
 8004e3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e40:	4798      	blx	r3
 8004e42:	4606      	mov	r6, r0
 8004e44:	f003 fe30 	bl	8008aa8 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e48:	6860      	ldr	r0, [r4, #4]
 8004e4a:	6803      	ldr	r3, [r0, #0]
 8004e4c:	2100      	movs	r1, #0
 8004e4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e50:	4798      	blx	r3
 8004e52:	4631      	mov	r1, r6
 8004e54:	4604      	mov	r4, r0
 8004e56:	f003 fe01 	bl	8008a5c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004e5a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e5e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e62:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e66:	b1dc      	cbz	r4, 8004ea0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004e68:	1d23      	adds	r3, r4, #4
 8004e6a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e6e:	6833      	ldr	r3, [r6, #0]
 8004e70:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e74:	4630      	mov	r0, r6
 8004e76:	68db      	ldr	r3, [r3, #12]
 8004e78:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e7a:	4798      	blx	r3
    newPresenter->activate();
 8004e7c:	6823      	ldr	r3, [r4, #0]
 8004e7e:	4620      	mov	r0, r4
 8004e80:	681b      	ldr	r3, [r3, #0]
 8004e82:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e84:	4629      	mov	r1, r5
 8004e86:	4630      	mov	r0, r6
 8004e88:	f012 f826 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e8c:	682b      	ldr	r3, [r5, #0]
 8004e8e:	4628      	mov	r0, r5
 8004e90:	691b      	ldr	r3, [r3, #16]
 8004e92:	4798      	blx	r3
    newTransition->invalidate();
 8004e94:	682b      	ldr	r3, [r5, #0]
 8004e96:	4628      	mov	r0, r5
 8004e98:	695b      	ldr	r3, [r3, #20]
}
 8004e9a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e9e:	4718      	bx	r3
    model->bind(newPresenter);
 8004ea0:	4623      	mov	r3, r4
 8004ea2:	e7e2      	b.n	8004e6a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004ea4:	0802b8cc 	.word	0x0802b8cc
 8004ea8:	0802cb05 	.word	0x0802cb05
 8004eac:	0802ba68 	.word	0x0802ba68
 8004eb0:	0802baaf 	.word	0x0802baaf
 8004eb4:	0802bb52 	.word	0x0802bb52
 8004eb8:	20012ebc 	.word	0x20012ebc
 8004ebc:	20012eb8 	.word	0x20012eb8

08004ec0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004ec0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ec4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ec8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004eca:	68a0      	ldr	r0, [r4, #8]
 8004ecc:	6803      	ldr	r3, [r0, #0]
 8004ece:	6a1b      	ldr	r3, [r3, #32]
 8004ed0:	4798      	blx	r3
 8004ed2:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004ed6:	d205      	bcs.n	8004ee4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004ed8:	4b42      	ldr	r3, [pc, #264]	; (8004fe4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004eda:	4a43      	ldr	r2, [pc, #268]	; (8004fe8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004edc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ede:	4843      	ldr	r0, [pc, #268]	; (8004fec <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004ee0:	f024 fe64 	bl	8029bac <__assert_func>
 8004ee4:	6860      	ldr	r0, [r4, #4]
 8004ee6:	6803      	ldr	r3, [r0, #0]
 8004ee8:	6a1b      	ldr	r3, [r3, #32]
 8004eea:	4798      	blx	r3
 8004eec:	280f      	cmp	r0, #15
 8004eee:	d803      	bhi.n	8004ef8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004ef0:	4b3f      	ldr	r3, [pc, #252]	; (8004ff0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004ef2:	4a3d      	ldr	r2, [pc, #244]	; (8004fe8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004ef4:	21a4      	movs	r1, #164	; 0xa4
 8004ef6:	e7f2      	b.n	8004ede <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004ef8:	68e0      	ldr	r0, [r4, #12]
 8004efa:	6803      	ldr	r3, [r0, #0]
 8004efc:	6a1b      	ldr	r3, [r3, #32]
 8004efe:	4798      	blx	r3
 8004f00:	2837      	cmp	r0, #55	; 0x37
 8004f02:	d803      	bhi.n	8004f0c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004f04:	4b3b      	ldr	r3, [pc, #236]	; (8004ff4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004f06:	4a38      	ldr	r2, [pc, #224]	; (8004fe8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004f08:	21a5      	movs	r1, #165	; 0xa5
 8004f0a:	e7e8      	b.n	8004ede <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004f0c:	f010 f9b8 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f10:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ff8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004f14:	3004      	adds	r0, #4
 8004f16:	f010 fa19 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f1a:	f8d9 0000 	ldr.w	r0, [r9]
 8004f1e:	b110      	cbz	r0, 8004f26 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004f20:	6803      	ldr	r3, [r0, #0]
 8004f22:	68db      	ldr	r3, [r3, #12]
 8004f24:	4798      	blx	r3
    if (*currentTrans)
 8004f26:	f8d9 0000 	ldr.w	r0, [r9]
 8004f2a:	b110      	cbz	r0, 8004f32 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004f2c:	6803      	ldr	r3, [r0, #0]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	4798      	blx	r3
    if (*currentScreen)
 8004f32:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004ffc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004f36:	f8d8 0000 	ldr.w	r0, [r8]
 8004f3a:	b110      	cbz	r0, 8004f42 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004f3c:	6803      	ldr	r3, [r0, #0]
 8004f3e:	695b      	ldr	r3, [r3, #20]
 8004f40:	4798      	blx	r3
    if (*currentPresenter)
 8004f42:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f46:	b110      	cbz	r0, 8004f4e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004f48:	6803      	ldr	r3, [r0, #0]
 8004f4a:	685b      	ldr	r3, [r3, #4]
 8004f4c:	4798      	blx	r3
    if (*currentScreen)
 8004f4e:	f8d8 0000 	ldr.w	r0, [r8]
 8004f52:	b110      	cbz	r0, 8004f5a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004f54:	6803      	ldr	r3, [r0, #0]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	4798      	blx	r3
    if (*currentPresenter)
 8004f5a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f5e:	b110      	cbz	r0, 8004f66 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004f60:	6803      	ldr	r3, [r0, #0]
 8004f62:	689b      	ldr	r3, [r3, #8]
 8004f64:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f66:	68e0      	ldr	r0, [r4, #12]
 8004f68:	2100      	movs	r1, #0
 8004f6a:	f7ff f9d7 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004f6e:	2114      	movs	r1, #20
 8004f70:	4605      	mov	r5, r0
 8004f72:	f7ff f9d7 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f76:	68a0      	ldr	r0, [r4, #8]
 8004f78:	6803      	ldr	r3, [r0, #0]
 8004f7a:	2100      	movs	r1, #0
 8004f7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f7e:	4798      	blx	r3
 8004f80:	4606      	mov	r6, r0
 8004f82:	f003 fd37 	bl	80089f4 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f86:	6860      	ldr	r0, [r4, #4]
 8004f88:	6803      	ldr	r3, [r0, #0]
 8004f8a:	2100      	movs	r1, #0
 8004f8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f8e:	4798      	blx	r3
 8004f90:	4631      	mov	r1, r6
 8004f92:	4604      	mov	r4, r0
 8004f94:	f003 fd08 	bl	80089a8 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004f98:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f9c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004fa0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004fa4:	b1dc      	cbz	r4, 8004fde <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004fa6:	1d23      	adds	r3, r4, #4
 8004fa8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004fac:	6833      	ldr	r3, [r6, #0]
 8004fae:	f8c4 a008 	str.w	sl, [r4, #8]
 8004fb2:	4630      	mov	r0, r6
 8004fb4:	68db      	ldr	r3, [r3, #12]
 8004fb6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004fb8:	4798      	blx	r3
    newPresenter->activate();
 8004fba:	6823      	ldr	r3, [r4, #0]
 8004fbc:	4620      	mov	r0, r4
 8004fbe:	681b      	ldr	r3, [r3, #0]
 8004fc0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004fc2:	4629      	mov	r1, r5
 8004fc4:	4630      	mov	r0, r6
 8004fc6:	f011 ff87 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fca:	682b      	ldr	r3, [r5, #0]
 8004fcc:	4628      	mov	r0, r5
 8004fce:	691b      	ldr	r3, [r3, #16]
 8004fd0:	4798      	blx	r3
    newTransition->invalidate();
 8004fd2:	682b      	ldr	r3, [r5, #0]
 8004fd4:	4628      	mov	r0, r5
 8004fd6:	695b      	ldr	r3, [r3, #20]
}
 8004fd8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fdc:	4718      	bx	r3
    model->bind(newPresenter);
 8004fde:	4623      	mov	r3, r4
 8004fe0:	e7e2      	b.n	8004fa8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004fe2:	bf00      	nop
 8004fe4:	0802b8cc 	.word	0x0802b8cc
 8004fe8:	0802cc47 	.word	0x0802cc47
 8004fec:	0802ba68 	.word	0x0802ba68
 8004ff0:	0802baaf 	.word	0x0802baaf
 8004ff4:	0802bb52 	.word	0x0802bb52
 8004ff8:	20012ebc 	.word	0x20012ebc
 8004ffc:	20012eb8 	.word	0x20012eb8

08005000 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8005000:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005004:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005008:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800500a:	68a0      	ldr	r0, [r4, #8]
 800500c:	6803      	ldr	r3, [r0, #0]
 800500e:	6a1b      	ldr	r3, [r3, #32]
 8005010:	4798      	blx	r3
 8005012:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005016:	d205      	bcs.n	8005024 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005018:	4b42      	ldr	r3, [pc, #264]	; (8005124 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 800501a:	4a43      	ldr	r2, [pc, #268]	; (8005128 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 800501c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800501e:	4843      	ldr	r0, [pc, #268]	; (800512c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8005020:	f024 fdc4 	bl	8029bac <__assert_func>
 8005024:	6860      	ldr	r0, [r4, #4]
 8005026:	6803      	ldr	r3, [r0, #0]
 8005028:	6a1b      	ldr	r3, [r3, #32]
 800502a:	4798      	blx	r3
 800502c:	280f      	cmp	r0, #15
 800502e:	d803      	bhi.n	8005038 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8005030:	4b3f      	ldr	r3, [pc, #252]	; (8005130 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8005032:	4a3d      	ldr	r2, [pc, #244]	; (8005128 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005034:	21a4      	movs	r1, #164	; 0xa4
 8005036:	e7f2      	b.n	800501e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005038:	68e0      	ldr	r0, [r4, #12]
 800503a:	6803      	ldr	r3, [r0, #0]
 800503c:	6a1b      	ldr	r3, [r3, #32]
 800503e:	4798      	blx	r3
 8005040:	2837      	cmp	r0, #55	; 0x37
 8005042:	d803      	bhi.n	800504c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005044:	4b3b      	ldr	r3, [pc, #236]	; (8005134 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005046:	4a38      	ldr	r2, [pc, #224]	; (8005128 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005048:	21a5      	movs	r1, #165	; 0xa5
 800504a:	e7e8      	b.n	800501e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800504c:	f010 f918 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005050:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005138 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005054:	3004      	adds	r0, #4
 8005056:	f010 f979 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800505a:	f8d9 0000 	ldr.w	r0, [r9]
 800505e:	b110      	cbz	r0, 8005066 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005060:	6803      	ldr	r3, [r0, #0]
 8005062:	68db      	ldr	r3, [r3, #12]
 8005064:	4798      	blx	r3
    if (*currentTrans)
 8005066:	f8d9 0000 	ldr.w	r0, [r9]
 800506a:	b110      	cbz	r0, 8005072 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800506c:	6803      	ldr	r3, [r0, #0]
 800506e:	681b      	ldr	r3, [r3, #0]
 8005070:	4798      	blx	r3
    if (*currentScreen)
 8005072:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800513c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005076:	f8d8 0000 	ldr.w	r0, [r8]
 800507a:	b110      	cbz	r0, 8005082 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800507c:	6803      	ldr	r3, [r0, #0]
 800507e:	695b      	ldr	r3, [r3, #20]
 8005080:	4798      	blx	r3
    if (*currentPresenter)
 8005082:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005086:	b110      	cbz	r0, 800508e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005088:	6803      	ldr	r3, [r0, #0]
 800508a:	685b      	ldr	r3, [r3, #4]
 800508c:	4798      	blx	r3
    if (*currentScreen)
 800508e:	f8d8 0000 	ldr.w	r0, [r8]
 8005092:	b110      	cbz	r0, 800509a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005094:	6803      	ldr	r3, [r0, #0]
 8005096:	681b      	ldr	r3, [r3, #0]
 8005098:	4798      	blx	r3
    if (*currentPresenter)
 800509a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800509e:	b110      	cbz	r0, 80050a6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80050a0:	6803      	ldr	r3, [r0, #0]
 80050a2:	689b      	ldr	r3, [r3, #8]
 80050a4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80050a6:	68e0      	ldr	r0, [r4, #12]
 80050a8:	2100      	movs	r1, #0
 80050aa:	f7ff f937 	bl	800431c <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80050ae:	2114      	movs	r1, #20
 80050b0:	4605      	mov	r5, r0
 80050b2:	f7ff f937 	bl	8004324 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80050b6:	68a0      	ldr	r0, [r4, #8]
 80050b8:	6803      	ldr	r3, [r0, #0]
 80050ba:	2100      	movs	r1, #0
 80050bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050be:	4798      	blx	r3
 80050c0:	4606      	mov	r6, r0
 80050c2:	f003 fb53 	bl	800876c <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80050c6:	6860      	ldr	r0, [r4, #4]
 80050c8:	6803      	ldr	r3, [r0, #0]
 80050ca:	2100      	movs	r1, #0
 80050cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050ce:	4798      	blx	r3
 80050d0:	4631      	mov	r1, r6
 80050d2:	4604      	mov	r4, r0
 80050d4:	f003 fb24 	bl	8008720 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80050d8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050dc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050e0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050e4:	b1dc      	cbz	r4, 800511e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 80050e6:	1d23      	adds	r3, r4, #4
 80050e8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050ec:	6833      	ldr	r3, [r6, #0]
 80050ee:	f8c4 a008 	str.w	sl, [r4, #8]
 80050f2:	4630      	mov	r0, r6
 80050f4:	68db      	ldr	r3, [r3, #12]
 80050f6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050f8:	4798      	blx	r3
    newPresenter->activate();
 80050fa:	6823      	ldr	r3, [r4, #0]
 80050fc:	4620      	mov	r0, r4
 80050fe:	681b      	ldr	r3, [r3, #0]
 8005100:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005102:	4629      	mov	r1, r5
 8005104:	4630      	mov	r0, r6
 8005106:	f011 fee7 	bl	8016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800510a:	682b      	ldr	r3, [r5, #0]
 800510c:	4628      	mov	r0, r5
 800510e:	691b      	ldr	r3, [r3, #16]
 8005110:	4798      	blx	r3
    newTransition->invalidate();
 8005112:	682b      	ldr	r3, [r5, #0]
 8005114:	4628      	mov	r0, r5
 8005116:	695b      	ldr	r3, [r3, #20]
}
 8005118:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800511c:	4718      	bx	r3
    model->bind(newPresenter);
 800511e:	4623      	mov	r3, r4
 8005120:	e7e2      	b.n	80050e8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005122:	bf00      	nop
 8005124:	0802b8cc 	.word	0x0802b8cc
 8005128:	0802cd73 	.word	0x0802cd73
 800512c:	0802ba68 	.word	0x0802ba68
 8005130:	0802baaf 	.word	0x0802baaf
 8005134:	0802bb52 	.word	0x0802bb52
 8005138:	20012ebc 	.word	0x20012ebc
 800513c:	20012eb8 	.word	0x20012eb8

08005140 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8005140:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005142:	4770      	bx	lr

08005144 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8005144:	4770      	bx	lr

08005146 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8005146:	4770      	bx	lr

08005148 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8005148:	b510      	push	{r4, lr}
}
 800514a:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 800514e:	4604      	mov	r4, r0
}
 8005150:	f023 ff19 	bl	8028f86 <_ZdlPvj>
 8005154:	4620      	mov	r0, r4
 8005156:	bd10      	pop	{r4, pc}

08005158 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8005158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 800515c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005160:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8005162:	2600      	movs	r6, #0
 8005164:	ed2d 8b02 	vpush	{d8}
 8005168:	8483      	strh	r3, [r0, #36]	; 0x24
 800516a:	4bb2      	ldr	r3, [pc, #712]	; (8005434 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 800516c:	6286      	str	r6, [r0, #40]	; 0x28
 800516e:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8005172:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8005176:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 800517a:	e9c0 6607 	strd	r6, r6, [r0, #28]
 800517e:	f848 3b2c 	str.w	r3, [r8], #44
 8005182:	b08b      	sub	sp, #44	; 0x2c
 8005184:	4604      	mov	r4, r0
 8005186:	4640      	mov	r0, r8
 8005188:	f7fd fc42 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 800518c:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8005190:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8005194:	4618      	mov	r0, r3
 8005196:	9303      	str	r3, [sp, #12]
 8005198:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 800519c:	f7fd fc38 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80051a0:	4658      	mov	r0, fp
 80051a2:	f7fd fc35 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80051a6:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 80051aa:	4da3      	ldr	r5, [pc, #652]	; (8005438 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 80051ac:	4650      	mov	r0, sl
 80051ae:	f7fd fc2f 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80051b2:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 80051b6:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 80051ba:	4648      	mov	r0, r9
 80051bc:	f7fd fc28 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80051c0:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 80051c4:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 80051c8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80051ca:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 80051ce:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 80051d2:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 80051d6:	f7fd fc1b 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80051da:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 80051de:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 80051e2:	4638      	mov	r0, r7
 80051e4:	f00d f806 	bl	80121f4 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 80051e8:	4a94      	ldr	r2, [pc, #592]	; (800543c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 80051ea:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 80051ec:	4640      	mov	r0, r8
 80051ee:	226d      	movs	r2, #109	; 0x6d
 80051f0:	21d9      	movs	r1, #217	; 0xd9
 80051f2:	ad04      	add	r5, sp, #16
 80051f4:	f7fd fbd9 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80051f8:	f04f 33ff 	mov.w	r3, #4294967295
 80051fc:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 80051fe:	4641      	mov	r1, r8
 8005200:	4628      	mov	r0, r5
        linespace = space;
 8005202:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8005206:	f00c fcbd 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800520a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800520e:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8005212:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005216:	4b8a      	ldr	r3, [pc, #552]	; (8005440 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005218:	9308      	str	r3, [sp, #32]
 800521a:	222f      	movs	r2, #47	; 0x2f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 800521c:	a908      	add	r1, sp, #32
 800521e:	4640      	mov	r0, r8
 8005220:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8005224:	f00c ff48 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8005228:	4641      	mov	r1, r8
 800522a:	4620      	mov	r0, r4
 800522c:	f00a fd90 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8005230:	9b03      	ldr	r3, [sp, #12]
 8005232:	4631      	mov	r1, r6
 8005234:	4618      	mov	r0, r3
 8005236:	226d      	movs	r2, #109	; 0x6d
 8005238:	f7fd fbb7 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800523c:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 800523e:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8005242:	f04f 32ff 	mov.w	r2, #4294967295
 8005246:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 800524a:	4619      	mov	r1, r3
 800524c:	4628      	mov	r0, r5
 800524e:	f00c fc99 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005252:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005256:	4b7a      	ldr	r3, [pc, #488]	; (8005440 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005258:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 800525a:	9b03      	ldr	r3, [sp, #12]
 800525c:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8005260:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8005264:	2230      	movs	r2, #48	; 0x30
 8005266:	a908      	add	r1, sp, #32
 8005268:	4618      	mov	r0, r3
 800526a:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800526e:	f00c ff23 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8005272:	9b03      	ldr	r3, [sp, #12]
 8005274:	4620      	mov	r0, r4
 8005276:	4619      	mov	r1, r3
 8005278:	f00a fd6a 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 800527c:	4632      	mov	r2, r6
 800527e:	4658      	mov	r0, fp
 8005280:	2171      	movs	r1, #113	; 0x71
 8005282:	f7fd fb92 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005286:	f04f 32ff 	mov.w	r2, #4294967295
 800528a:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 800528e:	4659      	mov	r1, fp
 8005290:	4628      	mov	r0, r5
        linespace = space;
 8005292:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8005296:	f00c fc75 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800529a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800529e:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 80052a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80052a6:	4b66      	ldr	r3, [pc, #408]	; (8005440 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80052a8:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 80052aa:	a908      	add	r1, sp, #32
 80052ac:	2331      	movs	r3, #49	; 0x31
 80052ae:	4658      	mov	r0, fp
 80052b0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80052b4:	f00c ff00 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 80052b8:	4659      	mov	r1, fp
 80052ba:	4620      	mov	r0, r4
 80052bc:	f00a fd48 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 80052c0:	4650      	mov	r0, sl
 80052c2:	227c      	movs	r2, #124	; 0x7c
 80052c4:	214c      	movs	r1, #76	; 0x4c
 80052c6:	f7fd fb70 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80052ca:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 80052ce:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 80052d2:	f04f 32ff 	mov.w	r2, #4294967295
 80052d6:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 80052da:	4651      	mov	r1, sl
 80052dc:	4628      	mov	r0, r5
 80052de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80052e2:	4798      	blx	r3
 80052e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80052e8:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 80052ec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80052f0:	4b53      	ldr	r3, [pc, #332]	; (8005440 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80052f2:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 80052f4:	a908      	add	r1, sp, #32
 80052f6:	232e      	movs	r3, #46	; 0x2e
 80052f8:	4650      	mov	r0, sl
 80052fa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80052fe:	f00c fedb 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 8005302:	4651      	mov	r1, sl
 8005304:	4620      	mov	r0, r4
 8005306:	f00a fd23 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 800530a:	4648      	mov	r0, r9
 800530c:	228b      	movs	r2, #139	; 0x8b
 800530e:	2156      	movs	r1, #86	; 0x56
 8005310:	f7fd fb4b 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8005314:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8005318:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 800531c:	f04f 32ff 	mov.w	r2, #4294967295
 8005320:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8005324:	4649      	mov	r1, r9
 8005326:	4628      	mov	r0, r5
 8005328:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800532c:	4798      	blx	r3
 800532e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005332:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8005336:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800533a:	4b41      	ldr	r3, [pc, #260]	; (8005440 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800533c:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 800533e:	a908      	add	r1, sp, #32
 8005340:	232d      	movs	r3, #45	; 0x2d
 8005342:	4648      	mov	r0, r9
 8005344:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005348:	f00c feb6 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 800534c:	4649      	mov	r1, r9
 800534e:	4620      	mov	r0, r4
 8005350:	f00a fcfe 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 8005354:	ee18 0a10 	vmov	r0, s16
 8005358:	229a      	movs	r2, #154	; 0x9a
 800535a:	2156      	movs	r1, #86	; 0x56
 800535c:	f7fd fb25 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8005360:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 8005364:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 8005368:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 800536c:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 8005370:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 8005374:	4628      	mov	r0, r5
 8005376:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800537a:	4798      	blx	r3
 800537c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005380:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 8005384:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005388:	4b2d      	ldr	r3, [pc, #180]	; (8005440 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800538a:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 800538c:	ee18 0a10 	vmov	r0, s16
 8005390:	232c      	movs	r3, #44	; 0x2c
 8005392:	a908      	add	r1, sp, #32
 8005394:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005398:	f00c fe8e 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 800539c:	ee18 1a10 	vmov	r1, s16
 80053a0:	4620      	mov	r0, r4
 80053a2:	f00a fcd5 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80053a6:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80053a8:	a908      	add	r1, sp, #32
 80053aa:	4638      	mov	r0, r7
 80053ac:	f8ad 3020 	strh.w	r3, [sp, #32]
 80053b0:	f00a fc60 	bl	800fc74 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 80053b4:	2212      	movs	r2, #18
 80053b6:	4638      	mov	r0, r7
 80053b8:	211c      	movs	r1, #28
 80053ba:	f7fd faf6 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 80053be:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 80053c2:	4638      	mov	r0, r7
 80053c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80053c6:	21b8      	movs	r1, #184	; 0xb8
 80053c8:	4798      	blx	r3
        setHeight(height);
 80053ca:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 80053ce:	4638      	mov	r0, r7
 80053d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80053d2:	216a      	movs	r1, #106	; 0x6a
 80053d4:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 80053d6:	225c      	movs	r2, #92	; 0x5c
 80053d8:	4611      	mov	r1, r2
 80053da:	4638      	mov	r0, r7
 80053dc:	f00c ffb5 	bl	801234a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 80053e0:	4638      	mov	r0, r7
 80053e2:	225a      	movs	r2, #90	; 0x5a
 80053e4:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80053e8:	f00d f834 	bl	8012454 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 80053ec:	4633      	mov	r3, r6
 80053ee:	225a      	movs	r2, #90	; 0x5a
 80053f0:	4638      	mov	r0, r7
 80053f2:	9600      	str	r6, [sp, #0]
 80053f4:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80053f8:	f00a fae9 	bl	800f9ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 80053fc:	4631      	mov	r1, r6
 80053fe:	4638      	mov	r0, r7
 8005400:	f00c ffd2 	bl	80123a8 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8005404:	2335      	movs	r3, #53	; 0x35
 8005406:	2208      	movs	r2, #8
 8005408:	4638      	mov	r0, r7
 800540a:	2105      	movs	r1, #5
 800540c:	f00c ff88 	bl	8012320 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8005410:	4638      	mov	r0, r7
 8005412:	2101      	movs	r1, #1
 8005414:	f00c ff26 	bl	8012264 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8005418:	4638      	mov	r0, r7
 800541a:	2101      	movs	r1, #1
 800541c:	f00c ff25 	bl	801226a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 8005420:	4620      	mov	r0, r4
 8005422:	4639      	mov	r1, r7
 8005424:	f00a fc94 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005428:	4620      	mov	r0, r4
 800542a:	b00b      	add	sp, #44	; 0x2c
 800542c:	ecbd 8b02 	vpop	{d8}
 8005430:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005434:	0802cfdc 	.word	0x0802cfdc
 8005438:	0802b760 	.word	0x0802b760
 800543c:	00a900f0 	.word	0x00a900f0
 8005440:	0802b750 	.word	0x0802b750

08005444 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005444:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005446:	4770      	bx	lr

08005448 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005448:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800544a:	4770      	bx	lr

0800544c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800544c:	4770      	bx	lr

0800544e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800544e:	888b      	ldrh	r3, [r1, #4]
 8005450:	69c0      	ldr	r0, [r0, #28]
 8005452:	680a      	ldr	r2, [r1, #0]
 8005454:	0adb      	lsrs	r3, r3, #11
 8005456:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800545a:	4410      	add	r0, r2
 800545c:	4770      	bx	lr

0800545e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800545e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005460:	b1c2      	cbz	r2, 8005494 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005462:	7b13      	ldrb	r3, [r2, #12]
 8005464:	b1b3      	cbz	r3, 8005494 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005466:	7b54      	ldrb	r4, [r2, #13]
 8005468:	7ad2      	ldrb	r2, [r2, #11]
 800546a:	0224      	lsls	r4, r4, #8
 800546c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005470:	4314      	orrs	r4, r2
 8005472:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005474:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005476:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800547a:	8813      	ldrh	r3, [r2, #0]
 800547c:	428b      	cmp	r3, r1
 800547e:	d102      	bne.n	8005486 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005480:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005484:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005486:	d805      	bhi.n	8005494 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005488:	3801      	subs	r0, #1
 800548a:	b280      	uxth	r0, r0
 800548c:	3204      	adds	r2, #4
 800548e:	2800      	cmp	r0, #0
 8005490:	d1f3      	bne.n	800547a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005492:	e7f7      	b.n	8005484 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005494:	2000      	movs	r0, #0
 8005496:	e7f5      	b.n	8005484 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005498 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005498:	b510      	push	{r4, lr}
 800549a:	212c      	movs	r1, #44	; 0x2c
 800549c:	4604      	mov	r4, r0
 800549e:	f023 fd72 	bl	8028f86 <_ZdlPvj>
 80054a2:	4620      	mov	r0, r4
 80054a4:	bd10      	pop	{r4, pc}
	...

080054a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80054a8:	b530      	push	{r4, r5, lr}
 80054aa:	b08b      	sub	sp, #44	; 0x2c
 80054ac:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80054ae:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 80054b2:	9508      	str	r5, [sp, #32]
 80054b4:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80054b8:	9507      	str	r5, [sp, #28]
 80054ba:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80054be:	9506      	str	r5, [sp, #24]
 80054c0:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80054c4:	9505      	str	r5, [sp, #20]
 80054c6:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80054ca:	9504      	str	r5, [sp, #16]
 80054cc:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80054d0:	9503      	str	r5, [sp, #12]
 80054d2:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80054d6:	9502      	str	r5, [sp, #8]
 80054d8:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80054dc:	9501      	str	r5, [sp, #4]
 80054de:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80054e2:	9500      	str	r5, [sp, #0]
 80054e4:	f011 f862 	bl	80165ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80054e8:	4b06      	ldr	r3, [pc, #24]	; (8005504 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80054ea:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 80054ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80054ee:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 80054f0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80054f2:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 80054f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80054f6:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 80054f8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80054fa:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80054fc:	4620      	mov	r0, r4
 80054fe:	b00b      	add	sp, #44	; 0x2c
 8005500:	bd30      	pop	{r4, r5, pc}
 8005502:	bf00      	nop
 8005504:	0802d070 	.word	0x0802d070

08005508 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005508:	4770      	bx	lr

0800550a <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800550a:	4770      	bx	lr

0800550c <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800550c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800550e:	68c2      	ldr	r2, [r0, #12]
 8005510:	6844      	ldr	r4, [r0, #4]
 8005512:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005514:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005516:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800551a:	07d2      	lsls	r2, r2, #31
 800551c:	bf48      	it	mi
 800551e:	5962      	ldrmi	r2, [r4, r5]
 8005520:	689b      	ldr	r3, [r3, #8]
    }
 8005522:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005524:	bf48      	it	mi
 8005526:	58d3      	ldrmi	r3, [r2, r3]
 8005528:	4718      	bx	r3

0800552a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800552a:	6843      	ldr	r3, [r0, #4]
 800552c:	b12b      	cbz	r3, 800553a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800552e:	6883      	ldr	r3, [r0, #8]
 8005530:	b92b      	cbnz	r3, 800553e <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005532:	68c0      	ldr	r0, [r0, #12]
 8005534:	f000 0001 	and.w	r0, r0, #1
 8005538:	4770      	bx	lr
 800553a:	4618      	mov	r0, r3
 800553c:	4770      	bx	lr
 800553e:	2001      	movs	r0, #1
    }
 8005540:	4770      	bx	lr

08005542 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005542:	b510      	push	{r4, lr}
 8005544:	2110      	movs	r1, #16
 8005546:	4604      	mov	r4, r0
 8005548:	f023 fd1d 	bl	8028f86 <_ZdlPvj>
 800554c:	4620      	mov	r0, r4
 800554e:	bd10      	pop	{r4, pc}

08005550 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005550:	b510      	push	{r4, lr}
 8005552:	4b03      	ldr	r3, [pc, #12]	; (8005560 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005554:	6003      	str	r3, [r0, #0]
 8005556:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005558:	f00e f990 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800555c:	4620      	mov	r0, r4
 800555e:	bd10      	pop	{r4, pc}
 8005560:	0802d0e8 	.word	0x0802d0e8

08005564 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005564:	b507      	push	{r0, r1, r2, lr}
 8005566:	4b07      	ldr	r3, [pc, #28]	; (8005584 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005568:	6003      	str	r3, [r0, #0]
 800556a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800556c:	f00e f986 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005570:	9801      	ldr	r0, [sp, #4]
 8005572:	f241 117c 	movw	r1, #4476	; 0x117c
 8005576:	f023 fd06 	bl	8028f86 <_ZdlPvj>
 800557a:	9801      	ldr	r0, [sp, #4]
 800557c:	b003      	add	sp, #12
 800557e:	f85d fb04 	ldr.w	pc, [sp], #4
 8005582:	bf00      	nop
 8005584:	0802d0e8 	.word	0x0802d0e8

08005588 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005588:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 800558a:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 800558e:	4299      	cmp	r1, r3
{
 8005590:	4604      	mov	r4, r0
 8005592:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005594:	d103      	bne.n	800559e <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005596:	f00f fe73 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 800559a:	f7fe fb1d 	bl	8003bd8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800559e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80055a2:	429d      	cmp	r5, r3
 80055a4:	d103      	bne.n	80055ae <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80055a6:	f00f fe6b 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 80055aa:	f7fe fba5 	bl	8003cf8 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 80055ae:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80055b2:	429d      	cmp	r5, r3
 80055b4:	d103      	bne.n	80055be <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 80055b6:	f00f fe63 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 80055ba:	f7fe fbdd 	bl	8003d78 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 80055be:	f504 7446 	add.w	r4, r4, #792	; 0x318
 80055c2:	42a5      	cmp	r5, r4
 80055c4:	d10a      	bne.n	80055dc <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80055c6:	4806      	ldr	r0, [pc, #24]	; (80055e0 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 80055c8:	2200      	movs	r2, #0
 80055ca:	2120      	movs	r1, #32
 80055cc:	f004 f8da 	bl	8009784 <HAL_GPIO_WritePin>
 80055d0:	f00f fe56 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 80055d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 80055d8:	f7fe bbde 	b.w	8003d98 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80055dc:	bd38      	pop	{r3, r4, r5, pc}
 80055de:	bf00      	nop
 80055e0:	40021000 	.word	0x40021000

080055e4 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 80055e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055e8:	ed2d 8b06 	vpush	{d8-d10}
 80055ec:	4604      	mov	r4, r0
 80055ee:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 80055f0:	46a3      	mov	fp, r4
        : presenter(0)
 80055f2:	2500      	movs	r5, #0
 80055f4:	f011 fac4 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 80055f8:	4b6a      	ldr	r3, [pc, #424]	; (80057a4 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 80055fa:	63e5      	str	r5, [r4, #60]	; 0x3c
 80055fc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005600:	2226      	movs	r2, #38	; 0x26
 8005602:	4629      	mov	r1, r5
 8005604:	4658      	mov	r0, fp
 8005606:	f024 fcd6 	bl	8029fb6 <memset>
 800560a:	4658      	mov	r0, fp
 800560c:	f7fd f9ee 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8005610:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005614:	26ff      	movs	r6, #255	; 0xff
 8005616:	4b64      	ldr	r3, [pc, #400]	; (80057a8 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005618:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800561a:	2226      	movs	r2, #38	; 0x26
 800561c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005620:	4629      	mov	r1, r5
 8005622:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005626:	4650      	mov	r0, sl
        : color(col)
 8005628:	66a5      	str	r5, [r4, #104]	; 0x68
 800562a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800562e:	f024 fcc2 	bl	8029fb6 <memset>
 8005632:	4650      	mov	r0, sl
 8005634:	f7fd f9da 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8005638:	4b5c      	ldr	r3, [pc, #368]	; (80057ac <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 800563a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800563c:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005640:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005644:	a90c      	add	r1, sp, #48	; 0x30
 8005646:	4650      	mov	r0, sl
 8005648:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800564c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005650:	f00d f90d 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005654:	4648      	mov	r0, r9
 8005656:	f7fd f9db 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 800565a:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 800565e:	4b54      	ldr	r3, [pc, #336]	; (80057b0 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005660:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005664:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005668:	4638      	mov	r0, r7
 800566a:	f00b ffc9 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 800566e:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005672:	4618      	mov	r0, r3
 8005674:	9303      	str	r3, [sp, #12]
 8005676:	f7fb fea3 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800567a:	4b4e      	ldr	r3, [pc, #312]	; (80057b4 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 800567c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005680:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005684:	3324      	adds	r3, #36	; 0x24
 8005686:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 800568a:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 800568e:	4640      	mov	r0, r8
 8005690:	f7fd f9be 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8005694:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005698:	4618      	mov	r0, r3
 800569a:	ee08 3a10 	vmov	s16, r3
 800569e:	f7fd f9b7 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80056a2:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80056a6:	4618      	mov	r0, r3
 80056a8:	ee08 3a90 	vmov	s17, r3
 80056ac:	f7fd f9b0 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80056b0:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80056b4:	4618      	mov	r0, r3
 80056b6:	ee09 3a10 	vmov	s18, r3
 80056ba:	f00d fa19 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80056be:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80056c2:	4618      	mov	r0, r3
 80056c4:	ee09 3a90 	vmov	s19, r3
 80056c8:	f00d fa12 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80056cc:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80056d0:	4618      	mov	r0, r3
 80056d2:	ee0a 3a10 	vmov	s20, r3
 80056d6:	f00d fa0b 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80056da:	f504 7346 	add.w	r3, r4, #792	; 0x318
 80056de:	4618      	mov	r0, r3
 80056e0:	ee0a 3a90 	vmov	s21, r3
 80056e4:	f00d f89c 	bl	8012820 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80056e8:	4a33      	ldr	r2, [pc, #204]	; (80057b8 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 80056ea:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80056ee:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 80056f2:	4a32      	ldr	r2, [pc, #200]	; (80057bc <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80056f4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80056f8:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 80056fc:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005700:	f00e f8b2 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005704:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005708:	462a      	mov	r2, r5
 800570a:	4658      	mov	r0, fp
 800570c:	9300      	str	r3, [sp, #0]
 800570e:	4629      	mov	r1, r5
 8005710:	23f0      	movs	r3, #240	; 0xf0
 8005712:	f7fd f957 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005716:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005718:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800571c:	66a3      	str	r3, [r4, #104]	; 0x68
 800571e:	4659      	mov	r1, fp
 8005720:	4630      	mov	r0, r6
 8005722:	f00a fb15 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005726:	462a      	mov	r2, r5
 8005728:	4650      	mov	r0, sl
 800572a:	4629      	mov	r1, r5
 800572c:	f7fd f93d 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8005730:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005732:	4650      	mov	r0, sl
 8005734:	a90c      	add	r1, sp, #48	; 0x30
 8005736:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800573a:	f00d f898 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800573e:	4651      	mov	r1, sl
 8005740:	4630      	mov	r0, r6
 8005742:	f00a fb05 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005746:	f44f 729a 	mov.w	r2, #308	; 0x134
 800574a:	2156      	movs	r1, #86	; 0x56
 800574c:	4648      	mov	r0, r9
 800574e:	f7fd f92c 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8005752:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005756:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800575a:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 800575e:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005762:	4650      	mov	r0, sl
 8005764:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005768:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 800576c:	4649      	mov	r1, r9
 800576e:	4798      	blx	r3
 8005770:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005774:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005778:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800577c:	4b10      	ldr	r3, [pc, #64]	; (80057c0 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 800577e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005780:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005784:	b92b      	cbnz	r3, 8005792 <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005786:	4b0f      	ldr	r3, [pc, #60]	; (80057c4 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005788:	4a0f      	ldr	r2, [pc, #60]	; (80057c8 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800578a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800578c:	480f      	ldr	r0, [pc, #60]	; (80057cc <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 800578e:	f024 fa0d 	bl	8029bac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005792:	4b0f      	ldr	r3, [pc, #60]	; (80057d0 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005794:	881b      	ldrh	r3, [r3, #0]
 8005796:	2b2a      	cmp	r3, #42	; 0x2a
 8005798:	d81e      	bhi.n	80057d8 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 800579a:	4b0e      	ldr	r3, [pc, #56]	; (80057d4 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 800579c:	4a0a      	ldr	r2, [pc, #40]	; (80057c8 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 800579e:	2161      	movs	r1, #97	; 0x61
 80057a0:	e7f4      	b.n	800578c <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 80057a2:	bf00      	nop
 80057a4:	0802d0e8 	.word	0x0802d0e8
 80057a8:	0802e098 	.word	0x0802e098
 80057ac:	0802e260 	.word	0x0802e260
 80057b0:	0802b760 	.word	0x0802b760
 80057b4:	0802ddcc 	.word	0x0802ddcc
 80057b8:	0802d0d0 	.word	0x0802d0d0
 80057bc:	08005589 	.word	0x08005589
 80057c0:	20012ecc 	.word	0x20012ecc
 80057c4:	0802b5a0 	.word	0x0802b5a0
 80057c8:	0802b6a2 	.word	0x0802b6a2
 80057cc:	0802b61d 	.word	0x0802b61d
 80057d0:	20012ed0 	.word	0x20012ed0
 80057d4:	0802b664 	.word	0x0802b664
        return texts->getText(typedTextId);
 80057d8:	4ba5      	ldr	r3, [pc, #660]	; (8005a70 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 80057da:	212a      	movs	r1, #42	; 0x2a
 80057dc:	6818      	ldr	r0, [r3, #0]
 80057de:	f002 fddf 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 80057e2:	4aa4      	ldr	r2, [pc, #656]	; (8005a74 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 80057e4:	4603      	mov	r3, r0
 80057e6:	2104      	movs	r1, #4
 80057e8:	4650      	mov	r0, sl
 80057ea:	f012 fead 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 80057ee:	4648      	mov	r0, r9
        wc1 = value;
 80057f0:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 80057f4:	f00c fc40 	bl	8012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80057f8:	4b9f      	ldr	r3, [pc, #636]	; (8005a78 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 80057fa:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 80057fc:	a90c      	add	r1, sp, #48	; 0x30
 80057fe:	232b      	movs	r3, #43	; 0x2b
 8005800:	4648      	mov	r0, r9
 8005802:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005806:	f00c fc57 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800580a:	4649      	mov	r1, r9
 800580c:	4630      	mov	r0, r6
 800580e:	f00a fa9f 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005812:	230a      	movs	r3, #10
 8005814:	9300      	str	r3, [sp, #0]
 8005816:	2232      	movs	r2, #50	; 0x32
 8005818:	23f0      	movs	r3, #240	; 0xf0
 800581a:	4629      	mov	r1, r5
 800581c:	4638      	mov	r0, r7
 800581e:	f7fd f8d1 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005822:	9b03      	ldr	r3, [sp, #12]
 8005824:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005828:	22a0      	movs	r2, #160	; 0xa0
 800582a:	4611      	mov	r1, r2
 800582c:	4638      	mov	r0, r7
 800582e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005832:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005836:	f00b fff9 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800583a:	22a0      	movs	r2, #160	; 0xa0
 800583c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005840:	4638      	mov	r0, r7
 8005842:	f00b fffe 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005846:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800584a:	2b20      	cmp	r3, #32
 800584c:	d005      	beq.n	800585a <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 800584e:	2320      	movs	r3, #32
 8005850:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005854:	4638      	mov	r0, r7
 8005856:	f00b fef3 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800585a:	4638      	mov	r0, r7
 800585c:	2101      	movs	r1, #1
 800585e:	f00b fffb 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005862:	4639      	mov	r1, r7
 8005864:	4630      	mov	r0, r6
 8005866:	ad04      	add	r5, sp, #16
        color = newColor;
 8005868:	f04f 37ff 	mov.w	r7, #4294967295
 800586c:	f00a fa70 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005870:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005874:	2223      	movs	r2, #35	; 0x23
 8005876:	4640      	mov	r0, r8
 8005878:	2145      	movs	r1, #69	; 0x45
 800587a:	f7fd f896 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800587e:	4641      	mov	r1, r8
 8005880:	4628      	mov	r0, r5
        color = newColor;
 8005882:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005886:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800588a:	f00c f97b 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800588e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005892:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005896:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800589a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800589e:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8005a78 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 80058a2:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80058a6:	2350      	movs	r3, #80	; 0x50
 80058a8:	4649      	mov	r1, r9
 80058aa:	4640      	mov	r0, r8
 80058ac:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80058b0:	f00c fc02 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058b4:	4641      	mov	r1, r8
 80058b6:	4630      	mov	r0, r6
 80058b8:	f00a fa4a 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80058bc:	ee18 0a10 	vmov	r0, s16
 80058c0:	220c      	movs	r2, #12
 80058c2:	2136      	movs	r1, #54	; 0x36
 80058c4:	f7fd f871 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80058c8:	ee18 1a10 	vmov	r1, s16
 80058cc:	4628      	mov	r0, r5
        color = newColor;
 80058ce:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80058d2:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80058d6:	f00c f955 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80058da:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80058de:	ee18 3a10 	vmov	r3, s16
 80058e2:	333c      	adds	r3, #60	; 0x3c
 80058e4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80058e8:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 80058ea:	ee18 0a10 	vmov	r0, s16
 80058ee:	4649      	mov	r1, r9
 80058f0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80058f4:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 80058f8:	f00c fbde 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80058fc:	ee18 1a10 	vmov	r1, s16
 8005900:	4630      	mov	r0, r6
 8005902:	f00a fa25 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005906:	ee18 0a90 	vmov	r0, s17
 800590a:	223c      	movs	r2, #60	; 0x3c
 800590c:	2158      	movs	r1, #88	; 0x58
 800590e:	f7fd f84c 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8005912:	ee18 1a90 	vmov	r1, s17
 8005916:	4628      	mov	r0, r5
        color = newColor;
 8005918:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 800591c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005920:	f00c f930 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005924:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005928:	ee18 3a90 	vmov	r3, s17
 800592c:	333c      	adds	r3, #60	; 0x3c
 800592e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005932:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005934:	ee18 0a90 	vmov	r0, s17
 8005938:	4649      	mov	r1, r9
 800593a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800593e:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005942:	f00c fbb9 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005946:	ee18 1a90 	vmov	r1, s17
 800594a:	4630      	mov	r0, r6
 800594c:	f00a fa00 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005950:	ee19 0a10 	vmov	r0, s18
 8005954:	22f0      	movs	r2, #240	; 0xf0
 8005956:	2121      	movs	r1, #33	; 0x21
 8005958:	f7fd f827 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800595c:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005960:	464a      	mov	r2, r9
 8005962:	f04f 0802 	mov.w	r8, #2
 8005966:	a90b      	add	r1, sp, #44	; 0x2c
 8005968:	ee19 0a10 	vmov	r0, s18
 800596c:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005970:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005974:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005978:	f00c fd83 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800597c:	2352      	movs	r3, #82	; 0x52
 800597e:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005982:	350c      	adds	r5, #12
        updateTextPosition();
 8005984:	ee19 0a10 	vmov	r0, s18
 8005988:	f7fd f864 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800598c:	ee19 1a10 	vmov	r1, s18
 8005990:	4630      	mov	r0, r6
        colorPressed = col;
 8005992:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005996:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800599a:	f00a f9d9 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 800599e:	ee19 0a90 	vmov	r0, s19
 80059a2:	22aa      	movs	r2, #170	; 0xaa
 80059a4:	2121      	movs	r1, #33	; 0x21
 80059a6:	f7fd f800 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059aa:	464a      	mov	r2, r9
 80059ac:	a90b      	add	r1, sp, #44	; 0x2c
 80059ae:	ee19 0a90 	vmov	r0, s19
 80059b2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80059b6:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80059ba:	f00c fd62 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80059be:	2353      	movs	r3, #83	; 0x53
 80059c0:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80059c4:	ee19 0a90 	vmov	r0, s19
 80059c8:	f7fd f844 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80059cc:	ee19 1a90 	vmov	r1, s19
 80059d0:	4630      	mov	r0, r6
        colorPressed = col;
 80059d2:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 80059d6:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 80059da:	f00a f9b9 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80059de:	ee1a 0a10 	vmov	r0, s20
 80059e2:	2264      	movs	r2, #100	; 0x64
 80059e4:	2121      	movs	r1, #33	; 0x21
 80059e6:	f7fc ffe0 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80059ea:	464a      	mov	r2, r9
 80059ec:	a90b      	add	r1, sp, #44	; 0x2c
 80059ee:	ee1a 0a10 	vmov	r0, s20
 80059f2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80059f6:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 80059fa:	f00c fd42 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80059fe:	2354      	movs	r3, #84	; 0x54
 8005a00:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005a04:	ee1a 0a10 	vmov	r0, s20
 8005a08:	f7fd f824 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005a0c:	ee1a 1a10 	vmov	r1, s20
 8005a10:	4630      	mov	r0, r6
        colorPressed = col;
 8005a12:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005a16:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005a1a:	f00a f999 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8005a1e:	ee1a 0a90 	vmov	r0, s21
 8005a22:	2205      	movs	r2, #5
 8005a24:	21c6      	movs	r1, #198	; 0xc6
 8005a26:	f7fc ffc0 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8005a2a:	2301      	movs	r3, #1
 8005a2c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005a30:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 8005a32:	ee1a 0a90 	vmov	r0, s21
 8005a36:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005a3a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005a3e:	aa0a      	add	r2, sp, #40	; 0x28
 8005a40:	ab0b      	add	r3, sp, #44	; 0x2c
 8005a42:	a909      	add	r1, sp, #36	; 0x24
 8005a44:	f8cd 9000 	str.w	r9, [sp]
 8005a48:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8005a4c:	f00c fe53 	bl	80126f6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8005a50:	4630      	mov	r0, r6
 8005a52:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8005a56:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8005a5a:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8005a5e:	f00a f977 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005a62:	4620      	mov	r0, r4
 8005a64:	b00f      	add	sp, #60	; 0x3c
 8005a66:	ecbd 8b06 	vpop	{d8-d10}
 8005a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a6e:	bf00      	nop
 8005a70:	20012ed8 	.word	0x20012ed8
 8005a74:	0802b6da 	.word	0x0802b6da
 8005a78:	0802b750 	.word	0x0802b750

08005a7c <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8005a7c:	4770      	bx	lr

08005a7e <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005a7e:	4770      	bx	lr

08005a80 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005a80:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005a82:	68c2      	ldr	r2, [r0, #12]
 8005a84:	6844      	ldr	r4, [r0, #4]
 8005a86:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005a88:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005a8a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005a8e:	07d2      	lsls	r2, r2, #31
 8005a90:	bf48      	it	mi
 8005a92:	5962      	ldrmi	r2, [r4, r5]
 8005a94:	689b      	ldr	r3, [r3, #8]
    }
 8005a96:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005a98:	bf48      	it	mi
 8005a9a:	58d3      	ldrmi	r3, [r2, r3]
 8005a9c:	4718      	bx	r3

08005a9e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005a9e:	6843      	ldr	r3, [r0, #4]
 8005aa0:	b12b      	cbz	r3, 8005aae <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005aa2:	6883      	ldr	r3, [r0, #8]
 8005aa4:	b92b      	cbnz	r3, 8005ab2 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005aa6:	68c0      	ldr	r0, [r0, #12]
 8005aa8:	f000 0001 	and.w	r0, r0, #1
 8005aac:	4770      	bx	lr
 8005aae:	4618      	mov	r0, r3
 8005ab0:	4770      	bx	lr
 8005ab2:	2001      	movs	r0, #1
    }
 8005ab4:	4770      	bx	lr

08005ab6 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005ab6:	b510      	push	{r4, lr}
 8005ab8:	2110      	movs	r1, #16
 8005aba:	4604      	mov	r4, r0
 8005abc:	f023 fa63 	bl	8028f86 <_ZdlPvj>
 8005ac0:	4620      	mov	r0, r4
 8005ac2:	bd10      	pop	{r4, pc}

08005ac4 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005ac4:	b510      	push	{r4, lr}
 8005ac6:	4b03      	ldr	r3, [pc, #12]	; (8005ad4 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8005ac8:	6003      	str	r3, [r0, #0]
 8005aca:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005acc:	f00d fed6 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ad0:	4620      	mov	r0, r4
 8005ad2:	bd10      	pop	{r4, pc}
 8005ad4:	0802d134 	.word	0x0802d134

08005ad8 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005ad8:	b507      	push	{r0, r1, r2, lr}
 8005ada:	4b07      	ldr	r3, [pc, #28]	; (8005af8 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8005adc:	6003      	str	r3, [r0, #0]
 8005ade:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005ae0:	f00d fecc 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005ae4:	9801      	ldr	r0, [sp, #4]
 8005ae6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005aea:	f023 fa4c 	bl	8028f86 <_ZdlPvj>
 8005aee:	9801      	ldr	r0, [sp, #4]
 8005af0:	b003      	add	sp, #12
 8005af2:	f85d fb04 	ldr.w	pc, [sp], #4
 8005af6:	bf00      	nop
 8005af8:	0802d134 	.word	0x0802d134

08005afc <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005afc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005afe:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005b02:	4299      	cmp	r1, r3
{
 8005b04:	4604      	mov	r4, r0
 8005b06:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005b08:	d103      	bne.n	8005b12 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005b0a:	f00f fbb9 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8005b0e:	f7fe f853 	bl	8003bb8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8005b12:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005b16:	429d      	cmp	r5, r3
 8005b18:	d103      	bne.n	8005b22 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005b1a:	f00f fbb1 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8005b1e:	f7fe f87b 	bl	8003c18 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005b22:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005b26:	42a5      	cmp	r5, r4
 8005b28:	d105      	bne.n	8005b36 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005b2a:	f00f fba9 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8005b2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 8005b32:	f7fe b8a1 	b.w	8003c78 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8005b36:	bd38      	pop	{r3, r4, r5, pc}

08005b38 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8005b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005b3c:	ed2d 8b06 	vpush	{d8-d10}
 8005b40:	4604      	mov	r4, r0
 8005b42:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 8005b44:	46a3      	mov	fp, r4
 8005b46:	2500      	movs	r5, #0
 8005b48:	f011 f81a 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 8005b4c:	4b66      	ldr	r3, [pc, #408]	; (8005ce8 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8005b4e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005b50:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005b54:	2226      	movs	r2, #38	; 0x26
 8005b56:	4629      	mov	r1, r5
 8005b58:	4658      	mov	r0, fp
 8005b5a:	f024 fa2c 	bl	8029fb6 <memset>
 8005b5e:	4658      	mov	r0, fp
 8005b60:	f7fc ff44 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8005b64:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005b68:	26ff      	movs	r6, #255	; 0xff
 8005b6a:	4b60      	ldr	r3, [pc, #384]	; (8005cec <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8005b6c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005b6e:	2226      	movs	r2, #38	; 0x26
 8005b70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005b74:	4629      	mov	r1, r5
 8005b76:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005b7a:	4650      	mov	r0, sl
 8005b7c:	66a5      	str	r5, [r4, #104]	; 0x68
 8005b7e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005b82:	f024 fa18 	bl	8029fb6 <memset>
 8005b86:	4650      	mov	r0, sl
 8005b88:	f7fc ff30 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8005b8c:	4b58      	ldr	r3, [pc, #352]	; (8005cf0 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8005b8e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005b90:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005b94:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005b98:	a90a      	add	r1, sp, #40	; 0x28
 8005b9a:	4650      	mov	r0, sl
 8005b9c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005ba0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005ba4:	f00c fe63 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005ba8:	4648      	mov	r0, r9
 8005baa:	f7fc ff31 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005bae:	4b51      	ldr	r3, [pc, #324]	; (8005cf4 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 8005bb0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005bb4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005bb8:	4618      	mov	r0, r3
 8005bba:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005bbe:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8005bc2:	ee08 3a90 	vmov	s17, r3
 8005bc6:	f7fc ff23 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8005bca:	4638      	mov	r0, r7
 8005bcc:	f00b fd18 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 8005bd0:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005bd4:	4618      	mov	r0, r3
 8005bd6:	9303      	str	r3, [sp, #12]
 8005bd8:	f7fb fbf2 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005bdc:	4b46      	ldr	r3, [pc, #280]	; (8005cf8 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 8005bde:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8005be2:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005be6:	3324      	adds	r3, #36	; 0x24
 8005be8:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005bec:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8005bf0:	4640      	mov	r0, r8
 8005bf2:	f7fc ff0d 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8005bf6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005bfa:	4618      	mov	r0, r3
 8005bfc:	ee08 3a10 	vmov	s16, r3
 8005c00:	f7fc ff06 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8005c04:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005c08:	4618      	mov	r0, r3
 8005c0a:	ee09 3a10 	vmov	s18, r3
 8005c0e:	f00c ff6f 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c12:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005c16:	4618      	mov	r0, r3
 8005c18:	ee09 3a90 	vmov	s19, r3
 8005c1c:	f00c ff68 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005c20:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005c24:	4618      	mov	r0, r3
 8005c26:	ee0a 3a10 	vmov	s20, r3
 8005c2a:	f00c ff61 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005c2e:	4a33      	ldr	r2, [pc, #204]	; (8005cfc <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8005c30:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005c34:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005c38:	4a31      	ldr	r2, [pc, #196]	; (8005d00 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005c3a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005c3e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005c42:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005c46:	f00d fe0f 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005c4a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005c4e:	462a      	mov	r2, r5
 8005c50:	4658      	mov	r0, fp
 8005c52:	9300      	str	r3, [sp, #0]
 8005c54:	4629      	mov	r1, r5
 8005c56:	23f0      	movs	r3, #240	; 0xf0
 8005c58:	f7fc feb4 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c5c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005c5e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005c62:	66a3      	str	r3, [r4, #104]	; 0x68
 8005c64:	4659      	mov	r1, fp
 8005c66:	4630      	mov	r0, r6
 8005c68:	f00a f872 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005c6c:	462a      	mov	r2, r5
 8005c6e:	4650      	mov	r0, sl
 8005c70:	4629      	mov	r1, r5
 8005c72:	f7fc fe9a 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8005c76:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005c78:	4650      	mov	r0, sl
 8005c7a:	a90a      	add	r1, sp, #40	; 0x28
 8005c7c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005c80:	f00c fdf5 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005c84:	4651      	mov	r1, sl
 8005c86:	4630      	mov	r0, r6
 8005c88:	f00a f862 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005c8c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005c90:	2156      	movs	r1, #86	; 0x56
 8005c92:	4648      	mov	r0, r9
 8005c94:	f7fc fe89 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005c98:	f04f 33ff 	mov.w	r3, #4294967295
 8005c9c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005ca0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005ca4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005ca8:	f10d 0b10 	add.w	fp, sp, #16
 8005cac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005cb0:	4649      	mov	r1, r9
 8005cb2:	4658      	mov	r0, fp
 8005cb4:	4798      	blx	r3
 8005cb6:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005cba:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005cbe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005cc2:	4b10      	ldr	r3, [pc, #64]	; (8005d04 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005cc4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8005cc6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005cca:	b92b      	cbnz	r3, 8005cd8 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005ccc:	4b0e      	ldr	r3, [pc, #56]	; (8005d08 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005cce:	4a0f      	ldr	r2, [pc, #60]	; (8005d0c <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005cd0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005cd2:	480f      	ldr	r0, [pc, #60]	; (8005d10 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005cd4:	f023 ff6a 	bl	8029bac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005cd8:	4b0e      	ldr	r3, [pc, #56]	; (8005d14 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005cda:	881b      	ldrh	r3, [r3, #0]
 8005cdc:	2b1b      	cmp	r3, #27
 8005cde:	d81d      	bhi.n	8005d1c <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005ce0:	4b0d      	ldr	r3, [pc, #52]	; (8005d18 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005ce2:	4a0a      	ldr	r2, [pc, #40]	; (8005d0c <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005ce4:	2161      	movs	r1, #97	; 0x61
 8005ce6:	e7f4      	b.n	8005cd2 <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8005ce8:	0802d134 	.word	0x0802d134
 8005cec:	0802e098 	.word	0x0802e098
 8005cf0:	0802e260 	.word	0x0802e260
 8005cf4:	0802b760 	.word	0x0802b760
 8005cf8:	0802ddcc 	.word	0x0802ddcc
 8005cfc:	0802d11c 	.word	0x0802d11c
 8005d00:	08005afd 	.word	0x08005afd
 8005d04:	20012ecc 	.word	0x20012ecc
 8005d08:	0802b5a0 	.word	0x0802b5a0
 8005d0c:	0802b6a2 	.word	0x0802b6a2
 8005d10:	0802b61d 	.word	0x0802b61d
 8005d14:	20012ed0 	.word	0x20012ed0
 8005d18:	0802b664 	.word	0x0802b664
        return texts->getText(typedTextId);
 8005d1c:	4b95      	ldr	r3, [pc, #596]	; (8005f74 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005d1e:	211b      	movs	r1, #27
 8005d20:	6818      	ldr	r0, [r3, #0]
 8005d22:	f002 fb3d 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8005d26:	4a94      	ldr	r2, [pc, #592]	; (8005f78 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8005d28:	4603      	mov	r3, r0
 8005d2a:	2104      	movs	r1, #4
 8005d2c:	4650      	mov	r0, sl
 8005d2e:	f012 fc0b 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005d32:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005d36:	4648      	mov	r0, r9
 8005d38:	f00c f99e 	bl	8012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005d3c:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005f7c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005d40:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005d44:	231c      	movs	r3, #28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8005d46:	a90a      	add	r1, sp, #40	; 0x28
 8005d48:	4648      	mov	r0, r9
 8005d4a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d4e:	f00c f9b3 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d52:	4649      	mov	r1, r9
 8005d54:	4630      	mov	r0, r6
 8005d56:	f009 fffb 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005d5a:	223c      	movs	r2, #60	; 0x3c
 8005d5c:	ee18 0a90 	vmov	r0, s17
 8005d60:	213d      	movs	r1, #61	; 0x3d
 8005d62:	f7fc fe22 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005d66:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005d6a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005d6e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005d72:	4658      	mov	r0, fp
        linespace = space;
 8005d74:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005d78:	f00b ff04 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d7c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005d80:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005d84:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005d88:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005d8a:	ee18 0a90 	vmov	r0, s17
 8005d8e:	a90a      	add	r1, sp, #40	; 0x28
 8005d90:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005d94:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005d98:	f00c f98e 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d9c:	ee18 1a90 	vmov	r1, s17
 8005da0:	4630      	mov	r0, r6
 8005da2:	f009 ffd5 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005da6:	230a      	movs	r3, #10
 8005da8:	9300      	str	r3, [sp, #0]
 8005daa:	2232      	movs	r2, #50	; 0x32
 8005dac:	23f0      	movs	r3, #240	; 0xf0
 8005dae:	4629      	mov	r1, r5
 8005db0:	4638      	mov	r0, r7
 8005db2:	f7fc fe07 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005db6:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005dba:	22a0      	movs	r2, #160	; 0xa0
 8005dbc:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005dc0:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005dc4:	9b03      	ldr	r3, [sp, #12]
 8005dc6:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005dca:	4611      	mov	r1, r2
 8005dcc:	4638      	mov	r0, r7
 8005dce:	f00b fd2d 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005dd2:	22a0      	movs	r2, #160	; 0xa0
 8005dd4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005dd8:	4638      	mov	r0, r7
 8005dda:	f00b fd32 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005dde:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005de2:	2b20      	cmp	r3, #32
 8005de4:	d005      	beq.n	8005df2 <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005de6:	2320      	movs	r3, #32
 8005de8:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005dec:	4638      	mov	r0, r7
 8005dee:	f00b fc27 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005df2:	4638      	mov	r0, r7
 8005df4:	2101      	movs	r1, #1
 8005df6:	f00b fd2f 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005dfa:	4639      	mov	r1, r7
 8005dfc:	4630      	mov	r0, r6
 8005dfe:	f009 ffa7 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005e02:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005e06:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005e08:	2223      	movs	r2, #35	; 0x23
 8005e0a:	4640      	mov	r0, r8
        linespace = space;
 8005e0c:	f04f 0a00 	mov.w	sl, #0
 8005e10:	2145      	movs	r1, #69	; 0x45
 8005e12:	f7fc fdca 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005e16:	4641      	mov	r1, r8
 8005e18:	4638      	mov	r0, r7
        color = newColor;
 8005e1a:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005e1e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005e22:	f00b feaf 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e26:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005e2a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005e2e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e32:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005f7c <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005e36:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005e3a:	234e      	movs	r3, #78	; 0x4e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005e3c:	a90a      	add	r1, sp, #40	; 0x28
 8005e3e:	4640      	mov	r0, r8
 8005e40:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e44:	f00c f938 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e48:	4641      	mov	r1, r8
 8005e4a:	4630      	mov	r0, r6
 8005e4c:	f009 ff80 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005e50:	ee18 0a10 	vmov	r0, s16
 8005e54:	220c      	movs	r2, #12
 8005e56:	2136      	movs	r1, #54	; 0x36
 8005e58:	f7fc fda7 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8005e5c:	ee18 1a10 	vmov	r1, s16
 8005e60:	4638      	mov	r0, r7
        color = newColor;
 8005e62:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005e66:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005e6a:	f00b fe8b 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e6e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005e72:	ee18 3a10 	vmov	r3, s16
 8005e76:	333c      	adds	r3, #60	; 0x3c
 8005e78:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e7c:	234f      	movs	r3, #79	; 0x4f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005e7e:	ee18 0a10 	vmov	r0, s16
 8005e82:	a90a      	add	r1, sp, #40	; 0x28
 8005e84:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005e88:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005e8c:	f00c f914 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e90:	ee18 1a10 	vmov	r1, s16
 8005e94:	4630      	mov	r0, r6
 8005e96:	f009 ff5b 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005e9a:	ee19 0a10 	vmov	r0, s18
 8005e9e:	22f0      	movs	r2, #240	; 0xf0
 8005ea0:	2121      	movs	r1, #33	; 0x21
 8005ea2:	f7fc fd82 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8005ea6:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005eaa:	aa0a      	add	r2, sp, #40	; 0x28
 8005eac:	f04f 0802 	mov.w	r8, #2
 8005eb0:	a909      	add	r1, sp, #36	; 0x24
 8005eb2:	ee19 0a10 	vmov	r0, s18
 8005eb6:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005eba:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005ebe:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ec2:	f00c fade 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005ec6:	234d      	movs	r3, #77	; 0x4d
 8005ec8:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005ecc:	3710      	adds	r7, #16
        updateTextPosition();
 8005ece:	ee19 0a10 	vmov	r0, s18
 8005ed2:	f7fc fdbf 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005ed6:	ee19 1a10 	vmov	r1, s18
 8005eda:	4630      	mov	r0, r6
        colorPressed = col;
 8005edc:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005ee0:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005ee4:	f009 ff34 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005ee8:	ee19 0a90 	vmov	r0, s19
 8005eec:	22aa      	movs	r2, #170	; 0xaa
 8005eee:	2121      	movs	r1, #33	; 0x21
 8005ef0:	f7fc fd5b 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ef4:	aa0a      	add	r2, sp, #40	; 0x28
 8005ef6:	a909      	add	r1, sp, #36	; 0x24
 8005ef8:	ee19 0a90 	vmov	r0, s19
 8005efc:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f00:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005f04:	f00c fabd 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f08:	234c      	movs	r3, #76	; 0x4c
 8005f0a:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005f0e:	ee19 0a90 	vmov	r0, s19
 8005f12:	f7fc fd9f 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f16:	ee19 1a90 	vmov	r1, s19
 8005f1a:	4630      	mov	r0, r6
        colorPressed = col;
 8005f1c:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005f20:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005f24:	f009 ff14 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005f28:	ee1a 0a10 	vmov	r0, s20
 8005f2c:	2264      	movs	r2, #100	; 0x64
 8005f2e:	2121      	movs	r1, #33	; 0x21
 8005f30:	f7fc fd3b 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f34:	aa0a      	add	r2, sp, #40	; 0x28
 8005f36:	a909      	add	r1, sp, #36	; 0x24
 8005f38:	ee1a 0a10 	vmov	r0, s20
 8005f3c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005f40:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005f44:	f00c fa9d 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005f48:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8005f4a:	ee1a 0a10 	vmov	r0, s20
 8005f4e:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005f52:	f7fc fd7f 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f56:	4630      	mov	r0, r6
        colorPressed = col;
 8005f58:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005f5c:	ee1a 1a10 	vmov	r1, s20
 8005f60:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005f64:	f009 fef4 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005f68:	4620      	mov	r0, r4
 8005f6a:	b00d      	add	sp, #52	; 0x34
 8005f6c:	ecbd 8b06 	vpop	{d8-d10}
 8005f70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005f74:	20012ed8 	.word	0x20012ed8
 8005f78:	0802b6da 	.word	0x0802b6da
 8005f7c:	0802b750 	.word	0x0802b750

08005f80 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005f80:	4770      	bx	lr

08005f82 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005f82:	4770      	bx	lr

08005f84 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005f84:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005f86:	68c2      	ldr	r2, [r0, #12]
 8005f88:	6844      	ldr	r4, [r0, #4]
 8005f8a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005f8c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005f8e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005f92:	07d2      	lsls	r2, r2, #31
 8005f94:	bf48      	it	mi
 8005f96:	5962      	ldrmi	r2, [r4, r5]
 8005f98:	689b      	ldr	r3, [r3, #8]
    }
 8005f9a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005f9c:	bf48      	it	mi
 8005f9e:	58d3      	ldrmi	r3, [r2, r3]
 8005fa0:	4718      	bx	r3

08005fa2 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005fa2:	6843      	ldr	r3, [r0, #4]
 8005fa4:	b12b      	cbz	r3, 8005fb2 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005fa6:	6883      	ldr	r3, [r0, #8]
 8005fa8:	b92b      	cbnz	r3, 8005fb6 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005faa:	68c0      	ldr	r0, [r0, #12]
 8005fac:	f000 0001 	and.w	r0, r0, #1
 8005fb0:	4770      	bx	lr
 8005fb2:	4618      	mov	r0, r3
 8005fb4:	4770      	bx	lr
 8005fb6:	2001      	movs	r0, #1
    }
 8005fb8:	4770      	bx	lr

08005fba <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005fba:	b510      	push	{r4, lr}
 8005fbc:	2110      	movs	r1, #16
 8005fbe:	4604      	mov	r4, r0
 8005fc0:	f022 ffe1 	bl	8028f86 <_ZdlPvj>
 8005fc4:	4620      	mov	r0, r4
 8005fc6:	bd10      	pop	{r4, pc}

08005fc8 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005fc8:	b510      	push	{r4, lr}
 8005fca:	4b03      	ldr	r3, [pc, #12]	; (8005fd8 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005fcc:	6003      	str	r3, [r0, #0]
 8005fce:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005fd0:	f00d fc54 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005fd4:	4620      	mov	r0, r4
 8005fd6:	bd10      	pop	{r4, pc}
 8005fd8:	0802d180 	.word	0x0802d180

08005fdc <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005fdc:	b507      	push	{r0, r1, r2, lr}
 8005fde:	4b07      	ldr	r3, [pc, #28]	; (8005ffc <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005fe0:	6003      	str	r3, [r0, #0]
 8005fe2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005fe4:	f00d fc4a 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005fe8:	9801      	ldr	r0, [sp, #4]
 8005fea:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005fee:	f022 ffca 	bl	8028f86 <_ZdlPvj>
 8005ff2:	9801      	ldr	r0, [sp, #4]
 8005ff4:	b003      	add	sp, #12
 8005ff6:	f85d fb04 	ldr.w	pc, [sp], #4
 8005ffa:	bf00      	nop
 8005ffc:	0802d180 	.word	0x0802d180

08006000 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006000:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006002:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006006:	4299      	cmp	r1, r3
{
 8006008:	4604      	mov	r4, r0
 800600a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 800600c:	d103      	bne.n	8006016 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800600e:	f00f f937 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006012:	f7fd fdf1 	bl	8003bf8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8006016:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800601a:	429d      	cmp	r5, r3
 800601c:	d103      	bne.n	8006026 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 800601e:	f00f f92f 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8006022:	f7fd fe59 	bl	8003cd8 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8006026:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 800602a:	42a5      	cmp	r5, r4
 800602c:	d105      	bne.n	800603a <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 800602e:	f00f f927 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8006032:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8006036:	f7fd be3f 	b.w	8003cb8 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 800603a:	bd38      	pop	{r3, r4, r5, pc}

0800603c <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 800603c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006040:	ed2d 8b06 	vpush	{d8-d10}
 8006044:	4604      	mov	r4, r0
 8006046:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006048:	46a3      	mov	fp, r4
 800604a:	2500      	movs	r5, #0
 800604c:	f010 fd98 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 8006050:	4b66      	ldr	r3, [pc, #408]	; (80061ec <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8006052:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006054:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006058:	2226      	movs	r2, #38	; 0x26
 800605a:	4629      	mov	r1, r5
 800605c:	4658      	mov	r0, fp
 800605e:	f023 ffaa 	bl	8029fb6 <memset>
 8006062:	4658      	mov	r0, fp
 8006064:	f7fc fcc2 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8006068:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800606c:	26ff      	movs	r6, #255	; 0xff
 800606e:	4b60      	ldr	r3, [pc, #384]	; (80061f0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006070:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006072:	2226      	movs	r2, #38	; 0x26
 8006074:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006078:	4629      	mov	r1, r5
 800607a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800607e:	4650      	mov	r0, sl
 8006080:	66a5      	str	r5, [r4, #104]	; 0x68
 8006082:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006086:	f023 ff96 	bl	8029fb6 <memset>
 800608a:	4650      	mov	r0, sl
 800608c:	f7fc fcae 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8006090:	4b58      	ldr	r3, [pc, #352]	; (80061f4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8006092:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006094:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006098:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 800609c:	a90a      	add	r1, sp, #40	; 0x28
 800609e:	4650      	mov	r0, sl
 80060a0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80060a4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80060a8:	f00c fbe1 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80060ac:	4648      	mov	r0, r9
 80060ae:	f7fc fcaf 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80060b2:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80060b6:	4b50      	ldr	r3, [pc, #320]	; (80061f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 80060b8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80060bc:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80060c0:	4638      	mov	r0, r7
 80060c2:	f00b fa9d 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 80060c6:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80060ca:	4618      	mov	r0, r3
 80060cc:	9303      	str	r3, [sp, #12]
 80060ce:	f7fb f977 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80060d2:	4b4a      	ldr	r3, [pc, #296]	; (80061fc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 80060d4:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80060d8:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80060dc:	3324      	adds	r3, #36	; 0x24
 80060de:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80060e2:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80060e6:	4640      	mov	r0, r8
 80060e8:	f7fc fc92 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80060ec:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80060f0:	4618      	mov	r0, r3
 80060f2:	ee08 3a10 	vmov	s16, r3
 80060f6:	f7fc fc8b 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80060fa:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80060fe:	4618      	mov	r0, r3
 8006100:	ee08 3a90 	vmov	s17, r3
 8006104:	f7fc fc84 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8006108:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800610c:	4618      	mov	r0, r3
 800610e:	ee09 3a10 	vmov	s18, r3
 8006112:	f00c fced 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006116:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800611a:	4618      	mov	r0, r3
 800611c:	ee09 3a90 	vmov	s19, r3
 8006120:	f00c fce6 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006124:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006128:	4618      	mov	r0, r3
 800612a:	ee0a 3a10 	vmov	s20, r3
 800612e:	f00c fcdf 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006132:	4a33      	ldr	r2, [pc, #204]	; (8006200 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8006134:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006138:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 800613c:	4a31      	ldr	r2, [pc, #196]	; (8006204 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800613e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006142:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006146:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800614a:	f00d fb8d 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800614e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006152:	462a      	mov	r2, r5
 8006154:	4658      	mov	r0, fp
 8006156:	9300      	str	r3, [sp, #0]
 8006158:	4629      	mov	r1, r5
 800615a:	23f0      	movs	r3, #240	; 0xf0
 800615c:	f7fc fc32 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006160:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006162:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006166:	66a3      	str	r3, [r4, #104]	; 0x68
 8006168:	4659      	mov	r1, fp
 800616a:	4630      	mov	r0, r6
 800616c:	f009 fdf0 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006170:	462a      	mov	r2, r5
 8006172:	4650      	mov	r0, sl
 8006174:	4629      	mov	r1, r5
 8006176:	f7fc fc18 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800617a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800617c:	4650      	mov	r0, sl
 800617e:	a90a      	add	r1, sp, #40	; 0x28
 8006180:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006184:	f00c fb73 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006188:	4651      	mov	r1, sl
 800618a:	4630      	mov	r0, r6
 800618c:	f009 fde0 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006190:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006194:	2156      	movs	r1, #86	; 0x56
 8006196:	4648      	mov	r0, r9
 8006198:	f7fc fc07 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800619c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80061a0:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80061a4:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80061a8:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80061ac:	4650      	mov	r0, sl
 80061ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80061b2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80061b6:	4649      	mov	r1, r9
 80061b8:	4798      	blx	r3
 80061ba:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80061be:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80061c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80061c6:	4b10      	ldr	r3, [pc, #64]	; (8006208 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 80061c8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80061ca:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80061ce:	b92b      	cbnz	r3, 80061dc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 80061d0:	4b0e      	ldr	r3, [pc, #56]	; (800620c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 80061d2:	4a0f      	ldr	r2, [pc, #60]	; (8006210 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80061d4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80061d6:	480f      	ldr	r0, [pc, #60]	; (8006214 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 80061d8:	f023 fce8 	bl	8029bac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80061dc:	4b0e      	ldr	r3, [pc, #56]	; (8006218 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80061de:	881b      	ldrh	r3, [r3, #0]
 80061e0:	2b16      	cmp	r3, #22
 80061e2:	d81d      	bhi.n	8006220 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 80061e4:	4b0d      	ldr	r3, [pc, #52]	; (800621c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 80061e6:	4a0a      	ldr	r2, [pc, #40]	; (8006210 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80061e8:	2161      	movs	r1, #97	; 0x61
 80061ea:	e7f4      	b.n	80061d6 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 80061ec:	0802d180 	.word	0x0802d180
 80061f0:	0802e098 	.word	0x0802e098
 80061f4:	0802e260 	.word	0x0802e260
 80061f8:	0802b760 	.word	0x0802b760
 80061fc:	0802ddcc 	.word	0x0802ddcc
 8006200:	0802d168 	.word	0x0802d168
 8006204:	08006001 	.word	0x08006001
 8006208:	20012ecc 	.word	0x20012ecc
 800620c:	0802b5a0 	.word	0x0802b5a0
 8006210:	0802b6a2 	.word	0x0802b6a2
 8006214:	0802b61d 	.word	0x0802b61d
 8006218:	20012ed0 	.word	0x20012ed0
 800621c:	0802b664 	.word	0x0802b664
        return texts->getText(typedTextId);
 8006220:	4b93      	ldr	r3, [pc, #588]	; (8006470 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8006222:	2116      	movs	r1, #22
 8006224:	6818      	ldr	r0, [r3, #0]
 8006226:	f002 f8bb 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 800622a:	4a92      	ldr	r2, [pc, #584]	; (8006474 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 800622c:	4603      	mov	r3, r0
 800622e:	2104      	movs	r1, #4
 8006230:	4650      	mov	r0, sl
 8006232:	f012 f989 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8006236:	4648      	mov	r0, r9
        wc1 = value;
 8006238:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 800623c:	f00b ff1c 	bl	8012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006240:	4b8d      	ldr	r3, [pc, #564]	; (8006478 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8006242:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8006244:	a90a      	add	r1, sp, #40	; 0x28
 8006246:	2317      	movs	r3, #23
 8006248:	4648      	mov	r0, r9
 800624a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800624e:	f00b ff33 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006252:	4649      	mov	r1, r9
 8006254:	4630      	mov	r0, r6
 8006256:	f009 fd7b 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800625a:	230a      	movs	r3, #10
 800625c:	9300      	str	r3, [sp, #0]
 800625e:	2232      	movs	r2, #50	; 0x32
 8006260:	23f0      	movs	r3, #240	; 0xf0
 8006262:	4629      	mov	r1, r5
 8006264:	4638      	mov	r0, r7
 8006266:	f7fc fbad 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800626a:	9b03      	ldr	r3, [sp, #12]
 800626c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006270:	22a0      	movs	r2, #160	; 0xa0
 8006272:	4611      	mov	r1, r2
 8006274:	4638      	mov	r0, r7
 8006276:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800627a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 800627e:	f00b fad5 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006282:	22a0      	movs	r2, #160	; 0xa0
 8006284:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006288:	4638      	mov	r0, r7
 800628a:	f00b fada 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800628e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8006292:	2b20      	cmp	r3, #32
 8006294:	d005      	beq.n	80062a2 <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8006296:	2320      	movs	r3, #32
 8006298:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 800629c:	4638      	mov	r0, r7
 800629e:	f00b f9cf 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80062a2:	4638      	mov	r0, r7
 80062a4:	2101      	movs	r1, #1
 80062a6:	f00b fad7 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80062aa:	4639      	mov	r1, r7
 80062ac:	4630      	mov	r0, r6
 80062ae:	ad04      	add	r5, sp, #16
        color = newColor;
 80062b0:	f04f 37ff 	mov.w	r7, #4294967295
 80062b4:	f009 fd4c 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80062b8:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80062bc:	2223      	movs	r2, #35	; 0x23
 80062be:	4640      	mov	r0, r8
 80062c0:	2145      	movs	r1, #69	; 0x45
 80062c2:	f7fc fb72 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80062c6:	4641      	mov	r1, r8
 80062c8:	4628      	mov	r0, r5
        color = newColor;
 80062ca:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80062ce:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80062d2:	f00b fc57 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062d6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80062da:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80062de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062e2:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 80062e6:	f8df 9190 	ldr.w	r9, [pc, #400]	; 8006478 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80062ea:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80062ee:	a90a      	add	r1, sp, #40	; 0x28
 80062f0:	4640      	mov	r0, r8
 80062f2:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80062f6:	f00b fedf 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80062fa:	4641      	mov	r1, r8
 80062fc:	4630      	mov	r0, r6
 80062fe:	f009 fd27 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006302:	ee18 0a10 	vmov	r0, s16
 8006306:	220c      	movs	r2, #12
 8006308:	2136      	movs	r1, #54	; 0x36
 800630a:	f7fc fb4e 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800630e:	ee18 1a10 	vmov	r1, s16
 8006312:	4628      	mov	r0, r5
        color = newColor;
 8006314:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006318:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800631c:	f00b fc32 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006320:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006324:	ee18 3a10 	vmov	r3, s16
 8006328:	445b      	add	r3, fp
 800632a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800632e:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8006330:	ee18 0a10 	vmov	r0, s16
 8006334:	a90a      	add	r1, sp, #40	; 0x28
 8006336:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800633a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800633e:	f00b febb 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006342:	ee18 1a10 	vmov	r1, s16
 8006346:	4630      	mov	r0, r6
 8006348:	f009 fd02 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 800634c:	465a      	mov	r2, fp
 800634e:	ee18 0a90 	vmov	r0, s17
 8006352:	2121      	movs	r1, #33	; 0x21
 8006354:	f7fc fb29 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8006358:	ee18 1a90 	vmov	r1, s17
 800635c:	4628      	mov	r0, r5
        color = newColor;
 800635e:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006362:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006366:	f00b fc0d 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800636a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800636e:	ee18 3a90 	vmov	r3, s17
 8006372:	445b      	add	r3, fp
 8006374:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006378:	2325      	movs	r3, #37	; 0x25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 800637a:	ee18 0a90 	vmov	r0, s17
 800637e:	a90a      	add	r1, sp, #40	; 0x28
 8006380:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006384:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006388:	f00b fe96 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800638c:	ee18 1a90 	vmov	r1, s17
 8006390:	4630      	mov	r0, r6
 8006392:	f009 fcdd 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006396:	ee19 0a10 	vmov	r0, s18
 800639a:	22f0      	movs	r2, #240	; 0xf0
 800639c:	2121      	movs	r1, #33	; 0x21
 800639e:	f7fc fb04 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80063a2:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80063a6:	aa0a      	add	r2, sp, #40	; 0x28
 80063a8:	f04f 0802 	mov.w	r8, #2
 80063ac:	a909      	add	r1, sp, #36	; 0x24
 80063ae:	ee19 0a10 	vmov	r0, s18
 80063b2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80063b6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80063ba:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80063be:	f00c f860 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80063c2:	233a      	movs	r3, #58	; 0x3a
 80063c4:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80063c8:	3510      	adds	r5, #16
        updateTextPosition();
 80063ca:	ee19 0a10 	vmov	r0, s18
 80063ce:	f7fc fb41 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80063d2:	ee19 1a10 	vmov	r1, s18
 80063d6:	4630      	mov	r0, r6
        colorPressed = col;
 80063d8:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80063dc:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80063e0:	f009 fcb6 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80063e4:	ee19 0a90 	vmov	r0, s19
 80063e8:	22aa      	movs	r2, #170	; 0xaa
 80063ea:	2121      	movs	r1, #33	; 0x21
 80063ec:	f7fc fadd 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80063f0:	aa0a      	add	r2, sp, #40	; 0x28
 80063f2:	a909      	add	r1, sp, #36	; 0x24
 80063f4:	ee19 0a90 	vmov	r0, s19
 80063f8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80063fc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006400:	f00c f83f 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006404:	2339      	movs	r3, #57	; 0x39
 8006406:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 800640a:	ee19 0a90 	vmov	r0, s19
 800640e:	f7fc fb21 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006412:	ee19 1a90 	vmov	r1, s19
 8006416:	4630      	mov	r0, r6
        colorPressed = col;
 8006418:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 800641c:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006420:	f009 fc96 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006424:	ee1a 0a10 	vmov	r0, s20
 8006428:	2264      	movs	r2, #100	; 0x64
 800642a:	2121      	movs	r1, #33	; 0x21
 800642c:	f7fc fabd 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006430:	aa0a      	add	r2, sp, #40	; 0x28
 8006432:	a909      	add	r1, sp, #36	; 0x24
 8006434:	ee1a 0a10 	vmov	r0, s20
 8006438:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 800643c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006440:	f00c f81f 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006444:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 8006446:	ee1a 0a10 	vmov	r0, s20
 800644a:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800644e:	f7fc fb01 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006452:	4630      	mov	r0, r6
        colorPressed = col;
 8006454:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006458:	ee1a 1a10 	vmov	r1, s20
 800645c:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006460:	f009 fc76 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006464:	4620      	mov	r0, r4
 8006466:	b00d      	add	sp, #52	; 0x34
 8006468:	ecbd 8b06 	vpop	{d8-d10}
 800646c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006470:	20012ed8 	.word	0x20012ed8
 8006474:	0802b6da 	.word	0x0802b6da
 8006478:	0802b750 	.word	0x0802b750

0800647c <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800647c:	4770      	bx	lr

0800647e <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800647e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006480:	68c2      	ldr	r2, [r0, #12]
 8006482:	6844      	ldr	r4, [r0, #4]
 8006484:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006486:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006488:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800648c:	07d2      	lsls	r2, r2, #31
 800648e:	bf48      	it	mi
 8006490:	5962      	ldrmi	r2, [r4, r5]
 8006492:	689b      	ldr	r3, [r3, #8]
    }
 8006494:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006496:	bf48      	it	mi
 8006498:	58d3      	ldrmi	r3, [r2, r3]
 800649a:	4718      	bx	r3

0800649c <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800649c:	6843      	ldr	r3, [r0, #4]
 800649e:	b12b      	cbz	r3, 80064ac <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80064a0:	6883      	ldr	r3, [r0, #8]
 80064a2:	b92b      	cbnz	r3, 80064b0 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80064a4:	68c0      	ldr	r0, [r0, #12]
 80064a6:	f000 0001 	and.w	r0, r0, #1
 80064aa:	4770      	bx	lr
 80064ac:	4618      	mov	r0, r3
 80064ae:	4770      	bx	lr
 80064b0:	2001      	movs	r0, #1
    }
 80064b2:	4770      	bx	lr

080064b4 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80064b4:	b510      	push	{r4, lr}
 80064b6:	2110      	movs	r1, #16
 80064b8:	4604      	mov	r4, r0
 80064ba:	f022 fd64 	bl	8028f86 <_ZdlPvj>
 80064be:	4620      	mov	r0, r4
 80064c0:	bd10      	pop	{r4, pc}

080064c2 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80064c2:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80064c6:	f002 b8b3 	b.w	8008630 <_ZN17Gauge_with_Values10initializeEv>

080064ca <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80064ca:	3098      	adds	r0, #152	; 0x98
 80064cc:	4288      	cmp	r0, r1
{
 80064ce:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80064d0:	d105      	bne.n	80064de <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80064d2:	f00e fed5 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80064d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80064da:	f7fd bbdd 	b.w	8003c98 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80064de:	bd08      	pop	{r3, pc}

080064e0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 80064e0:	b510      	push	{r4, lr}
 80064e2:	4b07      	ldr	r3, [pc, #28]	; (8006500 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 80064e4:	6003      	str	r3, [r0, #0]
 80064e6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80064e8:	f00d f9c8 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 80064ec:	4b05      	ldr	r3, [pc, #20]	; (8006504 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 80064ee:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80064f2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80064f6:	f7fe fe25 	bl	8005144 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80064fa:	4620      	mov	r0, r4
 80064fc:	bd10      	pop	{r4, pc}
 80064fe:	bf00      	nop
 8006500:	0802d1cc 	.word	0x0802d1cc
 8006504:	0802d724 	.word	0x0802d724

08006508 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006508:	b510      	push	{r4, lr}
 800650a:	4604      	mov	r4, r0
}
 800650c:	f7ff ffe8 	bl	80064e0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8006510:	4620      	mov	r0, r4
 8006512:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006516:	f022 fd36 	bl	8028f86 <_ZdlPvj>
 800651a:	4620      	mov	r0, r4
 800651c:	bd10      	pop	{r4, pc}
	...

08006520 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006524:	ed2d 8b04 	vpush	{d8-d9}
 8006528:	4604      	mov	r4, r0
 800652a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 800652c:	46a1      	mov	r9, r4
 800652e:	2500      	movs	r5, #0
 8006530:	f010 fb26 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 8006534:	4bac      	ldr	r3, [pc, #688]	; (80067e8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 8006536:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006538:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800653c:	2226      	movs	r2, #38	; 0x26
 800653e:	4629      	mov	r1, r5
 8006540:	4648      	mov	r0, r9
 8006542:	f023 fd38 	bl	8029fb6 <memset>
 8006546:	4648      	mov	r0, r9
 8006548:	f7fc fa50 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 800654c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006550:	26ff      	movs	r6, #255	; 0xff
 8006552:	4ba6      	ldr	r3, [pc, #664]	; (80067ec <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 8006554:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006556:	2226      	movs	r2, #38	; 0x26
 8006558:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800655c:	4629      	mov	r1, r5
 800655e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006562:	4640      	mov	r0, r8
 8006564:	66a5      	str	r5, [r4, #104]	; 0x68
 8006566:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800656a:	f023 fd24 	bl	8029fb6 <memset>
 800656e:	4640      	mov	r0, r8
 8006570:	f7fc fa3c 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8006574:	4b9e      	ldr	r3, [pc, #632]	; (80067f0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 8006576:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006578:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800657c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006580:	a90a      	add	r1, sp, #40	; 0x28
 8006582:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006584:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006588:	f00c f971 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800658c:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006590:	4618      	mov	r0, r3
 8006592:	ee08 3a10 	vmov	s16, r3
 8006596:	f00c faab 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800659a:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 800659e:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80065a2:	4618      	mov	r0, r3
 80065a4:	ee08 3a90 	vmov	s17, r3
 80065a8:	f7fc fa32 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80065ac:	4638      	mov	r0, r7
 80065ae:	f00b f827 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 80065b2:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80065b6:	4618      	mov	r0, r3
 80065b8:	9303      	str	r3, [sp, #12]
 80065ba:	f7fa ff01 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80065be:	4b8d      	ldr	r3, [pc, #564]	; (80067f4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 80065c0:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80065c4:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80065c8:	3324      	adds	r3, #36	; 0x24
 80065ca:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80065ce:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80065d2:	4658      	mov	r0, fp
 80065d4:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80065d8:	f7fc fa1a 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80065dc:	4650      	mov	r0, sl
 80065de:	f7fc fa17 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80065e2:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80065e6:	4618      	mov	r0, r3
 80065e8:	ee09 3a10 	vmov	s18, r3
 80065ec:	f002 f816 	bl	800861c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80065f0:	4a81      	ldr	r2, [pc, #516]	; (80067f8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 80065f2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80065f6:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80065fa:	4a80      	ldr	r2, [pc, #512]	; (80067fc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80065fc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006600:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006604:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006608:	f00d f92e 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800660c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006610:	462a      	mov	r2, r5
 8006612:	4648      	mov	r0, r9
 8006614:	9300      	str	r3, [sp, #0]
 8006616:	4629      	mov	r1, r5
 8006618:	23f0      	movs	r3, #240	; 0xf0
 800661a:	f7fc f9d3 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 800661e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006620:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006624:	66a3      	str	r3, [r4, #104]	; 0x68
 8006626:	4649      	mov	r1, r9
 8006628:	4630      	mov	r0, r6
 800662a:	f009 fb91 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800662e:	462a      	mov	r2, r5
 8006630:	4640      	mov	r0, r8
 8006632:	4629      	mov	r1, r5
 8006634:	f7fc f9b9 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8006638:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800663a:	4640      	mov	r0, r8
 800663c:	a90a      	add	r1, sp, #40	; 0x28
 800663e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006642:	f00c f914 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006646:	4641      	mov	r1, r8
 8006648:	4630      	mov	r0, r6
 800664a:	f009 fb81 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800664e:	ee18 0a10 	vmov	r0, s16
 8006652:	f240 1201 	movw	r2, #257	; 0x101
 8006656:	2121      	movs	r1, #33	; 0x21
 8006658:	f7fc f9a7 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800665c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800665e:	aa0a      	add	r2, sp, #40	; 0x28
 8006660:	a909      	add	r1, sp, #36	; 0x24
 8006662:	ee18 0a10 	vmov	r0, s16
 8006666:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800666a:	2302      	movs	r3, #2
 800666c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006670:	f00b ff07 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006674:	2321      	movs	r3, #33	; 0x21
        updateTextPosition();
 8006676:	ee18 0a10 	vmov	r0, s16
 800667a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800667e:	f7fc f9e9 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006682:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006686:	3314      	adds	r3, #20
        color = col;
 8006688:	f04f 39ff 	mov.w	r9, #4294967295
 800668c:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006690:	ee18 1a10 	vmov	r1, s16
 8006694:	4630      	mov	r0, r6
        colorPressed = col;
 8006696:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800669a:	f009 fb59 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800669e:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80066a2:	223c      	movs	r2, #60	; 0x3c
 80066a4:	ee18 0a90 	vmov	r0, s17
 80066a8:	2117      	movs	r1, #23
 80066aa:	f7fc f97e 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80066ae:	ee18 1a90 	vmov	r1, s17
 80066b2:	4640      	mov	r0, r8
        color = newColor;
 80066b4:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80066b8:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80066bc:	f00b fa62 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80066c0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80066c4:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80066c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80066cc:	4b4c      	ldr	r3, [pc, #304]	; (8006800 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 80066ce:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 80066d0:	ee18 0a90 	vmov	r0, s17
 80066d4:	2322      	movs	r3, #34	; 0x22
 80066d6:	a90a      	add	r1, sp, #40	; 0x28
 80066d8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80066dc:	f00b fcec 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066e0:	ee18 1a90 	vmov	r1, s17
 80066e4:	4630      	mov	r0, r6
 80066e6:	f009 fb33 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80066ea:	230a      	movs	r3, #10
 80066ec:	9300      	str	r3, [sp, #0]
 80066ee:	2232      	movs	r2, #50	; 0x32
 80066f0:	23f0      	movs	r3, #240	; 0xf0
 80066f2:	4629      	mov	r1, r5
 80066f4:	4638      	mov	r0, r7
 80066f6:	f7fc f965 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80066fa:	9b03      	ldr	r3, [sp, #12]
 80066fc:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006700:	22a0      	movs	r2, #160	; 0xa0
 8006702:	4611      	mov	r1, r2
 8006704:	4638      	mov	r0, r7
 8006706:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 800670a:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800670e:	f00b f88d 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006712:	22a0      	movs	r2, #160	; 0xa0
 8006714:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006718:	4638      	mov	r0, r7
 800671a:	f00b f892 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800671e:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006722:	2b20      	cmp	r3, #32
 8006724:	d005      	beq.n	8006732 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8006726:	2320      	movs	r3, #32
 8006728:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800672c:	4638      	mov	r0, r7
 800672e:	f00a ff87 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006732:	4638      	mov	r0, r7
 8006734:	2101      	movs	r1, #1
 8006736:	f00b f88f 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800673a:	4639      	mov	r1, r7
 800673c:	4630      	mov	r0, r6
 800673e:	f009 fb07 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006742:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006744:	2223      	movs	r2, #35	; 0x23
 8006746:	4658      	mov	r0, fp
        color = newColor;
 8006748:	f04f 39ff 	mov.w	r9, #4294967295
 800674c:	2145      	movs	r1, #69	; 0x45
 800674e:	f7fc f92c 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006752:	4659      	mov	r1, fp
 8006754:	4640      	mov	r0, r8
        color = newColor;
 8006756:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800675a:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800675e:	f00b fa11 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006762:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006766:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800676a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800676e:	4f24      	ldr	r7, [pc, #144]	; (8006800 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 8006770:	970a      	str	r7, [sp, #40]	; 0x28
 8006772:	2323      	movs	r3, #35	; 0x23
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006774:	a90a      	add	r1, sp, #40	; 0x28
 8006776:	4658      	mov	r0, fp
 8006778:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800677c:	f00b fc9c 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006780:	4659      	mov	r1, fp
 8006782:	4630      	mov	r0, r6
 8006784:	f009 fae4 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006788:	220c      	movs	r2, #12
 800678a:	4650      	mov	r0, sl
 800678c:	2136      	movs	r1, #54	; 0x36
 800678e:	f7fc f90c 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8006792:	4651      	mov	r1, sl
 8006794:	4640      	mov	r0, r8
        color = newColor;
 8006796:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800679a:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 800679e:	f00b f9f1 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80067a2:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80067a6:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80067aa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80067ae:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 80067b0:	a90a      	add	r1, sp, #40	; 0x28
 80067b2:	4650      	mov	r0, sl
 80067b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80067b8:	970a      	str	r7, [sp, #40]	; 0x28
 80067ba:	f00b fc7d 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80067be:	4651      	mov	r1, sl
 80067c0:	4630      	mov	r0, r6
 80067c2:	f009 fac5 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80067c6:	ee19 0a10 	vmov	r0, s18
 80067ca:	224e      	movs	r2, #78	; 0x4e
 80067cc:	4629      	mov	r1, r5
 80067ce:	f7fc f8ec 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80067d2:	4630      	mov	r0, r6
 80067d4:	ee19 1a10 	vmov	r1, s18
 80067d8:	f009 faba 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80067dc:	4620      	mov	r0, r4
 80067de:	b00d      	add	sp, #52	; 0x34
 80067e0:	ecbd 8b04 	vpop	{d8-d9}
 80067e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80067e8:	0802d1cc 	.word	0x0802d1cc
 80067ec:	0802e098 	.word	0x0802e098
 80067f0:	0802e260 	.word	0x0802e260
 80067f4:	0802ddcc 	.word	0x0802ddcc
 80067f8:	0802d1b4 	.word	0x0802d1b4
 80067fc:	080064cb 	.word	0x080064cb
 8006800:	0802b750 	.word	0x0802b750

08006804 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006804:	4770      	bx	lr

08006806 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006806:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006808:	68c2      	ldr	r2, [r0, #12]
 800680a:	6844      	ldr	r4, [r0, #4]
 800680c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800680e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006810:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006814:	07d2      	lsls	r2, r2, #31
 8006816:	bf48      	it	mi
 8006818:	5962      	ldrmi	r2, [r4, r5]
 800681a:	689b      	ldr	r3, [r3, #8]
    }
 800681c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800681e:	bf48      	it	mi
 8006820:	58d3      	ldrmi	r3, [r2, r3]
 8006822:	4718      	bx	r3

08006824 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006824:	6843      	ldr	r3, [r0, #4]
 8006826:	b12b      	cbz	r3, 8006834 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006828:	6883      	ldr	r3, [r0, #8]
 800682a:	b92b      	cbnz	r3, 8006838 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800682c:	68c0      	ldr	r0, [r0, #12]
 800682e:	f000 0001 	and.w	r0, r0, #1
 8006832:	4770      	bx	lr
 8006834:	4618      	mov	r0, r3
 8006836:	4770      	bx	lr
 8006838:	2001      	movs	r0, #1
    }
 800683a:	4770      	bx	lr

0800683c <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800683c:	b510      	push	{r4, lr}
 800683e:	2110      	movs	r1, #16
 8006840:	4604      	mov	r4, r0
 8006842:	f022 fba0 	bl	8028f86 <_ZdlPvj>
 8006846:	4620      	mov	r0, r4
 8006848:	bd10      	pop	{r4, pc}

0800684a <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800684a:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800684e:	f001 beef 	b.w	8008630 <_ZN17Gauge_with_Values10initializeEv>

08006852 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006852:	3098      	adds	r0, #152	; 0x98
 8006854:	4288      	cmp	r0, r1
{
 8006856:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006858:	d105      	bne.n	8006866 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800685a:	f00e fd11 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 800685e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006862:	f7fd ba19 	b.w	8003c98 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006866:	bd08      	pop	{r3, pc}

08006868 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006868:	b510      	push	{r4, lr}
 800686a:	4b07      	ldr	r3, [pc, #28]	; (8006888 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 800686c:	6003      	str	r3, [r0, #0]
 800686e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006870:	f00d f804 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8006874:	4b05      	ldr	r3, [pc, #20]	; (800688c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 8006876:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800687a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800687e:	f7fe fc61 	bl	8005144 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006882:	4620      	mov	r0, r4
 8006884:	bd10      	pop	{r4, pc}
 8006886:	bf00      	nop
 8006888:	0802d218 	.word	0x0802d218
 800688c:	0802d724 	.word	0x0802d724

08006890 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006890:	b510      	push	{r4, lr}
 8006892:	4604      	mov	r4, r0
}
 8006894:	f7ff ffe8 	bl	8006868 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8006898:	4620      	mov	r0, r4
 800689a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800689e:	f022 fb72 	bl	8028f86 <_ZdlPvj>
 80068a2:	4620      	mov	r0, r4
 80068a4:	bd10      	pop	{r4, pc}
	...

080068a8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 80068a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80068ac:	ed2d 8b04 	vpush	{d8-d9}
 80068b0:	4604      	mov	r4, r0
 80068b2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 80068b4:	46a1      	mov	r9, r4
 80068b6:	2500      	movs	r5, #0
 80068b8:	f010 f962 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 80068bc:	4bac      	ldr	r3, [pc, #688]	; (8006b70 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 80068be:	63e5      	str	r5, [r4, #60]	; 0x3c
 80068c0:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 80068c4:	2226      	movs	r2, #38	; 0x26
 80068c6:	4629      	mov	r1, r5
 80068c8:	4648      	mov	r0, r9
 80068ca:	f023 fb74 	bl	8029fb6 <memset>
 80068ce:	4648      	mov	r0, r9
 80068d0:	f7fc f88c 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 80068d4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80068d8:	26ff      	movs	r6, #255	; 0xff
 80068da:	4ba6      	ldr	r3, [pc, #664]	; (8006b74 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 80068dc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80068de:	2226      	movs	r2, #38	; 0x26
 80068e0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80068e4:	4629      	mov	r1, r5
 80068e6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80068ea:	4640      	mov	r0, r8
 80068ec:	66a5      	str	r5, [r4, #104]	; 0x68
 80068ee:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80068f2:	f023 fb60 	bl	8029fb6 <memset>
 80068f6:	4640      	mov	r0, r8
 80068f8:	f7fc f878 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 80068fc:	4b9e      	ldr	r3, [pc, #632]	; (8006b78 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 80068fe:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006900:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006904:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006908:	a90a      	add	r1, sp, #40	; 0x28
 800690a:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 800690c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006910:	f00b ffad 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006914:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006918:	4618      	mov	r0, r3
 800691a:	ee08 3a10 	vmov	s16, r3
 800691e:	f00c f8e7 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006922:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006926:	f504 7794 	add.w	r7, r4, #296	; 0x128
 800692a:	4618      	mov	r0, r3
 800692c:	ee08 3a90 	vmov	s17, r3
 8006930:	f7fc f86e 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8006934:	4638      	mov	r0, r7
 8006936:	f00a fe63 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 800693a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800693e:	4618      	mov	r0, r3
 8006940:	9303      	str	r3, [sp, #12]
 8006942:	f7fa fd3d 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006946:	4b8d      	ldr	r3, [pc, #564]	; (8006b7c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 8006948:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 800694c:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006950:	3324      	adds	r3, #36	; 0x24
 8006952:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006956:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800695a:	4658      	mov	r0, fp
 800695c:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006960:	f7fc f856 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8006964:	4650      	mov	r0, sl
 8006966:	f7fc f853 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 800696a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800696e:	4618      	mov	r0, r3
 8006970:	ee09 3a10 	vmov	s18, r3
 8006974:	f001 fe52 	bl	800861c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006978:	4a81      	ldr	r2, [pc, #516]	; (8006b80 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 800697a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800697e:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006982:	4a80      	ldr	r2, [pc, #512]	; (8006b84 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006984:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006988:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 800698c:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006990:	f00c ff6a 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006994:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006998:	462a      	mov	r2, r5
 800699a:	4648      	mov	r0, r9
 800699c:	9300      	str	r3, [sp, #0]
 800699e:	4629      	mov	r1, r5
 80069a0:	23f0      	movs	r3, #240	; 0xf0
 80069a2:	f7fc f80f 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80069a6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80069a8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80069ac:	66a3      	str	r3, [r4, #104]	; 0x68
 80069ae:	4649      	mov	r1, r9
 80069b0:	4630      	mov	r0, r6
 80069b2:	f009 f9cd 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80069b6:	462a      	mov	r2, r5
 80069b8:	4640      	mov	r0, r8
 80069ba:	4629      	mov	r1, r5
 80069bc:	f7fb fff5 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80069c0:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80069c2:	4640      	mov	r0, r8
 80069c4:	a90a      	add	r1, sp, #40	; 0x28
 80069c6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80069ca:	f00b ff50 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80069ce:	4641      	mov	r1, r8
 80069d0:	4630      	mov	r0, r6
 80069d2:	f009 f9bd 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80069d6:	ee18 0a10 	vmov	r0, s16
 80069da:	f240 1201 	movw	r2, #257	; 0x101
 80069de:	2121      	movs	r1, #33	; 0x21
 80069e0:	f7fb ffe3 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80069e4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80069e6:	aa0a      	add	r2, sp, #40	; 0x28
 80069e8:	a909      	add	r1, sp, #36	; 0x24
 80069ea:	ee18 0a10 	vmov	r0, s16
 80069ee:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80069f2:	2302      	movs	r3, #2
 80069f4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80069f8:	f00b fd43 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80069fc:	231d      	movs	r3, #29
        updateTextPosition();
 80069fe:	ee18 0a10 	vmov	r0, s16
 8006a02:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006a06:	f7fc f825 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006a0a:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8006a0e:	3314      	adds	r3, #20
        color = col;
 8006a10:	f04f 39ff 	mov.w	r9, #4294967295
 8006a14:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006a18:	ee18 1a10 	vmov	r1, s16
 8006a1c:	4630      	mov	r0, r6
        colorPressed = col;
 8006a1e:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006a22:	f009 f995 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006a26:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006a2a:	223c      	movs	r2, #60	; 0x3c
 8006a2c:	ee18 0a90 	vmov	r0, s17
 8006a30:	2117      	movs	r1, #23
 8006a32:	f7fb ffba 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8006a36:	ee18 1a90 	vmov	r1, s17
 8006a3a:	4640      	mov	r0, r8
        color = newColor;
 8006a3c:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006a40:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006a44:	f00b f89e 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006a48:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006a4c:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006a50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006a54:	4b4c      	ldr	r3, [pc, #304]	; (8006b88 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8006a56:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 8006a58:	ee18 0a90 	vmov	r0, s17
 8006a5c:	231e      	movs	r3, #30
 8006a5e:	a90a      	add	r1, sp, #40	; 0x28
 8006a60:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006a64:	f00b fb28 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a68:	ee18 1a90 	vmov	r1, s17
 8006a6c:	4630      	mov	r0, r6
 8006a6e:	f009 f96f 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006a72:	230a      	movs	r3, #10
 8006a74:	9300      	str	r3, [sp, #0]
 8006a76:	2232      	movs	r2, #50	; 0x32
 8006a78:	23f0      	movs	r3, #240	; 0xf0
 8006a7a:	4629      	mov	r1, r5
 8006a7c:	4638      	mov	r0, r7
 8006a7e:	f7fb ffa1 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006a82:	9b03      	ldr	r3, [sp, #12]
 8006a84:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a88:	22a0      	movs	r2, #160	; 0xa0
 8006a8a:	4611      	mov	r1, r2
 8006a8c:	4638      	mov	r0, r7
 8006a8e:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006a92:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006a96:	f00a fec9 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006a9a:	22a0      	movs	r2, #160	; 0xa0
 8006a9c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006aa0:	4638      	mov	r0, r7
 8006aa2:	f00a fece 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006aa6:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006aaa:	2b20      	cmp	r3, #32
 8006aac:	d005      	beq.n	8006aba <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8006aae:	2320      	movs	r3, #32
 8006ab0:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006ab4:	4638      	mov	r0, r7
 8006ab6:	f00a fdc3 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006aba:	4638      	mov	r0, r7
 8006abc:	2101      	movs	r1, #1
 8006abe:	f00a fecb 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006ac2:	4639      	mov	r1, r7
 8006ac4:	4630      	mov	r0, r6
 8006ac6:	f009 f943 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006aca:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006acc:	2223      	movs	r2, #35	; 0x23
 8006ace:	4658      	mov	r0, fp
        color = newColor;
 8006ad0:	f04f 39ff 	mov.w	r9, #4294967295
 8006ad4:	2145      	movs	r1, #69	; 0x45
 8006ad6:	f7fb ff68 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006ada:	4659      	mov	r1, fp
 8006adc:	4640      	mov	r0, r8
        color = newColor;
 8006ade:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 8006ae2:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006ae6:	f00b f84d 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006aea:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006aee:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 8006af2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006af6:	4f24      	ldr	r7, [pc, #144]	; (8006b88 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8006af8:	970a      	str	r7, [sp, #40]	; 0x28
 8006afa:	231f      	movs	r3, #31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006afc:	a90a      	add	r1, sp, #40	; 0x28
 8006afe:	4658      	mov	r0, fp
 8006b00:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b04:	f00b fad8 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b08:	4659      	mov	r1, fp
 8006b0a:	4630      	mov	r0, r6
 8006b0c:	f009 f920 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006b10:	220c      	movs	r2, #12
 8006b12:	4650      	mov	r0, sl
 8006b14:	2136      	movs	r1, #54	; 0x36
 8006b16:	f7fb ff48 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8006b1a:	4651      	mov	r1, sl
 8006b1c:	4640      	mov	r0, r8
        color = newColor;
 8006b1e:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 8006b22:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006b26:	f00b f82d 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006b2a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006b2e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006b32:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b36:	2320      	movs	r3, #32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8006b38:	a90a      	add	r1, sp, #40	; 0x28
 8006b3a:	4650      	mov	r0, sl
 8006b3c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006b40:	970a      	str	r7, [sp, #40]	; 0x28
 8006b42:	f00b fab9 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b46:	4651      	mov	r1, sl
 8006b48:	4630      	mov	r0, r6
 8006b4a:	f009 f901 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006b4e:	ee19 0a10 	vmov	r0, s18
 8006b52:	224e      	movs	r2, #78	; 0x4e
 8006b54:	4629      	mov	r1, r5
 8006b56:	f7fb ff28 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8006b5a:	4630      	mov	r0, r6
 8006b5c:	ee19 1a10 	vmov	r1, s18
 8006b60:	f009 f8f6 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006b64:	4620      	mov	r0, r4
 8006b66:	b00d      	add	sp, #52	; 0x34
 8006b68:	ecbd 8b04 	vpop	{d8-d9}
 8006b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b70:	0802d218 	.word	0x0802d218
 8006b74:	0802e098 	.word	0x0802e098
 8006b78:	0802e260 	.word	0x0802e260
 8006b7c:	0802ddcc 	.word	0x0802ddcc
 8006b80:	0802d200 	.word	0x0802d200
 8006b84:	08006853 	.word	0x08006853
 8006b88:	0802b750 	.word	0x0802b750

08006b8c <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8006b8c:	4770      	bx	lr

08006b8e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006b8e:	4770      	bx	lr

08006b90 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006b90:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006b92:	68c2      	ldr	r2, [r0, #12]
 8006b94:	6844      	ldr	r4, [r0, #4]
 8006b96:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006b98:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006b9a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006b9e:	07d2      	lsls	r2, r2, #31
 8006ba0:	bf48      	it	mi
 8006ba2:	5962      	ldrmi	r2, [r4, r5]
 8006ba4:	689b      	ldr	r3, [r3, #8]
    }
 8006ba6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006ba8:	bf48      	it	mi
 8006baa:	58d3      	ldrmi	r3, [r2, r3]
 8006bac:	4718      	bx	r3

08006bae <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006bae:	6843      	ldr	r3, [r0, #4]
 8006bb0:	b12b      	cbz	r3, 8006bbe <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006bb2:	6883      	ldr	r3, [r0, #8]
 8006bb4:	b92b      	cbnz	r3, 8006bc2 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006bb6:	68c0      	ldr	r0, [r0, #12]
 8006bb8:	f000 0001 	and.w	r0, r0, #1
 8006bbc:	4770      	bx	lr
 8006bbe:	4618      	mov	r0, r3
 8006bc0:	4770      	bx	lr
 8006bc2:	2001      	movs	r0, #1
    }
 8006bc4:	4770      	bx	lr

08006bc6 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006bc6:	b510      	push	{r4, lr}
 8006bc8:	2110      	movs	r1, #16
 8006bca:	4604      	mov	r4, r0
 8006bcc:	f022 f9db 	bl	8028f86 <_ZdlPvj>
 8006bd0:	4620      	mov	r0, r4
 8006bd2:	bd10      	pop	{r4, pc}

08006bd4 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006bd4:	b510      	push	{r4, lr}
 8006bd6:	4b03      	ldr	r3, [pc, #12]	; (8006be4 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006bd8:	6003      	str	r3, [r0, #0]
 8006bda:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006bdc:	f00c fe4e 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006be0:	4620      	mov	r0, r4
 8006be2:	bd10      	pop	{r4, pc}
 8006be4:	0802d264 	.word	0x0802d264

08006be8 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006be8:	b507      	push	{r0, r1, r2, lr}
 8006bea:	4b07      	ldr	r3, [pc, #28]	; (8006c08 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006bec:	6003      	str	r3, [r0, #0]
 8006bee:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006bf0:	f00c fe44 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006bf4:	9801      	ldr	r0, [sp, #4]
 8006bf6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006bfa:	f022 f9c4 	bl	8028f86 <_ZdlPvj>
 8006bfe:	9801      	ldr	r0, [sp, #4]
 8006c00:	b003      	add	sp, #12
 8006c02:	f85d fb04 	ldr.w	pc, [sp], #4
 8006c06:	bf00      	nop
 8006c08:	0802d264 	.word	0x0802d264

08006c0c <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006c0c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006c0e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8006c12:	4299      	cmp	r1, r3
{
 8006c14:	4604      	mov	r4, r0
 8006c16:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006c18:	d103      	bne.n	8006c22 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006c1a:	f00e fb31 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8006c1e:	f7fc ffeb 	bl	8003bf8 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 8006c22:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006c26:	429d      	cmp	r5, r3
 8006c28:	d103      	bne.n	8006c32 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006c2a:	f00e fb29 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 8006c2e:	f7fd f803 	bl	8003c38 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8006c32:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006c36:	42a5      	cmp	r5, r4
 8006c38:	d105      	bne.n	8006c46 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006c3a:	f00e fb21 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 8006c3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 8006c42:	f7fd b809 	b.w	8003c58 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 8006c46:	bd38      	pop	{r3, r4, r5, pc}

08006c48 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8006c48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c4c:	ed2d 8b06 	vpush	{d8-d10}
 8006c50:	4604      	mov	r4, r0
 8006c52:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 8006c54:	46a3      	mov	fp, r4
 8006c56:	2500      	movs	r5, #0
 8006c58:	f00f ff92 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 8006c5c:	4b66      	ldr	r3, [pc, #408]	; (8006df8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8006c5e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006c60:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006c64:	2226      	movs	r2, #38	; 0x26
 8006c66:	4629      	mov	r1, r5
 8006c68:	4658      	mov	r0, fp
 8006c6a:	f023 f9a4 	bl	8029fb6 <memset>
 8006c6e:	4658      	mov	r0, fp
 8006c70:	f7fb febc 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8006c74:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006c78:	26ff      	movs	r6, #255	; 0xff
 8006c7a:	4b60      	ldr	r3, [pc, #384]	; (8006dfc <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8006c7c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006c7e:	2226      	movs	r2, #38	; 0x26
 8006c80:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006c84:	4629      	mov	r1, r5
 8006c86:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006c8a:	4650      	mov	r0, sl
 8006c8c:	66a5      	str	r5, [r4, #104]	; 0x68
 8006c8e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c92:	f023 f990 	bl	8029fb6 <memset>
 8006c96:	4650      	mov	r0, sl
 8006c98:	f7fb fea8 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8006c9c:	4b58      	ldr	r3, [pc, #352]	; (8006e00 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8006c9e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006ca0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006ca4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006ca8:	a90a      	add	r1, sp, #40	; 0x28
 8006caa:	4650      	mov	r0, sl
 8006cac:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006cb0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006cb4:	f00b fddb 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006cb8:	4648      	mov	r0, r9
 8006cba:	f7fb fea9 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006cbe:	4b51      	ldr	r3, [pc, #324]	; (8006e04 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006cc0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006cc4:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006cc8:	4618      	mov	r0, r3
 8006cca:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006cce:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006cd2:	ee08 3a90 	vmov	s17, r3
 8006cd6:	f7fb fe9b 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8006cda:	4638      	mov	r0, r7
 8006cdc:	f00a fc90 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 8006ce0:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006ce4:	4618      	mov	r0, r3
 8006ce6:	9303      	str	r3, [sp, #12]
 8006ce8:	f7fa fb6a 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006cec:	4b46      	ldr	r3, [pc, #280]	; (8006e08 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006cee:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006cf2:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006cf6:	3324      	adds	r3, #36	; 0x24
 8006cf8:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006cfc:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006d00:	4640      	mov	r0, r8
 8006d02:	f7fb fe85 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8006d06:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006d0a:	4618      	mov	r0, r3
 8006d0c:	ee08 3a10 	vmov	s16, r3
 8006d10:	f7fb fe7e 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8006d14:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006d18:	4618      	mov	r0, r3
 8006d1a:	ee09 3a10 	vmov	s18, r3
 8006d1e:	f00b fee7 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006d22:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006d26:	4618      	mov	r0, r3
 8006d28:	ee09 3a90 	vmov	s19, r3
 8006d2c:	f00b fee0 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006d30:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006d34:	4618      	mov	r0, r3
 8006d36:	ee0a 3a10 	vmov	s20, r3
 8006d3a:	f00b fed9 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006d3e:	4a33      	ldr	r2, [pc, #204]	; (8006e0c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006d40:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006d44:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006d48:	4a31      	ldr	r2, [pc, #196]	; (8006e10 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006d4a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006d4e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006d52:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006d56:	f00c fd87 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006d5a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006d5e:	462a      	mov	r2, r5
 8006d60:	4658      	mov	r0, fp
 8006d62:	9300      	str	r3, [sp, #0]
 8006d64:	4629      	mov	r1, r5
 8006d66:	23f0      	movs	r3, #240	; 0xf0
 8006d68:	f7fb fe2c 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006d6c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006d6e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006d72:	66a3      	str	r3, [r4, #104]	; 0x68
 8006d74:	4659      	mov	r1, fp
 8006d76:	4630      	mov	r0, r6
 8006d78:	f008 ffea 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006d7c:	462a      	mov	r2, r5
 8006d7e:	4650      	mov	r0, sl
 8006d80:	4629      	mov	r1, r5
 8006d82:	f7fb fe12 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8006d86:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006d88:	4650      	mov	r0, sl
 8006d8a:	a90a      	add	r1, sp, #40	; 0x28
 8006d8c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006d90:	f00b fd6d 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d94:	4651      	mov	r1, sl
 8006d96:	4630      	mov	r0, r6
 8006d98:	f008 ffda 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006d9c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006da0:	2156      	movs	r1, #86	; 0x56
 8006da2:	4648      	mov	r0, r9
 8006da4:	f7fb fe01 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006da8:	f04f 33ff 	mov.w	r3, #4294967295
 8006dac:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006db0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006db4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006db8:	f10d 0b10 	add.w	fp, sp, #16
 8006dbc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006dc0:	4649      	mov	r1, r9
 8006dc2:	4658      	mov	r0, fp
 8006dc4:	4798      	blx	r3
 8006dc6:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006dca:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006dce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006dd2:	4b10      	ldr	r3, [pc, #64]	; (8006e14 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006dd4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8006dd6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006dda:	b92b      	cbnz	r3, 8006de8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006ddc:	4b0e      	ldr	r3, [pc, #56]	; (8006e18 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006dde:	4a0f      	ldr	r2, [pc, #60]	; (8006e1c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006de0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006de2:	480f      	ldr	r0, [pc, #60]	; (8006e20 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006de4:	f022 fee2 	bl	8029bac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006de8:	4b0e      	ldr	r3, [pc, #56]	; (8006e24 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006dea:	881b      	ldrh	r3, [r3, #0]
 8006dec:	2b18      	cmp	r3, #24
 8006dee:	d81d      	bhi.n	8006e2c <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006df0:	4b0d      	ldr	r3, [pc, #52]	; (8006e28 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006df2:	4a0a      	ldr	r2, [pc, #40]	; (8006e1c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006df4:	2161      	movs	r1, #97	; 0x61
 8006df6:	e7f4      	b.n	8006de2 <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8006df8:	0802d264 	.word	0x0802d264
 8006dfc:	0802e098 	.word	0x0802e098
 8006e00:	0802e260 	.word	0x0802e260
 8006e04:	0802b760 	.word	0x0802b760
 8006e08:	0802ddcc 	.word	0x0802ddcc
 8006e0c:	0802d24c 	.word	0x0802d24c
 8006e10:	08006c0d 	.word	0x08006c0d
 8006e14:	20012ecc 	.word	0x20012ecc
 8006e18:	0802b5a0 	.word	0x0802b5a0
 8006e1c:	0802b6a2 	.word	0x0802b6a2
 8006e20:	0802b61d 	.word	0x0802b61d
 8006e24:	20012ed0 	.word	0x20012ed0
 8006e28:	0802b664 	.word	0x0802b664
        return texts->getText(typedTextId);
 8006e2c:	4b96      	ldr	r3, [pc, #600]	; (8007088 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006e2e:	2118      	movs	r1, #24
 8006e30:	6818      	ldr	r0, [r3, #0]
 8006e32:	f001 fab5 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8006e36:	4a95      	ldr	r2, [pc, #596]	; (800708c <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8006e38:	4603      	mov	r3, r0
 8006e3a:	2104      	movs	r1, #4
 8006e3c:	4650      	mov	r0, sl
 8006e3e:	f011 fb83 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006e42:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006e46:	4648      	mov	r0, r9
 8006e48:	f00b f916 	bl	8012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006e4c:	f8df a240 	ldr.w	sl, [pc, #576]	; 8007090 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006e50:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006e54:	2319      	movs	r3, #25
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8006e56:	a90a      	add	r1, sp, #40	; 0x28
 8006e58:	4648      	mov	r0, r9
 8006e5a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006e5e:	f00b f92b 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e62:	4649      	mov	r1, r9
 8006e64:	4630      	mov	r0, r6
 8006e66:	f008 ff73 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8006e6a:	223c      	movs	r2, #60	; 0x3c
 8006e6c:	ee18 0a90 	vmov	r0, s17
 8006e70:	2129      	movs	r1, #41	; 0x29
 8006e72:	f7fb fd9a 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006e76:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006e7a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006e7e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006e82:	4658      	mov	r0, fp
        linespace = space;
 8006e84:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006e88:	f00a fe7c 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e8c:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006e90:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006e94:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e98:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006e9a:	eb0d 0103 	add.w	r1, sp, r3
 8006e9e:	ee18 0a90 	vmov	r0, s17
 8006ea2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006ea6:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006eaa:	f00b f905 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006eae:	ee18 1a90 	vmov	r1, s17
 8006eb2:	4630      	mov	r0, r6
 8006eb4:	f008 ff4c 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006eb8:	230a      	movs	r3, #10
 8006eba:	9300      	str	r3, [sp, #0]
 8006ebc:	2232      	movs	r2, #50	; 0x32
 8006ebe:	23f0      	movs	r3, #240	; 0xf0
 8006ec0:	4629      	mov	r1, r5
 8006ec2:	4638      	mov	r0, r7
 8006ec4:	f7fb fd7e 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ec8:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006ecc:	22a0      	movs	r2, #160	; 0xa0
 8006ece:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006ed2:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006ed6:	9b03      	ldr	r3, [sp, #12]
 8006ed8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006edc:	4611      	mov	r1, r2
 8006ede:	4638      	mov	r0, r7
 8006ee0:	f00a fca4 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006ee4:	22a0      	movs	r2, #160	; 0xa0
 8006ee6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006eea:	4638      	mov	r0, r7
 8006eec:	f00a fca9 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006ef0:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006ef4:	2b20      	cmp	r3, #32
 8006ef6:	d005      	beq.n	8006f04 <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 8006ef8:	2320      	movs	r3, #32
 8006efa:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006efe:	4638      	mov	r0, r7
 8006f00:	f00a fb9e 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006f04:	4638      	mov	r0, r7
 8006f06:	2101      	movs	r1, #1
 8006f08:	f00a fca6 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006f0c:	4639      	mov	r1, r7
 8006f0e:	4630      	mov	r0, r6
 8006f10:	f008 ff1e 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006f14:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006f18:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006f1a:	2223      	movs	r2, #35	; 0x23
 8006f1c:	4640      	mov	r0, r8
        linespace = space;
 8006f1e:	f04f 0a00 	mov.w	sl, #0
 8006f22:	2145      	movs	r1, #69	; 0x45
 8006f24:	f7fb fd41 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006f28:	4641      	mov	r1, r8
 8006f2a:	4638      	mov	r0, r7
        color = newColor;
 8006f2c:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006f30:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006f34:	f00a fe26 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006f38:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006f3c:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006f40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006f44:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007090 <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006f48:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006f4c:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006f4e:	a90a      	add	r1, sp, #40	; 0x28
 8006f50:	4640      	mov	r0, r8
 8006f52:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f56:	f00b f8af 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f5a:	4641      	mov	r1, r8
 8006f5c:	4630      	mov	r0, r6
 8006f5e:	f008 fef7 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006f62:	ee18 0a10 	vmov	r0, s16
 8006f66:	220c      	movs	r2, #12
 8006f68:	2136      	movs	r1, #54	; 0x36
 8006f6a:	f7fb fd1e 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8006f6e:	ee18 1a10 	vmov	r1, s16
 8006f72:	4638      	mov	r0, r7
        color = newColor;
 8006f74:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006f78:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006f7c:	f00a fe02 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006f80:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006f84:	ee18 3a10 	vmov	r3, s16
 8006f88:	333c      	adds	r3, #60	; 0x3c
 8006f8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006f8e:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006f90:	ee18 0a10 	vmov	r0, s16
 8006f94:	a90a      	add	r1, sp, #40	; 0x28
 8006f96:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006f9a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006f9e:	f00b f88b 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fa2:	ee18 1a10 	vmov	r1, s16
 8006fa6:	4630      	mov	r0, r6
 8006fa8:	f008 fed2 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006fac:	ee19 0a10 	vmov	r0, s18
 8006fb0:	22f0      	movs	r2, #240	; 0xf0
 8006fb2:	2121      	movs	r1, #33	; 0x21
 8006fb4:	f7fb fcf9 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8006fb8:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006fbc:	aa0a      	add	r2, sp, #40	; 0x28
 8006fbe:	f04f 0802 	mov.w	r8, #2
 8006fc2:	a909      	add	r1, sp, #36	; 0x24
 8006fc4:	ee19 0a10 	vmov	r0, s18
 8006fc8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006fcc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006fd0:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006fd4:	f00b fa55 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006fd8:	233f      	movs	r3, #63	; 0x3f
 8006fda:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006fde:	3710      	adds	r7, #16
        updateTextPosition();
 8006fe0:	ee19 0a10 	vmov	r0, s18
 8006fe4:	f7fb fd36 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006fe8:	ee19 1a10 	vmov	r1, s18
 8006fec:	4630      	mov	r0, r6
        colorPressed = col;
 8006fee:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006ff2:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006ff6:	f008 feab 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006ffa:	ee19 0a90 	vmov	r0, s19
 8006ffe:	22aa      	movs	r2, #170	; 0xaa
 8007000:	2121      	movs	r1, #33	; 0x21
 8007002:	f7fb fcd2 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007006:	aa0a      	add	r2, sp, #40	; 0x28
 8007008:	a909      	add	r1, sp, #36	; 0x24
 800700a:	ee19 0a90 	vmov	r0, s19
 800700e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007012:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007016:	f00b fa34 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800701a:	233e      	movs	r3, #62	; 0x3e
 800701c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8007020:	ee19 0a90 	vmov	r0, s19
 8007024:	f7fb fd16 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007028:	ee19 1a90 	vmov	r1, s19
 800702c:	4630      	mov	r0, r6
        colorPressed = col;
 800702e:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8007032:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8007036:	f008 fe8b 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800703a:	ee1a 0a10 	vmov	r0, s20
 800703e:	2264      	movs	r2, #100	; 0x64
 8007040:	2121      	movs	r1, #33	; 0x21
 8007042:	f7fb fcb2 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007046:	aa0a      	add	r2, sp, #40	; 0x28
 8007048:	a909      	add	r1, sp, #36	; 0x24
 800704a:	ee1a 0a10 	vmov	r0, s20
 800704e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007052:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8007056:	f00b fa14 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800705a:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 800705c:	ee1a 0a10 	vmov	r0, s20
 8007060:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8007064:	f7fb fcf6 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007068:	4630      	mov	r0, r6
        colorPressed = col;
 800706a:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 800706e:	ee1a 1a10 	vmov	r1, s20
 8007072:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8007076:	f008 fe6b 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800707a:	4620      	mov	r0, r4
 800707c:	b00d      	add	sp, #52	; 0x34
 800707e:	ecbd 8b06 	vpop	{d8-d10}
 8007082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007086:	bf00      	nop
 8007088:	20012ed8 	.word	0x20012ed8
 800708c:	0802b6da 	.word	0x0802b6da
 8007090:	0802b750 	.word	0x0802b750

08007094 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007094:	4770      	bx	lr

08007096 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8007096:	4770      	bx	lr

08007098 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call testGui
    testGui();
 8007098:	6803      	ldr	r3, [r0, #0]
 800709a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800709c:	4718      	bx	r3

0800709e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800709e:	4770      	bx	lr

080070a0 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80070a0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80070a2:	68c2      	ldr	r2, [r0, #12]
 80070a4:	6844      	ldr	r4, [r0, #4]
 80070a6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80070a8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80070aa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80070ae:	07d2      	lsls	r2, r2, #31
 80070b0:	bf48      	it	mi
 80070b2:	5962      	ldrmi	r2, [r4, r5]
 80070b4:	689b      	ldr	r3, [r3, #8]
    }
 80070b6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80070b8:	bf48      	it	mi
 80070ba:	58d3      	ldrmi	r3, [r2, r3]
 80070bc:	4718      	bx	r3

080070be <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80070be:	6843      	ldr	r3, [r0, #4]
 80070c0:	b12b      	cbz	r3, 80070ce <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80070c2:	6883      	ldr	r3, [r0, #8]
 80070c4:	b92b      	cbnz	r3, 80070d2 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80070c6:	68c0      	ldr	r0, [r0, #12]
 80070c8:	f000 0001 	and.w	r0, r0, #1
 80070cc:	4770      	bx	lr
 80070ce:	4618      	mov	r0, r3
 80070d0:	4770      	bx	lr
 80070d2:	2001      	movs	r0, #1
    }
 80070d4:	4770      	bx	lr

080070d6 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80070d6:	b510      	push	{r4, lr}
 80070d8:	2110      	movs	r1, #16
 80070da:	4604      	mov	r4, r0
 80070dc:	f021 ff53 	bl	8028f86 <_ZdlPvj>
 80070e0:	4620      	mov	r0, r4
 80070e2:	bd10      	pop	{r4, pc}

080070e4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 80070e4:	b510      	push	{r4, lr}
 80070e6:	4b03      	ldr	r3, [pc, #12]	; (80070f4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 80070e8:	6003      	str	r3, [r0, #0]
 80070ea:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80070ec:	f00c fbc6 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80070f0:	4620      	mov	r0, r4
 80070f2:	bd10      	pop	{r4, pc}
 80070f4:	0802d2b0 	.word	0x0802d2b0

080070f8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 80070f8:	b507      	push	{r0, r1, r2, lr}
 80070fa:	4b07      	ldr	r3, [pc, #28]	; (8007118 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 80070fc:	6003      	str	r3, [r0, #0]
 80070fe:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007100:	f00c fbbc 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007104:	9801      	ldr	r0, [sp, #4]
 8007106:	f241 31f4 	movw	r1, #5108	; 0x13f4
 800710a:	f021 ff3c 	bl	8028f86 <_ZdlPvj>
 800710e:	9801      	ldr	r0, [sp, #4]
 8007110:	b003      	add	sp, #12
 8007112:	f85d fb04 	ldr.w	pc, [sp], #4
 8007116:	bf00      	nop
 8007118:	0802d2b0 	.word	0x0802d2b0

0800711c <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 800711c:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8007120:	4288      	cmp	r0, r1
{
 8007122:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007124:	d105      	bne.n	8007132 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007126:	f00e f8ab 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
}
 800712a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800712e:	f7fc bd73 	b.w	8003c18 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007132:	bd08      	pop	{r3, pc}

08007134 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007138:	ed2d 8b0a 	vpush	{d8-d12}
 800713c:	4604      	mov	r4, r0
 800713e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_1PViewBase::buttonCallbackHandler)
 8007140:	46a2      	mov	sl, r4
 8007142:	2500      	movs	r5, #0
 8007144:	f00f fd1c 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 8007148:	4ba5      	ldr	r3, [pc, #660]	; (80073e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ac>)
 800714a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800714c:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8007150:	2226      	movs	r2, #38	; 0x26
 8007152:	4629      	mov	r1, r5
 8007154:	4650      	mov	r0, sl
 8007156:	f022 ff2e 	bl	8029fb6 <memset>
 800715a:	4650      	mov	r0, sl
 800715c:	f7fb fc46 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8007160:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 8007164:	26ff      	movs	r6, #255	; 0xff
 8007166:	4b9f      	ldr	r3, [pc, #636]	; (80073e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>)
 8007168:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800716a:	2226      	movs	r2, #38	; 0x26
 800716c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007170:	4629      	mov	r1, r5
 8007172:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007176:	4648      	mov	r0, r9
 8007178:	66a5      	str	r5, [r4, #104]	; 0x68
 800717a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800717e:	f022 ff1a 	bl	8029fb6 <memset>
 8007182:	4648      	mov	r0, r9
 8007184:	f7fb fc32 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8007188:	4b97      	ldr	r3, [pc, #604]	; (80073e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>)
 800718a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800718c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007190:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007194:	a90a      	add	r1, sp, #40	; 0x28
 8007196:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 800719a:	4648      	mov	r0, r9
        : Widget(), bitmap(bmp), alpha(255)
 800719c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80071a0:	f00b fb65 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80071a4:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 80071a8:	4658      	mov	r0, fp
 80071aa:	f7fb fc31 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80071ae:	f504 7820 	add.w	r8, r4, #640	; 0x280
 80071b2:	4638      	mov	r0, r7
 80071b4:	f00b f81e 	bl	80121f4 <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 80071b8:	4640      	mov	r0, r8
 80071ba:	f7fb fc29 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80071be:	4e8b      	ldr	r6, [pc, #556]	; (80073ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>)
 80071c0:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
 80071c4:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 80071c8:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80071ca:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 80071ce:	ee08 3a90 	vmov	s17, r3
        : TextArea()
 80071d2:	f7fb fc1d 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80071d6:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 80071da:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 80071de:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80071e0:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 80071e4:	ee09 3a10 	vmov	s18, r3
        : TextArea()
 80071e8:	f7fb fc12 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80071ec:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 80071f0:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 80071f4:	4618      	mov	r0, r3
 80071f6:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 80071fa:	ee0a 3a90 	vmov	s21, r3
 80071fe:	f7fb fc07 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8007202:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8007206:	4618      	mov	r0, r3
 8007208:	ee0b 3a10 	vmov	s22, r3
 800720c:	f7fb fc00 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8007210:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8007214:	4618      	mov	r0, r3
 8007216:	ee0b 3a90 	vmov	s23, r3
 800721a:	f7fb fbf9 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 800721e:	f204 433c 	addw	r3, r4, #1084	; 0x43c
 8007222:	4618      	mov	r0, r3
 8007224:	ee08 3a10 	vmov	s16, r3
 8007228:	f00a f9ea 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 800722c:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007230:	4618      	mov	r0, r3
 8007232:	9302      	str	r3, [sp, #8]
 8007234:	f7fa f8c4 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007238:	4b6d      	ldr	r3, [pc, #436]	; (80073f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 800723a:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 800723e:	3324      	adds	r3, #36	; 0x24
 8007240:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007244:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8007248:	4618      	mov	r0, r3
 800724a:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 800724e:	ee09 3a90 	vmov	s19, r3
 8007252:	f7fb fbdd 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8007256:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800725a:	4618      	mov	r0, r3
 800725c:	ee0a 3a10 	vmov	s20, r3
 8007260:	f7fb fbd6 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8007264:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8007268:	4618      	mov	r0, r3
 800726a:	ee0c 3a10 	vmov	s24, r3
 800726e:	f00b fc3f 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007272:	4a60      	ldr	r2, [pc, #384]	; (80073f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8007274:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007278:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 800727c:	4a5e      	ldr	r2, [pc, #376]	; (80073f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800727e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007282:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
 8007286:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 800728a:	f00c faed 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800728e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007292:	462a      	mov	r2, r5
 8007294:	4650      	mov	r0, sl
 8007296:	9300      	str	r3, [sp, #0]
 8007298:	4629      	mov	r1, r5
 800729a:	23f0      	movs	r3, #240	; 0xf0
 800729c:	f7fb fb92 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 80072a0:	1d26      	adds	r6, r4, #4
        color = newColor;
 80072a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80072a6:	66a3      	str	r3, [r4, #104]	; 0x68
 80072a8:	4651      	mov	r1, sl
 80072aa:	4630      	mov	r0, r6
 80072ac:	f008 fd50 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80072b0:	462a      	mov	r2, r5
 80072b2:	4648      	mov	r0, r9
 80072b4:	4629      	mov	r1, r5
 80072b6:	f7fb fb78 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80072ba:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80072bc:	4648      	mov	r0, r9
 80072be:	a90a      	add	r1, sp, #40	; 0x28
 80072c0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80072c4:	f00b fad3 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80072c8:	4649      	mov	r1, r9
 80072ca:	4630      	mov	r0, r6
 80072cc:	f008 fd40 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80072d0:	f10d 0910 	add.w	r9, sp, #16
    textArea3.setXY(31, 60);
 80072d4:	223c      	movs	r2, #60	; 0x3c
 80072d6:	211f      	movs	r1, #31
 80072d8:	4658      	mov	r0, fp
        color = newColor;
 80072da:	f04f 3aff 	mov.w	sl, #4294967295
 80072de:	f7fb fb64 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80072e2:	4659      	mov	r1, fp
 80072e4:	4648      	mov	r0, r9
        color = newColor;
 80072e6:	f8c4 a0c8 	str.w	sl, [r4, #200]	; 0xc8
        linespace = space;
 80072ea:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80072ee:	f00a fc49 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80072f2:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80072f6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80072fa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80072fe:	4b3f      	ldr	r3, [pc, #252]	; (80073fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 8007300:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8007302:	a90a      	add	r1, sp, #40	; 0x28
 8007304:	2327      	movs	r3, #39	; 0x27
 8007306:	4658      	mov	r0, fp
 8007308:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800730c:	f00a fed4 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007310:	4659      	mov	r1, fp
 8007312:	4630      	mov	r0, r6
 8007314:	f008 fd1c 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007318:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800731c:	4638      	mov	r0, r7
 800731e:	a90a      	add	r1, sp, #40	; 0x28
 8007320:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007324:	f008 fca6 	bl	800fc74 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007328:	236a      	movs	r3, #106	; 0x6a
 800732a:	4638      	mov	r0, r7
 800732c:	9300      	str	r3, [sp, #0]
 800732e:	225e      	movs	r2, #94	; 0x5e
 8007330:	23b8      	movs	r3, #184	; 0xb8
 8007332:	211c      	movs	r1, #28
 8007334:	f7fb fb46 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8007338:	225c      	movs	r2, #92	; 0x5c
 800733a:	4611      	mov	r1, r2
 800733c:	4638      	mov	r0, r7
 800733e:	f00b f804 	bl	801234a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007342:	4638      	mov	r0, r7
 8007344:	225a      	movs	r2, #90	; 0x5a
 8007346:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800734a:	f00b f883 	bl	8012454 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 800734e:	462b      	mov	r3, r5
 8007350:	225a      	movs	r2, #90	; 0x5a
 8007352:	4638      	mov	r0, r7
 8007354:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007358:	9500      	str	r5, [sp, #0]
 800735a:	f008 fb38 	bl	800f9ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 800735e:	4638      	mov	r0, r7
 8007360:	4629      	mov	r1, r5
 8007362:	f00b f821 	bl	80123a8 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007366:	2335      	movs	r3, #53	; 0x35
 8007368:	2208      	movs	r2, #8
 800736a:	4638      	mov	r0, r7
 800736c:	2105      	movs	r1, #5
 800736e:	f00a ffd7 	bl	8012320 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007372:	4638      	mov	r0, r7
 8007374:	2101      	movs	r1, #1
 8007376:	f00a ff75 	bl	8012264 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800737a:	4638      	mov	r0, r7
 800737c:	2101      	movs	r1, #1
 800737e:	f00a ff74 	bl	801226a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007382:	4639      	mov	r1, r7
 8007384:	4630      	mov	r0, r6
 8007386:	f008 fce3 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setXY(75, 230);
 800738a:	22e6      	movs	r2, #230	; 0xe6
 800738c:	214b      	movs	r1, #75	; 0x4b
 800738e:	4640      	mov	r0, r8
 8007390:	f7fb fb0b 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007394:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        color = newColor;
 8007398:	f8c4 a2b0 	str.w	sl, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 800739c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80073a0:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 80073a4:	4641      	mov	r1, r8
 80073a6:	4648      	mov	r0, r9
 80073a8:	4798      	blx	r3
 80073aa:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80073ae:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80073b2:	4f13      	ldr	r7, [pc, #76]	; (8007400 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 80073b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 80073b8:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 80073bc:	9303      	str	r3, [sp, #12]
 80073be:	683b      	ldr	r3, [r7, #0]
 80073c0:	b92b      	cbnz	r3, 80073ce <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29a>
 80073c2:	4b10      	ldr	r3, [pc, #64]	; (8007404 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 80073c4:	4a10      	ldr	r2, [pc, #64]	; (8007408 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80073c6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80073c8:	4810      	ldr	r0, [pc, #64]	; (800740c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 80073ca:	f022 fbef 	bl	8029bac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80073ce:	f8df b044 	ldr.w	fp, [pc, #68]	; 8007414 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80073d2:	f8bb 3000 	ldrh.w	r3, [fp]
 80073d6:	b9fb      	cbnz	r3, 8007418 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>
 80073d8:	4b0d      	ldr	r3, [pc, #52]	; (8007410 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 80073da:	4a0b      	ldr	r2, [pc, #44]	; (8007408 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 80073dc:	2161      	movs	r1, #97	; 0x61
 80073de:	e7f3      	b.n	80073c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x294>
 80073e0:	0802d2b0 	.word	0x0802d2b0
 80073e4:	0802e098 	.word	0x0802e098
 80073e8:	0802e260 	.word	0x0802e260
 80073ec:	0802b760 	.word	0x0802b760
 80073f0:	0802ddcc 	.word	0x0802ddcc
 80073f4:	0802d298 	.word	0x0802d298
 80073f8:	0800711d 	.word	0x0800711d
 80073fc:	0802b750 	.word	0x0802b750
 8007400:	20012ecc 	.word	0x20012ecc
 8007404:	0802b5a0 	.word	0x0802b5a0
 8007408:	0802b6a2 	.word	0x0802b6a2
 800740c:	0802b61d 	.word	0x0802b61d
 8007410:	0802b664 	.word	0x0802b664
 8007414:	20012ed0 	.word	0x20012ed0
        return texts->getText(typedTextId);
 8007418:	4bde      	ldr	r3, [pc, #888]	; (8007794 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x660>)
 800741a:	4629      	mov	r1, r5
 800741c:	6818      	ldr	r0, [r3, #0]
 800741e:	f000 ffbf 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8007422:	4add      	ldr	r2, [pc, #884]	; (8007798 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x664>)
 8007424:	4603      	mov	r3, r0
 8007426:	210a      	movs	r1, #10
 8007428:	9803      	ldr	r0, [sp, #12]
 800742a:	f011 f88d 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800742e:	9903      	ldr	r1, [sp, #12]
 8007430:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.resizeToCurrentText();
 8007434:	4640      	mov	r0, r8
 8007436:	f00a fe1f 	bl	8012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800743a:	4bd8      	ldr	r3, [pc, #864]	; (800779c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 800743c:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 800743e:	4640      	mov	r0, r8
 8007440:	2303      	movs	r3, #3
 8007442:	a90a      	add	r1, sp, #40	; 0x28
 8007444:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007448:	f00a fe36 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800744c:	4641      	mov	r1, r8
 800744e:	4630      	mov	r0, r6
 8007450:	f008 fc7e 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setXY(63, 215);
 8007454:	22d7      	movs	r2, #215	; 0xd7
 8007456:	ee18 0a90 	vmov	r0, s17
 800745a:	213f      	movs	r1, #63	; 0x3f
 800745c:	f7fb faa5 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007460:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        color = newColor;
 8007464:	f8c4 a2fc 	str.w	sl, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007468:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 800746c:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        boundingArea = calculateBoundingArea();
 8007470:	ee18 1a90 	vmov	r1, s17
 8007474:	4648      	mov	r0, r9
 8007476:	4798      	blx	r3
 8007478:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800747c:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007480:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007484:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007486:	f204 58ac 	addw	r8, r4, #1452	; 0x5ac
 800748a:	2b00      	cmp	r3, #0
 800748c:	d099      	beq.n	80073c2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x28e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800748e:	f8bb 3000 	ldrh.w	r3, [fp]
 8007492:	2b01      	cmp	r3, #1
 8007494:	d9a0      	bls.n	80073d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        return texts->getText(typedTextId);
 8007496:	4abf      	ldr	r2, [pc, #764]	; (8007794 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x660>)
 8007498:	2101      	movs	r1, #1
 800749a:	6810      	ldr	r0, [r2, #0]
 800749c:	f000 ff80 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 80074a0:	4abd      	ldr	r2, [pc, #756]	; (8007798 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x664>)
 80074a2:	4603      	mov	r3, r0
 80074a4:	210a      	movs	r1, #10
 80074a6:	4640      	mov	r0, r8
 80074a8:	f011 f84e 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Frequency.resizeToCurrentText();
 80074ac:	ee18 0a90 	vmov	r0, s17
 80074b0:	f8c4 8314 	str.w	r8, [r4, #788]	; 0x314
 80074b4:	f00a fde0 	bl	8012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80074b8:	f04f 0104 	mov.w	r1, #4
 80074bc:	4bb7      	ldr	r3, [pc, #732]	; (800779c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 80074be:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 80074c2:	ee18 0a90 	vmov	r0, s17
 80074c6:	a90a      	add	r1, sp, #40	; 0x28
 80074c8:	930a      	str	r3, [sp, #40]	; 0x28
 80074ca:	f00a fdf5 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074ce:	ee18 1a90 	vmov	r1, s17
 80074d2:	4630      	mov	r0, r6
 80074d4:	f008 fc3c 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setXY(64, 200);
 80074d8:	22c8      	movs	r2, #200	; 0xc8
 80074da:	ee19 0a10 	vmov	r0, s18
 80074de:	2140      	movs	r1, #64	; 0x40
 80074e0:	f7fb fa63 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80074e4:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        color = newColor;
 80074e8:	f8c4 a348 	str.w	sl, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 80074ec:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80074f0:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 80074f4:	ee19 1a10 	vmov	r1, s18
 80074f8:	4648      	mov	r0, r9
 80074fa:	4798      	blx	r3
 80074fc:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007500:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007504:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007508:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800750a:	f504 68b8 	add.w	r8, r4, #1472	; 0x5c0
 800750e:	2b00      	cmp	r3, #0
 8007510:	f43f af57 	beq.w	80073c2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x28e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007514:	f8bb 3000 	ldrh.w	r3, [fp]
 8007518:	2b02      	cmp	r3, #2
 800751a:	f67f af5d 	bls.w	80073d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        return texts->getText(typedTextId);
 800751e:	4a9d      	ldr	r2, [pc, #628]	; (8007794 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x660>)
        : typedTextId(id)
 8007520:	4f9e      	ldr	r7, [pc, #632]	; (800779c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
        return texts->getText(typedTextId);
 8007522:	6810      	ldr	r0, [r2, #0]
 8007524:	2102      	movs	r1, #2
 8007526:	f000 ff3b 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 800752a:	4a9b      	ldr	r2, [pc, #620]	; (8007798 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x664>)
 800752c:	4603      	mov	r3, r0
 800752e:	210a      	movs	r1, #10
 8007530:	4640      	mov	r0, r8
 8007532:	f011 f809 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    SMD1_Distance.resizeToCurrentText();
 8007536:	ee19 0a10 	vmov	r0, s18
 800753a:	f8c4 8360 	str.w	r8, [r4, #864]	; 0x360
 800753e:	f00a fd9b 	bl	8012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007542:	2305      	movs	r3, #5
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007544:	ee19 0a10 	vmov	r0, s18
 8007548:	a90a      	add	r1, sp, #40	; 0x28
 800754a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800754e:	970a      	str	r7, [sp, #40]	; 0x28
 8007550:	f00a fdb2 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007554:	ee19 1a10 	vmov	r1, s18
 8007558:	4630      	mov	r0, r6
 800755a:	f008 fbf9 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 800755e:	224c      	movs	r2, #76	; 0x4c
 8007560:	ee1a 0a90 	vmov	r0, s21
 8007564:	2171      	movs	r1, #113	; 0x71
 8007566:	f7fb fa20 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 800756a:	ee1a 1a90 	vmov	r1, s21
 800756e:	4648      	mov	r0, r9
        color = newColor;
 8007570:	f8c4 a394 	str.w	sl, [r4, #916]	; 0x394
        linespace = space;
 8007574:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007578:	f00a fb04 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800757c:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8007580:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007584:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007588:	2306      	movs	r3, #6
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800758a:	ee1a 0a90 	vmov	r0, s21
 800758e:	a90a      	add	r1, sp, #40	; 0x28
 8007590:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007594:	970a      	str	r7, [sp, #40]	; 0x28
 8007596:	f00a fd8f 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800759a:	ee1a 1a90 	vmov	r1, s21
 800759e:	4630      	mov	r0, r6
 80075a0:	f008 fbd6 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 80075a4:	22b9      	movs	r2, #185	; 0xb9
 80075a6:	ee1b 0a10 	vmov	r0, s22
 80075aa:	4629      	mov	r1, r5
 80075ac:	f7fb f9fd 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80075b0:	ee1b 1a10 	vmov	r1, s22
 80075b4:	4648      	mov	r0, r9
        color = newColor;
 80075b6:	f8c4 a3dc 	str.w	sl, [r4, #988]	; 0x3dc
        linespace = space;
 80075ba:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 80075be:	f00a fae1 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80075c2:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80075c6:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 80075ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80075ce:	2307      	movs	r3, #7
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 80075d0:	ee1b 0a10 	vmov	r0, s22
 80075d4:	a90a      	add	r1, sp, #40	; 0x28
 80075d6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80075da:	970a      	str	r7, [sp, #40]	; 0x28
 80075dc:	f00a fd6c 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80075e0:	ee1b 1a10 	vmov	r1, s22
 80075e4:	4630      	mov	r0, r6
 80075e6:	f008 fbb3 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 80075ea:	22b9      	movs	r2, #185	; 0xb9
 80075ec:	ee1b 0a90 	vmov	r0, s23
 80075f0:	21d9      	movs	r1, #217	; 0xd9
 80075f2:	f7fb f9da 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80075f6:	ee1b 1a90 	vmov	r1, s23
 80075fa:	4648      	mov	r0, r9
        color = newColor;
 80075fc:	f8c4 a424 	str.w	sl, [r4, #1060]	; 0x424
        linespace = space;
 8007600:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007604:	f00a fabe 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007608:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800760c:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007610:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007614:	2308      	movs	r3, #8
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007616:	ee1b 0a90 	vmov	r0, s23
 800761a:	a90a      	add	r1, sp, #40	; 0x28
 800761c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007620:	970a      	str	r7, [sp, #40]	; 0x28
 8007622:	f00a fd49 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007626:	ee1b 1a90 	vmov	r1, s23
 800762a:	4630      	mov	r0, r6
 800762c:	f008 fb90 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007630:	230a      	movs	r3, #10
 8007632:	ee18 0a10 	vmov	r0, s16
 8007636:	9300      	str	r3, [sp, #0]
 8007638:	2232      	movs	r2, #50	; 0x32
 800763a:	23f0      	movs	r3, #240	; 0xf0
 800763c:	4629      	mov	r1, r5
 800763e:	f7fb f9c1 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007642:	9b02      	ldr	r3, [sp, #8]
 8007644:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007648:	22a0      	movs	r2, #160	; 0xa0
 800764a:	4611      	mov	r1, r2
 800764c:	ee18 0a10 	vmov	r0, s16
 8007650:	f8c4 a4b8 	str.w	sl, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007654:	f8a4 a4bc 	strh.w	sl, [r4, #1212]	; 0x4bc
 8007658:	f00a f8e8 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800765c:	ee18 0a10 	vmov	r0, s16
 8007660:	22a0      	movs	r2, #160	; 0xa0
 8007662:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007666:	f00a f8ec 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800766a:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 800766e:	2b20      	cmp	r3, #32
 8007670:	d006      	beq.n	8007680 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x54c>
        lineWidthQ5 = widthQ5;
 8007672:	2320      	movs	r3, #32
        updateCachedShape();
 8007674:	ee18 0a10 	vmov	r0, s16
        lineWidthQ5 = widthQ5;
 8007678:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800767c:	f009 ffe0 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007680:	ee18 0a10 	vmov	r0, s16
 8007684:	2101      	movs	r1, #1
 8007686:	f00a f8e7 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800768a:	ee18 1a10 	vmov	r1, s16
 800768e:	4630      	mov	r0, r6
 8007690:	f008 fb5e 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007694:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8007698:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 800769a:	ee19 0a90 	vmov	r0, s19
 800769e:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 80076a0:	f04f 0900 	mov.w	r9, #0
 80076a4:	2145      	movs	r1, #69	; 0x45
 80076a6:	f7fb f980 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80076aa:	ee19 1a90 	vmov	r1, s19
 80076ae:	4628      	mov	r0, r5
        color = newColor;
 80076b0:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 80076b4:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 80076b8:	f00a fa64 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80076bc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80076c0:	ee19 3a90 	vmov	r3, s19
 80076c4:	333c      	adds	r3, #60	; 0x3c
 80076c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80076ca:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800779c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>
 80076ce:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80076d2:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 80076d4:	ee19 0a90 	vmov	r0, s19
 80076d8:	a90a      	add	r1, sp, #40	; 0x28
 80076da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80076de:	f00a fceb 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076e2:	ee19 1a90 	vmov	r1, s19
 80076e6:	4630      	mov	r0, r6
 80076e8:	f008 fb32 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80076ec:	ee1a 0a10 	vmov	r0, s20
 80076f0:	220c      	movs	r2, #12
 80076f2:	2136      	movs	r1, #54	; 0x36
 80076f4:	f7fb f959 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80076f8:	ee1a 1a10 	vmov	r1, s20
 80076fc:	4628      	mov	r0, r5
        color = newColor;
 80076fe:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8007702:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007706:	f00a fa3d 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800770a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800770e:	ee1a 3a10 	vmov	r3, s20
 8007712:	333c      	adds	r3, #60	; 0x3c
 8007714:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007718:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 800771a:	ee1a 0a10 	vmov	r0, s20
 800771e:	a90a      	add	r1, sp, #40	; 0x28
 8007720:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007724:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007728:	f00a fcc6 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800772c:	ee1a 1a10 	vmov	r1, s20
 8007730:	4630      	mov	r0, r6
 8007732:	f008 fb0d 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007736:	ee1c 0a10 	vmov	r0, s24
 800773a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800773e:	2121      	movs	r1, #33	; 0x21
 8007740:	f7fb f933 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007744:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007746:	aa0a      	add	r2, sp, #40	; 0x28
 8007748:	a909      	add	r1, sp, #36	; 0x24
 800774a:	ee1c 0a10 	vmov	r0, s24
 800774e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007752:	2302      	movs	r3, #2
 8007754:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007758:	f00a fe93 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800775c:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 800775e:	ee1c 0a10 	vmov	r0, s24
 8007762:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007766:	f7fb f975 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800776a:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 800776e:	3304      	adds	r3, #4
 8007770:	4630      	mov	r0, r6
 8007772:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007776:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 800777a:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 800777e:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007782:	f008 fae5 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007786:	4620      	mov	r0, r4
 8007788:	b00d      	add	sp, #52	; 0x34
 800778a:	ecbd 8b0a 	vpop	{d8-d12}
 800778e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007792:	bf00      	nop
 8007794:	20012ed8 	.word	0x20012ed8
 8007798:	0802b6da 	.word	0x0802b6da
 800779c:	0802b750 	.word	0x0802b750

080077a0 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80077a0:	4770      	bx	lr

080077a2 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80077a2:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80077a4:	68c2      	ldr	r2, [r0, #12]
 80077a6:	6844      	ldr	r4, [r0, #4]
 80077a8:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80077aa:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80077ac:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80077b0:	07d2      	lsls	r2, r2, #31
 80077b2:	bf48      	it	mi
 80077b4:	5962      	ldrmi	r2, [r4, r5]
 80077b6:	689b      	ldr	r3, [r3, #8]
    }
 80077b8:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80077ba:	bf48      	it	mi
 80077bc:	58d3      	ldrmi	r3, [r2, r3]
 80077be:	4718      	bx	r3

080077c0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80077c0:	6843      	ldr	r3, [r0, #4]
 80077c2:	b12b      	cbz	r3, 80077d0 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80077c4:	6883      	ldr	r3, [r0, #8]
 80077c6:	b92b      	cbnz	r3, 80077d4 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80077c8:	68c0      	ldr	r0, [r0, #12]
 80077ca:	f000 0001 	and.w	r0, r0, #1
 80077ce:	4770      	bx	lr
 80077d0:	4618      	mov	r0, r3
 80077d2:	4770      	bx	lr
 80077d4:	2001      	movs	r0, #1
    }
 80077d6:	4770      	bx	lr

080077d8 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80077d8:	b510      	push	{r4, lr}
 80077da:	2110      	movs	r1, #16
 80077dc:	4604      	mov	r4, r0
 80077de:	f021 fbd2 	bl	8028f86 <_ZdlPvj>
 80077e2:	4620      	mov	r0, r4
 80077e4:	bd10      	pop	{r4, pc}

080077e6 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80077e6:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80077ea:	f000 bf21 	b.w	8008630 <_ZN17Gauge_with_Values10initializeEv>

080077ee <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80077ee:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 80077f2:	4288      	cmp	r0, r1
{
 80077f4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80077f6:	d105      	bne.n	8007804 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80077f8:	f00d fd42 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 80077fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007800:	f7fc ba0a 	b.w	8003c18 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007804:	bd08      	pop	{r3, pc}
	...

08007808 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007808:	b510      	push	{r4, lr}
 800780a:	4b07      	ldr	r3, [pc, #28]	; (8007828 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 800780c:	6003      	str	r3, [r0, #0]
 800780e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007810:	f00c f834 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 8007814:	4b05      	ldr	r3, [pc, #20]	; (800782c <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 8007816:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800781a:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800781e:	f7fd fc91 	bl	8005144 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8007822:	4620      	mov	r0, r4
 8007824:	bd10      	pop	{r4, pc}
 8007826:	bf00      	nop
 8007828:	0802d300 	.word	0x0802d300
 800782c:	0802d724 	.word	0x0802d724

08007830 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007830:	b510      	push	{r4, lr}
 8007832:	4604      	mov	r4, r0
}
 8007834:	f7ff ffe8 	bl	8007808 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8007838:	4620      	mov	r0, r4
 800783a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800783e:	f021 fba2 	bl	8028f86 <_ZdlPvj>
 8007842:	4620      	mov	r0, r4
 8007844:	bd10      	pop	{r4, pc}
	...

08007848 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800784c:	ed2d 8b04 	vpush	{d8-d9}
 8007850:	4604      	mov	r4, r0
 8007852:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007854:	46a3      	mov	fp, r4
 8007856:	2500      	movs	r5, #0
 8007858:	f00f f992 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 800785c:	4bae      	ldr	r3, [pc, #696]	; (8007b18 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 800785e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007860:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007864:	2226      	movs	r2, #38	; 0x26
 8007866:	4629      	mov	r1, r5
 8007868:	4658      	mov	r0, fp
 800786a:	f022 fba4 	bl	8029fb6 <memset>
 800786e:	4658      	mov	r0, fp
 8007870:	f7fb f8bc 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8007874:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007878:	26ff      	movs	r6, #255	; 0xff
 800787a:	4ba8      	ldr	r3, [pc, #672]	; (8007b1c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 800787c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800787e:	2226      	movs	r2, #38	; 0x26
 8007880:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007884:	4629      	mov	r1, r5
 8007886:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800788a:	66a5      	str	r5, [r4, #104]	; 0x68
 800788c:	4650      	mov	r0, sl
 800788e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007892:	f022 fb90 	bl	8029fb6 <memset>
 8007896:	4650      	mov	r0, sl
 8007898:	f7fb f8a8 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 800789c:	4ba0      	ldr	r3, [pc, #640]	; (8007b20 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 800789e:	66e3      	str	r3, [r4, #108]	; 0x6c
 80078a0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80078a4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80078a8:	a90a      	add	r1, sp, #40	; 0x28
 80078aa:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80078ae:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80078b2:	4650      	mov	r0, sl
 80078b4:	f00a ffdb 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80078b8:	4638      	mov	r0, r7
 80078ba:	f009 fea1 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 80078be:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80078c2:	4618      	mov	r0, r3
 80078c4:	9303      	str	r3, [sp, #12]
 80078c6:	f7f9 fd7b 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80078ca:	4b96      	ldr	r3, [pc, #600]	; (8007b24 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 80078cc:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 80078d0:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 80078d4:	3324      	adds	r3, #36	; 0x24
 80078d6:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80078da:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80078de:	4648      	mov	r0, r9
 80078e0:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 80078e4:	f7fb f894 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80078e8:	4640      	mov	r0, r8
 80078ea:	f7fb f891 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80078ee:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80078f2:	4618      	mov	r0, r3
 80078f4:	ee08 3a10 	vmov	s16, r3
 80078f8:	f7fb f88a 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 80078fc:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007900:	4618      	mov	r0, r3
 8007902:	ee08 3a90 	vmov	s17, r3
 8007906:	f00b f8f3 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800790a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800790e:	4618      	mov	r0, r3
 8007910:	ee09 3a10 	vmov	s18, r3
 8007914:	f000 fe82 	bl	800861c <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007918:	4a83      	ldr	r2, [pc, #524]	; (8007b28 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 800791a:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800791e:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8007922:	4a82      	ldr	r2, [pc, #520]	; (8007b2c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007924:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007928:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 800792c:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8007930:	f00b ff9a 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007934:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007938:	462a      	mov	r2, r5
 800793a:	9300      	str	r3, [sp, #0]
 800793c:	4629      	mov	r1, r5
 800793e:	23f0      	movs	r3, #240	; 0xf0
 8007940:	4658      	mov	r0, fp
 8007942:	f7fb f83f 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007946:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007948:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800794c:	66a3      	str	r3, [r4, #104]	; 0x68
 800794e:	4659      	mov	r1, fp
 8007950:	4630      	mov	r0, r6
 8007952:	f008 f9fd 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007956:	462a      	mov	r2, r5
 8007958:	4629      	mov	r1, r5
 800795a:	4650      	mov	r0, sl
 800795c:	f7fb f825 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007960:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007962:	a90a      	add	r1, sp, #40	; 0x28
 8007964:	4650      	mov	r0, sl
 8007966:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800796a:	f00a ff80 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800796e:	4651      	mov	r1, sl
 8007970:	4630      	mov	r0, r6
 8007972:	f008 f9ed 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007976:	230a      	movs	r3, #10
 8007978:	9300      	str	r3, [sp, #0]
 800797a:	2232      	movs	r2, #50	; 0x32
 800797c:	23f0      	movs	r3, #240	; 0xf0
 800797e:	4629      	mov	r1, r5
 8007980:	4638      	mov	r0, r7
 8007982:	f7fb f81f 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007986:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800798a:	22a0      	movs	r2, #160	; 0xa0
 800798c:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007990:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007994:	9b03      	ldr	r3, [sp, #12]
 8007996:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800799a:	4611      	mov	r1, r2
 800799c:	4638      	mov	r0, r7
 800799e:	f009 ff45 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80079a2:	22a0      	movs	r2, #160	; 0xa0
 80079a4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80079a8:	4638      	mov	r0, r7
 80079aa:	f009 ff4a 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80079ae:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80079b2:	2b20      	cmp	r3, #32
 80079b4:	d005      	beq.n	80079c2 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 80079b6:	2320      	movs	r3, #32
 80079b8:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 80079bc:	4638      	mov	r0, r7
 80079be:	f009 fe3f 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80079c2:	4638      	mov	r0, r7
 80079c4:	2101      	movs	r1, #1
 80079c6:	f009 ff47 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80079ca:	4639      	mov	r1, r7
 80079cc:	4630      	mov	r0, r6
 80079ce:	ad04      	add	r5, sp, #16
 80079d0:	f008 f9be 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80079d4:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 80079d8:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80079dc:	2223      	movs	r2, #35	; 0x23
 80079de:	4648      	mov	r0, r9
 80079e0:	2145      	movs	r1, #69	; 0x45
 80079e2:	f7fa ffe2 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80079e6:	4649      	mov	r1, r9
 80079e8:	4628      	mov	r0, r5
        color = newColor;
 80079ea:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 80079ee:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 80079f2:	f00a f8c7 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80079f6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80079fa:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 80079fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007a02:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007b30 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8007a06:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007a0a:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007a0c:	a90a      	add	r1, sp, #40	; 0x28
 8007a0e:	4648      	mov	r0, r9
 8007a10:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a14:	f00a fb50 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a18:	4649      	mov	r1, r9
 8007a1a:	4630      	mov	r0, r6
 8007a1c:	f008 f998 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007a20:	223c      	movs	r2, #60	; 0x3c
 8007a22:	4640      	mov	r0, r8
 8007a24:	211f      	movs	r1, #31
 8007a26:	f7fa ffc0 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007a2a:	4641      	mov	r1, r8
 8007a2c:	4628      	mov	r0, r5
        color = newColor;
 8007a2e:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8007a32:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007a36:	f00a f8a5 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a3a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007a3e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007a42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a46:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8007a48:	a90a      	add	r1, sp, #40	; 0x28
 8007a4a:	4640      	mov	r0, r8
 8007a4c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a50:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007a54:	f00a fb30 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a58:	4641      	mov	r1, r8
 8007a5a:	4630      	mov	r0, r6
 8007a5c:	f008 f978 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007a60:	ee18 0a10 	vmov	r0, s16
 8007a64:	220c      	movs	r2, #12
 8007a66:	2136      	movs	r1, #54	; 0x36
 8007a68:	f7fa ff9f 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007a6c:	ee18 1a10 	vmov	r1, s16
 8007a70:	4628      	mov	r0, r5
        color = newColor;
 8007a72:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007a76:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8007a7a:	f00a f883 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007a7e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007a82:	ee18 3a10 	vmov	r3, s16
 8007a86:	333c      	adds	r3, #60	; 0x3c
 8007a88:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007a8c:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8007a8e:	ee18 0a10 	vmov	r0, s16
 8007a92:	a90a      	add	r1, sp, #40	; 0x28
 8007a94:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a98:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007a9c:	f00a fb0c 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007aa0:	ee18 1a10 	vmov	r1, s16
 8007aa4:	4630      	mov	r0, r6
 8007aa6:	f008 f953 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8007aaa:	ee18 0a90 	vmov	r0, s17
 8007aae:	f240 1201 	movw	r2, #257	; 0x101
 8007ab2:	2121      	movs	r1, #33	; 0x21
 8007ab4:	f7fa ff79 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007ab8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007aba:	aa0a      	add	r2, sp, #40	; 0x28
 8007abc:	a909      	add	r1, sp, #36	; 0x24
 8007abe:	ee18 0a90 	vmov	r0, s17
 8007ac2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007ac6:	2302      	movs	r3, #2
 8007ac8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007acc:	f00a fcd9 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007ad0:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 8007ad2:	ee18 0a90 	vmov	r0, s17
 8007ad6:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8007ada:	f7fa ffbb 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007ade:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8007ae2:	3314      	adds	r3, #20
 8007ae4:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8007ae8:	ee18 1a90 	vmov	r1, s17
 8007aec:	4630      	mov	r0, r6
        colorPressed = col;
 8007aee:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8007af2:	f008 f92d 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8007af6:	ee19 0a10 	vmov	r0, s18
 8007afa:	224e      	movs	r2, #78	; 0x4e
 8007afc:	4651      	mov	r1, sl
 8007afe:	f7fa ff54 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007b02:	4630      	mov	r0, r6
 8007b04:	ee19 1a10 	vmov	r1, s18
 8007b08:	f008 f922 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007b0c:	4620      	mov	r0, r4
 8007b0e:	b00d      	add	sp, #52	; 0x34
 8007b10:	ecbd 8b04 	vpop	{d8-d9}
 8007b14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007b18:	0802d300 	.word	0x0802d300
 8007b1c:	0802e098 	.word	0x0802e098
 8007b20:	0802e260 	.word	0x0802e260
 8007b24:	0802ddcc 	.word	0x0802ddcc
 8007b28:	0802d2e8 	.word	0x0802d2e8
 8007b2c:	080077ef 	.word	0x080077ef
 8007b30:	0802b750 	.word	0x0802b750

08007b34 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 8007b34:	4770      	bx	lr

08007b36 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007b36:	4770      	bx	lr

08007b38 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007b38:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007b3a:	68c2      	ldr	r2, [r0, #12]
 8007b3c:	6844      	ldr	r4, [r0, #4]
 8007b3e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007b40:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007b42:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007b46:	07d2      	lsls	r2, r2, #31
 8007b48:	bf48      	it	mi
 8007b4a:	5962      	ldrmi	r2, [r4, r5]
 8007b4c:	689b      	ldr	r3, [r3, #8]
    }
 8007b4e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007b50:	bf48      	it	mi
 8007b52:	58d3      	ldrmi	r3, [r2, r3]
 8007b54:	4718      	bx	r3

08007b56 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007b56:	6843      	ldr	r3, [r0, #4]
 8007b58:	b12b      	cbz	r3, 8007b66 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007b5a:	6883      	ldr	r3, [r0, #8]
 8007b5c:	b92b      	cbnz	r3, 8007b6a <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007b5e:	68c0      	ldr	r0, [r0, #12]
 8007b60:	f000 0001 	and.w	r0, r0, #1
 8007b64:	4770      	bx	lr
 8007b66:	4618      	mov	r0, r3
 8007b68:	4770      	bx	lr
 8007b6a:	2001      	movs	r0, #1
    }
 8007b6c:	4770      	bx	lr

08007b6e <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007b6e:	b510      	push	{r4, lr}
 8007b70:	2110      	movs	r1, #16
 8007b72:	4604      	mov	r4, r0
 8007b74:	f021 fa07 	bl	8028f86 <_ZdlPvj>
 8007b78:	4620      	mov	r0, r4
 8007b7a:	bd10      	pop	{r4, pc}

08007b7c <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007b7c:	b510      	push	{r4, lr}
 8007b7e:	4b03      	ldr	r3, [pc, #12]	; (8007b8c <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007b80:	6003      	str	r3, [r0, #0]
 8007b82:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007b84:	f00b fe7a 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007b88:	4620      	mov	r0, r4
 8007b8a:	bd10      	pop	{r4, pc}
 8007b8c:	0802d34c 	.word	0x0802d34c

08007b90 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007b90:	b507      	push	{r0, r1, r2, lr}
 8007b92:	4b07      	ldr	r3, [pc, #28]	; (8007bb0 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007b94:	6003      	str	r3, [r0, #0]
 8007b96:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007b98:	f00b fe70 	bl	801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007b9c:	9801      	ldr	r0, [sp, #4]
 8007b9e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007ba2:	f021 f9f0 	bl	8028f86 <_ZdlPvj>
 8007ba6:	9801      	ldr	r0, [sp, #4]
 8007ba8:	b003      	add	sp, #12
 8007baa:	f85d fb04 	ldr.w	pc, [sp], #4
 8007bae:	bf00      	nop
 8007bb0:	0802d34c 	.word	0x0802d34c

08007bb4 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007bb4:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007bb8:	4288      	cmp	r0, r1
{
 8007bba:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007bbc:	d105      	bne.n	8007bca <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007bbe:	f00d fb5f 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007bc2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007bc6:	f7fb bff7 	b.w	8003bb8 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8007bca:	bd08      	pop	{r3, pc}

08007bcc <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8007bcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007bd0:	ed2d 8b04 	vpush	{d8-d9}
 8007bd4:	4604      	mov	r4, r0
 8007bd6:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007bd8:	46a3      	mov	fp, r4
 8007bda:	2500      	movs	r5, #0
 8007bdc:	f00e ffd0 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 8007be0:	4bd1      	ldr	r3, [pc, #836]	; (8007f28 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8007be2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007be4:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007be8:	2226      	movs	r2, #38	; 0x26
 8007bea:	4629      	mov	r1, r5
 8007bec:	4658      	mov	r0, fp
 8007bee:	f022 f9e2 	bl	8029fb6 <memset>
 8007bf2:	4658      	mov	r0, fp
 8007bf4:	f7fa fefa 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8007bf8:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007bfc:	26ff      	movs	r6, #255	; 0xff
 8007bfe:	4bcb      	ldr	r3, [pc, #812]	; (8007f2c <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007c00:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007c02:	2226      	movs	r2, #38	; 0x26
 8007c04:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007c08:	4629      	mov	r1, r5
 8007c0a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007c0e:	4650      	mov	r0, sl
 8007c10:	66a5      	str	r5, [r4, #104]	; 0x68
 8007c12:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007c16:	f022 f9ce 	bl	8029fb6 <memset>
 8007c1a:	4650      	mov	r0, sl
 8007c1c:	f7fa fee6 	bl	80029ec <_ZN8touchgfx6WidgetC1Ev>
 8007c20:	4bc3      	ldr	r3, [pc, #780]	; (8007f30 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 8007c22:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007c24:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007c28:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007c2c:	a90a      	add	r1, sp, #40	; 0x28
 8007c2e:	4650      	mov	r0, sl
 8007c30:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007c34:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007c38:	f00a fe19 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007c3c:	4648      	mov	r0, r9
 8007c3e:	f7fa fee7 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8007c42:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8007c46:	4bbb      	ldr	r3, [pc, #748]	; (8007f34 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 8007c48:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007c4c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007c50:	4638      	mov	r0, r7
 8007c52:	f009 fcd5 	bl	8011600 <_ZN8touchgfx4LineC1Ev>
 8007c56:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007c5a:	4618      	mov	r0, r3
 8007c5c:	9303      	str	r3, [sp, #12]
 8007c5e:	f7f9 fbaf 	bl	80013c0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007c62:	4bb5      	ldr	r3, [pc, #724]	; (8007f38 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 8007c64:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007c68:	3324      	adds	r3, #36	; 0x24
 8007c6a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8007c6e:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007c72:	4618      	mov	r0, r3
 8007c74:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007c78:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007c7c:	ee09 3a10 	vmov	s18, r3
 8007c80:	f00a ff36 	bl	8012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007c84:	4640      	mov	r0, r8
 8007c86:	f7fa fec3 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8007c8a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007c8e:	4618      	mov	r0, r3
 8007c90:	ee08 3a10 	vmov	s16, r3
 8007c94:	f7fa febc 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
 8007c98:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007c9c:	4618      	mov	r0, r3
 8007c9e:	ee08 3a90 	vmov	s17, r3
 8007ca2:	f7fa feb5 	bl	8002a10 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007ca6:	4aa5      	ldr	r2, [pc, #660]	; (8007f3c <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007ca8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007cac:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007cb0:	4aa3      	ldr	r2, [pc, #652]	; (8007f40 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007cb2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007cb6:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007cba:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007cbe:	f00b fdd3 	bl	8013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007cc2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007cc6:	462a      	mov	r2, r5
 8007cc8:	4658      	mov	r0, fp
 8007cca:	9300      	str	r3, [sp, #0]
 8007ccc:	4629      	mov	r1, r5
 8007cce:	23f0      	movs	r3, #240	; 0xf0
 8007cd0:	f7fa fe78 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007cd4:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007cd6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007cda:	66a3      	str	r3, [r4, #104]	; 0x68
 8007cdc:	4659      	mov	r1, fp
 8007cde:	4630      	mov	r0, r6
 8007ce0:	f008 f836 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007ce4:	462a      	mov	r2, r5
 8007ce6:	4650      	mov	r0, sl
 8007ce8:	4629      	mov	r1, r5
 8007cea:	f7fa fe5e 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007cee:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007cf0:	4650      	mov	r0, sl
 8007cf2:	a90a      	add	r1, sp, #40	; 0x28
 8007cf4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007cf8:	f00a fdb9 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007cfc:	4651      	mov	r1, sl
 8007cfe:	4630      	mov	r0, r6
 8007d00:	f008 f826 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007d04:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007d08:	2156      	movs	r1, #86	; 0x56
 8007d0a:	4648      	mov	r0, r9
 8007d0c:	f7fa fe4d 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007d10:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007d14:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007d18:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007d1c:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007d20:	4650      	mov	r0, sl
 8007d22:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007d26:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007d2a:	4649      	mov	r1, r9
 8007d2c:	4798      	blx	r3
 8007d2e:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007d32:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007d36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007d3a:	4b82      	ldr	r3, [pc, #520]	; (8007f44 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007d3c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007d3e:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007d42:	b92b      	cbnz	r3, 8007d50 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007d44:	4b80      	ldr	r3, [pc, #512]	; (8007f48 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007d46:	4a81      	ldr	r2, [pc, #516]	; (8007f4c <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007d48:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007d4a:	4881      	ldr	r0, [pc, #516]	; (8007f50 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007d4c:	f021 ff2e 	bl	8029bac <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007d50:	4b80      	ldr	r3, [pc, #512]	; (8007f54 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007d52:	881b      	ldrh	r3, [r3, #0]
 8007d54:	2b12      	cmp	r3, #18
 8007d56:	d803      	bhi.n	8007d60 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007d58:	4b7f      	ldr	r3, [pc, #508]	; (8007f58 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007d5a:	4a7c      	ldr	r2, [pc, #496]	; (8007f4c <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007d5c:	2161      	movs	r1, #97	; 0x61
 8007d5e:	e7f4      	b.n	8007d4a <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007d60:	4b7e      	ldr	r3, [pc, #504]	; (8007f5c <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007d62:	2112      	movs	r1, #18
 8007d64:	6818      	ldr	r0, [r3, #0]
 8007d66:	f000 fb1b 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8007d6a:	4a7d      	ldr	r2, [pc, #500]	; (8007f60 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007d6c:	4603      	mov	r3, r0
 8007d6e:	2104      	movs	r1, #4
 8007d70:	4650      	mov	r0, sl
 8007d72:	f010 fbe9 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007d76:	4648      	mov	r0, r9
        wc1 = value;
 8007d78:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007d7c:	f00a f97c 	bl	8012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007d80:	4b78      	ldr	r3, [pc, #480]	; (8007f64 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007d82:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007d84:	a90a      	add	r1, sp, #40	; 0x28
 8007d86:	2313      	movs	r3, #19
 8007d88:	4648      	mov	r0, r9
 8007d8a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d8e:	f00a f993 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d92:	4649      	mov	r1, r9
 8007d94:	4630      	mov	r0, r6
 8007d96:	f007 ffdb 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007d9a:	230a      	movs	r3, #10
 8007d9c:	9300      	str	r3, [sp, #0]
 8007d9e:	2232      	movs	r2, #50	; 0x32
 8007da0:	23f0      	movs	r3, #240	; 0xf0
 8007da2:	4629      	mov	r1, r5
 8007da4:	4638      	mov	r0, r7
 8007da6:	f7fa fe0d 	bl	80029c4 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007daa:	9b03      	ldr	r3, [sp, #12]
 8007dac:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007db0:	22a0      	movs	r2, #160	; 0xa0
 8007db2:	4611      	mov	r1, r2
 8007db4:	4638      	mov	r0, r7
 8007db6:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007dba:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007dbe:	f009 fd35 	bl	801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007dc2:	22a0      	movs	r2, #160	; 0xa0
 8007dc4:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007dc8:	4638      	mov	r0, r7
 8007dca:	f009 fd3a 	bl	8011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007dce:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007dd2:	2b20      	cmp	r3, #32
 8007dd4:	d005      	beq.n	8007de2 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007dd6:	2320      	movs	r3, #32
 8007dd8:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007ddc:	4638      	mov	r0, r7
 8007dde:	f009 fc2f 	bl	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007de2:	4638      	mov	r0, r7
 8007de4:	2101      	movs	r1, #1
 8007de6:	f009 fd37 	bl	8011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007dea:	4639      	mov	r1, r7
 8007dec:	4630      	mov	r0, r6
 8007dee:	f007 ffaf 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007df2:	ee19 0a10 	vmov	r0, s18
 8007df6:	22f0      	movs	r2, #240	; 0xf0
 8007df8:	2121      	movs	r1, #33	; 0x21
 8007dfa:	f7fa fdd6 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007dfe:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007e00:	aa0a      	add	r2, sp, #40	; 0x28
 8007e02:	a909      	add	r1, sp, #36	; 0x24
 8007e04:	ee19 0a10 	vmov	r0, s18
 8007e08:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007e0c:	2302      	movs	r3, #2
 8007e0e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e12:	f00a fb36 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007e16:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8007e18:	ee19 0a10 	vmov	r0, s18
 8007e1c:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007e20:	f7fa fe18 	bl	8002a54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007e24:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8007e28:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007e2c:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007e30:	ee19 1a10 	vmov	r1, s18
 8007e34:	4630      	mov	r0, r6
        colorPressed = col;
 8007e36:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8007e3a:	ad04      	add	r5, sp, #16
 8007e3c:	f007 ff88 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007e40:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007e44:	225b      	movs	r2, #91	; 0x5b
 8007e46:	4640      	mov	r0, r8
 8007e48:	2105      	movs	r1, #5
 8007e4a:	f7fa fdae 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007e4e:	4641      	mov	r1, r8
 8007e50:	4628      	mov	r0, r5
        color = newColor;
 8007e52:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007e56:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007e5a:	f009 fe93 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007e5e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007e62:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007e66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007e6a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007f64 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007e6e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007e72:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007e74:	a90a      	add	r1, sp, #40	; 0x28
 8007e76:	4640      	mov	r0, r8
 8007e78:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007e7c:	f00a f91c 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007e80:	4641      	mov	r1, r8
 8007e82:	4630      	mov	r0, r6
 8007e84:	f007 ff64 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007e88:	ee18 0a10 	vmov	r0, s16
 8007e8c:	2223      	movs	r2, #35	; 0x23
 8007e8e:	2145      	movs	r1, #69	; 0x45
 8007e90:	f7fa fd8b 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007e94:	ee18 1a10 	vmov	r1, s16
 8007e98:	4628      	mov	r0, r5
        color = newColor;
 8007e9a:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007e9e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007ea2:	f009 fe6f 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ea6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007eaa:	ee18 3a10 	vmov	r3, s16
 8007eae:	333c      	adds	r3, #60	; 0x3c
 8007eb0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007eb4:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007eb6:	ee18 0a10 	vmov	r0, s16
 8007eba:	a90a      	add	r1, sp, #40	; 0x28
 8007ebc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007ec0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007ec4:	f00a f8f8 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ec8:	ee18 1a10 	vmov	r1, s16
 8007ecc:	4630      	mov	r0, r6
 8007ece:	f007 ff3f 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007ed2:	ee18 0a90 	vmov	r0, s17
 8007ed6:	220c      	movs	r2, #12
 8007ed8:	2136      	movs	r1, #54	; 0x36
 8007eda:	f7fa fd66 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8007ede:	ee18 1a90 	vmov	r1, s17
 8007ee2:	4628      	mov	r0, r5
        color = newColor;
 8007ee4:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007ee8:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007eec:	f009 fe4a 	bl	8011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ef0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007ef4:	ee18 3a90 	vmov	r3, s17
 8007ef8:	333c      	adds	r3, #60	; 0x3c
 8007efa:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007efe:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007f00:	ee18 0a90 	vmov	r0, s17
 8007f04:	a90a      	add	r1, sp, #40	; 0x28
 8007f06:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007f0a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007f0e:	f00a f8d3 	bl	80120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007f12:	4630      	mov	r0, r6
 8007f14:	ee18 1a90 	vmov	r1, s17
 8007f18:	f007 ff1a 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007f1c:	4620      	mov	r0, r4
 8007f1e:	b00d      	add	sp, #52	; 0x34
 8007f20:	ecbd 8b04 	vpop	{d8-d9}
 8007f24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f28:	0802d34c 	.word	0x0802d34c
 8007f2c:	0802e098 	.word	0x0802e098
 8007f30:	0802e260 	.word	0x0802e260
 8007f34:	0802b760 	.word	0x0802b760
 8007f38:	0802ddcc 	.word	0x0802ddcc
 8007f3c:	0802d334 	.word	0x0802d334
 8007f40:	08007bb5 	.word	0x08007bb5
 8007f44:	20012ecc 	.word	0x20012ecc
 8007f48:	0802b5a0 	.word	0x0802b5a0
 8007f4c:	0802b6a2 	.word	0x0802b6a2
 8007f50:	0802b61d 	.word	0x0802b61d
 8007f54:	20012ed0 	.word	0x20012ed0
 8007f58:	0802b664 	.word	0x0802b664
 8007f5c:	20012ed8 	.word	0x20012ed8
 8007f60:	0802b6da 	.word	0x0802b6da
 8007f64:	0802b750 	.word	0x0802b750

08007f68 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007f68:	4770      	bx	lr

08007f6a <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007f6a:	4770      	bx	lr

08007f6c <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007f6c:	b510      	push	{r4, lr}
}
 8007f6e:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007f70:	4604      	mov	r4, r0
}
 8007f72:	f021 f808 	bl	8028f86 <_ZdlPvj>
 8007f76:	4620      	mov	r0, r4
 8007f78:	bd10      	pop	{r4, pc}
	...

08007f7c <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007f7c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007f80:	4604      	mov	r4, r0
 8007f82:	4626      	mov	r6, r4
 8007f84:	f00e fdfc 	bl	8016b80 <_ZN8touchgfx6ScreenC1Ev>
 8007f88:	2500      	movs	r5, #0
 8007f8a:	4b2e      	ldr	r3, [pc, #184]	; (8008044 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007f8c:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007f8e:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007f92:	4b2d      	ldr	r3, [pc, #180]	; (8008048 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007f94:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007f96:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007f9a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007f9e:	23ff      	movs	r3, #255	; 0xff
 8007fa0:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007fa4:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007fa8:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007fac:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007fb0:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007fb4:	4a25      	ldr	r2, [pc, #148]	; (800804c <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007fb6:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007fba:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007fbe:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007fc0:	a901      	add	r1, sp, #4
 8007fc2:	4638      	mov	r0, r7
 8007fc4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007fc8:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007fcc:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007fd0:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007fd4:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007fd8:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007fdc:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007fe0:	66a5      	str	r5, [r4, #104]	; 0x68
 8007fe2:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007fe6:	f00a fc42 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007fea:	462a      	mov	r2, r5
 8007fec:	4629      	mov	r1, r5
 8007fee:	4630      	mov	r0, r6
 8007ff0:	f7fa fcdb 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007ff4:	4630      	mov	r0, r6
 8007ff6:	21f0      	movs	r1, #240	; 0xf0
 8007ff8:	f7f9 f92e 	bl	8001258 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007ffc:	4630      	mov	r0, r6
 8007ffe:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8008002:	f7f9 f92b 	bl	800125c <_ZN8touchgfx8Drawable9setHeightEs>
 8008006:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 800800a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800800e:	66a3      	str	r3, [r4, #104]	; 0x68
 8008010:	4631      	mov	r1, r6
 8008012:	4640      	mov	r0, r8
 8008014:	f007 fe9c 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8008018:	462a      	mov	r2, r5
 800801a:	4638      	mov	r0, r7
 800801c:	f06f 0102 	mvn.w	r1, #2
 8008020:	f7fa fcc3 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8008024:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8008026:	a901      	add	r1, sp, #4
 8008028:	4638      	mov	r0, r7
 800802a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800802e:	f00a fc1e 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008032:	4640      	mov	r0, r8
 8008034:	4639      	mov	r1, r7
 8008036:	f007 fe8b 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800803a:	4620      	mov	r0, r4
 800803c:	b002      	add	sp, #8
 800803e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008042:	bf00      	nop
 8008044:	0802d380 	.word	0x0802d380
 8008048:	0802e098 	.word	0x0802e098
 800804c:	0802e260 	.word	0x0802e260

08008050 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008050:	4770      	bx	lr
	...

08008054 <_Z23getFont_verdana_10_4bppv>:
{
 8008054:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008056:	4d17      	ldr	r5, [pc, #92]	; (80080b4 <_Z23getFont_verdana_10_4bppv+0x60>)
 8008058:	682c      	ldr	r4, [r5, #0]
 800805a:	f3bf 8f5b 	dmb	ish
 800805e:	f014 0401 	ands.w	r4, r4, #1
{
 8008062:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8008064:	d122      	bne.n	80080ac <_Z23getFont_verdana_10_4bppv+0x58>
 8008066:	4628      	mov	r0, r5
 8008068:	f020 ff8f 	bl	8028f8a <__cxa_guard_acquire>
 800806c:	b1f0      	cbz	r0, 80080ac <_Z23getFont_verdana_10_4bppv+0x58>
 800806e:	233f      	movs	r3, #63	; 0x3f
 8008070:	9309      	str	r3, [sp, #36]	; 0x24
 8008072:	4b11      	ldr	r3, [pc, #68]	; (80080b8 <_Z23getFont_verdana_10_4bppv+0x64>)
 8008074:	9308      	str	r3, [sp, #32]
 8008076:	4b11      	ldr	r3, [pc, #68]	; (80080bc <_Z23getFont_verdana_10_4bppv+0x68>)
 8008078:	9307      	str	r3, [sp, #28]
 800807a:	2301      	movs	r3, #1
 800807c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008080:	9304      	str	r3, [sp, #16]
 8008082:	2304      	movs	r3, #4
 8008084:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008088:	230a      	movs	r3, #10
 800808a:	490d      	ldr	r1, [pc, #52]	; (80080c0 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800808c:	9300      	str	r3, [sp, #0]
 800808e:	225f      	movs	r2, #95	; 0x5f
 8008090:	230c      	movs	r3, #12
 8008092:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008096:	480b      	ldr	r0, [pc, #44]	; (80080c4 <_Z23getFont_verdana_10_4bppv+0x70>)
 8008098:	940a      	str	r4, [sp, #40]	; 0x28
 800809a:	9401      	str	r4, [sp, #4]
 800809c:	f7fd fa04 	bl	80054a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80080a0:	4809      	ldr	r0, [pc, #36]	; (80080c8 <_Z23getFont_verdana_10_4bppv+0x74>)
 80080a2:	f021 fda1 	bl	8029be8 <atexit>
 80080a6:	4628      	mov	r0, r5
 80080a8:	f020 ff7b 	bl	8028fa2 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80080ac:	4805      	ldr	r0, [pc, #20]	; (80080c4 <_Z23getFont_verdana_10_4bppv+0x70>)
 80080ae:	b00f      	add	sp, #60	; 0x3c
 80080b0:	bd30      	pop	{r4, r5, pc}
 80080b2:	bf00      	nop
 80080b4:	20001f94 	.word	0x20001f94
 80080b8:	08044f2c 	.word	0x08044f2c
 80080bc:	0804508c 	.word	0x0804508c
 80080c0:	08044214 	.word	0x08044214
 80080c4:	20001f98 	.word	0x20001f98
 80080c8:	08008051 	.word	0x08008051

080080cc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 80080cc:	4770      	bx	lr
	...

080080d0 <_Z23getFont_verdana_12_4bppv>:
{
 80080d0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 80080d2:	4d17      	ldr	r5, [pc, #92]	; (8008130 <_Z23getFont_verdana_12_4bppv+0x60>)
 80080d4:	682c      	ldr	r4, [r5, #0]
 80080d6:	f3bf 8f5b 	dmb	ish
 80080da:	f014 0401 	ands.w	r4, r4, #1
{
 80080de:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 80080e0:	d122      	bne.n	8008128 <_Z23getFont_verdana_12_4bppv+0x58>
 80080e2:	4628      	mov	r0, r5
 80080e4:	f020 ff51 	bl	8028f8a <__cxa_guard_acquire>
 80080e8:	b1f0      	cbz	r0, 8008128 <_Z23getFont_verdana_12_4bppv+0x58>
 80080ea:	233f      	movs	r3, #63	; 0x3f
 80080ec:	9309      	str	r3, [sp, #36]	; 0x24
 80080ee:	4b11      	ldr	r3, [pc, #68]	; (8008134 <_Z23getFont_verdana_12_4bppv+0x64>)
 80080f0:	9308      	str	r3, [sp, #32]
 80080f2:	4b11      	ldr	r3, [pc, #68]	; (8008138 <_Z23getFont_verdana_12_4bppv+0x68>)
 80080f4:	9307      	str	r3, [sp, #28]
 80080f6:	2301      	movs	r3, #1
 80080f8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80080fc:	9304      	str	r3, [sp, #16]
 80080fe:	2304      	movs	r3, #4
 8008100:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008104:	230c      	movs	r3, #12
 8008106:	490d      	ldr	r1, [pc, #52]	; (800813c <_Z23getFont_verdana_12_4bppv+0x6c>)
 8008108:	9300      	str	r3, [sp, #0]
 800810a:	2260      	movs	r2, #96	; 0x60
 800810c:	230f      	movs	r3, #15
 800810e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008112:	480b      	ldr	r0, [pc, #44]	; (8008140 <_Z23getFont_verdana_12_4bppv+0x70>)
 8008114:	940a      	str	r4, [sp, #40]	; 0x28
 8008116:	9401      	str	r4, [sp, #4]
 8008118:	f7fd f9c6 	bl	80054a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800811c:	4809      	ldr	r0, [pc, #36]	; (8008144 <_Z23getFont_verdana_12_4bppv+0x74>)
 800811e:	f021 fd63 	bl	8029be8 <atexit>
 8008122:	4628      	mov	r0, r5
 8008124:	f020 ff3d 	bl	8028fa2 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8008128:	4805      	ldr	r0, [pc, #20]	; (8008140 <_Z23getFont_verdana_12_4bppv+0x70>)
 800812a:	b00f      	add	sp, #60	; 0x3c
 800812c:	bd30      	pop	{r4, r5, pc}
 800812e:	bf00      	nop
 8008130:	20001fc4 	.word	0x20001fc4
 8008134:	08044f60 	.word	0x08044f60
 8008138:	08045090 	.word	0x08045090
 800813c:	08044748 	.word	0x08044748
 8008140:	20001fc8 	.word	0x20001fc8
 8008144:	080080cd 	.word	0x080080cd

08008148 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008148:	4770      	bx	lr
	...

0800814c <_Z23getFont_verdana_19_4bppv>:
{
 800814c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800814e:	4d17      	ldr	r5, [pc, #92]	; (80081ac <_Z23getFont_verdana_19_4bppv+0x60>)
 8008150:	682c      	ldr	r4, [r5, #0]
 8008152:	f3bf 8f5b 	dmb	ish
 8008156:	f014 0401 	ands.w	r4, r4, #1
{
 800815a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 800815c:	d122      	bne.n	80081a4 <_Z23getFont_verdana_19_4bppv+0x58>
 800815e:	4628      	mov	r0, r5
 8008160:	f020 ff13 	bl	8028f8a <__cxa_guard_acquire>
 8008164:	b1f0      	cbz	r0, 80081a4 <_Z23getFont_verdana_19_4bppv+0x58>
 8008166:	233f      	movs	r3, #63	; 0x3f
 8008168:	9309      	str	r3, [sp, #36]	; 0x24
 800816a:	4b11      	ldr	r3, [pc, #68]	; (80081b0 <_Z23getFont_verdana_19_4bppv+0x64>)
 800816c:	9308      	str	r3, [sp, #32]
 800816e:	4b11      	ldr	r3, [pc, #68]	; (80081b4 <_Z23getFont_verdana_19_4bppv+0x68>)
 8008170:	9307      	str	r3, [sp, #28]
 8008172:	2301      	movs	r3, #1
 8008174:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008178:	9304      	str	r3, [sp, #16]
 800817a:	2304      	movs	r3, #4
 800817c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008180:	2313      	movs	r3, #19
 8008182:	490d      	ldr	r1, [pc, #52]	; (80081b8 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8008184:	9300      	str	r3, [sp, #0]
 8008186:	222f      	movs	r2, #47	; 0x2f
 8008188:	2317      	movs	r3, #23
 800818a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800818e:	480b      	ldr	r0, [pc, #44]	; (80081bc <_Z23getFont_verdana_19_4bppv+0x70>)
 8008190:	940a      	str	r4, [sp, #40]	; 0x28
 8008192:	9401      	str	r4, [sp, #4]
 8008194:	f7fd f988 	bl	80054a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008198:	4809      	ldr	r0, [pc, #36]	; (80081c0 <_Z23getFont_verdana_19_4bppv+0x74>)
 800819a:	f021 fd25 	bl	8029be8 <atexit>
 800819e:	4628      	mov	r0, r5
 80081a0:	f020 feff 	bl	8028fa2 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 80081a4:	4805      	ldr	r0, [pc, #20]	; (80081bc <_Z23getFont_verdana_19_4bppv+0x70>)
 80081a6:	b00f      	add	sp, #60	; 0x3c
 80081a8:	bd30      	pop	{r4, r5, pc}
 80081aa:	bf00      	nop
 80081ac:	20001ff4 	.word	0x20001ff4
 80081b0:	08044fe4 	.word	0x08044fe4
 80081b4:	08045094 	.word	0x08045094
 80081b8:	08044c88 	.word	0x08044c88
 80081bc:	20001ff8 	.word	0x20001ff8
 80081c0:	08008149 	.word	0x08008149

080081c4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80081c4:	4770      	bx	lr
	...

080081c8 <_Z23getFont_verdana_40_4bppv>:
{
 80081c8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80081ca:	4d16      	ldr	r5, [pc, #88]	; (8008224 <_Z23getFont_verdana_40_4bppv+0x5c>)
 80081cc:	682c      	ldr	r4, [r5, #0]
 80081ce:	f3bf 8f5b 	dmb	ish
 80081d2:	f014 0401 	ands.w	r4, r4, #1
{
 80081d6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80081d8:	d120      	bne.n	800821c <_Z23getFont_verdana_40_4bppv+0x54>
 80081da:	4628      	mov	r0, r5
 80081dc:	f020 fed5 	bl	8028f8a <__cxa_guard_acquire>
 80081e0:	b1e0      	cbz	r0, 800821c <_Z23getFont_verdana_40_4bppv+0x54>
 80081e2:	233f      	movs	r3, #63	; 0x3f
 80081e4:	9309      	str	r3, [sp, #36]	; 0x24
 80081e6:	4b10      	ldr	r3, [pc, #64]	; (8008228 <_Z23getFont_verdana_40_4bppv+0x60>)
 80081e8:	9308      	str	r3, [sp, #32]
 80081ea:	4b10      	ldr	r3, [pc, #64]	; (800822c <_Z23getFont_verdana_40_4bppv+0x64>)
 80081ec:	4910      	ldr	r1, [pc, #64]	; (8008230 <_Z23getFont_verdana_40_4bppv+0x68>)
 80081ee:	4811      	ldr	r0, [pc, #68]	; (8008234 <_Z23getFont_verdana_40_4bppv+0x6c>)
 80081f0:	940a      	str	r4, [sp, #40]	; 0x28
 80081f2:	2201      	movs	r2, #1
 80081f4:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80081f8:	2304      	movs	r3, #4
 80081fa:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80081fe:	2328      	movs	r3, #40	; 0x28
 8008200:	9300      	str	r3, [sp, #0]
 8008202:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008206:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800820a:	9405      	str	r4, [sp, #20]
 800820c:	f7fd f94c 	bl	80054a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008210:	4809      	ldr	r0, [pc, #36]	; (8008238 <_Z23getFont_verdana_40_4bppv+0x70>)
 8008212:	f021 fce9 	bl	8029be8 <atexit>
 8008216:	4628      	mov	r0, r5
 8008218:	f020 fec3 	bl	8028fa2 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 800821c:	4805      	ldr	r0, [pc, #20]	; (8008234 <_Z23getFont_verdana_40_4bppv+0x6c>)
 800821e:	b00f      	add	sp, #60	; 0x3c
 8008220:	bd30      	pop	{r4, r5, pc}
 8008222:	bf00      	nop
 8008224:	20002024 	.word	0x20002024
 8008228:	08045088 	.word	0x08045088
 800822c:	08045098 	.word	0x08045098
 8008230:	08044f1c 	.word	0x08044f1c
 8008234:	20002028 	.word	0x20002028
 8008238:	080081c5 	.word	0x080081c5

0800823c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 800823c:	2000      	movs	r0, #0
 800823e:	4770      	bx	lr

08008240 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008240:	2000      	movs	r0, #0
 8008242:	4770      	bx	lr

08008244 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008244:	b40e      	push	{r1, r2, r3}
 8008246:	b503      	push	{r0, r1, lr}
 8008248:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800824a:	2100      	movs	r1, #0
{
 800824c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008250:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008252:	f00d ffd3 	bl	80161fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008256:	b002      	add	sp, #8
 8008258:	f85d eb04 	ldr.w	lr, [sp], #4
 800825c:	b003      	add	sp, #12
 800825e:	4770      	bx	lr

08008260 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008260:	b40c      	push	{r2, r3}
 8008262:	b507      	push	{r0, r1, r2, lr}
 8008264:	ab04      	add	r3, sp, #16
 8008266:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800826a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800826c:	f00d ffc6 	bl	80161fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008270:	b003      	add	sp, #12
 8008272:	f85d eb04 	ldr.w	lr, [sp], #4
 8008276:	b002      	add	sp, #8
 8008278:	4770      	bx	lr
	...

0800827c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800827c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800827e:	b510      	push	{r4, lr}
 8008280:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008282:	b373      	cbz	r3, 80082e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008284:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008286:	b92b      	cbnz	r3, 8008294 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008288:	4b18      	ldr	r3, [pc, #96]	; (80082ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800828a:	4a19      	ldr	r2, [pc, #100]	; (80082f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800828c:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800828e:	4819      	ldr	r0, [pc, #100]	; (80082f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008290:	f021 fc8c 	bl	8029bac <__assert_func>
            return buffer[pos];
 8008294:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008296:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800829a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800829c:	b30b      	cbz	r3, 80082e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800829e:	f00f fbaa 	bl	80179f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80082a2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80082a4:	2b01      	cmp	r3, #1
 80082a6:	d803      	bhi.n	80082b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80082a8:	4b13      	ldr	r3, [pc, #76]	; (80082f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80082aa:	4a14      	ldr	r2, [pc, #80]	; (80082fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80082ac:	21cb      	movs	r1, #203	; 0xcb
 80082ae:	e7ee      	b.n	800828e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80082b0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80082b2:	1c53      	adds	r3, r2, #1
 80082b4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80082b6:	2b09      	cmp	r3, #9
 80082b8:	4619      	mov	r1, r3
 80082ba:	bf88      	it	hi
 80082bc:	f1a3 010a 	subhi.w	r1, r3, #10
 80082c0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80082c4:	f640 103f 	movw	r0, #2367	; 0x93f
 80082c8:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80082ca:	4281      	cmp	r1, r0
 80082cc:	d109      	bne.n	80082e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80082ce:	2b0a      	cmp	r3, #10
 80082d0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80082d4:	bf28      	it	cs
 80082d6:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80082d8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80082dc:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80082de:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80082e0:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80082e2:	4620      	mov	r0, r4
}
 80082e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80082e8:	f00f ba88 	b.w	80177fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80082ec:	0802d3ac 	.word	0x0802d3ac
 80082f0:	0802d3b5 	.word	0x0802d3b5
 80082f4:	0802d460 	.word	0x0802d460
 80082f8:	0802d4aa 	.word	0x0802d4aa
 80082fc:	0802d4b8 	.word	0x0802d4b8

08008300 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008300:	f00f ba43 	b.w	801778a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008304 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008304:	b510      	push	{r4, lr}
 8008306:	b086      	sub	sp, #24
 8008308:	ac02      	add	r4, sp, #8
 800830a:	e884 0006 	stmia.w	r4, {r1, r2}
 800830e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8008310:	ab0a      	add	r3, sp, #40	; 0x28
 8008312:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8008314:	9301      	str	r3, [sp, #4]
 8008316:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008318:	9300      	str	r3, [sp, #0]
 800831a:	4621      	mov	r1, r4
 800831c:	9b08      	ldr	r3, [sp, #32]
 800831e:	f00c fb31 	bl	8014984 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8008322:	b006      	add	sp, #24
 8008324:	bd10      	pop	{r4, pc}
	...

08008328 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8008328:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800832a:	bb18      	cbnz	r0, 8008374 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 800832c:	4b12      	ldr	r3, [pc, #72]	; (8008378 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800832e:	4813      	ldr	r0, [pc, #76]	; (800837c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8008330:	681c      	ldr	r4, [r3, #0]
 8008332:	4913      	ldr	r1, [pc, #76]	; (8008380 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8008334:	b1b4      	cbz	r4, 8008364 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8008336:	6822      	ldr	r2, [r4, #0]
 8008338:	4422      	add	r2, r4
 800833a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800833c:	6862      	ldr	r2, [r4, #4]
 800833e:	4422      	add	r2, r4
 8008340:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008342:	68a2      	ldr	r2, [r4, #8]
 8008344:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8008346:	4b0f      	ldr	r3, [pc, #60]	; (8008384 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8008348:	2200      	movs	r2, #0
 800834a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800834c:	f000 f838 	bl	80083c0 <_ZN17TypedTextDatabase8getFontsEv>
 8008350:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008352:	f000 f833 	bl	80083bc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8008356:	4b0c      	ldr	r3, [pc, #48]	; (8008388 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008358:	601c      	str	r4, [r3, #0]
        fonts = f;
 800835a:	4b0c      	ldr	r3, [pc, #48]	; (800838c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 800835c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800835e:	4b0c      	ldr	r3, [pc, #48]	; (8008390 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008360:	8018      	strh	r0, [r3, #0]
    }
}
 8008362:	e007      	b.n	8008374 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008364:	4b0b      	ldr	r3, [pc, #44]	; (8008394 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8008366:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008368:	4b0b      	ldr	r3, [pc, #44]	; (8008398 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800836a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800836c:	4b0b      	ldr	r3, [pc, #44]	; (800839c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800836e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008370:	2c00      	cmp	r4, #0
 8008372:	d1e8      	bne.n	8008346 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008374:	bd38      	pop	{r3, r4, r5, pc}
 8008376:	bf00      	nop
 8008378:	20002054 	.word	0x20002054
 800837c:	20002058 	.word	0x20002058
 8008380:	2000205c 	.word	0x2000205c
 8008384:	20002060 	.word	0x20002060
 8008388:	20012ecc 	.word	0x20012ecc
 800838c:	20012ed4 	.word	0x20012ed4
 8008390:	20012ed0 	.word	0x20012ed0
 8008394:	080451f0 	.word	0x080451f0
 8008398:	0804509c 	.word	0x0804509c
 800839c:	08045700 	.word	0x08045700

080083a0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80083a0:	4b04      	ldr	r3, [pc, #16]	; (80083b4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80083a2:	681b      	ldr	r3, [r3, #0]
 80083a4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80083a8:	4b03      	ldr	r3, [pc, #12]	; (80083b8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80083aa:	681b      	ldr	r3, [r3, #0]
}
 80083ac:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80083b0:	4770      	bx	lr
 80083b2:	bf00      	nop
 80083b4:	2000205c 	.word	0x2000205c
 80083b8:	20002058 	.word	0x20002058

080083bc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80083bc:	2055      	movs	r0, #85	; 0x55
 80083be:	4770      	bx	lr

080083c0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80083c0:	4800      	ldr	r0, [pc, #0]	; (80083c4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80083c2:	4770      	bx	lr
 80083c4:	20002064 	.word	0x20002064

080083c8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80083c8:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 80083ca:	f7ff febf 	bl	800814c <_Z23getFont_verdana_19_4bppv>
};
 80083ce:	4c06      	ldr	r4, [pc, #24]	; (80083e8 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 80083d0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80083d2:	f7ff fef9 	bl	80081c8 <_Z23getFont_verdana_40_4bppv>
};
 80083d6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 80083d8:	f7ff fe3c 	bl	8008054 <_Z23getFont_verdana_10_4bppv>
};
 80083dc:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 80083de:	f7ff fe77 	bl	80080d0 <_Z23getFont_verdana_12_4bppv>
};
 80083e2:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 80083e4:	bd10      	pop	{r4, pc}
 80083e6:	bf00      	nop
 80083e8:	20002064 	.word	0x20002064

080083ec <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 80083ec:	4770      	bx	lr

080083ee <_ZThn4_N20CalibrationPresenterD1Ev>:
 80083ee:	3804      	subs	r0, #4
 80083f0:	4770      	bx	lr

080083f2 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 80083f2:	4770      	bx	lr

080083f4 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80083f4:	68c0      	ldr	r0, [r0, #12]
 80083f6:	6803      	ldr	r3, [r0, #0]
 80083f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80083fa:	4718      	bx	r3

080083fc <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80083fc:	f1a0 0004 	sub.w	r0, r0, #4
 8008400:	f7ff bff8 	b.w	80083f4 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08008404 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8008404:	b510      	push	{r4, lr}
 8008406:	2110      	movs	r1, #16
 8008408:	4604      	mov	r4, r0
 800840a:	f020 fdbc 	bl	8028f86 <_ZdlPvj>
 800840e:	4620      	mov	r0, r4
 8008410:	bd10      	pop	{r4, pc}

08008412 <_ZThn4_N20CalibrationPresenterD0Ev>:
 8008412:	f1a0 0004 	sub.w	r0, r0, #4
 8008416:	e7f5      	b.n	8008404 <_ZN20CalibrationPresenterD0Ev>

08008418 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 8008418:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800841a:	2200      	movs	r2, #0
 800841c:	6082      	str	r2, [r0, #8]
    : view(v)
 800841e:	4a04      	ldr	r2, [pc, #16]	; (8008430 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 8008420:	60c1      	str	r1, [r0, #12]
 8008422:	f102 0408 	add.w	r4, r2, #8
 8008426:	3224      	adds	r2, #36	; 0x24
 8008428:	6004      	str	r4, [r0, #0]
 800842a:	6042      	str	r2, [r0, #4]
}
 800842c:	bd10      	pop	{r4, pc}
 800842e:	bf00      	nop
 8008430:	0802d58c 	.word	0x0802d58c

08008434 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 8008434:	4770      	bx	lr
	...

08008438 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 8008438:	b510      	push	{r4, lr}
 800843a:	4b03      	ldr	r3, [pc, #12]	; (8008448 <_ZN15CalibrationViewD1Ev+0x10>)
 800843c:	6003      	str	r3, [r0, #0]
 800843e:	4604      	mov	r4, r0
 8008440:	f7fa fa38 	bl	80028b4 <_ZN19CalibrationViewBaseD1Ev>
 8008444:	4620      	mov	r0, r4
 8008446:	bd10      	pop	{r4, pc}
 8008448:	0802d5c8 	.word	0x0802d5c8

0800844c <_ZN15CalibrationViewD0Ev>:
 800844c:	b510      	push	{r4, lr}
 800844e:	4604      	mov	r4, r0
 8008450:	f7ff fff2 	bl	8008438 <_ZN15CalibrationViewD1Ev>
 8008454:	4620      	mov	r0, r4
 8008456:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800845a:	f020 fd94 	bl	8028f86 <_ZdlPvj>
 800845e:	4620      	mov	r0, r4
 8008460:	bd10      	pop	{r4, pc}
	...

08008464 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 8008464:	b510      	push	{r4, lr}
 8008466:	4604      	mov	r4, r0
 8008468:	f7fa fb38 	bl	8002adc <_ZN19CalibrationViewBaseC1Ev>
 800846c:	4b01      	ldr	r3, [pc, #4]	; (8008474 <_ZN15CalibrationViewC1Ev+0x10>)
 800846e:	6023      	str	r3, [r4, #0]
}
 8008470:	4620      	mov	r0, r4
 8008472:	bd10      	pop	{r4, pc}
 8008474:	0802d5c8 	.word	0x0802d5c8

08008478 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8008478:	f7fa b9e9 	b.w	800284e <_ZN19CalibrationViewBase11setupScreenEv>

0800847c <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 800847c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800847e:	4a0a      	ldr	r2, [pc, #40]	; (80084a8 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8008480:	4605      	mov	r5, r0
 8008482:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008484:	460b      	mov	r3, r1
 8008486:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800848a:	2104      	movs	r1, #4
 800848c:	f010 f85c 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008490:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008494:	f00d ffdc 	bl	8016450 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008498:	b92c      	cbnz	r4, 80084a6 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 800849a:	f00c fef1 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800849e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80084a2:	f7fb bc79 	b.w	8003d98 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80084a6:	bd38      	pop	{r3, r4, r5, pc}
 80084a8:	0802d5bc 	.word	0x0802d5bc

080084ac <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 80084ac:	4770      	bx	lr

080084ae <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 80084ae:	3804      	subs	r0, #4
 80084b0:	4770      	bx	lr

080084b2 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 80084b2:	4770      	bx	lr

080084b4 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 80084b4:	4770      	bx	lr

080084b6 <_ZN25Calibration_HallPresenterD0Ev>:
 80084b6:	b510      	push	{r4, lr}
 80084b8:	2110      	movs	r1, #16
 80084ba:	4604      	mov	r4, r0
 80084bc:	f020 fd63 	bl	8028f86 <_ZdlPvj>
 80084c0:	4620      	mov	r0, r4
 80084c2:	bd10      	pop	{r4, pc}

080084c4 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 80084c4:	f1a0 0004 	sub.w	r0, r0, #4
 80084c8:	e7f5      	b.n	80084b6 <_ZN25Calibration_HallPresenterD0Ev>

080084ca <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 80084ca:	4770      	bx	lr

080084cc <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 80084cc:	b510      	push	{r4, lr}
 80084ce:	2200      	movs	r2, #0
 80084d0:	6082      	str	r2, [r0, #8]
    : view(v)
 80084d2:	4a04      	ldr	r2, [pc, #16]	; (80084e4 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 80084d4:	60c1      	str	r1, [r0, #12]
 80084d6:	f102 0408 	add.w	r4, r2, #8
 80084da:	3224      	adds	r2, #36	; 0x24
 80084dc:	6004      	str	r4, [r0, #0]
 80084de:	6042      	str	r2, [r0, #4]
}
 80084e0:	bd10      	pop	{r4, pc}
 80084e2:	bf00      	nop
 80084e4:	0802d5f8 	.word	0x0802d5f8

080084e8 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 80084e8:	4770      	bx	lr

080084ea <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 80084ea:	4770      	bx	lr

080084ec <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 80084ec:	b510      	push	{r4, lr}
 80084ee:	4b03      	ldr	r3, [pc, #12]	; (80084fc <_ZN20Calibration_HallViewD1Ev+0x10>)
 80084f0:	6003      	str	r3, [r0, #0]
 80084f2:	4604      	mov	r4, r0
 80084f4:	f7fa fd36 	bl	8002f64 <_ZN24Calibration_HallViewBaseD1Ev>
 80084f8:	4620      	mov	r0, r4
 80084fa:	bd10      	pop	{r4, pc}
 80084fc:	0802d630 	.word	0x0802d630

08008500 <_ZN20Calibration_HallViewD0Ev>:
 8008500:	b510      	push	{r4, lr}
 8008502:	4604      	mov	r4, r0
 8008504:	f7ff fff2 	bl	80084ec <_ZN20Calibration_HallViewD1Ev>
 8008508:	4620      	mov	r0, r4
 800850a:	f241 015c 	movw	r1, #4188	; 0x105c
 800850e:	f020 fd3a 	bl	8028f86 <_ZdlPvj>
 8008512:	4620      	mov	r0, r4
 8008514:	bd10      	pop	{r4, pc}
	...

08008518 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 8008518:	b510      	push	{r4, lr}
 800851a:	4604      	mov	r4, r0
 800851c:	f7fa fd4a 	bl	8002fb4 <_ZN24Calibration_HallViewBaseC1Ev>
 8008520:	4b01      	ldr	r3, [pc, #4]	; (8008528 <_ZN20Calibration_HallViewC1Ev+0x10>)
 8008522:	6023      	str	r3, [r4, #0]
}
 8008524:	4620      	mov	r0, r4
 8008526:	bd10      	pop	{r4, pc}
 8008528:	0802d630 	.word	0x0802d630

0800852c <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 800852c:	f7fa bcf6 	b.w	8002f1c <_ZN24Calibration_HallViewBase11setupScreenEv>

08008530 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008530:	4770      	bx	lr

08008532 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008532:	3804      	subs	r0, #4
 8008534:	4770      	bx	lr

08008536 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 8008536:	4770      	bx	lr

08008538 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 8008538:	4770      	bx	lr

0800853a <_ZN24Calibration_PadPresenterD0Ev>:
 800853a:	b510      	push	{r4, lr}
 800853c:	2110      	movs	r1, #16
 800853e:	4604      	mov	r4, r0
 8008540:	f020 fd21 	bl	8028f86 <_ZdlPvj>
 8008544:	4620      	mov	r0, r4
 8008546:	bd10      	pop	{r4, pc}

08008548 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 8008548:	f1a0 0004 	sub.w	r0, r0, #4
 800854c:	e7f5      	b.n	800853a <_ZN24Calibration_PadPresenterD0Ev>

0800854e <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 800854e:	4770      	bx	lr

08008550 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 8008550:	b510      	push	{r4, lr}
 8008552:	2200      	movs	r2, #0
 8008554:	6082      	str	r2, [r0, #8]
    : view(v)
 8008556:	4a04      	ldr	r2, [pc, #16]	; (8008568 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 8008558:	60c1      	str	r1, [r0, #12]
 800855a:	f102 0408 	add.w	r4, r2, #8
 800855e:	3224      	adds	r2, #36	; 0x24
 8008560:	6004      	str	r4, [r0, #0]
 8008562:	6042      	str	r2, [r0, #4]
}
 8008564:	bd10      	pop	{r4, pc}
 8008566:	bf00      	nop
 8008568:	0802d660 	.word	0x0802d660

0800856c <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 800856c:	4770      	bx	lr

0800856e <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 800856e:	4770      	bx	lr

08008570 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008570:	b510      	push	{r4, lr}
 8008572:	4b03      	ldr	r3, [pc, #12]	; (8008580 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008574:	6003      	str	r3, [r0, #0]
 8008576:	4604      	mov	r4, r0
 8008578:	f7fa fea4 	bl	80032c4 <_ZN23Calibration_PadViewBaseD1Ev>
 800857c:	4620      	mov	r0, r4
 800857e:	bd10      	pop	{r4, pc}
 8008580:	0802d698 	.word	0x0802d698

08008584 <_ZN19Calibration_PadViewD0Ev>:
 8008584:	b510      	push	{r4, lr}
 8008586:	4604      	mov	r4, r0
 8008588:	f7ff fff2 	bl	8008570 <_ZN19Calibration_PadViewD1Ev>
 800858c:	4620      	mov	r0, r4
 800858e:	f241 015c 	movw	r1, #4188	; 0x105c
 8008592:	f020 fcf8 	bl	8028f86 <_ZdlPvj>
 8008596:	4620      	mov	r0, r4
 8008598:	bd10      	pop	{r4, pc}
	...

0800859c <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800859c:	b510      	push	{r4, lr}
 800859e:	4604      	mov	r4, r0
 80085a0:	f7fa feb8 	bl	8003314 <_ZN23Calibration_PadViewBaseC1Ev>
 80085a4:	4b01      	ldr	r3, [pc, #4]	; (80085ac <_ZN19Calibration_PadViewC1Ev+0x10>)
 80085a6:	6023      	str	r3, [r4, #0]
}
 80085a8:	4620      	mov	r0, r4
 80085aa:	bd10      	pop	{r4, pc}
 80085ac:	0802d698 	.word	0x0802d698

080085b0 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 80085b0:	f7fa be64 	b.w	800327c <_ZN23Calibration_PadViewBase11setupScreenEv>

080085b4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80085b4:	4770      	bx	lr

080085b6 <_ZN19FrontendApplicationD0Ev>:
 80085b6:	b510      	push	{r4, lr}
 80085b8:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80085bc:	4604      	mov	r4, r0
 80085be:	f020 fce2 	bl	8028f86 <_ZdlPvj>
 80085c2:	4620      	mov	r0, r4
 80085c4:	bd10      	pop	{r4, pc}

080085c6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80085c6:	b510      	push	{r4, lr}
 80085c8:	4604      	mov	r4, r0
    {
        model.tick();
 80085ca:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80085ce:	f000 fb03 	bl	8008bd8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80085d2:	4620      	mov	r0, r4
    }
 80085d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80085d8:	f00c bf16 	b.w	8015408 <_ZN8touchgfx11Application15handleTickEventEv>

080085dc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80085dc:	b510      	push	{r4, lr}
 80085de:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80085e0:	f7fb faaa 	bl	8003b38 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80085e4:	4b01      	ldr	r3, [pc, #4]	; (80085ec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80085e6:	6023      	str	r3, [r4, #0]
{

}
 80085e8:	4620      	mov	r0, r4
 80085ea:	bd10      	pop	{r4, pc}
 80085ec:	0802d6d0 	.word	0x0802d6d0

080085f0 <_ZN17Gauge_with_ValuesD1Ev>:
 80085f0:	b510      	push	{r4, lr}
 80085f2:	4b03      	ldr	r3, [pc, #12]	; (8008600 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 80085f4:	6003      	str	r3, [r0, #0]
 80085f6:	4604      	mov	r4, r0
 80085f8:	f7fc fda4 	bl	8005144 <_ZN21Gauge_with_ValuesBaseD1Ev>
 80085fc:	4620      	mov	r0, r4
 80085fe:	bd10      	pop	{r4, pc}
 8008600:	0802d724 	.word	0x0802d724

08008604 <_ZN17Gauge_with_ValuesD0Ev>:
 8008604:	b510      	push	{r4, lr}
 8008606:	4604      	mov	r4, r0
 8008608:	f7ff fff2 	bl	80085f0 <_ZN17Gauge_with_ValuesD1Ev>
 800860c:	4620      	mov	r0, r4
 800860e:	f44f 7162 	mov.w	r1, #904	; 0x388
 8008612:	f020 fcb8 	bl	8028f86 <_ZdlPvj>
 8008616:	4620      	mov	r0, r4
 8008618:	bd10      	pop	{r4, pc}
	...

0800861c <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 800861c:	b510      	push	{r4, lr}
 800861e:	4604      	mov	r4, r0
 8008620:	f7fc fd9a 	bl	8005158 <_ZN21Gauge_with_ValuesBaseC1Ev>
 8008624:	4b01      	ldr	r3, [pc, #4]	; (800862c <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 8008626:	6023      	str	r3, [r4, #0]
{

}
 8008628:	4620      	mov	r0, r4
 800862a:	bd10      	pop	{r4, pc}
 800862c:	0802d724 	.word	0x0802d724

08008630 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 8008630:	f7fc bd89 	b.w	8005146 <_ZN21Gauge_with_ValuesBase10initializeEv>

08008634 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008634:	4770      	bx	lr

08008636 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008636:	3804      	subs	r0, #4
 8008638:	4770      	bx	lr

0800863a <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 800863a:	4770      	bx	lr

0800863c <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800863c:	68c0      	ldr	r0, [r0, #12]
 800863e:	6803      	ldr	r3, [r0, #0]
 8008640:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008642:	4718      	bx	r3

08008644 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008644:	f1a0 0004 	sub.w	r0, r0, #4
 8008648:	f7ff bff8 	b.w	800863c <_ZN18Main_MenuPresenter15setTimeoutValueEi>

0800864c <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 800864c:	b510      	push	{r4, lr}
 800864e:	2110      	movs	r1, #16
 8008650:	4604      	mov	r4, r0
 8008652:	f020 fc98 	bl	8028f86 <_ZdlPvj>
 8008656:	4620      	mov	r0, r4
 8008658:	bd10      	pop	{r4, pc}

0800865a <_ZThn4_N18Main_MenuPresenterD0Ev>:
 800865a:	f1a0 0004 	sub.w	r0, r0, #4
 800865e:	e7f5      	b.n	800864c <_ZN18Main_MenuPresenterD0Ev>

08008660 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008660:	b510      	push	{r4, lr}
 8008662:	2200      	movs	r2, #0
 8008664:	6082      	str	r2, [r0, #8]
    : view(v)
 8008666:	4a04      	ldr	r2, [pc, #16]	; (8008678 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008668:	60c1      	str	r1, [r0, #12]
 800866a:	f102 0408 	add.w	r4, r2, #8
 800866e:	3224      	adds	r2, #36	; 0x24
 8008670:	6004      	str	r4, [r0, #0]
 8008672:	6042      	str	r2, [r0, #4]
}
 8008674:	bd10      	pop	{r4, pc}
 8008676:	bf00      	nop
 8008678:	0802d7b0 	.word	0x0802d7b0

0800867c <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800867c:	4770      	bx	lr
	...

08008680 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008680:	b510      	push	{r4, lr}
 8008682:	4b03      	ldr	r3, [pc, #12]	; (8008690 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008684:	6003      	str	r3, [r0, #0]
 8008686:	4604      	mov	r4, r0
 8008688:	f7fc ff62 	bl	8005550 <_ZN17Main_MenuViewBaseD1Ev>
 800868c:	4620      	mov	r0, r4
 800868e:	bd10      	pop	{r4, pc}
 8008690:	0802d7e8 	.word	0x0802d7e8

08008694 <_ZN13Main_MenuViewD0Ev>:
 8008694:	b510      	push	{r4, lr}
 8008696:	4604      	mov	r4, r0
 8008698:	f7ff fff2 	bl	8008680 <_ZN13Main_MenuViewD1Ev>
 800869c:	4620      	mov	r0, r4
 800869e:	f241 117c 	movw	r1, #4476	; 0x117c
 80086a2:	f020 fc70 	bl	8028f86 <_ZdlPvj>
 80086a6:	4620      	mov	r0, r4
 80086a8:	bd10      	pop	{r4, pc}
	...

080086ac <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 80086ac:	b510      	push	{r4, lr}
 80086ae:	4604      	mov	r4, r0
 80086b0:	f7fc ff98 	bl	80055e4 <_ZN17Main_MenuViewBaseC1Ev>
 80086b4:	4b01      	ldr	r3, [pc, #4]	; (80086bc <_ZN13Main_MenuViewC1Ev+0x10>)
 80086b6:	6023      	str	r3, [r4, #0]
}
 80086b8:	4620      	mov	r0, r4
 80086ba:	bd10      	pop	{r4, pc}
 80086bc:	0802d7e8 	.word	0x0802d7e8

080086c0 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 80086c0:	f7fc bf22 	b.w	8005508 <_ZN17Main_MenuViewBase11setupScreenEv>

080086c4 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 80086c4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80086c6:	4a0a      	ldr	r2, [pc, #40]	; (80086f0 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 80086c8:	4605      	mov	r5, r0
 80086ca:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 80086cc:	460b      	mov	r3, r1
 80086ce:	f500 7055 	add.w	r0, r0, #852	; 0x354
 80086d2:	2104      	movs	r1, #4
 80086d4:	f00f ff38 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 80086d8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80086dc:	f00d feb8 	bl	8016450 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80086e0:	b92c      	cbnz	r4, 80086ee <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 80086e2:	f00c fdcd 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80086e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80086ea:	f7fb bb55 	b.w	8003d98 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80086ee:	bd38      	pop	{r3, r4, r5, pc}
 80086f0:	0802d5bc 	.word	0x0802d5bc

080086f4 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 80086f4:	4770      	bx	lr

080086f6 <_ZThn4_N20MeasurementPresenterD1Ev>:
 80086f6:	3804      	subs	r0, #4
 80086f8:	4770      	bx	lr

080086fa <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 80086fa:	4770      	bx	lr

080086fc <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80086fc:	68c0      	ldr	r0, [r0, #12]
 80086fe:	6803      	ldr	r3, [r0, #0]
 8008700:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008702:	4718      	bx	r3

08008704 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008704:	f1a0 0004 	sub.w	r0, r0, #4
 8008708:	f7ff bff8 	b.w	80086fc <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800870c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800870c:	b510      	push	{r4, lr}
 800870e:	2110      	movs	r1, #16
 8008710:	4604      	mov	r4, r0
 8008712:	f020 fc38 	bl	8028f86 <_ZdlPvj>
 8008716:	4620      	mov	r0, r4
 8008718:	bd10      	pop	{r4, pc}

0800871a <_ZThn4_N20MeasurementPresenterD0Ev>:
 800871a:	f1a0 0004 	sub.w	r0, r0, #4
 800871e:	e7f5      	b.n	800870c <_ZN20MeasurementPresenterD0Ev>

08008720 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008720:	b510      	push	{r4, lr}
 8008722:	2200      	movs	r2, #0
 8008724:	6082      	str	r2, [r0, #8]
    : view(v)
 8008726:	4a04      	ldr	r2, [pc, #16]	; (8008738 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008728:	60c1      	str	r1, [r0, #12]
 800872a:	f102 0408 	add.w	r4, r2, #8
 800872e:	3224      	adds	r2, #36	; 0x24
 8008730:	6004      	str	r4, [r0, #0]
 8008732:	6042      	str	r2, [r0, #4]
}
 8008734:	bd10      	pop	{r4, pc}
 8008736:	bf00      	nop
 8008738:	0802d818 	.word	0x0802d818

0800873c <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 800873c:	4770      	bx	lr
	...

08008740 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008740:	b510      	push	{r4, lr}
 8008742:	4b03      	ldr	r3, [pc, #12]	; (8008750 <_ZN15MeasurementViewD1Ev+0x10>)
 8008744:	6003      	str	r3, [r0, #0]
 8008746:	4604      	mov	r4, r0
 8008748:	f7fd f9bc 	bl	8005ac4 <_ZN19MeasurementViewBaseD1Ev>
 800874c:	4620      	mov	r0, r4
 800874e:	bd10      	pop	{r4, pc}
 8008750:	0802d850 	.word	0x0802d850

08008754 <_ZN15MeasurementViewD0Ev>:
 8008754:	b510      	push	{r4, lr}
 8008756:	4604      	mov	r4, r0
 8008758:	f7ff fff2 	bl	8008740 <_ZN15MeasurementViewD1Ev>
 800875c:	4620      	mov	r0, r4
 800875e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008762:	f020 fc10 	bl	8028f86 <_ZdlPvj>
 8008766:	4620      	mov	r0, r4
 8008768:	bd10      	pop	{r4, pc}
	...

0800876c <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 800876c:	b510      	push	{r4, lr}
 800876e:	4604      	mov	r4, r0
 8008770:	f7fd f9e2 	bl	8005b38 <_ZN19MeasurementViewBaseC1Ev>
 8008774:	4b01      	ldr	r3, [pc, #4]	; (800877c <_ZN15MeasurementViewC1Ev+0x10>)
 8008776:	6023      	str	r3, [r4, #0]
}
 8008778:	4620      	mov	r0, r4
 800877a:	bd10      	pop	{r4, pc}
 800877c:	0802d850 	.word	0x0802d850

08008780 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008780:	f7fd b97c 	b.w	8005a7c <_ZN19MeasurementViewBase11setupScreenEv>

08008784 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008784:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008786:	4a0a      	ldr	r2, [pc, #40]	; (80087b0 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008788:	4605      	mov	r5, r0
 800878a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800878c:	460b      	mov	r3, r1
 800878e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008792:	2104      	movs	r1, #4
 8008794:	f00f fed8 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008798:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800879c:	f00d fe58 	bl	8016450 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80087a0:	b92c      	cbnz	r4, 80087ae <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 80087a2:	f00c fd6d 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80087a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80087aa:	f7fb baf5 	b.w	8003d98 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80087ae:	bd38      	pop	{r3, r4, r5, pc}
 80087b0:	0802d5bc 	.word	0x0802d5bc

080087b4 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 80087b4:	4770      	bx	lr

080087b6 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 80087b6:	3804      	subs	r0, #4
 80087b8:	4770      	bx	lr

080087ba <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 80087ba:	4770      	bx	lr

080087bc <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80087bc:	68c0      	ldr	r0, [r0, #12]
 80087be:	6803      	ldr	r3, [r0, #0]
 80087c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80087c2:	4718      	bx	r3

080087c4 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80087c4:	f1a0 0004 	sub.w	r0, r0, #4
 80087c8:	f7ff bff8 	b.w	80087bc <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

080087cc <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 80087cc:	b510      	push	{r4, lr}
 80087ce:	2110      	movs	r1, #16
 80087d0:	4604      	mov	r4, r0
 80087d2:	f020 fbd8 	bl	8028f86 <_ZdlPvj>
 80087d6:	4620      	mov	r0, r4
 80087d8:	bd10      	pop	{r4, pc}

080087da <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 80087da:	f1a0 0004 	sub.w	r0, r0, #4
 80087de:	e7f5      	b.n	80087cc <_ZN29Measurement_AccuratePresenterD0Ev>

080087e0 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 80087e0:	b510      	push	{r4, lr}
 80087e2:	2200      	movs	r2, #0
 80087e4:	6082      	str	r2, [r0, #8]
    : view(v)
 80087e6:	4a04      	ldr	r2, [pc, #16]	; (80087f8 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 80087e8:	60c1      	str	r1, [r0, #12]
 80087ea:	f102 0408 	add.w	r4, r2, #8
 80087ee:	3224      	adds	r2, #36	; 0x24
 80087f0:	6004      	str	r4, [r0, #0]
 80087f2:	6042      	str	r2, [r0, #4]
}
 80087f4:	bd10      	pop	{r4, pc}
 80087f6:	bf00      	nop
 80087f8:	0802d880 	.word	0x0802d880

080087fc <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 80087fc:	4770      	bx	lr
	...

08008800 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008800:	b510      	push	{r4, lr}
 8008802:	4b03      	ldr	r3, [pc, #12]	; (8008810 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008804:	6003      	str	r3, [r0, #0]
 8008806:	4604      	mov	r4, r0
 8008808:	f7fd fbde 	bl	8005fc8 <_ZN28Measurement_AccurateViewBaseD1Ev>
 800880c:	4620      	mov	r0, r4
 800880e:	bd10      	pop	{r4, pc}
 8008810:	0802d8b8 	.word	0x0802d8b8

08008814 <_ZN24Measurement_AccurateViewD0Ev>:
 8008814:	b510      	push	{r4, lr}
 8008816:	4604      	mov	r4, r0
 8008818:	f7ff fff2 	bl	8008800 <_ZN24Measurement_AccurateViewD1Ev>
 800881c:	4620      	mov	r0, r4
 800881e:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008822:	f020 fbb0 	bl	8028f86 <_ZdlPvj>
 8008826:	4620      	mov	r0, r4
 8008828:	bd10      	pop	{r4, pc}
	...

0800882c <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 800882c:	b510      	push	{r4, lr}
 800882e:	4604      	mov	r4, r0
 8008830:	f7fd fc04 	bl	800603c <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008834:	4b01      	ldr	r3, [pc, #4]	; (800883c <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008836:	6023      	str	r3, [r4, #0]
}
 8008838:	4620      	mov	r0, r4
 800883a:	bd10      	pop	{r4, pc}
 800883c:	0802d8b8 	.word	0x0802d8b8

08008840 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008840:	f7fd bb9e 	b.w	8005f80 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008844 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008844:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008846:	4a0a      	ldr	r2, [pc, #40]	; (8008870 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008848:	4605      	mov	r5, r0
 800884a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800884c:	460b      	mov	r3, r1
 800884e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008852:	2104      	movs	r1, #4
 8008854:	f00f fe78 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008858:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800885c:	f00d fdf8 	bl	8016450 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008860:	b92c      	cbnz	r4, 800886e <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008862:	f00c fd0d 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008866:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800886a:	f7fb ba95 	b.w	8003d98 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800886e:	bd38      	pop	{r3, r4, r5, pc}
 8008870:	0802d5bc 	.word	0x0802d5bc

08008874 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008874:	4770      	bx	lr

08008876 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008876:	3804      	subs	r0, #4
 8008878:	4770      	bx	lr

0800887a <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800887a:	4770      	bx	lr

0800887c <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800887c:	4770      	bx	lr

0800887e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800887e:	b510      	push	{r4, lr}
 8008880:	2110      	movs	r1, #16
 8008882:	4604      	mov	r4, r0
 8008884:	f020 fb7f 	bl	8028f86 <_ZdlPvj>
 8008888:	4620      	mov	r0, r4
 800888a:	bd10      	pop	{r4, pc}

0800888c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800888c:	f1a0 0004 	sub.w	r0, r0, #4
 8008890:	e7f5      	b.n	800887e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008892 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008892:	4770      	bx	lr

08008894 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008894:	b510      	push	{r4, lr}
 8008896:	2200      	movs	r2, #0
 8008898:	6082      	str	r2, [r0, #8]
    : view(v)
 800889a:	4a04      	ldr	r2, [pc, #16]	; (80088ac <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800889c:	60c1      	str	r1, [r0, #12]
 800889e:	f102 0408 	add.w	r4, r2, #8
 80088a2:	3224      	adds	r2, #36	; 0x24
 80088a4:	6004      	str	r4, [r0, #0]
 80088a6:	6042      	str	r2, [r0, #4]
}
 80088a8:	bd10      	pop	{r4, pc}
 80088aa:	bf00      	nop
 80088ac:	0802d8e8 	.word	0x0802d8e8

080088b0 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 80088b0:	4770      	bx	lr
	...

080088b4 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 80088b4:	b510      	push	{r4, lr}
 80088b6:	4b03      	ldr	r3, [pc, #12]	; (80088c4 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 80088b8:	6003      	str	r3, [r0, #0]
 80088ba:	4604      	mov	r4, r0
 80088bc:	f7fd fe10 	bl	80064e0 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 80088c0:	4620      	mov	r0, r4
 80088c2:	bd10      	pop	{r4, pc}
 80088c4:	0802d920 	.word	0x0802d920

080088c8 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 80088c8:	b510      	push	{r4, lr}
 80088ca:	4604      	mov	r4, r0
 80088cc:	f7ff fff2 	bl	80088b4 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 80088d0:	4620      	mov	r0, r4
 80088d2:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80088d6:	f020 fb56 	bl	8028f86 <_ZdlPvj>
 80088da:	4620      	mov	r0, r4
 80088dc:	bd10      	pop	{r4, pc}
	...

080088e0 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 80088e0:	b510      	push	{r4, lr}
 80088e2:	4604      	mov	r4, r0
 80088e4:	f7fd fe1c 	bl	8006520 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 80088e8:	4b01      	ldr	r3, [pc, #4]	; (80088f0 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 80088ea:	6023      	str	r3, [r4, #0]
}
 80088ec:	4620      	mov	r0, r4
 80088ee:	bd10      	pop	{r4, pc}
 80088f0:	0802d920 	.word	0x0802d920

080088f4 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 80088f4:	f7fd bde5 	b.w	80064c2 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

080088f8 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 80088f8:	4770      	bx	lr

080088fa <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 80088fa:	3804      	subs	r0, #4
 80088fc:	4770      	bx	lr

080088fe <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 80088fe:	4770      	bx	lr

08008900 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008900:	4770      	bx	lr

08008902 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008902:	b510      	push	{r4, lr}
 8008904:	2110      	movs	r1, #16
 8008906:	4604      	mov	r4, r0
 8008908:	f020 fb3d 	bl	8028f86 <_ZdlPvj>
 800890c:	4620      	mov	r0, r4
 800890e:	bd10      	pop	{r4, pc}

08008910 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008910:	f1a0 0004 	sub.w	r0, r0, #4
 8008914:	e7f5      	b.n	8008902 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008916 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008916:	4770      	bx	lr

08008918 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008918:	b510      	push	{r4, lr}
 800891a:	2200      	movs	r2, #0
 800891c:	6082      	str	r2, [r0, #8]
    : view(v)
 800891e:	4a04      	ldr	r2, [pc, #16]	; (8008930 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008920:	60c1      	str	r1, [r0, #12]
 8008922:	f102 0408 	add.w	r4, r2, #8
 8008926:	3224      	adds	r2, #36	; 0x24
 8008928:	6004      	str	r4, [r0, #0]
 800892a:	6042      	str	r2, [r0, #4]
}
 800892c:	bd10      	pop	{r4, pc}
 800892e:	bf00      	nop
 8008930:	0802d94c 	.word	0x0802d94c

08008934 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008934:	4770      	bx	lr
	...

08008938 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008938:	b510      	push	{r4, lr}
 800893a:	4b03      	ldr	r3, [pc, #12]	; (8008948 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 800893c:	6003      	str	r3, [r0, #0]
 800893e:	4604      	mov	r4, r0
 8008940:	f7fd ff92 	bl	8006868 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008944:	4620      	mov	r0, r4
 8008946:	bd10      	pop	{r4, pc}
 8008948:	0802d984 	.word	0x0802d984

0800894c <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 800894c:	b510      	push	{r4, lr}
 800894e:	4604      	mov	r4, r0
 8008950:	f7ff fff2 	bl	8008938 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008954:	4620      	mov	r0, r4
 8008956:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800895a:	f020 fb14 	bl	8028f86 <_ZdlPvj>
 800895e:	4620      	mov	r0, r4
 8008960:	bd10      	pop	{r4, pc}
	...

08008964 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008964:	b510      	push	{r4, lr}
 8008966:	4604      	mov	r4, r0
 8008968:	f7fd ff9e 	bl	80068a8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 800896c:	4b01      	ldr	r3, [pc, #4]	; (8008974 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 800896e:	6023      	str	r3, [r4, #0]
}
 8008970:	4620      	mov	r0, r4
 8008972:	bd10      	pop	{r4, pc}
 8008974:	0802d984 	.word	0x0802d984

08008978 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008978:	f7fd bf67 	b.w	800684a <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800897c <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800897c:	4770      	bx	lr

0800897e <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800897e:	3804      	subs	r0, #4
 8008980:	4770      	bx	lr

08008982 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008982:	4770      	bx	lr

08008984 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008984:	68c0      	ldr	r0, [r0, #12]
 8008986:	6803      	ldr	r3, [r0, #0]
 8008988:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800898a:	4718      	bx	r3

0800898c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800898c:	f1a0 0004 	sub.w	r0, r0, #4
 8008990:	f7ff bff8 	b.w	8008984 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008994 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008994:	b510      	push	{r4, lr}
 8008996:	2110      	movs	r1, #16
 8008998:	4604      	mov	r4, r0
 800899a:	f020 faf4 	bl	8028f86 <_ZdlPvj>
 800899e:	4620      	mov	r0, r4
 80089a0:	bd10      	pop	{r4, pc}

080089a2 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 80089a2:	f1a0 0004 	sub.w	r0, r0, #4
 80089a6:	e7f5      	b.n	8008994 <_ZN27Measurement_SinglePresenterD0Ev>

080089a8 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 80089a8:	b510      	push	{r4, lr}
 80089aa:	2200      	movs	r2, #0
 80089ac:	6082      	str	r2, [r0, #8]
    : view(v)
 80089ae:	4a04      	ldr	r2, [pc, #16]	; (80089c0 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 80089b0:	60c1      	str	r1, [r0, #12]
 80089b2:	f102 0408 	add.w	r4, r2, #8
 80089b6:	3224      	adds	r2, #36	; 0x24
 80089b8:	6004      	str	r4, [r0, #0]
 80089ba:	6042      	str	r2, [r0, #4]
}
 80089bc:	bd10      	pop	{r4, pc}
 80089be:	bf00      	nop
 80089c0:	0802d9b0 	.word	0x0802d9b0

080089c4 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 80089c4:	4770      	bx	lr
	...

080089c8 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 80089c8:	b510      	push	{r4, lr}
 80089ca:	4b03      	ldr	r3, [pc, #12]	; (80089d8 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 80089cc:	6003      	str	r3, [r0, #0]
 80089ce:	4604      	mov	r4, r0
 80089d0:	f7fe f900 	bl	8006bd4 <_ZN26Measurement_SingleViewBaseD1Ev>
 80089d4:	4620      	mov	r0, r4
 80089d6:	bd10      	pop	{r4, pc}
 80089d8:	0802d9e8 	.word	0x0802d9e8

080089dc <_ZN22Measurement_SingleViewD0Ev>:
 80089dc:	b510      	push	{r4, lr}
 80089de:	4604      	mov	r4, r0
 80089e0:	f7ff fff2 	bl	80089c8 <_ZN22Measurement_SingleViewD1Ev>
 80089e4:	4620      	mov	r0, r4
 80089e6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80089ea:	f020 facc 	bl	8028f86 <_ZdlPvj>
 80089ee:	4620      	mov	r0, r4
 80089f0:	bd10      	pop	{r4, pc}
	...

080089f4 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 80089f4:	b510      	push	{r4, lr}
 80089f6:	4604      	mov	r4, r0
 80089f8:	f7fe f926 	bl	8006c48 <_ZN26Measurement_SingleViewBaseC1Ev>
 80089fc:	4b01      	ldr	r3, [pc, #4]	; (8008a04 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 80089fe:	6023      	str	r3, [r4, #0]
}
 8008a00:	4620      	mov	r0, r4
 8008a02:	bd10      	pop	{r4, pc}
 8008a04:	0802d9e8 	.word	0x0802d9e8

08008a08 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8008a08:	f7fe b8c0 	b.w	8006b8c <_ZN26Measurement_SingleViewBase11setupScreenEv>

08008a0c <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8008a0c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008a0e:	4a0a      	ldr	r2, [pc, #40]	; (8008a38 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008a10:	4605      	mov	r5, r0
 8008a12:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008a14:	460b      	mov	r3, r1
 8008a16:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008a1a:	2104      	movs	r1, #4
 8008a1c:	f00f fd94 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008a20:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008a24:	f00d fd14 	bl	8016450 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008a28:	b92c      	cbnz	r4, 8008a36 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8008a2a:	f00c fc29 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008a2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008a32:	f7fb b9b1 	b.w	8003d98 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008a36:	bd38      	pop	{r3, r4, r5, pc}
 8008a38:	0802d5bc 	.word	0x0802d5bc

08008a3c <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008a3c:	4770      	bx	lr

08008a3e <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8008a3e:	3804      	subs	r0, #4
 8008a40:	4770      	bx	lr

08008a42 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8008a42:	4770      	bx	lr

08008a44 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8008a44:	4770      	bx	lr

08008a46 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8008a46:	b510      	push	{r4, lr}
 8008a48:	2110      	movs	r1, #16
 8008a4a:	4604      	mov	r4, r0
 8008a4c:	f020 fa9b 	bl	8028f86 <_ZdlPvj>
 8008a50:	4620      	mov	r0, r4
 8008a52:	bd10      	pop	{r4, pc}

08008a54 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8008a54:	f1a0 0004 	sub.w	r0, r0, #4
 8008a58:	e7f5      	b.n	8008a46 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08008a5a <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8008a5a:	4770      	bx	lr

08008a5c <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8008a5c:	b510      	push	{r4, lr}
 8008a5e:	2200      	movs	r2, #0
 8008a60:	6082      	str	r2, [r0, #8]
    : view(v)
 8008a62:	4a04      	ldr	r2, [pc, #16]	; (8008a74 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8008a64:	60c1      	str	r1, [r0, #12]
 8008a66:	f102 0408 	add.w	r4, r2, #8
 8008a6a:	3224      	adds	r2, #36	; 0x24
 8008a6c:	6004      	str	r4, [r0, #0]
 8008a6e:	6042      	str	r2, [r0, #4]
}
 8008a70:	bd10      	pop	{r4, pc}
 8008a72:	bf00      	nop
 8008a74:	0802da18 	.word	0x0802da18

08008a78 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008a78:	4770      	bx	lr
	...

08008a7c <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8008a7c:	b510      	push	{r4, lr}
 8008a7e:	4b03      	ldr	r3, [pc, #12]	; (8008a8c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008a80:	6003      	str	r3, [r0, #0]
 8008a82:	4604      	mov	r4, r0
 8008a84:	f7fe fb2e 	bl	80070e4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008a88:	4620      	mov	r0, r4
 8008a8a:	bd10      	pop	{r4, pc}
 8008a8c:	0802da50 	.word	0x0802da50

08008a90 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008a90:	b510      	push	{r4, lr}
 8008a92:	4604      	mov	r4, r0
 8008a94:	f7ff fff2 	bl	8008a7c <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008a98:	4620      	mov	r0, r4
 8008a9a:	f241 31f4 	movw	r1, #5108	; 0x13f4
 8008a9e:	f020 fa72 	bl	8028f86 <_ZdlPvj>
 8008aa2:	4620      	mov	r0, r4
 8008aa4:	bd10      	pop	{r4, pc}
	...

08008aa8 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008aa8:	b510      	push	{r4, lr}
 8008aaa:	4604      	mov	r4, r0
 8008aac:	f7fe fb42 	bl	8007134 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008ab0:	4b01      	ldr	r3, [pc, #4]	; (8008ab8 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8008ab2:	6023      	str	r3, [r4, #0]
}
 8008ab4:	4620      	mov	r0, r4
 8008ab6:	bd10      	pop	{r4, pc}
 8008ab8:	0802da50 	.word	0x0802da50

08008abc <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8008abc:	f7fe baeb 	b.w	8007096 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08008ac0 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8008ac0:	b570      	push	{r4, r5, r6, lr}
 8008ac2:	b086      	sub	sp, #24
 8008ac4:	4604      	mov	r4, r0
#ifndef SIMULATOR
	int test = 	0;

	test = updateGUI_test();
 8008ac6:	f7f8 fdd5 	bl	8001674 <updateGUI_test>
 8008aca:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8008acc:	f7f9 fab0 	bl	8002030 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008ad0:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8008ad2:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008ad4:	2001      	movs	r0, #1
 8008ad6:	f7f8 fd19 	bl	800150c <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8008ada:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8008ade:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008ae0:	ed8d 0a04 	vstr	s0, [sp, #16]
	SMD1_gauge.setValue(test);
 8008ae4:	9003      	str	r0, [sp, #12]
 8008ae6:	f009 fc5f 	bl	80123a8 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8008aea:	9803      	ldr	r0, [sp, #12]
 8008aec:	f00d fcb0 	bl	8016450 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 8008af0:	462b      	mov	r3, r5
 8008af2:	4a14      	ldr	r2, [pc, #80]	; (8008b44 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
 8008af4:	210a      	movs	r1, #10
 8008af6:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8008afa:	f00f fd25 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 8008afe:	f504 7020 	add.w	r0, r4, #640	; 0x280
 8008b02:	f00d fca5 	bl	8016450 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%d", fft.main_freq);
 8008b06:	9804      	ldr	r0, [sp, #16]
 8008b08:	f7f7 fd86 	bl	8000618 <__aeabi_f2d>
 8008b0c:	f204 56ac 	addw	r6, r4, #1452	; 0x5ac
 8008b10:	e9cd 0100 	strd	r0, r1, [sp]
 8008b14:	4a0b      	ldr	r2, [pc, #44]	; (8008b44 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
 8008b16:	210a      	movs	r1, #10
 8008b18:	4630      	mov	r0, r6
 8008b1a:	f00f fd15 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Frequency.invalidate();
 8008b1e:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 8008b22:	f00d fc95 	bl	8016450 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%d", test);
 8008b26:	4a07      	ldr	r2, [pc, #28]	; (8008b44 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0x84>)
 8008b28:	462b      	mov	r3, r5
 8008b2a:	210a      	movs	r1, #10
 8008b2c:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8008b30:	f00f fd0a 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Distance.invalidate();
 8008b34:	f504 7046 	add.w	r0, r4, #792	; 0x318
#endif
}
 8008b38:	b006      	add	sp, #24
 8008b3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	SMD1_Distance.invalidate();
 8008b3e:	f00d bc87 	b.w	8016450 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008b42:	bf00      	nop
 8008b44:	0802d5bc 	.word	0x0802d5bc

08008b48 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8008b48:	4770      	bx	lr

08008b4a <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 8008b4a:	3804      	subs	r0, #4
 8008b4c:	4770      	bx	lr

08008b4e <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008b4e:	4770      	bx	lr

08008b50 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008b50:	4770      	bx	lr

08008b52 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008b52:	b510      	push	{r4, lr}
 8008b54:	2110      	movs	r1, #16
 8008b56:	4604      	mov	r4, r0
 8008b58:	f020 fa15 	bl	8028f86 <_ZdlPvj>
 8008b5c:	4620      	mov	r0, r4
 8008b5e:	bd10      	pop	{r4, pc}

08008b60 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008b60:	f1a0 0004 	sub.w	r0, r0, #4
 8008b64:	e7f5      	b.n	8008b52 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08008b66 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8008b66:	4770      	bx	lr

08008b68 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8008b68:	b510      	push	{r4, lr}
 8008b6a:	2200      	movs	r2, #0
 8008b6c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008b6e:	4a04      	ldr	r2, [pc, #16]	; (8008b80 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008b70:	60c1      	str	r1, [r0, #12]
 8008b72:	f102 0408 	add.w	r4, r2, #8
 8008b76:	3224      	adds	r2, #36	; 0x24
 8008b78:	6004      	str	r4, [r0, #0]
 8008b7a:	6042      	str	r2, [r0, #4]
}
 8008b7c:	bd10      	pop	{r4, pc}
 8008b7e:	bf00      	nop
 8008b80:	0802da80 	.word	0x0802da80

08008b84 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008b84:	4770      	bx	lr
	...

08008b88 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8008b88:	b510      	push	{r4, lr}
 8008b8a:	4b03      	ldr	r3, [pc, #12]	; (8008b98 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008b8c:	6003      	str	r3, [r0, #0]
 8008b8e:	4604      	mov	r4, r0
 8008b90:	f7fe fe3a 	bl	8007808 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008b94:	4620      	mov	r0, r4
 8008b96:	bd10      	pop	{r4, pc}
 8008b98:	0802dab8 	.word	0x0802dab8

08008b9c <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008b9c:	b510      	push	{r4, lr}
 8008b9e:	4604      	mov	r4, r0
 8008ba0:	f7ff fff2 	bl	8008b88 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008ba4:	4620      	mov	r0, r4
 8008ba6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008baa:	f020 f9ec 	bl	8028f86 <_ZdlPvj>
 8008bae:	4620      	mov	r0, r4
 8008bb0:	bd10      	pop	{r4, pc}
	...

08008bb4 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008bb4:	b510      	push	{r4, lr}
 8008bb6:	4604      	mov	r4, r0
 8008bb8:	f7fe fe46 	bl	8007848 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008bbc:	4b01      	ldr	r3, [pc, #4]	; (8008bc4 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008bbe:	6023      	str	r3, [r4, #0]
}
 8008bc0:	4620      	mov	r0, r4
 8008bc2:	bd10      	pop	{r4, pc}
 8008bc4:	0802dab8 	.word	0x0802dab8

08008bc8 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 8008bc8:	f7fe be0d 	b.w	80077e6 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008bcc <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008bcc:	2100      	movs	r1, #0
 8008bce:	223c      	movs	r2, #60	; 0x3c
 8008bd0:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8008bd4:	4770      	bx	lr
	...

08008bd8 <_ZN5Model4tickEv>:

void Model::tick()
{
 8008bd8:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008bda:	4d0a      	ldr	r5, [pc, #40]	; (8008c04 <_ZN5Model4tickEv+0x2c>)
{
 8008bdc:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 8008bde:	6828      	ldr	r0, [r5, #0]
 8008be0:	f004 faac 	bl	800d13c <osMessageQueueGetCount>
 8008be4:	b168      	cbz	r0, 8008c02 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 8008be6:	2300      	movs	r3, #0
 8008be8:	6828      	ldr	r0, [r5, #0]
 8008bea:	461a      	mov	r2, r3
 8008bec:	1d21      	adds	r1, r4, #4
 8008bee:	f004 fa71 	bl	800d0d4 <osMessageQueueGet>
 8008bf2:	b930      	cbnz	r0, 8008c02 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 8008bf4:	6820      	ldr	r0, [r4, #0]
 8008bf6:	6861      	ldr	r1, [r4, #4]
 8008bf8:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 8008bfa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 8008bfe:	689b      	ldr	r3, [r3, #8]
 8008c00:	4718      	bx	r3
}
 8008c02:	bd70      	pop	{r4, r5, r6, pc}
 8008c04:	200018d4 	.word	0x200018d4

08008c08 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 8008c08:	4770      	bx	lr

08008c0a <_ZThn4_N21Project_InfoPresenterD1Ev>:
 8008c0a:	3804      	subs	r0, #4
 8008c0c:	4770      	bx	lr

08008c0e <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 8008c0e:	4770      	bx	lr

08008c10 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008c10:	68c0      	ldr	r0, [r0, #12]
 8008c12:	6803      	ldr	r3, [r0, #0]
 8008c14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c16:	4718      	bx	r3

08008c18 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008c18:	f1a0 0004 	sub.w	r0, r0, #4
 8008c1c:	f7ff bff8 	b.w	8008c10 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08008c20 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8008c20:	b510      	push	{r4, lr}
 8008c22:	2110      	movs	r1, #16
 8008c24:	4604      	mov	r4, r0
 8008c26:	f020 f9ae 	bl	8028f86 <_ZdlPvj>
 8008c2a:	4620      	mov	r0, r4
 8008c2c:	bd10      	pop	{r4, pc}

08008c2e <_ZThn4_N21Project_InfoPresenterD0Ev>:
 8008c2e:	f1a0 0004 	sub.w	r0, r0, #4
 8008c32:	e7f5      	b.n	8008c20 <_ZN21Project_InfoPresenterD0Ev>

08008c34 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8008c34:	b510      	push	{r4, lr}
 8008c36:	2200      	movs	r2, #0
 8008c38:	6082      	str	r2, [r0, #8]
    : view(v)
 8008c3a:	4a04      	ldr	r2, [pc, #16]	; (8008c4c <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008c3c:	60c1      	str	r1, [r0, #12]
 8008c3e:	f102 0408 	add.w	r4, r2, #8
 8008c42:	3224      	adds	r2, #36	; 0x24
 8008c44:	6004      	str	r4, [r0, #0]
 8008c46:	6042      	str	r2, [r0, #4]
}
 8008c48:	bd10      	pop	{r4, pc}
 8008c4a:	bf00      	nop
 8008c4c:	0802dae4 	.word	0x0802dae4

08008c50 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008c50:	4770      	bx	lr
	...

08008c54 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008c54:	b510      	push	{r4, lr}
 8008c56:	4b03      	ldr	r3, [pc, #12]	; (8008c64 <_ZN16Project_InfoViewD1Ev+0x10>)
 8008c58:	6003      	str	r3, [r0, #0]
 8008c5a:	4604      	mov	r4, r0
 8008c5c:	f7fe ff8e 	bl	8007b7c <_ZN20Project_InfoViewBaseD1Ev>
 8008c60:	4620      	mov	r0, r4
 8008c62:	bd10      	pop	{r4, pc}
 8008c64:	0802db1c 	.word	0x0802db1c

08008c68 <_ZN16Project_InfoViewD0Ev>:
 8008c68:	b510      	push	{r4, lr}
 8008c6a:	4604      	mov	r4, r0
 8008c6c:	f7ff fff2 	bl	8008c54 <_ZN16Project_InfoViewD1Ev>
 8008c70:	4620      	mov	r0, r4
 8008c72:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008c76:	f020 f986 	bl	8028f86 <_ZdlPvj>
 8008c7a:	4620      	mov	r0, r4
 8008c7c:	bd10      	pop	{r4, pc}
	...

08008c80 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008c80:	b510      	push	{r4, lr}
 8008c82:	4604      	mov	r4, r0
 8008c84:	f7fe ffa2 	bl	8007bcc <_ZN20Project_InfoViewBaseC1Ev>
 8008c88:	4b01      	ldr	r3, [pc, #4]	; (8008c90 <_ZN16Project_InfoViewC1Ev+0x10>)
 8008c8a:	6023      	str	r3, [r4, #0]
}
 8008c8c:	4620      	mov	r0, r4
 8008c8e:	bd10      	pop	{r4, pc}
 8008c90:	0802db1c 	.word	0x0802db1c

08008c94 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008c94:	f7fe bf4e 	b.w	8007b34 <_ZN20Project_InfoViewBase11setupScreenEv>

08008c98 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008c98:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008c9a:	4a0a      	ldr	r2, [pc, #40]	; (8008cc4 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008c9c:	4605      	mov	r5, r0
 8008c9e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008ca0:	460b      	mov	r3, r1
 8008ca2:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8008ca6:	2104      	movs	r1, #4
 8008ca8:	f00f fc4e 	bl	8018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008cac:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008cb0:	f00d fbce 	bl	8016450 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008cb4:	b92c      	cbnz	r4, 8008cc2 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8008cb6:	f00c fae3 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008cba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008cbe:	f7fb b86b 	b.w	8003d98 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008cc2:	bd38      	pop	{r3, r4, r5, pc}
 8008cc4:	0802d5bc 	.word	0x0802d5bc

08008cc8 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008cc8:	4770      	bx	lr

08008cca <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008cca:	3804      	subs	r0, #4
 8008ccc:	4770      	bx	lr

08008cce <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008cce:	4770      	bx	lr

08008cd0 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008cd0:	4770      	bx	lr

08008cd2 <_ZN21Shutting_OffPresenterD0Ev>:
 8008cd2:	b510      	push	{r4, lr}
 8008cd4:	2110      	movs	r1, #16
 8008cd6:	4604      	mov	r4, r0
 8008cd8:	f020 f955 	bl	8028f86 <_ZdlPvj>
 8008cdc:	4620      	mov	r0, r4
 8008cde:	bd10      	pop	{r4, pc}

08008ce0 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8008ce0:	f1a0 0004 	sub.w	r0, r0, #4
 8008ce4:	e7f5      	b.n	8008cd2 <_ZN21Shutting_OffPresenterD0Ev>

08008ce6 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8008ce6:	4770      	bx	lr

08008ce8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008ce8:	b510      	push	{r4, lr}
 8008cea:	2200      	movs	r2, #0
 8008cec:	6082      	str	r2, [r0, #8]
    : view(v)
 8008cee:	4a04      	ldr	r2, [pc, #16]	; (8008d00 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008cf0:	60c1      	str	r1, [r0, #12]
 8008cf2:	f102 0408 	add.w	r4, r2, #8
 8008cf6:	3224      	adds	r2, #36	; 0x24
 8008cf8:	6004      	str	r4, [r0, #0]
 8008cfa:	6042      	str	r2, [r0, #4]
}
 8008cfc:	bd10      	pop	{r4, pc}
 8008cfe:	bf00      	nop
 8008d00:	0802db4c 	.word	0x0802db4c

08008d04 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8008d04:	4770      	bx	lr
	...

08008d08 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008d08:	b510      	push	{r4, lr}
 8008d0a:	4b03      	ldr	r3, [pc, #12]	; (8008d18 <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008d0c:	6003      	str	r3, [r0, #0]
 8008d0e:	4604      	mov	r4, r0
 8008d10:	f7ff f92a 	bl	8007f68 <_ZN20Shutting_OffViewBaseD1Ev>
 8008d14:	4620      	mov	r0, r4
 8008d16:	bd10      	pop	{r4, pc}
 8008d18:	0802db84 	.word	0x0802db84

08008d1c <_ZN16Shutting_OffViewD0Ev>:
 8008d1c:	b510      	push	{r4, lr}
 8008d1e:	4604      	mov	r4, r0
 8008d20:	f7ff fff2 	bl	8008d08 <_ZN16Shutting_OffViewD1Ev>
 8008d24:	4620      	mov	r0, r4
 8008d26:	2198      	movs	r1, #152	; 0x98
 8008d28:	f020 f92d 	bl	8028f86 <_ZdlPvj>
 8008d2c:	4620      	mov	r0, r4
 8008d2e:	bd10      	pop	{r4, pc}

08008d30 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008d30:	b510      	push	{r4, lr}
 8008d32:	4604      	mov	r4, r0
 8008d34:	f7ff f922 	bl	8007f7c <_ZN20Shutting_OffViewBaseC1Ev>
 8008d38:	4b01      	ldr	r3, [pc, #4]	; (8008d40 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008d3a:	6023      	str	r3, [r4, #0]
}
 8008d3c:	4620      	mov	r0, r4
 8008d3e:	bd10      	pop	{r4, pc}
 8008d40:	0802db84 	.word	0x0802db84

08008d44 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008d44:	f7ff b911 	b.w	8007f6a <_ZN20Shutting_OffViewBase11setupScreenEv>

08008d48 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008d48:	20f0      	movs	r0, #240	; 0xf0
 8008d4a:	4770      	bx	lr

08008d4c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008d4c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008d50:	4770      	bx	lr
 8008d52:	bf00      	nop

08008d54 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008d54:	2029      	movs	r0, #41	; 0x29
 8008d56:	f7f8 bfe7 	b.w	8001d28 <LCD_IO_WriteReg>
 8008d5a:	bf00      	nop

08008d5c <ili9341_DisplayOff>:
 8008d5c:	2028      	movs	r0, #40	; 0x28
 8008d5e:	f7f8 bfe3 	b.w	8001d28 <LCD_IO_WriteReg>
 8008d62:	bf00      	nop

08008d64 <ili9341_Init>:
{
 8008d64:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008d66:	f7f8 ffa5 	bl	8001cb4 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008d6a:	20ca      	movs	r0, #202	; 0xca
 8008d6c:	f7f8 ffdc 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d70:	20c3      	movs	r0, #195	; 0xc3
 8008d72:	f7f8 ffaf 	bl	8001cd4 <LCD_IO_WriteData>
 8008d76:	2008      	movs	r0, #8
 8008d78:	f7f8 ffac 	bl	8001cd4 <LCD_IO_WriteData>
 8008d7c:	2050      	movs	r0, #80	; 0x50
 8008d7e:	f7f8 ffa9 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d82:	20cf      	movs	r0, #207	; 0xcf
 8008d84:	f7f8 ffd0 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d88:	2000      	movs	r0, #0
 8008d8a:	f7f8 ffa3 	bl	8001cd4 <LCD_IO_WriteData>
 8008d8e:	20c1      	movs	r0, #193	; 0xc1
 8008d90:	f7f8 ffa0 	bl	8001cd4 <LCD_IO_WriteData>
 8008d94:	2030      	movs	r0, #48	; 0x30
 8008d96:	f7f8 ff9d 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d9a:	20ed      	movs	r0, #237	; 0xed
 8008d9c:	f7f8 ffc4 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008da0:	2064      	movs	r0, #100	; 0x64
 8008da2:	f7f8 ff97 	bl	8001cd4 <LCD_IO_WriteData>
 8008da6:	2003      	movs	r0, #3
 8008da8:	f7f8 ff94 	bl	8001cd4 <LCD_IO_WriteData>
 8008dac:	2012      	movs	r0, #18
 8008dae:	f7f8 ff91 	bl	8001cd4 <LCD_IO_WriteData>
 8008db2:	2081      	movs	r0, #129	; 0x81
 8008db4:	f7f8 ff8e 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008db8:	20e8      	movs	r0, #232	; 0xe8
 8008dba:	f7f8 ffb5 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008dbe:	2085      	movs	r0, #133	; 0x85
 8008dc0:	f7f8 ff88 	bl	8001cd4 <LCD_IO_WriteData>
 8008dc4:	2000      	movs	r0, #0
 8008dc6:	f7f8 ff85 	bl	8001cd4 <LCD_IO_WriteData>
 8008dca:	2078      	movs	r0, #120	; 0x78
 8008dcc:	f7f8 ff82 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008dd0:	20cb      	movs	r0, #203	; 0xcb
 8008dd2:	f7f8 ffa9 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008dd6:	2039      	movs	r0, #57	; 0x39
 8008dd8:	f7f8 ff7c 	bl	8001cd4 <LCD_IO_WriteData>
 8008ddc:	202c      	movs	r0, #44	; 0x2c
 8008dde:	f7f8 ff79 	bl	8001cd4 <LCD_IO_WriteData>
 8008de2:	2000      	movs	r0, #0
 8008de4:	f7f8 ff76 	bl	8001cd4 <LCD_IO_WriteData>
 8008de8:	2034      	movs	r0, #52	; 0x34
 8008dea:	f7f8 ff73 	bl	8001cd4 <LCD_IO_WriteData>
 8008dee:	2002      	movs	r0, #2
 8008df0:	f7f8 ff70 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008df4:	20f7      	movs	r0, #247	; 0xf7
 8008df6:	f7f8 ff97 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008dfa:	2020      	movs	r0, #32
 8008dfc:	f7f8 ff6a 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e00:	20ea      	movs	r0, #234	; 0xea
 8008e02:	f7f8 ff91 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e06:	2000      	movs	r0, #0
 8008e08:	f7f8 ff64 	bl	8001cd4 <LCD_IO_WriteData>
 8008e0c:	2000      	movs	r0, #0
 8008e0e:	f7f8 ff61 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e12:	20b1      	movs	r0, #177	; 0xb1
 8008e14:	f7f8 ff88 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e18:	2000      	movs	r0, #0
 8008e1a:	f7f8 ff5b 	bl	8001cd4 <LCD_IO_WriteData>
 8008e1e:	201b      	movs	r0, #27
 8008e20:	f7f8 ff58 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e24:	20b6      	movs	r0, #182	; 0xb6
 8008e26:	f7f8 ff7f 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e2a:	200a      	movs	r0, #10
 8008e2c:	f7f8 ff52 	bl	8001cd4 <LCD_IO_WriteData>
 8008e30:	20a2      	movs	r0, #162	; 0xa2
 8008e32:	f7f8 ff4f 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e36:	20c0      	movs	r0, #192	; 0xc0
 8008e38:	f7f8 ff76 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e3c:	2010      	movs	r0, #16
 8008e3e:	f7f8 ff49 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e42:	20c1      	movs	r0, #193	; 0xc1
 8008e44:	f7f8 ff70 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e48:	2010      	movs	r0, #16
 8008e4a:	f7f8 ff43 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e4e:	20c5      	movs	r0, #197	; 0xc5
 8008e50:	f7f8 ff6a 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e54:	2045      	movs	r0, #69	; 0x45
 8008e56:	f7f8 ff3d 	bl	8001cd4 <LCD_IO_WriteData>
 8008e5a:	2015      	movs	r0, #21
 8008e5c:	f7f8 ff3a 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e60:	20c7      	movs	r0, #199	; 0xc7
 8008e62:	f7f8 ff61 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e66:	2090      	movs	r0, #144	; 0x90
 8008e68:	f7f8 ff34 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e6c:	2036      	movs	r0, #54	; 0x36
 8008e6e:	f7f8 ff5b 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e72:	20c8      	movs	r0, #200	; 0xc8
 8008e74:	f7f8 ff2e 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e78:	20f2      	movs	r0, #242	; 0xf2
 8008e7a:	f7f8 ff55 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e7e:	2000      	movs	r0, #0
 8008e80:	f7f8 ff28 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e84:	20b0      	movs	r0, #176	; 0xb0
 8008e86:	f7f8 ff4f 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e8a:	20c2      	movs	r0, #194	; 0xc2
 8008e8c:	f7f8 ff22 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008e90:	20b6      	movs	r0, #182	; 0xb6
 8008e92:	f7f8 ff49 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008e96:	200a      	movs	r0, #10
 8008e98:	f7f8 ff1c 	bl	8001cd4 <LCD_IO_WriteData>
 8008e9c:	20a7      	movs	r0, #167	; 0xa7
 8008e9e:	f7f8 ff19 	bl	8001cd4 <LCD_IO_WriteData>
 8008ea2:	2027      	movs	r0, #39	; 0x27
 8008ea4:	f7f8 ff16 	bl	8001cd4 <LCD_IO_WriteData>
 8008ea8:	2004      	movs	r0, #4
 8008eaa:	f7f8 ff13 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008eae:	202a      	movs	r0, #42	; 0x2a
 8008eb0:	f7f8 ff3a 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008eb4:	2000      	movs	r0, #0
 8008eb6:	f7f8 ff0d 	bl	8001cd4 <LCD_IO_WriteData>
 8008eba:	2000      	movs	r0, #0
 8008ebc:	f7f8 ff0a 	bl	8001cd4 <LCD_IO_WriteData>
 8008ec0:	2000      	movs	r0, #0
 8008ec2:	f7f8 ff07 	bl	8001cd4 <LCD_IO_WriteData>
 8008ec6:	20ef      	movs	r0, #239	; 0xef
 8008ec8:	f7f8 ff04 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008ecc:	202b      	movs	r0, #43	; 0x2b
 8008ece:	f7f8 ff2b 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ed2:	2000      	movs	r0, #0
 8008ed4:	f7f8 fefe 	bl	8001cd4 <LCD_IO_WriteData>
 8008ed8:	2000      	movs	r0, #0
 8008eda:	f7f8 fefb 	bl	8001cd4 <LCD_IO_WriteData>
 8008ede:	2001      	movs	r0, #1
 8008ee0:	f7f8 fef8 	bl	8001cd4 <LCD_IO_WriteData>
 8008ee4:	203f      	movs	r0, #63	; 0x3f
 8008ee6:	f7f8 fef5 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008eea:	20f6      	movs	r0, #246	; 0xf6
 8008eec:	f7f8 ff1c 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ef0:	2001      	movs	r0, #1
 8008ef2:	f7f8 feef 	bl	8001cd4 <LCD_IO_WriteData>
 8008ef6:	2000      	movs	r0, #0
 8008ef8:	f7f8 feec 	bl	8001cd4 <LCD_IO_WriteData>
 8008efc:	2006      	movs	r0, #6
 8008efe:	f7f8 fee9 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008f02:	202c      	movs	r0, #44	; 0x2c
 8008f04:	f7f8 ff10 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008f08:	20c8      	movs	r0, #200	; 0xc8
 8008f0a:	f7f8 ff75 	bl	8001df8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008f0e:	2026      	movs	r0, #38	; 0x26
 8008f10:	f7f8 ff0a 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008f14:	2001      	movs	r0, #1
 8008f16:	f7f8 fedd 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008f1a:	20e0      	movs	r0, #224	; 0xe0
 8008f1c:	f7f8 ff04 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008f20:	200f      	movs	r0, #15
 8008f22:	f7f8 fed7 	bl	8001cd4 <LCD_IO_WriteData>
 8008f26:	2029      	movs	r0, #41	; 0x29
 8008f28:	f7f8 fed4 	bl	8001cd4 <LCD_IO_WriteData>
 8008f2c:	2024      	movs	r0, #36	; 0x24
 8008f2e:	f7f8 fed1 	bl	8001cd4 <LCD_IO_WriteData>
 8008f32:	200c      	movs	r0, #12
 8008f34:	f7f8 fece 	bl	8001cd4 <LCD_IO_WriteData>
 8008f38:	200e      	movs	r0, #14
 8008f3a:	f7f8 fecb 	bl	8001cd4 <LCD_IO_WriteData>
 8008f3e:	2009      	movs	r0, #9
 8008f40:	f7f8 fec8 	bl	8001cd4 <LCD_IO_WriteData>
 8008f44:	204e      	movs	r0, #78	; 0x4e
 8008f46:	f7f8 fec5 	bl	8001cd4 <LCD_IO_WriteData>
 8008f4a:	2078      	movs	r0, #120	; 0x78
 8008f4c:	f7f8 fec2 	bl	8001cd4 <LCD_IO_WriteData>
 8008f50:	203c      	movs	r0, #60	; 0x3c
 8008f52:	f7f8 febf 	bl	8001cd4 <LCD_IO_WriteData>
 8008f56:	2009      	movs	r0, #9
 8008f58:	f7f8 febc 	bl	8001cd4 <LCD_IO_WriteData>
 8008f5c:	2013      	movs	r0, #19
 8008f5e:	f7f8 feb9 	bl	8001cd4 <LCD_IO_WriteData>
 8008f62:	2005      	movs	r0, #5
 8008f64:	f7f8 feb6 	bl	8001cd4 <LCD_IO_WriteData>
 8008f68:	2017      	movs	r0, #23
 8008f6a:	f7f8 feb3 	bl	8001cd4 <LCD_IO_WriteData>
 8008f6e:	2011      	movs	r0, #17
 8008f70:	f7f8 feb0 	bl	8001cd4 <LCD_IO_WriteData>
 8008f74:	2000      	movs	r0, #0
 8008f76:	f7f8 fead 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008f7a:	20e1      	movs	r0, #225	; 0xe1
 8008f7c:	f7f8 fed4 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008f80:	2000      	movs	r0, #0
 8008f82:	f7f8 fea7 	bl	8001cd4 <LCD_IO_WriteData>
 8008f86:	2016      	movs	r0, #22
 8008f88:	f7f8 fea4 	bl	8001cd4 <LCD_IO_WriteData>
 8008f8c:	201b      	movs	r0, #27
 8008f8e:	f7f8 fea1 	bl	8001cd4 <LCD_IO_WriteData>
 8008f92:	2004      	movs	r0, #4
 8008f94:	f7f8 fe9e 	bl	8001cd4 <LCD_IO_WriteData>
 8008f98:	2011      	movs	r0, #17
 8008f9a:	f7f8 fe9b 	bl	8001cd4 <LCD_IO_WriteData>
 8008f9e:	2007      	movs	r0, #7
 8008fa0:	f7f8 fe98 	bl	8001cd4 <LCD_IO_WriteData>
 8008fa4:	2031      	movs	r0, #49	; 0x31
 8008fa6:	f7f8 fe95 	bl	8001cd4 <LCD_IO_WriteData>
 8008faa:	2033      	movs	r0, #51	; 0x33
 8008fac:	f7f8 fe92 	bl	8001cd4 <LCD_IO_WriteData>
 8008fb0:	2042      	movs	r0, #66	; 0x42
 8008fb2:	f7f8 fe8f 	bl	8001cd4 <LCD_IO_WriteData>
 8008fb6:	2005      	movs	r0, #5
 8008fb8:	f7f8 fe8c 	bl	8001cd4 <LCD_IO_WriteData>
 8008fbc:	200c      	movs	r0, #12
 8008fbe:	f7f8 fe89 	bl	8001cd4 <LCD_IO_WriteData>
 8008fc2:	200a      	movs	r0, #10
 8008fc4:	f7f8 fe86 	bl	8001cd4 <LCD_IO_WriteData>
 8008fc8:	2028      	movs	r0, #40	; 0x28
 8008fca:	f7f8 fe83 	bl	8001cd4 <LCD_IO_WriteData>
 8008fce:	202f      	movs	r0, #47	; 0x2f
 8008fd0:	f7f8 fe80 	bl	8001cd4 <LCD_IO_WriteData>
 8008fd4:	200f      	movs	r0, #15
 8008fd6:	f7f8 fe7d 	bl	8001cd4 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008fda:	2011      	movs	r0, #17
 8008fdc:	f7f8 fea4 	bl	8001d28 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008fe0:	20c8      	movs	r0, #200	; 0xc8
 8008fe2:	f7f8 ff09 	bl	8001df8 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008fe6:	2029      	movs	r0, #41	; 0x29
 8008fe8:	f7f8 fe9e 	bl	8001d28 <LCD_IO_WriteReg>
}
 8008fec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008ff0:	202c      	movs	r0, #44	; 0x2c
 8008ff2:	f7f8 be99 	b.w	8001d28 <LCD_IO_WriteReg>
 8008ff6:	bf00      	nop

08008ff8 <ili9341_ReadID>:
{
 8008ff8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008ffa:	f7f8 fe5b 	bl	8001cb4 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008ffe:	2103      	movs	r1, #3
 8009000:	20d3      	movs	r0, #211	; 0xd3
 8009002:	f7f8 febb 	bl	8001d7c <LCD_IO_ReadData>
}
 8009006:	b280      	uxth	r0, r0
 8009008:	bd08      	pop	{r3, pc}
 800900a:	bf00      	nop

0800900c <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 800900c:	221f      	movs	r2, #31
 800900e:	210b      	movs	r1, #11
 8009010:	b2c0      	uxtb	r0, r0
 8009012:	f7f8 be01 	b.w	8001c18 <IOE_Write>
 8009016:	bf00      	nop

08009018 <stmpe811_Reset>:
{
 8009018:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800901a:	b2c4      	uxtb	r4, r0
 800901c:	2202      	movs	r2, #2
 800901e:	2103      	movs	r1, #3
 8009020:	4620      	mov	r0, r4
 8009022:	f7f8 fdf9 	bl	8001c18 <IOE_Write>
  IOE_Delay(10); 
 8009026:	200a      	movs	r0, #10
 8009028:	f7f8 fe42 	bl	8001cb0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800902c:	4620      	mov	r0, r4
 800902e:	2200      	movs	r2, #0
 8009030:	2103      	movs	r1, #3
 8009032:	f7f8 fdf1 	bl	8001c18 <IOE_Write>
}
 8009036:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800903a:	2002      	movs	r0, #2
 800903c:	f7f8 be38 	b.w	8001cb0 <IOE_Delay>

08009040 <stmpe811_ReadID>:
{
 8009040:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009042:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009044:	f7f8 fde4 	bl	8001c10 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009048:	2100      	movs	r1, #0
 800904a:	4620      	mov	r0, r4
 800904c:	f7f8 fdfc 	bl	8001c48 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009050:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009052:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009054:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009056:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009058:	f7f8 fdf6 	bl	8001c48 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800905c:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009060:	b280      	uxth	r0, r0
 8009062:	bd10      	pop	{r4, pc}

08009064 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009064:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009066:	b2c4      	uxtb	r4, r0
 8009068:	2140      	movs	r1, #64	; 0x40
 800906a:	4620      	mov	r0, r4
 800906c:	f7f8 fdec 	bl	8001c48 <IOE_Read>
  
  if(state > 0)
 8009070:	0603      	lsls	r3, r0, #24
 8009072:	d40b      	bmi.n	800908c <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009074:	4620      	mov	r0, r4
 8009076:	2201      	movs	r2, #1
 8009078:	214b      	movs	r1, #75	; 0x4b
 800907a:	f7f8 fdcd 	bl	8001c18 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800907e:	4620      	mov	r0, r4
 8009080:	2200      	movs	r2, #0
 8009082:	214b      	movs	r1, #75	; 0x4b
 8009084:	f7f8 fdc8 	bl	8001c18 <IOE_Write>
  uint8_t ret = 0;
 8009088:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800908a:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800908c:	214c      	movs	r1, #76	; 0x4c
 800908e:	4620      	mov	r0, r4
 8009090:	f7f8 fdda 	bl	8001c48 <IOE_Read>
      ret = 1;
 8009094:	3800      	subs	r0, #0
 8009096:	bf18      	it	ne
 8009098:	2001      	movne	r0, #1
}
 800909a:	bd10      	pop	{r4, pc}

0800909c <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800909c:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800909e:	210b      	movs	r1, #11
 80090a0:	b2c0      	uxtb	r0, r0
 80090a2:	f7f8 fdd1 	bl	8001c48 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 80090a6:	f000 001f 	and.w	r0, r0, #31
 80090aa:	bd08      	pop	{r3, pc}

080090ac <stmpe811_TS_GetXY>:
{
 80090ac:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80090ae:	2304      	movs	r3, #4
{
 80090b0:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80090b2:	b2c4      	uxtb	r4, r0
{
 80090b4:	4615      	mov	r5, r2
 80090b6:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80090b8:	eb0d 0203 	add.w	r2, sp, r3
 80090bc:	21d7      	movs	r1, #215	; 0xd7
 80090be:	4620      	mov	r0, r4
 80090c0:	f7f8 fdde 	bl	8001c80 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80090c4:	9b01      	ldr	r3, [sp, #4]
 80090c6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80090c8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80090ca:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80090ce:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80090d0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80090d2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80090d4:	2201      	movs	r2, #1
 80090d6:	214b      	movs	r1, #75	; 0x4b
 80090d8:	f7f8 fd9e 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80090dc:	2200      	movs	r2, #0
 80090de:	214b      	movs	r1, #75	; 0x4b
 80090e0:	4620      	mov	r0, r4
 80090e2:	f7f8 fd99 	bl	8001c18 <IOE_Write>
}
 80090e6:	b002      	add	sp, #8
 80090e8:	bd70      	pop	{r4, r5, r6, pc}
 80090ea:	bf00      	nop

080090ec <stmpe811_TS_Start>:
{
 80090ec:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80090ee:	b2c4      	uxtb	r4, r0
 80090f0:	2104      	movs	r1, #4
 80090f2:	4620      	mov	r0, r4
 80090f4:	f7f8 fda8 	bl	8001c48 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80090f8:	2104      	movs	r1, #4
 80090fa:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80090fe:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8009100:	4620      	mov	r0, r4
 8009102:	f7f8 fd89 	bl	8001c18 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8009106:	2117      	movs	r1, #23
 8009108:	4620      	mov	r0, r4
 800910a:	f7f8 fd9d 	bl	8001c48 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800910e:	2117      	movs	r1, #23
 8009110:	f000 020f 	and.w	r2, r0, #15
 8009114:	4620      	mov	r0, r4
 8009116:	f7f8 fd7f 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800911a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800911e:	4620      	mov	r0, r4
 8009120:	2104      	movs	r1, #4
 8009122:	f7f8 fd79 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8009126:	2249      	movs	r2, #73	; 0x49
 8009128:	2120      	movs	r1, #32
 800912a:	4620      	mov	r0, r4
 800912c:	f7f8 fd74 	bl	8001c18 <IOE_Write>
  IOE_Delay(2); 
 8009130:	2002      	movs	r0, #2
 8009132:	f7f8 fdbd 	bl	8001cb0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009136:	4620      	mov	r0, r4
 8009138:	2201      	movs	r2, #1
 800913a:	2121      	movs	r1, #33	; 0x21
 800913c:	f7f8 fd6c 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009140:	4620      	mov	r0, r4
 8009142:	229a      	movs	r2, #154	; 0x9a
 8009144:	2141      	movs	r1, #65	; 0x41
 8009146:	f7f8 fd67 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800914a:	4620      	mov	r0, r4
 800914c:	2201      	movs	r2, #1
 800914e:	214a      	movs	r1, #74	; 0x4a
 8009150:	f7f8 fd62 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009154:	4620      	mov	r0, r4
 8009156:	2201      	movs	r2, #1
 8009158:	214b      	movs	r1, #75	; 0x4b
 800915a:	f7f8 fd5d 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800915e:	4620      	mov	r0, r4
 8009160:	2200      	movs	r2, #0
 8009162:	214b      	movs	r1, #75	; 0x4b
 8009164:	f7f8 fd58 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009168:	4620      	mov	r0, r4
 800916a:	2201      	movs	r2, #1
 800916c:	2156      	movs	r1, #86	; 0x56
 800916e:	f7f8 fd53 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009172:	4620      	mov	r0, r4
 8009174:	2201      	movs	r2, #1
 8009176:	2158      	movs	r1, #88	; 0x58
 8009178:	f7f8 fd4e 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800917c:	4620      	mov	r0, r4
 800917e:	2201      	movs	r2, #1
 8009180:	2140      	movs	r1, #64	; 0x40
 8009182:	f7f8 fd49 	bl	8001c18 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8009186:	4620      	mov	r0, r4
 8009188:	22ff      	movs	r2, #255	; 0xff
 800918a:	210b      	movs	r1, #11
 800918c:	f7f8 fd44 	bl	8001c18 <IOE_Write>
}
 8009190:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009194:	2002      	movs	r0, #2
 8009196:	f7f8 bd8b 	b.w	8001cb0 <IOE_Delay>
 800919a:	bf00      	nop

0800919c <stmpe811_TS_DisableIT>:
{
 800919c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800919e:	b2c4      	uxtb	r4, r0
 80091a0:	2109      	movs	r1, #9
 80091a2:	4620      	mov	r0, r4
 80091a4:	f7f8 fd50 	bl	8001c48 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 80091a8:	2109      	movs	r1, #9
 80091aa:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 80091ae:	4620      	mov	r0, r4
 80091b0:	f7f8 fd32 	bl	8001c18 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80091b4:	210a      	movs	r1, #10
 80091b6:	4620      	mov	r0, r4
 80091b8:	f7f8 fd46 	bl	8001c48 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80091bc:	210a      	movs	r1, #10
 80091be:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 80091c2:	4620      	mov	r0, r4
}
 80091c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80091c8:	f7f8 bd26 	b.w	8001c18 <IOE_Write>

080091cc <stmpe811_TS_EnableIT>:
{
 80091cc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80091ce:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 80091d0:	f7f8 fd20 	bl	8001c14 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80091d4:	210a      	movs	r1, #10
 80091d6:	4620      	mov	r0, r4
 80091d8:	f7f8 fd36 	bl	8001c48 <IOE_Read>
  tmp |= Source; 
 80091dc:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80091e0:	b2c2      	uxtb	r2, r0
 80091e2:	210a      	movs	r1, #10
 80091e4:	4620      	mov	r0, r4
 80091e6:	f7f8 fd17 	bl	8001c18 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80091ea:	2109      	movs	r1, #9
 80091ec:	4620      	mov	r0, r4
 80091ee:	f7f8 fd2b 	bl	8001c48 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80091f2:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80091f6:	b2c2      	uxtb	r2, r0
 80091f8:	2109      	movs	r1, #9
 80091fa:	4620      	mov	r0, r4
}
 80091fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8009200:	f7f8 bd0a 	b.w	8001c18 <IOE_Write>

08009204 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8009204:	4a10      	ldr	r2, [pc, #64]	; (8009248 <stmpe811_Init+0x44>)
 8009206:	7813      	ldrb	r3, [r2, #0]
 8009208:	4298      	cmp	r0, r3
 800920a:	d004      	beq.n	8009216 <stmpe811_Init+0x12>
 800920c:	7851      	ldrb	r1, [r2, #1]
 800920e:	4288      	cmp	r0, r1
 8009210:	d001      	beq.n	8009216 <stmpe811_Init+0x12>
 8009212:	b113      	cbz	r3, 800921a <stmpe811_Init+0x16>
 8009214:	b101      	cbz	r1, 8009218 <stmpe811_Init+0x14>
 8009216:	4770      	bx	lr
 8009218:	2301      	movs	r3, #1
{
 800921a:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800921c:	b2c4      	uxtb	r4, r0
 800921e:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8009220:	f7f8 fcf6 	bl	8001c10 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009224:	2202      	movs	r2, #2
 8009226:	2103      	movs	r1, #3
 8009228:	4620      	mov	r0, r4
 800922a:	f7f8 fcf5 	bl	8001c18 <IOE_Write>
  IOE_Delay(10); 
 800922e:	200a      	movs	r0, #10
 8009230:	f7f8 fd3e 	bl	8001cb0 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009234:	4620      	mov	r0, r4
 8009236:	2200      	movs	r2, #0
 8009238:	2103      	movs	r1, #3
 800923a:	f7f8 fced 	bl	8001c18 <IOE_Write>
}
 800923e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009242:	2002      	movs	r0, #2
 8009244:	f7f8 bd34 	b.w	8001cb0 <IOE_Delay>
 8009248:	20002074 	.word	0x20002074

0800924c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800924c:	4b05      	ldr	r3, [pc, #20]	; (8009264 <SystemInit+0x18>)
 800924e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009252:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009256:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800925a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800925e:	6099      	str	r1, [r3, #8]
#endif
}
 8009260:	4770      	bx	lr
 8009262:	bf00      	nop
 8009264:	e000ed00 	.word	0xe000ed00

08009268 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009268:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800926a:	4b0b      	ldr	r3, [pc, #44]	; (8009298 <HAL_Init+0x30>)
 800926c:	681a      	ldr	r2, [r3, #0]
 800926e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009272:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009274:	681a      	ldr	r2, [r3, #0]
 8009276:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800927a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800927c:	681a      	ldr	r2, [r3, #0]
 800927e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009282:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009284:	2003      	movs	r0, #3
 8009286:	f000 f82d 	bl	80092e4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800928a:	2000      	movs	r0, #0
 800928c:	f7f9 f97c 	bl	8002588 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009290:	f7f8 ff00 	bl	8002094 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009294:	2000      	movs	r0, #0
 8009296:	bd08      	pop	{r3, pc}
 8009298:	40023c00 	.word	0x40023c00

0800929c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800929c:	4a03      	ldr	r2, [pc, #12]	; (80092ac <HAL_IncTick+0x10>)
 800929e:	4b04      	ldr	r3, [pc, #16]	; (80092b0 <HAL_IncTick+0x14>)
 80092a0:	6811      	ldr	r1, [r2, #0]
 80092a2:	781b      	ldrb	r3, [r3, #0]
 80092a4:	440b      	add	r3, r1
 80092a6:	6013      	str	r3, [r2, #0]
}
 80092a8:	4770      	bx	lr
 80092aa:	bf00      	nop
 80092ac:	20002078 	.word	0x20002078
 80092b0:	2000007c 	.word	0x2000007c

080092b4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80092b4:	4b01      	ldr	r3, [pc, #4]	; (80092bc <HAL_GetTick+0x8>)
 80092b6:	6818      	ldr	r0, [r3, #0]
}
 80092b8:	4770      	bx	lr
 80092ba:	bf00      	nop
 80092bc:	20002078 	.word	0x20002078

080092c0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80092c0:	b538      	push	{r3, r4, r5, lr}
 80092c2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80092c4:	f7ff fff6 	bl	80092b4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80092c8:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 80092ca:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 80092cc:	d002      	beq.n	80092d4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80092ce:	4b04      	ldr	r3, [pc, #16]	; (80092e0 <HAL_Delay+0x20>)
 80092d0:	781b      	ldrb	r3, [r3, #0]
 80092d2:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80092d4:	f7ff ffee 	bl	80092b4 <HAL_GetTick>
 80092d8:	1b43      	subs	r3, r0, r5
 80092da:	42a3      	cmp	r3, r4
 80092dc:	d3fa      	bcc.n	80092d4 <HAL_Delay+0x14>
  {
  }
}
 80092de:	bd38      	pop	{r3, r4, r5, pc}
 80092e0:	2000007c 	.word	0x2000007c

080092e4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80092e4:	4907      	ldr	r1, [pc, #28]	; (8009304 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80092e6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80092e8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80092ea:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80092ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80092f2:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80092f4:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80092f6:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80092fa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80092fe:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009300:	4770      	bx	lr
 8009302:	bf00      	nop
 8009304:	e000ed00 	.word	0xe000ed00

08009308 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009308:	4b1c      	ldr	r3, [pc, #112]	; (800937c <HAL_NVIC_SetPriority+0x74>)
 800930a:	68db      	ldr	r3, [r3, #12]
 800930c:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009310:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009312:	f1c3 0e07 	rsb	lr, r3, #7
 8009316:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800931a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800931e:	bf28      	it	cs
 8009320:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009324:	f1bc 0f06 	cmp.w	ip, #6
 8009328:	d91b      	bls.n	8009362 <HAL_NVIC_SetPriority+0x5a>
 800932a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800932c:	f04f 3cff 	mov.w	ip, #4294967295
 8009330:	fa0c fc03 	lsl.w	ip, ip, r3
 8009334:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009338:	f04f 3cff 	mov.w	ip, #4294967295
 800933c:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009340:	ea21 010c 	bic.w	r1, r1, ip
 8009344:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009346:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009348:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800934c:	db0c      	blt.n	8009368 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800934e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009352:	0109      	lsls	r1, r1, #4
 8009354:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009358:	b2c9      	uxtb	r1, r1
 800935a:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800935e:	f85d fb04 	ldr.w	pc, [sp], #4
 8009362:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009364:	4613      	mov	r3, r2
 8009366:	e7e7      	b.n	8009338 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009368:	4b05      	ldr	r3, [pc, #20]	; (8009380 <HAL_NVIC_SetPriority+0x78>)
 800936a:	f000 000f 	and.w	r0, r0, #15
 800936e:	0109      	lsls	r1, r1, #4
 8009370:	4403      	add	r3, r0
 8009372:	b2c9      	uxtb	r1, r1
 8009374:	7619      	strb	r1, [r3, #24]
 8009376:	f85d fb04 	ldr.w	pc, [sp], #4
 800937a:	bf00      	nop
 800937c:	e000ed00 	.word	0xe000ed00
 8009380:	e000ecfc 	.word	0xe000ecfc

08009384 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009384:	2800      	cmp	r0, #0
 8009386:	db07      	blt.n	8009398 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009388:	0941      	lsrs	r1, r0, #5
 800938a:	4a04      	ldr	r2, [pc, #16]	; (800939c <HAL_NVIC_EnableIRQ+0x18>)
 800938c:	f000 001f 	and.w	r0, r0, #31
 8009390:	2301      	movs	r3, #1
 8009392:	4083      	lsls	r3, r0
 8009394:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009398:	4770      	bx	lr
 800939a:	bf00      	nop
 800939c:	e000e100 	.word	0xe000e100

080093a0 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80093a0:	b180      	cbz	r0, 80093c4 <HAL_CRC_Init+0x24>
{
 80093a2:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80093a4:	7943      	ldrb	r3, [r0, #5]
 80093a6:	4604      	mov	r4, r0
 80093a8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80093ac:	b11b      	cbz	r3, 80093b6 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80093ae:	2301      	movs	r3, #1
 80093b0:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80093b2:	2000      	movs	r0, #0
}
 80093b4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 80093b6:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 80093b8:	f7f8 fe8c 	bl	80020d4 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 80093bc:	2301      	movs	r3, #1
 80093be:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 80093c0:	2000      	movs	r0, #0
}
 80093c2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80093c4:	2001      	movs	r0, #1
}
 80093c6:	4770      	bx	lr

080093c8 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80093c8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80093cc:	2b02      	cmp	r3, #2
 80093ce:	d003      	beq.n	80093d8 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80093d0:	2380      	movs	r3, #128	; 0x80
 80093d2:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80093d4:	2001      	movs	r0, #1
 80093d6:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80093d8:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80093da:	2305      	movs	r3, #5
 80093dc:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 80093e0:	6813      	ldr	r3, [r2, #0]
 80093e2:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 80093e6:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 80093e8:	6013      	str	r3, [r2, #0]
}
 80093ea:	4770      	bx	lr

080093ec <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 80093ec:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 80093f0:	4770      	bx	lr
 80093f2:	bf00      	nop

080093f4 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80093f4:	b348      	cbz	r0, 800944a <HAL_DMA2D_Init+0x56>
{
 80093f6:	b510      	push	{r4, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80093f8:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80093fc:	4604      	mov	r4, r0
 80093fe:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009402:	b1eb      	cbz	r3, 8009440 <HAL_DMA2D_Init+0x4c>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8009404:	6822      	ldr	r2, [r4, #0]
 8009406:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009408:	2302      	movs	r3, #2
 800940a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800940e:	6813      	ldr	r3, [r2, #0]
 8009410:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8009414:	430b      	orrs	r3, r1
 8009416:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8009418:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800941a:	68a1      	ldr	r1, [r4, #8]
 800941c:	f023 0307 	bic.w	r3, r3, #7
 8009420:	430b      	orrs	r3, r1
 8009422:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8009424:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009426:	68e1      	ldr	r1, [r4, #12]
 8009428:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800942c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8009430:	430b      	orrs	r3, r1
 8009432:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009434:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8009436:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009438:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800943a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800943e:	bd10      	pop	{r4, pc}
    hdma2d->Lock = HAL_UNLOCKED;
 8009440:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    HAL_DMA2D_MspInit(hdma2d);
 8009444:	f7f8 fe60 	bl	8002108 <HAL_DMA2D_MspInit>
 8009448:	e7dc      	b.n	8009404 <HAL_DMA2D_Init+0x10>
    return HAL_ERROR;
 800944a:	2001      	movs	r0, #1
}
 800944c:	4770      	bx	lr
 800944e:	bf00      	nop

08009450 <HAL_DMA2D_ConfigLayer>:
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8009450:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8009454:	2b01      	cmp	r3, #1
 8009456:	d04d      	beq.n	80094f4 <HAL_DMA2D_ConfigLayer+0xa4>
 8009458:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800945a:	2302      	movs	r3, #2
{
 800945c:	b470      	push	{r4, r5, r6}

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800945e:	eb00 1c01 	add.w	ip, r0, r1, lsl #4
  __HAL_LOCK(hdma2d);
 8009462:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009466:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800946a:	e9dc 2307 	ldrd	r2, r3, [ip, #28]
 800946e:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8009472:	3a09      	subs	r2, #9
 8009474:	2a01      	cmp	r2, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8009476:	f8dc 2024 	ldr.w	r2, [ip, #36]	; 0x24
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800947a:	d91d      	bls.n	80094b8 <HAL_DMA2D_ConfigLayer+0x68>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800947c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8009480:	b189      	cbz	r1, 80094a6 <HAL_DMA2D_ConfigLayer+0x56>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8009482:	6801      	ldr	r1, [r0, #0]
 8009484:	4a1c      	ldr	r2, [pc, #112]	; (80094f8 <HAL_DMA2D_ConfigLayer+0xa8>)
 8009486:	69cd      	ldr	r5, [r1, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009488:	f8dc 4018 	ldr.w	r4, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800948c:	402a      	ands	r2, r5
 800948e:	431a      	orrs	r2, r3
 8009490:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8009492:	610c      	str	r4, [r1, #16]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8009494:	2300      	movs	r3, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8009496:	2201      	movs	r2, #1
 8009498:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
  __HAL_UNLOCK(hdma2d);
 800949c:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

  return HAL_OK;
}
 80094a0:	bc70      	pop	{r4, r5, r6}
  return HAL_OK;
 80094a2:	4618      	mov	r0, r3
}
 80094a4:	4770      	bx	lr
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80094a6:	6801      	ldr	r1, [r0, #0]
 80094a8:	4a13      	ldr	r2, [pc, #76]	; (80094f8 <HAL_DMA2D_ConfigLayer+0xa8>)
 80094aa:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 80094ac:	4022      	ands	r2, r4
 80094ae:	431a      	orrs	r2, r3
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80094b0:	6984      	ldr	r4, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80094b2:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80094b4:	618c      	str	r4, [r1, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80094b6:	e7ed      	b.n	8009494 <HAL_DMA2D_ConfigLayer+0x44>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80094b8:	f002 447f 	and.w	r4, r2, #4278190080	; 0xff000000
 80094bc:	4323      	orrs	r3, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80094be:	b961      	cbnz	r1, 80094da <HAL_DMA2D_ConfigLayer+0x8a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80094c0:	6801      	ldr	r1, [r0, #0]
 80094c2:	4a0d      	ldr	r2, [pc, #52]	; (80094f8 <HAL_DMA2D_ConfigLayer+0xa8>)
 80094c4:	6a4c      	ldr	r4, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80094c6:	6985      	ldr	r5, [r0, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80094c8:	4022      	ands	r2, r4
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80094ca:	6a44      	ldr	r4, [r0, #36]	; 0x24
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80094cc:	431a      	orrs	r2, r3
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80094ce:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80094d2:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80094d4:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80094d6:	628c      	str	r4, [r1, #40]	; 0x28
 80094d8:	e7dc      	b.n	8009494 <HAL_DMA2D_ConfigLayer+0x44>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80094da:	6804      	ldr	r4, [r0, #0]
 80094dc:	4906      	ldr	r1, [pc, #24]	; (80094f8 <HAL_DMA2D_ConfigLayer+0xa8>)
 80094de:	69e6      	ldr	r6, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80094e0:	f8dc 5018 	ldr.w	r5, [ip, #24]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80094e4:	4031      	ands	r1, r6
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80094e6:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80094ea:	4319      	orrs	r1, r3
 80094ec:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80094ee:	6125      	str	r5, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80094f0:	6222      	str	r2, [r4, #32]
 80094f2:	e7cf      	b.n	8009494 <HAL_DMA2D_ConfigLayer+0x44>
  __HAL_LOCK(hdma2d);
 80094f4:	2002      	movs	r0, #2
}
 80094f6:	4770      	bx	lr
 80094f8:	00fcfff0 	.word	0x00fcfff0

080094fc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80094fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009500:	2200      	movs	r2, #0
 8009502:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009504:	f8df a260 	ldr.w	sl, [pc, #608]	; 8009768 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009508:	4e90      	ldr	r6, [pc, #576]	; (800974c <HAL_GPIO_Init+0x250>)
{
 800950a:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 800950c:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800950e:	4689      	mov	r9, r1
 8009510:	e005      	b.n	800951e <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009512:	3301      	adds	r3, #1
 8009514:	2b10      	cmp	r3, #16
 8009516:	f102 0202 	add.w	r2, r2, #2
 800951a:	f000 8095 	beq.w	8009648 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 800951e:	2101      	movs	r1, #1
 8009520:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009522:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009526:	43a1      	bics	r1, r4
 8009528:	d1f3      	bne.n	8009512 <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800952a:	f8d9 c004 	ldr.w	ip, [r9, #4]
 800952e:	f00c 0103 	and.w	r1, ip, #3
 8009532:	1e4d      	subs	r5, r1, #1
 8009534:	2d01      	cmp	r5, #1
 8009536:	f240 808a 	bls.w	800964e <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800953a:	2903      	cmp	r1, #3
 800953c:	f040 80ca 	bne.w	80096d4 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009540:	4091      	lsls	r1, r2
 8009542:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009544:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009546:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009548:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800954a:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800954e:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009550:	d0df      	beq.n	8009512 <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009552:	2100      	movs	r1, #0
 8009554:	9103      	str	r1, [sp, #12]
 8009556:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 800955a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800955e:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009562:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009566:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800956a:	9103      	str	r1, [sp, #12]
 800956c:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800956e:	f023 0103 	bic.w	r1, r3, #3
 8009572:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009576:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800957a:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800957e:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009580:	00bf      	lsls	r7, r7, #2
 8009582:	f04f 0e0f 	mov.w	lr, #15
 8009586:	fa0e fe07 	lsl.w	lr, lr, r7
 800958a:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800958e:	4d70      	ldr	r5, [pc, #448]	; (8009750 <HAL_GPIO_Init+0x254>)
 8009590:	42a8      	cmp	r0, r5
 8009592:	d02e      	beq.n	80095f2 <HAL_GPIO_Init+0xf6>
 8009594:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009598:	42a8      	cmp	r0, r5
 800959a:	f000 809f 	beq.w	80096dc <HAL_GPIO_Init+0x1e0>
 800959e:	4d6d      	ldr	r5, [pc, #436]	; (8009754 <HAL_GPIO_Init+0x258>)
 80095a0:	42a8      	cmp	r0, r5
 80095a2:	f000 80a2 	beq.w	80096ea <HAL_GPIO_Init+0x1ee>
 80095a6:	4d6c      	ldr	r5, [pc, #432]	; (8009758 <HAL_GPIO_Init+0x25c>)
 80095a8:	42a8      	cmp	r0, r5
 80095aa:	f000 80a5 	beq.w	80096f8 <HAL_GPIO_Init+0x1fc>
 80095ae:	4d6b      	ldr	r5, [pc, #428]	; (800975c <HAL_GPIO_Init+0x260>)
 80095b0:	42a8      	cmp	r0, r5
 80095b2:	f000 80a8 	beq.w	8009706 <HAL_GPIO_Init+0x20a>
 80095b6:	4d6a      	ldr	r5, [pc, #424]	; (8009760 <HAL_GPIO_Init+0x264>)
 80095b8:	42a8      	cmp	r0, r5
 80095ba:	f000 80b2 	beq.w	8009722 <HAL_GPIO_Init+0x226>
 80095be:	4d69      	ldr	r5, [pc, #420]	; (8009764 <HAL_GPIO_Init+0x268>)
 80095c0:	42a8      	cmp	r0, r5
 80095c2:	f000 80b5 	beq.w	8009730 <HAL_GPIO_Init+0x234>
 80095c6:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800976c <HAL_GPIO_Init+0x270>
 80095ca:	4570      	cmp	r0, lr
 80095cc:	f000 80a2 	beq.w	8009714 <HAL_GPIO_Init+0x218>
 80095d0:	f8df e19c 	ldr.w	lr, [pc, #412]	; 8009770 <HAL_GPIO_Init+0x274>
 80095d4:	4570      	cmp	r0, lr
 80095d6:	f000 80b2 	beq.w	800973e <HAL_GPIO_Init+0x242>
 80095da:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009774 <HAL_GPIO_Init+0x278>
 80095de:	4570      	cmp	r0, lr
 80095e0:	bf0c      	ite	eq
 80095e2:	f04f 0e09 	moveq.w	lr, #9
 80095e6:	f04f 0e0a 	movne.w	lr, #10
 80095ea:	fa0e f707 	lsl.w	r7, lr, r7
 80095ee:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80095f2:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 80095f6:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 80095f8:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80095fc:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009600:	bf0c      	ite	eq
 8009602:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009604:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009608:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 800960a:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800960c:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009610:	bf0c      	ite	eq
 8009612:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009614:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009618:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 800961a:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800961c:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009620:	bf0c      	ite	eq
 8009622:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009624:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009628:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800962a:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800962c:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009630:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009634:	bf0c      	ite	eq
 8009636:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009638:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 800963c:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 800963e:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009640:	f102 0202 	add.w	r2, r2, #2
 8009644:	f47f af6b 	bne.w	800951e <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009648:	b005      	add	sp, #20
 800964a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800964e:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009652:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009656:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800965a:	2503      	movs	r5, #3
 800965c:	fa05 f802 	lsl.w	r8, r5, r2
 8009660:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009664:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009668:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800966a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800966c:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009670:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009674:	409f      	lsls	r7, r3
 8009676:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800967a:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800967e:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009680:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009682:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8009686:	f8d9 7008 	ldr.w	r7, [r9, #8]
 800968a:	4097      	lsls	r7, r2
 800968c:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009690:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8009692:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009694:	fa01 f102 	lsl.w	r1, r1, r2
 8009698:	f47f af54 	bne.w	8009544 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 800969c:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 80096a0:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80096a4:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80096a8:	f8de 7020 	ldr.w	r7, [lr, #32]
 80096ac:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80096ae:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80096b2:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80096b6:	fa07 f708 	lsl.w	r7, r7, r8
 80096ba:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80096bc:	270f      	movs	r7, #15
 80096be:	fa07 f808 	lsl.w	r8, r7, r8
 80096c2:	9f00      	ldr	r7, [sp, #0]
 80096c4:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80096c8:	9f01      	ldr	r7, [sp, #4]
 80096ca:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 80096ce:	f8ce 7020 	str.w	r7, [lr, #32]
 80096d2:	e737      	b.n	8009544 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80096d4:	2503      	movs	r5, #3
 80096d6:	4095      	lsls	r5, r2
 80096d8:	43ed      	mvns	r5, r5
 80096da:	e7d1      	b.n	8009680 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80096dc:	f04f 0e01 	mov.w	lr, #1
 80096e0:	fa0e f707 	lsl.w	r7, lr, r7
 80096e4:	ea48 0807 	orr.w	r8, r8, r7
 80096e8:	e783      	b.n	80095f2 <HAL_GPIO_Init+0xf6>
 80096ea:	f04f 0e02 	mov.w	lr, #2
 80096ee:	fa0e f707 	lsl.w	r7, lr, r7
 80096f2:	ea48 0807 	orr.w	r8, r8, r7
 80096f6:	e77c      	b.n	80095f2 <HAL_GPIO_Init+0xf6>
 80096f8:	f04f 0e03 	mov.w	lr, #3
 80096fc:	fa0e f707 	lsl.w	r7, lr, r7
 8009700:	ea48 0807 	orr.w	r8, r8, r7
 8009704:	e775      	b.n	80095f2 <HAL_GPIO_Init+0xf6>
 8009706:	f04f 0e04 	mov.w	lr, #4
 800970a:	fa0e f707 	lsl.w	r7, lr, r7
 800970e:	ea48 0807 	orr.w	r8, r8, r7
 8009712:	e76e      	b.n	80095f2 <HAL_GPIO_Init+0xf6>
 8009714:	f04f 0e07 	mov.w	lr, #7
 8009718:	fa0e f707 	lsl.w	r7, lr, r7
 800971c:	ea48 0807 	orr.w	r8, r8, r7
 8009720:	e767      	b.n	80095f2 <HAL_GPIO_Init+0xf6>
 8009722:	f04f 0e05 	mov.w	lr, #5
 8009726:	fa0e f707 	lsl.w	r7, lr, r7
 800972a:	ea48 0807 	orr.w	r8, r8, r7
 800972e:	e760      	b.n	80095f2 <HAL_GPIO_Init+0xf6>
 8009730:	f04f 0e06 	mov.w	lr, #6
 8009734:	fa0e f707 	lsl.w	r7, lr, r7
 8009738:	ea48 0807 	orr.w	r8, r8, r7
 800973c:	e759      	b.n	80095f2 <HAL_GPIO_Init+0xf6>
 800973e:	f04f 0e08 	mov.w	lr, #8
 8009742:	fa0e f707 	lsl.w	r7, lr, r7
 8009746:	ea48 0807 	orr.w	r8, r8, r7
 800974a:	e752      	b.n	80095f2 <HAL_GPIO_Init+0xf6>
 800974c:	40013c00 	.word	0x40013c00
 8009750:	40020000 	.word	0x40020000
 8009754:	40020800 	.word	0x40020800
 8009758:	40020c00 	.word	0x40020c00
 800975c:	40021000 	.word	0x40021000
 8009760:	40021400 	.word	0x40021400
 8009764:	40021800 	.word	0x40021800
 8009768:	40023800 	.word	0x40023800
 800976c:	40021c00 	.word	0x40021c00
 8009770:	40022000 	.word	0x40022000
 8009774:	40022400 	.word	0x40022400

08009778 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8009778:	6903      	ldr	r3, [r0, #16]
 800977a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800977c:	bf14      	ite	ne
 800977e:	2001      	movne	r0, #1
 8009780:	2000      	moveq	r0, #0
 8009782:	4770      	bx	lr

08009784 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009784:	b902      	cbnz	r2, 8009788 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8009786:	0409      	lsls	r1, r1, #16
 8009788:	6181      	str	r1, [r0, #24]
  }
}
 800978a:	4770      	bx	lr

0800978c <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800978c:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800978e:	ea01 0203 	and.w	r2, r1, r3
 8009792:	ea21 0103 	bic.w	r1, r1, r3
 8009796:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800979a:	6181      	str	r1, [r0, #24]
}
 800979c:	4770      	bx	lr
 800979e:	bf00      	nop

080097a0 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80097a0:	4770      	bx	lr
 80097a2:	bf00      	nop

080097a4 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80097a4:	4a04      	ldr	r2, [pc, #16]	; (80097b8 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 80097a6:	6951      	ldr	r1, [r2, #20]
 80097a8:	4201      	tst	r1, r0
 80097aa:	d100      	bne.n	80097ae <HAL_GPIO_EXTI_IRQHandler+0xa>
 80097ac:	4770      	bx	lr
{
 80097ae:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80097b0:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80097b2:	f7ff fff5 	bl	80097a0 <HAL_GPIO_EXTI_Callback>
}
 80097b6:	bd08      	pop	{r3, pc}
 80097b8:	40013c00 	.word	0x40013c00

080097bc <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80097bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097c0:	6804      	ldr	r4, [r0, #0]
{
 80097c2:	b083      	sub	sp, #12
 80097c4:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097c6:	6823      	ldr	r3, [r4, #0]
{
 80097c8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80097cc:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097d0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80097d4:	4606      	mov	r6, r0
 80097d6:	468a      	mov	sl, r1
 80097d8:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097da:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80097dc:	f1b9 3fff 	cmp.w	r9, #4294967295
 80097e0:	d136      	bne.n	8009850 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80097e2:	6965      	ldr	r5, [r4, #20]
 80097e4:	07e8      	lsls	r0, r5, #31
 80097e6:	d5fc      	bpl.n	80097e2 <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80097e8:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 80097ec:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 80097ee:	f1b9 3fff 	cmp.w	r9, #4294967295
 80097f2:	d003      	beq.n	80097fc <I2C_RequestMemoryWrite+0x40>
 80097f4:	e04f      	b.n	8009896 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097f6:	6961      	ldr	r1, [r4, #20]
 80097f8:	054d      	lsls	r5, r1, #21
 80097fa:	d45d      	bmi.n	80098b8 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80097fc:	6961      	ldr	r1, [r4, #20]
 80097fe:	078b      	lsls	r3, r1, #30
 8009800:	d5f9      	bpl.n	80097f6 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009802:	2300      	movs	r3, #0
 8009804:	9301      	str	r3, [sp, #4]
 8009806:	6963      	ldr	r3, [r4, #20]
 8009808:	9301      	str	r3, [sp, #4]
 800980a:	69a3      	ldr	r3, [r4, #24]
 800980c:	9301      	str	r3, [sp, #4]
 800980e:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009810:	f1b9 3fff 	cmp.w	r9, #4294967295
 8009814:	f040 8088 	bne.w	8009928 <I2C_RequestMemoryWrite+0x16c>
 8009818:	6963      	ldr	r3, [r4, #20]
 800981a:	061a      	lsls	r2, r3, #24
 800981c:	d464      	bmi.n	80098e8 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800981e:	6963      	ldr	r3, [r4, #20]
 8009820:	055b      	lsls	r3, r3, #21
 8009822:	d5f9      	bpl.n	8009818 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 8009824:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009826:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800982a:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800982c:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800982e:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009830:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009834:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009838:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800983a:	f043 0304 	orr.w	r3, r3, #4
 800983e:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009840:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8009842:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009844:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009846:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800984a:	d066      	beq.n	800991a <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800984c:	2001      	movs	r0, #1
 800984e:	e01f      	b.n	8009890 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009850:	6963      	ldr	r3, [r4, #20]
 8009852:	07d9      	lsls	r1, r3, #31
 8009854:	d4c8      	bmi.n	80097e8 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009856:	f7ff fd2d 	bl	80092b4 <HAL_GetTick>
 800985a:	eba0 000b 	sub.w	r0, r0, fp
 800985e:	4581      	cmp	r9, r0
 8009860:	d304      	bcc.n	800986c <I2C_RequestMemoryWrite+0xb0>
 8009862:	f1b9 0f00 	cmp.w	r9, #0
 8009866:	d001      	beq.n	800986c <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009868:	6834      	ldr	r4, [r6, #0]
 800986a:	e7b7      	b.n	80097dc <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800986c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800986e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009870:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009872:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009876:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800987a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800987c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800987e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009882:	f042 0220 	orr.w	r2, r2, #32
 8009886:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009888:	680b      	ldr	r3, [r1, #0]
 800988a:	05dc      	lsls	r4, r3, #23
 800988c:	d435      	bmi.n	80098fa <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800988e:	2003      	movs	r0, #3
}
 8009890:	b003      	add	sp, #12
 8009892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009896:	6963      	ldr	r3, [r4, #20]
 8009898:	0798      	lsls	r0, r3, #30
 800989a:	d4b2      	bmi.n	8009802 <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800989c:	6963      	ldr	r3, [r4, #20]
 800989e:	055a      	lsls	r2, r3, #21
 80098a0:	d40a      	bmi.n	80098b8 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80098a2:	f7ff fd07 	bl	80092b4 <HAL_GetTick>
 80098a6:	eba0 000b 	sub.w	r0, r0, fp
 80098aa:	4581      	cmp	r9, r0
 80098ac:	d34e      	bcc.n	800994c <I2C_RequestMemoryWrite+0x190>
 80098ae:	f1b9 0f00 	cmp.w	r9, #0
 80098b2:	d04b      	beq.n	800994c <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80098b4:	6834      	ldr	r4, [r6, #0]
 80098b6:	e79a      	b.n	80097ee <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80098b8:	6823      	ldr	r3, [r4, #0]
 80098ba:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80098be:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80098c0:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80098c2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 80098c6:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80098c8:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 80098ca:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80098cc:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80098d0:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80098d4:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80098d6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80098da:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 80098de:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80098e0:	6433      	str	r3, [r6, #64]	; 0x40
}
 80098e2:	b003      	add	sp, #12
 80098e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80098e8:	f1b8 0f01 	cmp.w	r8, #1
 80098ec:	d109      	bne.n	8009902 <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80098ee:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 80098f0:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80098f2:	6127      	str	r7, [r4, #16]
}
 80098f4:	b003      	add	sp, #12
 80098f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80098fa:	f44f 7300 	mov.w	r3, #512	; 0x200
 80098fe:	6433      	str	r3, [r6, #64]	; 0x40
 8009900:	e7c5      	b.n	800988e <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009902:	0a3b      	lsrs	r3, r7, #8
 8009904:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009906:	f1b9 3fff 	cmp.w	r9, #4294967295
 800990a:	d12e      	bne.n	800996a <I2C_RequestMemoryWrite+0x1ae>
 800990c:	6963      	ldr	r3, [r4, #20]
 800990e:	0619      	lsls	r1, r3, #24
 8009910:	d4ed      	bmi.n	80098ee <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009912:	6963      	ldr	r3, [r4, #20]
 8009914:	055a      	lsls	r2, r3, #21
 8009916:	d5f9      	bpl.n	800990c <I2C_RequestMemoryWrite+0x150>
 8009918:	e784      	b.n	8009824 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800991a:	6832      	ldr	r2, [r6, #0]
 800991c:	6813      	ldr	r3, [r2, #0]
 800991e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009922:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009924:	6013      	str	r3, [r2, #0]
 8009926:	e7b3      	b.n	8009890 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009928:	6963      	ldr	r3, [r4, #20]
 800992a:	061d      	lsls	r5, r3, #24
 800992c:	d4dc      	bmi.n	80098e8 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800992e:	6963      	ldr	r3, [r4, #20]
 8009930:	0559      	lsls	r1, r3, #21
 8009932:	f53f af77 	bmi.w	8009824 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009936:	f7ff fcbd 	bl	80092b4 <HAL_GetTick>
 800993a:	eba0 000b 	sub.w	r0, r0, fp
 800993e:	4581      	cmp	r9, r0
 8009940:	d325      	bcc.n	800998e <I2C_RequestMemoryWrite+0x1d2>
 8009942:	f1b9 0f00 	cmp.w	r9, #0
 8009946:	d022      	beq.n	800998e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009948:	6834      	ldr	r4, [r6, #0]
 800994a:	e761      	b.n	8009810 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800994c:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800994e:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009950:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009952:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009956:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800995a:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800995c:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009960:	f043 0320 	orr.w	r3, r3, #32
 8009964:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 8009966:	2001      	movs	r0, #1
 8009968:	e792      	b.n	8009890 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800996a:	6963      	ldr	r3, [r4, #20]
 800996c:	061b      	lsls	r3, r3, #24
 800996e:	d4be      	bmi.n	80098ee <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009970:	6963      	ldr	r3, [r4, #20]
 8009972:	0558      	lsls	r0, r3, #21
 8009974:	f53f af56 	bmi.w	8009824 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009978:	f7ff fc9c 	bl	80092b4 <HAL_GetTick>
 800997c:	eba0 000b 	sub.w	r0, r0, fp
 8009980:	4581      	cmp	r9, r0
 8009982:	d304      	bcc.n	800998e <I2C_RequestMemoryWrite+0x1d2>
 8009984:	f1b9 0f00 	cmp.w	r9, #0
 8009988:	d001      	beq.n	800998e <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800998a:	6834      	ldr	r4, [r6, #0]
 800998c:	e7bb      	b.n	8009906 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800998e:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009990:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009992:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009994:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009998:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800999c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800999e:	4313      	orrs	r3, r2
 80099a0:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 80099a2:	e74d      	b.n	8009840 <I2C_RequestMemoryWrite+0x84>

080099a4 <I2C_RequestMemoryRead>:
{
 80099a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80099a8:	6804      	ldr	r4, [r0, #0]
{
 80099aa:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80099ac:	6823      	ldr	r3, [r4, #0]
 80099ae:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80099b2:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099b4:	6823      	ldr	r3, [r4, #0]
{
 80099b6:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 80099bc:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80099c0:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80099c4:	6023      	str	r3, [r4, #0]
{
 80099c6:	4606      	mov	r6, r0
 80099c8:	468b      	mov	fp, r1
 80099ca:	4617      	mov	r7, r2
 80099cc:	f1ba 3fff 	cmp.w	sl, #4294967295
 80099d0:	d13a      	bne.n	8009a48 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80099d2:	6965      	ldr	r5, [r4, #20]
 80099d4:	07eb      	lsls	r3, r5, #31
 80099d6:	d5fc      	bpl.n	80099d2 <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80099d8:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 80099dc:	6123      	str	r3, [r4, #16]
 80099de:	fa5f fb8b 	uxtb.w	fp, fp
 80099e2:	f1ba 3fff 	cmp.w	sl, #4294967295
 80099e6:	d003      	beq.n	80099f0 <I2C_RequestMemoryRead+0x4c>
 80099e8:	e069      	b.n	8009abe <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80099ea:	6965      	ldr	r5, [r4, #20]
 80099ec:	056a      	lsls	r2, r5, #21
 80099ee:	d44e      	bmi.n	8009a8e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80099f0:	6965      	ldr	r5, [r4, #20]
 80099f2:	07a9      	lsls	r1, r5, #30
 80099f4:	d5f9      	bpl.n	80099ea <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80099f6:	2300      	movs	r3, #0
 80099f8:	9301      	str	r3, [sp, #4]
 80099fa:	6963      	ldr	r3, [r4, #20]
 80099fc:	9301      	str	r3, [sp, #4]
 80099fe:	69a3      	ldr	r3, [r4, #24]
 8009a00:	9301      	str	r3, [sp, #4]
 8009a02:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009a04:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009a08:	f040 80bd 	bne.w	8009b86 <I2C_RequestMemoryRead+0x1e2>
 8009a0c:	6963      	ldr	r3, [r4, #20]
 8009a0e:	0618      	lsls	r0, r3, #24
 8009a10:	d468      	bmi.n	8009ae4 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009a12:	6963      	ldr	r3, [r4, #20]
 8009a14:	0559      	lsls	r1, r3, #21
 8009a16:	d5f9      	bpl.n	8009a0c <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009a18:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a1a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009a1e:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a20:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009a22:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009a24:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009a28:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009a2c:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009a2e:	f043 0304 	orr.w	r3, r3, #4
 8009a32:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a34:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009a36:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a38:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009a3a:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009a3e:	d070      	beq.n	8009b22 <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 8009a40:	2001      	movs	r0, #1
}
 8009a42:	b003      	add	sp, #12
 8009a44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009a48:	6963      	ldr	r3, [r4, #20]
 8009a4a:	07dd      	lsls	r5, r3, #31
 8009a4c:	d4c4      	bmi.n	80099d8 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009a4e:	f7ff fc31 	bl	80092b4 <HAL_GetTick>
 8009a52:	eba0 0009 	sub.w	r0, r0, r9
 8009a56:	4582      	cmp	sl, r0
 8009a58:	d304      	bcc.n	8009a64 <I2C_RequestMemoryRead+0xc0>
 8009a5a:	f1ba 0f00 	cmp.w	sl, #0
 8009a5e:	d001      	beq.n	8009a64 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a60:	6834      	ldr	r4, [r6, #0]
 8009a62:	e7b3      	b.n	80099cc <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a64:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a66:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009a68:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009a6a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009a6e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a72:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a74:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009a76:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009a7a:	f042 0220 	orr.w	r2, r2, #32
 8009a7e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009a80:	680b      	ldr	r3, [r1, #0]
 8009a82:	05dc      	lsls	r4, r3, #23
 8009a84:	d43d      	bmi.n	8009b02 <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 8009a86:	2003      	movs	r0, #3
}
 8009a88:	b003      	add	sp, #12
 8009a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009a8e:	6823      	ldr	r3, [r4, #0]
 8009a90:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009a94:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009a96:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a98:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009a9c:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009a9e:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009aa0:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009aa2:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009aa6:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009aaa:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009aac:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009ab0:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009ab4:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009ab6:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009ab8:	b003      	add	sp, #12
 8009aba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009abe:	6963      	ldr	r3, [r4, #20]
 8009ac0:	079b      	lsls	r3, r3, #30
 8009ac2:	d498      	bmi.n	80099f6 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ac4:	6963      	ldr	r3, [r4, #20]
 8009ac6:	0558      	lsls	r0, r3, #21
 8009ac8:	d4e1      	bmi.n	8009a8e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009aca:	f7ff fbf3 	bl	80092b4 <HAL_GetTick>
 8009ace:	eba0 0009 	sub.w	r0, r0, r9
 8009ad2:	4582      	cmp	sl, r0
 8009ad4:	f0c0 808f 	bcc.w	8009bf6 <I2C_RequestMemoryRead+0x252>
 8009ad8:	f1ba 0f00 	cmp.w	sl, #0
 8009adc:	f000 808b 	beq.w	8009bf6 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009ae0:	6834      	ldr	r4, [r6, #0]
 8009ae2:	e77e      	b.n	80099e2 <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8009ae4:	f1b8 0f01 	cmp.w	r8, #1
 8009ae8:	d10f      	bne.n	8009b0a <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8009aea:	b2ff      	uxtb	r7, r7
 8009aec:	6127      	str	r7, [r4, #16]
 8009aee:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009af2:	d16e      	bne.n	8009bd2 <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009af4:	6963      	ldr	r3, [r4, #20]
 8009af6:	061b      	lsls	r3, r3, #24
 8009af8:	d41a      	bmi.n	8009b30 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009afa:	6963      	ldr	r3, [r4, #20]
 8009afc:	055f      	lsls	r7, r3, #21
 8009afe:	d5f9      	bpl.n	8009af4 <I2C_RequestMemoryRead+0x150>
 8009b00:	e78a      	b.n	8009a18 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8009b02:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009b06:	6433      	str	r3, [r6, #64]	; 0x40
 8009b08:	e7bd      	b.n	8009a86 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8009b0a:	0a3b      	lsrs	r3, r7, #8
 8009b0c:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b0e:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b12:	d17e      	bne.n	8009c12 <I2C_RequestMemoryRead+0x26e>
 8009b14:	6963      	ldr	r3, [r4, #20]
 8009b16:	061d      	lsls	r5, r3, #24
 8009b18:	d4e7      	bmi.n	8009aea <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b1a:	6963      	ldr	r3, [r4, #20]
 8009b1c:	0558      	lsls	r0, r3, #21
 8009b1e:	d5f9      	bpl.n	8009b14 <I2C_RequestMemoryRead+0x170>
 8009b20:	e77a      	b.n	8009a18 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b22:	6832      	ldr	r2, [r6, #0]
 8009b24:	6813      	ldr	r3, [r2, #0]
 8009b26:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 8009b2a:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009b2c:	6013      	str	r3, [r2, #0]
 8009b2e:	e7ab      	b.n	8009a88 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009b30:	6823      	ldr	r3, [r4, #0]
 8009b32:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009b36:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009b38:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b3c:	d113      	bne.n	8009b66 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009b3e:	6963      	ldr	r3, [r4, #20]
 8009b40:	07d8      	lsls	r0, r3, #31
 8009b42:	d5fc      	bpl.n	8009b3e <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009b44:	f04b 0301 	orr.w	r3, fp, #1
 8009b48:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009b4a:	f1ba 3fff 	cmp.w	sl, #4294967295
 8009b4e:	d003      	beq.n	8009b58 <I2C_RequestMemoryRead+0x1b4>
 8009b50:	e02b      	b.n	8009baa <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b52:	6963      	ldr	r3, [r4, #20]
 8009b54:	055b      	lsls	r3, r3, #21
 8009b56:	d49a      	bmi.n	8009a8e <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009b58:	6963      	ldr	r3, [r4, #20]
 8009b5a:	43db      	mvns	r3, r3
 8009b5c:	f013 0302 	ands.w	r3, r3, #2
 8009b60:	d1f7      	bne.n	8009b52 <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 8009b62:	4618      	mov	r0, r3
 8009b64:	e790      	b.n	8009a88 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009b66:	6963      	ldr	r3, [r4, #20]
 8009b68:	07d9      	lsls	r1, r3, #31
 8009b6a:	d4eb      	bmi.n	8009b44 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b6c:	f7ff fba2 	bl	80092b4 <HAL_GetTick>
 8009b70:	eba0 0009 	sub.w	r0, r0, r9
 8009b74:	4582      	cmp	sl, r0
 8009b76:	f4ff af75 	bcc.w	8009a64 <I2C_RequestMemoryRead+0xc0>
 8009b7a:	f1ba 0f00 	cmp.w	sl, #0
 8009b7e:	f43f af71 	beq.w	8009a64 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009b82:	6834      	ldr	r4, [r6, #0]
 8009b84:	e7d8      	b.n	8009b38 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b86:	6963      	ldr	r3, [r4, #20]
 8009b88:	061a      	lsls	r2, r3, #24
 8009b8a:	d4ab      	bmi.n	8009ae4 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b8c:	6963      	ldr	r3, [r4, #20]
 8009b8e:	055d      	lsls	r5, r3, #21
 8009b90:	f53f af42 	bmi.w	8009a18 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009b94:	f7ff fb8e 	bl	80092b4 <HAL_GetTick>
 8009b98:	eba0 0009 	sub.w	r0, r0, r9
 8009b9c:	4582      	cmp	sl, r0
 8009b9e:	d34b      	bcc.n	8009c38 <I2C_RequestMemoryRead+0x294>
 8009ba0:	f1ba 0f00 	cmp.w	sl, #0
 8009ba4:	d048      	beq.n	8009c38 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009ba6:	6834      	ldr	r4, [r6, #0]
 8009ba8:	e72c      	b.n	8009a04 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009baa:	6963      	ldr	r3, [r4, #20]
 8009bac:	43db      	mvns	r3, r3
 8009bae:	f013 0302 	ands.w	r3, r3, #2
 8009bb2:	d0d6      	beq.n	8009b62 <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bb4:	6963      	ldr	r3, [r4, #20]
 8009bb6:	055a      	lsls	r2, r3, #21
 8009bb8:	f53f af69 	bmi.w	8009a8e <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009bbc:	f7ff fb7a 	bl	80092b4 <HAL_GetTick>
 8009bc0:	eba0 0009 	sub.w	r0, r0, r9
 8009bc4:	4582      	cmp	sl, r0
 8009bc6:	d316      	bcc.n	8009bf6 <I2C_RequestMemoryRead+0x252>
 8009bc8:	f1ba 0f00 	cmp.w	sl, #0
 8009bcc:	d013      	beq.n	8009bf6 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009bce:	6834      	ldr	r4, [r6, #0]
 8009bd0:	e7bb      	b.n	8009b4a <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009bd2:	6963      	ldr	r3, [r4, #20]
 8009bd4:	061d      	lsls	r5, r3, #24
 8009bd6:	d4ab      	bmi.n	8009b30 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bd8:	6963      	ldr	r3, [r4, #20]
 8009bda:	055a      	lsls	r2, r3, #21
 8009bdc:	f53f af1c 	bmi.w	8009a18 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009be0:	f7ff fb68 	bl	80092b4 <HAL_GetTick>
 8009be4:	eba0 0009 	sub.w	r0, r0, r9
 8009be8:	4582      	cmp	sl, r0
 8009bea:	d325      	bcc.n	8009c38 <I2C_RequestMemoryRead+0x294>
 8009bec:	f1ba 0f00 	cmp.w	sl, #0
 8009bf0:	d022      	beq.n	8009c38 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009bf2:	6834      	ldr	r4, [r6, #0]
 8009bf4:	e77b      	b.n	8009aee <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009bf6:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8009bf8:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009bfa:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8009bfc:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009c00:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009c04:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009c06:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009c0a:	f043 0320 	orr.w	r3, r3, #32
 8009c0e:	6433      	str	r3, [r6, #64]	; 0x40
 8009c10:	e716      	b.n	8009a40 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c12:	6963      	ldr	r3, [r4, #20]
 8009c14:	0619      	lsls	r1, r3, #24
 8009c16:	f53f af68 	bmi.w	8009aea <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c1a:	6963      	ldr	r3, [r4, #20]
 8009c1c:	055b      	lsls	r3, r3, #21
 8009c1e:	f53f aefb 	bmi.w	8009a18 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c22:	f7ff fb47 	bl	80092b4 <HAL_GetTick>
 8009c26:	eba0 0009 	sub.w	r0, r0, r9
 8009c2a:	4582      	cmp	sl, r0
 8009c2c:	d304      	bcc.n	8009c38 <I2C_RequestMemoryRead+0x294>
 8009c2e:	f1ba 0f00 	cmp.w	sl, #0
 8009c32:	d001      	beq.n	8009c38 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009c34:	6834      	ldr	r4, [r6, #0]
 8009c36:	e76a      	b.n	8009b0e <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c38:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c3a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c3c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c3e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009c42:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c46:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009c48:	4313      	orrs	r3, r2
 8009c4a:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009c4c:	e6f2      	b.n	8009a34 <I2C_RequestMemoryRead+0x90>
 8009c4e:	bf00      	nop

08009c50 <HAL_I2C_Init>:
  if (hi2c == NULL)
 8009c50:	2800      	cmp	r0, #0
 8009c52:	f000 80b9 	beq.w	8009dc8 <HAL_I2C_Init+0x178>
{
 8009c56:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009c58:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009c5c:	4604      	mov	r4, r0
 8009c5e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009c62:	2b00      	cmp	r3, #0
 8009c64:	f000 8098 	beq.w	8009d98 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009c68:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009c6a:	2224      	movs	r2, #36	; 0x24
 8009c6c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8009c70:	681a      	ldr	r2, [r3, #0]
 8009c72:	f022 0201 	bic.w	r2, r2, #1
 8009c76:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009c78:	681a      	ldr	r2, [r3, #0]
 8009c7a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009c7e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8009c80:	681a      	ldr	r2, [r3, #0]
 8009c82:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009c86:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009c88:	f001 fe70 	bl	800b96c <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009c8c:	6865      	ldr	r5, [r4, #4]
 8009c8e:	4b4f      	ldr	r3, [pc, #316]	; (8009dcc <HAL_I2C_Init+0x17c>)
 8009c90:	429d      	cmp	r5, r3
 8009c92:	d84f      	bhi.n	8009d34 <HAL_I2C_Init+0xe4>
 8009c94:	4b4e      	ldr	r3, [pc, #312]	; (8009dd0 <HAL_I2C_Init+0x180>)
 8009c96:	4298      	cmp	r0, r3
 8009c98:	d97c      	bls.n	8009d94 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009c9a:	4b4e      	ldr	r3, [pc, #312]	; (8009dd4 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009c9c:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 8009c9e:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009ca2:	1e43      	subs	r3, r0, #1
 8009ca4:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009ca8:	6822      	ldr	r2, [r4, #0]
 8009caa:	6851      	ldr	r1, [r2, #4]
 8009cac:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009cb0:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009cb4:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009cb6:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009cb8:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009cbc:	f10c 0c01 	add.w	ip, ip, #1
 8009cc0:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009cc4:	ea41 010c 	orr.w	r1, r1, ip
 8009cc8:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009cca:	69d1      	ldr	r1, [r2, #28]
 8009ccc:	f640 70fc 	movw	r0, #4092	; 0xffc
 8009cd0:	3301      	adds	r3, #1
 8009cd2:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009cd6:	4203      	tst	r3, r0
 8009cd8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009cdc:	d161      	bne.n	8009da2 <HAL_I2C_Init+0x152>
 8009cde:	2304      	movs	r3, #4
 8009ce0:	430b      	orrs	r3, r1
 8009ce2:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8009ce4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8009ce8:	6811      	ldr	r1, [r2, #0]
 8009cea:	4303      	orrs	r3, r0
 8009cec:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8009cf0:	430b      	orrs	r3, r1
 8009cf2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8009cf4:	6891      	ldr	r1, [r2, #8]
 8009cf6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8009cfa:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8009cfe:	4303      	orrs	r3, r0
 8009d00:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009d04:	430b      	orrs	r3, r1
 8009d06:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8009d08:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8009d0c:	68d1      	ldr	r1, [r2, #12]
 8009d0e:	4303      	orrs	r3, r0
 8009d10:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009d14:	430b      	orrs	r3, r1
 8009d16:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8009d18:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009d1a:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 8009d1c:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 8009d20:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 8009d22:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009d24:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8009d26:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8009d2a:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d2c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 8009d30:	4618      	mov	r0, r3
}
 8009d32:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009d34:	4b28      	ldr	r3, [pc, #160]	; (8009dd8 <HAL_I2C_Init+0x188>)
 8009d36:	4298      	cmp	r0, r3
 8009d38:	d92c      	bls.n	8009d94 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009d3a:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8009d3c:	4b25      	ldr	r3, [pc, #148]	; (8009dd4 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009d3e:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009d40:	4e26      	ldr	r6, [pc, #152]	; (8009ddc <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 8009d42:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009d46:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009d4a:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009d4e:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009d50:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009d54:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009d58:	fb01 f303 	mul.w	r3, r1, r3
 8009d5c:	fba6 6303 	umull	r6, r3, r6, r3
 8009d60:	6a11      	ldr	r1, [r2, #32]
 8009d62:	099b      	lsrs	r3, r3, #6
 8009d64:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009d68:	3301      	adds	r3, #1
 8009d6a:	430b      	orrs	r3, r1
 8009d6c:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009d6e:	69d1      	ldr	r1, [r2, #28]
 8009d70:	68a3      	ldr	r3, [r4, #8]
 8009d72:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009d76:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009d7a:	b9ab      	cbnz	r3, 8009da8 <HAL_I2C_Init+0x158>
 8009d7c:	1e43      	subs	r3, r0, #1
 8009d7e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009d82:	fbb3 f3f5 	udiv	r3, r3, r5
 8009d86:	3301      	adds	r3, #1
 8009d88:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009d8c:	b1d3      	cbz	r3, 8009dc4 <HAL_I2C_Init+0x174>
 8009d8e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009d92:	e7a5      	b.n	8009ce0 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009d94:	2001      	movs	r0, #1
}
 8009d96:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009d98:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009d9c:	f7f8 f9cc 	bl	8002138 <HAL_I2C_MspInit>
 8009da0:	e762      	b.n	8009c68 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009da2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009da6:	e79b      	b.n	8009ce0 <HAL_I2C_Init+0x90>
 8009da8:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009dac:	1e43      	subs	r3, r0, #1
 8009dae:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009db2:	fbb3 f3f5 	udiv	r3, r3, r5
 8009db6:	3301      	adds	r3, #1
 8009db8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009dbc:	b113      	cbz	r3, 8009dc4 <HAL_I2C_Init+0x174>
 8009dbe:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009dc2:	e78d      	b.n	8009ce0 <HAL_I2C_Init+0x90>
 8009dc4:	2301      	movs	r3, #1
 8009dc6:	e78b      	b.n	8009ce0 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009dc8:	2001      	movs	r0, #1
}
 8009dca:	4770      	bx	lr
 8009dcc:	000186a0 	.word	0x000186a0
 8009dd0:	001e847f 	.word	0x001e847f
 8009dd4:	431bde83 	.word	0x431bde83
 8009dd8:	003d08ff 	.word	0x003d08ff
 8009ddc:	10624dd3 	.word	0x10624dd3

08009de0 <HAL_I2C_Mem_Write>:
{
 8009de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009de4:	4604      	mov	r4, r0
 8009de6:	b083      	sub	sp, #12
 8009de8:	4699      	mov	r9, r3
 8009dea:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009dee:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009df0:	460f      	mov	r7, r1
 8009df2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009df4:	f7ff fa5e 	bl	80092b4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009df8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009dfc:	2b20      	cmp	r3, #32
 8009dfe:	d004      	beq.n	8009e0a <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009e00:	2702      	movs	r7, #2
}
 8009e02:	4638      	mov	r0, r7
 8009e04:	b003      	add	sp, #12
 8009e06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e0a:	4605      	mov	r5, r0
 8009e0c:	e005      	b.n	8009e1a <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e0e:	f7ff fa51 	bl	80092b4 <HAL_GetTick>
 8009e12:	1b40      	subs	r0, r0, r5
 8009e14:	2819      	cmp	r0, #25
 8009e16:	f200 80a8 	bhi.w	8009f6a <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e1a:	6820      	ldr	r0, [r4, #0]
 8009e1c:	6983      	ldr	r3, [r0, #24]
 8009e1e:	ea6f 0c03 	mvn.w	ip, r3
 8009e22:	f01c 0b02 	ands.w	fp, ip, #2
 8009e26:	d0f2      	beq.n	8009e0e <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009e28:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009e2c:	2b01      	cmp	r3, #1
 8009e2e:	d0e7      	beq.n	8009e00 <HAL_I2C_Mem_Write+0x20>
 8009e30:	2301      	movs	r3, #1
 8009e32:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009e36:	6803      	ldr	r3, [r0, #0]
 8009e38:	07db      	lsls	r3, r3, #31
 8009e3a:	d572      	bpl.n	8009f22 <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009e3c:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009e3e:	6807      	ldr	r7, [r0, #0]
 8009e40:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009e44:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009e46:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009e48:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009e4a:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009e4c:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009e50:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009e54:	2040      	movs	r0, #64	; 0x40
 8009e56:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009e5a:	2000      	movs	r0, #0
 8009e5c:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009e5e:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009e62:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009e64:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009e66:	4856      	ldr	r0, [pc, #344]	; (8009fc0 <HAL_I2C_Mem_Write+0x1e0>)
 8009e68:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009e6a:	464b      	mov	r3, r9
 8009e6c:	4642      	mov	r2, r8
 8009e6e:	4620      	mov	r0, r4
 8009e70:	f7ff fca4 	bl	80097bc <I2C_RequestMemoryWrite>
 8009e74:	4607      	mov	r7, r0
 8009e76:	bb00      	cbnz	r0, 8009eba <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009e78:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009e7a:	2b00      	cmp	r3, #0
 8009e7c:	f000 809e 	beq.w	8009fbc <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009e80:	6823      	ldr	r3, [r4, #0]
 8009e82:	1c72      	adds	r2, r6, #1
 8009e84:	d159      	bne.n	8009f3a <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009e86:	695a      	ldr	r2, [r3, #20]
 8009e88:	0610      	lsls	r0, r2, #24
 8009e8a:	d41b      	bmi.n	8009ec4 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009e8c:	695a      	ldr	r2, [r3, #20]
 8009e8e:	0551      	lsls	r1, r2, #21
 8009e90:	d5f9      	bpl.n	8009e86 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009e92:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009e94:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009e98:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009e9a:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009e9c:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009e9e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009ea2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009ea6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009ea8:	f043 0304 	orr.w	r3, r3, #4
 8009eac:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009eae:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009eb0:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009eb2:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009eb4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009eb8:	d038      	beq.n	8009f2c <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009eba:	2701      	movs	r7, #1
}
 8009ebc:	4638      	mov	r0, r7
 8009ebe:	b003      	add	sp, #12
 8009ec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ec4:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009ec8:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ecc:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009ece:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009ed2:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009ed6:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009ed8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009eda:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009edc:	3a01      	subs	r2, #1
 8009ede:	b292      	uxth	r2, r2
 8009ee0:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009ee2:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009ee4:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009ee6:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009ee8:	0740      	lsls	r0, r0, #29
 8009eea:	d517      	bpl.n	8009f1c <HAL_I2C_Mem_Write+0x13c>
 8009eec:	b942      	cbnz	r2, 8009f00 <HAL_I2C_Mem_Write+0x120>
 8009eee:	1c72      	adds	r2, r6, #1
 8009ef0:	d156      	bne.n	8009fa0 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009ef2:	695a      	ldr	r2, [r3, #20]
 8009ef4:	0750      	lsls	r0, r2, #29
 8009ef6:	d446      	bmi.n	8009f86 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009ef8:	695a      	ldr	r2, [r3, #20]
 8009efa:	0551      	lsls	r1, r2, #21
 8009efc:	d5f9      	bpl.n	8009ef2 <HAL_I2C_Mem_Write+0x112>
 8009efe:	e7c8      	b.n	8009e92 <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009f00:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009f04:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009f06:	f10c 0102 	add.w	r1, ip, #2
 8009f0a:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009f0c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009f0e:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009f12:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009f14:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009f16:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009f18:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009f1a:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009f1c:	2a00      	cmp	r2, #0
 8009f1e:	d1b0      	bne.n	8009e82 <HAL_I2C_Mem_Write+0xa2>
 8009f20:	e7e5      	b.n	8009eee <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009f22:	6803      	ldr	r3, [r0, #0]
 8009f24:	f043 0301 	orr.w	r3, r3, #1
 8009f28:	6003      	str	r3, [r0, #0]
 8009f2a:	e787      	b.n	8009e3c <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f2c:	6822      	ldr	r2, [r4, #0]
 8009f2e:	6813      	ldr	r3, [r2, #0]
 8009f30:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009f34:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f36:	6013      	str	r3, [r2, #0]
 8009f38:	e763      	b.n	8009e02 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009f3a:	695a      	ldr	r2, [r3, #20]
 8009f3c:	0612      	lsls	r2, r2, #24
 8009f3e:	d4c1      	bmi.n	8009ec4 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009f40:	695a      	ldr	r2, [r3, #20]
 8009f42:	0551      	lsls	r1, r2, #21
 8009f44:	d4a5      	bmi.n	8009e92 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f46:	f7ff f9b5 	bl	80092b4 <HAL_GetTick>
 8009f4a:	1b40      	subs	r0, r0, r5
 8009f4c:	4286      	cmp	r6, r0
 8009f4e:	d301      	bcc.n	8009f54 <HAL_I2C_Mem_Write+0x174>
 8009f50:	2e00      	cmp	r6, #0
 8009f52:	d195      	bne.n	8009e80 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f54:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f56:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f58:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f5a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009f5e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f62:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009f64:	4313      	orrs	r3, r2
 8009f66:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009f68:	e7a1      	b.n	8009eae <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f6a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f6c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f70:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009f74:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f78:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009f7a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f7e:	f043 0320 	orr.w	r3, r3, #32
 8009f82:	6423      	str	r3, [r4, #64]	; 0x40
 8009f84:	e73c      	b.n	8009e00 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f86:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009f88:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f8a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009f8e:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009f90:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009f92:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009f96:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009f9a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009f9e:	e730      	b.n	8009e02 <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009fa0:	695a      	ldr	r2, [r3, #20]
 8009fa2:	0752      	lsls	r2, r2, #29
 8009fa4:	d4ef      	bmi.n	8009f86 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009fa6:	695a      	ldr	r2, [r3, #20]
 8009fa8:	0551      	lsls	r1, r2, #21
 8009faa:	f53f af72 	bmi.w	8009e92 <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009fae:	f7ff f981 	bl	80092b4 <HAL_GetTick>
 8009fb2:	1b40      	subs	r0, r0, r5
 8009fb4:	4286      	cmp	r6, r0
 8009fb6:	d3cd      	bcc.n	8009f54 <HAL_I2C_Mem_Write+0x174>
 8009fb8:	2e00      	cmp	r6, #0
 8009fba:	d0cb      	beq.n	8009f54 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009fbc:	6823      	ldr	r3, [r4, #0]
 8009fbe:	e796      	b.n	8009eee <HAL_I2C_Mem_Write+0x10e>
 8009fc0:	ffff0000 	.word	0xffff0000

08009fc4 <HAL_I2C_Mem_Read>:
{
 8009fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009fc8:	4604      	mov	r4, r0
 8009fca:	b087      	sub	sp, #28
 8009fcc:	4699      	mov	r9, r3
 8009fce:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009fd2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009fd4:	460f      	mov	r7, r1
 8009fd6:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009fd8:	f7ff f96c 	bl	80092b4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009fdc:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009fe0:	2b20      	cmp	r3, #32
 8009fe2:	d004      	beq.n	8009fee <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009fe4:	2702      	movs	r7, #2
}
 8009fe6:	4638      	mov	r0, r7
 8009fe8:	b007      	add	sp, #28
 8009fea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009fee:	4606      	mov	r6, r0
 8009ff0:	e005      	b.n	8009ffe <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009ff2:	f7ff f95f 	bl	80092b4 <HAL_GetTick>
 8009ff6:	1b80      	subs	r0, r0, r6
 8009ff8:	2819      	cmp	r0, #25
 8009ffa:	f200 80d2 	bhi.w	800a1a2 <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ffe:	f8d4 c000 	ldr.w	ip, [r4]
 800a002:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a006:	43c0      	mvns	r0, r0
 800a008:	f010 0b02 	ands.w	fp, r0, #2
 800a00c:	d0f1      	beq.n	8009ff2 <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a00e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a012:	2b01      	cmp	r3, #1
 800a014:	d0e6      	beq.n	8009fe4 <HAL_I2C_Mem_Read+0x20>
 800a016:	2301      	movs	r3, #1
 800a018:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a01c:	f8dc 3000 	ldr.w	r3, [ip]
 800a020:	07d9      	lsls	r1, r3, #31
 800a022:	d537      	bpl.n	800a094 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a024:	f8dc 0000 	ldr.w	r0, [ip]
 800a028:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a02c:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a030:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a032:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a034:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a036:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a03a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a03e:	2040      	movs	r0, #64	; 0x40
 800a040:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a044:	2000      	movs	r0, #0
 800a046:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a048:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a04c:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a04e:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a050:	4893      	ldr	r0, [pc, #588]	; (800a2a0 <HAL_I2C_Mem_Read+0x2dc>)
 800a052:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a054:	4639      	mov	r1, r7
 800a056:	464b      	mov	r3, r9
 800a058:	4642      	mov	r2, r8
 800a05a:	4620      	mov	r0, r4
 800a05c:	f7ff fca2 	bl	80099a4 <I2C_RequestMemoryRead>
 800a060:	4607      	mov	r7, r0
 800a062:	2800      	cmp	r0, #0
 800a064:	f040 80ab 	bne.w	800a1be <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800a068:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800a06a:	b9d2      	cbnz	r2, 800a0a2 <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a06c:	6823      	ldr	r3, [r4, #0]
 800a06e:	9002      	str	r0, [sp, #8]
 800a070:	695a      	ldr	r2, [r3, #20]
 800a072:	9202      	str	r2, [sp, #8]
 800a074:	699a      	ldr	r2, [r3, #24]
 800a076:	9202      	str	r2, [sp, #8]
 800a078:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a07a:	681a      	ldr	r2, [r3, #0]
 800a07c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a080:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a082:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a084:	2220      	movs	r2, #32
 800a086:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a08a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a08e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800a092:	e7a8      	b.n	8009fe6 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800a094:	f8dc 3000 	ldr.w	r3, [ip]
 800a098:	f043 0301 	orr.w	r3, r3, #1
 800a09c:	f8cc 3000 	str.w	r3, [ip]
 800a0a0:	e7c0      	b.n	800a024 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800a0a2:	2a01      	cmp	r2, #1
 800a0a4:	f000 812c 	beq.w	800a300 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800a0a8:	2a02      	cmp	r2, #2
 800a0aa:	f000 80bd 	beq.w	800a228 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a0ae:	6823      	ldr	r3, [r4, #0]
 800a0b0:	9005      	str	r0, [sp, #20]
 800a0b2:	6959      	ldr	r1, [r3, #20]
 800a0b4:	9105      	str	r1, [sp, #20]
 800a0b6:	6999      	ldr	r1, [r3, #24]
 800a0b8:	9105      	str	r1, [sp, #20]
 800a0ba:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800a0bc:	2a03      	cmp	r2, #3
 800a0be:	d849      	bhi.n	800a154 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800a0c0:	2a01      	cmp	r2, #1
 800a0c2:	f000 80eb 	beq.w	800a29c <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800a0c6:	2a02      	cmp	r2, #2
 800a0c8:	f000 8089 	beq.w	800a1de <HAL_I2C_Mem_Read+0x21a>
 800a0cc:	1c69      	adds	r1, r5, #1
 800a0ce:	f040 80bb 	bne.w	800a248 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a0d2:	695a      	ldr	r2, [r3, #20]
 800a0d4:	0752      	lsls	r2, r2, #29
 800a0d6:	d5fc      	bpl.n	800a0d2 <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0d8:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a0da:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a0dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a0e0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a0e2:	691b      	ldr	r3, [r3, #16]
 800a0e4:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a0e6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a0e8:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a0ea:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a0ec:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a0ee:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a0f0:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a0f2:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a0f4:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a0f6:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a0f8:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a0fa:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a0fc:	6822      	ldr	r2, [r4, #0]
 800a0fe:	f040 80af 	bne.w	800a260 <HAL_I2C_Mem_Read+0x29c>
 800a102:	6953      	ldr	r3, [r2, #20]
 800a104:	075b      	lsls	r3, r3, #29
 800a106:	d5fc      	bpl.n	800a102 <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a108:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a10a:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a10c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a110:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a112:	6913      	ldr	r3, [r2, #16]
 800a114:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a116:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a118:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a11a:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a11c:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800a11e:	3b01      	subs	r3, #1
 800a120:	b29b      	uxth	r3, r3
 800a122:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a124:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800a126:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800a128:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800a12c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a12e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a132:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800a134:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a136:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a138:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a13a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a13c:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a13e:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a140:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a142:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a144:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a146:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a148:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a14a:	2a00      	cmp	r2, #0
 800a14c:	d099      	beq.n	800a082 <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800a14e:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a150:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800a152:	d9b5      	bls.n	800a0c0 <HAL_I2C_Mem_Read+0xfc>
 800a154:	b95d      	cbnz	r5, 800a16e <HAL_I2C_Mem_Read+0x1aa>
 800a156:	e0c5      	b.n	800a2e4 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a158:	695a      	ldr	r2, [r3, #20]
 800a15a:	06d0      	lsls	r0, r2, #27
 800a15c:	f100 80b2 	bmi.w	800a2c4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a160:	f7ff f8a8 	bl	80092b4 <HAL_GetTick>
 800a164:	1b80      	subs	r0, r0, r6
 800a166:	4285      	cmp	r5, r0
 800a168:	f0c0 8086 	bcc.w	800a278 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a16c:	6823      	ldr	r3, [r4, #0]
 800a16e:	695a      	ldr	r2, [r3, #20]
 800a170:	0652      	lsls	r2, r2, #25
 800a172:	d5f1      	bpl.n	800a158 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a174:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a176:	691b      	ldr	r3, [r3, #16]
 800a178:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800a17a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a17c:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800a17e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a180:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a182:	3b01      	subs	r3, #1
 800a184:	b29b      	uxth	r3, r3
 800a186:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a188:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800a18a:	3a01      	subs	r2, #1
 800a18c:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800a18e:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a192:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800a194:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800a196:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a19a:	d5d6      	bpl.n	800a14a <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a19c:	6903      	ldr	r3, [r0, #16]
 800a19e:	704b      	strb	r3, [r1, #1]
 800a1a0:	e036      	b.n	800a210 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a1a2:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a1a4:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a1a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a1ac:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a1b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a1b2:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a1b6:	f043 0320 	orr.w	r3, r3, #32
 800a1ba:	6423      	str	r3, [r4, #64]	; 0x40
 800a1bc:	e712      	b.n	8009fe4 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800a1be:	2701      	movs	r7, #1
}
 800a1c0:	4638      	mov	r0, r7
 800a1c2:	b007      	add	sp, #28
 800a1c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a1c8:	695a      	ldr	r2, [r3, #20]
 800a1ca:	0750      	lsls	r0, r2, #29
 800a1cc:	d40c      	bmi.n	800a1e8 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a1ce:	f7ff f871 	bl	80092b4 <HAL_GetTick>
 800a1d2:	1b80      	subs	r0, r0, r6
 800a1d4:	4285      	cmp	r5, r0
 800a1d6:	d34f      	bcc.n	800a278 <HAL_I2C_Mem_Read+0x2b4>
 800a1d8:	2d00      	cmp	r5, #0
 800a1da:	d04d      	beq.n	800a278 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a1dc:	6823      	ldr	r3, [r4, #0]
 800a1de:	1c69      	adds	r1, r5, #1
 800a1e0:	d1f2      	bne.n	800a1c8 <HAL_I2C_Mem_Read+0x204>
 800a1e2:	695a      	ldr	r2, [r3, #20]
 800a1e4:	0752      	lsls	r2, r2, #29
 800a1e6:	d5fc      	bpl.n	800a1e2 <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1e8:	681a      	ldr	r2, [r3, #0]
 800a1ea:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a1ee:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a1f0:	691a      	ldr	r2, [r3, #16]
 800a1f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a1f4:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800a1f6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a1f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a1fa:	3b01      	subs	r3, #1
 800a1fc:	b29b      	uxth	r3, r3
 800a1fe:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a200:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a202:	3b01      	subs	r3, #1
 800a204:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a206:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a208:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a20a:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800a20c:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a20e:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800a210:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a212:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a214:	3301      	adds	r3, #1
 800a216:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800a218:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a21a:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a21c:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800a21e:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800a220:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800a222:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a224:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a226:	e790      	b.n	800a14a <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a228:	6823      	ldr	r3, [r4, #0]
 800a22a:	6819      	ldr	r1, [r3, #0]
 800a22c:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a230:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a232:	6819      	ldr	r1, [r3, #0]
 800a234:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800a238:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a23a:	9004      	str	r0, [sp, #16]
 800a23c:	6959      	ldr	r1, [r3, #20]
 800a23e:	9104      	str	r1, [sp, #16]
 800a240:	6999      	ldr	r1, [r3, #24]
 800a242:	9104      	str	r1, [sp, #16]
 800a244:	9904      	ldr	r1, [sp, #16]
 800a246:	e739      	b.n	800a0bc <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a248:	695a      	ldr	r2, [r3, #20]
 800a24a:	0750      	lsls	r0, r2, #29
 800a24c:	f53f af44 	bmi.w	800a0d8 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a250:	f7ff f830 	bl	80092b4 <HAL_GetTick>
 800a254:	1b80      	subs	r0, r0, r6
 800a256:	4285      	cmp	r5, r0
 800a258:	d30e      	bcc.n	800a278 <HAL_I2C_Mem_Read+0x2b4>
 800a25a:	b16d      	cbz	r5, 800a278 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a25c:	6823      	ldr	r3, [r4, #0]
 800a25e:	e735      	b.n	800a0cc <HAL_I2C_Mem_Read+0x108>
 800a260:	6953      	ldr	r3, [r2, #20]
 800a262:	0758      	lsls	r0, r3, #29
 800a264:	f53f af50 	bmi.w	800a108 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a268:	f7ff f824 	bl	80092b4 <HAL_GetTick>
 800a26c:	1b80      	subs	r0, r0, r6
 800a26e:	4285      	cmp	r5, r0
 800a270:	d302      	bcc.n	800a278 <HAL_I2C_Mem_Read+0x2b4>
 800a272:	2d00      	cmp	r5, #0
 800a274:	f47f af41 	bne.w	800a0fa <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a278:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a27a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a27c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a27e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a282:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a286:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a288:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a28c:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a28e:	f043 0320 	orr.w	r3, r3, #32
}
 800a292:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a294:	6423      	str	r3, [r4, #64]	; 0x40
}
 800a296:	b007      	add	sp, #28
 800a298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a29c:	b95d      	cbnz	r5, 800a2b6 <HAL_I2C_Mem_Read+0x2f2>
 800a29e:	e02b      	b.n	800a2f8 <HAL_I2C_Mem_Read+0x334>
 800a2a0:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a2a4:	695a      	ldr	r2, [r3, #20]
 800a2a6:	06d2      	lsls	r2, r2, #27
 800a2a8:	d40c      	bmi.n	800a2c4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2aa:	f7ff f803 	bl	80092b4 <HAL_GetTick>
 800a2ae:	1b80      	subs	r0, r0, r6
 800a2b0:	4285      	cmp	r5, r0
 800a2b2:	d3e1      	bcc.n	800a278 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a2b4:	6823      	ldr	r3, [r4, #0]
 800a2b6:	695a      	ldr	r2, [r3, #20]
 800a2b8:	0651      	lsls	r1, r2, #25
 800a2ba:	d5f3      	bpl.n	800a2a4 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2bc:	691a      	ldr	r2, [r3, #16]
 800a2be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a2c0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800a2c2:	e7a5      	b.n	800a210 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a2c4:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a2c6:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800a2ca:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800a2cc:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a2ce:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a2d0:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a2d4:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800a2d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a2da:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a2dc:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800a2e0:	2701      	movs	r7, #1
 800a2e2:	e680      	b.n	8009fe6 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a2e4:	695a      	ldr	r2, [r3, #20]
 800a2e6:	0652      	lsls	r2, r2, #25
 800a2e8:	f53f af44 	bmi.w	800a174 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800a2ec:	695a      	ldr	r2, [r3, #20]
 800a2ee:	06d1      	lsls	r1, r2, #27
 800a2f0:	d4e8      	bmi.n	800a2c4 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a2f2:	f7fe ffdf 	bl	80092b4 <HAL_GetTick>
 800a2f6:	e7bf      	b.n	800a278 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800a2f8:	695a      	ldr	r2, [r3, #20]
 800a2fa:	0650      	lsls	r0, r2, #25
 800a2fc:	d5f6      	bpl.n	800a2ec <HAL_I2C_Mem_Read+0x328>
 800a2fe:	e7dd      	b.n	800a2bc <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a300:	6823      	ldr	r3, [r4, #0]
 800a302:	6819      	ldr	r1, [r3, #0]
 800a304:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a308:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a30a:	9003      	str	r0, [sp, #12]
 800a30c:	6959      	ldr	r1, [r3, #20]
 800a30e:	9103      	str	r1, [sp, #12]
 800a310:	6999      	ldr	r1, [r3, #24]
 800a312:	9103      	str	r1, [sp, #12]
 800a314:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a316:	6819      	ldr	r1, [r3, #0]
 800a318:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800a31c:	6019      	str	r1, [r3, #0]
 800a31e:	e6cd      	b.n	800a0bc <HAL_I2C_Mem_Read+0xf8>

0800a320 <HAL_I2C_MasterTxCpltCallback>:
 800a320:	4770      	bx	lr
 800a322:	bf00      	nop

0800a324 <HAL_I2C_MasterRxCpltCallback>:
 800a324:	4770      	bx	lr
 800a326:	bf00      	nop

0800a328 <HAL_I2C_SlaveTxCpltCallback>:
 800a328:	4770      	bx	lr
 800a32a:	bf00      	nop

0800a32c <HAL_I2C_SlaveRxCpltCallback>:
 800a32c:	4770      	bx	lr
 800a32e:	bf00      	nop

0800a330 <HAL_I2C_AddrCallback>:
}
 800a330:	4770      	bx	lr
 800a332:	bf00      	nop

0800a334 <HAL_I2C_ListenCpltCallback>:
 800a334:	4770      	bx	lr
 800a336:	bf00      	nop

0800a338 <HAL_I2C_MemTxCpltCallback>:
 800a338:	4770      	bx	lr
 800a33a:	bf00      	nop

0800a33c <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a33c:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800a340:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800a342:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a344:	b959      	cbnz	r1, 800a35e <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a346:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a348:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a34a:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a34c:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a34e:	d00d      	beq.n	800a36c <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a350:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a354:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a356:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a358:	3201      	adds	r2, #1
 800a35a:	6502      	str	r2, [r0, #80]	; 0x50
 800a35c:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a35e:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a360:	2901      	cmp	r1, #1
 800a362:	d009      	beq.n	800a378 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a364:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a366:	2902      	cmp	r1, #2
 800a368:	d00e      	beq.n	800a388 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a36a:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a36c:	b2d2      	uxtb	r2, r2
 800a36e:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a370:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a372:	3202      	adds	r2, #2
 800a374:	6502      	str	r2, [r0, #80]	; 0x50
 800a376:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a378:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a37a:	6801      	ldr	r1, [r0, #0]
 800a37c:	b2d2      	uxtb	r2, r2
 800a37e:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a380:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a382:	3201      	adds	r2, #1
 800a384:	6502      	str	r2, [r0, #80]	; 0x50
 800a386:	4770      	bx	lr
 800a388:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a38a:	2a22      	cmp	r2, #34	; 0x22
 800a38c:	d01f      	beq.n	800a3ce <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a38e:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a390:	b289      	uxth	r1, r1
 800a392:	b9c1      	cbnz	r1, 800a3c6 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a394:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a396:	b289      	uxth	r1, r1
 800a398:	2900      	cmp	r1, #0
 800a39a:	d1e6      	bne.n	800a36a <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a39c:	2a21      	cmp	r2, #33	; 0x21
 800a39e:	d1e4      	bne.n	800a36a <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a3a0:	6802      	ldr	r2, [r0, #0]
{
 800a3a2:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a3a4:	6854      	ldr	r4, [r2, #4]
 800a3a6:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a3aa:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a3ac:	6814      	ldr	r4, [r2, #0]
 800a3ae:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a3b2:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a3b4:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a3b6:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a3b8:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a3bc:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a3c0:	f7ff ffba 	bl	800a338 <HAL_I2C_MemTxCpltCallback>
}
 800a3c4:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a3c6:	2a21      	cmp	r2, #33	; 0x21
 800a3c8:	d00a      	beq.n	800a3e0 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a3ca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a3cc:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a3ce:	6801      	ldr	r1, [r0, #0]
 800a3d0:	680a      	ldr	r2, [r1, #0]
 800a3d2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a3d6:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a3d8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a3da:	3201      	adds	r2, #1
 800a3dc:	6502      	str	r2, [r0, #80]	; 0x50
 800a3de:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a3e0:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a3e2:	6802      	ldr	r2, [r0, #0]
 800a3e4:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a3e8:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a3ea:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a3ec:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a3ee:	3a01      	subs	r2, #1
 800a3f0:	b292      	uxth	r2, r2
 800a3f2:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a3f4:	4770      	bx	lr
 800a3f6:	bf00      	nop

0800a3f8 <HAL_I2C_MemRxCpltCallback>:
 800a3f8:	4770      	bx	lr
 800a3fa:	bf00      	nop

0800a3fc <HAL_I2C_ErrorCallback>:
 800a3fc:	4770      	bx	lr
 800a3fe:	bf00      	nop

0800a400 <HAL_I2C_AbortCpltCallback>:
 800a400:	4770      	bx	lr
 800a402:	bf00      	nop

0800a404 <I2C_DMAAbort>:
{
 800a404:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a406:	4b3a      	ldr	r3, [pc, #232]	; (800a4f0 <I2C_DMAAbort+0xec>)
 800a408:	4a3a      	ldr	r2, [pc, #232]	; (800a4f4 <I2C_DMAAbort+0xf0>)
 800a40a:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a40c:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a40e:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a410:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a412:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a414:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a418:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a41a:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a41c:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a420:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a422:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a426:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a42a:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a42c:	9301      	str	r3, [sp, #4]
 800a42e:	e005      	b.n	800a43c <I2C_DMAAbort+0x38>
    count--;
 800a430:	9b01      	ldr	r3, [sp, #4]
 800a432:	3b01      	subs	r3, #1
 800a434:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a436:	6813      	ldr	r3, [r2, #0]
 800a438:	059b      	lsls	r3, r3, #22
 800a43a:	d506      	bpl.n	800a44a <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a43c:	9b01      	ldr	r3, [sp, #4]
 800a43e:	2b00      	cmp	r3, #0
 800a440:	d1f6      	bne.n	800a430 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a442:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a444:	f043 0320 	orr.w	r3, r3, #32
 800a448:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a44a:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a44c:	b34c      	cbz	r4, 800a4a2 <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a44e:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a450:	2500      	movs	r5, #0
 800a452:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a454:	b1f3      	cbz	r3, 800a494 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a456:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a458:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a45a:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a45e:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a460:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a462:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a464:	2400      	movs	r4, #0
 800a466:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a468:	6813      	ldr	r3, [r2, #0]
 800a46a:	f023 0301 	bic.w	r3, r3, #1
 800a46e:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a470:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a474:	2b60      	cmp	r3, #96	; 0x60
 800a476:	d02a      	beq.n	800a4ce <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a478:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a47c:	2928      	cmp	r1, #40	; 0x28
 800a47e:	d019      	beq.n	800a4b4 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a480:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a482:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a484:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a488:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a48c:	f7ff ffb6 	bl	800a3fc <HAL_I2C_ErrorCallback>
}
 800a490:	b002      	add	sp, #8
 800a492:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a494:	6815      	ldr	r5, [r2, #0]
 800a496:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a49a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a49c:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a49e:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a4a0:	e7e2      	b.n	800a468 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a4a2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a4a4:	b1f3      	cbz	r3, 800a4e4 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4a6:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a4a8:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4aa:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a4ae:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a4b0:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a4b2:	e7d7      	b.n	800a464 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a4b4:	6813      	ldr	r3, [r2, #0]
 800a4b6:	f043 0301 	orr.w	r3, r3, #1
 800a4ba:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4bc:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a4be:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4c0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a4c4:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a4c6:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a4c8:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a4cc:	e7de      	b.n	800a48c <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a4ce:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a4d0:	2220      	movs	r2, #32
 800a4d2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a4d6:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a4da:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a4dc:	f7ff ff90 	bl	800a400 <HAL_I2C_AbortCpltCallback>
}
 800a4e0:	b002      	add	sp, #8
 800a4e2:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a4e4:	6814      	ldr	r4, [r2, #0]
 800a4e6:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a4ea:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a4ec:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a4ee:	e7bb      	b.n	800a468 <I2C_DMAAbort+0x64>
 800a4f0:	20000078 	.word	0x20000078
 800a4f4:	14f8b589 	.word	0x14f8b589

0800a4f8 <I2C_ITError>:
{
 800a4f8:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4fa:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a4fe:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a502:	2b10      	cmp	r3, #16
{
 800a504:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a506:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a508:	d039      	beq.n	800a57e <I2C_ITError+0x86>
 800a50a:	b2d9      	uxtb	r1, r3
 800a50c:	2940      	cmp	r1, #64	; 0x40
 800a50e:	d036      	beq.n	800a57e <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a510:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a514:	2928      	cmp	r1, #40	; 0x28
 800a516:	d03d      	beq.n	800a594 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a518:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a51a:	6859      	ldr	r1, [r3, #4]
 800a51c:	0508      	lsls	r0, r1, #20
 800a51e:	d407      	bmi.n	800a530 <I2C_ITError+0x38>
 800a520:	2a60      	cmp	r2, #96	; 0x60
 800a522:	d005      	beq.n	800a530 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a524:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a526:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a528:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a52c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a530:	2200      	movs	r2, #0
 800a532:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a534:	685a      	ldr	r2, [r3, #4]
 800a536:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a53a:	d134      	bne.n	800a5a6 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a53c:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a540:	2960      	cmp	r1, #96	; 0x60
 800a542:	d075      	beq.n	800a630 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a544:	695a      	ldr	r2, [r3, #20]
 800a546:	0650      	lsls	r0, r2, #25
 800a548:	d505      	bpl.n	800a556 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a54a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a54c:	691b      	ldr	r3, [r3, #16]
 800a54e:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a550:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a552:	3301      	adds	r3, #1
 800a554:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a556:	4620      	mov	r0, r4
 800a558:	f7ff ff50 	bl	800a3fc <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a55c:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a55e:	0719      	lsls	r1, r3, #28
 800a560:	d004      	beq.n	800a56c <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a562:	6822      	ldr	r2, [r4, #0]
 800a564:	6853      	ldr	r3, [r2, #4]
 800a566:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a56a:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a56c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a570:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a572:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a574:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a576:	d501      	bpl.n	800a57c <I2C_ITError+0x84>
 800a578:	2b28      	cmp	r3, #40	; 0x28
 800a57a:	d02f      	beq.n	800a5dc <I2C_ITError+0xe4>
}
 800a57c:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a57e:	2a22      	cmp	r2, #34	; 0x22
 800a580:	d1c6      	bne.n	800a510 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a582:	6823      	ldr	r3, [r4, #0]
 800a584:	681a      	ldr	r2, [r3, #0]
 800a586:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a58a:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a58c:	685a      	ldr	r2, [r3, #4]
 800a58e:	0512      	lsls	r2, r2, #20
 800a590:	d5c8      	bpl.n	800a524 <I2C_ITError+0x2c>
 800a592:	e7cd      	b.n	800a530 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a594:	2300      	movs	r3, #0
 800a596:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a598:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a59a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a59e:	685a      	ldr	r2, [r3, #4]
 800a5a0:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a5a4:	d0ca      	beq.n	800a53c <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a5a6:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a5a8:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a5aa:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a5ae:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a5b0:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a5b4:	2b01      	cmp	r3, #1
 800a5b6:	d01e      	beq.n	800a5f6 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a5b8:	4b28      	ldr	r3, [pc, #160]	; (800a65c <I2C_ITError+0x164>)
 800a5ba:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a5bc:	f7fe ff04 	bl	80093c8 <HAL_DMA_Abort_IT>
 800a5c0:	2800      	cmp	r0, #0
 800a5c2:	d0cb      	beq.n	800a55c <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a5c4:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a5c6:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a5c8:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a5ca:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a5cc:	f023 0301 	bic.w	r3, r3, #1
 800a5d0:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a5d2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a5d6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a5d8:	4798      	blx	r3
 800a5da:	e7bf      	b.n	800a55c <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a5dc:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a5de:	4920      	ldr	r1, [pc, #128]	; (800a660 <I2C_ITError+0x168>)
 800a5e0:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a5e2:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a5e4:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a5e6:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a5e8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a5ec:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a5f0:	f7ff fea0 	bl	800a334 <HAL_I2C_ListenCpltCallback>
}
 800a5f4:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a5f6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a5f8:	4b18      	ldr	r3, [pc, #96]	; (800a65c <I2C_ITError+0x164>)
 800a5fa:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a5fc:	f7fe fee4 	bl	80093c8 <HAL_DMA_Abort_IT>
 800a600:	2800      	cmp	r0, #0
 800a602:	d0ab      	beq.n	800a55c <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a604:	6823      	ldr	r3, [r4, #0]
 800a606:	695a      	ldr	r2, [r3, #20]
 800a608:	0651      	lsls	r1, r2, #25
 800a60a:	d506      	bpl.n	800a61a <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a60c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a60e:	691b      	ldr	r3, [r3, #16]
 800a610:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a612:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a614:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a616:	3201      	adds	r2, #1
 800a618:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a61a:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a61c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a61e:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a622:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a624:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a626:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a62a:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a62c:	4798      	blx	r3
 800a62e:	e795      	b.n	800a55c <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a630:	2120      	movs	r1, #32
 800a632:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a636:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a638:	695a      	ldr	r2, [r3, #20]
 800a63a:	0652      	lsls	r2, r2, #25
 800a63c:	d506      	bpl.n	800a64c <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a63e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a640:	691b      	ldr	r3, [r3, #16]
 800a642:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a644:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a646:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a648:	3201      	adds	r2, #1
 800a64a:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a64c:	681a      	ldr	r2, [r3, #0]
 800a64e:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a652:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a654:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a656:	f7ff fed3 	bl	800a400 <HAL_I2C_AbortCpltCallback>
 800a65a:	e77f      	b.n	800a55c <I2C_ITError+0x64>
 800a65c:	0800a405 	.word	0x0800a405
 800a660:	ffff0000 	.word	0xffff0000

0800a664 <HAL_I2C_EV_IRQHandler>:
{
 800a664:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a666:	6803      	ldr	r3, [r0, #0]
{
 800a668:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a66a:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a66c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a66e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a672:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a676:	2910      	cmp	r1, #16
{
 800a678:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a67a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a67c:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a680:	d022      	beq.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x64>
 800a682:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a686:	d01f      	beq.n	800a6c8 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a688:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a68a:	2900      	cmp	r1, #0
 800a68c:	f000 8094 	beq.w	800a7b8 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a690:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a692:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a694:	f011 0602 	ands.w	r6, r1, #2
 800a698:	d059      	beq.n	800a74e <HAL_I2C_EV_IRQHandler+0xea>
 800a69a:	0586      	lsls	r6, r0, #22
 800a69c:	d559      	bpl.n	800a752 <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a69e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a6a0:	b102      	cbz	r2, 800a6a4 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a6a2:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a6a4:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a6a8:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a6ac:	2a28      	cmp	r2, #40	; 0x28
 800a6ae:	f000 821e 	beq.w	800aaee <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a6b2:	2200      	movs	r2, #0
 800a6b4:	920c      	str	r2, [sp, #48]	; 0x30
 800a6b6:	6959      	ldr	r1, [r3, #20]
 800a6b8:	910c      	str	r1, [sp, #48]	; 0x30
 800a6ba:	699b      	ldr	r3, [r3, #24]
 800a6bc:	930c      	str	r3, [sp, #48]	; 0x30
 800a6be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a6c0:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a6c4:	b00e      	add	sp, #56	; 0x38
 800a6c6:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a6c8:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a6ca:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a6cc:	f011 0f01 	tst.w	r1, #1
 800a6d0:	d11a      	bne.n	800a708 <HAL_I2C_EV_IRQHandler+0xa4>
 800a6d2:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a6d6:	d0f5      	beq.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800a6d8:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a6dc:	d0f2      	beq.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a6de:	070d      	lsls	r5, r1, #28
 800a6e0:	d56d      	bpl.n	800a7be <HAL_I2C_EV_IRQHandler+0x15a>
 800a6e2:	0585      	lsls	r5, r0, #22
 800a6e4:	f140 8083 	bpl.w	800a7ee <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a6e8:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a6ea:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a6ec:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a6ee:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a6f0:	2900      	cmp	r1, #0
 800a6f2:	f000 81e3 	beq.w	800aabc <HAL_I2C_EV_IRQHandler+0x458>
 800a6f6:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a6f8:	2a00      	cmp	r2, #0
 800a6fa:	f000 81df 	beq.w	800aabc <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a6fe:	685a      	ldr	r2, [r3, #4]
 800a700:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a704:	605a      	str	r2, [r3, #4]
 800a706:	e7dd      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a708:	0585      	lsls	r5, r0, #22
 800a70a:	d56e      	bpl.n	800a7ea <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a70c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a70e:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a712:	f000 81e9 	beq.w	800aae8 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a716:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a718:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a71c:	bf04      	itt	eq
 800a71e:	2208      	moveq	r2, #8
 800a720:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a722:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a726:	2a40      	cmp	r2, #64	; 0x40
 800a728:	f000 81d7 	beq.w	800aada <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a72c:	6922      	ldr	r2, [r4, #16]
 800a72e:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a732:	f000 81b2 	beq.w	800aa9a <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a736:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a738:	2a00      	cmp	r2, #0
 800a73a:	f040 81ef 	bne.w	800ab1c <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a73e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a740:	11d2      	asrs	r2, r2, #7
 800a742:	f002 0206 	and.w	r2, r2, #6
 800a746:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a74a:	611a      	str	r2, [r3, #16]
 800a74c:	e7ba      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a74e:	06cd      	lsls	r5, r1, #27
 800a750:	d47c      	bmi.n	800a84c <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a752:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a756:	2a21      	cmp	r2, #33	; 0x21
 800a758:	f000 80f5 	beq.w	800a946 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a75c:	064e      	lsls	r6, r1, #25
 800a75e:	f140 8132 	bpl.w	800a9c6 <HAL_I2C_EV_IRQHandler+0x362>
 800a762:	0545      	lsls	r5, r0, #21
 800a764:	f140 812f 	bpl.w	800a9c6 <HAL_I2C_EV_IRQHandler+0x362>
 800a768:	0749      	lsls	r1, r1, #29
 800a76a:	f100 812f 	bmi.w	800a9cc <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a76e:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a772:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a774:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a776:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a778:	2a00      	cmp	r2, #0
 800a77a:	d0a3      	beq.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a77c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a77e:	691b      	ldr	r3, [r3, #16]
 800a780:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a782:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a784:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a786:	3b01      	subs	r3, #1
 800a788:	b29b      	uxth	r3, r3
 800a78a:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a78c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a78e:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a790:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a792:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a794:	2b00      	cmp	r3, #0
 800a796:	d195      	bne.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800a798:	292a      	cmp	r1, #42	; 0x2a
 800a79a:	d193      	bne.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a79c:	6822      	ldr	r2, [r4, #0]
 800a79e:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a7a0:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7a2:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a7a4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a7a8:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a7aa:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a7ac:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a7ae:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a7b2:	f7ff fdbb 	bl	800a32c <HAL_I2C_SlaveRxCpltCallback>
 800a7b6:	e785      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a7b8:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a7ba:	6959      	ldr	r1, [r3, #20]
 800a7bc:	e76a      	b.n	800a694 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7be:	078d      	lsls	r5, r1, #30
 800a7c0:	d515      	bpl.n	800a7ee <HAL_I2C_EV_IRQHandler+0x18a>
 800a7c2:	0585      	lsls	r5, r0, #22
 800a7c4:	d513      	bpl.n	800a7ee <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a7c6:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a7ca:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a7cc:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a7ce:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a7d2:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a7d4:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a7d6:	f000 81b3 	beq.w	800ab40 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a7da:	2200      	movs	r2, #0
 800a7dc:	920a      	str	r2, [sp, #40]	; 0x28
 800a7de:	695a      	ldr	r2, [r3, #20]
 800a7e0:	920a      	str	r2, [sp, #40]	; 0x28
 800a7e2:	699b      	ldr	r3, [r3, #24]
 800a7e4:	930a      	str	r3, [sp, #40]	; 0x28
 800a7e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a7e8:	e76c      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a7ea:	070d      	lsls	r5, r1, #28
 800a7ec:	d5e7      	bpl.n	800a7be <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a7ee:	0776      	lsls	r6, r6, #29
 800a7f0:	f140 80f5 	bpl.w	800a9de <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a7f4:	685d      	ldr	r5, [r3, #4]
 800a7f6:	052d      	lsls	r5, r5, #20
 800a7f8:	f53f af64 	bmi.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a7fc:	060e      	lsls	r6, r1, #24
 800a7fe:	f140 8115 	bpl.w	800aa2c <HAL_I2C_EV_IRQHandler+0x3c8>
 800a802:	0545      	lsls	r5, r0, #21
 800a804:	f140 8112 	bpl.w	800aa2c <HAL_I2C_EV_IRQHandler+0x3c8>
 800a808:	074e      	lsls	r6, r1, #29
 800a80a:	f100 8112 	bmi.w	800aa32 <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a80e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a812:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a814:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a818:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a81a:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a81c:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a81e:	2800      	cmp	r0, #0
 800a820:	f040 8235 	bne.w	800ac8e <HAL_I2C_EV_IRQHandler+0x62a>
 800a824:	2a21      	cmp	r2, #33	; 0x21
 800a826:	f000 8347 	beq.w	800aeb8 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a82a:	2940      	cmp	r1, #64	; 0x40
 800a82c:	f47f af4a 	bne.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a830:	2a22      	cmp	r2, #34	; 0x22
 800a832:	f47f af47 	bne.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a836:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a838:	b292      	uxth	r2, r2
 800a83a:	2a00      	cmp	r2, #0
 800a83c:	f000 8268 	beq.w	800ad10 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a840:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a844:	2a40      	cmp	r2, #64	; 0x40
 800a846:	f040 80b4 	bne.w	800a9b2 <HAL_I2C_EV_IRQHandler+0x34e>
 800a84a:	e0fc      	b.n	800aa46 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a84c:	0585      	lsls	r5, r0, #22
 800a84e:	d580      	bpl.n	800a752 <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a850:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a854:	685a      	ldr	r2, [r3, #4]
 800a856:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a85a:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a85c:	960d      	str	r6, [sp, #52]	; 0x34
 800a85e:	695a      	ldr	r2, [r3, #20]
 800a860:	920d      	str	r2, [sp, #52]	; 0x34
 800a862:	681a      	ldr	r2, [r3, #0]
 800a864:	f042 0201 	orr.w	r2, r2, #1
 800a868:	601a      	str	r2, [r3, #0]
 800a86a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a86c:	681a      	ldr	r2, [r3, #0]
 800a86e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a872:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a874:	685a      	ldr	r2, [r3, #4]
 800a876:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a878:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a87a:	d521      	bpl.n	800a8c0 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a87c:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a880:	2a22      	cmp	r2, #34	; 0x22
 800a882:	f000 817a 	beq.w	800ab7a <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a886:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a888:	6802      	ldr	r2, [r0, #0]
 800a88a:	6852      	ldr	r2, [r2, #4]
 800a88c:	b292      	uxth	r2, r2
 800a88e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a890:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a892:	b292      	uxth	r2, r2
 800a894:	b11a      	cbz	r2, 800a89e <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a896:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a898:	f042 0204 	orr.w	r2, r2, #4
 800a89c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a89e:	685a      	ldr	r2, [r3, #4]
 800a8a0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a8a4:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a8a6:	f7fe fda1 	bl	80093ec <HAL_DMA_GetState>
 800a8aa:	2801      	cmp	r0, #1
 800a8ac:	d008      	beq.n	800a8c0 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a8ae:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a8b0:	4b99      	ldr	r3, [pc, #612]	; (800ab18 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a8b2:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a8b4:	f7fe fd88 	bl	80093c8 <HAL_DMA_Abort_IT>
 800a8b8:	b110      	cbz	r0, 800a8c0 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a8ba:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a8bc:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a8be:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a8c0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a8c2:	b29b      	uxth	r3, r3
 800a8c4:	b313      	cbz	r3, 800a90c <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a8c6:	6823      	ldr	r3, [r4, #0]
 800a8c8:	695a      	ldr	r2, [r3, #20]
 800a8ca:	0752      	lsls	r2, r2, #29
 800a8cc:	d50a      	bpl.n	800a8e4 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8ce:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a8d0:	691b      	ldr	r3, [r3, #16]
 800a8d2:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a8d4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a8d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a8d8:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a8da:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a8dc:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a8de:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a8e0:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a8e2:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a8e4:	695a      	ldr	r2, [r3, #20]
 800a8e6:	0656      	lsls	r6, r2, #25
 800a8e8:	d509      	bpl.n	800a8fe <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8ea:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a8ec:	691b      	ldr	r3, [r3, #16]
 800a8ee:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a8f0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a8f2:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a8f4:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a8f6:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a8f8:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a8fa:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a8fc:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a8fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a900:	b29b      	uxth	r3, r3
 800a902:	b11b      	cbz	r3, 800a90c <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a904:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a906:	f043 0304 	orr.w	r3, r3, #4
 800a90a:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a90c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a90e:	2b00      	cmp	r3, #0
 800a910:	f040 80dd 	bne.w	800aace <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a914:	2d2a      	cmp	r5, #42	; 0x2a
 800a916:	f000 8151 	beq.w	800abbc <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a91a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a91e:	2b28      	cmp	r3, #40	; 0x28
 800a920:	f000 8154 	beq.w	800abcc <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a924:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a926:	2b22      	cmp	r3, #34	; 0x22
 800a928:	d002      	beq.n	800a930 <HAL_I2C_EV_IRQHandler+0x2cc>
 800a92a:	2d22      	cmp	r5, #34	; 0x22
 800a92c:	f47f aeca 	bne.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a930:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a932:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a934:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a936:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a938:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a93c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a940:	f7ff fcf4 	bl	800a32c <HAL_I2C_SlaveRxCpltCallback>
 800a944:	e6be      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a946:	060d      	lsls	r5, r1, #24
 800a948:	d528      	bpl.n	800a99c <HAL_I2C_EV_IRQHandler+0x338>
 800a94a:	0546      	lsls	r6, r0, #21
 800a94c:	d526      	bpl.n	800a99c <HAL_I2C_EV_IRQHandler+0x338>
 800a94e:	074d      	lsls	r5, r1, #29
 800a950:	d427      	bmi.n	800a9a2 <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a952:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a956:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a958:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a95a:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a95c:	2900      	cmp	r1, #0
 800a95e:	f43f aeb1 	beq.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a962:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a964:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a968:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a96a:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a96c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a96e:	3901      	subs	r1, #1
 800a970:	b289      	uxth	r1, r1
 800a972:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a974:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a976:	b289      	uxth	r1, r1
 800a978:	2900      	cmp	r1, #0
 800a97a:	f47f aea3 	bne.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800a97e:	2829      	cmp	r0, #41	; 0x29
 800a980:	f47f aea0 	bne.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a984:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a986:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a988:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a98c:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a98e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a990:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a992:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a996:	f7ff fcc7 	bl	800a328 <HAL_I2C_SlaveTxCpltCallback>
 800a99a:	e693      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a99c:	0749      	lsls	r1, r1, #29
 800a99e:	f57f ae91 	bpl.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800a9a2:	0582      	lsls	r2, r0, #22
 800a9a4:	f57f ae8e 	bpl.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a9a8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9aa:	b292      	uxth	r2, r2
 800a9ac:	2a00      	cmp	r2, #0
 800a9ae:	f43f ae89 	beq.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a9b2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a9b4:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a9b8:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a9ba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a9bc:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a9be:	3b01      	subs	r3, #1
 800a9c0:	b29b      	uxth	r3, r3
 800a9c2:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a9c4:	e67e      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a9c6:	074a      	lsls	r2, r1, #29
 800a9c8:	f57f ae7c 	bpl.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800a9cc:	0586      	lsls	r6, r0, #22
 800a9ce:	f57f ae79 	bpl.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a9d2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9d4:	b292      	uxth	r2, r2
 800a9d6:	2a00      	cmp	r2, #0
 800a9d8:	f43f ae74 	beq.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800a9dc:	e01b      	b.n	800aa16 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a9de:	685a      	ldr	r2, [r3, #4]
 800a9e0:	0512      	lsls	r2, r2, #20
 800a9e2:	f53f ae6f 	bmi.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a9e6:	064e      	lsls	r6, r1, #25
 800a9e8:	d433      	bmi.n	800aa52 <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a9ea:	0749      	lsls	r1, r1, #29
 800a9ec:	f57f ae6a 	bpl.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800a9f0:	0582      	lsls	r2, r0, #22
 800a9f2:	f57f ae67 	bpl.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a9f6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a9f8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a9fa:	b292      	uxth	r2, r2
 800a9fc:	2a04      	cmp	r2, #4
 800a9fe:	f000 8113 	beq.w	800ac28 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800aa02:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa04:	b292      	uxth	r2, r2
 800aa06:	2a03      	cmp	r2, #3
 800aa08:	f000 8153 	beq.w	800acb2 <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800aa0c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa0e:	b292      	uxth	r2, r2
 800aa10:	2a02      	cmp	r2, #2
 800aa12:	f000 8182 	beq.w	800ad1a <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa16:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa18:	691b      	ldr	r3, [r3, #16]
 800aa1a:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800aa1c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800aa1e:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aa20:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800aa22:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800aa24:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800aa26:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aa28:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800aa2a:	e64b      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800aa2c:	074d      	lsls	r5, r1, #29
 800aa2e:	f57f ae49 	bpl.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800aa32:	0581      	lsls	r1, r0, #22
 800aa34:	f57f ae46 	bpl.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800aa38:	2a21      	cmp	r2, #33	; 0x21
 800aa3a:	f000 80fd 	beq.w	800ac38 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800aa3e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800aa42:	f47f ae3f 	bne.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800aa46:	4620      	mov	r0, r4
}
 800aa48:	b00e      	add	sp, #56	; 0x38
 800aa4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800aa4e:	f7ff bc75 	b.w	800a33c <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800aa52:	0545      	lsls	r5, r0, #21
 800aa54:	d5c9      	bpl.n	800a9ea <HAL_I2C_EV_IRQHandler+0x386>
 800aa56:	f011 0104 	ands.w	r1, r1, #4
 800aa5a:	d1c9      	bne.n	800a9f0 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800aa5c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800aa60:	2a22      	cmp	r2, #34	; 0x22
 800aa62:	f47f ae2f 	bne.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800aa66:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800aa68:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800aa6a:	2a03      	cmp	r2, #3
 800aa6c:	f240 81ec 	bls.w	800ae48 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa70:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa72:	691b      	ldr	r3, [r3, #16]
 800aa74:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800aa76:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800aa78:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800aa7a:	3b01      	subs	r3, #1
 800aa7c:	b29b      	uxth	r3, r3
 800aa7e:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800aa80:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800aa82:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800aa84:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800aa86:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800aa88:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800aa8a:	f47f ae1b 	bne.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800aa8e:	6822      	ldr	r2, [r4, #0]
 800aa90:	6853      	ldr	r3, [r2, #4]
 800aa92:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800aa96:	6053      	str	r3, [r2, #4]
 800aa98:	e614      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800aa9a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800aa9e:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800aaa0:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800aaa2:	bf16      	itet	ne
 800aaa4:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800aaa8:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800aaac:	b2d2      	uxtbne	r2, r2
 800aaae:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800aab0:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800aab2:	b11a      	cbz	r2, 800aabc <HAL_I2C_EV_IRQHandler+0x458>
 800aab4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800aab6:	2a00      	cmp	r2, #0
 800aab8:	f47f ae21 	bne.w	800a6fe <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800aabc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800aabe:	2a00      	cmp	r2, #0
 800aac0:	f43f ae00 	beq.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800aac4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800aac6:	2a00      	cmp	r2, #0
 800aac8:	f47f ae19 	bne.w	800a6fe <HAL_I2C_EV_IRQHandler+0x9a>
 800aacc:	e5fa      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800aace:	4620      	mov	r0, r4
}
 800aad0:	b00e      	add	sp, #56	; 0x38
 800aad2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800aad6:	f7ff bd0f 	b.w	800a4f8 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800aada:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800aadc:	bb52      	cbnz	r2, 800ab34 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800aade:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800aae0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800aae4:	611a      	str	r2, [r3, #16]
 800aae6:	e5ed      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800aae8:	2201      	movs	r2, #1
 800aaea:	62e2      	str	r2, [r4, #44]	; 0x2c
 800aaec:	e619      	b.n	800a722 <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800aaee:	685a      	ldr	r2, [r3, #4]
 800aaf0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aaf4:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800aaf6:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800aaf8:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800aafc:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800ab00:	bf54      	ite	pl
 800ab02:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800ab04:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800ab06:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800ab0a:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800ab0e:	4620      	mov	r0, r4
 800ab10:	f7ff fc0e 	bl	800a330 <HAL_I2C_AddrCallback>
 800ab14:	e5d6      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800ab16:	bf00      	nop
 800ab18:	0800a405 	.word	0x0800a405
      else if (hi2c->EventCount == 1U)
 800ab1c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ab1e:	2a01      	cmp	r2, #1
 800ab20:	f47f add0 	bne.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800ab24:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ab26:	11d2      	asrs	r2, r2, #7
 800ab28:	f002 0206 	and.w	r2, r2, #6
 800ab2c:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800ab30:	611a      	str	r2, [r3, #16]
 800ab32:	e5c7      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800ab34:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800ab36:	f042 0201 	orr.w	r2, r2, #1
 800ab3a:	b2d2      	uxtb	r2, r2
 800ab3c:	611a      	str	r2, [r3, #16]
 800ab3e:	e5c1      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800ab40:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800ab42:	b911      	cbnz	r1, 800ab4a <HAL_I2C_EV_IRQHandler+0x4e6>
 800ab44:	2a40      	cmp	r2, #64	; 0x40
 800ab46:	f000 809b 	beq.w	800ac80 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800ab4a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800ab4c:	b922      	cbnz	r2, 800ab58 <HAL_I2C_EV_IRQHandler+0x4f4>
 800ab4e:	6921      	ldr	r1, [r4, #16]
 800ab50:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800ab54:	f000 809f 	beq.w	800ac96 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800ab58:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ab5a:	b292      	uxth	r2, r2
 800ab5c:	2a00      	cmp	r2, #0
 800ab5e:	d142      	bne.n	800abe6 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab60:	9203      	str	r2, [sp, #12]
 800ab62:	695a      	ldr	r2, [r3, #20]
 800ab64:	9203      	str	r2, [sp, #12]
 800ab66:	699a      	ldr	r2, [r3, #24]
 800ab68:	9203      	str	r2, [sp, #12]
 800ab6a:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab6c:	681a      	ldr	r2, [r3, #0]
 800ab6e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab72:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800ab74:	2300      	movs	r3, #0
 800ab76:	6523      	str	r3, [r4, #80]	; 0x50
 800ab78:	e5a4      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800ab7a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ab7c:	6802      	ldr	r2, [r0, #0]
 800ab7e:	6852      	ldr	r2, [r2, #4]
 800ab80:	b292      	uxth	r2, r2
 800ab82:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800ab84:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ab86:	b292      	uxth	r2, r2
 800ab88:	b11a      	cbz	r2, 800ab92 <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800ab8a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ab8c:	f042 0204 	orr.w	r2, r2, #4
 800ab90:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800ab92:	685a      	ldr	r2, [r3, #4]
 800ab94:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ab98:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800ab9a:	f7fe fc27 	bl	80093ec <HAL_DMA_GetState>
 800ab9e:	2801      	cmp	r0, #1
 800aba0:	f43f ae8e 	beq.w	800a8c0 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800aba4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800aba6:	4b98      	ldr	r3, [pc, #608]	; (800ae08 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800aba8:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800abaa:	f7fe fc0d 	bl	80093c8 <HAL_DMA_Abort_IT>
 800abae:	2800      	cmp	r0, #0
 800abb0:	f43f ae86 	beq.w	800a8c0 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800abb4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800abb6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800abb8:	4798      	blx	r3
 800abba:	e681      	b.n	800a8c0 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800abbc:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800abbe:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800abc0:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800abc2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800abc6:	f7ff fbb1 	bl	800a32c <HAL_I2C_SlaveRxCpltCallback>
 800abca:	e6a6      	b.n	800a91a <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800abcc:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800abce:	498f      	ldr	r1, [pc, #572]	; (800ae0c <HAL_I2C_EV_IRQHandler+0x7a8>)
 800abd0:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800abd2:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800abd4:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800abd6:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800abd8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800abdc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800abe0:	f7ff fba8 	bl	800a334 <HAL_I2C_ListenCpltCallback>
 800abe4:	e56e      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800abe6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800abe8:	b292      	uxth	r2, r2
 800abea:	2a01      	cmp	r2, #1
 800abec:	d070      	beq.n	800acd0 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800abee:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800abf0:	b292      	uxth	r2, r2
 800abf2:	2a02      	cmp	r2, #2
 800abf4:	f000 80d6 	beq.w	800ada4 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abf8:	681a      	ldr	r2, [r3, #0]
 800abfa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800abfe:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800ac00:	685a      	ldr	r2, [r3, #4]
 800ac02:	0511      	lsls	r1, r2, #20
 800ac04:	d508      	bpl.n	800ac18 <HAL_I2C_EV_IRQHandler+0x5b4>
 800ac06:	2820      	cmp	r0, #32
 800ac08:	f200 80f8 	bhi.w	800adfc <HAL_I2C_EV_IRQHandler+0x798>
 800ac0c:	2807      	cmp	r0, #7
 800ac0e:	f200 80ea 	bhi.w	800ade6 <HAL_I2C_EV_IRQHandler+0x782>
 800ac12:	2801      	cmp	r0, #1
 800ac14:	f000 80ed 	beq.w	800adf2 <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac18:	2200      	movs	r2, #0
 800ac1a:	9209      	str	r2, [sp, #36]	; 0x24
 800ac1c:	695a      	ldr	r2, [r3, #20]
 800ac1e:	9209      	str	r2, [sp, #36]	; 0x24
 800ac20:	699b      	ldr	r3, [r3, #24]
 800ac22:	9309      	str	r3, [sp, #36]	; 0x24
 800ac24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ac26:	e7a5      	b.n	800ab74 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ac28:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac2a:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ac2c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ac30:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac32:	691b      	ldr	r3, [r3, #16]
 800ac34:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800ac36:	e6f1      	b.n	800aa1c <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800ac38:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800ac3a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800ac3e:	2a21      	cmp	r2, #33	; 0x21
 800ac40:	f47f ad40 	bne.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800ac44:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800ac46:	b292      	uxth	r2, r2
 800ac48:	2a00      	cmp	r2, #0
 800ac4a:	f47f aeb2 	bne.w	800a9b2 <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ac4e:	2908      	cmp	r1, #8
 800ac50:	f000 80e2 	beq.w	800ae18 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ac54:	2920      	cmp	r1, #32
 800ac56:	f000 80df 	beq.w	800ae18 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ac5a:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800ac5e:	f000 80db 	beq.w	800ae18 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac62:	6859      	ldr	r1, [r3, #4]
 800ac64:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ac68:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ac6a:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800ac6c:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ac6e:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac70:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ac74:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800ac76:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800ac7a:	f7ff fb51 	bl	800a320 <HAL_I2C_MasterTxCpltCallback>
 800ac7e:	e521      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac80:	9101      	str	r1, [sp, #4]
 800ac82:	695a      	ldr	r2, [r3, #20]
 800ac84:	9201      	str	r2, [sp, #4]
 800ac86:	699b      	ldr	r3, [r3, #24]
 800ac88:	9301      	str	r3, [sp, #4]
 800ac8a:	9b01      	ldr	r3, [sp, #4]
 800ac8c:	e51a      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800ac8e:	2a21      	cmp	r2, #33	; 0x21
 800ac90:	f43f add1 	beq.w	800a836 <HAL_I2C_EV_IRQHandler+0x1d2>
 800ac94:	e5c9      	b.n	800a82a <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac96:	9202      	str	r2, [sp, #8]
 800ac98:	695a      	ldr	r2, [r3, #20]
 800ac9a:	9202      	str	r2, [sp, #8]
 800ac9c:	699a      	ldr	r2, [r3, #24]
 800ac9e:	9202      	str	r2, [sp, #8]
 800aca0:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800aca2:	681a      	ldr	r2, [r3, #0]
 800aca4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800aca8:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800acaa:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800acac:	3301      	adds	r3, #1
 800acae:	6523      	str	r3, [r4, #80]	; 0x50
 800acb0:	e508      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800acb2:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800acb4:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800acb6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acba:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800acbc:	f43f aeab 	beq.w	800aa16 <HAL_I2C_EV_IRQHandler+0x3b2>
 800acc0:	2902      	cmp	r1, #2
 800acc2:	f43f aea8 	beq.w	800aa16 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acc6:	681a      	ldr	r2, [r3, #0]
 800acc8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800accc:	601a      	str	r2, [r3, #0]
 800acce:	e6a2      	b.n	800aa16 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800acd0:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800acd4:	f000 811b 	beq.w	800af0e <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800acd8:	2808      	cmp	r0, #8
 800acda:	f000 8108 	beq.w	800aeee <HAL_I2C_EV_IRQHandler+0x88a>
 800acde:	2820      	cmp	r0, #32
 800ace0:	f000 8105 	beq.w	800aeee <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800ace4:	2d12      	cmp	r5, #18
 800ace6:	f000 80ff 	beq.w	800aee8 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800acea:	2810      	cmp	r0, #16
 800acec:	d804      	bhi.n	800acf8 <HAL_I2C_EV_IRQHandler+0x694>
 800acee:	4a48      	ldr	r2, [pc, #288]	; (800ae10 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800acf0:	40c2      	lsrs	r2, r0
 800acf2:	07d1      	lsls	r1, r2, #31
 800acf4:	f100 814c 	bmi.w	800af90 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800acf8:	681a      	ldr	r2, [r3, #0]
 800acfa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acfe:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ad00:	2200      	movs	r2, #0
 800ad02:	9206      	str	r2, [sp, #24]
 800ad04:	695a      	ldr	r2, [r3, #20]
 800ad06:	9206      	str	r2, [sp, #24]
 800ad08:	699b      	ldr	r3, [r3, #24]
 800ad0a:	9306      	str	r3, [sp, #24]
 800ad0c:	9b06      	ldr	r3, [sp, #24]
 800ad0e:	e731      	b.n	800ab74 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800ad10:	685a      	ldr	r2, [r3, #4]
 800ad12:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ad16:	605a      	str	r2, [r3, #4]
 800ad18:	e4d4      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800ad1a:	3901      	subs	r1, #1
 800ad1c:	290f      	cmp	r1, #15
 800ad1e:	d809      	bhi.n	800ad34 <HAL_I2C_EV_IRQHandler+0x6d0>
 800ad20:	e8df f001 	tbb	[pc, r1]
 800ad24:	3608363b 	.word	0x3608363b
 800ad28:	08080808 	.word	0x08080808
 800ad2c:	08080808 	.word	0x08080808
 800ad30:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ad34:	681a      	ldr	r2, [r3, #0]
 800ad36:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ad3a:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad3c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ad3e:	691b      	ldr	r3, [r3, #16]
 800ad40:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800ad42:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800ad44:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad46:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800ad48:	3b01      	subs	r3, #1
 800ad4a:	b29b      	uxth	r3, r3
 800ad4c:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad4e:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800ad50:	1c51      	adds	r1, r2, #1
 800ad52:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ad54:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800ad56:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ad58:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800ad5a:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800ad5c:	3b01      	subs	r3, #1
 800ad5e:	b29b      	uxth	r3, r3
 800ad60:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ad62:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800ad64:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ad66:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800ad6a:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800ad6c:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800ad6e:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800ad70:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ad74:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800ad78:	2b40      	cmp	r3, #64	; 0x40
 800ad7a:	f000 80f5 	beq.w	800af68 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad7e:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ad80:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad82:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ad86:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800ad88:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800ad8a:	f7ff facb 	bl	800a324 <HAL_I2C_MasterRxCpltCallback>
 800ad8e:	e499      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad90:	681a      	ldr	r2, [r3, #0]
 800ad92:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ad96:	601a      	str	r2, [r3, #0]
 800ad98:	e7d0      	b.n	800ad3c <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad9a:	681a      	ldr	r2, [r3, #0]
 800ad9c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ada0:	601a      	str	r2, [r3, #0]
 800ada2:	e7cb      	b.n	800ad3c <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800ada4:	2810      	cmp	r0, #16
 800ada6:	d804      	bhi.n	800adb2 <HAL_I2C_EV_IRQHandler+0x74e>
 800ada8:	4a19      	ldr	r2, [pc, #100]	; (800ae10 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800adaa:	40c2      	lsrs	r2, r0
 800adac:	07d2      	lsls	r2, r2, #31
 800adae:	f100 80c2 	bmi.w	800af36 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adb2:	681a      	ldr	r2, [r3, #0]
 800adb4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800adb8:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800adba:	681a      	ldr	r2, [r3, #0]
 800adbc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800adc0:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800adc2:	685a      	ldr	r2, [r3, #4]
 800adc4:	0516      	lsls	r6, r2, #20
 800adc6:	d506      	bpl.n	800add6 <HAL_I2C_EV_IRQHandler+0x772>
 800adc8:	2820      	cmp	r0, #32
 800adca:	f240 80bc 	bls.w	800af46 <HAL_I2C_EV_IRQHandler+0x8e2>
 800adce:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800add2:	f000 80bd 	beq.w	800af50 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800add6:	2200      	movs	r2, #0
 800add8:	9208      	str	r2, [sp, #32]
 800adda:	695a      	ldr	r2, [r3, #20]
 800addc:	9208      	str	r2, [sp, #32]
 800adde:	699b      	ldr	r3, [r3, #24]
 800ade0:	9308      	str	r3, [sp, #32]
 800ade2:	9b08      	ldr	r3, [sp, #32]
 800ade4:	e6c6      	b.n	800ab74 <HAL_I2C_EV_IRQHandler+0x510>
 800ade6:	4a0b      	ldr	r2, [pc, #44]	; (800ae14 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800ade8:	3808      	subs	r0, #8
 800adea:	40c2      	lsrs	r2, r0
 800adec:	07d2      	lsls	r2, r2, #31
 800adee:	f57f af13 	bpl.w	800ac18 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800adf2:	685a      	ldr	r2, [r3, #4]
 800adf4:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800adf8:	605a      	str	r2, [r3, #4]
 800adfa:	e70d      	b.n	800ac18 <HAL_I2C_EV_IRQHandler+0x5b4>
 800adfc:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800ae00:	f47f af0a 	bne.w	800ac18 <HAL_I2C_EV_IRQHandler+0x5b4>
 800ae04:	e7f5      	b.n	800adf2 <HAL_I2C_EV_IRQHandler+0x78e>
 800ae06:	bf00      	nop
 800ae08:	0800a405 	.word	0x0800a405
 800ae0c:	ffff0000 	.word	0xffff0000
 800ae10:	00010014 	.word	0x00010014
 800ae14:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ae18:	6859      	ldr	r1, [r3, #4]
 800ae1a:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ae1e:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae20:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ae22:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800ae24:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae26:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800ae2a:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800ae2c:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800ae2e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ae32:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae36:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ae3a:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ae3c:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ae3e:	f47f af1c 	bne.w	800ac7a <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800ae42:	f7ff fa79 	bl	800a338 <HAL_I2C_MemTxCpltCallback>
 800ae46:	e43d      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800ae48:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ae4a:	2802      	cmp	r0, #2
 800ae4c:	f43f af60 	beq.w	800ad10 <HAL_I2C_EV_IRQHandler+0x6ac>
 800ae50:	2a01      	cmp	r2, #1
 800ae52:	f63f af5d 	bhi.w	800ad10 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ae56:	4a62      	ldr	r2, [pc, #392]	; (800afe0 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800ae58:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ae5a:	6812      	ldr	r2, [r2, #0]
 800ae5c:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800ae60:	fbb2 f2f0 	udiv	r2, r2, r0
 800ae64:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ae68:	920b      	str	r2, [sp, #44]	; 0x2c
 800ae6a:	e004      	b.n	800ae76 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ae6c:	681a      	ldr	r2, [r3, #0]
 800ae6e:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800ae72:	f000 8092 	beq.w	800af9a <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800ae76:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ae78:	3a01      	subs	r2, #1
 800ae7a:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800ae7c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ae7e:	2900      	cmp	r1, #0
 800ae80:	d1f4      	bne.n	800ae6c <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ae82:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae84:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ae86:	f042 0220 	orr.w	r2, r2, #32
 800ae8a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ae8c:	685a      	ldr	r2, [r3, #4]
 800ae8e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ae92:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae94:	691b      	ldr	r3, [r3, #16]
 800ae96:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ae98:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ae9a:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ae9c:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800ae9e:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800aea0:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800aea2:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800aea4:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800aea6:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800aea8:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800aeac:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800aeae:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800aeb2:	f7ff faa3 	bl	800a3fc <HAL_I2C_ErrorCallback>
 800aeb6:	e405      	b.n	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800aeb8:	2d08      	cmp	r5, #8
 800aeba:	d0ad      	beq.n	800ae18 <HAL_I2C_EV_IRQHandler+0x7b4>
 800aebc:	2d20      	cmp	r5, #32
 800aebe:	d0ab      	beq.n	800ae18 <HAL_I2C_EV_IRQHandler+0x7b4>
 800aec0:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800aec4:	d0a8      	beq.n	800ae18 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aec6:	685a      	ldr	r2, [r3, #4]
 800aec8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800aecc:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aece:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aed0:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800aed2:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800aed4:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aed6:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800aeda:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800aedc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800aee0:	f7ff fa1e 	bl	800a320 <HAL_I2C_MasterTxCpltCallback>
 800aee4:	f7ff bbee 	b.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800aee8:	2801      	cmp	r0, #1
 800aeea:	f43f af05 	beq.w	800acf8 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aeee:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aef0:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aef2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aef6:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aef8:	9107      	str	r1, [sp, #28]
 800aefa:	695a      	ldr	r2, [r3, #20]
 800aefc:	9207      	str	r2, [sp, #28]
 800aefe:	699a      	ldr	r2, [r3, #24]
 800af00:	9207      	str	r2, [sp, #28]
 800af02:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af04:	681a      	ldr	r2, [r3, #0]
 800af06:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800af0a:	601a      	str	r2, [r3, #0]
 800af0c:	e632      	b.n	800ab74 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af0e:	681a      	ldr	r2, [r3, #0]
 800af10:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af14:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800af16:	685a      	ldr	r2, [r3, #4]
 800af18:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800af1c:	d02d      	beq.n	800af7a <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af1e:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af20:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af22:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af26:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af28:	9104      	str	r1, [sp, #16]
 800af2a:	695a      	ldr	r2, [r3, #20]
 800af2c:	9204      	str	r2, [sp, #16]
 800af2e:	699b      	ldr	r3, [r3, #24]
 800af30:	9304      	str	r3, [sp, #16]
 800af32:	9b04      	ldr	r3, [sp, #16]
 800af34:	e61e      	b.n	800ab74 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af36:	681a      	ldr	r2, [r3, #0]
 800af38:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800af3c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800af3e:	685a      	ldr	r2, [r3, #4]
 800af40:	0515      	lsls	r5, r2, #20
 800af42:	f57f af48 	bpl.w	800add6 <HAL_I2C_EV_IRQHandler+0x772>
 800af46:	2807      	cmp	r0, #7
 800af48:	d807      	bhi.n	800af5a <HAL_I2C_EV_IRQHandler+0x8f6>
 800af4a:	2801      	cmp	r0, #1
 800af4c:	f47f af43 	bne.w	800add6 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800af50:	685a      	ldr	r2, [r3, #4]
 800af52:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800af56:	605a      	str	r2, [r3, #4]
 800af58:	e73d      	b.n	800add6 <HAL_I2C_EV_IRQHandler+0x772>
 800af5a:	4a22      	ldr	r2, [pc, #136]	; (800afe4 <HAL_I2C_EV_IRQHandler+0x980>)
 800af5c:	3808      	subs	r0, #8
 800af5e:	40c2      	lsrs	r2, r0
 800af60:	07d0      	lsls	r0, r2, #31
 800af62:	f57f af38 	bpl.w	800add6 <HAL_I2C_EV_IRQHandler+0x772>
 800af66:	e7f3      	b.n	800af50 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800af68:	2300      	movs	r3, #0
 800af6a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800af6e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800af70:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800af72:	f7ff fa41 	bl	800a3f8 <HAL_I2C_MemRxCpltCallback>
 800af76:	f7ff bba5 	b.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af7a:	9205      	str	r2, [sp, #20]
 800af7c:	695a      	ldr	r2, [r3, #20]
 800af7e:	9205      	str	r2, [sp, #20]
 800af80:	699a      	ldr	r2, [r3, #24]
 800af82:	9205      	str	r2, [sp, #20]
 800af84:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af86:	681a      	ldr	r2, [r3, #0]
 800af88:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800af8c:	601a      	str	r2, [r3, #0]
 800af8e:	e5f1      	b.n	800ab74 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af90:	681a      	ldr	r2, [r3, #0]
 800af92:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800af96:	601a      	str	r2, [r3, #0]
 800af98:	e6b2      	b.n	800ad00 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af9a:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af9c:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800af9e:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800afa2:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800afa4:	6859      	ldr	r1, [r3, #4]
 800afa6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800afaa:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800afac:	691b      	ldr	r3, [r3, #16]
 800afae:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800afb0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800afb2:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800afb4:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800afb6:	b29b      	uxth	r3, r3
 800afb8:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800afba:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800afbe:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800afc0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800afc4:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800afc6:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800afc8:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800afca:	f47f aed9 	bne.w	800ad80 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800afce:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800afd2:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800afd4:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800afd6:	f7ff fa0f 	bl	800a3f8 <HAL_I2C_MemRxCpltCallback>
 800afda:	f7ff bb73 	b.w	800a6c4 <HAL_I2C_EV_IRQHandler+0x60>
 800afde:	bf00      	nop
 800afe0:	20000078 	.word	0x20000078
 800afe4:	01000101 	.word	0x01000101

0800afe8 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800afe8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800afec:	2a20      	cmp	r2, #32
{
 800afee:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800aff0:	fa5f fc82 	uxtb.w	ip, r2
 800aff4:	d001      	beq.n	800affa <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800aff6:	2002      	movs	r0, #2
  }
}
 800aff8:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800affa:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800affc:	2024      	movs	r0, #36	; 0x24
 800affe:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b002:	6810      	ldr	r0, [r2, #0]
 800b004:	f020 0001 	bic.w	r0, r0, #1
 800b008:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b00a:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b00c:	f020 0010 	bic.w	r0, r0, #16
 800b010:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b012:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b014:	4301      	orrs	r1, r0
 800b016:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b018:	6811      	ldr	r1, [r2, #0]
 800b01a:	f041 0101 	orr.w	r1, r1, #1
 800b01e:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b020:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b022:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b026:	4770      	bx	lr

0800b028 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b028:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b02c:	2a20      	cmp	r2, #32
 800b02e:	d001      	beq.n	800b034 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b030:	2002      	movs	r0, #2
  }
}
 800b032:	4770      	bx	lr
{
 800b034:	b410      	push	{r4}
 800b036:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b03a:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b03c:	2224      	movs	r2, #36	; 0x24
 800b03e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b042:	6822      	ldr	r2, [r4, #0]
 800b044:	f022 0201 	bic.w	r2, r2, #1
 800b048:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b04a:	4603      	mov	r3, r0
 800b04c:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b04e:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b052:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b054:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b056:	b289      	uxth	r1, r1
 800b058:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b05a:	6822      	ldr	r2, [r4, #0]
 800b05c:	f042 0201 	orr.w	r2, r2, #1
 800b060:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b062:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b066:	2000      	movs	r0, #0
}
 800b068:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b06c:	4770      	bx	lr
 800b06e:	bf00      	nop

0800b070 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800b070:	2800      	cmp	r0, #0
 800b072:	d069      	beq.n	800b148 <HAL_LTDC_Init+0xd8>
{
 800b074:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b076:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b07a:	4604      	mov	r4, r0
 800b07c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b080:	2b00      	cmp	r3, #0
 800b082:	d05c      	beq.n	800b13e <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b084:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b086:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b088:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b08c:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b090:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b092:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b094:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b098:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800b09c:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b09e:	6999      	ldr	r1, [r3, #24]
 800b0a0:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b0a2:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b0a4:	430a      	orrs	r2, r1
 800b0a6:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b0a8:	689a      	ldr	r2, [r3, #8]
 800b0aa:	4928      	ldr	r1, [pc, #160]	; (800b14c <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b0ac:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b0ae:	400a      	ands	r2, r1
 800b0b0:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b0b2:	689a      	ldr	r2, [r3, #8]
 800b0b4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b0b8:	69a0      	ldr	r0, [r4, #24]
 800b0ba:	4302      	orrs	r2, r0
 800b0bc:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b0be:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b0c0:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b0c2:	400a      	ands	r2, r1
 800b0c4:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b0c6:	68da      	ldr	r2, [r3, #12]
 800b0c8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b0cc:	6a20      	ldr	r0, [r4, #32]
 800b0ce:	4302      	orrs	r2, r0
 800b0d0:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b0d2:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b0d4:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b0d6:	400a      	ands	r2, r1
 800b0d8:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b0da:	691a      	ldr	r2, [r3, #16]
 800b0dc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b0e0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b0e2:	4302      	orrs	r2, r0
 800b0e4:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b0e6:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b0e8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b0ea:	400a      	ands	r2, r1
 800b0ec:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b0ee:	695a      	ldr	r2, [r3, #20]
 800b0f0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b0f2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b0f6:	430a      	orrs	r2, r1
 800b0f8:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b0fa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b0fc:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b100:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b104:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800b108:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b10a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800b10c:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b110:	432a      	orrs	r2, r5
 800b112:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800b116:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b11a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b11c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b11e:	f042 0206 	orr.w	r2, r2, #6
 800b122:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800b124:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800b126:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b12a:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800b12c:	ea42 020c 	orr.w	r2, r2, ip
 800b130:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b132:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b136:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800b13a:	4608      	mov	r0, r1
}
 800b13c:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800b13e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b142:	f7f7 f861 	bl	8002208 <HAL_LTDC_MspInit>
 800b146:	e79d      	b.n	800b084 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800b148:	2001      	movs	r0, #1
}
 800b14a:	4770      	bx	lr
 800b14c:	f000f800 	.word	0xf000f800

0800b150 <HAL_LTDC_ErrorCallback>:
 800b150:	4770      	bx	lr
 800b152:	bf00      	nop

0800b154 <HAL_LTDC_ReloadEventCallback>:
 800b154:	4770      	bx	lr
 800b156:	bf00      	nop

0800b158 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b158:	6803      	ldr	r3, [r0, #0]
{
 800b15a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b15c:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b15e:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b160:	076a      	lsls	r2, r5, #29
{
 800b162:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b164:	d501      	bpl.n	800b16a <HAL_LTDC_IRQHandler+0x12>
 800b166:	0771      	lsls	r1, r6, #29
 800b168:	d41d      	bmi.n	800b1a6 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b16a:	07aa      	lsls	r2, r5, #30
 800b16c:	d501      	bpl.n	800b172 <HAL_LTDC_IRQHandler+0x1a>
 800b16e:	07b3      	lsls	r3, r6, #30
 800b170:	d42d      	bmi.n	800b1ce <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b172:	07e8      	lsls	r0, r5, #31
 800b174:	d501      	bpl.n	800b17a <HAL_LTDC_IRQHandler+0x22>
 800b176:	07f1      	lsls	r1, r6, #31
 800b178:	d440      	bmi.n	800b1fc <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b17a:	072a      	lsls	r2, r5, #28
 800b17c:	d501      	bpl.n	800b182 <HAL_LTDC_IRQHandler+0x2a>
 800b17e:	0733      	lsls	r3, r6, #28
 800b180:	d400      	bmi.n	800b184 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800b182:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b184:	6823      	ldr	r3, [r4, #0]
 800b186:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b188:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b18a:	f022 0208 	bic.w	r2, r2, #8
 800b18e:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800b190:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b192:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b194:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b196:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b19a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b19e:	4620      	mov	r0, r4
 800b1a0:	f7ff ffd8 	bl	800b154 <HAL_LTDC_ReloadEventCallback>
}
 800b1a4:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b1a6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b1a8:	f022 0204 	bic.w	r2, r2, #4
 800b1ac:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b1ae:	2204      	movs	r2, #4
 800b1b0:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b1b2:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b1b6:	f043 0301 	orr.w	r3, r3, #1
 800b1ba:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b1be:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b1c0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b1c4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b1c8:	f7ff ffc2 	bl	800b150 <HAL_LTDC_ErrorCallback>
 800b1cc:	e7cd      	b.n	800b16a <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b1ce:	6823      	ldr	r3, [r4, #0]
 800b1d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b1d2:	f022 0202 	bic.w	r2, r2, #2
 800b1d6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b1d8:	2202      	movs	r2, #2
 800b1da:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b1dc:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b1e0:	f043 0302 	orr.w	r3, r3, #2
 800b1e4:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b1e8:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800b1ea:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b1ec:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b1f0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b1f4:	4620      	mov	r0, r4
 800b1f6:	f7ff ffab 	bl	800b150 <HAL_LTDC_ErrorCallback>
 800b1fa:	e7ba      	b.n	800b172 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b1fc:	6823      	ldr	r3, [r4, #0]
 800b1fe:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b200:	f022 0201 	bic.w	r2, r2, #1
 800b204:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b206:	2201      	movs	r2, #1
 800b208:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b20a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b20c:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b210:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b214:	4620      	mov	r0, r4
 800b216:	f7f6 f947 	bl	80014a8 <HAL_LTDC_LineEventCallback>
 800b21a:	e7ae      	b.n	800b17a <HAL_LTDC_IRQHandler+0x22>

0800b21c <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800b21c:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b220:	2b01      	cmp	r3, #1
 800b222:	f000 80c2 	beq.w	800b3aa <HAL_LTDC_ConfigLayer+0x18e>
{
 800b226:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b22a:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b22e:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b232:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b236:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b238:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b23a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b23e:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800b242:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b246:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800b24a:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b24e:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800b252:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b254:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b258:	460c      	mov	r4, r1
 800b25a:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b25c:	9301      	str	r3, [sp, #4]
 800b25e:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b260:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b262:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800b266:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b26a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b26c:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b26e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b272:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b274:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800b278:	6823      	ldr	r3, [r4, #0]
 800b27a:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b27e:	9b01      	ldr	r3, [sp, #4]
 800b280:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b284:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b288:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b28a:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b28c:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b290:	1c51      	adds	r1, r2, #1
 800b292:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800b296:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b298:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b29a:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b29e:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b2a2:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b2a6:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800b2aa:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800b2ae:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b2b2:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b2b6:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b2b8:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b2ba:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800b2be:	3301      	adds	r3, #1
 800b2c0:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800b2c4:	4403      	add	r3, r0
 800b2c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800b2ca:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b2ce:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b2d2:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b2d4:	f023 0307 	bic.w	r3, r3, #7
 800b2d8:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b2dc:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b2e0:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b2e4:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b2e8:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b2ec:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b2f0:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b2f4:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800b2f8:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800b2fc:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800b300:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800b304:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b308:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800b30c:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800b310:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b314:	696b      	ldr	r3, [r5, #20]
 800b316:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b31a:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800b31e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800b322:	f023 0307 	bic.w	r3, r3, #7
 800b326:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b32a:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800b32e:	4303      	orrs	r3, r0
 800b330:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b334:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b338:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b33a:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b33e:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b342:	bb69      	cbnz	r1, 800b3a0 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b344:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b346:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b348:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b34a:	fb03 f707 	mul.w	r7, r3, r7
 800b34e:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b350:	fb02 f303 	mul.w	r3, r2, r3
 800b354:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b358:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b35c:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b35e:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b362:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b366:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b36a:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b36e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b372:	f023 0307 	bic.w	r3, r3, #7
 800b376:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b37a:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b37e:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b382:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b384:	4313      	orrs	r3, r2
 800b386:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b38a:	2300      	movs	r3, #0
  return HAL_OK;
 800b38c:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b38e:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b392:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b396:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b39a:	b003      	add	sp, #12
 800b39c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b3a0:	3901      	subs	r1, #1
 800b3a2:	2906      	cmp	r1, #6
 800b3a4:	d903      	bls.n	800b3ae <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b3a6:	2301      	movs	r3, #1
 800b3a8:	e7cd      	b.n	800b346 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b3aa:	2002      	movs	r0, #2
}
 800b3ac:	4770      	bx	lr
 800b3ae:	4b02      	ldr	r3, [pc, #8]	; (800b3b8 <HAL_LTDC_ConfigLayer+0x19c>)
 800b3b0:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b3b4:	e7c7      	b.n	800b346 <HAL_LTDC_ConfigLayer+0x12a>
 800b3b6:	bf00      	nop
 800b3b8:	0802dbc8 	.word	0x0802dbc8

0800b3bc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b3bc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b3c0:	2b01      	cmp	r3, #1
 800b3c2:	d019      	beq.n	800b3f8 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b3c4:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b3c6:	2302      	movs	r3, #2
{
 800b3c8:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b3ca:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b3ce:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b3d0:	4c0a      	ldr	r4, [pc, #40]	; (800b3fc <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b3d2:	f023 0301 	bic.w	r3, r3, #1
 800b3d6:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b3d8:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b3da:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b3dc:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b3de:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b3e2:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b3e6:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b3e8:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b3ec:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b3f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b3f4:	4618      	mov	r0, r3
}
 800b3f6:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b3f8:	2002      	movs	r0, #2
}
 800b3fa:	4770      	bx	lr
 800b3fc:	40016800 	.word	0x40016800

0800b400 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b400:	2800      	cmp	r0, #0
 800b402:	f000 81a2 	beq.w	800b74a <HAL_RCC_OscConfig+0x34a>
{
 800b406:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b40a:	6803      	ldr	r3, [r0, #0]
 800b40c:	07dd      	lsls	r5, r3, #31
{
 800b40e:	b082      	sub	sp, #8
 800b410:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b412:	d52f      	bpl.n	800b474 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b414:	499e      	ldr	r1, [pc, #632]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b416:	688a      	ldr	r2, [r1, #8]
 800b418:	f002 020c 	and.w	r2, r2, #12
 800b41c:	2a04      	cmp	r2, #4
 800b41e:	f000 80ed 	beq.w	800b5fc <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b422:	688a      	ldr	r2, [r1, #8]
 800b424:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b428:	2a08      	cmp	r2, #8
 800b42a:	f000 80e3 	beq.w	800b5f4 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b42e:	6863      	ldr	r3, [r4, #4]
 800b430:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b434:	f000 80ec 	beq.w	800b610 <HAL_RCC_OscConfig+0x210>
 800b438:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b43c:	f000 8175 	beq.w	800b72a <HAL_RCC_OscConfig+0x32a>
 800b440:	4d93      	ldr	r5, [pc, #588]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b442:	682a      	ldr	r2, [r5, #0]
 800b444:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b448:	602a      	str	r2, [r5, #0]
 800b44a:	682a      	ldr	r2, [r5, #0]
 800b44c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b450:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b452:	2b00      	cmp	r3, #0
 800b454:	f040 80e1 	bne.w	800b61a <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b458:	f7fd ff2c 	bl	80092b4 <HAL_GetTick>
 800b45c:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b45e:	e005      	b.n	800b46c <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b460:	f7fd ff28 	bl	80092b4 <HAL_GetTick>
 800b464:	1b80      	subs	r0, r0, r6
 800b466:	2864      	cmp	r0, #100	; 0x64
 800b468:	f200 8101 	bhi.w	800b66e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b46c:	682b      	ldr	r3, [r5, #0]
 800b46e:	039b      	lsls	r3, r3, #14
 800b470:	d4f6      	bmi.n	800b460 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b472:	6823      	ldr	r3, [r4, #0]
 800b474:	079f      	lsls	r7, r3, #30
 800b476:	d528      	bpl.n	800b4ca <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b478:	4a85      	ldr	r2, [pc, #532]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b47a:	6891      	ldr	r1, [r2, #8]
 800b47c:	f011 0f0c 	tst.w	r1, #12
 800b480:	f000 8090 	beq.w	800b5a4 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b484:	6891      	ldr	r1, [r2, #8]
 800b486:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b48a:	2908      	cmp	r1, #8
 800b48c:	f000 8086 	beq.w	800b59c <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b490:	68e3      	ldr	r3, [r4, #12]
 800b492:	2b00      	cmp	r3, #0
 800b494:	f000 810e 	beq.w	800b6b4 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b498:	4b7e      	ldr	r3, [pc, #504]	; (800b694 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b49a:	4e7d      	ldr	r6, [pc, #500]	; (800b690 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b49c:	2201      	movs	r2, #1
 800b49e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b4a0:	f7fd ff08 	bl	80092b4 <HAL_GetTick>
 800b4a4:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b4a6:	e005      	b.n	800b4b4 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b4a8:	f7fd ff04 	bl	80092b4 <HAL_GetTick>
 800b4ac:	1b40      	subs	r0, r0, r5
 800b4ae:	2802      	cmp	r0, #2
 800b4b0:	f200 80dd 	bhi.w	800b66e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b4b4:	6833      	ldr	r3, [r6, #0]
 800b4b6:	0798      	lsls	r0, r3, #30
 800b4b8:	d5f6      	bpl.n	800b4a8 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b4ba:	6833      	ldr	r3, [r6, #0]
 800b4bc:	6922      	ldr	r2, [r4, #16]
 800b4be:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b4c2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b4c6:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b4c8:	6823      	ldr	r3, [r4, #0]
 800b4ca:	071a      	lsls	r2, r3, #28
 800b4cc:	d451      	bmi.n	800b572 <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b4ce:	0758      	lsls	r0, r3, #29
 800b4d0:	d52f      	bpl.n	800b532 <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b4d2:	4a6f      	ldr	r2, [pc, #444]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b4d4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b4d6:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b4da:	d07f      	beq.n	800b5dc <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b4dc:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b4de:	4e6e      	ldr	r6, [pc, #440]	; (800b698 <HAL_RCC_OscConfig+0x298>)
 800b4e0:	6833      	ldr	r3, [r6, #0]
 800b4e2:	05d9      	lsls	r1, r3, #23
 800b4e4:	f140 80b3 	bpl.w	800b64e <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b4e8:	68a3      	ldr	r3, [r4, #8]
 800b4ea:	2b01      	cmp	r3, #1
 800b4ec:	f000 80c3 	beq.w	800b676 <HAL_RCC_OscConfig+0x276>
 800b4f0:	2b05      	cmp	r3, #5
 800b4f2:	f000 812c 	beq.w	800b74e <HAL_RCC_OscConfig+0x34e>
 800b4f6:	4e66      	ldr	r6, [pc, #408]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b4f8:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b4fa:	f022 0201 	bic.w	r2, r2, #1
 800b4fe:	6732      	str	r2, [r6, #112]	; 0x70
 800b500:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b502:	f022 0204 	bic.w	r2, r2, #4
 800b506:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b508:	2b00      	cmp	r3, #0
 800b50a:	f040 80b9 	bne.w	800b680 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b50e:	f7fd fed1 	bl	80092b4 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b512:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b516:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b518:	e005      	b.n	800b526 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b51a:	f7fd fecb 	bl	80092b4 <HAL_GetTick>
 800b51e:	1bc0      	subs	r0, r0, r7
 800b520:	4540      	cmp	r0, r8
 800b522:	f200 80a4 	bhi.w	800b66e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b526:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b528:	0798      	lsls	r0, r3, #30
 800b52a:	d4f6      	bmi.n	800b51a <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b52c:	2d00      	cmp	r5, #0
 800b52e:	f040 8106 	bne.w	800b73e <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b532:	69a0      	ldr	r0, [r4, #24]
 800b534:	b1c8      	cbz	r0, 800b56a <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b536:	4d56      	ldr	r5, [pc, #344]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b538:	68ab      	ldr	r3, [r5, #8]
 800b53a:	f003 030c 	and.w	r3, r3, #12
 800b53e:	2b08      	cmp	r3, #8
 800b540:	f000 80c9 	beq.w	800b6d6 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b544:	4b53      	ldr	r3, [pc, #332]	; (800b694 <HAL_RCC_OscConfig+0x294>)
 800b546:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b548:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b54a:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b54c:	f000 8109 	beq.w	800b762 <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b550:	f7fd feb0 	bl	80092b4 <HAL_GetTick>
 800b554:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b556:	e005      	b.n	800b564 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b558:	f7fd feac 	bl	80092b4 <HAL_GetTick>
 800b55c:	1b00      	subs	r0, r0, r4
 800b55e:	2802      	cmp	r0, #2
 800b560:	f200 8085 	bhi.w	800b66e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b564:	682b      	ldr	r3, [r5, #0]
 800b566:	019b      	lsls	r3, r3, #6
 800b568:	d4f6      	bmi.n	800b558 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b56a:	2000      	movs	r0, #0
}
 800b56c:	b002      	add	sp, #8
 800b56e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b572:	6963      	ldr	r3, [r4, #20]
 800b574:	b30b      	cbz	r3, 800b5ba <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b576:	4b47      	ldr	r3, [pc, #284]	; (800b694 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b578:	4e45      	ldr	r6, [pc, #276]	; (800b690 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b57a:	2201      	movs	r2, #1
 800b57c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b580:	f7fd fe98 	bl	80092b4 <HAL_GetTick>
 800b584:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b586:	e004      	b.n	800b592 <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b588:	f7fd fe94 	bl	80092b4 <HAL_GetTick>
 800b58c:	1b40      	subs	r0, r0, r5
 800b58e:	2802      	cmp	r0, #2
 800b590:	d86d      	bhi.n	800b66e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b592:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b594:	079b      	lsls	r3, r3, #30
 800b596:	d5f7      	bpl.n	800b588 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b598:	6823      	ldr	r3, [r4, #0]
 800b59a:	e798      	b.n	800b4ce <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b59c:	6852      	ldr	r2, [r2, #4]
 800b59e:	0256      	lsls	r6, r2, #9
 800b5a0:	f53f af76 	bmi.w	800b490 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b5a4:	4a3a      	ldr	r2, [pc, #232]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b5a6:	6812      	ldr	r2, [r2, #0]
 800b5a8:	0795      	lsls	r5, r2, #30
 800b5aa:	d544      	bpl.n	800b636 <HAL_RCC_OscConfig+0x236>
 800b5ac:	68e2      	ldr	r2, [r4, #12]
 800b5ae:	2a01      	cmp	r2, #1
 800b5b0:	d041      	beq.n	800b636 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b5b2:	2001      	movs	r0, #1
}
 800b5b4:	b002      	add	sp, #8
 800b5b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b5ba:	4a36      	ldr	r2, [pc, #216]	; (800b694 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b5bc:	4e34      	ldr	r6, [pc, #208]	; (800b690 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b5be:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b5c2:	f7fd fe77 	bl	80092b4 <HAL_GetTick>
 800b5c6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b5c8:	e004      	b.n	800b5d4 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b5ca:	f7fd fe73 	bl	80092b4 <HAL_GetTick>
 800b5ce:	1b40      	subs	r0, r0, r5
 800b5d0:	2802      	cmp	r0, #2
 800b5d2:	d84c      	bhi.n	800b66e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b5d4:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b5d6:	079f      	lsls	r7, r3, #30
 800b5d8:	d4f7      	bmi.n	800b5ca <HAL_RCC_OscConfig+0x1ca>
 800b5da:	e7dd      	b.n	800b598 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b5dc:	9301      	str	r3, [sp, #4]
 800b5de:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b5e0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b5e4:	6413      	str	r3, [r2, #64]	; 0x40
 800b5e6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b5e8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b5ec:	9301      	str	r3, [sp, #4]
 800b5ee:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b5f0:	2501      	movs	r5, #1
 800b5f2:	e774      	b.n	800b4de <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b5f4:	684a      	ldr	r2, [r1, #4]
 800b5f6:	0250      	lsls	r0, r2, #9
 800b5f8:	f57f af19 	bpl.w	800b42e <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b5fc:	4a24      	ldr	r2, [pc, #144]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b5fe:	6812      	ldr	r2, [r2, #0]
 800b600:	0391      	lsls	r1, r2, #14
 800b602:	f57f af37 	bpl.w	800b474 <HAL_RCC_OscConfig+0x74>
 800b606:	6862      	ldr	r2, [r4, #4]
 800b608:	2a00      	cmp	r2, #0
 800b60a:	f47f af33 	bne.w	800b474 <HAL_RCC_OscConfig+0x74>
 800b60e:	e7d0      	b.n	800b5b2 <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b610:	4a1f      	ldr	r2, [pc, #124]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b612:	6813      	ldr	r3, [r2, #0]
 800b614:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b618:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b61a:	f7fd fe4b 	bl	80092b4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b61e:	4e1c      	ldr	r6, [pc, #112]	; (800b690 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b620:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b622:	e004      	b.n	800b62e <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b624:	f7fd fe46 	bl	80092b4 <HAL_GetTick>
 800b628:	1b40      	subs	r0, r0, r5
 800b62a:	2864      	cmp	r0, #100	; 0x64
 800b62c:	d81f      	bhi.n	800b66e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b62e:	6833      	ldr	r3, [r6, #0]
 800b630:	039a      	lsls	r2, r3, #14
 800b632:	d5f7      	bpl.n	800b624 <HAL_RCC_OscConfig+0x224>
 800b634:	e71d      	b.n	800b472 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b636:	4916      	ldr	r1, [pc, #88]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b638:	6920      	ldr	r0, [r4, #16]
 800b63a:	680a      	ldr	r2, [r1, #0]
 800b63c:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b640:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b644:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b646:	071a      	lsls	r2, r3, #28
 800b648:	f57f af41 	bpl.w	800b4ce <HAL_RCC_OscConfig+0xce>
 800b64c:	e791      	b.n	800b572 <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b64e:	6833      	ldr	r3, [r6, #0]
 800b650:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b654:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b656:	f7fd fe2d 	bl	80092b4 <HAL_GetTick>
 800b65a:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b65c:	6833      	ldr	r3, [r6, #0]
 800b65e:	05da      	lsls	r2, r3, #23
 800b660:	f53f af42 	bmi.w	800b4e8 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b664:	f7fd fe26 	bl	80092b4 <HAL_GetTick>
 800b668:	1bc0      	subs	r0, r0, r7
 800b66a:	2802      	cmp	r0, #2
 800b66c:	d9f6      	bls.n	800b65c <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b66e:	2003      	movs	r0, #3
}
 800b670:	b002      	add	sp, #8
 800b672:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b676:	4a06      	ldr	r2, [pc, #24]	; (800b690 <HAL_RCC_OscConfig+0x290>)
 800b678:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b67a:	f043 0301 	orr.w	r3, r3, #1
 800b67e:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b680:	f7fd fe18 	bl	80092b4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b684:	4f02      	ldr	r7, [pc, #8]	; (800b690 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b686:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b688:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b68c:	e00b      	b.n	800b6a6 <HAL_RCC_OscConfig+0x2a6>
 800b68e:	bf00      	nop
 800b690:	40023800 	.word	0x40023800
 800b694:	42470000 	.word	0x42470000
 800b698:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b69c:	f7fd fe0a 	bl	80092b4 <HAL_GetTick>
 800b6a0:	1b80      	subs	r0, r0, r6
 800b6a2:	4540      	cmp	r0, r8
 800b6a4:	d8e3      	bhi.n	800b66e <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b6a6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b6a8:	079b      	lsls	r3, r3, #30
 800b6aa:	d5f7      	bpl.n	800b69c <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b6ac:	2d00      	cmp	r5, #0
 800b6ae:	f43f af40 	beq.w	800b532 <HAL_RCC_OscConfig+0x132>
 800b6b2:	e044      	b.n	800b73e <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b6b4:	4a42      	ldr	r2, [pc, #264]	; (800b7c0 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b6b6:	4e43      	ldr	r6, [pc, #268]	; (800b7c4 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b6b8:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b6ba:	f7fd fdfb 	bl	80092b4 <HAL_GetTick>
 800b6be:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b6c0:	e004      	b.n	800b6cc <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b6c2:	f7fd fdf7 	bl	80092b4 <HAL_GetTick>
 800b6c6:	1b40      	subs	r0, r0, r5
 800b6c8:	2802      	cmp	r0, #2
 800b6ca:	d8d0      	bhi.n	800b66e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b6cc:	6833      	ldr	r3, [r6, #0]
 800b6ce:	0799      	lsls	r1, r3, #30
 800b6d0:	d4f7      	bmi.n	800b6c2 <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b6d2:	6823      	ldr	r3, [r4, #0]
 800b6d4:	e6f9      	b.n	800b4ca <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b6d6:	2801      	cmp	r0, #1
 800b6d8:	f43f af48 	beq.w	800b56c <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b6dc:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b6de:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b6e0:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b6e4:	4291      	cmp	r1, r2
 800b6e6:	f47f af64 	bne.w	800b5b2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b6ea:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b6ec:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b6f0:	4291      	cmp	r1, r2
 800b6f2:	f47f af5e 	bne.w	800b5b2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b6f6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b6f8:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b6fc:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b6fe:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b702:	f47f af56 	bne.w	800b5b2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b706:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b708:	0852      	lsrs	r2, r2, #1
 800b70a:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b70e:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b710:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b714:	f47f af4d 	bne.w	800b5b2 <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b718:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b71a:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b71e:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b722:	bf14      	ite	ne
 800b724:	2001      	movne	r0, #1
 800b726:	2000      	moveq	r0, #0
 800b728:	e720      	b.n	800b56c <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b72a:	4b26      	ldr	r3, [pc, #152]	; (800b7c4 <HAL_RCC_OscConfig+0x3c4>)
 800b72c:	681a      	ldr	r2, [r3, #0]
 800b72e:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b732:	601a      	str	r2, [r3, #0]
 800b734:	681a      	ldr	r2, [r3, #0]
 800b736:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b73a:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b73c:	e76d      	b.n	800b61a <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b73e:	4a21      	ldr	r2, [pc, #132]	; (800b7c4 <HAL_RCC_OscConfig+0x3c4>)
 800b740:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b742:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b746:	6413      	str	r3, [r2, #64]	; 0x40
 800b748:	e6f3      	b.n	800b532 <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b74a:	2001      	movs	r0, #1
}
 800b74c:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b74e:	4b1d      	ldr	r3, [pc, #116]	; (800b7c4 <HAL_RCC_OscConfig+0x3c4>)
 800b750:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b752:	f042 0204 	orr.w	r2, r2, #4
 800b756:	671a      	str	r2, [r3, #112]	; 0x70
 800b758:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b75a:	f042 0201 	orr.w	r2, r2, #1
 800b75e:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b760:	e78e      	b.n	800b680 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b762:	f7fd fda7 	bl	80092b4 <HAL_GetTick>
 800b766:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b768:	e005      	b.n	800b776 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b76a:	f7fd fda3 	bl	80092b4 <HAL_GetTick>
 800b76e:	1b80      	subs	r0, r0, r6
 800b770:	2802      	cmp	r0, #2
 800b772:	f63f af7c 	bhi.w	800b66e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b776:	682b      	ldr	r3, [r5, #0]
 800b778:	0199      	lsls	r1, r3, #6
 800b77a:	d4f6      	bmi.n	800b76a <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b77c:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b780:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b782:	430b      	orrs	r3, r1
 800b784:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b788:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b78c:	0852      	lsrs	r2, r2, #1
 800b78e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b792:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b794:	490a      	ldr	r1, [pc, #40]	; (800b7c0 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b796:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b79a:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b79c:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b79e:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b7a0:	f7fd fd88 	bl	80092b4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b7a4:	4d07      	ldr	r5, [pc, #28]	; (800b7c4 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b7a6:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b7a8:	e005      	b.n	800b7b6 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b7aa:	f7fd fd83 	bl	80092b4 <HAL_GetTick>
 800b7ae:	1b00      	subs	r0, r0, r4
 800b7b0:	2802      	cmp	r0, #2
 800b7b2:	f63f af5c 	bhi.w	800b66e <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b7b6:	682b      	ldr	r3, [r5, #0]
 800b7b8:	019a      	lsls	r2, r3, #6
 800b7ba:	d5f6      	bpl.n	800b7aa <HAL_RCC_OscConfig+0x3aa>
 800b7bc:	e6d5      	b.n	800b56a <HAL_RCC_OscConfig+0x16a>
 800b7be:	bf00      	nop
 800b7c0:	42470000 	.word	0x42470000
 800b7c4:	40023800 	.word	0x40023800

0800b7c8 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b7c8:	4916      	ldr	r1, [pc, #88]	; (800b824 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b7ca:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b7cc:	688b      	ldr	r3, [r1, #8]
 800b7ce:	f003 030c 	and.w	r3, r3, #12
 800b7d2:	2b04      	cmp	r3, #4
 800b7d4:	d01b      	beq.n	800b80e <HAL_RCC_GetSysClockFreq+0x46>
 800b7d6:	2b08      	cmp	r3, #8
 800b7d8:	d117      	bne.n	800b80a <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b7da:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b7dc:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b7de:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b7e0:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b7e4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b7e8:	d113      	bne.n	800b812 <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b7ea:	480f      	ldr	r0, [pc, #60]	; (800b828 <HAL_RCC_GetSysClockFreq+0x60>)
 800b7ec:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b7f0:	fba1 0100 	umull	r0, r1, r1, r0
 800b7f4:	f7f4 ff68 	bl	80006c8 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b7f8:	4b0a      	ldr	r3, [pc, #40]	; (800b824 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b7fa:	685b      	ldr	r3, [r3, #4]
 800b7fc:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b800:	3301      	adds	r3, #1
 800b802:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b804:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b808:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b80a:	4807      	ldr	r0, [pc, #28]	; (800b828 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b80c:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b80e:	4807      	ldr	r0, [pc, #28]	; (800b82c <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b810:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b812:	4806      	ldr	r0, [pc, #24]	; (800b82c <HAL_RCC_GetSysClockFreq+0x64>)
 800b814:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b818:	2300      	movs	r3, #0
 800b81a:	fba1 0100 	umull	r0, r1, r1, r0
 800b81e:	f7f4 ff53 	bl	80006c8 <__aeabi_uldivmod>
 800b822:	e7e9      	b.n	800b7f8 <HAL_RCC_GetSysClockFreq+0x30>
 800b824:	40023800 	.word	0x40023800
 800b828:	00f42400 	.word	0x00f42400
 800b82c:	007a1200 	.word	0x007a1200

0800b830 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b830:	2800      	cmp	r0, #0
 800b832:	f000 8087 	beq.w	800b944 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b836:	4a48      	ldr	r2, [pc, #288]	; (800b958 <HAL_RCC_ClockConfig+0x128>)
 800b838:	6813      	ldr	r3, [r2, #0]
 800b83a:	f003 030f 	and.w	r3, r3, #15
 800b83e:	428b      	cmp	r3, r1
{
 800b840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b844:	460d      	mov	r5, r1
 800b846:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b848:	d209      	bcs.n	800b85e <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b84a:	b2cb      	uxtb	r3, r1
 800b84c:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b84e:	6813      	ldr	r3, [r2, #0]
 800b850:	f003 030f 	and.w	r3, r3, #15
 800b854:	428b      	cmp	r3, r1
 800b856:	d002      	beq.n	800b85e <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b858:	2001      	movs	r0, #1
}
 800b85a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b85e:	6823      	ldr	r3, [r4, #0]
 800b860:	0798      	lsls	r0, r3, #30
 800b862:	d514      	bpl.n	800b88e <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b864:	0759      	lsls	r1, r3, #29
 800b866:	d504      	bpl.n	800b872 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b868:	493c      	ldr	r1, [pc, #240]	; (800b95c <HAL_RCC_ClockConfig+0x12c>)
 800b86a:	688a      	ldr	r2, [r1, #8]
 800b86c:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b870:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b872:	071a      	lsls	r2, r3, #28
 800b874:	d504      	bpl.n	800b880 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b876:	4939      	ldr	r1, [pc, #228]	; (800b95c <HAL_RCC_ClockConfig+0x12c>)
 800b878:	688a      	ldr	r2, [r1, #8]
 800b87a:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b87e:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b880:	4936      	ldr	r1, [pc, #216]	; (800b95c <HAL_RCC_ClockConfig+0x12c>)
 800b882:	68a0      	ldr	r0, [r4, #8]
 800b884:	688a      	ldr	r2, [r1, #8]
 800b886:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b88a:	4302      	orrs	r2, r0
 800b88c:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b88e:	07df      	lsls	r7, r3, #31
 800b890:	d521      	bpl.n	800b8d6 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b892:	6862      	ldr	r2, [r4, #4]
 800b894:	2a01      	cmp	r2, #1
 800b896:	d057      	beq.n	800b948 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b898:	1e93      	subs	r3, r2, #2
 800b89a:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b89c:	4b2f      	ldr	r3, [pc, #188]	; (800b95c <HAL_RCC_ClockConfig+0x12c>)
 800b89e:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b8a0:	d94d      	bls.n	800b93e <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b8a2:	0799      	lsls	r1, r3, #30
 800b8a4:	d5d8      	bpl.n	800b858 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b8a6:	4e2d      	ldr	r6, [pc, #180]	; (800b95c <HAL_RCC_ClockConfig+0x12c>)
 800b8a8:	68b3      	ldr	r3, [r6, #8]
 800b8aa:	f023 0303 	bic.w	r3, r3, #3
 800b8ae:	4313      	orrs	r3, r2
 800b8b0:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b8b2:	f7fd fcff 	bl	80092b4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b8b6:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b8ba:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b8bc:	e004      	b.n	800b8c8 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b8be:	f7fd fcf9 	bl	80092b4 <HAL_GetTick>
 800b8c2:	1bc0      	subs	r0, r0, r7
 800b8c4:	4540      	cmp	r0, r8
 800b8c6:	d844      	bhi.n	800b952 <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b8c8:	68b3      	ldr	r3, [r6, #8]
 800b8ca:	6862      	ldr	r2, [r4, #4]
 800b8cc:	f003 030c 	and.w	r3, r3, #12
 800b8d0:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b8d4:	d1f3      	bne.n	800b8be <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b8d6:	4a20      	ldr	r2, [pc, #128]	; (800b958 <HAL_RCC_ClockConfig+0x128>)
 800b8d8:	6813      	ldr	r3, [r2, #0]
 800b8da:	f003 030f 	and.w	r3, r3, #15
 800b8de:	42ab      	cmp	r3, r5
 800b8e0:	d906      	bls.n	800b8f0 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b8e2:	b2eb      	uxtb	r3, r5
 800b8e4:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b8e6:	6813      	ldr	r3, [r2, #0]
 800b8e8:	f003 030f 	and.w	r3, r3, #15
 800b8ec:	42ab      	cmp	r3, r5
 800b8ee:	d1b3      	bne.n	800b858 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b8f0:	6823      	ldr	r3, [r4, #0]
 800b8f2:	075a      	lsls	r2, r3, #29
 800b8f4:	d506      	bpl.n	800b904 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b8f6:	4919      	ldr	r1, [pc, #100]	; (800b95c <HAL_RCC_ClockConfig+0x12c>)
 800b8f8:	68e0      	ldr	r0, [r4, #12]
 800b8fa:	688a      	ldr	r2, [r1, #8]
 800b8fc:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b900:	4302      	orrs	r2, r0
 800b902:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b904:	071b      	lsls	r3, r3, #28
 800b906:	d507      	bpl.n	800b918 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b908:	4a14      	ldr	r2, [pc, #80]	; (800b95c <HAL_RCC_ClockConfig+0x12c>)
 800b90a:	6921      	ldr	r1, [r4, #16]
 800b90c:	6893      	ldr	r3, [r2, #8]
 800b90e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b912:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b916:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b918:	f7ff ff56 	bl	800b7c8 <HAL_RCC_GetSysClockFreq>
 800b91c:	4a0f      	ldr	r2, [pc, #60]	; (800b95c <HAL_RCC_ClockConfig+0x12c>)
 800b91e:	4c10      	ldr	r4, [pc, #64]	; (800b960 <HAL_RCC_ClockConfig+0x130>)
 800b920:	6892      	ldr	r2, [r2, #8]
 800b922:	4910      	ldr	r1, [pc, #64]	; (800b964 <HAL_RCC_ClockConfig+0x134>)
 800b924:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b928:	4603      	mov	r3, r0
 800b92a:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b92c:	480e      	ldr	r0, [pc, #56]	; (800b968 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b92e:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b930:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b932:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b934:	f7f6 fe28 	bl	8002588 <HAL_InitTick>
  return HAL_OK;
 800b938:	2000      	movs	r0, #0
}
 800b93a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b93e:	0198      	lsls	r0, r3, #6
 800b940:	d4b1      	bmi.n	800b8a6 <HAL_RCC_ClockConfig+0x76>
 800b942:	e789      	b.n	800b858 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b944:	2001      	movs	r0, #1
}
 800b946:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b948:	4b04      	ldr	r3, [pc, #16]	; (800b95c <HAL_RCC_ClockConfig+0x12c>)
 800b94a:	681b      	ldr	r3, [r3, #0]
 800b94c:	039e      	lsls	r6, r3, #14
 800b94e:	d4aa      	bmi.n	800b8a6 <HAL_RCC_ClockConfig+0x76>
 800b950:	e782      	b.n	800b858 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b952:	2003      	movs	r0, #3
 800b954:	e781      	b.n	800b85a <HAL_RCC_ClockConfig+0x2a>
 800b956:	bf00      	nop
 800b958:	40023c00 	.word	0x40023c00
 800b95c:	40023800 	.word	0x40023800
 800b960:	0802dbb0 	.word	0x0802dbb0
 800b964:	20000078 	.word	0x20000078
 800b968:	20000080 	.word	0x20000080

0800b96c <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b96c:	4b04      	ldr	r3, [pc, #16]	; (800b980 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b96e:	4905      	ldr	r1, [pc, #20]	; (800b984 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b970:	689b      	ldr	r3, [r3, #8]
 800b972:	4a05      	ldr	r2, [pc, #20]	; (800b988 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b974:	6808      	ldr	r0, [r1, #0]
 800b976:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b97a:	5cd3      	ldrb	r3, [r2, r3]
}
 800b97c:	40d8      	lsrs	r0, r3
 800b97e:	4770      	bx	lr
 800b980:	40023800 	.word	0x40023800
 800b984:	20000078 	.word	0x20000078
 800b988:	0802dbc0 	.word	0x0802dbc0

0800b98c <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b98c:	4b0e      	ldr	r3, [pc, #56]	; (800b9c8 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b98e:	220f      	movs	r2, #15
 800b990:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b992:	689a      	ldr	r2, [r3, #8]
 800b994:	f002 0203 	and.w	r2, r2, #3
 800b998:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b99a:	689a      	ldr	r2, [r3, #8]
 800b99c:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b9a0:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b9a2:	689a      	ldr	r2, [r3, #8]
 800b9a4:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b9a8:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b9aa:	689b      	ldr	r3, [r3, #8]
 800b9ac:	08db      	lsrs	r3, r3, #3
{
 800b9ae:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b9b0:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b9b4:	4c05      	ldr	r4, [pc, #20]	; (800b9cc <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b9b6:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b9b8:	6823      	ldr	r3, [r4, #0]
}
 800b9ba:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b9be:	f003 030f 	and.w	r3, r3, #15
 800b9c2:	600b      	str	r3, [r1, #0]
}
 800b9c4:	4770      	bx	lr
 800b9c6:	bf00      	nop
 800b9c8:	40023800 	.word	0x40023800
 800b9cc:	40023c00 	.word	0x40023c00

0800b9d0 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b9d0:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b9d2:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b9d4:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b9d8:	b083      	sub	sp, #12
 800b9da:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b9dc:	d111      	bne.n	800ba02 <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b9de:	f013 0f0c 	tst.w	r3, #12
 800b9e2:	d16f      	bne.n	800bac4 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b9e4:	0698      	lsls	r0, r3, #26
 800b9e6:	f100 80c2 	bmi.w	800bb6e <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b9ea:	f013 0310 	ands.w	r3, r3, #16
 800b9ee:	f000 80bb 	beq.w	800bb68 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b9f2:	4b89      	ldr	r3, [pc, #548]	; (800bc18 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b9f4:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b9f8:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b9fc:	2000      	movs	r0, #0
}
 800b9fe:	b003      	add	sp, #12
 800ba00:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800ba02:	4b86      	ldr	r3, [pc, #536]	; (800bc1c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800ba04:	4e86      	ldr	r6, [pc, #536]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800ba06:	2200      	movs	r2, #0
 800ba08:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800ba0a:	f7fd fc53 	bl	80092b4 <HAL_GetTick>
 800ba0e:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800ba10:	e004      	b.n	800ba1c <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800ba12:	f7fd fc4f 	bl	80092b4 <HAL_GetTick>
 800ba16:	1b43      	subs	r3, r0, r5
 800ba18:	2b02      	cmp	r3, #2
 800ba1a:	d850      	bhi.n	800babe <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800ba1c:	6833      	ldr	r3, [r6, #0]
 800ba1e:	0118      	lsls	r0, r3, #4
 800ba20:	d4f7      	bmi.n	800ba12 <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800ba22:	6823      	ldr	r3, [r4, #0]
 800ba24:	07d9      	lsls	r1, r3, #31
 800ba26:	d506      	bpl.n	800ba36 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800ba28:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800ba2c:	0712      	lsls	r2, r2, #28
 800ba2e:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800ba32:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800ba36:	079a      	lsls	r2, r3, #30
 800ba38:	d515      	bpl.n	800ba66 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800ba3a:	4979      	ldr	r1, [pc, #484]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800ba3c:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800ba3e:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800ba42:	6865      	ldr	r5, [r4, #4]
 800ba44:	0612      	lsls	r2, r2, #24
 800ba46:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800ba4a:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800ba4e:	4302      	orrs	r2, r0
 800ba50:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800ba54:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800ba58:	69e2      	ldr	r2, [r4, #28]
 800ba5a:	f020 001f 	bic.w	r0, r0, #31
 800ba5e:	3a01      	subs	r2, #1
 800ba60:	4302      	orrs	r2, r0
 800ba62:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800ba66:	065b      	lsls	r3, r3, #25
 800ba68:	d509      	bpl.n	800ba7e <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800ba6a:	1d20      	adds	r0, r4, #4
 800ba6c:	c80b      	ldmia	r0, {r0, r1, r3}
 800ba6e:	061b      	lsls	r3, r3, #24
 800ba70:	4a6b      	ldr	r2, [pc, #428]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800ba72:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800ba76:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800ba7a:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800ba7e:	4b67      	ldr	r3, [pc, #412]	; (800bc1c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800ba80:	4e67      	ldr	r6, [pc, #412]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800ba82:	2201      	movs	r2, #1
 800ba84:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800ba86:	f7fd fc15 	bl	80092b4 <HAL_GetTick>
 800ba8a:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800ba8c:	e004      	b.n	800ba98 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800ba8e:	f7fd fc11 	bl	80092b4 <HAL_GetTick>
 800ba92:	1b40      	subs	r0, r0, r5
 800ba94:	2802      	cmp	r0, #2
 800ba96:	d812      	bhi.n	800babe <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800ba98:	6833      	ldr	r3, [r6, #0]
 800ba9a:	011f      	lsls	r7, r3, #4
 800ba9c:	d5f7      	bpl.n	800ba8e <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800ba9e:	6823      	ldr	r3, [r4, #0]
 800baa0:	e79d      	b.n	800b9de <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800baa2:	f7fd fc07 	bl	80092b4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800baa6:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800baaa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800baac:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800baae:	079b      	lsls	r3, r3, #30
 800bab0:	f100 80a5 	bmi.w	800bbfe <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bab4:	f7fd fbfe 	bl	80092b4 <HAL_GetTick>
 800bab8:	1b80      	subs	r0, r0, r6
 800baba:	42b8      	cmp	r0, r7
 800babc:	d9f6      	bls.n	800baac <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800babe:	2003      	movs	r0, #3
}
 800bac0:	b003      	add	sp, #12
 800bac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800bac4:	4b55      	ldr	r3, [pc, #340]	; (800bc1c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bac6:	4e56      	ldr	r6, [pc, #344]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800bac8:	2200      	movs	r2, #0
 800baca:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bacc:	f7fd fbf2 	bl	80092b4 <HAL_GetTick>
 800bad0:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bad2:	e004      	b.n	800bade <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bad4:	f7fd fbee 	bl	80092b4 <HAL_GetTick>
 800bad8:	1b43      	subs	r3, r0, r5
 800bada:	2b02      	cmp	r3, #2
 800badc:	d8ef      	bhi.n	800babe <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800bade:	6833      	ldr	r3, [r6, #0]
 800bae0:	0098      	lsls	r0, r3, #2
 800bae2:	d4f7      	bmi.n	800bad4 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800bae4:	6822      	ldr	r2, [r4, #0]
 800bae6:	0751      	lsls	r1, r2, #29
 800bae8:	d515      	bpl.n	800bb16 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800baea:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800baec:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800baf0:	6920      	ldr	r0, [r4, #16]
 800baf2:	061b      	lsls	r3, r3, #24
 800baf4:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800baf8:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bafc:	430b      	orrs	r3, r1
 800bafe:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800bb02:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800bb06:	6a21      	ldr	r1, [r4, #32]
 800bb08:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800bb0c:	3901      	subs	r1, #1
 800bb0e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800bb12:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800bb16:	0713      	lsls	r3, r2, #28
 800bb18:	d514      	bpl.n	800bb44 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bb1a:	4a41      	ldr	r2, [pc, #260]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bb1c:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800bb1e:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800bb22:	6920      	ldr	r0, [r4, #16]
 800bb24:	071b      	lsls	r3, r3, #28
 800bb26:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800bb2a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800bb2e:	430b      	orrs	r3, r1
 800bb30:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800bb34:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800bb38:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bb3a:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800bb3e:	430b      	orrs	r3, r1
 800bb40:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800bb44:	4b35      	ldr	r3, [pc, #212]	; (800bc1c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bb46:	4e36      	ldr	r6, [pc, #216]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800bb48:	2201      	movs	r2, #1
 800bb4a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800bb4c:	f7fd fbb2 	bl	80092b4 <HAL_GetTick>
 800bb50:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bb52:	e004      	b.n	800bb5e <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800bb54:	f7fd fbae 	bl	80092b4 <HAL_GetTick>
 800bb58:	1b40      	subs	r0, r0, r5
 800bb5a:	2802      	cmp	r0, #2
 800bb5c:	d8af      	bhi.n	800babe <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800bb5e:	6833      	ldr	r3, [r6, #0]
 800bb60:	009f      	lsls	r7, r3, #2
 800bb62:	d5f7      	bpl.n	800bb54 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800bb64:	6823      	ldr	r3, [r4, #0]
 800bb66:	e73d      	b.n	800b9e4 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800bb68:	4618      	mov	r0, r3
}
 800bb6a:	b003      	add	sp, #12
 800bb6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800bb6e:	4b2c      	ldr	r3, [pc, #176]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800bb70:	4d2c      	ldr	r5, [pc, #176]	; (800bc24 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800bb72:	2200      	movs	r2, #0
 800bb74:	9201      	str	r2, [sp, #4]
 800bb76:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800bb78:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800bb7c:	641a      	str	r2, [r3, #64]	; 0x40
 800bb7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800bb80:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bb84:	9301      	str	r3, [sp, #4]
 800bb86:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800bb88:	682b      	ldr	r3, [r5, #0]
 800bb8a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bb8e:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800bb90:	f7fd fb90 	bl	80092b4 <HAL_GetTick>
 800bb94:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bb96:	e004      	b.n	800bba2 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800bb98:	f7fd fb8c 	bl	80092b4 <HAL_GetTick>
 800bb9c:	1b83      	subs	r3, r0, r6
 800bb9e:	2b02      	cmp	r3, #2
 800bba0:	d88d      	bhi.n	800babe <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800bba2:	682b      	ldr	r3, [r5, #0]
 800bba4:	05d9      	lsls	r1, r3, #23
 800bba6:	d5f7      	bpl.n	800bb98 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bba8:	4d1d      	ldr	r5, [pc, #116]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bbaa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800bbac:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bbae:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800bbb2:	d111      	bne.n	800bbd8 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bbb4:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800bbb8:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800bbbc:	d021      	beq.n	800bc02 <HAL_RCCEx_PeriphCLKConfig+0x232>
 800bbbe:	4918      	ldr	r1, [pc, #96]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bbc0:	688a      	ldr	r2, [r1, #8]
 800bbc2:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800bbc6:	608a      	str	r2, [r1, #8]
 800bbc8:	4a15      	ldr	r2, [pc, #84]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bbca:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800bbcc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800bbd0:	430b      	orrs	r3, r1
 800bbd2:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800bbd4:	6823      	ldr	r3, [r4, #0]
 800bbd6:	e708      	b.n	800b9ea <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800bbd8:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800bbdc:	4291      	cmp	r1, r2
 800bbde:	d0eb      	beq.n	800bbb8 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bbe0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800bbe2:	4a0e      	ldr	r2, [pc, #56]	; (800bc1c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800bbe4:	2101      	movs	r1, #1
 800bbe6:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800bbea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800bbee:	2100      	movs	r1, #0
 800bbf0:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800bbf4:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800bbf6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800bbf8:	07da      	lsls	r2, r3, #31
 800bbfa:	f53f af52 	bmi.w	800baa2 <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800bbfe:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bc00:	e7d8      	b.n	800bbb4 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800bc02:	4807      	ldr	r0, [pc, #28]	; (800bc20 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800bc04:	6882      	ldr	r2, [r0, #8]
 800bc06:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800bc0a:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800bc0e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800bc12:	430a      	orrs	r2, r1
 800bc14:	6082      	str	r2, [r0, #8]
 800bc16:	e7d7      	b.n	800bbc8 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800bc18:	42471000 	.word	0x42471000
 800bc1c:	42470000 	.word	0x42470000
 800bc20:	40023800 	.word	0x40023800
 800bc24:	40007000 	.word	0x40007000

0800bc28 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800bc28:	b1f0      	cbz	r0, 800bc68 <HAL_SDRAM_Init+0x40>
{
 800bc2a:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800bc2c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bc30:	460d      	mov	r5, r1
 800bc32:	4604      	mov	r4, r0
 800bc34:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800bc38:	b18b      	cbz	r3, 800bc5e <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800bc3a:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bc3c:	2302      	movs	r3, #2
 800bc3e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800bc42:	f851 0b04 	ldr.w	r0, [r1], #4
 800bc46:	f000 ffcd 	bl	800cbe4 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800bc4a:	e9d4 0200 	ldrd	r0, r2, [r4]
 800bc4e:	4629      	mov	r1, r5
 800bc50:	f001 f806 	bl	800cc60 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800bc54:	2301      	movs	r3, #1
 800bc56:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800bc5a:	2000      	movs	r0, #0
}
 800bc5c:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800bc5e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800bc62:	f7f6 fc29 	bl	80024b8 <HAL_SDRAM_MspInit>
 800bc66:	e7e8      	b.n	800bc3a <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800bc68:	2001      	movs	r0, #1
}
 800bc6a:	4770      	bx	lr

0800bc6c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800bc6c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800bc6e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800bc72:	2b02      	cmp	r3, #2
{
 800bc74:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800bc76:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800bc78:	d004      	beq.n	800bc84 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800bc7a:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800bc7e:	2c01      	cmp	r4, #1
 800bc80:	d001      	beq.n	800bc86 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800bc82:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bc84:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bc86:	460e      	mov	r6, r1
 800bc88:	2302      	movs	r3, #2
 800bc8a:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800bc8e:	6828      	ldr	r0, [r5, #0]
 800bc90:	f001 f832 	bl	800ccf8 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800bc94:	6833      	ldr	r3, [r6, #0]
 800bc96:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800bc98:	bf06      	itte	eq
 800bc9a:	2305      	moveq	r3, #5
 800bc9c:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800bca0:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800bca4:	2000      	movs	r0, #0
}
 800bca6:	bd70      	pop	{r4, r5, r6, pc}

0800bca8 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800bca8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bcaa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800bcae:	2b02      	cmp	r3, #2
{
 800bcb0:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800bcb2:	b2d8      	uxtb	r0, r3
 800bcb4:	d005      	beq.n	800bcc2 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800bcb6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800bcba:	2b01      	cmp	r3, #1
 800bcbc:	b2dd      	uxtb	r5, r3
 800bcbe:	d001      	beq.n	800bcc4 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800bcc0:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800bcc2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bcc4:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bcc6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800bcc8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800bccc:	f001 f83e 	bl	800cd4c <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800bcd0:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800bcd4:	2000      	movs	r0, #0
}
 800bcd6:	bd38      	pop	{r3, r4, r5, pc}

0800bcd8 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800bcd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bcdc:	b082      	sub	sp, #8
 800bcde:	461d      	mov	r5, r3
 800bce0:	4616      	mov	r6, r2
 800bce2:	460c      	mov	r4, r1
 800bce4:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800bce6:	f7fd fae5 	bl	80092b4 <HAL_GetTick>
 800bcea:	4435      	add	r5, r6
 800bcec:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800bcee:	f7fd fae1 	bl	80092b4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bcf2:	4b27      	ldr	r3, [pc, #156]	; (800bd90 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800bcf4:	681b      	ldr	r3, [r3, #0]
 800bcf6:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800bcfa:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800bcfe:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800bd00:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bd02:	1c73      	adds	r3, r6, #1
 800bd04:	6839      	ldr	r1, [r7, #0]
 800bd06:	d107      	bne.n	800bd18 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800bd08:	688b      	ldr	r3, [r1, #8]
 800bd0a:	ea34 0303 	bics.w	r3, r4, r3
 800bd0e:	d0fb      	beq.n	800bd08 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800bd10:	2000      	movs	r0, #0
}
 800bd12:	b002      	add	sp, #8
 800bd14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800bd18:	688b      	ldr	r3, [r1, #8]
 800bd1a:	ea34 0303 	bics.w	r3, r4, r3
 800bd1e:	d1f7      	bne.n	800bd10 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800bd20:	f7fd fac8 	bl	80092b4 <HAL_GetTick>
 800bd24:	eba0 0008 	sub.w	r0, r0, r8
 800bd28:	42a8      	cmp	r0, r5
 800bd2a:	d208      	bcs.n	800bd3e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800bd2c:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800bd2e:	2b00      	cmp	r3, #0
      count--;
 800bd30:	9b01      	ldr	r3, [sp, #4]
 800bd32:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800bd36:	bf08      	it	eq
 800bd38:	2500      	moveq	r5, #0
      count--;
 800bd3a:	9301      	str	r3, [sp, #4]
 800bd3c:	e7e1      	b.n	800bd02 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd3e:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bd42:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd44:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800bd48:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800bd4c:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd4e:	d013      	beq.n	800bd78 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800bd50:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800bd52:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800bd56:	d107      	bne.n	800bd68 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800bd58:	681a      	ldr	r2, [r3, #0]
 800bd5a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800bd5e:	601a      	str	r2, [r3, #0]
 800bd60:	681a      	ldr	r2, [r3, #0]
 800bd62:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800bd66:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800bd68:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800bd6a:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800bd6c:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800bd70:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800bd74:	2003      	movs	r0, #3
 800bd76:	e7cc      	b.n	800bd12 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd78:	68ba      	ldr	r2, [r7, #8]
 800bd7a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bd7e:	d002      	beq.n	800bd86 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bd80:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bd84:	d1e4      	bne.n	800bd50 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800bd86:	681a      	ldr	r2, [r3, #0]
 800bd88:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bd8c:	601a      	str	r2, [r3, #0]
 800bd8e:	e7df      	b.n	800bd50 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800bd90:	20000078 	.word	0x20000078

0800bd94 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800bd94:	b538      	push	{r3, r4, r5, lr}
 800bd96:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bd98:	6842      	ldr	r2, [r0, #4]
 800bd9a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800bd9e:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bda0:	d006      	beq.n	800bdb0 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bda2:	460a      	mov	r2, r1
 800bda4:	2101      	movs	r1, #1
 800bda6:	f7ff ff97 	bl	800bcd8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bdaa:	b978      	cbnz	r0, 800bdcc <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800bdac:	2000      	movs	r0, #0
}
 800bdae:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bdb0:	6882      	ldr	r2, [r0, #8]
 800bdb2:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800bdb6:	d01c      	beq.n	800bdf2 <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800bdb8:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800bdbc:	d00c      	beq.n	800bdd8 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bdbe:	460a      	mov	r2, r1
 800bdc0:	4620      	mov	r0, r4
 800bdc2:	2180      	movs	r1, #128	; 0x80
 800bdc4:	f7ff ff88 	bl	800bcd8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bdc8:	2800      	cmp	r0, #0
 800bdca:	d0ef      	beq.n	800bdac <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bdcc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800bdce:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800bdd2:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bdd4:	6563      	str	r3, [r4, #84]	; 0x54
}
 800bdd6:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800bdd8:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bdda:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800bddc:	6829      	ldr	r1, [r5, #0]
 800bdde:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800bde2:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800bde4:	2101      	movs	r1, #1
 800bde6:	f7ff ff77 	bl	800bcd8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bdea:	2800      	cmp	r0, #0
 800bdec:	d1ee      	bne.n	800bdcc <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800bdee:	2000      	movs	r0, #0
 800bdf0:	e7dd      	b.n	800bdae <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800bdf2:	6800      	ldr	r0, [r0, #0]
 800bdf4:	6802      	ldr	r2, [r0, #0]
 800bdf6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bdfa:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bdfc:	460a      	mov	r2, r1
 800bdfe:	4620      	mov	r0, r4
 800be00:	2180      	movs	r1, #128	; 0x80
 800be02:	f7ff ff69 	bl	800bcd8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800be06:	2800      	cmp	r0, #0
 800be08:	d0d0      	beq.n	800bdac <SPI_EndRxTransaction+0x18>
 800be0a:	e7df      	b.n	800bdcc <SPI_EndRxTransaction+0x38>

0800be0c <HAL_SPI_Init>:
  if (hspi == NULL)
 800be0c:	2800      	cmp	r0, #0
 800be0e:	d05c      	beq.n	800beca <HAL_SPI_Init+0xbe>
{
 800be10:	b570      	push	{r4, r5, r6, lr}
 800be12:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800be14:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800be16:	2800      	cmp	r0, #0
 800be18:	d047      	beq.n	800beaa <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800be1a:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800be1c:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800be20:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800be24:	2200      	movs	r2, #0
 800be26:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800be28:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800be2c:	2b00      	cmp	r3, #0
 800be2e:	d042      	beq.n	800beb6 <HAL_SPI_Init+0xaa>
 800be30:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800be32:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800be34:	68a5      	ldr	r5, [r4, #8]
 800be36:	69a2      	ldr	r2, [r4, #24]
 800be38:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800be3a:	2302      	movs	r3, #2
 800be3c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800be40:	680b      	ldr	r3, [r1, #0]
 800be42:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800be46:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800be48:	6863      	ldr	r3, [r4, #4]
 800be4a:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800be4e:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800be52:	432b      	orrs	r3, r5
 800be54:	68e5      	ldr	r5, [r4, #12]
 800be56:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800be5a:	432b      	orrs	r3, r5
 800be5c:	6925      	ldr	r5, [r4, #16]
 800be5e:	f005 0502 	and.w	r5, r5, #2
 800be62:	432b      	orrs	r3, r5
 800be64:	6965      	ldr	r5, [r4, #20]
 800be66:	f005 0501 	and.w	r5, r5, #1
 800be6a:	432b      	orrs	r3, r5
 800be6c:	69e5      	ldr	r5, [r4, #28]
 800be6e:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800be72:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800be76:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800be7a:	4333      	orrs	r3, r6
 800be7c:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800be7e:	0c12      	lsrs	r2, r2, #16
 800be80:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800be84:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800be88:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800be8c:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800be90:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800be92:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800be94:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800be96:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800be98:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800be9a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800be9e:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bea0:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bea2:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bea4:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800bea8:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800beaa:	6863      	ldr	r3, [r4, #4]
 800beac:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800beb0:	d0b6      	beq.n	800be20 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800beb2:	61e0      	str	r0, [r4, #28]
 800beb4:	e7b4      	b.n	800be20 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800beb6:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800beb8:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bebc:	f7f6 fa94 	bl	80023e8 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bec0:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bec4:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800bec8:	e7b3      	b.n	800be32 <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800beca:	2001      	movs	r0, #1
}
 800becc:	4770      	bx	lr
 800bece:	bf00      	nop

0800bed0 <HAL_SPI_Transmit>:
{
 800bed0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bed4:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bed6:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800beda:	2801      	cmp	r0, #1
{
 800bedc:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bede:	f000 8085 	beq.w	800bfec <HAL_SPI_Transmit+0x11c>
 800bee2:	461d      	mov	r5, r3
 800bee4:	2301      	movs	r3, #1
 800bee6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800beea:	4688      	mov	r8, r1
 800beec:	4617      	mov	r7, r2
 800beee:	f7fd f9e1 	bl	80092b4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bef2:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800bef6:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800bef8:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800befa:	b2d8      	uxtb	r0, r3
 800befc:	d009      	beq.n	800bf12 <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800befe:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bf00:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bf02:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bf04:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bf08:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bf0c:	b002      	add	sp, #8
 800bf0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bf12:	f1b8 0f00 	cmp.w	r8, #0
 800bf16:	d0f3      	beq.n	800bf00 <HAL_SPI_Transmit+0x30>
 800bf18:	2f00      	cmp	r7, #0
 800bf1a:	d0f1      	beq.n	800bf00 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf1c:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bf1e:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bf20:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bf24:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bf26:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf28:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bf2c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bf30:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bf34:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bf36:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bf38:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bf3a:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bf3c:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bf3e:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bf40:	f000 8085 	beq.w	800c04e <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf44:	6803      	ldr	r3, [r0, #0]
 800bf46:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bf48:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bf4a:	d403      	bmi.n	800bf54 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bf4c:	6803      	ldr	r3, [r0, #0]
 800bf4e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bf52:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bf54:	68e3      	ldr	r3, [r4, #12]
 800bf56:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bf5a:	d04b      	beq.n	800bff4 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bf5c:	6863      	ldr	r3, [r4, #4]
 800bf5e:	2b00      	cmp	r3, #0
 800bf60:	f000 8097 	beq.w	800c092 <HAL_SPI_Transmit+0x1c2>
 800bf64:	2f01      	cmp	r7, #1
 800bf66:	f000 8094 	beq.w	800c092 <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800bf6a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf6c:	b29b      	uxth	r3, r3
 800bf6e:	b1ab      	cbz	r3, 800bf9c <HAL_SPI_Transmit+0xcc>
 800bf70:	1c68      	adds	r0, r5, #1
 800bf72:	f040 8083 	bne.w	800c07c <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bf76:	6823      	ldr	r3, [r4, #0]
 800bf78:	689a      	ldr	r2, [r3, #8]
 800bf7a:	0791      	lsls	r1, r2, #30
 800bf7c:	f140 8094 	bpl.w	800c0a8 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bf80:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bf82:	7812      	ldrb	r2, [r2, #0]
 800bf84:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bf86:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf88:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bf8a:	3901      	subs	r1, #1
 800bf8c:	b289      	uxth	r1, r1
 800bf8e:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bf90:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf92:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800bf94:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bf96:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800bf98:	2900      	cmp	r1, #0
 800bf9a:	d1ec      	bne.n	800bf76 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bf9c:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bf9e:	4b5b      	ldr	r3, [pc, #364]	; (800c10c <HAL_SPI_Transmit+0x23c>)
 800bfa0:	4a5b      	ldr	r2, [pc, #364]	; (800c110 <HAL_SPI_Transmit+0x240>)
 800bfa2:	681b      	ldr	r3, [r3, #0]
 800bfa4:	fba2 2303 	umull	r2, r3, r2, r3
 800bfa8:	0d5b      	lsrs	r3, r3, #21
 800bfaa:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800bfae:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bfb2:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bfb6:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bfb8:	d107      	bne.n	800bfca <HAL_SPI_Transmit+0xfa>
 800bfba:	e098      	b.n	800c0ee <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800bfbc:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bfbe:	6822      	ldr	r2, [r4, #0]
      count--;
 800bfc0:	3b01      	subs	r3, #1
 800bfc2:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bfc4:	6893      	ldr	r3, [r2, #8]
 800bfc6:	061b      	lsls	r3, r3, #24
 800bfc8:	d502      	bpl.n	800bfd0 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800bfca:	9b01      	ldr	r3, [sp, #4]
 800bfcc:	2b00      	cmp	r3, #0
 800bfce:	d1f5      	bne.n	800bfbc <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bfd0:	68a3      	ldr	r3, [r4, #8]
 800bfd2:	b933      	cbnz	r3, 800bfe2 <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bfd4:	6822      	ldr	r2, [r4, #0]
 800bfd6:	9300      	str	r3, [sp, #0]
 800bfd8:	68d3      	ldr	r3, [r2, #12]
 800bfda:	9300      	str	r3, [sp, #0]
 800bfdc:	6893      	ldr	r3, [r2, #8]
 800bfde:	9300      	str	r3, [sp, #0]
 800bfe0:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bfe2:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bfe4:	3800      	subs	r0, #0
 800bfe6:	bf18      	it	ne
 800bfe8:	2001      	movne	r0, #1
error:
 800bfea:	e789      	b.n	800bf00 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800bfec:	2002      	movs	r0, #2
}
 800bfee:	b002      	add	sp, #8
 800bff0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bff4:	6861      	ldr	r1, [r4, #4]
 800bff6:	2900      	cmp	r1, #0
 800bff8:	d176      	bne.n	800c0e8 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bffa:	4643      	mov	r3, r8
 800bffc:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c000:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c002:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c004:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c006:	3b01      	subs	r3, #1
 800c008:	b29b      	uxth	r3, r3
 800c00a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c00c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c00e:	b29b      	uxth	r3, r3
 800c010:	2b00      	cmp	r3, #0
 800c012:	d0c4      	beq.n	800bf9e <HAL_SPI_Transmit+0xce>
 800c014:	1c6b      	adds	r3, r5, #1
 800c016:	d15e      	bne.n	800c0d6 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c018:	6883      	ldr	r3, [r0, #8]
 800c01a:	079f      	lsls	r7, r3, #30
 800c01c:	d50f      	bpl.n	800c03e <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c01e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c020:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c024:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c026:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c028:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c02a:	3b01      	subs	r3, #1
 800c02c:	b29b      	uxth	r3, r3
 800c02e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c030:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c032:	b29b      	uxth	r3, r3
 800c034:	2b00      	cmp	r3, #0
 800c036:	d0b1      	beq.n	800bf9c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c038:	6883      	ldr	r3, [r0, #8]
 800c03a:	079f      	lsls	r7, r3, #30
 800c03c:	d4ef      	bmi.n	800c01e <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c03e:	f7fd f939 	bl	80092b4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c042:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c044:	b29b      	uxth	r3, r3
 800c046:	2b00      	cmp	r3, #0
 800c048:	d0a8      	beq.n	800bf9c <HAL_SPI_Transmit+0xcc>
 800c04a:	6820      	ldr	r0, [r4, #0]
 800c04c:	e7e4      	b.n	800c018 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c04e:	6803      	ldr	r3, [r0, #0]
 800c050:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c054:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c056:	6803      	ldr	r3, [r0, #0]
 800c058:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c05c:	6003      	str	r3, [r0, #0]
 800c05e:	e771      	b.n	800bf44 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c060:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c062:	7812      	ldrb	r2, [r2, #0]
 800c064:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c066:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c068:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c06a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c06c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c06e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c070:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c072:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c074:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c076:	b29b      	uxth	r3, r3
 800c078:	2b00      	cmp	r3, #0
 800c07a:	d08f      	beq.n	800bf9c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c07c:	6823      	ldr	r3, [r4, #0]
 800c07e:	689a      	ldr	r2, [r3, #8]
 800c080:	0792      	lsls	r2, r2, #30
 800c082:	d4ed      	bmi.n	800c060 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c084:	f7fd f916 	bl	80092b4 <HAL_GetTick>
 800c088:	1b80      	subs	r0, r0, r6
 800c08a:	42a8      	cmp	r0, r5
 800c08c:	d3f2      	bcc.n	800c074 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800c08e:	2003      	movs	r0, #3
 800c090:	e736      	b.n	800bf00 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c092:	f898 3000 	ldrb.w	r3, [r8]
 800c096:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800c098:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c09a:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c09c:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c09e:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c0a0:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c0a2:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c0a4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c0a6:	e760      	b.n	800bf6a <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c0a8:	f7fd f904 	bl	80092b4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c0ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0ae:	b29b      	uxth	r3, r3
 800c0b0:	2b00      	cmp	r3, #0
 800c0b2:	f47f af60 	bne.w	800bf76 <HAL_SPI_Transmit+0xa6>
 800c0b6:	e771      	b.n	800bf9c <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c0b8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c0ba:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c0be:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c0c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c0c2:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c0c4:	3b01      	subs	r3, #1
 800c0c6:	b29b      	uxth	r3, r3
 800c0c8:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c0ca:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c0cc:	b29b      	uxth	r3, r3
 800c0ce:	2b00      	cmp	r3, #0
 800c0d0:	f43f af64 	beq.w	800bf9c <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c0d4:	6822      	ldr	r2, [r4, #0]
 800c0d6:	6893      	ldr	r3, [r2, #8]
 800c0d8:	0799      	lsls	r1, r3, #30
 800c0da:	d4ed      	bmi.n	800c0b8 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c0dc:	f7fd f8ea 	bl	80092b4 <HAL_GetTick>
 800c0e0:	1b80      	subs	r0, r0, r6
 800c0e2:	42a8      	cmp	r0, r5
 800c0e4:	d3f1      	bcc.n	800c0ca <HAL_SPI_Transmit+0x1fa>
 800c0e6:	e7d2      	b.n	800c08e <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c0e8:	2f01      	cmp	r7, #1
 800c0ea:	d18f      	bne.n	800c00c <HAL_SPI_Transmit+0x13c>
 800c0ec:	e785      	b.n	800bffa <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c0ee:	4633      	mov	r3, r6
 800c0f0:	462a      	mov	r2, r5
 800c0f2:	2180      	movs	r1, #128	; 0x80
 800c0f4:	4620      	mov	r0, r4
 800c0f6:	f7ff fdef 	bl	800bcd8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c0fa:	2800      	cmp	r0, #0
 800c0fc:	f43f af68 	beq.w	800bfd0 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c100:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c102:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c104:	4313      	orrs	r3, r2
 800c106:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c108:	6562      	str	r2, [r4, #84]	; 0x54
 800c10a:	e761      	b.n	800bfd0 <HAL_SPI_Transmit+0x100>
 800c10c:	20000078 	.word	0x20000078
 800c110:	165e9f81 	.word	0x165e9f81

0800c114 <HAL_SPI_TransmitReceive>:
{
 800c114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c118:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c11a:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c11e:	2801      	cmp	r0, #1
{
 800c120:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c122:	f000 80ac 	beq.w	800c27e <HAL_SPI_TransmitReceive+0x16a>
 800c126:	461e      	mov	r6, r3
 800c128:	2301      	movs	r3, #1
 800c12a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c12e:	4690      	mov	r8, r2
 800c130:	460f      	mov	r7, r1
 800c132:	f7fd f8bf 	bl	80092b4 <HAL_GetTick>
 800c136:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800c138:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800c13c:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c13e:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800c140:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800c142:	d011      	beq.n	800c168 <HAL_SPI_TransmitReceive+0x54>
 800c144:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c148:	d009      	beq.n	800c15e <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800c14a:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c14c:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c14e:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c150:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c154:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c158:	b002      	add	sp, #8
 800c15a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800c15e:	68a1      	ldr	r1, [r4, #8]
 800c160:	2900      	cmp	r1, #0
 800c162:	d1f2      	bne.n	800c14a <HAL_SPI_TransmitReceive+0x36>
 800c164:	2a04      	cmp	r2, #4
 800c166:	d1f0      	bne.n	800c14a <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800c168:	2f00      	cmp	r7, #0
 800c16a:	f000 808c 	beq.w	800c286 <HAL_SPI_TransmitReceive+0x172>
 800c16e:	f1b8 0f00 	cmp.w	r8, #0
 800c172:	f000 8088 	beq.w	800c286 <HAL_SPI_TransmitReceive+0x172>
 800c176:	2e00      	cmp	r6, #0
 800c178:	f000 8085 	beq.w	800c286 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c17c:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800c180:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800c184:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800c186:	bf1c      	itt	ne
 800c188:	2205      	movne	r2, #5
 800c18a:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c18e:	2200      	movs	r2, #0
 800c190:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800c192:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c196:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800c198:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800c19a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c19c:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800c19e:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c1a0:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800c1a2:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800c1a4:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c1a6:	d403      	bmi.n	800c1b0 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800c1a8:	6811      	ldr	r1, [r2, #0]
 800c1aa:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c1ae:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c1b0:	68e1      	ldr	r1, [r4, #12]
 800c1b2:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800c1b6:	f000 809e 	beq.w	800c2f6 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c1ba:	2b00      	cmp	r3, #0
 800c1bc:	f000 8091 	beq.w	800c2e2 <HAL_SPI_TransmitReceive+0x1ce>
 800c1c0:	2e01      	cmp	r6, #1
 800c1c2:	f000 808e 	beq.w	800c2e2 <HAL_SPI_TransmitReceive+0x1ce>
 800c1c6:	9b08      	ldr	r3, [sp, #32]
 800c1c8:	3301      	adds	r3, #1
        txallowed = 1U;
 800c1ca:	f04f 0601 	mov.w	r6, #1
 800c1ce:	d028      	beq.n	800c222 <HAL_SPI_TransmitReceive+0x10e>
 800c1d0:	e05b      	b.n	800c28a <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c1d2:	6821      	ldr	r1, [r4, #0]
 800c1d4:	688b      	ldr	r3, [r1, #8]
 800c1d6:	0798      	lsls	r0, r3, #30
 800c1d8:	d50f      	bpl.n	800c1fa <HAL_SPI_TransmitReceive+0xe6>
 800c1da:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c1dc:	b29b      	uxth	r3, r3
 800c1de:	b163      	cbz	r3, 800c1fa <HAL_SPI_TransmitReceive+0xe6>
 800c1e0:	b15e      	cbz	r6, 800c1fa <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c1e2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c1e4:	781b      	ldrb	r3, [r3, #0]
 800c1e6:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800c1e8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c1ea:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c1ec:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800c1ee:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c1f0:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c1f2:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800c1f4:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c1f6:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c1f8:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c1fa:	688a      	ldr	r2, [r1, #8]
 800c1fc:	f012 0201 	ands.w	r2, r2, #1
 800c200:	d00d      	beq.n	800c21e <HAL_SPI_TransmitReceive+0x10a>
 800c202:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c204:	b29b      	uxth	r3, r3
 800c206:	b153      	cbz	r3, 800c21e <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c208:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c20a:	68c9      	ldr	r1, [r1, #12]
 800c20c:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800c20e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c210:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c212:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800c214:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c216:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800c218:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c21a:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c21c:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c21e:	f7fd f849 	bl	80092b4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c222:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c224:	b292      	uxth	r2, r2
 800c226:	2a00      	cmp	r2, #0
 800c228:	d1d3      	bne.n	800c1d2 <HAL_SPI_TransmitReceive+0xbe>
 800c22a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c22c:	b29b      	uxth	r3, r3
 800c22e:	2b00      	cmp	r3, #0
 800c230:	d1cf      	bne.n	800c1d2 <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c232:	4b79      	ldr	r3, [pc, #484]	; (800c418 <HAL_SPI_TransmitReceive+0x304>)
 800c234:	4a79      	ldr	r2, [pc, #484]	; (800c41c <HAL_SPI_TransmitReceive+0x308>)
 800c236:	681b      	ldr	r3, [r3, #0]
 800c238:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c23c:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c23e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c242:	0d5b      	lsrs	r3, r3, #21
 800c244:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c248:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c24c:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c24e:	d107      	bne.n	800c260 <HAL_SPI_TransmitReceive+0x14c>
 800c250:	e0d2      	b.n	800c3f8 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800c252:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c254:	6822      	ldr	r2, [r4, #0]
      count--;
 800c256:	3b01      	subs	r3, #1
 800c258:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c25a:	6893      	ldr	r3, [r2, #8]
 800c25c:	061b      	lsls	r3, r3, #24
 800c25e:	d502      	bpl.n	800c266 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800c260:	9b01      	ldr	r3, [sp, #4]
 800c262:	2b00      	cmp	r3, #0
 800c264:	d1f5      	bne.n	800c252 <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c266:	68a0      	ldr	r0, [r4, #8]
 800c268:	2800      	cmp	r0, #0
 800c26a:	f040 8082 	bne.w	800c372 <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c26e:	6823      	ldr	r3, [r4, #0]
 800c270:	9000      	str	r0, [sp, #0]
 800c272:	68da      	ldr	r2, [r3, #12]
 800c274:	9200      	str	r2, [sp, #0]
 800c276:	689b      	ldr	r3, [r3, #8]
 800c278:	9300      	str	r3, [sp, #0]
 800c27a:	9b00      	ldr	r3, [sp, #0]
 800c27c:	e766      	b.n	800c14c <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800c27e:	2002      	movs	r0, #2
}
 800c280:	b002      	add	sp, #8
 800c282:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800c286:	2001      	movs	r0, #1
 800c288:	e760      	b.n	800c14c <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c28a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c28c:	b29b      	uxth	r3, r3
 800c28e:	b91b      	cbnz	r3, 800c298 <HAL_SPI_TransmitReceive+0x184>
 800c290:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c292:	b29b      	uxth	r3, r3
 800c294:	2b00      	cmp	r3, #0
 800c296:	d0cc      	beq.n	800c232 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c298:	6822      	ldr	r2, [r4, #0]
 800c29a:	6893      	ldr	r3, [r2, #8]
 800c29c:	0799      	lsls	r1, r3, #30
 800c29e:	d50f      	bpl.n	800c2c0 <HAL_SPI_TransmitReceive+0x1ac>
 800c2a0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c2a2:	b29b      	uxth	r3, r3
 800c2a4:	b163      	cbz	r3, 800c2c0 <HAL_SPI_TransmitReceive+0x1ac>
 800c2a6:	b15e      	cbz	r6, 800c2c0 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800c2a8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c2aa:	781b      	ldrb	r3, [r3, #0]
 800c2ac:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800c2ae:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800c2b0:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c2b2:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800c2b4:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c2b6:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800c2b8:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c2ba:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800c2bc:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c2be:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c2c0:	6893      	ldr	r3, [r2, #8]
 800c2c2:	f013 0301 	ands.w	r3, r3, #1
 800c2c6:	d004      	beq.n	800c2d2 <HAL_SPI_TransmitReceive+0x1be>
 800c2c8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c2ca:	b289      	uxth	r1, r1
 800c2cc:	2900      	cmp	r1, #0
 800c2ce:	f040 8087 	bne.w	800c3e0 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800c2d2:	f7fc ffef 	bl	80092b4 <HAL_GetTick>
 800c2d6:	9b08      	ldr	r3, [sp, #32]
 800c2d8:	1b40      	subs	r0, r0, r5
 800c2da:	4298      	cmp	r0, r3
 800c2dc:	d3d5      	bcc.n	800c28a <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800c2de:	2003      	movs	r0, #3
 800c2e0:	e734      	b.n	800c14c <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c2e2:	783b      	ldrb	r3, [r7, #0]
 800c2e4:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800c2e6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2e8:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c2ea:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2ec:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c2ee:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c2f0:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c2f2:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c2f4:	e767      	b.n	800c1c6 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c2f6:	2b00      	cmp	r3, #0
 800c2f8:	d13d      	bne.n	800c376 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c2fa:	f837 3b02 	ldrh.w	r3, [r7], #2
 800c2fe:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800c300:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c302:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c304:	3b01      	subs	r3, #1
 800c306:	b29b      	uxth	r3, r3
 800c308:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c30a:	9b08      	ldr	r3, [sp, #32]
 800c30c:	3301      	adds	r3, #1
{
 800c30e:	f04f 0601 	mov.w	r6, #1
 800c312:	d025      	beq.n	800c360 <HAL_SPI_TransmitReceive+0x24c>
 800c314:	e032      	b.n	800c37c <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c316:	6823      	ldr	r3, [r4, #0]
 800c318:	689a      	ldr	r2, [r3, #8]
 800c31a:	0792      	lsls	r2, r2, #30
 800c31c:	d50d      	bpl.n	800c33a <HAL_SPI_TransmitReceive+0x226>
 800c31e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800c320:	b292      	uxth	r2, r2
 800c322:	b152      	cbz	r2, 800c33a <HAL_SPI_TransmitReceive+0x226>
 800c324:	b14e      	cbz	r6, 800c33a <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c326:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c328:	f831 2b02 	ldrh.w	r2, [r1], #2
 800c32c:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800c32e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c330:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c332:	3a01      	subs	r2, #1
 800c334:	b292      	uxth	r2, r2
        txallowed = 0U;
 800c336:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800c338:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c33a:	689a      	ldr	r2, [r3, #8]
 800c33c:	f012 0201 	ands.w	r2, r2, #1
 800c340:	d00c      	beq.n	800c35c <HAL_SPI_TransmitReceive+0x248>
 800c342:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c344:	b289      	uxth	r1, r1
 800c346:	b149      	cbz	r1, 800c35c <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c348:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c34a:	68db      	ldr	r3, [r3, #12]
 800c34c:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c350:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c352:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c354:	3b01      	subs	r3, #1
 800c356:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c358:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c35a:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c35c:	f7fc ffaa 	bl	80092b4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c360:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c362:	b29b      	uxth	r3, r3
 800c364:	2b00      	cmp	r3, #0
 800c366:	d1d6      	bne.n	800c316 <HAL_SPI_TransmitReceive+0x202>
 800c368:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c36a:	b29b      	uxth	r3, r3
 800c36c:	2b00      	cmp	r3, #0
 800c36e:	d1d2      	bne.n	800c316 <HAL_SPI_TransmitReceive+0x202>
 800c370:	e75f      	b.n	800c232 <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c372:	2000      	movs	r0, #0
 800c374:	e6ea      	b.n	800c14c <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c376:	2e01      	cmp	r6, #1
 800c378:	d1c7      	bne.n	800c30a <HAL_SPI_TransmitReceive+0x1f6>
 800c37a:	e7be      	b.n	800c2fa <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c37c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c37e:	b29b      	uxth	r3, r3
 800c380:	b923      	cbnz	r3, 800c38c <HAL_SPI_TransmitReceive+0x278>
 800c382:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c384:	b29b      	uxth	r3, r3
 800c386:	2b00      	cmp	r3, #0
 800c388:	f43f af53 	beq.w	800c232 <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c38c:	6822      	ldr	r2, [r4, #0]
 800c38e:	6893      	ldr	r3, [r2, #8]
 800c390:	079f      	lsls	r7, r3, #30
 800c392:	d50d      	bpl.n	800c3b0 <HAL_SPI_TransmitReceive+0x29c>
 800c394:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c396:	b29b      	uxth	r3, r3
 800c398:	b153      	cbz	r3, 800c3b0 <HAL_SPI_TransmitReceive+0x29c>
 800c39a:	b14e      	cbz	r6, 800c3b0 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c39c:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c39e:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c3a2:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c3a4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c3a6:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c3a8:	3b01      	subs	r3, #1
 800c3aa:	b29b      	uxth	r3, r3
 800c3ac:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c3ae:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c3b0:	6893      	ldr	r3, [r2, #8]
 800c3b2:	f013 0301 	ands.w	r3, r3, #1
 800c3b6:	d00c      	beq.n	800c3d2 <HAL_SPI_TransmitReceive+0x2be>
 800c3b8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c3ba:	b289      	uxth	r1, r1
 800c3bc:	b149      	cbz	r1, 800c3d2 <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c3be:	68d1      	ldr	r1, [r2, #12]
 800c3c0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c3c2:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c3c6:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c3c8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c3ca:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c3cc:	3b01      	subs	r3, #1
 800c3ce:	b29b      	uxth	r3, r3
 800c3d0:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c3d2:	f7fc ff6f 	bl	80092b4 <HAL_GetTick>
 800c3d6:	9b08      	ldr	r3, [sp, #32]
 800c3d8:	1b40      	subs	r0, r0, r5
 800c3da:	4298      	cmp	r0, r3
 800c3dc:	d3ce      	bcc.n	800c37c <HAL_SPI_TransmitReceive+0x268>
 800c3de:	e77e      	b.n	800c2de <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c3e0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c3e2:	68d2      	ldr	r2, [r2, #12]
 800c3e4:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c3e6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c3e8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c3ea:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c3ec:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c3ee:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c3f0:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c3f2:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c3f4:	461e      	mov	r6, r3
 800c3f6:	e76c      	b.n	800c2d2 <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c3f8:	9a08      	ldr	r2, [sp, #32]
 800c3fa:	462b      	mov	r3, r5
 800c3fc:	2180      	movs	r1, #128	; 0x80
 800c3fe:	4620      	mov	r0, r4
 800c400:	f7ff fc6a 	bl	800bcd8 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c404:	2800      	cmp	r0, #0
 800c406:	f43f af2e 	beq.w	800c266 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c40a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c40c:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c40e:	4313      	orrs	r3, r2
 800c410:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c412:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c414:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c416:	e699      	b.n	800c14c <HAL_SPI_TransmitReceive+0x38>
 800c418:	20000078 	.word	0x20000078
 800c41c:	165e9f81 	.word	0x165e9f81

0800c420 <HAL_SPI_Receive>:
{
 800c420:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c424:	6846      	ldr	r6, [r0, #4]
 800c426:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c42a:	b082      	sub	sp, #8
 800c42c:	4604      	mov	r4, r0
 800c42e:	4690      	mov	r8, r2
 800c430:	461d      	mov	r5, r3
 800c432:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c434:	d06e      	beq.n	800c514 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c436:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c43a:	2b01      	cmp	r3, #1
 800c43c:	d076      	beq.n	800c52c <HAL_SPI_Receive+0x10c>
 800c43e:	2301      	movs	r3, #1
 800c440:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c444:	f7fc ff36 	bl	80092b4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c448:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c44c:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c450:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c452:	fa5f f08c 	uxtb.w	r0, ip
 800c456:	d009      	beq.n	800c46c <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c458:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c45a:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c45c:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c45e:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c462:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c466:	b002      	add	sp, #8
 800c468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c46c:	2f00      	cmp	r7, #0
 800c46e:	d0f4      	beq.n	800c45a <HAL_SPI_Receive+0x3a>
 800c470:	f1b8 0f00 	cmp.w	r8, #0
 800c474:	d0f1      	beq.n	800c45a <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c476:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c478:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c47a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c47e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c480:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c484:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c488:	f04f 0104 	mov.w	r1, #4
 800c48c:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c490:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c494:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c496:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c498:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c49a:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c49e:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c4a0:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c4a2:	d107      	bne.n	800c4b4 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c4a4:	6811      	ldr	r1, [r2, #0]
 800c4a6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c4aa:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c4ac:	6811      	ldr	r1, [r2, #0]
 800c4ae:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c4b2:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c4b4:	6811      	ldr	r1, [r2, #0]
 800c4b6:	0648      	lsls	r0, r1, #25
 800c4b8:	d403      	bmi.n	800c4c2 <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c4ba:	6811      	ldr	r1, [r2, #0]
 800c4bc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c4c0:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c4c2:	68e1      	ldr	r1, [r4, #12]
 800c4c4:	2900      	cmp	r1, #0
 800c4c6:	d054      	beq.n	800c572 <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c4c8:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c4ca:	b289      	uxth	r1, r1
 800c4cc:	b1a9      	cbz	r1, 800c4fa <HAL_SPI_Receive+0xda>
 800c4ce:	1c69      	adds	r1, r5, #1
 800c4d0:	d13e      	bne.n	800c550 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c4d2:	6893      	ldr	r3, [r2, #8]
 800c4d4:	07db      	lsls	r3, r3, #31
 800c4d6:	d544      	bpl.n	800c562 <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c4d8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c4da:	68d1      	ldr	r1, [r2, #12]
 800c4dc:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c4e0:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c4e4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c4e6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c4ea:	fa1f fc8c 	uxth.w	ip, ip
 800c4ee:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c4f2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c4f4:	b29b      	uxth	r3, r3
 800c4f6:	2b00      	cmp	r3, #0
 800c4f8:	d1eb      	bne.n	800c4d2 <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c4fa:	4632      	mov	r2, r6
 800c4fc:	4629      	mov	r1, r5
 800c4fe:	4620      	mov	r0, r4
 800c500:	f7ff fc48 	bl	800bd94 <SPI_EndRxTransaction>
 800c504:	b108      	cbz	r0, 800c50a <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c506:	2320      	movs	r3, #32
 800c508:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c50a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c50c:	3800      	subs	r0, #0
 800c50e:	bf18      	it	ne
 800c510:	2001      	movne	r0, #1
error :
 800c512:	e7a2      	b.n	800c45a <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c514:	6883      	ldr	r3, [r0, #8]
 800c516:	2b00      	cmp	r3, #0
 800c518:	d18d      	bne.n	800c436 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c51a:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c51c:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c51e:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c520:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c524:	460a      	mov	r2, r1
 800c526:	f7ff fdf5 	bl	800c114 <HAL_SPI_TransmitReceive>
 800c52a:	e79c      	b.n	800c466 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c52c:	2002      	movs	r0, #2
}
 800c52e:	b002      	add	sp, #8
 800c530:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c534:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c536:	68db      	ldr	r3, [r3, #12]
 800c538:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c53c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c53e:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c540:	3b01      	subs	r3, #1
 800c542:	b29b      	uxth	r3, r3
 800c544:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c546:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c548:	b29b      	uxth	r3, r3
 800c54a:	2b00      	cmp	r3, #0
 800c54c:	d0d5      	beq.n	800c4fa <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c54e:	6823      	ldr	r3, [r4, #0]
 800c550:	689a      	ldr	r2, [r3, #8]
 800c552:	07d2      	lsls	r2, r2, #31
 800c554:	d4ee      	bmi.n	800c534 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c556:	f7fc fead 	bl	80092b4 <HAL_GetTick>
 800c55a:	1b80      	subs	r0, r0, r6
 800c55c:	42a8      	cmp	r0, r5
 800c55e:	d243      	bcs.n	800c5e8 <HAL_SPI_Receive+0x1c8>
 800c560:	e7f1      	b.n	800c546 <HAL_SPI_Receive+0x126>
 800c562:	f7fc fea7 	bl	80092b4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c566:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c568:	b29b      	uxth	r3, r3
 800c56a:	2b00      	cmp	r3, #0
 800c56c:	d0c5      	beq.n	800c4fa <HAL_SPI_Receive+0xda>
 800c56e:	6822      	ldr	r2, [r4, #0]
 800c570:	e7af      	b.n	800c4d2 <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c572:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c574:	b292      	uxth	r2, r2
 800c576:	2a00      	cmp	r2, #0
 800c578:	d0bf      	beq.n	800c4fa <HAL_SPI_Receive+0xda>
 800c57a:	1c6f      	adds	r7, r5, #1
 800c57c:	d013      	beq.n	800c5a6 <HAL_SPI_Receive+0x186>
 800c57e:	e02b      	b.n	800c5d8 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c580:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c582:	7b1b      	ldrb	r3, [r3, #12]
 800c584:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c586:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c58a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c58c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c590:	fa1f fc8c 	uxth.w	ip, ip
 800c594:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c598:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c59a:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c59c:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c59e:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c5a0:	2b00      	cmp	r3, #0
 800c5a2:	d0aa      	beq.n	800c4fa <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c5a4:	6823      	ldr	r3, [r4, #0]
 800c5a6:	689a      	ldr	r2, [r3, #8]
 800c5a8:	07d0      	lsls	r0, r2, #31
 800c5aa:	d4e9      	bmi.n	800c580 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c5ac:	f7fc fe82 	bl	80092b4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c5b0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c5b2:	b29b      	uxth	r3, r3
 800c5b4:	2b00      	cmp	r3, #0
 800c5b6:	d1f5      	bne.n	800c5a4 <HAL_SPI_Receive+0x184>
 800c5b8:	e79f      	b.n	800c4fa <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c5ba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c5bc:	7b1b      	ldrb	r3, [r3, #12]
 800c5be:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c5c0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c5c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c5c4:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c5c6:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c5c8:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c5ca:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c5cc:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c5ce:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c5d0:	b29b      	uxth	r3, r3
 800c5d2:	2b00      	cmp	r3, #0
 800c5d4:	d091      	beq.n	800c4fa <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c5d6:	6823      	ldr	r3, [r4, #0]
 800c5d8:	689a      	ldr	r2, [r3, #8]
 800c5da:	07d1      	lsls	r1, r2, #31
 800c5dc:	d4ed      	bmi.n	800c5ba <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c5de:	f7fc fe69 	bl	80092b4 <HAL_GetTick>
 800c5e2:	1b80      	subs	r0, r0, r6
 800c5e4:	42a8      	cmp	r0, r5
 800c5e6:	d3f2      	bcc.n	800c5ce <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c5e8:	2003      	movs	r0, #3
 800c5ea:	e736      	b.n	800c45a <HAL_SPI_Receive+0x3a>

0800c5ec <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c5ec:	2800      	cmp	r0, #0
 800c5ee:	f000 8087 	beq.w	800c700 <HAL_TIM_Base_Init+0x114>
{
 800c5f2:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c5f4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c5f8:	4604      	mov	r4, r0
 800c5fa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c5fe:	2b00      	cmp	r3, #0
 800c600:	d079      	beq.n	800c6f6 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c602:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c604:	493f      	ldr	r1, [pc, #252]	; (800c704 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c606:	2302      	movs	r3, #2
 800c608:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c60c:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c60e:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c610:	d05d      	beq.n	800c6ce <HAL_TIM_Base_Init+0xe2>
 800c612:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c616:	d031      	beq.n	800c67c <HAL_TIM_Base_Init+0x90>
 800c618:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c61c:	428a      	cmp	r2, r1
 800c61e:	d02d      	beq.n	800c67c <HAL_TIM_Base_Init+0x90>
 800c620:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c624:	428a      	cmp	r2, r1
 800c626:	d029      	beq.n	800c67c <HAL_TIM_Base_Init+0x90>
 800c628:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c62c:	428a      	cmp	r2, r1
 800c62e:	d025      	beq.n	800c67c <HAL_TIM_Base_Init+0x90>
 800c630:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c634:	428a      	cmp	r2, r1
 800c636:	d04a      	beq.n	800c6ce <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c638:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c63c:	428a      	cmp	r2, r1
 800c63e:	d021      	beq.n	800c684 <HAL_TIM_Base_Init+0x98>
 800c640:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c644:	428a      	cmp	r2, r1
 800c646:	d01d      	beq.n	800c684 <HAL_TIM_Base_Init+0x98>
 800c648:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c64c:	428a      	cmp	r2, r1
 800c64e:	d019      	beq.n	800c684 <HAL_TIM_Base_Init+0x98>
 800c650:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c654:	428a      	cmp	r2, r1
 800c656:	d015      	beq.n	800c684 <HAL_TIM_Base_Init+0x98>
 800c658:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c65c:	428a      	cmp	r2, r1
 800c65e:	d011      	beq.n	800c684 <HAL_TIM_Base_Init+0x98>
 800c660:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c664:	428a      	cmp	r2, r1
 800c666:	d00d      	beq.n	800c684 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c668:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c66a:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c66c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c670:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c672:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c674:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c676:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c678:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c67a:	e010      	b.n	800c69e <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c67c:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c67e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c682:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c684:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c686:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c688:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c68c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c68e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c692:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c694:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c696:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c698:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c69a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c69c:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c69e:	2301      	movs	r3, #1
 800c6a0:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c6a2:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c6a6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c6aa:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c6ae:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c6b2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c6b6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c6ba:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c6be:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c6c2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c6c6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c6ca:	2000      	movs	r0, #0
}
 800c6cc:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c6ce:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c6d0:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c6d2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c6d6:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c6d8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c6dc:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c6de:	69a1      	ldr	r1, [r4, #24]
 800c6e0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c6e4:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c6e6:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c6e8:	68e3      	ldr	r3, [r4, #12]
 800c6ea:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c6ec:	6863      	ldr	r3, [r4, #4]
 800c6ee:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c6f0:	6963      	ldr	r3, [r4, #20]
 800c6f2:	6313      	str	r3, [r2, #48]	; 0x30
 800c6f4:	e7d3      	b.n	800c69e <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c6f6:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c6fa:	f7f5 feb1 	bl	8002460 <HAL_TIM_Base_MspInit>
 800c6fe:	e780      	b.n	800c602 <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c700:	2001      	movs	r0, #1
}
 800c702:	4770      	bx	lr
 800c704:	40010000 	.word	0x40010000

0800c708 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c708:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c70c:	2b01      	cmp	r3, #1
 800c70e:	d12f      	bne.n	800c770 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c710:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c712:	4919      	ldr	r1, [pc, #100]	; (800c778 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c714:	2202      	movs	r2, #2
 800c716:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c71a:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c71c:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c71e:	f042 0201 	orr.w	r2, r2, #1
 800c722:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c724:	d019      	beq.n	800c75a <HAL_TIM_Base_Start_IT+0x52>
 800c726:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c72a:	d016      	beq.n	800c75a <HAL_TIM_Base_Start_IT+0x52>
 800c72c:	4a13      	ldr	r2, [pc, #76]	; (800c77c <HAL_TIM_Base_Start_IT+0x74>)
 800c72e:	4293      	cmp	r3, r2
 800c730:	d013      	beq.n	800c75a <HAL_TIM_Base_Start_IT+0x52>
 800c732:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c736:	4293      	cmp	r3, r2
 800c738:	d00f      	beq.n	800c75a <HAL_TIM_Base_Start_IT+0x52>
 800c73a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c73e:	4293      	cmp	r3, r2
 800c740:	d00b      	beq.n	800c75a <HAL_TIM_Base_Start_IT+0x52>
 800c742:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c746:	4293      	cmp	r3, r2
 800c748:	d007      	beq.n	800c75a <HAL_TIM_Base_Start_IT+0x52>
 800c74a:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c74e:	4293      	cmp	r3, r2
 800c750:	d003      	beq.n	800c75a <HAL_TIM_Base_Start_IT+0x52>
 800c752:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c756:	4293      	cmp	r3, r2
 800c758:	d104      	bne.n	800c764 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c75a:	689a      	ldr	r2, [r3, #8]
 800c75c:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c760:	2a06      	cmp	r2, #6
 800c762:	d007      	beq.n	800c774 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c764:	681a      	ldr	r2, [r3, #0]
 800c766:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c76a:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c76c:	601a      	str	r2, [r3, #0]
 800c76e:	4770      	bx	lr
    return HAL_ERROR;
 800c770:	2001      	movs	r0, #1
 800c772:	4770      	bx	lr
  return HAL_OK;
 800c774:	2000      	movs	r0, #0
}
 800c776:	4770      	bx	lr
 800c778:	40010000 	.word	0x40010000
 800c77c:	40000400 	.word	0x40000400

0800c780 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800c780:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800c784:	2b01      	cmp	r3, #1
 800c786:	d075      	beq.n	800c874 <HAL_TIM_ConfigClockSource+0xf4>
 800c788:	4602      	mov	r2, r0
{
 800c78a:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c78c:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800c78e:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c790:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c794:	2001      	movs	r0, #1
 800c796:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c79a:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c79c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800c7a0:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800c7a4:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800c7a6:	680b      	ldr	r3, [r1, #0]
 800c7a8:	2b60      	cmp	r3, #96	; 0x60
 800c7aa:	d065      	beq.n	800c878 <HAL_TIM_ConfigClockSource+0xf8>
 800c7ac:	d824      	bhi.n	800c7f8 <HAL_TIM_ConfigClockSource+0x78>
 800c7ae:	2b40      	cmp	r3, #64	; 0x40
 800c7b0:	d07c      	beq.n	800c8ac <HAL_TIM_ConfigClockSource+0x12c>
 800c7b2:	d94b      	bls.n	800c84c <HAL_TIM_ConfigClockSource+0xcc>
 800c7b4:	2b50      	cmp	r3, #80	; 0x50
 800c7b6:	d117      	bne.n	800c7e8 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c7b8:	684b      	ldr	r3, [r1, #4]
 800c7ba:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800c7bc:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c7be:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c7c2:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c7c4:	6a23      	ldr	r3, [r4, #32]
 800c7c6:	f023 0301 	bic.w	r3, r3, #1
 800c7ca:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c7cc:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c7ce:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c7d2:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800c7d6:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c7d8:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800c7da:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800c7dc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c7e0:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800c7e4:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c7e6:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800c7e8:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800c7ea:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800c7ec:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c7f0:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800c7f4:	bc30      	pop	{r4, r5}
 800c7f6:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800c7f8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c7fc:	d038      	beq.n	800c870 <HAL_TIM_ConfigClockSource+0xf0>
 800c7fe:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c802:	d110      	bne.n	800c826 <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c804:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c808:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c80a:	432b      	orrs	r3, r5
 800c80c:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c80e:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c812:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c816:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800c818:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c81a:	68a3      	ldr	r3, [r4, #8]
 800c81c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800c820:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800c822:	60a3      	str	r3, [r4, #8]
      break;
 800c824:	e7e0      	b.n	800c7e8 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c826:	2b70      	cmp	r3, #112	; 0x70
 800c828:	d1de      	bne.n	800c7e8 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c82a:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800c82e:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c830:	432b      	orrs	r3, r5
 800c832:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c834:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c838:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800c83c:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800c83e:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800c840:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800c842:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800c846:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800c848:	60a3      	str	r3, [r4, #8]
      break;
 800c84a:	e7cd      	b.n	800c7e8 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c84c:	2b20      	cmp	r3, #32
 800c84e:	d002      	beq.n	800c856 <HAL_TIM_ConfigClockSource+0xd6>
 800c850:	d90a      	bls.n	800c868 <HAL_TIM_ConfigClockSource+0xe8>
 800c852:	2b30      	cmp	r3, #48	; 0x30
 800c854:	d1c8      	bne.n	800c7e8 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800c856:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c858:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c85c:	430b      	orrs	r3, r1
 800c85e:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800c862:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c864:	60a3      	str	r3, [r4, #8]
}
 800c866:	e7bf      	b.n	800c7e8 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800c868:	f033 0110 	bics.w	r1, r3, #16
 800c86c:	d1bc      	bne.n	800c7e8 <HAL_TIM_ConfigClockSource+0x68>
 800c86e:	e7f2      	b.n	800c856 <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800c870:	2000      	movs	r0, #0
 800c872:	e7b9      	b.n	800c7e8 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800c874:	2002      	movs	r0, #2
}
 800c876:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c878:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c87a:	6848      	ldr	r0, [r1, #4]
 800c87c:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c87e:	f023 0310 	bic.w	r3, r3, #16
 800c882:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c884:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c886:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c888:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c88c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800c890:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c894:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800c898:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c89a:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c89c:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c89e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c8a2:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800c8a6:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c8a8:	60a3      	str	r3, [r4, #8]
}
 800c8aa:	e79d      	b.n	800c7e8 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c8ac:	684b      	ldr	r3, [r1, #4]
 800c8ae:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800c8b0:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c8b2:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c8b6:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c8b8:	6a23      	ldr	r3, [r4, #32]
 800c8ba:	f023 0301 	bic.w	r3, r3, #1
 800c8be:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c8c0:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c8c2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c8c6:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c8ca:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800c8cc:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800c8ce:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c8d0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800c8d4:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800c8d8:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800c8da:	60a3      	str	r3, [r4, #8]
}
 800c8dc:	e784      	b.n	800c7e8 <HAL_TIM_ConfigClockSource+0x68>
 800c8de:	bf00      	nop

0800c8e0 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800c8e0:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800c8e4:	2a01      	cmp	r2, #1
 800c8e6:	d050      	beq.n	800c98a <HAL_TIM_SlaveConfigSynchro+0xaa>
 800c8e8:	4603      	mov	r3, r0
{
 800c8ea:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800c8ec:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800c8ee:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800c8f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800c8f4:	2001      	movs	r0, #1
 800c8f6:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800c8fa:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c8fc:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c8fe:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800c900:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800c904:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800c906:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800c90a:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800c90c:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800c90e:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800c910:	d060      	beq.n	800c9d4 <HAL_TIM_SlaveConfigSynchro+0xf4>
 800c912:	d90f      	bls.n	800c934 <HAL_TIM_SlaveConfigSynchro+0x54>
 800c914:	2860      	cmp	r0, #96	; 0x60
 800c916:	d03a      	beq.n	800c98e <HAL_TIM_SlaveConfigSynchro+0xae>
 800c918:	2870      	cmp	r0, #112	; 0x70
 800c91a:	d10e      	bne.n	800c93a <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c91c:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800c920:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c922:	432a      	orrs	r2, r5
 800c924:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800c926:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800c92a:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800c92e:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800c930:	60a2      	str	r2, [r4, #8]
 800c932:	e00f      	b.n	800c954 <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800c934:	2840      	cmp	r0, #64	; 0x40
 800c936:	d03d      	beq.n	800c9b4 <HAL_TIM_SlaveConfigSynchro+0xd4>
 800c938:	d907      	bls.n	800c94a <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800c93a:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c93c:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c93e:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c942:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800c946:	bc30      	pop	{r4, r5}
 800c948:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c94a:	2820      	cmp	r0, #32
 800c94c:	d002      	beq.n	800c954 <HAL_TIM_SlaveConfigSynchro+0x74>
 800c94e:	d912      	bls.n	800c976 <HAL_TIM_SlaveConfigSynchro+0x96>
 800c950:	2830      	cmp	r0, #48	; 0x30
 800c952:	d1f2      	bne.n	800c93a <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800c954:	68e2      	ldr	r2, [r4, #12]
 800c956:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c95a:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c95c:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800c95e:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800c960:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800c962:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800c966:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800c968:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800c96c:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800c970:	4608      	mov	r0, r1
}
 800c972:	bc30      	pop	{r4, r5}
 800c974:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800c976:	f030 0210 	bics.w	r2, r0, #16
 800c97a:	d0eb      	beq.n	800c954 <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800c97c:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800c97e:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800c980:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800c984:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800c988:	e7dd      	b.n	800c946 <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800c98a:	2002      	movs	r0, #2
}
 800c98c:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c98e:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800c990:	6888      	ldr	r0, [r1, #8]
 800c992:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800c994:	f022 0210 	bic.w	r2, r2, #16
 800c998:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c99a:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800c99c:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800c99e:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800c9a2:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800c9a6:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800c9aa:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800c9ae:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800c9b0:	6222      	str	r2, [r4, #32]
 800c9b2:	e7cf      	b.n	800c954 <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800c9b4:	2d05      	cmp	r5, #5
 800c9b6:	d0c0      	beq.n	800c93a <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800c9b8:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c9ba:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c9bc:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800c9be:	f022 0201 	bic.w	r2, r2, #1
 800c9c2:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800c9c4:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c9c6:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800c9ca:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800c9ce:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800c9d0:	6220      	str	r0, [r4, #32]
      break;
 800c9d2:	e7bf      	b.n	800c954 <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800c9d4:	688a      	ldr	r2, [r1, #8]
 800c9d6:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800c9d8:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800c9da:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800c9de:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800c9e0:	6a22      	ldr	r2, [r4, #32]
 800c9e2:	f022 0201 	bic.w	r2, r2, #1
 800c9e6:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800c9e8:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800c9ea:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800c9ee:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800c9f2:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800c9f4:	6221      	str	r1, [r4, #32]
 800c9f6:	e7ad      	b.n	800c954 <HAL_TIM_SlaveConfigSynchro+0x74>

0800c9f8 <HAL_TIM_OC_DelayElapsedCallback>:
 800c9f8:	4770      	bx	lr
 800c9fa:	bf00      	nop

0800c9fc <HAL_TIM_IC_CaptureCallback>:
 800c9fc:	4770      	bx	lr
 800c9fe:	bf00      	nop

0800ca00 <HAL_TIM_PWM_PulseFinishedCallback>:
 800ca00:	4770      	bx	lr
 800ca02:	bf00      	nop

0800ca04 <HAL_TIM_TriggerCallback>:
 800ca04:	4770      	bx	lr
 800ca06:	bf00      	nop

0800ca08 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800ca08:	6803      	ldr	r3, [r0, #0]
 800ca0a:	691a      	ldr	r2, [r3, #16]
 800ca0c:	0791      	lsls	r1, r2, #30
{
 800ca0e:	b510      	push	{r4, lr}
 800ca10:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800ca12:	d502      	bpl.n	800ca1a <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800ca14:	68da      	ldr	r2, [r3, #12]
 800ca16:	0792      	lsls	r2, r2, #30
 800ca18:	d45f      	bmi.n	800cada <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800ca1a:	691a      	ldr	r2, [r3, #16]
 800ca1c:	0750      	lsls	r0, r2, #29
 800ca1e:	d502      	bpl.n	800ca26 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800ca20:	68da      	ldr	r2, [r3, #12]
 800ca22:	0751      	lsls	r1, r2, #29
 800ca24:	d446      	bmi.n	800cab4 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800ca26:	691a      	ldr	r2, [r3, #16]
 800ca28:	0712      	lsls	r2, r2, #28
 800ca2a:	d502      	bpl.n	800ca32 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800ca2c:	68da      	ldr	r2, [r3, #12]
 800ca2e:	0710      	lsls	r0, r2, #28
 800ca30:	d42e      	bmi.n	800ca90 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800ca32:	691a      	ldr	r2, [r3, #16]
 800ca34:	06d2      	lsls	r2, r2, #27
 800ca36:	d502      	bpl.n	800ca3e <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800ca38:	68da      	ldr	r2, [r3, #12]
 800ca3a:	06d0      	lsls	r0, r2, #27
 800ca3c:	d418      	bmi.n	800ca70 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800ca3e:	691a      	ldr	r2, [r3, #16]
 800ca40:	07d1      	lsls	r1, r2, #31
 800ca42:	d502      	bpl.n	800ca4a <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800ca44:	68da      	ldr	r2, [r3, #12]
 800ca46:	07d2      	lsls	r2, r2, #31
 800ca48:	d45d      	bmi.n	800cb06 <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800ca4a:	691a      	ldr	r2, [r3, #16]
 800ca4c:	0610      	lsls	r0, r2, #24
 800ca4e:	d502      	bpl.n	800ca56 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800ca50:	68da      	ldr	r2, [r3, #12]
 800ca52:	0611      	lsls	r1, r2, #24
 800ca54:	d45f      	bmi.n	800cb16 <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800ca56:	691a      	ldr	r2, [r3, #16]
 800ca58:	0652      	lsls	r2, r2, #25
 800ca5a:	d502      	bpl.n	800ca62 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800ca5c:	68da      	ldr	r2, [r3, #12]
 800ca5e:	0650      	lsls	r0, r2, #25
 800ca60:	d461      	bmi.n	800cb26 <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800ca62:	691a      	ldr	r2, [r3, #16]
 800ca64:	0691      	lsls	r1, r2, #26
 800ca66:	d502      	bpl.n	800ca6e <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800ca68:	68da      	ldr	r2, [r3, #12]
 800ca6a:	0692      	lsls	r2, r2, #26
 800ca6c:	d443      	bmi.n	800caf6 <HAL_TIM_IRQHandler+0xee>
}
 800ca6e:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800ca70:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800ca74:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800ca76:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800ca78:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800ca7a:	69db      	ldr	r3, [r3, #28]
 800ca7c:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800ca80:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800ca82:	d064      	beq.n	800cb4e <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800ca84:	f7ff ffba 	bl	800c9fc <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ca88:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800ca8a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800ca8c:	7722      	strb	r2, [r4, #28]
 800ca8e:	e7d6      	b.n	800ca3e <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800ca90:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800ca94:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800ca96:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800ca98:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800ca9a:	69db      	ldr	r3, [r3, #28]
 800ca9c:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800ca9e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800caa0:	d152      	bne.n	800cb48 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800caa2:	f7ff ffa9 	bl	800c9f8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800caa6:	4620      	mov	r0, r4
 800caa8:	f7ff ffaa 	bl	800ca00 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800caac:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800caae:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cab0:	7722      	strb	r2, [r4, #28]
 800cab2:	e7be      	b.n	800ca32 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800cab4:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800cab8:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800caba:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800cabc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cabe:	699b      	ldr	r3, [r3, #24]
 800cac0:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800cac4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cac6:	d13c      	bne.n	800cb42 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cac8:	f7ff ff96 	bl	800c9f8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cacc:	4620      	mov	r0, r4
 800cace:	f7ff ff97 	bl	800ca00 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cad2:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800cad4:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cad6:	7722      	strb	r2, [r4, #28]
 800cad8:	e7a5      	b.n	800ca26 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cada:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800cade:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cae0:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800cae2:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800cae4:	699b      	ldr	r3, [r3, #24]
 800cae6:	079b      	lsls	r3, r3, #30
 800cae8:	d025      	beq.n	800cb36 <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800caea:	f7ff ff87 	bl	800c9fc <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800caee:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800caf0:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800caf2:	7722      	strb	r2, [r4, #28]
 800caf4:	e791      	b.n	800ca1a <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800caf6:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800cafa:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800cafc:	611a      	str	r2, [r3, #16]
}
 800cafe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800cb02:	f000 b86b 	b.w	800cbdc <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800cb06:	f06f 0201 	mvn.w	r2, #1
 800cb0a:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800cb0c:	4620      	mov	r0, r4
 800cb0e:	f7f5 f975 	bl	8001dfc <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800cb12:	6823      	ldr	r3, [r4, #0]
 800cb14:	e799      	b.n	800ca4a <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800cb16:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800cb1a:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800cb1c:	4620      	mov	r0, r4
 800cb1e:	f000 f85f 	bl	800cbe0 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cb22:	6823      	ldr	r3, [r4, #0]
 800cb24:	e797      	b.n	800ca56 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800cb26:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800cb2a:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800cb2c:	4620      	mov	r0, r4
 800cb2e:	f7ff ff69 	bl	800ca04 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cb32:	6823      	ldr	r3, [r4, #0]
 800cb34:	e795      	b.n	800ca62 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800cb36:	f7ff ff5f 	bl	800c9f8 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cb3a:	4620      	mov	r0, r4
 800cb3c:	f7ff ff60 	bl	800ca00 <HAL_TIM_PWM_PulseFinishedCallback>
 800cb40:	e7d5      	b.n	800caee <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800cb42:	f7ff ff5b 	bl	800c9fc <HAL_TIM_IC_CaptureCallback>
 800cb46:	e7c4      	b.n	800cad2 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800cb48:	f7ff ff58 	bl	800c9fc <HAL_TIM_IC_CaptureCallback>
 800cb4c:	e7ae      	b.n	800caac <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cb4e:	f7ff ff53 	bl	800c9f8 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cb52:	4620      	mov	r0, r4
 800cb54:	f7ff ff54 	bl	800ca00 <HAL_TIM_PWM_PulseFinishedCallback>
 800cb58:	e796      	b.n	800ca88 <HAL_TIM_IRQHandler+0x80>
 800cb5a:	bf00      	nop

0800cb5c <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800cb5c:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800cb60:	2b01      	cmp	r3, #1
 800cb62:	d037      	beq.n	800cbd4 <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800cb64:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800cb66:	2202      	movs	r2, #2
{
 800cb68:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800cb6a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800cb6e:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800cb70:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800cb72:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800cb74:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800cb78:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800cb7a:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cb7c:	4a16      	ldr	r2, [pc, #88]	; (800cbd8 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800cb7e:	4293      	cmp	r3, r2
 800cb80:	d01a      	beq.n	800cbb8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cb82:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800cb86:	d017      	beq.n	800cbb8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cb88:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800cb8c:	4293      	cmp	r3, r2
 800cb8e:	d013      	beq.n	800cbb8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cb90:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cb94:	4293      	cmp	r3, r2
 800cb96:	d00f      	beq.n	800cbb8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cb98:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cb9c:	4293      	cmp	r3, r2
 800cb9e:	d00b      	beq.n	800cbb8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cba0:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800cba4:	4293      	cmp	r3, r2
 800cba6:	d007      	beq.n	800cbb8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cba8:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800cbac:	4293      	cmp	r3, r2
 800cbae:	d003      	beq.n	800cbb8 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800cbb0:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800cbb4:	4293      	cmp	r3, r2
 800cbb6:	d104      	bne.n	800cbc2 <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800cbb8:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800cbba:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800cbbe:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800cbc0:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800cbc2:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800cbc4:	2201      	movs	r2, #1
 800cbc6:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800cbca:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800cbce:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800cbd0:	4618      	mov	r0, r3
}
 800cbd2:	4770      	bx	lr
  __HAL_LOCK(htim);
 800cbd4:	2002      	movs	r0, #2
}
 800cbd6:	4770      	bx	lr
 800cbd8:	40010000 	.word	0x40010000

0800cbdc <HAL_TIMEx_CommutCallback>:
 800cbdc:	4770      	bx	lr
 800cbde:	bf00      	nop

0800cbe0 <HAL_TIMEx_BreakCallback>:
 800cbe0:	4770      	bx	lr
 800cbe2:	bf00      	nop

0800cbe4 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cbe4:	680b      	ldr	r3, [r1, #0]
{
 800cbe6:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cbe8:	b9d3      	cbnz	r3, 800cc20 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cbea:	6803      	ldr	r3, [r0, #0]
 800cbec:	684c      	ldr	r4, [r1, #4]
 800cbee:	688a      	ldr	r2, [r1, #8]
 800cbf0:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cbf4:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800cbf8:	4323      	orrs	r3, r4
 800cbfa:	4313      	orrs	r3, r2
 800cbfc:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800cc00:	4323      	orrs	r3, r4
 800cc02:	4313      	orrs	r3, r2
 800cc04:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800cc08:	4323      	orrs	r3, r4
 800cc0a:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800cc0e:	4313      	orrs	r3, r2
 800cc10:	432b      	orrs	r3, r5
 800cc12:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800cc14:	4323      	orrs	r3, r4
 800cc16:	4313      	orrs	r3, r2
 800cc18:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800cc1a:	bc30      	pop	{r4, r5}
 800cc1c:	2000      	movs	r0, #0
 800cc1e:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cc20:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800cc24:	6803      	ldr	r3, [r0, #0]
 800cc26:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800cc2a:	4323      	orrs	r3, r4
 800cc2c:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800cc2e:	4313      	orrs	r3, r2
 800cc30:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cc32:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cc34:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cc36:	6843      	ldr	r3, [r0, #4]
 800cc38:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800cc3c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800cc40:	4313      	orrs	r3, r2
 800cc42:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800cc46:	4323      	orrs	r3, r4
 800cc48:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800cc4c:	4313      	orrs	r3, r2
 800cc4e:	432b      	orrs	r3, r5
 800cc50:	698a      	ldr	r2, [r1, #24]
 800cc52:	4323      	orrs	r3, r4
 800cc54:	4313      	orrs	r3, r2
 800cc56:	6043      	str	r3, [r0, #4]
}
 800cc58:	bc30      	pop	{r4, r5}
 800cc5a:	2000      	movs	r0, #0
 800cc5c:	4770      	bx	lr
 800cc5e:	bf00      	nop

0800cc60 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800cc60:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cc62:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800cc64:	bb02      	cbnz	r2, 800cca8 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cc66:	e9d1 2400 	ldrd	r2, r4, [r1]
 800cc6a:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cc6e:	3c01      	subs	r4, #1
 800cc70:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800cc74:	3a01      	subs	r2, #1
 800cc76:	4313      	orrs	r3, r2
 800cc78:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800cc7c:	3c01      	subs	r4, #1
 800cc7e:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800cc82:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800cc86:	3a01      	subs	r2, #1
 800cc88:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800cc8c:	698a      	ldr	r2, [r1, #24]
 800cc8e:	1e69      	subs	r1, r5, #1
 800cc90:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cc94:	1e61      	subs	r1, r4, #1
 800cc96:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800cc9a:	3a01      	subs	r2, #1
 800cc9c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800cca0:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800cca2:	bc30      	pop	{r4, r5}
 800cca4:	2000      	movs	r0, #0
 800cca6:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cca8:	68cc      	ldr	r4, [r1, #12]
 800ccaa:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ccac:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ccae:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800ccb2:	3c01      	subs	r4, #1
 800ccb4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800ccb8:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800ccbc:	3a01      	subs	r2, #1
 800ccbe:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800ccc2:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ccc4:	e9d1 2400 	ldrd	r2, r4, [r1]
 800ccc8:	68c3      	ldr	r3, [r0, #12]
 800ccca:	3c01      	subs	r4, #1
 800cccc:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ccd0:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800ccd4:	3a01      	subs	r2, #1
 800ccd6:	690c      	ldr	r4, [r1, #16]
 800ccd8:	4313      	orrs	r3, r2
 800ccda:	698a      	ldr	r2, [r1, #24]
 800ccdc:	1e69      	subs	r1, r5, #1
 800ccde:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800cce2:	1e61      	subs	r1, r4, #1
 800cce4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800cce8:	3a01      	subs	r2, #1
 800ccea:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800ccee:	60c3      	str	r3, [r0, #12]
}
 800ccf0:	bc30      	pop	{r4, r5}
 800ccf2:	2000      	movs	r0, #0
 800ccf4:	4770      	bx	lr
 800ccf6:	bf00      	nop

0800ccf8 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800ccf8:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800ccfa:	680b      	ldr	r3, [r1, #0]
{
 800ccfc:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800ccfe:	684a      	ldr	r2, [r1, #4]
{
 800cd00:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cd02:	4313      	orrs	r3, r2
 800cd04:	6900      	ldr	r0, [r0, #16]
 800cd06:	68ca      	ldr	r2, [r1, #12]
 800cd08:	0d80      	lsrs	r0, r0, #22
 800cd0a:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800cd0e:	688a      	ldr	r2, [r1, #8]
 800cd10:	0580      	lsls	r0, r0, #22
 800cd12:	4303      	orrs	r3, r0
 800cd14:	3a01      	subs	r2, #1
 800cd16:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800cd1a:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cd1c:	f7fc faca 	bl	80092b4 <HAL_GetTick>
 800cd20:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cd22:	1c6b      	adds	r3, r5, #1
 800cd24:	d105      	bne.n	800cd32 <FMC_SDRAM_SendCommand+0x3a>
 800cd26:	69a3      	ldr	r3, [r4, #24]
 800cd28:	f013 0320 	ands.w	r3, r3, #32
 800cd2c:	d1fb      	bne.n	800cd26 <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800cd2e:	4618      	mov	r0, r3
}
 800cd30:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cd32:	69a3      	ldr	r3, [r4, #24]
 800cd34:	f013 0320 	ands.w	r3, r3, #32
 800cd38:	d0f9      	beq.n	800cd2e <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cd3a:	b125      	cbz	r5, 800cd46 <FMC_SDRAM_SendCommand+0x4e>
 800cd3c:	f7fc faba 	bl	80092b4 <HAL_GetTick>
 800cd40:	1b80      	subs	r0, r0, r6
 800cd42:	42a8      	cmp	r0, r5
 800cd44:	d9ed      	bls.n	800cd22 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800cd46:	2003      	movs	r0, #3
}
 800cd48:	bd70      	pop	{r4, r5, r6, pc}
 800cd4a:	bf00      	nop

0800cd4c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cd4c:	6943      	ldr	r3, [r0, #20]
 800cd4e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800cd52:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cd54:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800cd58:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800cd5c:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cd5e:	6151      	str	r1, [r2, #20]
}
 800cd60:	4770      	bx	lr
 800cd62:	bf00      	nop

0800cd64 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cd64:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cd66:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cd6a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cd6c:	f002 fb02 	bl	800f374 <xTaskGetSchedulerState>
 800cd70:	2801      	cmp	r0, #1
 800cd72:	d100      	bne.n	800cd76 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cd74:	bd08      	pop	{r3, pc}
 800cd76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cd7a:	f000 bc43 	b.w	800d604 <xPortSysTickHandler>
 800cd7e:	bf00      	nop

0800cd80 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cd80:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cd84:	b92b      	cbnz	r3, 800cd92 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cd86:	4b06      	ldr	r3, [pc, #24]	; (800cda0 <osKernelInitialize+0x20>)
 800cd88:	6818      	ldr	r0, [r3, #0]
 800cd8a:	b928      	cbnz	r0, 800cd98 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cd8c:	2201      	movs	r2, #1
 800cd8e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cd90:	4770      	bx	lr
    stat = osErrorISR;
 800cd92:	f06f 0005 	mvn.w	r0, #5
 800cd96:	4770      	bx	lr
    } else {
      stat = osError;
 800cd98:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cd9c:	4770      	bx	lr
 800cd9e:	bf00      	nop
 800cda0:	20002328 	.word	0x20002328

0800cda4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cda4:	b510      	push	{r4, lr}
 800cda6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cdaa:	b974      	cbnz	r4, 800cdca <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cdac:	4b08      	ldr	r3, [pc, #32]	; (800cdd0 <osKernelStart+0x2c>)
 800cdae:	681a      	ldr	r2, [r3, #0]
 800cdb0:	2a01      	cmp	r2, #1
 800cdb2:	d107      	bne.n	800cdc4 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cdb4:	4907      	ldr	r1, [pc, #28]	; (800cdd4 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cdb6:	2202      	movs	r2, #2
 800cdb8:	77cc      	strb	r4, [r1, #31]
 800cdba:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cdbc:	f002 f8b4 	bl	800ef28 <vTaskStartScheduler>
      stat = osOK;
 800cdc0:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cdc2:	bd10      	pop	{r4, pc}
      stat = osError;
 800cdc4:	f04f 30ff 	mov.w	r0, #4294967295
}
 800cdc8:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cdca:	f06f 0005 	mvn.w	r0, #5
}
 800cdce:	bd10      	pop	{r4, pc}
 800cdd0:	20002328 	.word	0x20002328
 800cdd4:	e000ed00 	.word	0xe000ed00

0800cdd8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cdd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cdda:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cddc:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cdde:	4615      	mov	r5, r2
  hTask = NULL;
 800cde0:	9405      	str	r4, [sp, #20]
 800cde2:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cde6:	b9ea      	cbnz	r2, 800ce24 <osThreadNew+0x4c>
 800cde8:	b350      	cbz	r0, 800ce40 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cdea:	b1f5      	cbz	r5, 800ce2a <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cdec:	69ab      	ldr	r3, [r5, #24]
 800cdee:	bb5b      	cbnz	r3, 800ce48 <osThreadNew+0x70>
 800cdf0:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cdf2:	686a      	ldr	r2, [r5, #4]
 800cdf4:	07d2      	lsls	r2, r2, #31
 800cdf6:	d423      	bmi.n	800ce40 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cdf8:	696e      	ldr	r6, [r5, #20]
 800cdfa:	b34e      	cbz	r6, 800ce50 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cdfc:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ce00:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800ce02:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ce04:	b34c      	cbz	r4, 800ce5a <osThreadNew+0x82>
 800ce06:	68ea      	ldr	r2, [r5, #12]
 800ce08:	2aab      	cmp	r2, #171	; 0xab
 800ce0a:	d919      	bls.n	800ce40 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800ce0c:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800ce0e:	b1bd      	cbz	r5, 800ce40 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800ce10:	b1b6      	cbz	r6, 800ce40 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800ce12:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800ce16:	9300      	str	r3, [sp, #0]
 800ce18:	4662      	mov	r2, ip
 800ce1a:	460b      	mov	r3, r1
 800ce1c:	4639      	mov	r1, r7
 800ce1e:	f001 ffc1 	bl	800eda4 <xTaskCreateStatic>
 800ce22:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800ce24:	4620      	mov	r0, r4
 800ce26:	b007      	add	sp, #28
 800ce28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ce2a:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800ce2c:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800ce2e:	ac05      	add	r4, sp, #20
 800ce30:	9300      	str	r3, [sp, #0]
 800ce32:	9401      	str	r4, [sp, #4]
 800ce34:	460b      	mov	r3, r1
 800ce36:	4629      	mov	r1, r5
 800ce38:	f001 ffee 	bl	800ee18 <xTaskCreate>
 800ce3c:	2801      	cmp	r0, #1
 800ce3e:	d00a      	beq.n	800ce56 <osThreadNew+0x7e>
        return (NULL);
 800ce40:	2400      	movs	r4, #0
}
 800ce42:	4620      	mov	r0, r4
 800ce44:	b007      	add	sp, #28
 800ce46:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800ce48:	1e5c      	subs	r4, r3, #1
 800ce4a:	2c37      	cmp	r4, #55	; 0x37
 800ce4c:	d9d1      	bls.n	800cdf2 <osThreadNew+0x1a>
 800ce4e:	e7f7      	b.n	800ce40 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800ce50:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800ce54:	e7d4      	b.n	800ce00 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800ce56:	9c05      	ldr	r4, [sp, #20]
 800ce58:	e7e4      	b.n	800ce24 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800ce5a:	68ee      	ldr	r6, [r5, #12]
 800ce5c:	2e00      	cmp	r6, #0
 800ce5e:	d1e1      	bne.n	800ce24 <osThreadNew+0x4c>
 800ce60:	692d      	ldr	r5, [r5, #16]
 800ce62:	2d00      	cmp	r5, #0
 800ce64:	d1de      	bne.n	800ce24 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800ce66:	fa1f f28c 	uxth.w	r2, ip
 800ce6a:	463d      	mov	r5, r7
 800ce6c:	e7df      	b.n	800ce2e <osThreadNew+0x56>
 800ce6e:	bf00      	nop

0800ce70 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800ce70:	b510      	push	{r4, lr}
 800ce72:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ce76:	b92c      	cbnz	r4, 800ce84 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800ce78:	b900      	cbnz	r0, 800ce7c <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800ce7a:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800ce7c:	f001 fffe 	bl	800ee7c <vTaskDelay>
    stat = osOK;
 800ce80:	4620      	mov	r0, r4
}
 800ce82:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ce84:	f06f 0005 	mvn.w	r0, #5
}
 800ce88:	bd10      	pop	{r4, pc}
 800ce8a:	bf00      	nop

0800ce8c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800ce8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce8e:	b083      	sub	sp, #12
 800ce90:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800ce94:	b9fe      	cbnz	r6, 800ced6 <osSemaphoreNew+0x4a>
 800ce96:	b1f0      	cbz	r0, 800ced6 <osSemaphoreNew+0x4a>
 800ce98:	4288      	cmp	r0, r1
 800ce9a:	460f      	mov	r7, r1
 800ce9c:	d31b      	bcc.n	800ced6 <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800ce9e:	4615      	mov	r5, r2
 800cea0:	b192      	cbz	r2, 800cec8 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cea2:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800cea6:	b1d2      	cbz	r2, 800cede <osSemaphoreNew+0x52>
 800cea8:	2b4f      	cmp	r3, #79	; 0x4f
 800ceaa:	d914      	bls.n	800ced6 <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800ceac:	2801      	cmp	r0, #1
 800ceae:	d038      	beq.n	800cf22 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800ceb0:	f000 fd8e 	bl	800d9d0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800ceb4:	4604      	mov	r4, r0
 800ceb6:	b170      	cbz	r0, 800ced6 <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800ceb8:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800ceba:	4620      	mov	r0, r4
 800cebc:	4629      	mov	r1, r5
 800cebe:	f001 fc39 	bl	800e734 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cec2:	4620      	mov	r0, r4
 800cec4:	b003      	add	sp, #12
 800cec6:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800cec8:	2801      	cmp	r0, #1
 800ceca:	d012      	beq.n	800cef2 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cecc:	f000 fde0 	bl	800da90 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800ced0:	4604      	mov	r4, r0
 800ced2:	2800      	cmp	r0, #0
 800ced4:	d1f1      	bne.n	800ceba <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800ced6:	2400      	movs	r4, #0
}
 800ced8:	4620      	mov	r0, r4
 800ceda:	b003      	add	sp, #12
 800cedc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cede:	2b00      	cmp	r3, #0
 800cee0:	d1f9      	bne.n	800ced6 <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800cee2:	2801      	cmp	r0, #1
 800cee4:	d005      	beq.n	800cef2 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cee6:	f000 fdd3 	bl	800da90 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800ceea:	4604      	mov	r4, r0
 800ceec:	2800      	cmp	r0, #0
 800ceee:	d1e3      	bne.n	800ceb8 <osSemaphoreNew+0x2c>
 800cef0:	e7f1      	b.n	800ced6 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800cef2:	2203      	movs	r2, #3
 800cef4:	2100      	movs	r1, #0
 800cef6:	2001      	movs	r0, #1
 800cef8:	f000 fd28 	bl	800d94c <xQueueGenericCreate>
 800cefc:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cefe:	2c00      	cmp	r4, #0
 800cf00:	d0e9      	beq.n	800ced6 <osSemaphoreNew+0x4a>
 800cf02:	b917      	cbnz	r7, 800cf0a <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800cf04:	2d00      	cmp	r5, #0
 800cf06:	d1d7      	bne.n	800ceb8 <osSemaphoreNew+0x2c>
 800cf08:	e7d7      	b.n	800ceba <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cf0a:	2300      	movs	r3, #0
 800cf0c:	461a      	mov	r2, r3
 800cf0e:	4619      	mov	r1, r3
 800cf10:	4620      	mov	r0, r4
 800cf12:	f000 fe03 	bl	800db1c <xQueueGenericSend>
 800cf16:	2801      	cmp	r0, #1
 800cf18:	d0f4      	beq.n	800cf04 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800cf1a:	4620      	mov	r0, r4
 800cf1c:	f001 fbc4 	bl	800e6a8 <vQueueDelete>
 800cf20:	e7d9      	b.n	800ced6 <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800cf22:	4613      	mov	r3, r2
 800cf24:	2203      	movs	r2, #3
 800cf26:	9200      	str	r2, [sp, #0]
 800cf28:	4631      	mov	r1, r6
 800cf2a:	4632      	mov	r2, r6
 800cf2c:	f000 fca0 	bl	800d870 <xQueueGenericCreateStatic>
 800cf30:	4604      	mov	r4, r0
 800cf32:	e7e4      	b.n	800cefe <osSemaphoreNew+0x72>

0800cf34 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cf34:	b370      	cbz	r0, 800cf94 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800cf36:	b510      	push	{r4, lr}
 800cf38:	460c      	mov	r4, r1
 800cf3a:	b082      	sub	sp, #8
 800cf3c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cf40:	b1c3      	cbz	r3, 800cf74 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800cf42:	bb21      	cbnz	r1, 800cf8e <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cf44:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cf46:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800cf48:	f001 fb2c 	bl	800e5a4 <xQueueReceiveFromISR>
 800cf4c:	2801      	cmp	r0, #1
 800cf4e:	d11a      	bne.n	800cf86 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cf50:	9b01      	ldr	r3, [sp, #4]
 800cf52:	b913      	cbnz	r3, 800cf5a <osSemaphoreAcquire+0x26>
  stat = osOK;
 800cf54:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cf56:	b002      	add	sp, #8
 800cf58:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800cf5a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cf5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cf62:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cf66:	f3bf 8f4f 	dsb	sy
 800cf6a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cf6e:	4620      	mov	r0, r4
}
 800cf70:	b002      	add	sp, #8
 800cf72:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800cf74:	f001 f98c 	bl	800e290 <xQueueSemaphoreTake>
 800cf78:	2801      	cmp	r0, #1
 800cf7a:	d0eb      	beq.n	800cf54 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800cf7c:	b11c      	cbz	r4, 800cf86 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800cf7e:	f06f 0001 	mvn.w	r0, #1
}
 800cf82:	b002      	add	sp, #8
 800cf84:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800cf86:	f06f 0002 	mvn.w	r0, #2
}
 800cf8a:	b002      	add	sp, #8
 800cf8c:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800cf8e:	f06f 0003 	mvn.w	r0, #3
 800cf92:	e7e0      	b.n	800cf56 <osSemaphoreAcquire+0x22>
 800cf94:	f06f 0003 	mvn.w	r0, #3
}
 800cf98:	4770      	bx	lr
 800cf9a:	bf00      	nop

0800cf9c <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800cf9c:	b330      	cbz	r0, 800cfec <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800cf9e:	b510      	push	{r4, lr}
 800cfa0:	b082      	sub	sp, #8
 800cfa2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800cfa6:	b1ab      	cbz	r3, 800cfd4 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800cfa8:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cfaa:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800cfac:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800cfae:	f000 ff99 	bl	800dee4 <xQueueGiveFromISR>
 800cfb2:	2801      	cmp	r0, #1
 800cfb4:	d117      	bne.n	800cfe6 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800cfb6:	9b01      	ldr	r3, [sp, #4]
 800cfb8:	b193      	cbz	r3, 800cfe0 <osSemaphoreRelease+0x44>
 800cfba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cfbe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cfc2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cfc6:	f3bf 8f4f 	dsb	sy
 800cfca:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cfce:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800cfd0:	b002      	add	sp, #8
 800cfd2:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cfd4:	461a      	mov	r2, r3
 800cfd6:	4619      	mov	r1, r3
 800cfd8:	f000 fda0 	bl	800db1c <xQueueGenericSend>
 800cfdc:	2801      	cmp	r0, #1
 800cfde:	d102      	bne.n	800cfe6 <osSemaphoreRelease+0x4a>
  stat = osOK;
 800cfe0:	2000      	movs	r0, #0
}
 800cfe2:	b002      	add	sp, #8
 800cfe4:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800cfe6:	f06f 0002 	mvn.w	r0, #2
 800cfea:	e7fa      	b.n	800cfe2 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800cfec:	f06f 0003 	mvn.w	r0, #3
}
 800cff0:	4770      	bx	lr
 800cff2:	bf00      	nop

0800cff4 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800cff4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cff6:	b085      	sub	sp, #20
 800cff8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800cffc:	b987      	cbnz	r7, 800d020 <osMessageQueueNew+0x2c>
 800cffe:	4605      	mov	r5, r0
 800d000:	b170      	cbz	r0, 800d020 <osMessageQueueNew+0x2c>
 800d002:	b169      	cbz	r1, 800d020 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d004:	4614      	mov	r4, r2
 800d006:	b1ea      	cbz	r2, 800d044 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d008:	6893      	ldr	r3, [r2, #8]
 800d00a:	b163      	cbz	r3, 800d026 <osMessageQueueNew+0x32>
 800d00c:	68d2      	ldr	r2, [r2, #12]
 800d00e:	2a4f      	cmp	r2, #79	; 0x4f
 800d010:	d906      	bls.n	800d020 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d012:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d014:	b122      	cbz	r2, 800d020 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d016:	6966      	ldr	r6, [r4, #20]
 800d018:	fb01 f505 	mul.w	r5, r1, r5
 800d01c:	42ae      	cmp	r6, r5
 800d01e:	d21c      	bcs.n	800d05a <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d020:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d022:	b005      	add	sp, #20
 800d024:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d026:	68d3      	ldr	r3, [r2, #12]
 800d028:	2b00      	cmp	r3, #0
 800d02a:	d1f9      	bne.n	800d020 <osMessageQueueNew+0x2c>
 800d02c:	6913      	ldr	r3, [r2, #16]
 800d02e:	2b00      	cmp	r3, #0
 800d030:	d1f6      	bne.n	800d020 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d032:	6952      	ldr	r2, [r2, #20]
 800d034:	2a00      	cmp	r2, #0
 800d036:	d1f3      	bne.n	800d020 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d038:	f000 fc88 	bl	800d94c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d03c:	2800      	cmp	r0, #0
 800d03e:	d0ef      	beq.n	800d020 <osMessageQueueNew+0x2c>
        name = attr->name;
 800d040:	6824      	ldr	r4, [r4, #0]
 800d042:	e003      	b.n	800d04c <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d044:	f000 fc82 	bl	800d94c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d048:	2800      	cmp	r0, #0
 800d04a:	d0e9      	beq.n	800d020 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d04c:	4621      	mov	r1, r4
 800d04e:	9003      	str	r0, [sp, #12]
 800d050:	f001 fb70 	bl	800e734 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d054:	9803      	ldr	r0, [sp, #12]
}
 800d056:	b005      	add	sp, #20
 800d058:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d05a:	9700      	str	r7, [sp, #0]
 800d05c:	f000 fc08 	bl	800d870 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d060:	2800      	cmp	r0, #0
 800d062:	d1ed      	bne.n	800d040 <osMessageQueueNew+0x4c>
 800d064:	e7dc      	b.n	800d020 <osMessageQueueNew+0x2c>
 800d066:	bf00      	nop

0800d068 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d068:	b570      	push	{r4, r5, r6, lr}
 800d06a:	461c      	mov	r4, r3
 800d06c:	b082      	sub	sp, #8
 800d06e:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d072:	b1be      	cbz	r6, 800d0a4 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d074:	b350      	cbz	r0, 800d0cc <osMessageQueuePut+0x64>
 800d076:	b349      	cbz	r1, 800d0cc <osMessageQueuePut+0x64>
 800d078:	bb43      	cbnz	r3, 800d0cc <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d07a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d07c:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d07e:	f000 fecb 	bl	800de18 <xQueueGenericSendFromISR>
 800d082:	2801      	cmp	r0, #1
 800d084:	d11e      	bne.n	800d0c4 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d086:	9b01      	ldr	r3, [sp, #4]
 800d088:	b1cb      	cbz	r3, 800d0be <osMessageQueuePut+0x56>
 800d08a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d08e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d092:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d096:	f3bf 8f4f 	dsb	sy
 800d09a:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d09e:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d0a0:	b002      	add	sp, #8
 800d0a2:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d0a4:	b190      	cbz	r0, 800d0cc <osMessageQueuePut+0x64>
 800d0a6:	b189      	cbz	r1, 800d0cc <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d0a8:	4633      	mov	r3, r6
 800d0aa:	4622      	mov	r2, r4
 800d0ac:	f000 fd36 	bl	800db1c <xQueueGenericSend>
 800d0b0:	2801      	cmp	r0, #1
 800d0b2:	d004      	beq.n	800d0be <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800d0b4:	b134      	cbz	r4, 800d0c4 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800d0b6:	f06f 0001 	mvn.w	r0, #1
}
 800d0ba:	b002      	add	sp, #8
 800d0bc:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800d0be:	2000      	movs	r0, #0
}
 800d0c0:	b002      	add	sp, #8
 800d0c2:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800d0c4:	f06f 0002 	mvn.w	r0, #2
}
 800d0c8:	b002      	add	sp, #8
 800d0ca:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800d0cc:	f06f 0003 	mvn.w	r0, #3
 800d0d0:	e7e6      	b.n	800d0a0 <osMessageQueuePut+0x38>
 800d0d2:	bf00      	nop

0800d0d4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d0d4:	b530      	push	{r4, r5, lr}
 800d0d6:	461c      	mov	r4, r3
 800d0d8:	b083      	sub	sp, #12
 800d0da:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d0de:	b1bb      	cbz	r3, 800d110 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d0e0:	b348      	cbz	r0, 800d136 <osMessageQueueGet+0x62>
 800d0e2:	b341      	cbz	r1, 800d136 <osMessageQueueGet+0x62>
 800d0e4:	bb3c      	cbnz	r4, 800d136 <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d0e6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d0e8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d0ea:	f001 fa5b 	bl	800e5a4 <xQueueReceiveFromISR>
 800d0ee:	2801      	cmp	r0, #1
 800d0f0:	d11d      	bne.n	800d12e <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d0f2:	9b01      	ldr	r3, [sp, #4]
 800d0f4:	b1c3      	cbz	r3, 800d128 <osMessageQueueGet+0x54>
 800d0f6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d0fa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d0fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d102:	f3bf 8f4f 	dsb	sy
 800d106:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d10a:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d10c:	b003      	add	sp, #12
 800d10e:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d110:	b188      	cbz	r0, 800d136 <osMessageQueueGet+0x62>
 800d112:	b181      	cbz	r1, 800d136 <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d114:	4622      	mov	r2, r4
 800d116:	f000 ff3d 	bl	800df94 <xQueueReceive>
 800d11a:	2801      	cmp	r0, #1
 800d11c:	d004      	beq.n	800d128 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d11e:	b134      	cbz	r4, 800d12e <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d120:	f06f 0001 	mvn.w	r0, #1
}
 800d124:	b003      	add	sp, #12
 800d126:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800d128:	2000      	movs	r0, #0
}
 800d12a:	b003      	add	sp, #12
 800d12c:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800d12e:	f06f 0002 	mvn.w	r0, #2
}
 800d132:	b003      	add	sp, #12
 800d134:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800d136:	f06f 0003 	mvn.w	r0, #3
 800d13a:	e7e7      	b.n	800d10c <osMessageQueueGet+0x38>

0800d13c <osMessageQueueGetCount>:
 800d13c:	b130      	cbz	r0, 800d14c <osMessageQueueGetCount+0x10>
 800d13e:	f3ef 8305 	mrs	r3, IPSR
 800d142:	b10b      	cbz	r3, 800d148 <osMessageQueueGetCount+0xc>
 800d144:	f001 baa2 	b.w	800e68c <uxQueueMessagesWaitingFromISR>
 800d148:	f001 ba8a 	b.w	800e660 <uxQueueMessagesWaiting>
 800d14c:	4770      	bx	lr
 800d14e:	bf00      	nop

0800d150 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d150:	4b04      	ldr	r3, [pc, #16]	; (800d164 <vApplicationGetIdleTaskMemory+0x14>)
 800d152:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800d154:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d156:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d158:	4c03      	ldr	r4, [pc, #12]	; (800d168 <vApplicationGetIdleTaskMemory+0x18>)
 800d15a:	600c      	str	r4, [r1, #0]
}
 800d15c:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d160:	6013      	str	r3, [r2, #0]
}
 800d162:	4770      	bx	lr
 800d164:	2000227c 	.word	0x2000227c
 800d168:	2000207c 	.word	0x2000207c

0800d16c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d16c:	4b05      	ldr	r3, [pc, #20]	; (800d184 <vApplicationGetTimerTaskMemory+0x18>)
 800d16e:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800d170:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d172:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d176:	4c04      	ldr	r4, [pc, #16]	; (800d188 <vApplicationGetTimerTaskMemory+0x1c>)
 800d178:	600c      	str	r4, [r1, #0]
}
 800d17a:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d17e:	6013      	str	r3, [r2, #0]
}
 800d180:	4770      	bx	lr
 800d182:	bf00      	nop
 800d184:	2000272c 	.word	0x2000272c
 800d188:	2000232c 	.word	0x2000232c

0800d18c <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800d18c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d190:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800d192:	f001 ff45 	bl	800f020 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800d196:	4a54      	ldr	r2, [pc, #336]	; (800d2e8 <pvPortMalloc+0x15c>)
 800d198:	6816      	ldr	r6, [r2, #0]
 800d19a:	2e00      	cmp	r6, #0
 800d19c:	d06e      	beq.n	800d27c <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d19e:	4b53      	ldr	r3, [pc, #332]	; (800d2ec <pvPortMalloc+0x160>)
 800d1a0:	681f      	ldr	r7, [r3, #0]
 800d1a2:	423d      	tst	r5, r7
 800d1a4:	d12e      	bne.n	800d204 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800d1a6:	b36d      	cbz	r5, 800d204 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800d1a8:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d1ac:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d1ae:	bf1c      	itt	ne
 800d1b0:	f024 0407 	bicne.w	r4, r4, #7
 800d1b4:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d1b6:	b32c      	cbz	r4, 800d204 <pvPortMalloc+0x78>
 800d1b8:	f8df c144 	ldr.w	ip, [pc, #324]	; 800d300 <pvPortMalloc+0x174>
 800d1bc:	f8dc 5000 	ldr.w	r5, [ip]
 800d1c0:	42a5      	cmp	r5, r4
 800d1c2:	d31f      	bcc.n	800d204 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800d1c4:	484a      	ldr	r0, [pc, #296]	; (800d2f0 <pvPortMalloc+0x164>)
 800d1c6:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d1c8:	e003      	b.n	800d1d2 <pvPortMalloc+0x46>
 800d1ca:	681a      	ldr	r2, [r3, #0]
 800d1cc:	b122      	cbz	r2, 800d1d8 <pvPortMalloc+0x4c>
 800d1ce:	4618      	mov	r0, r3
 800d1d0:	4613      	mov	r3, r2
 800d1d2:	6859      	ldr	r1, [r3, #4]
 800d1d4:	42a1      	cmp	r1, r4
 800d1d6:	d3f8      	bcc.n	800d1ca <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800d1d8:	42b3      	cmp	r3, r6
 800d1da:	d013      	beq.n	800d204 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d1dc:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d1de:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d1e0:	f858 eb08 	ldr.w	lr, [r8], #8
 800d1e4:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d1e8:	2a10      	cmp	r2, #16
 800d1ea:	d929      	bls.n	800d240 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d1ec:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d1ee:	0748      	lsls	r0, r1, #29
 800d1f0:	d00f      	beq.n	800d212 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d1f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1f6:	f383 8811 	msr	BASEPRI, r3
 800d1fa:	f3bf 8f6f 	isb	sy
 800d1fe:	f3bf 8f4f 	dsb	sy
 800d202:	e7fe      	b.n	800d202 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800d204:	f001 ff14 	bl	800f030 <xTaskResumeAll>
 800d208:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800d20c:	4640      	mov	r0, r8
 800d20e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d212:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d214:	4a36      	ldr	r2, [pc, #216]	; (800d2f0 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800d216:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d218:	4614      	mov	r4, r2
 800d21a:	6812      	ldr	r2, [r2, #0]
 800d21c:	4291      	cmp	r1, r2
 800d21e:	d8fb      	bhi.n	800d218 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d220:	6860      	ldr	r0, [r4, #4]
 800d222:	eb04 0e00 	add.w	lr, r4, r0
 800d226:	4571      	cmp	r1, lr
 800d228:	d04b      	beq.n	800d2c2 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d22a:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d22e:	eb01 000e 	add.w	r0, r1, lr
 800d232:	4282      	cmp	r2, r0
 800d234:	d051      	beq.n	800d2da <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d236:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d238:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d23a:	bf18      	it	ne
 800d23c:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d23e:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d240:	4a2c      	ldr	r2, [pc, #176]	; (800d2f4 <pvPortMalloc+0x168>)
 800d242:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d244:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d246:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d248:	bf38      	it	cc
 800d24a:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800d24c:	4a2a      	ldr	r2, [pc, #168]	; (800d2f8 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d24e:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d252:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800d254:	2000      	movs	r0, #0
 800d256:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800d25a:	6813      	ldr	r3, [r2, #0]
 800d25c:	3301      	adds	r3, #1
 800d25e:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d260:	f001 fee6 	bl	800f030 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d264:	f018 0f07 	tst.w	r8, #7
 800d268:	d0d0      	beq.n	800d20c <pvPortMalloc+0x80>
 800d26a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d26e:	f383 8811 	msr	BASEPRI, r3
 800d272:	f3bf 8f6f 	isb	sy
 800d276:	f3bf 8f4f 	dsb	sy
 800d27a:	e7fe      	b.n	800d27a <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800d27c:	4b1f      	ldr	r3, [pc, #124]	; (800d2fc <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d27e:	075e      	lsls	r6, r3, #29
 800d280:	d118      	bne.n	800d2b4 <pvPortMalloc+0x128>
 800d282:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800d286:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800d288:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d28a:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800d28e:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d290:	4a18      	ldr	r2, [pc, #96]	; (800d2f4 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d292:	4817      	ldr	r0, [pc, #92]	; (800d2f0 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d294:	4c15      	ldr	r4, [pc, #84]	; (800d2ec <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d296:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d298:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d29a:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d29c:	4a18      	ldr	r2, [pc, #96]	; (800d300 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d29e:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d2a2:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800d2a4:	2200      	movs	r2, #0
 800d2a6:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d2a8:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d2aa:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d2ae:	e9c1 6300 	strd	r6, r3, [r1]
}
 800d2b2:	e776      	b.n	800d1a2 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d2b4:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800d2b6:	f021 0107 	bic.w	r1, r1, #7
 800d2ba:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d2be:	460b      	mov	r3, r1
 800d2c0:	e7e2      	b.n	800d288 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d2c2:	6849      	ldr	r1, [r1, #4]
 800d2c4:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d2c8:	eb04 010e 	add.w	r1, r4, lr
 800d2cc:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d2ce:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d2d2:	d001      	beq.n	800d2d8 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2d4:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800d2d6:	e7b2      	b.n	800d23e <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d2d8:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d2da:	42b2      	cmp	r2, r6
 800d2dc:	d0ab      	beq.n	800d236 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d2de:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2e0:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d2e2:	4470      	add	r0, lr
 800d2e4:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d2e6:	e7a6      	b.n	800d236 <pvPortMalloc+0xaa>
 800d2e8:	200027d8 	.word	0x200027d8
 800d2ec:	200127dc 	.word	0x200127dc
 800d2f0:	200127f0 	.word	0x200127f0
 800d2f4:	200127e4 	.word	0x200127e4
 800d2f8:	200127e8 	.word	0x200127e8
 800d2fc:	200027dc 	.word	0x200027dc
 800d300:	200127e0 	.word	0x200127e0

0800d304 <vPortFree>:
	if( pv != NULL )
 800d304:	b1d0      	cbz	r0, 800d33c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d306:	4a2c      	ldr	r2, [pc, #176]	; (800d3b8 <vPortFree+0xb4>)
 800d308:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d30c:	6812      	ldr	r2, [r2, #0]
 800d30e:	4213      	tst	r3, r2
 800d310:	d00b      	beq.n	800d32a <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d312:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d316:	b191      	cbz	r1, 800d33e <vPortFree+0x3a>
 800d318:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d31c:	f383 8811 	msr	BASEPRI, r3
 800d320:	f3bf 8f6f 	isb	sy
 800d324:	f3bf 8f4f 	dsb	sy
 800d328:	e7fe      	b.n	800d328 <vPortFree+0x24>
 800d32a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d32e:	f383 8811 	msr	BASEPRI, r3
 800d332:	f3bf 8f6f 	isb	sy
 800d336:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d33a:	e7fe      	b.n	800d33a <vPortFree+0x36>
 800d33c:	4770      	bx	lr
{
 800d33e:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d340:	ea23 0302 	bic.w	r3, r3, r2
{
 800d344:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d346:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d34a:	4c1c      	ldr	r4, [pc, #112]	; (800d3bc <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d34c:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800d34e:	f001 fe67 	bl	800f020 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d352:	9801      	ldr	r0, [sp, #4]
 800d354:	6822      	ldr	r2, [r4, #0]
 800d356:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d35a:	4b19      	ldr	r3, [pc, #100]	; (800d3c0 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d35c:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800d35e:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d360:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d362:	461a      	mov	r2, r3
 800d364:	681b      	ldr	r3, [r3, #0]
 800d366:	4298      	cmp	r0, r3
 800d368:	d8fb      	bhi.n	800d362 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d36a:	6854      	ldr	r4, [r2, #4]
 800d36c:	eb02 0e04 	add.w	lr, r2, r4
 800d370:	4570      	cmp	r0, lr
 800d372:	d010      	beq.n	800d396 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d374:	eb00 0c01 	add.w	ip, r0, r1
 800d378:	4563      	cmp	r3, ip
 800d37a:	d014      	beq.n	800d3a6 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800d37c:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d37e:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d380:	bf18      	it	ne
 800d382:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800d384:	4a0f      	ldr	r2, [pc, #60]	; (800d3c4 <vPortFree+0xc0>)
 800d386:	6813      	ldr	r3, [r2, #0]
 800d388:	3301      	adds	r3, #1
 800d38a:	6013      	str	r3, [r2, #0]
}
 800d38c:	b002      	add	sp, #8
 800d38e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800d392:	f001 be4d 	b.w	800f030 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d396:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d398:	1850      	adds	r0, r2, r1
 800d39a:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d39c:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d39e:	d001      	beq.n	800d3a4 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d3a0:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800d3a2:	e7ef      	b.n	800d384 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d3a4:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d3a6:	4c08      	ldr	r4, [pc, #32]	; (800d3c8 <vPortFree+0xc4>)
 800d3a8:	6824      	ldr	r4, [r4, #0]
 800d3aa:	42a3      	cmp	r3, r4
 800d3ac:	d0e6      	beq.n	800d37c <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d3ae:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d3b2:	4421      	add	r1, r4
 800d3b4:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d3b6:	e7e1      	b.n	800d37c <vPortFree+0x78>
 800d3b8:	200127dc 	.word	0x200127dc
 800d3bc:	200127e0 	.word	0x200127e0
 800d3c0:	200127f0 	.word	0x200127f0
 800d3c4:	200127ec 	.word	0x200127ec
 800d3c8:	200027d8 	.word	0x200027d8

0800d3cc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d3cc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d3d0:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d3d4:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d3d6:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d3da:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d3de:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d3e0:	4770      	bx	lr
 800d3e2:	bf00      	nop

0800d3e4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d3e4:	2300      	movs	r3, #0
 800d3e6:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d3e8:	4770      	bx	lr
 800d3ea:	bf00      	nop

0800d3ec <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d3ec:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d3ee:	689a      	ldr	r2, [r3, #8]
 800d3f0:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d3f2:	6802      	ldr	r2, [r0, #0]
{
 800d3f4:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d3f6:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800d3f8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d3fa:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d3fc:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d3fe:	6099      	str	r1, [r3, #8]
}
 800d400:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800d404:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d406:	6002      	str	r2, [r0, #0]
}
 800d408:	4770      	bx	lr
 800d40a:	bf00      	nop

0800d40c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d40c:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d40e:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d410:	1c6b      	adds	r3, r5, #1
 800d412:	d010      	beq.n	800d436 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d414:	f100 0308 	add.w	r3, r0, #8
 800d418:	461c      	mov	r4, r3
 800d41a:	685b      	ldr	r3, [r3, #4]
 800d41c:	681a      	ldr	r2, [r3, #0]
 800d41e:	42aa      	cmp	r2, r5
 800d420:	d9fa      	bls.n	800d418 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d422:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d424:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800d426:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d428:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d42a:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d42c:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800d42e:	6108      	str	r0, [r1, #16]
}
 800d430:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800d432:	6002      	str	r2, [r0, #0]
}
 800d434:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800d436:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800d438:	6863      	ldr	r3, [r4, #4]
 800d43a:	e7f2      	b.n	800d422 <vListInsert+0x16>

0800d43c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800d43c:	6903      	ldr	r3, [r0, #16]
{
 800d43e:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d440:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d444:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d446:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800d448:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d44a:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d44c:	bf08      	it	eq
 800d44e:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800d450:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800d452:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800d456:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800d458:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800d45a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d45c:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800d45e:	6818      	ldr	r0, [r3, #0]
}
 800d460:	4770      	bx	lr
 800d462:	bf00      	nop

0800d464 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d464:	4808      	ldr	r0, [pc, #32]	; (800d488 <prvPortStartFirstTask+0x24>)
 800d466:	6800      	ldr	r0, [r0, #0]
 800d468:	6800      	ldr	r0, [r0, #0]
 800d46a:	f380 8808 	msr	MSP, r0
 800d46e:	f04f 0000 	mov.w	r0, #0
 800d472:	f380 8814 	msr	CONTROL, r0
 800d476:	b662      	cpsie	i
 800d478:	b661      	cpsie	f
 800d47a:	f3bf 8f4f 	dsb	sy
 800d47e:	f3bf 8f6f 	isb	sy
 800d482:	df00      	svc	0
 800d484:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d486:	0000      	.short	0x0000
 800d488:	e000ed08 	.word	0xe000ed08

0800d48c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d48c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d49c <vPortEnableVFP+0x10>
 800d490:	6801      	ldr	r1, [r0, #0]
 800d492:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d496:	6001      	str	r1, [r0, #0]
 800d498:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d49a:	0000      	.short	0x0000
 800d49c:	e000ed88 	.word	0xe000ed88

0800d4a0 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800d4a0:	4b0e      	ldr	r3, [pc, #56]	; (800d4dc <prvTaskExitError+0x3c>)
 800d4a2:	681b      	ldr	r3, [r3, #0]
{
 800d4a4:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d4a6:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800d4a8:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800d4aa:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d4ac:	d008      	beq.n	800d4c0 <prvTaskExitError+0x20>
 800d4ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4b2:	f383 8811 	msr	BASEPRI, r3
 800d4b6:	f3bf 8f6f 	isb	sy
 800d4ba:	f3bf 8f4f 	dsb	sy
 800d4be:	e7fe      	b.n	800d4be <prvTaskExitError+0x1e>
 800d4c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4c4:	f383 8811 	msr	BASEPRI, r3
 800d4c8:	f3bf 8f6f 	isb	sy
 800d4cc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d4d0:	9b01      	ldr	r3, [sp, #4]
 800d4d2:	2b00      	cmp	r3, #0
 800d4d4:	d0fc      	beq.n	800d4d0 <prvTaskExitError+0x30>
}
 800d4d6:	b002      	add	sp, #8
 800d4d8:	4770      	bx	lr
 800d4da:	bf00      	nop
 800d4dc:	20000084 	.word	0x20000084

0800d4e0 <pxPortInitialiseStack>:
{
 800d4e0:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d4e2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d4e6:	4c07      	ldr	r4, [pc, #28]	; (800d504 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d4e8:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d4ec:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d4f0:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d4f4:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d4f8:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800d4fc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d500:	3844      	subs	r0, #68	; 0x44
 800d502:	4770      	bx	lr
 800d504:	0800d4a1 	.word	0x0800d4a1
	...

0800d510 <SVC_Handler>:
	__asm volatile (
 800d510:	4b07      	ldr	r3, [pc, #28]	; (800d530 <pxCurrentTCBConst2>)
 800d512:	6819      	ldr	r1, [r3, #0]
 800d514:	6808      	ldr	r0, [r1, #0]
 800d516:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d51a:	f380 8809 	msr	PSP, r0
 800d51e:	f3bf 8f6f 	isb	sy
 800d522:	f04f 0000 	mov.w	r0, #0
 800d526:	f380 8811 	msr	BASEPRI, r0
 800d52a:	4770      	bx	lr
 800d52c:	f3af 8000 	nop.w

0800d530 <pxCurrentTCBConst2>:
 800d530:	20012840 	.word	0x20012840

0800d534 <vPortEnterCritical>:
 800d534:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d538:	f383 8811 	msr	BASEPRI, r3
 800d53c:	f3bf 8f6f 	isb	sy
 800d540:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d544:	4a0b      	ldr	r2, [pc, #44]	; (800d574 <vPortEnterCritical+0x40>)
 800d546:	6813      	ldr	r3, [r2, #0]
 800d548:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d54a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d54c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d54e:	d000      	beq.n	800d552 <vPortEnterCritical+0x1e>
}
 800d550:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d552:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d556:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d55a:	b2db      	uxtb	r3, r3
 800d55c:	2b00      	cmp	r3, #0
 800d55e:	d0f7      	beq.n	800d550 <vPortEnterCritical+0x1c>
 800d560:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d564:	f383 8811 	msr	BASEPRI, r3
 800d568:	f3bf 8f6f 	isb	sy
 800d56c:	f3bf 8f4f 	dsb	sy
 800d570:	e7fe      	b.n	800d570 <vPortEnterCritical+0x3c>
 800d572:	bf00      	nop
 800d574:	20000084 	.word	0x20000084

0800d578 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d578:	4a08      	ldr	r2, [pc, #32]	; (800d59c <vPortExitCritical+0x24>)
 800d57a:	6813      	ldr	r3, [r2, #0]
 800d57c:	b943      	cbnz	r3, 800d590 <vPortExitCritical+0x18>
 800d57e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d582:	f383 8811 	msr	BASEPRI, r3
 800d586:	f3bf 8f6f 	isb	sy
 800d58a:	f3bf 8f4f 	dsb	sy
 800d58e:	e7fe      	b.n	800d58e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d590:	3b01      	subs	r3, #1
 800d592:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d594:	b90b      	cbnz	r3, 800d59a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d596:	f383 8811 	msr	BASEPRI, r3
}
 800d59a:	4770      	bx	lr
 800d59c:	20000084 	.word	0x20000084

0800d5a0 <PendSV_Handler>:
	__asm volatile
 800d5a0:	f3ef 8009 	mrs	r0, PSP
 800d5a4:	f3bf 8f6f 	isb	sy
 800d5a8:	4b15      	ldr	r3, [pc, #84]	; (800d600 <pxCurrentTCBConst>)
 800d5aa:	681a      	ldr	r2, [r3, #0]
 800d5ac:	f01e 0f10 	tst.w	lr, #16
 800d5b0:	bf08      	it	eq
 800d5b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d5b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5ba:	6010      	str	r0, [r2, #0]
 800d5bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d5c0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d5c4:	f380 8811 	msr	BASEPRI, r0
 800d5c8:	f3bf 8f4f 	dsb	sy
 800d5cc:	f3bf 8f6f 	isb	sy
 800d5d0:	f001 fd54 	bl	800f07c <vTaskSwitchContext>
 800d5d4:	f04f 0000 	mov.w	r0, #0
 800d5d8:	f380 8811 	msr	BASEPRI, r0
 800d5dc:	bc09      	pop	{r0, r3}
 800d5de:	6819      	ldr	r1, [r3, #0]
 800d5e0:	6808      	ldr	r0, [r1, #0]
 800d5e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5e6:	f01e 0f10 	tst.w	lr, #16
 800d5ea:	bf08      	it	eq
 800d5ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d5f0:	f380 8809 	msr	PSP, r0
 800d5f4:	f3bf 8f6f 	isb	sy
 800d5f8:	4770      	bx	lr
 800d5fa:	bf00      	nop
 800d5fc:	f3af 8000 	nop.w

0800d600 <pxCurrentTCBConst>:
 800d600:	20012840 	.word	0x20012840

0800d604 <xPortSysTickHandler>:
{
 800d604:	b508      	push	{r3, lr}
	__asm volatile
 800d606:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d60a:	f383 8811 	msr	BASEPRI, r3
 800d60e:	f3bf 8f6f 	isb	sy
 800d612:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d616:	f001 fd21 	bl	800f05c <xTaskIncrementTick>
 800d61a:	b128      	cbz	r0, 800d628 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d61c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d620:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d624:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d628:	2300      	movs	r3, #0
 800d62a:	f383 8811 	msr	BASEPRI, r3
}
 800d62e:	bd08      	pop	{r3, pc}

0800d630 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d630:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d634:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d636:	4906      	ldr	r1, [pc, #24]	; (800d650 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d638:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d63a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d63c:	680b      	ldr	r3, [r1, #0]
 800d63e:	4905      	ldr	r1, [pc, #20]	; (800d654 <vPortSetupTimerInterrupt+0x24>)
 800d640:	fba1 1303 	umull	r1, r3, r1, r3
 800d644:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d646:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d648:	3b01      	subs	r3, #1
 800d64a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d64c:	6110      	str	r0, [r2, #16]
}
 800d64e:	4770      	bx	lr
 800d650:	20000078 	.word	0x20000078
 800d654:	10624dd3 	.word	0x10624dd3

0800d658 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d658:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d65c:	4a49      	ldr	r2, [pc, #292]	; (800d784 <xPortStartScheduler+0x12c>)
 800d65e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d662:	4291      	cmp	r1, r2
 800d664:	d043      	beq.n	800d6ee <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d666:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d66a:	4b47      	ldr	r3, [pc, #284]	; (800d788 <xPortStartScheduler+0x130>)
 800d66c:	429a      	cmp	r2, r3
 800d66e:	d035      	beq.n	800d6dc <xPortStartScheduler+0x84>
{
 800d670:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d672:	4b46      	ldr	r3, [pc, #280]	; (800d78c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d674:	4846      	ldr	r0, [pc, #280]	; (800d790 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d676:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d678:	4c46      	ldr	r4, [pc, #280]	; (800d794 <xPortStartScheduler+0x13c>)
{
 800d67a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d67c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d67e:	b2d2      	uxtb	r2, r2
 800d680:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d682:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d684:	781b      	ldrb	r3, [r3, #0]
 800d686:	b2db      	uxtb	r3, r3
 800d688:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d68c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d690:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d694:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d698:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d69a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d69c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d69e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d6a0:	bf48      	it	mi
 800d6a2:	2206      	movmi	r2, #6
 800d6a4:	d511      	bpl.n	800d6ca <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d6a6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d6aa:	005b      	lsls	r3, r3, #1
 800d6ac:	b2db      	uxtb	r3, r3
 800d6ae:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d6b2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d6b6:	0609      	lsls	r1, r1, #24
 800d6b8:	4610      	mov	r0, r2
 800d6ba:	f102 32ff 	add.w	r2, r2, #4294967295
 800d6be:	d4f2      	bmi.n	800d6a6 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d6c0:	2803      	cmp	r0, #3
 800d6c2:	6020      	str	r0, [r4, #0]
 800d6c4:	f88d 3007 	strb.w	r3, [sp, #7]
 800d6c8:	d01a      	beq.n	800d700 <xPortStartScheduler+0xa8>
	__asm volatile
 800d6ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6ce:	f383 8811 	msr	BASEPRI, r3
 800d6d2:	f3bf 8f6f 	isb	sy
 800d6d6:	f3bf 8f4f 	dsb	sy
 800d6da:	e7fe      	b.n	800d6da <xPortStartScheduler+0x82>
 800d6dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6e0:	f383 8811 	msr	BASEPRI, r3
 800d6e4:	f3bf 8f6f 	isb	sy
 800d6e8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d6ec:	e7fe      	b.n	800d6ec <xPortStartScheduler+0x94>
 800d6ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6f2:	f383 8811 	msr	BASEPRI, r3
 800d6f6:	f3bf 8f6f 	isb	sy
 800d6fa:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d6fe:	e7fe      	b.n	800d6fe <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d700:	9b02      	ldr	r3, [sp, #8]
 800d702:	4a22      	ldr	r2, [pc, #136]	; (800d78c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d704:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d708:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d70c:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d70e:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d710:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d712:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d716:	4c20      	ldr	r4, [pc, #128]	; (800d798 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d718:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d71c:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d720:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d724:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d728:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d72c:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d72e:	f7ff ff7f 	bl	800d630 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d732:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d734:	f7ff feaa 	bl	800d48c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d738:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d73c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d740:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d744:	f7ff fe8e 	bl	800d464 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d748:	f001 fc98 	bl	800f07c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d74c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d74e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d750:	3301      	adds	r3, #1
 800d752:	d008      	beq.n	800d766 <xPortStartScheduler+0x10e>
 800d754:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d758:	f383 8811 	msr	BASEPRI, r3
 800d75c:	f3bf 8f6f 	isb	sy
 800d760:	f3bf 8f4f 	dsb	sy
 800d764:	e7fe      	b.n	800d764 <xPortStartScheduler+0x10c>
 800d766:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d76a:	f383 8811 	msr	BASEPRI, r3
 800d76e:	f3bf 8f6f 	isb	sy
 800d772:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d776:	9b03      	ldr	r3, [sp, #12]
 800d778:	2b00      	cmp	r3, #0
 800d77a:	d0fc      	beq.n	800d776 <xPortStartScheduler+0x11e>
}
 800d77c:	2000      	movs	r0, #0
 800d77e:	b004      	add	sp, #16
 800d780:	bd70      	pop	{r4, r5, r6, pc}
 800d782:	bf00      	nop
 800d784:	410fc271 	.word	0x410fc271
 800d788:	410fc270 	.word	0x410fc270
 800d78c:	e000e400 	.word	0xe000e400
 800d790:	200127f8 	.word	0x200127f8
 800d794:	200127fc 	.word	0x200127fc
 800d798:	20000084 	.word	0x20000084

0800d79c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d79c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d7a0:	2b0f      	cmp	r3, #15
 800d7a2:	d90e      	bls.n	800d7c2 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d7a4:	4911      	ldr	r1, [pc, #68]	; (800d7ec <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d7a6:	4a12      	ldr	r2, [pc, #72]	; (800d7f0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d7a8:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d7aa:	7812      	ldrb	r2, [r2, #0]
 800d7ac:	429a      	cmp	r2, r3
 800d7ae:	d908      	bls.n	800d7c2 <vPortValidateInterruptPriority+0x26>
 800d7b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7b4:	f383 8811 	msr	BASEPRI, r3
 800d7b8:	f3bf 8f6f 	isb	sy
 800d7bc:	f3bf 8f4f 	dsb	sy
 800d7c0:	e7fe      	b.n	800d7c0 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d7c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d7c6:	4a0b      	ldr	r2, [pc, #44]	; (800d7f4 <vPortValidateInterruptPriority+0x58>)
 800d7c8:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d7cc:	6812      	ldr	r2, [r2, #0]
 800d7ce:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d7d2:	4293      	cmp	r3, r2
 800d7d4:	d908      	bls.n	800d7e8 <vPortValidateInterruptPriority+0x4c>
 800d7d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7da:	f383 8811 	msr	BASEPRI, r3
 800d7de:	f3bf 8f6f 	isb	sy
 800d7e2:	f3bf 8f4f 	dsb	sy
 800d7e6:	e7fe      	b.n	800d7e6 <vPortValidateInterruptPriority+0x4a>
	}
 800d7e8:	4770      	bx	lr
 800d7ea:	bf00      	nop
 800d7ec:	e000e3f0 	.word	0xe000e3f0
 800d7f0:	200127f8 	.word	0x200127f8
 800d7f4:	200127fc 	.word	0x200127fc

0800d7f8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d7f8:	b570      	push	{r4, r5, r6, lr}
 800d7fa:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d7fc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d7fe:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d800:	b920      	cbnz	r0, 800d80c <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d802:	6825      	ldr	r5, [r4, #0]
 800d804:	b34d      	cbz	r5, 800d85a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d806:	3601      	adds	r6, #1
 800d808:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d80a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d80c:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d80e:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d810:	b97d      	cbnz	r5, 800d832 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d812:	6860      	ldr	r0, [r4, #4]
 800d814:	f01c fcf5 	bl	802a202 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d818:	6863      	ldr	r3, [r4, #4]
 800d81a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d81c:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d81e:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d820:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d822:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d824:	bf24      	itt	cs
 800d826:	6823      	ldrcs	r3, [r4, #0]
 800d828:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d82a:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d82c:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d82e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d830:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d832:	68e0      	ldr	r0, [r4, #12]
 800d834:	f01c fce5 	bl	802a202 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d838:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d83a:	68e3      	ldr	r3, [r4, #12]
 800d83c:	4251      	negs	r1, r2
 800d83e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d840:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d842:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d844:	4293      	cmp	r3, r2
 800d846:	d202      	bcs.n	800d84e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d848:	68a3      	ldr	r3, [r4, #8]
 800d84a:	440b      	add	r3, r1
 800d84c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d84e:	2d02      	cmp	r5, #2
 800d850:	d008      	beq.n	800d864 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d852:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d854:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d856:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d858:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d85a:	68a0      	ldr	r0, [r4, #8]
 800d85c:	f001 fde0 	bl	800f420 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d860:	60a5      	str	r5, [r4, #8]
 800d862:	e7d0      	b.n	800d806 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d864:	2e01      	cmp	r6, #1
 800d866:	bf38      	it	cc
 800d868:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d86a:	2000      	movs	r0, #0
 800d86c:	e7cc      	b.n	800d808 <prvCopyDataToQueue+0x10>
 800d86e:	bf00      	nop

0800d870 <xQueueGenericCreateStatic>:
	{
 800d870:	b530      	push	{r4, r5, lr}
 800d872:	b083      	sub	sp, #12
 800d874:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d878:	b940      	cbnz	r0, 800d88c <xQueueGenericCreateStatic+0x1c>
 800d87a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d87e:	f383 8811 	msr	BASEPRI, r3
 800d882:	f3bf 8f6f 	isb	sy
 800d886:	f3bf 8f4f 	dsb	sy
 800d88a:	e7fe      	b.n	800d88a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d88c:	461d      	mov	r5, r3
 800d88e:	b17b      	cbz	r3, 800d8b0 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d890:	b302      	cbz	r2, 800d8d4 <xQueueGenericCreateStatic+0x64>
 800d892:	b1b1      	cbz	r1, 800d8c2 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d894:	2350      	movs	r3, #80	; 0x50
 800d896:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d898:	9b01      	ldr	r3, [sp, #4]
 800d89a:	2b50      	cmp	r3, #80	; 0x50
 800d89c:	d023      	beq.n	800d8e6 <xQueueGenericCreateStatic+0x76>
 800d89e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8a2:	f383 8811 	msr	BASEPRI, r3
 800d8a6:	f3bf 8f6f 	isb	sy
 800d8aa:	f3bf 8f4f 	dsb	sy
 800d8ae:	e7fe      	b.n	800d8ae <xQueueGenericCreateStatic+0x3e>
 800d8b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8b4:	f383 8811 	msr	BASEPRI, r3
 800d8b8:	f3bf 8f6f 	isb	sy
 800d8bc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d8c0:	e7fe      	b.n	800d8c0 <xQueueGenericCreateStatic+0x50>
 800d8c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8c6:	f383 8811 	msr	BASEPRI, r3
 800d8ca:	f3bf 8f6f 	isb	sy
 800d8ce:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d8d2:	e7fe      	b.n	800d8d2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d8d4:	bb89      	cbnz	r1, 800d93a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d8d6:	2250      	movs	r2, #80	; 0x50
 800d8d8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d8da:	9a01      	ldr	r2, [sp, #4]
 800d8dc:	2a50      	cmp	r2, #80	; 0x50
 800d8de:	d1de      	bne.n	800d89e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d8e0:	9a01      	ldr	r2, [sp, #4]
 800d8e2:	462a      	mov	r2, r5
 800d8e4:	e000      	b.n	800d8e8 <xQueueGenericCreateStatic+0x78>
 800d8e6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d8e8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d8ea:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d8ec:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d8f0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d8f4:	f7ff fe1e 	bl	800d534 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d8f8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d8fc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d8fe:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d900:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d904:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d906:	4401      	add	r1, r0
 800d908:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d90a:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d90c:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d90e:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d910:	21ff      	movs	r1, #255	; 0xff
 800d912:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d916:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d918:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d91c:	f105 0010 	add.w	r0, r5, #16
 800d920:	f7ff fd54 	bl	800d3cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d924:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d928:	f7ff fd50 	bl	800d3cc <vListInitialise>
	taskEXIT_CRITICAL();
 800d92c:	f7ff fe24 	bl	800d578 <vPortExitCritical>
	}
 800d930:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d932:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d936:	b003      	add	sp, #12
 800d938:	bd30      	pop	{r4, r5, pc}
 800d93a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d93e:	f383 8811 	msr	BASEPRI, r3
 800d942:	f3bf 8f6f 	isb	sy
 800d946:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d94a:	e7fe      	b.n	800d94a <xQueueGenericCreateStatic+0xda>

0800d94c <xQueueGenericCreate>:
	{
 800d94c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d94e:	b940      	cbnz	r0, 800d962 <xQueueGenericCreate+0x16>
 800d950:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d954:	f383 8811 	msr	BASEPRI, r3
 800d958:	f3bf 8f6f 	isb	sy
 800d95c:	f3bf 8f4f 	dsb	sy
 800d960:	e7fe      	b.n	800d960 <xQueueGenericCreate+0x14>
 800d962:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d964:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d968:	3050      	adds	r0, #80	; 0x50
 800d96a:	460e      	mov	r6, r1
 800d96c:	4617      	mov	r7, r2
 800d96e:	f7ff fc0d 	bl	800d18c <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d972:	4604      	mov	r4, r0
 800d974:	b340      	cbz	r0, 800d9c8 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d976:	2300      	movs	r3, #0
 800d978:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d97c:	b336      	cbz	r6, 800d9cc <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d97e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d982:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d984:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d988:	f7ff fdd4 	bl	800d534 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d98c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d990:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d992:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d994:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d998:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d99a:	440a      	add	r2, r1
 800d99c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d99e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9a0:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d9a2:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d9a4:	22ff      	movs	r2, #255	; 0xff
 800d9a6:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9aa:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d9ac:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d9b0:	f104 0010 	add.w	r0, r4, #16
 800d9b4:	f7ff fd0a 	bl	800d3cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d9b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d9bc:	f7ff fd06 	bl	800d3cc <vListInitialise>
	taskEXIT_CRITICAL();
 800d9c0:	f7ff fdda 	bl	800d578 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d9c4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d9c8:	4620      	mov	r0, r4
 800d9ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d9cc:	4603      	mov	r3, r0
 800d9ce:	e7d8      	b.n	800d982 <xQueueGenericCreate+0x36>

0800d9d0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d9d0:	b940      	cbnz	r0, 800d9e4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d9d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9d6:	f383 8811 	msr	BASEPRI, r3
 800d9da:	f3bf 8f6f 	isb	sy
 800d9de:	f3bf 8f4f 	dsb	sy
 800d9e2:	e7fe      	b.n	800d9e2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d9e4:	4288      	cmp	r0, r1
 800d9e6:	d208      	bcs.n	800d9fa <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d9e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9ec:	f383 8811 	msr	BASEPRI, r3
 800d9f0:	f3bf 8f6f 	isb	sy
 800d9f4:	f3bf 8f4f 	dsb	sy
 800d9f8:	e7fe      	b.n	800d9f8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d9fa:	b530      	push	{r4, r5, lr}
 800d9fc:	4615      	mov	r5, r2
 800d9fe:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800da00:	2a00      	cmp	r2, #0
 800da02:	d03c      	beq.n	800da7e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800da04:	2350      	movs	r3, #80	; 0x50
 800da06:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800da08:	9b03      	ldr	r3, [sp, #12]
 800da0a:	2b50      	cmp	r3, #80	; 0x50
 800da0c:	d008      	beq.n	800da20 <xQueueCreateCountingSemaphoreStatic+0x50>
 800da0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da12:	f383 8811 	msr	BASEPRI, r3
 800da16:	f3bf 8f6f 	isb	sy
 800da1a:	f3bf 8f4f 	dsb	sy
 800da1e:	e7fe      	b.n	800da1e <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800da20:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800da22:	2301      	movs	r3, #1
 800da24:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800da28:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800da2a:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800da2e:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800da30:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800da32:	f7ff fd7f 	bl	800d534 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da36:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800da3a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800da3c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da3e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da42:	1ac3      	subs	r3, r0, r3
 800da44:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da46:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800da48:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800da4c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da50:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800da52:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800da54:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800da58:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800da5a:	f105 0010 	add.w	r0, r5, #16
 800da5e:	f7ff fcb5 	bl	800d3cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800da62:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800da66:	f7ff fcb1 	bl	800d3cc <vListInitialise>
	taskEXIT_CRITICAL();
 800da6a:	f7ff fd85 	bl	800d578 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800da6e:	9901      	ldr	r1, [sp, #4]
 800da70:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800da72:	2302      	movs	r3, #2
	}
 800da74:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800da76:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800da7a:	b005      	add	sp, #20
 800da7c:	bd30      	pop	{r4, r5, pc}
 800da7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da82:	f383 8811 	msr	BASEPRI, r3
 800da86:	f3bf 8f6f 	isb	sy
 800da8a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800da8e:	e7fe      	b.n	800da8e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800da90 <xQueueCreateCountingSemaphore>:
	{
 800da90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800da92:	b940      	cbnz	r0, 800daa6 <xQueueCreateCountingSemaphore+0x16>
 800da94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da98:	f383 8811 	msr	BASEPRI, r3
 800da9c:	f3bf 8f6f 	isb	sy
 800daa0:	f3bf 8f4f 	dsb	sy
 800daa4:	e7fe      	b.n	800daa4 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800daa6:	4288      	cmp	r0, r1
 800daa8:	460e      	mov	r6, r1
 800daaa:	4604      	mov	r4, r0
 800daac:	d208      	bcs.n	800dac0 <xQueueCreateCountingSemaphore+0x30>
 800daae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dab2:	f383 8811 	msr	BASEPRI, r3
 800dab6:	f3bf 8f6f 	isb	sy
 800daba:	f3bf 8f4f 	dsb	sy
 800dabe:	e7fe      	b.n	800dabe <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800dac0:	2050      	movs	r0, #80	; 0x50
 800dac2:	f7ff fb63 	bl	800d18c <pvPortMalloc>
		if( pxNewQueue != NULL )
 800dac6:	4605      	mov	r5, r0
 800dac8:	b330      	cbz	r0, 800db18 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800daca:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800dacc:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800dad0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800dad4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800dad6:	f7ff fd2d 	bl	800d534 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dada:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800dade:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800dae0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dae2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dae6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800dae8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800daea:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800daec:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800daee:	22ff      	movs	r2, #255	; 0xff
 800daf0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800daf4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800daf6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800daf8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800dafc:	f105 0010 	add.w	r0, r5, #16
 800db00:	f7ff fc64 	bl	800d3cc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800db04:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800db08:	f7ff fc60 	bl	800d3cc <vListInitialise>
	taskEXIT_CRITICAL();
 800db0c:	f7ff fd34 	bl	800d578 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800db10:	2302      	movs	r3, #2
 800db12:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800db16:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800db18:	4628      	mov	r0, r5
 800db1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800db1c <xQueueGenericSend>:
{
 800db1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800db20:	b085      	sub	sp, #20
 800db22:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800db24:	2800      	cmp	r0, #0
 800db26:	f000 80a4 	beq.w	800dc72 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800db2a:	4688      	mov	r8, r1
 800db2c:	461f      	mov	r7, r3
 800db2e:	4604      	mov	r4, r0
 800db30:	2900      	cmp	r1, #0
 800db32:	f000 8091 	beq.w	800dc58 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800db36:	2f02      	cmp	r7, #2
 800db38:	d10b      	bne.n	800db52 <xQueueGenericSend+0x36>
 800db3a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800db3c:	2b01      	cmp	r3, #1
 800db3e:	d008      	beq.n	800db52 <xQueueGenericSend+0x36>
 800db40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db44:	f383 8811 	msr	BASEPRI, r3
 800db48:	f3bf 8f6f 	isb	sy
 800db4c:	f3bf 8f4f 	dsb	sy
 800db50:	e7fe      	b.n	800db50 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800db52:	f001 fc0f 	bl	800f374 <xTaskGetSchedulerState>
 800db56:	4605      	mov	r5, r0
 800db58:	2800      	cmp	r0, #0
 800db5a:	f000 8093 	beq.w	800dc84 <xQueueGenericSend+0x168>
 800db5e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db60:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800db64:	f7ff fce6 	bl	800d534 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800db68:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800db6a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800db6c:	429a      	cmp	r2, r3
 800db6e:	f0c0 80ef 	bcc.w	800dd50 <xQueueGenericSend+0x234>
 800db72:	2f02      	cmp	r7, #2
 800db74:	f000 80ec 	beq.w	800dd50 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800db78:	9801      	ldr	r0, [sp, #4]
 800db7a:	2800      	cmp	r0, #0
 800db7c:	f000 8101 	beq.w	800dd82 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800db80:	2d00      	cmp	r5, #0
 800db82:	f000 80e1 	beq.w	800dd48 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800db86:	f7ff fcf7 	bl	800d578 <vPortExitCritical>
		vTaskSuspendAll();
 800db8a:	f001 fa49 	bl	800f020 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800db8e:	f7ff fcd1 	bl	800d534 <vPortEnterCritical>
 800db92:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800db96:	2bff      	cmp	r3, #255	; 0xff
 800db98:	bf04      	itt	eq
 800db9a:	2300      	moveq	r3, #0
 800db9c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dba0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dba4:	2bff      	cmp	r3, #255	; 0xff
 800dba6:	bf04      	itt	eq
 800dba8:	2300      	moveq	r3, #0
 800dbaa:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800dbae:	f7ff fce3 	bl	800d578 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dbb2:	a901      	add	r1, sp, #4
 800dbb4:	a802      	add	r0, sp, #8
 800dbb6:	f001 fb8f 	bl	800f2d8 <xTaskCheckForTimeOut>
 800dbba:	2800      	cmp	r0, #0
 800dbbc:	f040 80e6 	bne.w	800dd8c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800dbc0:	f7ff fcb8 	bl	800d534 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800dbc4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dbc6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dbc8:	429a      	cmp	r2, r3
 800dbca:	d068      	beq.n	800dc9e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800dbcc:	f7ff fcd4 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dbd0:	f7ff fcb0 	bl	800d534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dbd4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800dbd8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbda:	2d00      	cmp	r5, #0
 800dbdc:	dc04      	bgt.n	800dbe8 <xQueueGenericSend+0xcc>
 800dbde:	e011      	b.n	800dc04 <xQueueGenericSend+0xe8>
			--cTxLock;
 800dbe0:	1e6a      	subs	r2, r5, #1
 800dbe2:	b2d3      	uxtb	r3, r2
 800dbe4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dbe6:	b16b      	cbz	r3, 800dc04 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbe8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dbec:	b153      	cbz	r3, 800dc04 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbee:	f001 fb1f 	bl	800f230 <xTaskRemoveFromEventList>
 800dbf2:	2800      	cmp	r0, #0
 800dbf4:	d0f4      	beq.n	800dbe0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800dbf6:	f001 fbb7 	bl	800f368 <vTaskMissedYield>
			--cTxLock;
 800dbfa:	1e6a      	subs	r2, r5, #1
 800dbfc:	b2d3      	uxtb	r3, r2
 800dbfe:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dc00:	2b00      	cmp	r3, #0
 800dc02:	d1f1      	bne.n	800dbe8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800dc04:	23ff      	movs	r3, #255	; 0xff
 800dc06:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dc0a:	f7ff fcb5 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dc0e:	f7ff fc91 	bl	800d534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dc12:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800dc16:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc18:	2d00      	cmp	r5, #0
 800dc1a:	dd14      	ble.n	800dc46 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc1c:	f104 0910 	add.w	r9, r4, #16
 800dc20:	e003      	b.n	800dc2a <xQueueGenericSend+0x10e>
				--cRxLock;
 800dc22:	1e6a      	subs	r2, r5, #1
 800dc24:	b2d3      	uxtb	r3, r2
 800dc26:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc28:	b16b      	cbz	r3, 800dc46 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc2a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc2c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc2e:	b153      	cbz	r3, 800dc46 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc30:	f001 fafe 	bl	800f230 <xTaskRemoveFromEventList>
 800dc34:	2800      	cmp	r0, #0
 800dc36:	d0f4      	beq.n	800dc22 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800dc38:	f001 fb96 	bl	800f368 <vTaskMissedYield>
				--cRxLock;
 800dc3c:	1e6a      	subs	r2, r5, #1
 800dc3e:	b2d3      	uxtb	r3, r2
 800dc40:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dc42:	2b00      	cmp	r3, #0
 800dc44:	d1f1      	bne.n	800dc2a <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800dc46:	23ff      	movs	r3, #255	; 0xff
 800dc48:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dc4c:	f7ff fc94 	bl	800d578 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800dc50:	f001 f9ee 	bl	800f030 <xTaskResumeAll>
 800dc54:	2501      	movs	r5, #1
 800dc56:	e785      	b.n	800db64 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dc58:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dc5a:	2b00      	cmp	r3, #0
 800dc5c:	f43f af6b 	beq.w	800db36 <xQueueGenericSend+0x1a>
 800dc60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc64:	f383 8811 	msr	BASEPRI, r3
 800dc68:	f3bf 8f6f 	isb	sy
 800dc6c:	f3bf 8f4f 	dsb	sy
 800dc70:	e7fe      	b.n	800dc70 <xQueueGenericSend+0x154>
 800dc72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc76:	f383 8811 	msr	BASEPRI, r3
 800dc7a:	f3bf 8f6f 	isb	sy
 800dc7e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dc82:	e7fe      	b.n	800dc82 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc84:	9b01      	ldr	r3, [sp, #4]
 800dc86:	2b00      	cmp	r3, #0
 800dc88:	f43f af6a 	beq.w	800db60 <xQueueGenericSend+0x44>
 800dc8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc90:	f383 8811 	msr	BASEPRI, r3
 800dc94:	f3bf 8f6f 	isb	sy
 800dc98:	f3bf 8f4f 	dsb	sy
 800dc9c:	e7fe      	b.n	800dc9c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dc9e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800dca2:	f7ff fc69 	bl	800d578 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dca6:	9901      	ldr	r1, [sp, #4]
 800dca8:	4648      	mov	r0, r9
 800dcaa:	f001 fa33 	bl	800f114 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800dcae:	f7ff fc41 	bl	800d534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dcb2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dcb6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcb8:	2d00      	cmp	r5, #0
 800dcba:	dc04      	bgt.n	800dcc6 <xQueueGenericSend+0x1aa>
 800dcbc:	e011      	b.n	800dce2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800dcbe:	1e6b      	subs	r3, r5, #1
 800dcc0:	b2da      	uxtb	r2, r3
 800dcc2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcc4:	b16a      	cbz	r2, 800dce2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcc8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcca:	b153      	cbz	r3, 800dce2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dccc:	f001 fab0 	bl	800f230 <xTaskRemoveFromEventList>
 800dcd0:	2800      	cmp	r0, #0
 800dcd2:	d0f4      	beq.n	800dcbe <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800dcd4:	f001 fb48 	bl	800f368 <vTaskMissedYield>
			--cTxLock;
 800dcd8:	1e6b      	subs	r3, r5, #1
 800dcda:	b2da      	uxtb	r2, r3
 800dcdc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcde:	2a00      	cmp	r2, #0
 800dce0:	d1f1      	bne.n	800dcc6 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800dce2:	23ff      	movs	r3, #255	; 0xff
 800dce4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dce8:	f7ff fc46 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dcec:	f7ff fc22 	bl	800d534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dcf0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dcf4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dcf6:	2d00      	cmp	r5, #0
 800dcf8:	dc04      	bgt.n	800dd04 <xQueueGenericSend+0x1e8>
 800dcfa:	e011      	b.n	800dd20 <xQueueGenericSend+0x204>
				--cRxLock;
 800dcfc:	1e6b      	subs	r3, r5, #1
 800dcfe:	b2da      	uxtb	r2, r3
 800dd00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd02:	b16a      	cbz	r2, 800dd20 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd04:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd06:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd08:	b153      	cbz	r3, 800dd20 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd0a:	f001 fa91 	bl	800f230 <xTaskRemoveFromEventList>
 800dd0e:	2800      	cmp	r0, #0
 800dd10:	d0f4      	beq.n	800dcfc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800dd12:	f001 fb29 	bl	800f368 <vTaskMissedYield>
				--cRxLock;
 800dd16:	1e6b      	subs	r3, r5, #1
 800dd18:	b2da      	uxtb	r2, r3
 800dd1a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd1c:	2a00      	cmp	r2, #0
 800dd1e:	d1f1      	bne.n	800dd04 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800dd20:	23ff      	movs	r3, #255	; 0xff
 800dd22:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dd26:	f7ff fc27 	bl	800d578 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800dd2a:	f001 f981 	bl	800f030 <xTaskResumeAll>
 800dd2e:	2800      	cmp	r0, #0
 800dd30:	d190      	bne.n	800dc54 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800dd32:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd36:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd3a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd3e:	f3bf 8f4f 	dsb	sy
 800dd42:	f3bf 8f6f 	isb	sy
 800dd46:	e785      	b.n	800dc54 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dd48:	a802      	add	r0, sp, #8
 800dd4a:	f001 fab9 	bl	800f2c0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800dd4e:	e71a      	b.n	800db86 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dd50:	463a      	mov	r2, r7
 800dd52:	4641      	mov	r1, r8
 800dd54:	4620      	mov	r0, r4
 800dd56:	f7ff fd4f 	bl	800d7f8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dd5c:	2b00      	cmp	r3, #0
 800dd5e:	d153      	bne.n	800de08 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800dd60:	b148      	cbz	r0, 800dd76 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800dd62:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dd66:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dd6a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd6e:	f3bf 8f4f 	dsb	sy
 800dd72:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dd76:	f7ff fbff 	bl	800d578 <vPortExitCritical>
				return pdPASS;
 800dd7a:	2001      	movs	r0, #1
}
 800dd7c:	b005      	add	sp, #20
 800dd7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dd82:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800dd84:	f7ff fbf8 	bl	800d578 <vPortExitCritical>
					return errQUEUE_FULL;
 800dd88:	9800      	ldr	r0, [sp, #0]
 800dd8a:	e7f7      	b.n	800dd7c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800dd8c:	f7ff fbd2 	bl	800d534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dd90:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dd94:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd96:	2d00      	cmp	r5, #0
 800dd98:	dd10      	ble.n	800ddbc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd9a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800dd9e:	e003      	b.n	800dda8 <xQueueGenericSend+0x28c>
			--cTxLock;
 800dda0:	1e6b      	subs	r3, r5, #1
 800dda2:	b2da      	uxtb	r2, r3
 800dda4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dda6:	b14a      	cbz	r2, 800ddbc <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dda8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddaa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ddac:	b133      	cbz	r3, 800ddbc <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddae:	f001 fa3f 	bl	800f230 <xTaskRemoveFromEventList>
 800ddb2:	2800      	cmp	r0, #0
 800ddb4:	d0f4      	beq.n	800dda0 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800ddb6:	f001 fad7 	bl	800f368 <vTaskMissedYield>
 800ddba:	e7f1      	b.n	800dda0 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800ddbc:	23ff      	movs	r3, #255	; 0xff
 800ddbe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ddc2:	f7ff fbd9 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ddc6:	f7ff fbb5 	bl	800d534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ddca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ddce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddd0:	2d00      	cmp	r5, #0
 800ddd2:	dd10      	ble.n	800ddf6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddd4:	f104 0610 	add.w	r6, r4, #16
 800ddd8:	e003      	b.n	800dde2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800ddda:	1e6b      	subs	r3, r5, #1
 800dddc:	b2da      	uxtb	r2, r3
 800ddde:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dde0:	b14a      	cbz	r2, 800ddf6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dde2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dde4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dde6:	b133      	cbz	r3, 800ddf6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dde8:	f001 fa22 	bl	800f230 <xTaskRemoveFromEventList>
 800ddec:	2800      	cmp	r0, #0
 800ddee:	d0f4      	beq.n	800ddda <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800ddf0:	f001 faba 	bl	800f368 <vTaskMissedYield>
 800ddf4:	e7f1      	b.n	800ddda <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800ddf6:	23ff      	movs	r3, #255	; 0xff
 800ddf8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ddfc:	f7ff fbbc 	bl	800d578 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800de00:	f001 f916 	bl	800f030 <xTaskResumeAll>
			return errQUEUE_FULL;
 800de04:	2000      	movs	r0, #0
 800de06:	e7b9      	b.n	800dd7c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de08:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800de0c:	f001 fa10 	bl	800f230 <xTaskRemoveFromEventList>
 800de10:	2800      	cmp	r0, #0
 800de12:	d0b0      	beq.n	800dd76 <xQueueGenericSend+0x25a>
 800de14:	e7a5      	b.n	800dd62 <xQueueGenericSend+0x246>
 800de16:	bf00      	nop

0800de18 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800de18:	2800      	cmp	r0, #0
 800de1a:	d04b      	beq.n	800deb4 <xQueueGenericSendFromISR+0x9c>
{
 800de1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de20:	460e      	mov	r6, r1
 800de22:	4617      	mov	r7, r2
 800de24:	461d      	mov	r5, r3
 800de26:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800de28:	b321      	cbz	r1, 800de74 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800de2a:	2d02      	cmp	r5, #2
 800de2c:	d10b      	bne.n	800de46 <xQueueGenericSendFromISR+0x2e>
 800de2e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800de30:	2b01      	cmp	r3, #1
 800de32:	d008      	beq.n	800de46 <xQueueGenericSendFromISR+0x2e>
 800de34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de38:	f383 8811 	msr	BASEPRI, r3
 800de3c:	f3bf 8f6f 	isb	sy
 800de40:	f3bf 8f4f 	dsb	sy
 800de44:	e7fe      	b.n	800de44 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800de46:	f7ff fca9 	bl	800d79c <vPortValidateInterruptPriority>
	__asm volatile
 800de4a:	f3ef 8811 	mrs	r8, BASEPRI
 800de4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de52:	f383 8811 	msr	BASEPRI, r3
 800de56:	f3bf 8f6f 	isb	sy
 800de5a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800de5e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800de60:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800de62:	429a      	cmp	r2, r3
 800de64:	d312      	bcc.n	800de8c <xQueueGenericSendFromISR+0x74>
 800de66:	2d02      	cmp	r5, #2
 800de68:	d010      	beq.n	800de8c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800de6a:	2000      	movs	r0, #0
	__asm volatile
 800de6c:	f388 8811 	msr	BASEPRI, r8
}
 800de70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800de74:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800de76:	2b00      	cmp	r3, #0
 800de78:	d0d7      	beq.n	800de2a <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800de7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de7e:	f383 8811 	msr	BASEPRI, r3
 800de82:	f3bf 8f6f 	isb	sy
 800de86:	f3bf 8f4f 	dsb	sy
 800de8a:	e7fe      	b.n	800de8a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800de8c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800de8e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800de92:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800de94:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800de96:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800de98:	4620      	mov	r0, r4
 800de9a:	f7ff fcad 	bl	800d7f8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800de9e:	1c6b      	adds	r3, r5, #1
 800dea0:	d011      	beq.n	800dec6 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dea2:	1c6b      	adds	r3, r5, #1
 800dea4:	b25b      	sxtb	r3, r3
 800dea6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800deaa:	2001      	movs	r0, #1
	__asm volatile
 800deac:	f388 8811 	msr	BASEPRI, r8
}
 800deb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800deb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deb8:	f383 8811 	msr	BASEPRI, r3
 800debc:	f3bf 8f6f 	isb	sy
 800dec0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dec4:	e7fe      	b.n	800dec4 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dec6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dec8:	2b00      	cmp	r3, #0
 800deca:	d0ee      	beq.n	800deaa <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800decc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ded0:	f001 f9ae 	bl	800f230 <xTaskRemoveFromEventList>
 800ded4:	2800      	cmp	r0, #0
 800ded6:	d0e8      	beq.n	800deaa <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800ded8:	2f00      	cmp	r7, #0
 800deda:	d0e6      	beq.n	800deaa <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dedc:	2001      	movs	r0, #1
 800dede:	6038      	str	r0, [r7, #0]
 800dee0:	e7c4      	b.n	800de6c <xQueueGenericSendFromISR+0x54>
 800dee2:	bf00      	nop

0800dee4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800dee4:	b370      	cbz	r0, 800df44 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dee6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800dee8:	b570      	push	{r4, r5, r6, lr}
 800deea:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800deec:	b143      	cbz	r3, 800df00 <xQueueGiveFromISR+0x1c>
 800deee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800def2:	f383 8811 	msr	BASEPRI, r3
 800def6:	f3bf 8f6f 	isb	sy
 800defa:	f3bf 8f4f 	dsb	sy
 800defe:	e7fe      	b.n	800defe <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800df00:	6803      	ldr	r3, [r0, #0]
 800df02:	460c      	mov	r4, r1
 800df04:	b33b      	cbz	r3, 800df56 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800df06:	f7ff fc49 	bl	800d79c <vPortValidateInterruptPriority>
	__asm volatile
 800df0a:	f3ef 8511 	mrs	r5, BASEPRI
 800df0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df12:	f383 8811 	msr	BASEPRI, r3
 800df16:	f3bf 8f6f 	isb	sy
 800df1a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800df1e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800df20:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800df22:	429a      	cmp	r2, r3
 800df24:	d923      	bls.n	800df6e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800df26:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800df2a:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800df2c:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800df2e:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800df30:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800df32:	d020      	beq.n	800df76 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800df34:	3301      	adds	r3, #1
 800df36:	b25b      	sxtb	r3, r3
 800df38:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800df3c:	2001      	movs	r0, #1
	__asm volatile
 800df3e:	f385 8811 	msr	BASEPRI, r5
}
 800df42:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800df44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df48:	f383 8811 	msr	BASEPRI, r3
 800df4c:	f3bf 8f6f 	isb	sy
 800df50:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800df54:	e7fe      	b.n	800df54 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800df56:	6883      	ldr	r3, [r0, #8]
 800df58:	2b00      	cmp	r3, #0
 800df5a:	d0d4      	beq.n	800df06 <xQueueGiveFromISR+0x22>
 800df5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df60:	f383 8811 	msr	BASEPRI, r3
 800df64:	f3bf 8f6f 	isb	sy
 800df68:	f3bf 8f4f 	dsb	sy
 800df6c:	e7fe      	b.n	800df6c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800df6e:	2000      	movs	r0, #0
	__asm volatile
 800df70:	f385 8811 	msr	BASEPRI, r5
}
 800df74:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800df76:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800df78:	2b00      	cmp	r3, #0
 800df7a:	d0df      	beq.n	800df3c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800df7c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800df80:	f001 f956 	bl	800f230 <xTaskRemoveFromEventList>
 800df84:	2800      	cmp	r0, #0
 800df86:	d0d9      	beq.n	800df3c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800df88:	2c00      	cmp	r4, #0
 800df8a:	d0d7      	beq.n	800df3c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800df8c:	2001      	movs	r0, #1
 800df8e:	6020      	str	r0, [r4, #0]
 800df90:	e7ee      	b.n	800df70 <xQueueGiveFromISR+0x8c>
 800df92:	bf00      	nop

0800df94 <xQueueReceive>:
{
 800df94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800df98:	b085      	sub	sp, #20
 800df9a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800df9c:	2800      	cmp	r0, #0
 800df9e:	f000 815c 	beq.w	800e25a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dfa2:	460f      	mov	r7, r1
 800dfa4:	4604      	mov	r4, r0
 800dfa6:	2900      	cmp	r1, #0
 800dfa8:	d079      	beq.n	800e09e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dfaa:	f001 f9e3 	bl	800f374 <xTaskGetSchedulerState>
 800dfae:	2800      	cmp	r0, #0
 800dfb0:	f000 8081 	beq.w	800e0b6 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800dfb4:	f7ff fabe 	bl	800d534 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dfb8:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dfba:	2d00      	cmp	r5, #0
 800dfbc:	f040 8138 	bne.w	800e230 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dfc0:	9b01      	ldr	r3, [sp, #4]
 800dfc2:	2b00      	cmp	r3, #0
 800dfc4:	f000 80d5 	beq.w	800e172 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dfc8:	a802      	add	r0, sp, #8
 800dfca:	f001 f979 	bl	800f2c0 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800dfce:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dfd0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800dfd4:	f7ff fad0 	bl	800d578 <vPortExitCritical>
		vTaskSuspendAll();
 800dfd8:	f001 f822 	bl	800f020 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dfdc:	f7ff faaa 	bl	800d534 <vPortEnterCritical>
 800dfe0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dfe4:	2bff      	cmp	r3, #255	; 0xff
 800dfe6:	bf08      	it	eq
 800dfe8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800dfec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dff0:	2bff      	cmp	r3, #255	; 0xff
 800dff2:	bf08      	it	eq
 800dff4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800dff8:	f7ff fabe 	bl	800d578 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dffc:	a901      	add	r1, sp, #4
 800dffe:	a802      	add	r0, sp, #8
 800e000:	f001 f96a 	bl	800f2d8 <xTaskCheckForTimeOut>
 800e004:	2800      	cmp	r0, #0
 800e006:	d163      	bne.n	800e0d0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e008:	f7ff fa94 	bl	800d534 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e00c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e00e:	2b00      	cmp	r3, #0
 800e010:	f000 80b5 	beq.w	800e17e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e014:	f7ff fab0 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e018:	f7ff fa8c 	bl	800d534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e01c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e020:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e022:	2d00      	cmp	r5, #0
 800e024:	dc04      	bgt.n	800e030 <xQueueReceive+0x9c>
 800e026:	e011      	b.n	800e04c <xQueueReceive+0xb8>
			--cTxLock;
 800e028:	1e6b      	subs	r3, r5, #1
 800e02a:	b2da      	uxtb	r2, r3
 800e02c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e02e:	b16a      	cbz	r2, 800e04c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e030:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e032:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e034:	b153      	cbz	r3, 800e04c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e036:	f001 f8fb 	bl	800f230 <xTaskRemoveFromEventList>
 800e03a:	2800      	cmp	r0, #0
 800e03c:	d0f4      	beq.n	800e028 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e03e:	f001 f993 	bl	800f368 <vTaskMissedYield>
			--cTxLock;
 800e042:	1e6b      	subs	r3, r5, #1
 800e044:	b2da      	uxtb	r2, r3
 800e046:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e048:	2a00      	cmp	r2, #0
 800e04a:	d1f1      	bne.n	800e030 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e04c:	23ff      	movs	r3, #255	; 0xff
 800e04e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e052:	f7ff fa91 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e056:	f7ff fa6d 	bl	800d534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e05a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e05e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e060:	2d00      	cmp	r5, #0
 800e062:	dd14      	ble.n	800e08e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e064:	f104 0910 	add.w	r9, r4, #16
 800e068:	e003      	b.n	800e072 <xQueueReceive+0xde>
				--cRxLock;
 800e06a:	1e6b      	subs	r3, r5, #1
 800e06c:	b2da      	uxtb	r2, r3
 800e06e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e070:	b16a      	cbz	r2, 800e08e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e072:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e074:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e076:	b153      	cbz	r3, 800e08e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e078:	f001 f8da 	bl	800f230 <xTaskRemoveFromEventList>
 800e07c:	2800      	cmp	r0, #0
 800e07e:	d0f4      	beq.n	800e06a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e080:	f001 f972 	bl	800f368 <vTaskMissedYield>
				--cRxLock;
 800e084:	1e6b      	subs	r3, r5, #1
 800e086:	b2da      	uxtb	r2, r3
 800e088:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e08a:	2a00      	cmp	r2, #0
 800e08c:	d1f1      	bne.n	800e072 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e08e:	23ff      	movs	r3, #255	; 0xff
 800e090:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e094:	f7ff fa70 	bl	800d578 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e098:	f000 ffca 	bl	800f030 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800e09c:	e060      	b.n	800e160 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e09e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e0a0:	2b00      	cmp	r3, #0
 800e0a2:	d082      	beq.n	800dfaa <xQueueReceive+0x16>
	__asm volatile
 800e0a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0a8:	f383 8811 	msr	BASEPRI, r3
 800e0ac:	f3bf 8f6f 	isb	sy
 800e0b0:	f3bf 8f4f 	dsb	sy
 800e0b4:	e7fe      	b.n	800e0b4 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e0b6:	9b01      	ldr	r3, [sp, #4]
 800e0b8:	2b00      	cmp	r3, #0
 800e0ba:	f43f af7b 	beq.w	800dfb4 <xQueueReceive+0x20>
 800e0be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0c2:	f383 8811 	msr	BASEPRI, r3
 800e0c6:	f3bf 8f6f 	isb	sy
 800e0ca:	f3bf 8f4f 	dsb	sy
 800e0ce:	e7fe      	b.n	800e0ce <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800e0d0:	f7ff fa30 	bl	800d534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e0d4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e0d8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0da:	2d00      	cmp	r5, #0
 800e0dc:	dc04      	bgt.n	800e0e8 <xQueueReceive+0x154>
 800e0de:	e011      	b.n	800e104 <xQueueReceive+0x170>
			--cTxLock;
 800e0e0:	1e6b      	subs	r3, r5, #1
 800e0e2:	b2da      	uxtb	r2, r3
 800e0e4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e0e6:	b16a      	cbz	r2, 800e104 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0ea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e0ec:	b153      	cbz	r3, 800e104 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e0ee:	f001 f89f 	bl	800f230 <xTaskRemoveFromEventList>
 800e0f2:	2800      	cmp	r0, #0
 800e0f4:	d0f4      	beq.n	800e0e0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e0f6:	f001 f937 	bl	800f368 <vTaskMissedYield>
			--cTxLock;
 800e0fa:	1e6b      	subs	r3, r5, #1
 800e0fc:	b2da      	uxtb	r2, r3
 800e0fe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e100:	2a00      	cmp	r2, #0
 800e102:	d1f1      	bne.n	800e0e8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800e104:	23ff      	movs	r3, #255	; 0xff
 800e106:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e10a:	f7ff fa35 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e10e:	f7ff fa11 	bl	800d534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e112:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e116:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e118:	2d00      	cmp	r5, #0
 800e11a:	dd14      	ble.n	800e146 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e11c:	f104 0910 	add.w	r9, r4, #16
 800e120:	e003      	b.n	800e12a <xQueueReceive+0x196>
				--cRxLock;
 800e122:	1e6b      	subs	r3, r5, #1
 800e124:	b2da      	uxtb	r2, r3
 800e126:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e128:	b16a      	cbz	r2, 800e146 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e12a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e12c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e12e:	b153      	cbz	r3, 800e146 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e130:	f001 f87e 	bl	800f230 <xTaskRemoveFromEventList>
 800e134:	2800      	cmp	r0, #0
 800e136:	d0f4      	beq.n	800e122 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800e138:	f001 f916 	bl	800f368 <vTaskMissedYield>
				--cRxLock;
 800e13c:	1e6b      	subs	r3, r5, #1
 800e13e:	b2da      	uxtb	r2, r3
 800e140:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e142:	2a00      	cmp	r2, #0
 800e144:	d1f1      	bne.n	800e12a <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800e146:	23ff      	movs	r3, #255	; 0xff
 800e148:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e14c:	f7ff fa14 	bl	800d578 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e150:	f000 ff6e 	bl	800f030 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e154:	f7ff f9ee 	bl	800d534 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e158:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e15a:	b153      	cbz	r3, 800e172 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800e15c:	f7ff fa0c 	bl	800d578 <vPortExitCritical>
		taskENTER_CRITICAL();
 800e160:	f7ff f9e8 	bl	800d534 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e164:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e166:	2d00      	cmp	r5, #0
 800e168:	d162      	bne.n	800e230 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e16a:	9b01      	ldr	r3, [sp, #4]
 800e16c:	2b00      	cmp	r3, #0
 800e16e:	f47f af31 	bne.w	800dfd4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800e172:	f7ff fa01 	bl	800d578 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e176:	2000      	movs	r0, #0
}
 800e178:	b005      	add	sp, #20
 800e17a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800e17e:	f7ff f9fb 	bl	800d578 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e182:	9901      	ldr	r1, [sp, #4]
 800e184:	4630      	mov	r0, r6
 800e186:	f000 ffc5 	bl	800f114 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e18a:	f7ff f9d3 	bl	800d534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e18e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e192:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e194:	2d00      	cmp	r5, #0
 800e196:	dc04      	bgt.n	800e1a2 <xQueueReceive+0x20e>
 800e198:	e011      	b.n	800e1be <xQueueReceive+0x22a>
			--cTxLock;
 800e19a:	1e6b      	subs	r3, r5, #1
 800e19c:	b2da      	uxtb	r2, r3
 800e19e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e1a0:	b16a      	cbz	r2, 800e1be <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e1a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e1a4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e1a6:	b153      	cbz	r3, 800e1be <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e1a8:	f001 f842 	bl	800f230 <xTaskRemoveFromEventList>
 800e1ac:	2800      	cmp	r0, #0
 800e1ae:	d0f4      	beq.n	800e19a <xQueueReceive+0x206>
						vTaskMissedYield();
 800e1b0:	f001 f8da 	bl	800f368 <vTaskMissedYield>
			--cTxLock;
 800e1b4:	1e6b      	subs	r3, r5, #1
 800e1b6:	b2da      	uxtb	r2, r3
 800e1b8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e1ba:	2a00      	cmp	r2, #0
 800e1bc:	d1f1      	bne.n	800e1a2 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e1be:	23ff      	movs	r3, #255	; 0xff
 800e1c0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e1c4:	f7ff f9d8 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e1c8:	f7ff f9b4 	bl	800d534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e1cc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e1d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1d2:	2d00      	cmp	r5, #0
 800e1d4:	dd14      	ble.n	800e200 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1d6:	f104 0910 	add.w	r9, r4, #16
 800e1da:	e003      	b.n	800e1e4 <xQueueReceive+0x250>
				--cRxLock;
 800e1dc:	1e6b      	subs	r3, r5, #1
 800e1de:	b2da      	uxtb	r2, r3
 800e1e0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1e2:	b16a      	cbz	r2, 800e200 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1e4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1e6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1e8:	b153      	cbz	r3, 800e200 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1ea:	f001 f821 	bl	800f230 <xTaskRemoveFromEventList>
 800e1ee:	2800      	cmp	r0, #0
 800e1f0:	d0f4      	beq.n	800e1dc <xQueueReceive+0x248>
					vTaskMissedYield();
 800e1f2:	f001 f8b9 	bl	800f368 <vTaskMissedYield>
				--cRxLock;
 800e1f6:	1e6b      	subs	r3, r5, #1
 800e1f8:	b2da      	uxtb	r2, r3
 800e1fa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1fc:	2a00      	cmp	r2, #0
 800e1fe:	d1f1      	bne.n	800e1e4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800e200:	23ff      	movs	r3, #255	; 0xff
 800e202:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e206:	f7ff f9b7 	bl	800d578 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e20a:	f000 ff11 	bl	800f030 <xTaskResumeAll>
 800e20e:	2800      	cmp	r0, #0
 800e210:	d1a6      	bne.n	800e160 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800e212:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e216:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e21a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e21e:	f3bf 8f4f 	dsb	sy
 800e222:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800e226:	f7ff f985 	bl	800d534 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e22a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e22c:	2d00      	cmp	r5, #0
 800e22e:	d09c      	beq.n	800e16a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e230:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e232:	b152      	cbz	r2, 800e24a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e234:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e236:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e238:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e23a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e23c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e23e:	bf24      	itt	cs
 800e240:	6821      	ldrcs	r1, [r4, #0]
 800e242:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e244:	4638      	mov	r0, r7
 800e246:	f01b ffdc 	bl	802a202 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e24a:	3d01      	subs	r5, #1
 800e24c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e24e:	6923      	ldr	r3, [r4, #16]
 800e250:	b963      	cbnz	r3, 800e26c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800e252:	f7ff f991 	bl	800d578 <vPortExitCritical>
				return pdPASS;
 800e256:	2001      	movs	r0, #1
 800e258:	e78e      	b.n	800e178 <xQueueReceive+0x1e4>
 800e25a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e25e:	f383 8811 	msr	BASEPRI, r3
 800e262:	f3bf 8f6f 	isb	sy
 800e266:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e26a:	e7fe      	b.n	800e26a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e26c:	f104 0010 	add.w	r0, r4, #16
 800e270:	f000 ffde 	bl	800f230 <xTaskRemoveFromEventList>
 800e274:	2800      	cmp	r0, #0
 800e276:	d0ec      	beq.n	800e252 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800e278:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e27c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e280:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e284:	f3bf 8f4f 	dsb	sy
 800e288:	f3bf 8f6f 	isb	sy
 800e28c:	e7e1      	b.n	800e252 <xQueueReceive+0x2be>
 800e28e:	bf00      	nop

0800e290 <xQueueSemaphoreTake>:
{
 800e290:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e294:	b084      	sub	sp, #16
 800e296:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e298:	2800      	cmp	r0, #0
 800e29a:	d05c      	beq.n	800e356 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e29c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800e29e:	4604      	mov	r4, r0
 800e2a0:	b147      	cbz	r7, 800e2b4 <xQueueSemaphoreTake+0x24>
 800e2a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2a6:	f383 8811 	msr	BASEPRI, r3
 800e2aa:	f3bf 8f6f 	isb	sy
 800e2ae:	f3bf 8f4f 	dsb	sy
 800e2b2:	e7fe      	b.n	800e2b2 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e2b4:	f001 f85e 	bl	800f374 <xTaskGetSchedulerState>
 800e2b8:	4605      	mov	r5, r0
 800e2ba:	2800      	cmp	r0, #0
 800e2bc:	d054      	beq.n	800e368 <xQueueSemaphoreTake+0xd8>
 800e2be:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e2c0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e2c4:	f7ff f936 	bl	800d534 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e2c8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e2ca:	2b00      	cmp	r3, #0
 800e2cc:	f040 8148 	bne.w	800e560 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e2d0:	9b01      	ldr	r3, [sp, #4]
 800e2d2:	2b00      	cmp	r3, #0
 800e2d4:	f000 813a 	beq.w	800e54c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800e2d8:	2d00      	cmp	r5, #0
 800e2da:	f000 809d 	beq.w	800e418 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800e2de:	f7ff f94b 	bl	800d578 <vPortExitCritical>
		vTaskSuspendAll();
 800e2e2:	f000 fe9d 	bl	800f020 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e2e6:	f7ff f925 	bl	800d534 <vPortEnterCritical>
 800e2ea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e2ee:	2bff      	cmp	r3, #255	; 0xff
 800e2f0:	bf04      	itt	eq
 800e2f2:	2300      	moveq	r3, #0
 800e2f4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e2f8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e2fc:	2bff      	cmp	r3, #255	; 0xff
 800e2fe:	bf04      	itt	eq
 800e300:	2300      	moveq	r3, #0
 800e302:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e306:	f7ff f937 	bl	800d578 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e30a:	a901      	add	r1, sp, #4
 800e30c:	a802      	add	r0, sp, #8
 800e30e:	f000 ffe3 	bl	800f2d8 <xTaskCheckForTimeOut>
 800e312:	2800      	cmp	r0, #0
 800e314:	d135      	bne.n	800e382 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800e316:	f7ff f90d 	bl	800d534 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e31a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e31c:	2b00      	cmp	r3, #0
 800e31e:	f000 80a4 	beq.w	800e46a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800e322:	f7ff f929 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e326:	f7ff f905 	bl	800d534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e32a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e32e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e330:	2d00      	cmp	r5, #0
 800e332:	dc05      	bgt.n	800e340 <xQueueSemaphoreTake+0xb0>
 800e334:	e074      	b.n	800e420 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800e336:	1e6b      	subs	r3, r5, #1
 800e338:	b2da      	uxtb	r2, r3
 800e33a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e33c:	2a00      	cmp	r2, #0
 800e33e:	d06f      	beq.n	800e420 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e340:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e342:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e344:	2b00      	cmp	r3, #0
 800e346:	d06b      	beq.n	800e420 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e348:	f000 ff72 	bl	800f230 <xTaskRemoveFromEventList>
 800e34c:	2800      	cmp	r0, #0
 800e34e:	d0f2      	beq.n	800e336 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800e350:	f001 f80a 	bl	800f368 <vTaskMissedYield>
 800e354:	e7ef      	b.n	800e336 <xQueueSemaphoreTake+0xa6>
 800e356:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e35a:	f383 8811 	msr	BASEPRI, r3
 800e35e:	f3bf 8f6f 	isb	sy
 800e362:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800e366:	e7fe      	b.n	800e366 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e368:	9b01      	ldr	r3, [sp, #4]
 800e36a:	2b00      	cmp	r3, #0
 800e36c:	f000 80d4 	beq.w	800e518 <xQueueSemaphoreTake+0x288>
 800e370:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e374:	f383 8811 	msr	BASEPRI, r3
 800e378:	f3bf 8f6f 	isb	sy
 800e37c:	f3bf 8f4f 	dsb	sy
 800e380:	e7fe      	b.n	800e380 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800e382:	f7ff f8d7 	bl	800d534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e386:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e38a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e38c:	2d00      	cmp	r5, #0
 800e38e:	dc04      	bgt.n	800e39a <xQueueSemaphoreTake+0x10a>
 800e390:	e011      	b.n	800e3b6 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800e392:	1e6b      	subs	r3, r5, #1
 800e394:	b2da      	uxtb	r2, r3
 800e396:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e398:	b16a      	cbz	r2, 800e3b6 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e39a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e39c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e39e:	b153      	cbz	r3, 800e3b6 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e3a0:	f000 ff46 	bl	800f230 <xTaskRemoveFromEventList>
 800e3a4:	2800      	cmp	r0, #0
 800e3a6:	d0f4      	beq.n	800e392 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800e3a8:	f000 ffde 	bl	800f368 <vTaskMissedYield>
			--cTxLock;
 800e3ac:	1e6b      	subs	r3, r5, #1
 800e3ae:	b2da      	uxtb	r2, r3
 800e3b0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e3b2:	2a00      	cmp	r2, #0
 800e3b4:	d1f1      	bne.n	800e39a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800e3b6:	23ff      	movs	r3, #255	; 0xff
 800e3b8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e3bc:	f7ff f8dc 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e3c0:	f7ff f8b8 	bl	800d534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e3c4:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e3c8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3ca:	2d00      	cmp	r5, #0
 800e3cc:	dd14      	ble.n	800e3f8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3ce:	f104 0810 	add.w	r8, r4, #16
 800e3d2:	e003      	b.n	800e3dc <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800e3d4:	1e6b      	subs	r3, r5, #1
 800e3d6:	b2da      	uxtb	r2, r3
 800e3d8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3da:	b16a      	cbz	r2, 800e3f8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3dc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3de:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e3e0:	b153      	cbz	r3, 800e3f8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e3e2:	f000 ff25 	bl	800f230 <xTaskRemoveFromEventList>
 800e3e6:	2800      	cmp	r0, #0
 800e3e8:	d0f4      	beq.n	800e3d4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800e3ea:	f000 ffbd 	bl	800f368 <vTaskMissedYield>
				--cRxLock;
 800e3ee:	1e6b      	subs	r3, r5, #1
 800e3f0:	b2da      	uxtb	r2, r3
 800e3f2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e3f4:	2a00      	cmp	r2, #0
 800e3f6:	d1f1      	bne.n	800e3dc <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800e3f8:	23ff      	movs	r3, #255	; 0xff
 800e3fa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e3fe:	f7ff f8bb 	bl	800d578 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e402:	f000 fe15 	bl	800f030 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800e406:	f7ff f895 	bl	800d534 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e40a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e40c:	2b00      	cmp	r3, #0
 800e40e:	d07c      	beq.n	800e50a <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800e410:	f7ff f8b2 	bl	800d578 <vPortExitCritical>
	return xReturn;
 800e414:	2501      	movs	r5, #1
 800e416:	e755      	b.n	800e2c4 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e418:	a802      	add	r0, sp, #8
 800e41a:	f000 ff51 	bl	800f2c0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e41e:	e75e      	b.n	800e2de <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e420:	23ff      	movs	r3, #255	; 0xff
 800e422:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e426:	f7ff f8a7 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e42a:	f7ff f883 	bl	800d534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e42e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e432:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e434:	2d00      	cmp	r5, #0
 800e436:	dd10      	ble.n	800e45a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e438:	f104 0810 	add.w	r8, r4, #16
 800e43c:	e003      	b.n	800e446 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800e43e:	1e6b      	subs	r3, r5, #1
 800e440:	b2da      	uxtb	r2, r3
 800e442:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e444:	b14a      	cbz	r2, 800e45a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e446:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e448:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e44a:	b133      	cbz	r3, 800e45a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e44c:	f000 fef0 	bl	800f230 <xTaskRemoveFromEventList>
 800e450:	2800      	cmp	r0, #0
 800e452:	d0f4      	beq.n	800e43e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800e454:	f000 ff88 	bl	800f368 <vTaskMissedYield>
 800e458:	e7f1      	b.n	800e43e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800e45a:	23ff      	movs	r3, #255	; 0xff
 800e45c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e460:	f7ff f88a 	bl	800d578 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e464:	f000 fde4 	bl	800f030 <xTaskResumeAll>
 800e468:	e7d4      	b.n	800e414 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e46a:	f7ff f885 	bl	800d578 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e46e:	6823      	ldr	r3, [r4, #0]
 800e470:	2b00      	cmp	r3, #0
 800e472:	d062      	beq.n	800e53a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e474:	9901      	ldr	r1, [sp, #4]
 800e476:	4630      	mov	r0, r6
 800e478:	f000 fe4c 	bl	800f114 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e47c:	f7ff f85a 	bl	800d534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e480:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e484:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e486:	2d00      	cmp	r5, #0
 800e488:	dc04      	bgt.n	800e494 <xQueueSemaphoreTake+0x204>
 800e48a:	e00d      	b.n	800e4a8 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800e48c:	1e6b      	subs	r3, r5, #1
 800e48e:	b2da      	uxtb	r2, r3
 800e490:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e492:	b14a      	cbz	r2, 800e4a8 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e494:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e496:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e498:	b133      	cbz	r3, 800e4a8 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e49a:	f000 fec9 	bl	800f230 <xTaskRemoveFromEventList>
 800e49e:	2800      	cmp	r0, #0
 800e4a0:	d0f4      	beq.n	800e48c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800e4a2:	f000 ff61 	bl	800f368 <vTaskMissedYield>
 800e4a6:	e7f1      	b.n	800e48c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e4a8:	23ff      	movs	r3, #255	; 0xff
 800e4aa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e4ae:	f7ff f863 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e4b2:	f7ff f83f 	bl	800d534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e4b6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e4ba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4bc:	2d00      	cmp	r5, #0
 800e4be:	dd10      	ble.n	800e4e2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4c0:	f104 0810 	add.w	r8, r4, #16
 800e4c4:	e003      	b.n	800e4ce <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800e4c6:	1e6b      	subs	r3, r5, #1
 800e4c8:	b2da      	uxtb	r2, r3
 800e4ca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4cc:	b14a      	cbz	r2, 800e4e2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4ce:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4d0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4d2:	b133      	cbz	r3, 800e4e2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4d4:	f000 feac 	bl	800f230 <xTaskRemoveFromEventList>
 800e4d8:	2800      	cmp	r0, #0
 800e4da:	d0f4      	beq.n	800e4c6 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800e4dc:	f000 ff44 	bl	800f368 <vTaskMissedYield>
 800e4e0:	e7f1      	b.n	800e4c6 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800e4e2:	23ff      	movs	r3, #255	; 0xff
 800e4e4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e4e8:	f7ff f846 	bl	800d578 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e4ec:	f000 fda0 	bl	800f030 <xTaskResumeAll>
 800e4f0:	2800      	cmp	r0, #0
 800e4f2:	d18f      	bne.n	800e414 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800e4f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e4f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e4fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e500:	f3bf 8f4f 	dsb	sy
 800e504:	f3bf 8f6f 	isb	sy
 800e508:	e784      	b.n	800e414 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800e50a:	f7ff f835 	bl	800d578 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800e50e:	b92f      	cbnz	r7, 800e51c <xQueueSemaphoreTake+0x28c>
}
 800e510:	4638      	mov	r0, r7
 800e512:	b004      	add	sp, #16
 800e514:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e518:	4607      	mov	r7, r0
 800e51a:	e6d1      	b.n	800e2c0 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800e51c:	f7ff f80a 	bl	800d534 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e520:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e522:	b119      	cbz	r1, 800e52c <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e524:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e526:	6819      	ldr	r1, [r3, #0]
 800e528:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e52c:	68a0      	ldr	r0, [r4, #8]
 800e52e:	f000 ffbd 	bl	800f4ac <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e532:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800e534:	f7ff f820 	bl	800d578 <vPortExitCritical>
 800e538:	e7ea      	b.n	800e510 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800e53a:	f7fe fffb 	bl	800d534 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e53e:	68a0      	ldr	r0, [r4, #8]
 800e540:	f000 ff28 	bl	800f394 <xTaskPriorityInherit>
 800e544:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800e546:	f7ff f817 	bl	800d578 <vPortExitCritical>
 800e54a:	e793      	b.n	800e474 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e54c:	b197      	cbz	r7, 800e574 <xQueueSemaphoreTake+0x2e4>
 800e54e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e552:	f383 8811 	msr	BASEPRI, r3
 800e556:	f3bf 8f6f 	isb	sy
 800e55a:	f3bf 8f4f 	dsb	sy
 800e55e:	e7fe      	b.n	800e55e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e560:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e562:	3b01      	subs	r3, #1
 800e564:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e566:	b1ca      	cbz	r2, 800e59c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e568:	6923      	ldr	r3, [r4, #16]
 800e56a:	b933      	cbnz	r3, 800e57a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800e56c:	f7ff f804 	bl	800d578 <vPortExitCritical>
				return pdPASS;
 800e570:	2701      	movs	r7, #1
 800e572:	e7cd      	b.n	800e510 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800e574:	f7ff f800 	bl	800d578 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e578:	e7ca      	b.n	800e510 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e57a:	f104 0010 	add.w	r0, r4, #16
 800e57e:	f000 fe57 	bl	800f230 <xTaskRemoveFromEventList>
 800e582:	2800      	cmp	r0, #0
 800e584:	d0f2      	beq.n	800e56c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800e586:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e58a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e58e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e592:	f3bf 8f4f 	dsb	sy
 800e596:	f3bf 8f6f 	isb	sy
 800e59a:	e7e7      	b.n	800e56c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e59c:	f000 ffda 	bl	800f554 <pvTaskIncrementMutexHeldCount>
 800e5a0:	60a0      	str	r0, [r4, #8]
 800e5a2:	e7e1      	b.n	800e568 <xQueueSemaphoreTake+0x2d8>

0800e5a4 <xQueueReceiveFromISR>:
{
 800e5a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800e5a8:	b310      	cbz	r0, 800e5f0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e5aa:	460e      	mov	r6, r1
 800e5ac:	4617      	mov	r7, r2
 800e5ae:	4604      	mov	r4, r0
 800e5b0:	b191      	cbz	r1, 800e5d8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e5b2:	f7ff f8f3 	bl	800d79c <vPortValidateInterruptPriority>
	__asm volatile
 800e5b6:	f3ef 8911 	mrs	r9, BASEPRI
 800e5ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5be:	f383 8811 	msr	BASEPRI, r3
 800e5c2:	f3bf 8f6f 	isb	sy
 800e5c6:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e5ca:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e5cc:	b9cd      	cbnz	r5, 800e602 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800e5ce:	4628      	mov	r0, r5
	__asm volatile
 800e5d0:	f389 8811 	msr	BASEPRI, r9
}
 800e5d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e5d8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e5da:	2b00      	cmp	r3, #0
 800e5dc:	d0e9      	beq.n	800e5b2 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800e5de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5e2:	f383 8811 	msr	BASEPRI, r3
 800e5e6:	f3bf 8f6f 	isb	sy
 800e5ea:	f3bf 8f4f 	dsb	sy
 800e5ee:	e7fe      	b.n	800e5ee <xQueueReceiveFromISR+0x4a>
 800e5f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5f4:	f383 8811 	msr	BASEPRI, r3
 800e5f8:	f3bf 8f6f 	isb	sy
 800e5fc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e600:	e7fe      	b.n	800e600 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e602:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e606:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800e608:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800e60c:	b152      	cbz	r2, 800e624 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e60e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e610:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e612:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800e614:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e616:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800e618:	bf24      	itt	cs
 800e61a:	6821      	ldrcs	r1, [r4, #0]
 800e61c:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e61e:	4630      	mov	r0, r6
 800e620:	f01b fdef 	bl	802a202 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e624:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800e626:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e62a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e62c:	d009      	beq.n	800e642 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e62e:	f108 0301 	add.w	r3, r8, #1
 800e632:	b25b      	sxtb	r3, r3
 800e634:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800e638:	2001      	movs	r0, #1
	__asm volatile
 800e63a:	f389 8811 	msr	BASEPRI, r9
}
 800e63e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e642:	6923      	ldr	r3, [r4, #16]
 800e644:	2b00      	cmp	r3, #0
 800e646:	d0f7      	beq.n	800e638 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e648:	f104 0010 	add.w	r0, r4, #16
 800e64c:	f000 fdf0 	bl	800f230 <xTaskRemoveFromEventList>
 800e650:	2800      	cmp	r0, #0
 800e652:	d0f1      	beq.n	800e638 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e654:	2f00      	cmp	r7, #0
 800e656:	d0ef      	beq.n	800e638 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e658:	2001      	movs	r0, #1
 800e65a:	6038      	str	r0, [r7, #0]
 800e65c:	e7b8      	b.n	800e5d0 <xQueueReceiveFromISR+0x2c>
 800e65e:	bf00      	nop

0800e660 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e660:	b158      	cbz	r0, 800e67a <uxQueueMessagesWaiting+0x1a>
{
 800e662:	b510      	push	{r4, lr}
 800e664:	4604      	mov	r4, r0
 800e666:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e668:	f7fe ff64 	bl	800d534 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e66c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e66e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e670:	f7fe ff82 	bl	800d578 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e674:	9801      	ldr	r0, [sp, #4]
 800e676:	b002      	add	sp, #8
 800e678:	bd10      	pop	{r4, pc}
	__asm volatile
 800e67a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e67e:	f383 8811 	msr	BASEPRI, r3
 800e682:	f3bf 8f6f 	isb	sy
 800e686:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e68a:	e7fe      	b.n	800e68a <uxQueueMessagesWaiting+0x2a>

0800e68c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e68c:	b108      	cbz	r0, 800e692 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e68e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e690:	4770      	bx	lr
 800e692:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e696:	f383 8811 	msr	BASEPRI, r3
 800e69a:	f3bf 8f6f 	isb	sy
 800e69e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e6a2:	e7fe      	b.n	800e6a2 <uxQueueMessagesWaitingFromISR+0x16>
 800e6a4:	0000      	movs	r0, r0
	...

0800e6a8 <vQueueDelete>:
	configASSERT( pxQueue );
 800e6a8:	b1f0      	cbz	r0, 800e6e8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e6aa:	4b21      	ldr	r3, [pc, #132]	; (800e730 <vQueueDelete+0x88>)
 800e6ac:	685a      	ldr	r2, [r3, #4]
 800e6ae:	4290      	cmp	r0, r2
 800e6b0:	d025      	beq.n	800e6fe <vQueueDelete+0x56>
 800e6b2:	68da      	ldr	r2, [r3, #12]
 800e6b4:	4290      	cmp	r0, r2
 800e6b6:	d02c      	beq.n	800e712 <vQueueDelete+0x6a>
 800e6b8:	695a      	ldr	r2, [r3, #20]
 800e6ba:	4290      	cmp	r0, r2
 800e6bc:	d02b      	beq.n	800e716 <vQueueDelete+0x6e>
 800e6be:	69da      	ldr	r2, [r3, #28]
 800e6c0:	4290      	cmp	r0, r2
 800e6c2:	d02a      	beq.n	800e71a <vQueueDelete+0x72>
 800e6c4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e6c6:	4290      	cmp	r0, r2
 800e6c8:	d029      	beq.n	800e71e <vQueueDelete+0x76>
 800e6ca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e6cc:	4290      	cmp	r0, r2
 800e6ce:	d01e      	beq.n	800e70e <vQueueDelete+0x66>
 800e6d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e6d2:	4290      	cmp	r0, r2
 800e6d4:	d025      	beq.n	800e722 <vQueueDelete+0x7a>
 800e6d6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e6d8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e6da:	bf08      	it	eq
 800e6dc:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e6de:	d00f      	beq.n	800e700 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e6e0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e6e4:	b14b      	cbz	r3, 800e6fa <vQueueDelete+0x52>
}
 800e6e6:	4770      	bx	lr
 800e6e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6ec:	f383 8811 	msr	BASEPRI, r3
 800e6f0:	f3bf 8f6f 	isb	sy
 800e6f4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e6f8:	e7fe      	b.n	800e6f8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e6fa:	f7fe be03 	b.w	800d304 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e6fe:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e700:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e728 <vQueueDelete+0x80>
 800e704:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e708:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e70c:	e7e8      	b.n	800e6e0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e70e:	2205      	movs	r2, #5
 800e710:	e7f6      	b.n	800e700 <vQueueDelete+0x58>
 800e712:	2201      	movs	r2, #1
 800e714:	e7f4      	b.n	800e700 <vQueueDelete+0x58>
 800e716:	2202      	movs	r2, #2
 800e718:	e7f2      	b.n	800e700 <vQueueDelete+0x58>
 800e71a:	2203      	movs	r2, #3
 800e71c:	e7f0      	b.n	800e700 <vQueueDelete+0x58>
 800e71e:	2204      	movs	r2, #4
 800e720:	e7ee      	b.n	800e700 <vQueueDelete+0x58>
 800e722:	2206      	movs	r2, #6
 800e724:	e7ec      	b.n	800e700 <vQueueDelete+0x58>
 800e726:	bf00      	nop
	...
 800e730:	20012800 	.word	0x20012800

0800e734 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e734:	4b12      	ldr	r3, [pc, #72]	; (800e780 <vQueueAddToRegistry+0x4c>)
 800e736:	681a      	ldr	r2, [r3, #0]
 800e738:	b17a      	cbz	r2, 800e75a <vQueueAddToRegistry+0x26>
 800e73a:	689a      	ldr	r2, [r3, #8]
 800e73c:	b162      	cbz	r2, 800e758 <vQueueAddToRegistry+0x24>
 800e73e:	691a      	ldr	r2, [r3, #16]
 800e740:	b192      	cbz	r2, 800e768 <vQueueAddToRegistry+0x34>
 800e742:	699a      	ldr	r2, [r3, #24]
 800e744:	b192      	cbz	r2, 800e76c <vQueueAddToRegistry+0x38>
 800e746:	6a1a      	ldr	r2, [r3, #32]
 800e748:	b192      	cbz	r2, 800e770 <vQueueAddToRegistry+0x3c>
 800e74a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e74c:	b192      	cbz	r2, 800e774 <vQueueAddToRegistry+0x40>
 800e74e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e750:	b192      	cbz	r2, 800e778 <vQueueAddToRegistry+0x44>
 800e752:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e754:	b192      	cbz	r2, 800e77c <vQueueAddToRegistry+0x48>
	}
 800e756:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e758:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e75a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e75e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e762:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e766:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e768:	2202      	movs	r2, #2
 800e76a:	e7f6      	b.n	800e75a <vQueueAddToRegistry+0x26>
 800e76c:	2203      	movs	r2, #3
 800e76e:	e7f4      	b.n	800e75a <vQueueAddToRegistry+0x26>
 800e770:	2204      	movs	r2, #4
 800e772:	e7f2      	b.n	800e75a <vQueueAddToRegistry+0x26>
 800e774:	2205      	movs	r2, #5
 800e776:	e7f0      	b.n	800e75a <vQueueAddToRegistry+0x26>
 800e778:	2206      	movs	r2, #6
 800e77a:	e7ee      	b.n	800e75a <vQueueAddToRegistry+0x26>
 800e77c:	2207      	movs	r2, #7
 800e77e:	e7ec      	b.n	800e75a <vQueueAddToRegistry+0x26>
 800e780:	20012800 	.word	0x20012800

0800e784 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e784:	b570      	push	{r4, r5, r6, lr}
 800e786:	4605      	mov	r5, r0
 800e788:	460e      	mov	r6, r1
 800e78a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e78c:	f7fe fed2 	bl	800d534 <vPortEnterCritical>
 800e790:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e794:	2bff      	cmp	r3, #255	; 0xff
 800e796:	bf04      	itt	eq
 800e798:	2300      	moveq	r3, #0
 800e79a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e79e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e7a2:	2bff      	cmp	r3, #255	; 0xff
 800e7a4:	bf04      	itt	eq
 800e7a6:	2300      	moveq	r3, #0
 800e7a8:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e7ac:	f7fe fee4 	bl	800d578 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e7b0:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e7b2:	2b00      	cmp	r3, #0
 800e7b4:	d043      	beq.n	800e83e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e7b6:	f7fe febd 	bl	800d534 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e7ba:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e7be:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7c0:	2c00      	cmp	r4, #0
 800e7c2:	dd14      	ble.n	800e7ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7c4:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e7c8:	e003      	b.n	800e7d2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e7ca:	1e63      	subs	r3, r4, #1
 800e7cc:	b2da      	uxtb	r2, r3
 800e7ce:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7d0:	b16a      	cbz	r2, 800e7ee <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e7d2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7d4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e7d6:	b153      	cbz	r3, 800e7ee <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e7d8:	f000 fd2a 	bl	800f230 <xTaskRemoveFromEventList>
 800e7dc:	2800      	cmp	r0, #0
 800e7de:	d0f4      	beq.n	800e7ca <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e7e0:	f000 fdc2 	bl	800f368 <vTaskMissedYield>
			--cTxLock;
 800e7e4:	1e63      	subs	r3, r4, #1
 800e7e6:	b2da      	uxtb	r2, r3
 800e7e8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e7ea:	2a00      	cmp	r2, #0
 800e7ec:	d1f1      	bne.n	800e7d2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e7ee:	23ff      	movs	r3, #255	; 0xff
 800e7f0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e7f4:	f7fe fec0 	bl	800d578 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e7f8:	f7fe fe9c 	bl	800d534 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e7fc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e800:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e802:	2c00      	cmp	r4, #0
 800e804:	dd14      	ble.n	800e830 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e806:	f105 0610 	add.w	r6, r5, #16
 800e80a:	e003      	b.n	800e814 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e80c:	1e63      	subs	r3, r4, #1
 800e80e:	b2da      	uxtb	r2, r3
 800e810:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e812:	b16a      	cbz	r2, 800e830 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e814:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e816:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e818:	b153      	cbz	r3, 800e830 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e81a:	f000 fd09 	bl	800f230 <xTaskRemoveFromEventList>
 800e81e:	2800      	cmp	r0, #0
 800e820:	d0f4      	beq.n	800e80c <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e822:	f000 fda1 	bl	800f368 <vTaskMissedYield>
				--cRxLock;
 800e826:	1e63      	subs	r3, r4, #1
 800e828:	b2da      	uxtb	r2, r3
 800e82a:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e82c:	2a00      	cmp	r2, #0
 800e82e:	d1f1      	bne.n	800e814 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e830:	23ff      	movs	r3, #255	; 0xff
 800e832:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e836:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e83a:	f7fe be9d 	b.w	800d578 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e83e:	4622      	mov	r2, r4
 800e840:	4631      	mov	r1, r6
 800e842:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e846:	f000 fca9 	bl	800f19c <vTaskPlaceOnEventListRestricted>
 800e84a:	e7b4      	b.n	800e7b6 <vQueueWaitForMessageRestricted+0x32>

0800e84c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e84c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e850:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e852:	f7fe fe6f 	bl	800d534 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e856:	4a34      	ldr	r2, [pc, #208]	; (800e928 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e858:	4e34      	ldr	r6, [pc, #208]	; (800e92c <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e85a:	6813      	ldr	r3, [r2, #0]
 800e85c:	3301      	adds	r3, #1
 800e85e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e860:	6833      	ldr	r3, [r6, #0]
 800e862:	2b00      	cmp	r3, #0
 800e864:	d032      	beq.n	800e8cc <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e866:	4c32      	ldr	r4, [pc, #200]	; (800e930 <prvAddNewTaskToReadyList+0xe4>)
 800e868:	6823      	ldr	r3, [r4, #0]
 800e86a:	b33b      	cbz	r3, 800e8bc <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e86c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e86e:	4f31      	ldr	r7, [pc, #196]	; (800e934 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e870:	4a31      	ldr	r2, [pc, #196]	; (800e938 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e872:	4932      	ldr	r1, [pc, #200]	; (800e93c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e874:	6813      	ldr	r3, [r2, #0]
 800e876:	3301      	adds	r3, #1
 800e878:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e87a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e87c:	680b      	ldr	r3, [r1, #0]
 800e87e:	4283      	cmp	r3, r0
 800e880:	bf38      	it	cc
 800e882:	6008      	strcc	r0, [r1, #0]
 800e884:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e888:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e88c:	1d29      	adds	r1, r5, #4
 800e88e:	f7fe fdad 	bl	800d3ec <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e892:	f7fe fe71 	bl	800d578 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e896:	6823      	ldr	r3, [r4, #0]
 800e898:	b173      	cbz	r3, 800e8b8 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e89a:	6832      	ldr	r2, [r6, #0]
 800e89c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e89e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e8a0:	429a      	cmp	r2, r3
 800e8a2:	d209      	bcs.n	800e8b8 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e8a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e8a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e8ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e8b0:	f3bf 8f4f 	dsb	sy
 800e8b4:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e8b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e8bc:	6833      	ldr	r3, [r6, #0]
 800e8be:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e8c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8c2:	4f1c      	ldr	r7, [pc, #112]	; (800e934 <prvAddNewTaskToReadyList+0xe8>)
 800e8c4:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e8c6:	bf98      	it	ls
 800e8c8:	6035      	strls	r5, [r6, #0]
 800e8ca:	e7d1      	b.n	800e870 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e8cc:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e8ce:	6813      	ldr	r3, [r2, #0]
 800e8d0:	2b01      	cmp	r3, #1
 800e8d2:	d003      	beq.n	800e8dc <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e8d4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e8d6:	4f17      	ldr	r7, [pc, #92]	; (800e934 <prvAddNewTaskToReadyList+0xe8>)
 800e8d8:	4c15      	ldr	r4, [pc, #84]	; (800e930 <prvAddNewTaskToReadyList+0xe4>)
 800e8da:	e7c9      	b.n	800e870 <prvAddNewTaskToReadyList+0x24>
 800e8dc:	4f15      	ldr	r7, [pc, #84]	; (800e934 <prvAddNewTaskToReadyList+0xe8>)
 800e8de:	463c      	mov	r4, r7
 800e8e0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e8e4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e8e6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e8e8:	f7fe fd70 	bl	800d3cc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e8ec:	45a0      	cmp	r8, r4
 800e8ee:	d1f9      	bne.n	800e8e4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e8f0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e954 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e8f4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e958 <prvAddNewTaskToReadyList+0x10c>
 800e8f8:	4c0d      	ldr	r4, [pc, #52]	; (800e930 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e8fa:	4648      	mov	r0, r9
 800e8fc:	f7fe fd66 	bl	800d3cc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e900:	4640      	mov	r0, r8
 800e902:	f7fe fd63 	bl	800d3cc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e906:	480e      	ldr	r0, [pc, #56]	; (800e940 <prvAddNewTaskToReadyList+0xf4>)
 800e908:	f7fe fd60 	bl	800d3cc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e90c:	480d      	ldr	r0, [pc, #52]	; (800e944 <prvAddNewTaskToReadyList+0xf8>)
 800e90e:	f7fe fd5d 	bl	800d3cc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e912:	480d      	ldr	r0, [pc, #52]	; (800e948 <prvAddNewTaskToReadyList+0xfc>)
 800e914:	f7fe fd5a 	bl	800d3cc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e918:	4b0c      	ldr	r3, [pc, #48]	; (800e94c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e91a:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e91c:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e920:	4b0b      	ldr	r3, [pc, #44]	; (800e950 <prvAddNewTaskToReadyList+0x104>)
 800e922:	f8c3 8000 	str.w	r8, [r3]
}
 800e926:	e7a3      	b.n	800e870 <prvAddNewTaskToReadyList+0x24>
 800e928:	20012cac 	.word	0x20012cac
 800e92c:	20012840 	.word	0x20012840
 800e930:	20012d08 	.word	0x20012d08
 800e934:	2001284c 	.word	0x2001284c
 800e938:	20012cb8 	.word	0x20012cb8
 800e93c:	20012cbc 	.word	0x20012cbc
 800e940:	20012cf4 	.word	0x20012cf4
 800e944:	20012d20 	.word	0x20012d20
 800e948:	20012d0c 	.word	0x20012d0c
 800e94c:	20012844 	.word	0x20012844
 800e950:	20012848 	.word	0x20012848
 800e954:	20012cc0 	.word	0x20012cc0
 800e958:	20012cd4 	.word	0x20012cd4

0800e95c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e95c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e960:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e962:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e966:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e96a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e96c:	4606      	mov	r6, r0
 800e96e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e970:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e972:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e974:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e976:	f01b fb1e 	bl	8029fb6 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e97a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e97c:	f1a9 0904 	sub.w	r9, r9, #4
 800e980:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e982:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e986:	2d00      	cmp	r5, #0
 800e988:	d079      	beq.n	800ea7e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e98a:	782b      	ldrb	r3, [r5, #0]
 800e98c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e990:	2b00      	cmp	r3, #0
 800e992:	d03b      	beq.n	800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e994:	786b      	ldrb	r3, [r5, #1]
 800e996:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e99a:	2b00      	cmp	r3, #0
 800e99c:	d036      	beq.n	800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e99e:	78ab      	ldrb	r3, [r5, #2]
 800e9a0:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e9a4:	b393      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9a6:	78eb      	ldrb	r3, [r5, #3]
 800e9a8:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e9ac:	b373      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9ae:	792b      	ldrb	r3, [r5, #4]
 800e9b0:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e9b4:	b353      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9b6:	796b      	ldrb	r3, [r5, #5]
 800e9b8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e9bc:	b333      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9be:	79ab      	ldrb	r3, [r5, #6]
 800e9c0:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e9c4:	b313      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9c6:	79eb      	ldrb	r3, [r5, #7]
 800e9c8:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e9cc:	b1f3      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9ce:	7a2b      	ldrb	r3, [r5, #8]
 800e9d0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e9d4:	b1d3      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9d6:	7a6b      	ldrb	r3, [r5, #9]
 800e9d8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e9dc:	b1b3      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9de:	7aab      	ldrb	r3, [r5, #10]
 800e9e0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e9e4:	b193      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9e6:	7aeb      	ldrb	r3, [r5, #11]
 800e9e8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e9ec:	b173      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9ee:	7b2b      	ldrb	r3, [r5, #12]
 800e9f0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e9f4:	b153      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9f6:	7b6b      	ldrb	r3, [r5, #13]
 800e9f8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e9fc:	b133      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e9fe:	7bab      	ldrb	r3, [r5, #14]
 800ea00:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800ea04:	b113      	cbz	r3, 800ea0c <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ea06:	7beb      	ldrb	r3, [r5, #15]
 800ea08:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800ea0c:	2300      	movs	r3, #0
 800ea0e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800ea12:	9d08      	ldr	r5, [sp, #32]
 800ea14:	2d37      	cmp	r5, #55	; 0x37
 800ea16:	bf28      	it	cs
 800ea18:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800ea1a:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800ea1e:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800ea20:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ea22:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800ea24:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ea28:	f7fe fcdc 	bl	800d3e4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ea2c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800ea30:	f104 0018 	add.w	r0, r4, #24
 800ea34:	f7fe fcd6 	bl	800d3e4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ea38:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800ea3a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800ea3e:	4651      	mov	r1, sl
 800ea40:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800ea42:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800ea44:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800ea46:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800ea4a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800ea4e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800ea52:	f01b fab0 	bl	8029fb6 <memset>
 800ea56:	4b0b      	ldr	r3, [pc, #44]	; (800ea84 <prvInitialiseNewTask.constprop.0+0x128>)
 800ea58:	65e3      	str	r3, [r4, #92]	; 0x5c
 800ea5a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800ea5e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800ea60:	463a      	mov	r2, r7
 800ea62:	4631      	mov	r1, r6
 800ea64:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800ea66:	6625      	str	r5, [r4, #96]	; 0x60
 800ea68:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800ea6a:	f7fe fd39 	bl	800d4e0 <pxPortInitialiseStack>
 800ea6e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800ea70:	f1b8 0f00 	cmp.w	r8, #0
 800ea74:	d001      	beq.n	800ea7a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800ea76:	f8c8 4000 	str.w	r4, [r8]
}
 800ea7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800ea7e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800ea82:	e7c6      	b.n	800ea12 <prvInitialiseNewTask.constprop.0+0xb6>
 800ea84:	200137d0 	.word	0x200137d0

0800ea88 <prvIdleTask>:
{
 800ea88:	b580      	push	{r7, lr}
 800ea8a:	4d23      	ldr	r5, [pc, #140]	; (800eb18 <prvIdleTask+0x90>)
 800ea8c:	4f23      	ldr	r7, [pc, #140]	; (800eb1c <prvIdleTask+0x94>)
 800ea8e:	4e24      	ldr	r6, [pc, #144]	; (800eb20 <prvIdleTask+0x98>)
 800ea90:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800eb24 <prvIdleTask+0x9c>
				taskYIELD();
 800ea94:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800ea98:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ea9c:	682b      	ldr	r3, [r5, #0]
 800ea9e:	b35b      	cbz	r3, 800eaf8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800eaa0:	f7fe fd48 	bl	800d534 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eaa4:	68fb      	ldr	r3, [r7, #12]
 800eaa6:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eaa8:	1d20      	adds	r0, r4, #4
 800eaaa:	f7fe fcc7 	bl	800d43c <uxListRemove>
				--uxCurrentNumberOfTasks;
 800eaae:	6833      	ldr	r3, [r6, #0]
 800eab0:	3b01      	subs	r3, #1
 800eab2:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800eab4:	682b      	ldr	r3, [r5, #0]
 800eab6:	3b01      	subs	r3, #1
 800eab8:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800eaba:	f7fe fd5d 	bl	800d578 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800eabe:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800eac2:	f01b fac1 	bl	802a048 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800eac6:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800eaca:	b163      	cbz	r3, 800eae6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800eacc:	2b01      	cmp	r3, #1
 800eace:	d01e      	beq.n	800eb0e <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800ead0:	2b02      	cmp	r3, #2
 800ead2:	d0e3      	beq.n	800ea9c <prvIdleTask+0x14>
 800ead4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ead8:	f383 8811 	msr	BASEPRI, r3
 800eadc:	f3bf 8f6f 	isb	sy
 800eae0:	f3bf 8f4f 	dsb	sy
 800eae4:	e7fe      	b.n	800eae4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800eae6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800eae8:	f7fe fc0c 	bl	800d304 <vPortFree>
				vPortFree( pxTCB );
 800eaec:	4620      	mov	r0, r4
 800eaee:	f7fe fc09 	bl	800d304 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800eaf2:	682b      	ldr	r3, [r5, #0]
 800eaf4:	2b00      	cmp	r3, #0
 800eaf6:	d1d3      	bne.n	800eaa0 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800eaf8:	f8d8 3000 	ldr.w	r3, [r8]
 800eafc:	2b01      	cmp	r3, #1
 800eafe:	d9cd      	bls.n	800ea9c <prvIdleTask+0x14>
				taskYIELD();
 800eb00:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800eb04:	f3bf 8f4f 	dsb	sy
 800eb08:	f3bf 8f6f 	isb	sy
 800eb0c:	e7c6      	b.n	800ea9c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800eb0e:	4620      	mov	r0, r4
 800eb10:	f7fe fbf8 	bl	800d304 <vPortFree>
 800eb14:	e7c2      	b.n	800ea9c <prvIdleTask+0x14>
 800eb16:	bf00      	nop
 800eb18:	20012cb0 	.word	0x20012cb0
 800eb1c:	20012d20 	.word	0x20012d20
 800eb20:	20012cac 	.word	0x20012cac
 800eb24:	2001284c 	.word	0x2001284c

0800eb28 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800eb28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800eb2c:	4b47      	ldr	r3, [pc, #284]	; (800ec4c <xTaskIncrementTick.part.0+0x124>)
 800eb2e:	681e      	ldr	r6, [r3, #0]
 800eb30:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800eb32:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800eb34:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800eb36:	2e00      	cmp	r6, #0
 800eb38:	d040      	beq.n	800ebbc <xTaskIncrementTick.part.0+0x94>
 800eb3a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800ec60 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800eb3e:	f8db 3000 	ldr.w	r3, [fp]
 800eb42:	429e      	cmp	r6, r3
 800eb44:	d347      	bcc.n	800ebd6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eb46:	4f42      	ldr	r7, [pc, #264]	; (800ec50 <xTaskIncrementTick.part.0+0x128>)
 800eb48:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800ec64 <xTaskIncrementTick.part.0+0x13c>
 800eb4c:	683b      	ldr	r3, [r7, #0]
 800eb4e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800ec68 <xTaskIncrementTick.part.0+0x140>
 800eb52:	681d      	ldr	r5, [r3, #0]
 800eb54:	2d00      	cmp	r5, #0
 800eb56:	d073      	beq.n	800ec40 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800eb58:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800ec6c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800eb5c:	2500      	movs	r5, #0
 800eb5e:	e022      	b.n	800eba6 <xTaskIncrementTick.part.0+0x7e>
 800eb60:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800eb62:	f7fe fc6b 	bl	800d43c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800eb66:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800eb68:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800eb6a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800eb6e:	b113      	cbz	r3, 800eb76 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800eb70:	f7fe fc64 	bl	800d43c <uxListRemove>
 800eb74:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800eb76:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800eb78:	f8d8 2000 	ldr.w	r2, [r8]
 800eb7c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800eb80:	4293      	cmp	r3, r2
 800eb82:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800eb86:	bf88      	it	hi
 800eb88:	f8c8 3000 	strhi.w	r3, [r8]
 800eb8c:	f7fe fc2e 	bl	800d3ec <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800eb90:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eb94:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800eb96:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800eb98:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eb9a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800eb9c:	4291      	cmp	r1, r2
 800eb9e:	bf28      	it	cs
 800eba0:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800eba2:	2b00      	cmp	r3, #0
 800eba4:	d04c      	beq.n	800ec40 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eba6:	683b      	ldr	r3, [r7, #0]
 800eba8:	68db      	ldr	r3, [r3, #12]
 800ebaa:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800ebac:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ebae:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800ebb0:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ebb2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800ebb4:	d2d4      	bcs.n	800eb60 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800ebb6:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800ebba:	e011      	b.n	800ebe0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800ebbc:	4b24      	ldr	r3, [pc, #144]	; (800ec50 <xTaskIncrementTick.part.0+0x128>)
 800ebbe:	681a      	ldr	r2, [r3, #0]
 800ebc0:	6812      	ldr	r2, [r2, #0]
 800ebc2:	b30a      	cbz	r2, 800ec08 <xTaskIncrementTick.part.0+0xe0>
 800ebc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebc8:	f383 8811 	msr	BASEPRI, r3
 800ebcc:	f3bf 8f6f 	isb	sy
 800ebd0:	f3bf 8f4f 	dsb	sy
 800ebd4:	e7fe      	b.n	800ebd4 <xTaskIncrementTick.part.0+0xac>
 800ebd6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800ec64 <xTaskIncrementTick.part.0+0x13c>
 800ebda:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800ec68 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800ebde:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ebe0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800ebe4:	491b      	ldr	r1, [pc, #108]	; (800ec54 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800ebe6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebe8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ebec:	009b      	lsls	r3, r3, #2
 800ebee:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800ebf2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800ebf4:	2a02      	cmp	r2, #2
 800ebf6:	bf28      	it	cs
 800ebf8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800ebfa:	2b00      	cmp	r3, #0
}
 800ebfc:	bf0c      	ite	eq
 800ebfe:	4628      	moveq	r0, r5
 800ec00:	2001      	movne	r0, #1
 800ec02:	b003      	add	sp, #12
 800ec04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800ec08:	4a13      	ldr	r2, [pc, #76]	; (800ec58 <xTaskIncrementTick.part.0+0x130>)
 800ec0a:	6818      	ldr	r0, [r3, #0]
 800ec0c:	6811      	ldr	r1, [r2, #0]
 800ec0e:	6019      	str	r1, [r3, #0]
 800ec10:	4912      	ldr	r1, [pc, #72]	; (800ec5c <xTaskIncrementTick.part.0+0x134>)
 800ec12:	6010      	str	r0, [r2, #0]
 800ec14:	680a      	ldr	r2, [r1, #0]
 800ec16:	3201      	adds	r2, #1
 800ec18:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ec1a:	681a      	ldr	r2, [r3, #0]
 800ec1c:	6812      	ldr	r2, [r2, #0]
 800ec1e:	b932      	cbnz	r2, 800ec2e <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800ec20:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800ec60 <xTaskIncrementTick.part.0+0x138>
 800ec24:	f04f 33ff 	mov.w	r3, #4294967295
 800ec28:	f8cb 3000 	str.w	r3, [fp]
 800ec2c:	e787      	b.n	800eb3e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec2e:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ec30:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800ec60 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec34:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ec36:	68db      	ldr	r3, [r3, #12]
 800ec38:	685b      	ldr	r3, [r3, #4]
 800ec3a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800ec3e:	e77e      	b.n	800eb3e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ec40:	f04f 33ff 	mov.w	r3, #4294967295
 800ec44:	f8cb 3000 	str.w	r3, [fp]
					break;
 800ec48:	e7ca      	b.n	800ebe0 <xTaskIncrementTick.part.0+0xb8>
 800ec4a:	bf00      	nop
 800ec4c:	20012d34 	.word	0x20012d34
 800ec50:	20012844 	.word	0x20012844
 800ec54:	20012d38 	.word	0x20012d38
 800ec58:	20012848 	.word	0x20012848
 800ec5c:	20012cec 	.word	0x20012cec
 800ec60:	20012ce8 	.word	0x20012ce8
 800ec64:	2001284c 	.word	0x2001284c
 800ec68:	20012840 	.word	0x20012840
 800ec6c:	20012cbc 	.word	0x20012cbc

0800ec70 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800ec70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800ec74:	4d41      	ldr	r5, [pc, #260]	; (800ed7c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800ec76:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800ec78:	f7fe fc5c 	bl	800d534 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800ec7c:	682b      	ldr	r3, [r5, #0]
 800ec7e:	3b01      	subs	r3, #1
 800ec80:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ec82:	682b      	ldr	r3, [r5, #0]
 800ec84:	2b00      	cmp	r3, #0
 800ec86:	d161      	bne.n	800ed4c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800ec88:	4b3d      	ldr	r3, [pc, #244]	; (800ed80 <xTaskResumeAll.part.0+0x110>)
 800ec8a:	681b      	ldr	r3, [r3, #0]
 800ec8c:	2b00      	cmp	r3, #0
 800ec8e:	d05d      	beq.n	800ed4c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ec90:	4e3c      	ldr	r6, [pc, #240]	; (800ed84 <xTaskResumeAll.part.0+0x114>)
 800ec92:	6833      	ldr	r3, [r6, #0]
 800ec94:	2b00      	cmp	r3, #0
 800ec96:	d06e      	beq.n	800ed76 <xTaskResumeAll.part.0+0x106>
 800ec98:	4f3b      	ldr	r7, [pc, #236]	; (800ed88 <xTaskResumeAll.part.0+0x118>)
 800ec9a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800ed98 <xTaskResumeAll.part.0+0x128>
 800ec9e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800ed9c <xTaskResumeAll.part.0+0x12c>
 800eca2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800eda0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eca6:	68f3      	ldr	r3, [r6, #12]
 800eca8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ecaa:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800ecae:	f104 0018 	add.w	r0, r4, #24
 800ecb2:	f7fe fbc3 	bl	800d43c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ecb6:	4658      	mov	r0, fp
 800ecb8:	f7fe fbc0 	bl	800d43c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800ecbc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ecbe:	683a      	ldr	r2, [r7, #0]
 800ecc0:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800ecc4:	4293      	cmp	r3, r2
 800ecc6:	4659      	mov	r1, fp
 800ecc8:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800eccc:	bf88      	it	hi
 800ecce:	603b      	strhi	r3, [r7, #0]
 800ecd0:	f7fe fb8c 	bl	800d3ec <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800ecd4:	f8d8 3000 	ldr.w	r3, [r8]
 800ecd8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ecda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ecdc:	429a      	cmp	r2, r3
 800ecde:	d33d      	bcc.n	800ed5c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800ece0:	2301      	movs	r3, #1
 800ece2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ece6:	6833      	ldr	r3, [r6, #0]
 800ece8:	2b00      	cmp	r3, #0
 800ecea:	d1dc      	bne.n	800eca6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ecec:	4b27      	ldr	r3, [pc, #156]	; (800ed8c <xTaskResumeAll.part.0+0x11c>)
 800ecee:	681a      	ldr	r2, [r3, #0]
 800ecf0:	6812      	ldr	r2, [r2, #0]
 800ecf2:	2a00      	cmp	r2, #0
 800ecf4:	d03a      	beq.n	800ed6c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ecf6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ecf8:	4b25      	ldr	r3, [pc, #148]	; (800ed90 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ecfa:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ecfc:	68d2      	ldr	r2, [r2, #12]
 800ecfe:	6852      	ldr	r2, [r2, #4]
 800ed00:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800ed02:	4e24      	ldr	r6, [pc, #144]	; (800ed94 <xTaskResumeAll.part.0+0x124>)
 800ed04:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800ed06:	b194      	cbz	r4, 800ed2e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800ed08:	2701      	movs	r7, #1
 800ed0a:	e006      	b.n	800ed1a <xTaskResumeAll.part.0+0xaa>
 800ed0c:	f7ff ff0c 	bl	800eb28 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800ed10:	b108      	cbz	r0, 800ed16 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800ed12:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ed16:	3c01      	subs	r4, #1
 800ed18:	d008      	beq.n	800ed2c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ed1a:	682b      	ldr	r3, [r5, #0]
 800ed1c:	2b00      	cmp	r3, #0
 800ed1e:	d0f5      	beq.n	800ed0c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800ed20:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ed22:	3c01      	subs	r4, #1
		++xPendedTicks;
 800ed24:	f103 0301 	add.w	r3, r3, #1
 800ed28:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800ed2a:	d1f6      	bne.n	800ed1a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800ed2c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800ed2e:	f8da 3000 	ldr.w	r3, [sl]
 800ed32:	b15b      	cbz	r3, 800ed4c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800ed34:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ed38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ed3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ed40:	f3bf 8f4f 	dsb	sy
 800ed44:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800ed48:	2001      	movs	r0, #1
 800ed4a:	e000      	b.n	800ed4e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800ed4c:	2000      	movs	r0, #0
 800ed4e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ed50:	f7fe fc12 	bl	800d578 <vPortExitCritical>
}
 800ed54:	9801      	ldr	r0, [sp, #4]
 800ed56:	b003      	add	sp, #12
 800ed58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800ed5c:	6833      	ldr	r3, [r6, #0]
 800ed5e:	2b00      	cmp	r3, #0
 800ed60:	d1a1      	bne.n	800eca6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ed62:	4b0a      	ldr	r3, [pc, #40]	; (800ed8c <xTaskResumeAll.part.0+0x11c>)
 800ed64:	681a      	ldr	r2, [r3, #0]
 800ed66:	6812      	ldr	r2, [r2, #0]
 800ed68:	2a00      	cmp	r2, #0
 800ed6a:	d1c4      	bne.n	800ecf6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800ed6c:	4b08      	ldr	r3, [pc, #32]	; (800ed90 <xTaskResumeAll.part.0+0x120>)
 800ed6e:	f04f 32ff 	mov.w	r2, #4294967295
 800ed72:	601a      	str	r2, [r3, #0]
 800ed74:	e7c5      	b.n	800ed02 <xTaskResumeAll.part.0+0x92>
 800ed76:	f8df a028 	ldr.w	sl, [pc, #40]	; 800eda0 <xTaskResumeAll.part.0+0x130>
 800ed7a:	e7c2      	b.n	800ed02 <xTaskResumeAll.part.0+0x92>
 800ed7c:	20012cb4 	.word	0x20012cb4
 800ed80:	20012cac 	.word	0x20012cac
 800ed84:	20012cf4 	.word	0x20012cf4
 800ed88:	20012cbc 	.word	0x20012cbc
 800ed8c:	20012844 	.word	0x20012844
 800ed90:	20012ce8 	.word	0x20012ce8
 800ed94:	20012cf0 	.word	0x20012cf0
 800ed98:	2001284c 	.word	0x2001284c
 800ed9c:	20012840 	.word	0x20012840
 800eda0:	20012d38 	.word	0x20012d38

0800eda4 <xTaskCreateStatic>:
	{
 800eda4:	b530      	push	{r4, r5, lr}
 800eda6:	b087      	sub	sp, #28
 800eda8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800edaa:	b1c4      	cbz	r4, 800edde <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800edac:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800edae:	b16d      	cbz	r5, 800edcc <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800edb0:	25ac      	movs	r5, #172	; 0xac
 800edb2:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800edb4:	9d05      	ldr	r5, [sp, #20]
 800edb6:	2dac      	cmp	r5, #172	; 0xac
 800edb8:	d01a      	beq.n	800edf0 <xTaskCreateStatic+0x4c>
 800edba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edbe:	f383 8811 	msr	BASEPRI, r3
 800edc2:	f3bf 8f6f 	isb	sy
 800edc6:	f3bf 8f4f 	dsb	sy
 800edca:	e7fe      	b.n	800edca <xTaskCreateStatic+0x26>
 800edcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edd0:	f383 8811 	msr	BASEPRI, r3
 800edd4:	f3bf 8f6f 	isb	sy
 800edd8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800eddc:	e7fe      	b.n	800eddc <xTaskCreateStatic+0x38>
 800edde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ede2:	f383 8811 	msr	BASEPRI, r3
 800ede6:	f3bf 8f6f 	isb	sy
 800edea:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800edee:	e7fe      	b.n	800edee <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800edf0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800edf2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800edf4:	2402      	movs	r4, #2
 800edf6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800edfa:	ac04      	add	r4, sp, #16
 800edfc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800ee00:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ee02:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ee04:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ee06:	f7ff fda9 	bl	800e95c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ee0a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800ee0c:	f7ff fd1e 	bl	800e84c <prvAddNewTaskToReadyList>
	}
 800ee10:	9804      	ldr	r0, [sp, #16]
 800ee12:	b007      	add	sp, #28
 800ee14:	bd30      	pop	{r4, r5, pc}
 800ee16:	bf00      	nop

0800ee18 <xTaskCreate>:
	{
 800ee18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ee1c:	4607      	mov	r7, r0
 800ee1e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ee20:	0090      	lsls	r0, r2, #2
	{
 800ee22:	4615      	mov	r5, r2
 800ee24:	4688      	mov	r8, r1
 800ee26:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ee28:	f7fe f9b0 	bl	800d18c <pvPortMalloc>
			if( pxStack != NULL )
 800ee2c:	b1d8      	cbz	r0, 800ee66 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ee2e:	4604      	mov	r4, r0
 800ee30:	20ac      	movs	r0, #172	; 0xac
 800ee32:	f7fe f9ab 	bl	800d18c <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ee36:	4606      	mov	r6, r0
 800ee38:	b1d0      	cbz	r0, 800ee70 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800ee3a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800ee3c:	2400      	movs	r4, #0
 800ee3e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ee42:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800ee44:	9401      	str	r4, [sp, #4]
 800ee46:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800ee48:	9602      	str	r6, [sp, #8]
 800ee4a:	464b      	mov	r3, r9
 800ee4c:	462a      	mov	r2, r5
 800ee4e:	4641      	mov	r1, r8
 800ee50:	4638      	mov	r0, r7
 800ee52:	9400      	str	r4, [sp, #0]
 800ee54:	f7ff fd82 	bl	800e95c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ee58:	4630      	mov	r0, r6
 800ee5a:	f7ff fcf7 	bl	800e84c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ee5e:	2001      	movs	r0, #1
	}
 800ee60:	b005      	add	sp, #20
 800ee62:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ee66:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800ee6a:	b005      	add	sp, #20
 800ee6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800ee70:	4620      	mov	r0, r4
 800ee72:	f7fe fa47 	bl	800d304 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ee76:	f04f 30ff 	mov.w	r0, #4294967295
 800ee7a:	e7f1      	b.n	800ee60 <xTaskCreate+0x48>

0800ee7c <vTaskDelay>:
	{
 800ee7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800ee7e:	b950      	cbnz	r0, 800ee96 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800ee80:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ee84:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ee88:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ee8c:	f3bf 8f4f 	dsb	sy
 800ee90:	f3bf 8f6f 	isb	sy
	}
 800ee94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800ee96:	4d1e      	ldr	r5, [pc, #120]	; (800ef10 <vTaskDelay+0x94>)
 800ee98:	682b      	ldr	r3, [r5, #0]
 800ee9a:	b143      	cbz	r3, 800eeae <vTaskDelay+0x32>
 800ee9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eea0:	f383 8811 	msr	BASEPRI, r3
 800eea4:	f3bf 8f6f 	isb	sy
 800eea8:	f3bf 8f4f 	dsb	sy
 800eeac:	e7fe      	b.n	800eeac <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800eeae:	682b      	ldr	r3, [r5, #0]
 800eeb0:	3301      	adds	r3, #1
 800eeb2:	4604      	mov	r4, r0
 800eeb4:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800eeb6:	4b17      	ldr	r3, [pc, #92]	; (800ef14 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eeb8:	4e17      	ldr	r6, [pc, #92]	; (800ef18 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800eeba:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eebc:	6830      	ldr	r0, [r6, #0]
 800eebe:	3004      	adds	r0, #4
 800eec0:	f7fe fabc 	bl	800d43c <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800eec4:	6833      	ldr	r3, [r6, #0]
 800eec6:	19e4      	adds	r4, r4, r7
 800eec8:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800eeca:	d310      	bcc.n	800eeee <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eecc:	4b13      	ldr	r3, [pc, #76]	; (800ef1c <vTaskDelay+0xa0>)
 800eece:	6818      	ldr	r0, [r3, #0]
 800eed0:	6831      	ldr	r1, [r6, #0]
 800eed2:	3104      	adds	r1, #4
 800eed4:	f7fe fa9a 	bl	800d40c <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800eed8:	682b      	ldr	r3, [r5, #0]
 800eeda:	b9a3      	cbnz	r3, 800ef06 <vTaskDelay+0x8a>
 800eedc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eee0:	f383 8811 	msr	BASEPRI, r3
 800eee4:	f3bf 8f6f 	isb	sy
 800eee8:	f3bf 8f4f 	dsb	sy
 800eeec:	e7fe      	b.n	800eeec <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eeee:	4b0c      	ldr	r3, [pc, #48]	; (800ef20 <vTaskDelay+0xa4>)
 800eef0:	6818      	ldr	r0, [r3, #0]
 800eef2:	6831      	ldr	r1, [r6, #0]
 800eef4:	3104      	adds	r1, #4
 800eef6:	f7fe fa89 	bl	800d40c <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800eefa:	4b0a      	ldr	r3, [pc, #40]	; (800ef24 <vTaskDelay+0xa8>)
 800eefc:	681a      	ldr	r2, [r3, #0]
 800eefe:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800ef00:	bf38      	it	cc
 800ef02:	601c      	strcc	r4, [r3, #0]
 800ef04:	e7e8      	b.n	800eed8 <vTaskDelay+0x5c>
 800ef06:	f7ff feb3 	bl	800ec70 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800ef0a:	2800      	cmp	r0, #0
 800ef0c:	d0b8      	beq.n	800ee80 <vTaskDelay+0x4>
	}
 800ef0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ef10:	20012cb4 	.word	0x20012cb4
 800ef14:	20012d34 	.word	0x20012d34
 800ef18:	20012840 	.word	0x20012840
 800ef1c:	20012848 	.word	0x20012848
 800ef20:	20012844 	.word	0x20012844
 800ef24:	20012ce8 	.word	0x20012ce8

0800ef28 <vTaskStartScheduler>:
{
 800ef28:	b530      	push	{r4, r5, lr}
 800ef2a:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ef2c:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800ef2e:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ef30:	a906      	add	r1, sp, #24
 800ef32:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800ef34:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800ef38:	f7fe f90a 	bl	800d150 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800ef3c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ef40:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800ef42:	b1bb      	cbz	r3, 800ef74 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800ef44:	b16d      	cbz	r5, 800ef62 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ef46:	21ac      	movs	r1, #172	; 0xac
 800ef48:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800ef4a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800ef4c:	29ac      	cmp	r1, #172	; 0xac
 800ef4e:	d01a      	beq.n	800ef86 <vTaskStartScheduler+0x5e>
 800ef50:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef54:	f383 8811 	msr	BASEPRI, r3
 800ef58:	f3bf 8f6f 	isb	sy
 800ef5c:	f3bf 8f4f 	dsb	sy
 800ef60:	e7fe      	b.n	800ef60 <vTaskStartScheduler+0x38>
 800ef62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef66:	f383 8811 	msr	BASEPRI, r3
 800ef6a:	f3bf 8f6f 	isb	sy
 800ef6e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800ef72:	e7fe      	b.n	800ef72 <vTaskStartScheduler+0x4a>
 800ef74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef78:	f383 8811 	msr	BASEPRI, r3
 800ef7c:	f3bf 8f6f 	isb	sy
 800ef80:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800ef84:	e7fe      	b.n	800ef84 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ef86:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ef88:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800ef8a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ef8c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ef90:	4623      	mov	r3, r4
 800ef92:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800ef96:	491b      	ldr	r1, [pc, #108]	; (800f004 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ef98:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ef9a:	9400      	str	r4, [sp, #0]
 800ef9c:	481a      	ldr	r0, [pc, #104]	; (800f008 <vTaskStartScheduler+0xe0>)
 800ef9e:	f7ff fcdd 	bl	800e95c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800efa2:	4628      	mov	r0, r5
 800efa4:	f7ff fc52 	bl	800e84c <prvAddNewTaskToReadyList>
		return xReturn;
 800efa8:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800efaa:	b1eb      	cbz	r3, 800efe8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800efac:	f000 fc6e 	bl	800f88c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800efb0:	2801      	cmp	r0, #1
 800efb2:	d11b      	bne.n	800efec <vTaskStartScheduler+0xc4>
 800efb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efb8:	f383 8811 	msr	BASEPRI, r3
 800efbc:	f3bf 8f6f 	isb	sy
 800efc0:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800efc4:	4b11      	ldr	r3, [pc, #68]	; (800f00c <vTaskStartScheduler+0xe4>)
 800efc6:	4a12      	ldr	r2, [pc, #72]	; (800f010 <vTaskStartScheduler+0xe8>)
 800efc8:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800efca:	4912      	ldr	r1, [pc, #72]	; (800f014 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800efcc:	3358      	adds	r3, #88	; 0x58
 800efce:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800efd0:	4a11      	ldr	r2, [pc, #68]	; (800f018 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800efd2:	4b12      	ldr	r3, [pc, #72]	; (800f01c <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800efd4:	f04f 35ff 	mov.w	r5, #4294967295
 800efd8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800efda:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800efdc:	601c      	str	r4, [r3, #0]
}
 800efde:	b00b      	add	sp, #44	; 0x2c
 800efe0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800efe4:	f7fe bb38 	b.w	800d658 <xPortStartScheduler>
}
 800efe8:	b00b      	add	sp, #44	; 0x2c
 800efea:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800efec:	3001      	adds	r0, #1
 800efee:	d1fb      	bne.n	800efe8 <vTaskStartScheduler+0xc0>
 800eff0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eff4:	f383 8811 	msr	BASEPRI, r3
 800eff8:	f3bf 8f6f 	isb	sy
 800effc:	f3bf 8f4f 	dsb	sy
 800f000:	e7fe      	b.n	800f000 <vTaskStartScheduler+0xd8>
 800f002:	bf00      	nop
 800f004:	0802dbe4 	.word	0x0802dbe4
 800f008:	0800ea89 	.word	0x0800ea89
 800f00c:	20012840 	.word	0x20012840
 800f010:	20000160 	.word	0x20000160
 800f014:	20012ce8 	.word	0x20012ce8
 800f018:	20012d08 	.word	0x20012d08
 800f01c:	20012d34 	.word	0x20012d34

0800f020 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f020:	4a02      	ldr	r2, [pc, #8]	; (800f02c <vTaskSuspendAll+0xc>)
 800f022:	6813      	ldr	r3, [r2, #0]
 800f024:	3301      	adds	r3, #1
 800f026:	6013      	str	r3, [r2, #0]
}
 800f028:	4770      	bx	lr
 800f02a:	bf00      	nop
 800f02c:	20012cb4 	.word	0x20012cb4

0800f030 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f030:	4b06      	ldr	r3, [pc, #24]	; (800f04c <xTaskResumeAll+0x1c>)
 800f032:	681b      	ldr	r3, [r3, #0]
 800f034:	b943      	cbnz	r3, 800f048 <xTaskResumeAll+0x18>
 800f036:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f03a:	f383 8811 	msr	BASEPRI, r3
 800f03e:	f3bf 8f6f 	isb	sy
 800f042:	f3bf 8f4f 	dsb	sy
 800f046:	e7fe      	b.n	800f046 <xTaskResumeAll+0x16>
 800f048:	f7ff be12 	b.w	800ec70 <xTaskResumeAll.part.0>
 800f04c:	20012cb4 	.word	0x20012cb4

0800f050 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f050:	4b01      	ldr	r3, [pc, #4]	; (800f058 <xTaskGetTickCount+0x8>)
 800f052:	6818      	ldr	r0, [r3, #0]
}
 800f054:	4770      	bx	lr
 800f056:	bf00      	nop
 800f058:	20012d34 	.word	0x20012d34

0800f05c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f05c:	4b05      	ldr	r3, [pc, #20]	; (800f074 <xTaskIncrementTick+0x18>)
 800f05e:	681b      	ldr	r3, [r3, #0]
 800f060:	b90b      	cbnz	r3, 800f066 <xTaskIncrementTick+0xa>
 800f062:	f7ff bd61 	b.w	800eb28 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f066:	4a04      	ldr	r2, [pc, #16]	; (800f078 <xTaskIncrementTick+0x1c>)
 800f068:	6813      	ldr	r3, [r2, #0]
 800f06a:	3301      	adds	r3, #1
}
 800f06c:	2000      	movs	r0, #0
		++xPendedTicks;
 800f06e:	6013      	str	r3, [r2, #0]
}
 800f070:	4770      	bx	lr
 800f072:	bf00      	nop
 800f074:	20012cb4 	.word	0x20012cb4
 800f078:	20012cf0 	.word	0x20012cf0

0800f07c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f07c:	4b1f      	ldr	r3, [pc, #124]	; (800f0fc <vTaskSwitchContext+0x80>)
 800f07e:	681b      	ldr	r3, [r3, #0]
 800f080:	b11b      	cbz	r3, 800f08a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f082:	4b1f      	ldr	r3, [pc, #124]	; (800f100 <vTaskSwitchContext+0x84>)
 800f084:	2201      	movs	r2, #1
 800f086:	601a      	str	r2, [r3, #0]
 800f088:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f08a:	4a1d      	ldr	r2, [pc, #116]	; (800f100 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f08c:	491d      	ldr	r1, [pc, #116]	; (800f104 <vTaskSwitchContext+0x88>)
{
 800f08e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f090:	4c1d      	ldr	r4, [pc, #116]	; (800f108 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800f092:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f094:	6823      	ldr	r3, [r4, #0]
 800f096:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f09a:	0092      	lsls	r2, r2, #2
 800f09c:	0098      	lsls	r0, r3, #2
 800f09e:	588a      	ldr	r2, [r1, r2]
 800f0a0:	b942      	cbnz	r2, 800f0b4 <vTaskSwitchContext+0x38>
 800f0a2:	b313      	cbz	r3, 800f0ea <vTaskSwitchContext+0x6e>
 800f0a4:	3b01      	subs	r3, #1
 800f0a6:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f0aa:	0098      	lsls	r0, r3, #2
 800f0ac:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800f0b0:	2a00      	cmp	r2, #0
 800f0b2:	d0f6      	beq.n	800f0a2 <vTaskSwitchContext+0x26>
 800f0b4:	4418      	add	r0, r3
 800f0b6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800f0ba:	4662      	mov	r2, ip
 800f0bc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800f0c0:	6849      	ldr	r1, [r1, #4]
 800f0c2:	f8cc 1004 	str.w	r1, [ip, #4]
 800f0c6:	3208      	adds	r2, #8
 800f0c8:	4291      	cmp	r1, r2
 800f0ca:	bf08      	it	eq
 800f0cc:	6849      	ldreq	r1, [r1, #4]
 800f0ce:	4a0f      	ldr	r2, [pc, #60]	; (800f10c <vTaskSwitchContext+0x90>)
 800f0d0:	bf08      	it	eq
 800f0d2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800f0d6:	68c9      	ldr	r1, [r1, #12]
 800f0d8:	6011      	str	r1, [r2, #0]
 800f0da:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f0dc:	6813      	ldr	r3, [r2, #0]
 800f0de:	4a0c      	ldr	r2, [pc, #48]	; (800f110 <vTaskSwitchContext+0x94>)
}
 800f0e0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f0e4:	3358      	adds	r3, #88	; 0x58
 800f0e6:	6013      	str	r3, [r2, #0]
}
 800f0e8:	4770      	bx	lr
 800f0ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0ee:	f383 8811 	msr	BASEPRI, r3
 800f0f2:	f3bf 8f6f 	isb	sy
 800f0f6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f0fa:	e7fe      	b.n	800f0fa <vTaskSwitchContext+0x7e>
 800f0fc:	20012cb4 	.word	0x20012cb4
 800f100:	20012d38 	.word	0x20012d38
 800f104:	2001284c 	.word	0x2001284c
 800f108:	20012cbc 	.word	0x20012cbc
 800f10c:	20012840 	.word	0x20012840
 800f110:	20000160 	.word	0x20000160

0800f114 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f114:	b1d0      	cbz	r0, 800f14c <vTaskPlaceOnEventList+0x38>
{
 800f116:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f118:	4d1a      	ldr	r5, [pc, #104]	; (800f184 <vTaskPlaceOnEventList+0x70>)
 800f11a:	460c      	mov	r4, r1
 800f11c:	6829      	ldr	r1, [r5, #0]
 800f11e:	3118      	adds	r1, #24
 800f120:	f7fe f974 	bl	800d40c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f124:	4b18      	ldr	r3, [pc, #96]	; (800f188 <vTaskPlaceOnEventList+0x74>)
 800f126:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f128:	6828      	ldr	r0, [r5, #0]
 800f12a:	3004      	adds	r0, #4
 800f12c:	f7fe f986 	bl	800d43c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800f130:	1c63      	adds	r3, r4, #1
 800f132:	d014      	beq.n	800f15e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f134:	682b      	ldr	r3, [r5, #0]
 800f136:	19a4      	adds	r4, r4, r6
 800f138:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f13a:	d317      	bcc.n	800f16c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f13c:	4b13      	ldr	r3, [pc, #76]	; (800f18c <vTaskPlaceOnEventList+0x78>)
 800f13e:	6818      	ldr	r0, [r3, #0]
 800f140:	6829      	ldr	r1, [r5, #0]
}
 800f142:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f146:	3104      	adds	r1, #4
 800f148:	f7fe b960 	b.w	800d40c <vListInsert>
 800f14c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f150:	f383 8811 	msr	BASEPRI, r3
 800f154:	f3bf 8f6f 	isb	sy
 800f158:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800f15c:	e7fe      	b.n	800f15c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f15e:	6829      	ldr	r1, [r5, #0]
 800f160:	480b      	ldr	r0, [pc, #44]	; (800f190 <vTaskPlaceOnEventList+0x7c>)
}
 800f162:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f166:	3104      	adds	r1, #4
 800f168:	f7fe b940 	b.w	800d3ec <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f16c:	4b09      	ldr	r3, [pc, #36]	; (800f194 <vTaskPlaceOnEventList+0x80>)
 800f16e:	6818      	ldr	r0, [r3, #0]
 800f170:	6829      	ldr	r1, [r5, #0]
 800f172:	3104      	adds	r1, #4
 800f174:	f7fe f94a 	bl	800d40c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f178:	4b07      	ldr	r3, [pc, #28]	; (800f198 <vTaskPlaceOnEventList+0x84>)
 800f17a:	681a      	ldr	r2, [r3, #0]
 800f17c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f17e:	bf38      	it	cc
 800f180:	601c      	strcc	r4, [r3, #0]
}
 800f182:	bd70      	pop	{r4, r5, r6, pc}
 800f184:	20012840 	.word	0x20012840
 800f188:	20012d34 	.word	0x20012d34
 800f18c:	20012848 	.word	0x20012848
 800f190:	20012d0c 	.word	0x20012d0c
 800f194:	20012844 	.word	0x20012844
 800f198:	20012ce8 	.word	0x20012ce8

0800f19c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800f19c:	b330      	cbz	r0, 800f1ec <vTaskPlaceOnEventListRestricted+0x50>
	{
 800f19e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f1a0:	4e1d      	ldr	r6, [pc, #116]	; (800f218 <vTaskPlaceOnEventListRestricted+0x7c>)
 800f1a2:	460c      	mov	r4, r1
 800f1a4:	6831      	ldr	r1, [r6, #0]
 800f1a6:	4615      	mov	r5, r2
 800f1a8:	3118      	adds	r1, #24
 800f1aa:	f7fe f91f 	bl	800d3ec <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800f1ae:	4b1b      	ldr	r3, [pc, #108]	; (800f21c <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800f1b0:	b985      	cbnz	r5, 800f1d4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800f1b2:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f1b4:	6830      	ldr	r0, [r6, #0]
 800f1b6:	3004      	adds	r0, #4
 800f1b8:	f7fe f940 	bl	800d43c <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f1bc:	6833      	ldr	r3, [r6, #0]
 800f1be:	1964      	adds	r4, r4, r5
 800f1c0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800f1c2:	d31c      	bcc.n	800f1fe <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f1c4:	4b16      	ldr	r3, [pc, #88]	; (800f220 <vTaskPlaceOnEventListRestricted+0x84>)
 800f1c6:	6818      	ldr	r0, [r3, #0]
 800f1c8:	6831      	ldr	r1, [r6, #0]
	}
 800f1ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f1ce:	3104      	adds	r1, #4
 800f1d0:	f7fe b91c 	b.w	800d40c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f1d4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f1d6:	6830      	ldr	r0, [r6, #0]
 800f1d8:	3004      	adds	r0, #4
 800f1da:	f7fe f92f 	bl	800d43c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f1de:	6831      	ldr	r1, [r6, #0]
 800f1e0:	4810      	ldr	r0, [pc, #64]	; (800f224 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800f1e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f1e6:	3104      	adds	r1, #4
 800f1e8:	f7fe b900 	b.w	800d3ec <vListInsertEnd>
 800f1ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1f0:	f383 8811 	msr	BASEPRI, r3
 800f1f4:	f3bf 8f6f 	isb	sy
 800f1f8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800f1fc:	e7fe      	b.n	800f1fc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f1fe:	4b0a      	ldr	r3, [pc, #40]	; (800f228 <vTaskPlaceOnEventListRestricted+0x8c>)
 800f200:	6818      	ldr	r0, [r3, #0]
 800f202:	6831      	ldr	r1, [r6, #0]
 800f204:	3104      	adds	r1, #4
 800f206:	f7fe f901 	bl	800d40c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800f20a:	4b08      	ldr	r3, [pc, #32]	; (800f22c <vTaskPlaceOnEventListRestricted+0x90>)
 800f20c:	681a      	ldr	r2, [r3, #0]
 800f20e:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800f210:	bf38      	it	cc
 800f212:	601c      	strcc	r4, [r3, #0]
	}
 800f214:	bd70      	pop	{r4, r5, r6, pc}
 800f216:	bf00      	nop
 800f218:	20012840 	.word	0x20012840
 800f21c:	20012d34 	.word	0x20012d34
 800f220:	20012848 	.word	0x20012848
 800f224:	20012d0c 	.word	0x20012d0c
 800f228:	20012844 	.word	0x20012844
 800f22c:	20012ce8 	.word	0x20012ce8

0800f230 <xTaskRemoveFromEventList>:
{
 800f230:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f232:	68c3      	ldr	r3, [r0, #12]
 800f234:	68dc      	ldr	r4, [r3, #12]
{
 800f236:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800f238:	2c00      	cmp	r4, #0
 800f23a:	d02b      	beq.n	800f294 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800f23c:	f104 0518 	add.w	r5, r4, #24
 800f240:	4628      	mov	r0, r5
 800f242:	f7fe f8fb 	bl	800d43c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f246:	4b18      	ldr	r3, [pc, #96]	; (800f2a8 <xTaskRemoveFromEventList+0x78>)
 800f248:	681b      	ldr	r3, [r3, #0]
 800f24a:	b17b      	cbz	r3, 800f26c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800f24c:	4817      	ldr	r0, [pc, #92]	; (800f2ac <xTaskRemoveFromEventList+0x7c>)
 800f24e:	4629      	mov	r1, r5
 800f250:	f7fe f8cc 	bl	800d3ec <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800f254:	4b16      	ldr	r3, [pc, #88]	; (800f2b0 <xTaskRemoveFromEventList+0x80>)
 800f256:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f258:	681b      	ldr	r3, [r3, #0]
 800f25a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f25c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800f25e:	bf85      	ittet	hi
 800f260:	4b14      	ldrhi	r3, [pc, #80]	; (800f2b4 <xTaskRemoveFromEventList+0x84>)
 800f262:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800f264:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800f266:	6018      	strhi	r0, [r3, #0]
}
 800f268:	b003      	add	sp, #12
 800f26a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800f26c:	1d21      	adds	r1, r4, #4
 800f26e:	4608      	mov	r0, r1
 800f270:	9101      	str	r1, [sp, #4]
 800f272:	f7fe f8e3 	bl	800d43c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800f276:	4a10      	ldr	r2, [pc, #64]	; (800f2b8 <xTaskRemoveFromEventList+0x88>)
 800f278:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f27a:	6810      	ldr	r0, [r2, #0]
 800f27c:	9901      	ldr	r1, [sp, #4]
 800f27e:	4283      	cmp	r3, r0
 800f280:	480e      	ldr	r0, [pc, #56]	; (800f2bc <xTaskRemoveFromEventList+0x8c>)
 800f282:	bf88      	it	hi
 800f284:	6013      	strhi	r3, [r2, #0]
 800f286:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f28a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f28e:	f7fe f8ad 	bl	800d3ec <vListInsertEnd>
 800f292:	e7df      	b.n	800f254 <xTaskRemoveFromEventList+0x24>
 800f294:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f298:	f383 8811 	msr	BASEPRI, r3
 800f29c:	f3bf 8f6f 	isb	sy
 800f2a0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800f2a4:	e7fe      	b.n	800f2a4 <xTaskRemoveFromEventList+0x74>
 800f2a6:	bf00      	nop
 800f2a8:	20012cb4 	.word	0x20012cb4
 800f2ac:	20012cf4 	.word	0x20012cf4
 800f2b0:	20012840 	.word	0x20012840
 800f2b4:	20012d38 	.word	0x20012d38
 800f2b8:	20012cbc 	.word	0x20012cbc
 800f2bc:	2001284c 	.word	0x2001284c

0800f2c0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f2c0:	4a03      	ldr	r2, [pc, #12]	; (800f2d0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f2c2:	4b04      	ldr	r3, [pc, #16]	; (800f2d4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f2c4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f2c6:	681b      	ldr	r3, [r3, #0]
 800f2c8:	e9c0 2300 	strd	r2, r3, [r0]
}
 800f2cc:	4770      	bx	lr
 800f2ce:	bf00      	nop
 800f2d0:	20012cec 	.word	0x20012cec
 800f2d4:	20012d34 	.word	0x20012d34

0800f2d8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800f2d8:	b328      	cbz	r0, 800f326 <xTaskCheckForTimeOut+0x4e>
{
 800f2da:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f2dc:	460d      	mov	r5, r1
 800f2de:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800f2e0:	b1c1      	cbz	r1, 800f314 <xTaskCheckForTimeOut+0x3c>
 800f2e2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800f2e4:	f7fe f926 	bl	800d534 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800f2e8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800f2ea:	4a1d      	ldr	r2, [pc, #116]	; (800f360 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800f2ec:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800f2ee:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800f2f0:	d030      	beq.n	800f354 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800f2f2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800f364 <xTaskCheckForTimeOut+0x8c>
 800f2f6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800f2fa:	f8dc 7000 	ldr.w	r7, [ip]
 800f2fe:	42be      	cmp	r6, r7
 800f300:	d01a      	beq.n	800f338 <xTaskCheckForTimeOut+0x60>
 800f302:	4288      	cmp	r0, r1
 800f304:	d818      	bhi.n	800f338 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800f306:	2001      	movs	r0, #1
 800f308:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f30a:	f7fe f935 	bl	800d578 <vPortExitCritical>
}
 800f30e:	9801      	ldr	r0, [sp, #4]
 800f310:	b003      	add	sp, #12
 800f312:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f314:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f318:	f383 8811 	msr	BASEPRI, r3
 800f31c:	f3bf 8f6f 	isb	sy
 800f320:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800f324:	e7fe      	b.n	800f324 <xTaskCheckForTimeOut+0x4c>
 800f326:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f32a:	f383 8811 	msr	BASEPRI, r3
 800f32e:	f3bf 8f6f 	isb	sy
 800f332:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800f336:	e7fe      	b.n	800f336 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800f338:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800f33c:	4573      	cmp	r3, lr
 800f33e:	d90b      	bls.n	800f358 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800f340:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800f342:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f346:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800f348:	4403      	add	r3, r0
 800f34a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800f34c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800f34e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800f352:	e7d9      	b.n	800f308 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800f354:	2000      	movs	r0, #0
 800f356:	e7d7      	b.n	800f308 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800f358:	2300      	movs	r3, #0
 800f35a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800f35c:	2001      	movs	r0, #1
 800f35e:	e7d3      	b.n	800f308 <xTaskCheckForTimeOut+0x30>
 800f360:	20012d34 	.word	0x20012d34
 800f364:	20012cec 	.word	0x20012cec

0800f368 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800f368:	4b01      	ldr	r3, [pc, #4]	; (800f370 <vTaskMissedYield+0x8>)
 800f36a:	2201      	movs	r2, #1
 800f36c:	601a      	str	r2, [r3, #0]
}
 800f36e:	4770      	bx	lr
 800f370:	20012d38 	.word	0x20012d38

0800f374 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800f374:	4b05      	ldr	r3, [pc, #20]	; (800f38c <xTaskGetSchedulerState+0x18>)
 800f376:	681b      	ldr	r3, [r3, #0]
 800f378:	b133      	cbz	r3, 800f388 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f37a:	4b05      	ldr	r3, [pc, #20]	; (800f390 <xTaskGetSchedulerState+0x1c>)
 800f37c:	6818      	ldr	r0, [r3, #0]
 800f37e:	fab0 f080 	clz	r0, r0
 800f382:	0940      	lsrs	r0, r0, #5
 800f384:	0040      	lsls	r0, r0, #1
 800f386:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800f388:	2001      	movs	r0, #1
	}
 800f38a:	4770      	bx	lr
 800f38c:	20012d08 	.word	0x20012d08
 800f390:	20012cb4 	.word	0x20012cb4

0800f394 <xTaskPriorityInherit>:
	{
 800f394:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800f396:	4604      	mov	r4, r0
	{
 800f398:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800f39a:	b1c8      	cbz	r0, 800f3d0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800f39c:	4d1d      	ldr	r5, [pc, #116]	; (800f414 <xTaskPriorityInherit+0x80>)
 800f39e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f3a0:	682a      	ldr	r2, [r5, #0]
 800f3a2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f3a4:	4293      	cmp	r3, r2
 800f3a6:	d215      	bcs.n	800f3d4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f3a8:	6982      	ldr	r2, [r0, #24]
 800f3aa:	2a00      	cmp	r2, #0
 800f3ac:	db04      	blt.n	800f3b8 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f3ae:	682a      	ldr	r2, [r5, #0]
 800f3b0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f3b2:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800f3b6:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800f3b8:	4e17      	ldr	r6, [pc, #92]	; (800f418 <xTaskPriorityInherit+0x84>)
 800f3ba:	6962      	ldr	r2, [r4, #20]
 800f3bc:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f3c0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800f3c4:	429a      	cmp	r2, r3
 800f3c6:	d00e      	beq.n	800f3e6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f3c8:	682b      	ldr	r3, [r5, #0]
 800f3ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f3cc:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800f3ce:	2001      	movs	r0, #1
	}
 800f3d0:	b002      	add	sp, #8
 800f3d2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800f3d4:	682b      	ldr	r3, [r5, #0]
 800f3d6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f3d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f3da:	4298      	cmp	r0, r3
 800f3dc:	bf2c      	ite	cs
 800f3de:	2000      	movcs	r0, #0
 800f3e0:	2001      	movcc	r0, #1
	}
 800f3e2:	b002      	add	sp, #8
 800f3e4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f3e6:	1d21      	adds	r1, r4, #4
 800f3e8:	4608      	mov	r0, r1
 800f3ea:	9101      	str	r1, [sp, #4]
 800f3ec:	f7fe f826 	bl	800d43c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f3f0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f3f2:	4b0a      	ldr	r3, [pc, #40]	; (800f41c <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f3f4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f3f6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800f3f8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800f3fa:	4290      	cmp	r0, r2
 800f3fc:	bf88      	it	hi
 800f3fe:	6018      	strhi	r0, [r3, #0]
 800f400:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f404:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800f408:	9901      	ldr	r1, [sp, #4]
 800f40a:	f7fd ffef 	bl	800d3ec <vListInsertEnd>
				xReturn = pdTRUE;
 800f40e:	2001      	movs	r0, #1
 800f410:	e7de      	b.n	800f3d0 <xTaskPriorityInherit+0x3c>
 800f412:	bf00      	nop
 800f414:	20012840 	.word	0x20012840
 800f418:	2001284c 	.word	0x2001284c
 800f41c:	20012cbc 	.word	0x20012cbc

0800f420 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800f420:	b318      	cbz	r0, 800f46a <xTaskPriorityDisinherit+0x4a>
	{
 800f422:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800f424:	4b1e      	ldr	r3, [pc, #120]	; (800f4a0 <xTaskPriorityDisinherit+0x80>)
 800f426:	681c      	ldr	r4, [r3, #0]
 800f428:	4284      	cmp	r4, r0
	{
 800f42a:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800f42c:	d008      	beq.n	800f440 <xTaskPriorityDisinherit+0x20>
 800f42e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f432:	f383 8811 	msr	BASEPRI, r3
 800f436:	f3bf 8f6f 	isb	sy
 800f43a:	f3bf 8f4f 	dsb	sy
 800f43e:	e7fe      	b.n	800f43e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800f440:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800f442:	b14b      	cbz	r3, 800f458 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f444:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f446:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800f448:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f44a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800f44c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800f44e:	d000      	beq.n	800f452 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800f450:	b16b      	cbz	r3, 800f46e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800f452:	2000      	movs	r0, #0
	}
 800f454:	b002      	add	sp, #8
 800f456:	bd10      	pop	{r4, pc}
 800f458:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f45c:	f383 8811 	msr	BASEPRI, r3
 800f460:	f3bf 8f6f 	isb	sy
 800f464:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f468:	e7fe      	b.n	800f468 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800f46a:	2000      	movs	r0, #0
	}
 800f46c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f46e:	1d21      	adds	r1, r4, #4
 800f470:	4608      	mov	r0, r1
 800f472:	9101      	str	r1, [sp, #4]
 800f474:	f7fd ffe2 	bl	800d43c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f478:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800f47a:	4a0a      	ldr	r2, [pc, #40]	; (800f4a4 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800f47c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f47e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800f482:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800f484:	6810      	ldr	r0, [r2, #0]
 800f486:	9901      	ldr	r1, [sp, #4]
 800f488:	4283      	cmp	r3, r0
 800f48a:	4807      	ldr	r0, [pc, #28]	; (800f4a8 <xTaskPriorityDisinherit+0x88>)
 800f48c:	bf88      	it	hi
 800f48e:	6013      	strhi	r3, [r2, #0]
 800f490:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f494:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800f498:	f7fd ffa8 	bl	800d3ec <vListInsertEnd>
					xReturn = pdTRUE;
 800f49c:	2001      	movs	r0, #1
		return xReturn;
 800f49e:	e7d9      	b.n	800f454 <xTaskPriorityDisinherit+0x34>
 800f4a0:	20012840 	.word	0x20012840
 800f4a4:	20012cbc 	.word	0x20012cbc
 800f4a8:	2001284c 	.word	0x2001284c

0800f4ac <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800f4ac:	2800      	cmp	r0, #0
 800f4ae:	d041      	beq.n	800f534 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800f4b0:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800f4b2:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800f4b4:	b083      	sub	sp, #12
 800f4b6:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800f4b8:	b153      	cbz	r3, 800f4d0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800f4ba:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800f4bc:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f4be:	4281      	cmp	r1, r0
 800f4c0:	bf38      	it	cc
 800f4c2:	4601      	movcc	r1, r0
 800f4c4:	428a      	cmp	r2, r1
 800f4c6:	d001      	beq.n	800f4cc <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800f4c8:	2b01      	cmp	r3, #1
 800f4ca:	d00a      	beq.n	800f4e2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800f4cc:	b003      	add	sp, #12
 800f4ce:	bd30      	pop	{r4, r5, pc}
 800f4d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4d4:	f383 8811 	msr	BASEPRI, r3
 800f4d8:	f3bf 8f6f 	isb	sy
 800f4dc:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800f4e0:	e7fe      	b.n	800f4e0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800f4e2:	4b19      	ldr	r3, [pc, #100]	; (800f548 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800f4e4:	681b      	ldr	r3, [r3, #0]
 800f4e6:	42a3      	cmp	r3, r4
 800f4e8:	d025      	beq.n	800f536 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f4ea:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800f4ec:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800f4ee:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4f0:	bfa8      	it	ge
 800f4f2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f4f6:	4d15      	ldr	r5, [pc, #84]	; (800f54c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f4f8:	bfa8      	it	ge
 800f4fa:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800f4fc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800f500:	6961      	ldr	r1, [r4, #20]
 800f502:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800f506:	4299      	cmp	r1, r3
 800f508:	d1e0      	bne.n	800f4cc <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f50a:	1d21      	adds	r1, r4, #4
 800f50c:	4608      	mov	r0, r1
 800f50e:	9101      	str	r1, [sp, #4]
 800f510:	f7fd ff94 	bl	800d43c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800f514:	4b0e      	ldr	r3, [pc, #56]	; (800f550 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800f516:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f518:	681a      	ldr	r2, [r3, #0]
 800f51a:	9901      	ldr	r1, [sp, #4]
 800f51c:	4290      	cmp	r0, r2
 800f51e:	bf88      	it	hi
 800f520:	6018      	strhi	r0, [r3, #0]
 800f522:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f526:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800f52a:	b003      	add	sp, #12
 800f52c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800f530:	f7fd bf5c 	b.w	800d3ec <vListInsertEnd>
 800f534:	4770      	bx	lr
 800f536:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f53a:	f383 8811 	msr	BASEPRI, r3
 800f53e:	f3bf 8f6f 	isb	sy
 800f542:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800f546:	e7fe      	b.n	800f546 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800f548:	20012840 	.word	0x20012840
 800f54c:	2001284c 	.word	0x2001284c
 800f550:	20012cbc 	.word	0x20012cbc

0800f554 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800f554:	4b04      	ldr	r3, [pc, #16]	; (800f568 <pvTaskIncrementMutexHeldCount+0x14>)
 800f556:	681a      	ldr	r2, [r3, #0]
 800f558:	b11a      	cbz	r2, 800f562 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800f55a:	6819      	ldr	r1, [r3, #0]
 800f55c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800f55e:	3201      	adds	r2, #1
 800f560:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800f562:	6818      	ldr	r0, [r3, #0]
	}
 800f564:	4770      	bx	lr
 800f566:	bf00      	nop
 800f568:	20012840 	.word	0x20012840

0800f56c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800f56c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f570:	4e22      	ldr	r6, [pc, #136]	; (800f5fc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800f572:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800f604 <prvSwitchTimerLists+0x98>
{
 800f576:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800f578:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f57c:	e00d      	b.n	800f59a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f57e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f580:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f582:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f584:	1d25      	adds	r5, r4, #4
 800f586:	4628      	mov	r0, r5
 800f588:	f7fd ff58 	bl	800d43c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f58c:	6a23      	ldr	r3, [r4, #32]
 800f58e:	4620      	mov	r0, r4
 800f590:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f592:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f596:	075b      	lsls	r3, r3, #29
 800f598:	d40a      	bmi.n	800f5b0 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800f59a:	6833      	ldr	r3, [r6, #0]
 800f59c:	681a      	ldr	r2, [r3, #0]
 800f59e:	2a00      	cmp	r2, #0
 800f5a0:	d1ed      	bne.n	800f57e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800f5a2:	4a17      	ldr	r2, [pc, #92]	; (800f600 <prvSwitchTimerLists+0x94>)
 800f5a4:	6811      	ldr	r1, [r2, #0]
 800f5a6:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800f5a8:	6013      	str	r3, [r2, #0]
}
 800f5aa:	b005      	add	sp, #20
 800f5ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800f5b0:	69a3      	ldr	r3, [r4, #24]
 800f5b2:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800f5b4:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f5b6:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800f5b8:	d205      	bcs.n	800f5c6 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f5ba:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800f5bc:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f5be:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f5c0:	f7fd ff24 	bl	800d40c <vListInsert>
 800f5c4:	e7e9      	b.n	800f59a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800f5c6:	f8d9 3000 	ldr.w	r3, [r9]
 800f5ca:	b16b      	cbz	r3, 800f5e8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f5cc:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f5d0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f5d2:	f7ff fecf 	bl	800f374 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f5d6:	2300      	movs	r3, #0
 800f5d8:	f8d9 0000 	ldr.w	r0, [r9]
 800f5dc:	461a      	mov	r2, r3
 800f5de:	4669      	mov	r1, sp
 800f5e0:	f7fe fa9c 	bl	800db1c <xQueueGenericSend>
				configASSERT( xResult );
 800f5e4:	2800      	cmp	r0, #0
 800f5e6:	d1d8      	bne.n	800f59a <prvSwitchTimerLists+0x2e>
 800f5e8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5ec:	f383 8811 	msr	BASEPRI, r3
 800f5f0:	f3bf 8f6f 	isb	sy
 800f5f4:	f3bf 8f4f 	dsb	sy
 800f5f8:	e7fe      	b.n	800f5f8 <prvSwitchTimerLists+0x8c>
 800f5fa:	bf00      	nop
 800f5fc:	20012d3c 	.word	0x20012d3c
 800f600:	20012d40 	.word	0x20012d40
 800f604:	20012e60 	.word	0x20012e60

0800f608 <prvTimerTask>:
{
 800f608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f60c:	4e9b      	ldr	r6, [pc, #620]	; (800f87c <prvTimerTask+0x274>)
 800f60e:	4d9c      	ldr	r5, [pc, #624]	; (800f880 <prvTimerTask+0x278>)
 800f610:	4c9c      	ldr	r4, [pc, #624]	; (800f884 <prvTimerTask+0x27c>)
 800f612:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800f614:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800f618:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f61c:	6833      	ldr	r3, [r6, #0]
 800f61e:	681f      	ldr	r7, [r3, #0]
 800f620:	2f00      	cmp	r7, #0
 800f622:	f000 80a8 	beq.w	800f776 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800f626:	68db      	ldr	r3, [r3, #12]
 800f628:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800f62a:	f7ff fcf9 	bl	800f020 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f62e:	f7ff fd0f 	bl	800f050 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f632:	682a      	ldr	r2, [r5, #0]
 800f634:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800f636:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f638:	f0c0 80ae 	bcc.w	800f798 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f63c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800f63e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f640:	f240 80b4 	bls.w	800f7ac <prvTimerTask+0x1a4>
 800f644:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f646:	6820      	ldr	r0, [r4, #0]
 800f648:	eba7 010a 	sub.w	r1, r7, sl
 800f64c:	f7ff f89a 	bl	800e784 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f650:	f7ff fcee 	bl	800f030 <xTaskResumeAll>
 800f654:	b928      	cbnz	r0, 800f662 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f656:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f65a:	f3bf 8f4f 	dsb	sy
 800f65e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f662:	6820      	ldr	r0, [r4, #0]
 800f664:	2200      	movs	r2, #0
 800f666:	a902      	add	r1, sp, #8
 800f668:	f7fe fc94 	bl	800df94 <xQueueReceive>
 800f66c:	2800      	cmp	r0, #0
 800f66e:	d0d5      	beq.n	800f61c <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f670:	9b02      	ldr	r3, [sp, #8]
 800f672:	2b00      	cmp	r3, #0
 800f674:	db76      	blt.n	800f764 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f676:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f678:	697b      	ldr	r3, [r7, #20]
 800f67a:	b113      	cbz	r3, 800f682 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f67c:	1d38      	adds	r0, r7, #4
 800f67e:	f7fd fedd 	bl	800d43c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f682:	f7ff fce5 	bl	800f050 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f686:	682b      	ldr	r3, [r5, #0]
 800f688:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f68a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f68c:	f0c0 808b 	bcc.w	800f7a6 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f690:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f692:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f696:	2b09      	cmp	r3, #9
 800f698:	d8e3      	bhi.n	800f662 <prvTimerTask+0x5a>
 800f69a:	e8df f003 	tbb	[pc, r3]
 800f69e:	0505      	.short	0x0505
 800f6a0:	5a3d5305 	.word	0x5a3d5305
 800f6a4:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f6a8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f6ac:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f6ae:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f6b0:	f043 0301 	orr.w	r3, r3, #1
 800f6b4:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f6b8:	9b03      	ldr	r3, [sp, #12]
 800f6ba:	1899      	adds	r1, r3, r2
 800f6bc:	bf2c      	ite	cs
 800f6be:	2001      	movcs	r0, #1
 800f6c0:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f6c2:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f6c4:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f6c6:	f200 808c 	bhi.w	800f7e2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f6ca:	ebaa 0303 	sub.w	r3, sl, r3
 800f6ce:	429a      	cmp	r2, r3
 800f6d0:	d832      	bhi.n	800f738 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f6d2:	6a3b      	ldr	r3, [r7, #32]
 800f6d4:	4638      	mov	r0, r7
 800f6d6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f6d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f6dc:	075b      	lsls	r3, r3, #29
 800f6de:	d5c0      	bpl.n	800f662 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f6e0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f6e2:	9903      	ldr	r1, [sp, #12]
 800f6e4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f6e6:	b172      	cbz	r2, 800f706 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f6e8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f6ea:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f6ee:	2300      	movs	r3, #0
 800f6f0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f6f2:	f7ff fe3f 	bl	800f374 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f6f6:	2300      	movs	r3, #0
 800f6f8:	6820      	ldr	r0, [r4, #0]
 800f6fa:	461a      	mov	r2, r3
 800f6fc:	a906      	add	r1, sp, #24
 800f6fe:	f7fe fa0d 	bl	800db1c <xQueueGenericSend>
							configASSERT( xResult );
 800f702:	2800      	cmp	r0, #0
 800f704:	d1ad      	bne.n	800f662 <prvTimerTask+0x5a>
 800f706:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f70a:	f383 8811 	msr	BASEPRI, r3
 800f70e:	f3bf 8f6f 	isb	sy
 800f712:	f3bf 8f4f 	dsb	sy
 800f716:	e7fe      	b.n	800f716 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f718:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f71c:	f043 0301 	orr.w	r3, r3, #1
 800f720:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f724:	9b03      	ldr	r3, [sp, #12]
 800f726:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f728:	2b00      	cmp	r3, #0
 800f72a:	f000 809d 	beq.w	800f868 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f72e:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f730:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f732:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f734:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f736:	d85e      	bhi.n	800f7f6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f738:	4b53      	ldr	r3, [pc, #332]	; (800f888 <prvTimerTask+0x280>)
 800f73a:	1d39      	adds	r1, r7, #4
 800f73c:	6818      	ldr	r0, [r3, #0]
 800f73e:	f7fd fe65 	bl	800d40c <vListInsert>
	return xProcessTimerNow;
 800f742:	e78e      	b.n	800f662 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f744:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f748:	f023 0301 	bic.w	r3, r3, #1
 800f74c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f750:	e787      	b.n	800f662 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f752:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f756:	079a      	lsls	r2, r3, #30
 800f758:	d552      	bpl.n	800f800 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f75a:	f023 0301 	bic.w	r3, r3, #1
 800f75e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f762:	e77e      	b.n	800f662 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f764:	9b03      	ldr	r3, [sp, #12]
 800f766:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f76a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f76c:	9b02      	ldr	r3, [sp, #8]
 800f76e:	2b00      	cmp	r3, #0
 800f770:	f6ff af77 	blt.w	800f662 <prvTimerTask+0x5a>
 800f774:	e77f      	b.n	800f676 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f776:	f7ff fc53 	bl	800f020 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f77a:	f7ff fc69 	bl	800f050 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f77e:	682a      	ldr	r2, [r5, #0]
 800f780:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f782:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f784:	d808      	bhi.n	800f798 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f786:	4b40      	ldr	r3, [pc, #256]	; (800f888 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f788:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f78c:	681a      	ldr	r2, [r3, #0]
 800f78e:	6812      	ldr	r2, [r2, #0]
 800f790:	fab2 f282 	clz	r2, r2
 800f794:	0952      	lsrs	r2, r2, #5
 800f796:	e756      	b.n	800f646 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f798:	f7ff fee8 	bl	800f56c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f79c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f7a0:	f7ff fc46 	bl	800f030 <xTaskResumeAll>
 800f7a4:	e75d      	b.n	800f662 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f7a6:	f7ff fee1 	bl	800f56c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f7aa:	e771      	b.n	800f690 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f7ac:	f7ff fc40 	bl	800f030 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f7b0:	6832      	ldr	r2, [r6, #0]
 800f7b2:	68d2      	ldr	r2, [r2, #12]
 800f7b4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f7b8:	f10b 0104 	add.w	r1, fp, #4
 800f7bc:	4608      	mov	r0, r1
 800f7be:	9101      	str	r1, [sp, #4]
 800f7c0:	f7fd fe3c 	bl	800d43c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f7c4:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f7c8:	9901      	ldr	r1, [sp, #4]
 800f7ca:	f010 0f04 	tst.w	r0, #4
 800f7ce:	d11b      	bne.n	800f808 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f7d0:	f020 0001 	bic.w	r0, r0, #1
 800f7d4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f7d8:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f7dc:	4658      	mov	r0, fp
 800f7de:	4798      	blx	r3
}
 800f7e0:	e73f      	b.n	800f662 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f7e2:	4553      	cmp	r3, sl
 800f7e4:	d902      	bls.n	800f7ec <prvTimerTask+0x1e4>
 800f7e6:	2800      	cmp	r0, #0
 800f7e8:	f43f af73 	beq.w	800f6d2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f7ec:	6830      	ldr	r0, [r6, #0]
 800f7ee:	1d39      	adds	r1, r7, #4
 800f7f0:	f7fd fe0c 	bl	800d40c <vListInsert>
	return xProcessTimerNow;
 800f7f4:	e735      	b.n	800f662 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f7f6:	6830      	ldr	r0, [r6, #0]
 800f7f8:	1d39      	adds	r1, r7, #4
 800f7fa:	f7fd fe07 	bl	800d40c <vListInsert>
 800f7fe:	e730      	b.n	800f662 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f800:	4638      	mov	r0, r7
 800f802:	f7fd fd7f 	bl	800d304 <vPortFree>
 800f806:	e72c      	b.n	800f662 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f808:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f80c:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f810:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f812:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f814:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f818:	d903      	bls.n	800f822 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f81a:	6830      	ldr	r0, [r6, #0]
 800f81c:	f7fd fdf6 	bl	800d40c <vListInsert>
	return xProcessTimerNow;
 800f820:	e7da      	b.n	800f7d8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f822:	ebaa 0307 	sub.w	r3, sl, r7
 800f826:	429a      	cmp	r2, r3
 800f828:	d819      	bhi.n	800f85e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f82a:	6823      	ldr	r3, [r4, #0]
 800f82c:	b173      	cbz	r3, 800f84c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f82e:	2300      	movs	r3, #0
 800f830:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f832:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f834:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f838:	f7ff fd9c 	bl	800f374 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f83c:	2300      	movs	r3, #0
 800f83e:	6820      	ldr	r0, [r4, #0]
 800f840:	461a      	mov	r2, r3
 800f842:	a906      	add	r1, sp, #24
 800f844:	f7fe f96a 	bl	800db1c <xQueueGenericSend>
			configASSERT( xResult );
 800f848:	2800      	cmp	r0, #0
 800f84a:	d1c5      	bne.n	800f7d8 <prvTimerTask+0x1d0>
 800f84c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f850:	f383 8811 	msr	BASEPRI, r3
 800f854:	f3bf 8f6f 	isb	sy
 800f858:	f3bf 8f4f 	dsb	sy
 800f85c:	e7fe      	b.n	800f85c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f85e:	4b0a      	ldr	r3, [pc, #40]	; (800f888 <prvTimerTask+0x280>)
 800f860:	6818      	ldr	r0, [r3, #0]
 800f862:	f7fd fdd3 	bl	800d40c <vListInsert>
	return xProcessTimerNow;
 800f866:	e7b7      	b.n	800f7d8 <prvTimerTask+0x1d0>
 800f868:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f86c:	f383 8811 	msr	BASEPRI, r3
 800f870:	f3bf 8f6f 	isb	sy
 800f874:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f878:	e7fe      	b.n	800f878 <prvTimerTask+0x270>
 800f87a:	bf00      	nop
 800f87c:	20012d3c 	.word	0x20012d3c
 800f880:	20012e0c 	.word	0x20012e0c
 800f884:	20012e60 	.word	0x20012e60
 800f888:	20012d40 	.word	0x20012d40

0800f88c <xTimerCreateTimerTask>:
{
 800f88c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f88e:	4c23      	ldr	r4, [pc, #140]	; (800f91c <xTimerCreateTimerTask+0x90>)
{
 800f890:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f892:	f7fd fe4f 	bl	800d534 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f896:	6825      	ldr	r5, [r4, #0]
 800f898:	b335      	cbz	r5, 800f8e8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f89a:	f7fd fe6d 	bl	800d578 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f89e:	6823      	ldr	r3, [r4, #0]
 800f8a0:	b1cb      	cbz	r3, 800f8d6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f8a2:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f8a4:	aa07      	add	r2, sp, #28
 800f8a6:	a906      	add	r1, sp, #24
 800f8a8:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f8aa:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f8ae:	f7fd fc5d 	bl	800d16c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f8b2:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f8b6:	2302      	movs	r3, #2
 800f8b8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f8bc:	9300      	str	r3, [sp, #0]
 800f8be:	9a07      	ldr	r2, [sp, #28]
 800f8c0:	4917      	ldr	r1, [pc, #92]	; (800f920 <xTimerCreateTimerTask+0x94>)
 800f8c2:	4818      	ldr	r0, [pc, #96]	; (800f924 <xTimerCreateTimerTask+0x98>)
 800f8c4:	4623      	mov	r3, r4
 800f8c6:	f7ff fa6d 	bl	800eda4 <xTaskCreateStatic>
 800f8ca:	4b17      	ldr	r3, [pc, #92]	; (800f928 <xTimerCreateTimerTask+0x9c>)
 800f8cc:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f8ce:	b110      	cbz	r0, 800f8d6 <xTimerCreateTimerTask+0x4a>
}
 800f8d0:	2001      	movs	r0, #1
 800f8d2:	b009      	add	sp, #36	; 0x24
 800f8d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f8d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8da:	f383 8811 	msr	BASEPRI, r3
 800f8de:	f3bf 8f6f 	isb	sy
 800f8e2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f8e6:	e7fe      	b.n	800f8e6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f8e8:	4f10      	ldr	r7, [pc, #64]	; (800f92c <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f8ea:	4e11      	ldr	r6, [pc, #68]	; (800f930 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f8ec:	4638      	mov	r0, r7
 800f8ee:	f7fd fd6d 	bl	800d3cc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f8f2:	4630      	mov	r0, r6
 800f8f4:	f7fd fd6a 	bl	800d3cc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f8f8:	4a0e      	ldr	r2, [pc, #56]	; (800f934 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f8fa:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f8fc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f8fe:	4a0e      	ldr	r2, [pc, #56]	; (800f938 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f900:	4b0e      	ldr	r3, [pc, #56]	; (800f93c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f902:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f904:	2110      	movs	r1, #16
 800f906:	4a0e      	ldr	r2, [pc, #56]	; (800f940 <xTimerCreateTimerTask+0xb4>)
 800f908:	200a      	movs	r0, #10
 800f90a:	f7fd ffb1 	bl	800d870 <xQueueGenericCreateStatic>
 800f90e:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f910:	2800      	cmp	r0, #0
 800f912:	d0c2      	beq.n	800f89a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f914:	490b      	ldr	r1, [pc, #44]	; (800f944 <xTimerCreateTimerTask+0xb8>)
 800f916:	f7fe ff0d 	bl	800e734 <vQueueAddToRegistry>
 800f91a:	e7be      	b.n	800f89a <xTimerCreateTimerTask+0xe>
 800f91c:	20012e60 	.word	0x20012e60
 800f920:	0802dbf4 	.word	0x0802dbf4
 800f924:	0800f609 	.word	0x0800f609
 800f928:	20012e64 	.word	0x20012e64
 800f92c:	20012de4 	.word	0x20012de4
 800f930:	20012df8 	.word	0x20012df8
 800f934:	20012d3c 	.word	0x20012d3c
 800f938:	20012d40 	.word	0x20012d40
 800f93c:	20012e10 	.word	0x20012e10
 800f940:	20012d44 	.word	0x20012d44
 800f944:	0802dbec 	.word	0x0802dbec

0800f948 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f948:	8880      	ldrh	r0, [r0, #4]
 800f94a:	4770      	bx	lr

0800f94c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f94c:	b570      	push	{r4, r5, r6, lr}
 800f94e:	6803      	ldr	r3, [r0, #0]
 800f950:	4605      	mov	r5, r0
 800f952:	460c      	mov	r4, r1
 800f954:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f956:	2100      	movs	r1, #0
 800f958:	4798      	blx	r3
 800f95a:	682b      	ldr	r3, [r5, #0]
 800f95c:	4606      	mov	r6, r0
 800f95e:	6a1b      	ldr	r3, [r3, #32]
 800f960:	4628      	mov	r0, r5
 800f962:	4798      	blx	r3
 800f964:	1ba4      	subs	r4, r4, r6
 800f966:	b2a4      	uxth	r4, r4
 800f968:	fbb4 f0f0 	udiv	r0, r4, r0
 800f96c:	bd70      	pop	{r4, r5, r6, pc}

0800f96e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f96e:	2300      	movs	r3, #0
 800f970:	8083      	strh	r3, [r0, #4]
 800f972:	4770      	bx	lr

0800f974 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f974:	b510      	push	{r4, lr}
 800f976:	6803      	ldr	r3, [r0, #0]
 800f978:	8881      	ldrh	r1, [r0, #4]
 800f97a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f97c:	4604      	mov	r4, r0
 800f97e:	4798      	blx	r3
 800f980:	88a3      	ldrh	r3, [r4, #4]
 800f982:	3301      	adds	r3, #1
 800f984:	80a3      	strh	r3, [r4, #4]
 800f986:	bd10      	pop	{r4, pc}

0800f988 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f988:	6803      	ldr	r3, [r0, #0]
 800f98a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f98c:	4718      	bx	r3

0800f98e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f98e:	4770      	bx	lr

0800f990 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f990:	4a02      	ldr	r2, [pc, #8]	; (800f99c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f992:	6002      	str	r2, [r0, #0]
 800f994:	2200      	movs	r2, #0
 800f996:	8082      	strh	r2, [r0, #4]
 800f998:	4770      	bx	lr
 800f99a:	bf00      	nop
 800f99c:	0802dc04 	.word	0x0802dc04

0800f9a0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f9a0:	b510      	push	{r4, lr}
 800f9a2:	6803      	ldr	r3, [r0, #0]
 800f9a4:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f9a8:	4604      	mov	r4, r0
 800f9aa:	4798      	blx	r3
 800f9ac:	b110      	cbz	r0, 800f9b4 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f9ae:	4620      	mov	r0, r4
 800f9b0:	f7f1 fcf2 	bl	8001398 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f9b4:	bd10      	pop	{r4, pc}

0800f9b6 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f9b6:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f9ba:	4770      	bx	lr

0800f9bc <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f9bc:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f9c0:	4770      	bx	lr

0800f9c2 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f9c2:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f9c6:	4770      	bx	lr

0800f9c8 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f9c8:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f9cc:	4770      	bx	lr

0800f9ce <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f9ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f9d0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f9d4:	461e      	mov	r6, r3
 800f9d6:	6803      	ldr	r3, [r0, #0]
 800f9d8:	460f      	mov	r7, r1
 800f9da:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f9de:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f9e2:	4604      	mov	r4, r0
 800f9e4:	4615      	mov	r5, r2
 800f9e6:	4798      	blx	r3
 800f9e8:	b93e      	cbnz	r6, 800f9fa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f9ea:	1bed      	subs	r5, r5, r7
 800f9ec:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f9f0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f9f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f9f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9fa:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f9fe:	e7f7      	b.n	800f9f0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800fa00 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800fa00:	b510      	push	{r4, lr}
 800fa02:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800fa06:	600c      	str	r4, [r1, #0]
 800fa08:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fa0c:	6011      	str	r1, [r2, #0]
 800fa0e:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800fa12:	801a      	strh	r2, [r3, #0]
 800fa14:	9b02      	ldr	r3, [sp, #8]
 800fa16:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800fa1a:	801a      	strh	r2, [r3, #0]
 800fa1c:	bd10      	pop	{r4, pc}

0800fa1e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800fa1e:	b510      	push	{r4, lr}
 800fa20:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800fa24:	600c      	str	r4, [r1, #0]
 800fa26:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fa2a:	6011      	str	r1, [r2, #0]
 800fa2c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800fa30:	801a      	strh	r2, [r3, #0]
 800fa32:	bd10      	pop	{r4, pc}

0800fa34 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800fa34:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800fa38:	600b      	str	r3, [r1, #0]
 800fa3a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800fa3e:	6013      	str	r3, [r2, #0]
 800fa40:	4770      	bx	lr

0800fa42 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800fa42:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800fa46:	4770      	bx	lr

0800fa48 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800fa48:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800fa4c:	4770      	bx	lr

0800fa4e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800fa4e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800fa52:	4770      	bx	lr

0800fa54 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800fa54:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800fa58:	4770      	bx	lr

0800fa5a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800fa5a:	4770      	bx	lr

0800fa5c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800fa5c:	b510      	push	{r4, lr}
 800fa5e:	21b4      	movs	r1, #180	; 0xb4
 800fa60:	4604      	mov	r4, r0
 800fa62:	f019 fa90 	bl	8028f86 <_ZdlPvj>
 800fa66:	4620      	mov	r0, r4
 800fa68:	bd10      	pop	{r4, pc}

0800fa6a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800fa6a:	b570      	push	{r4, r5, r6, lr}
 800fa6c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800fa70:	428d      	cmp	r5, r1
 800fa72:	bfb8      	it	lt
 800fa74:	460d      	movlt	r5, r1
 800fa76:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800fa7a:	428d      	cmp	r5, r1
 800fa7c:	4604      	mov	r4, r0
 800fa7e:	bfa8      	it	ge
 800fa80:	460d      	movge	r5, r1
 800fa82:	4616      	mov	r6, r2
 800fa84:	b99a      	cbnz	r2, 800faae <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800fa86:	6803      	ldr	r3, [r0, #0]
 800fa88:	4629      	mov	r1, r5
 800fa8a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fa8e:	4798      	blx	r3
 800fa90:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fa94:	b368      	cbz	r0, 800faf2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800fa96:	6803      	ldr	r3, [r0, #0]
 800fa98:	68db      	ldr	r3, [r3, #12]
 800fa9a:	4798      	blx	r3
 800fa9c:	b348      	cbz	r0, 800faf2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800fa9e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800faa2:	6803      	ldr	r3, [r0, #0]
 800faa4:	4621      	mov	r1, r4
 800faa6:	689b      	ldr	r3, [r3, #8]
 800faa8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800faac:	4718      	bx	r3
 800faae:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800fab2:	2b00      	cmp	r3, #0
 800fab4:	dd08      	ble.n	800fac8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800fab6:	f005 fbe3 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
 800faba:	4621      	mov	r1, r4
 800fabc:	3004      	adds	r0, #4
 800fabe:	f005 fc2c 	bl	801531a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800fac2:	2300      	movs	r3, #0
 800fac4:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800fac8:	6823      	ldr	r3, [r4, #0]
 800faca:	4620      	mov	r0, r4
 800facc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fad0:	4798      	blx	r3
 800fad2:	2300      	movs	r3, #0
 800fad4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800fad8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800fadc:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800fae0:	f005 fbce 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
 800fae4:	4621      	mov	r1, r4
 800fae6:	3004      	adds	r0, #4
 800fae8:	f005 fcc0 	bl	801546c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800faec:	2301      	movs	r3, #1
 800faee:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800faf2:	bd70      	pop	{r4, r5, r6, pc}

0800faf4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800faf4:	b510      	push	{r4, lr}
 800faf6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800fafa:	4299      	cmp	r1, r3
 800fafc:	bfb8      	it	lt
 800fafe:	4619      	movlt	r1, r3
 800fb00:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800fb04:	4299      	cmp	r1, r3
 800fb06:	bfa8      	it	ge
 800fb08:	4619      	movge	r1, r3
 800fb0a:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800fb0e:	428b      	cmp	r3, r1
 800fb10:	4604      	mov	r4, r0
 800fb12:	d010      	beq.n	800fb36 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fb14:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800fb18:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800fb1c:	b158      	cbz	r0, 800fb36 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fb1e:	6803      	ldr	r3, [r0, #0]
 800fb20:	68db      	ldr	r3, [r3, #12]
 800fb22:	4798      	blx	r3
 800fb24:	b138      	cbz	r0, 800fb36 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800fb26:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800fb2a:	6803      	ldr	r3, [r0, #0]
 800fb2c:	4621      	mov	r1, r4
 800fb2e:	689b      	ldr	r3, [r3, #8]
 800fb30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb34:	4718      	bx	r3
 800fb36:	bd10      	pop	{r4, pc}

0800fb38 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800fb38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fb3a:	4604      	mov	r4, r0
 800fb3c:	460d      	mov	r5, r1
 800fb3e:	b1a9      	cbz	r1, 800fb6c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800fb40:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800fb44:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800fb48:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800fb4c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800fb50:	ab01      	add	r3, sp, #4
 800fb52:	1a12      	subs	r2, r2, r0
 800fb54:	1b89      	subs	r1, r1, r6
 800fb56:	1a38      	subs	r0, r7, r0
 800fb58:	f006 fe48 	bl	80167ec <_ZN8touchgfx6muldivElllRl>
 800fb5c:	4629      	mov	r1, r5
 800fb5e:	ab01      	add	r3, sp, #4
 800fb60:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800fb64:	4430      	add	r0, r6
 800fb66:	f006 fe41 	bl	80167ec <_ZN8touchgfx6muldivElllRl>
 800fb6a:	b285      	uxth	r5, r0
 800fb6c:	4628      	mov	r0, r5
 800fb6e:	b003      	add	sp, #12
 800fb70:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fb72 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800fb72:	b570      	push	{r4, r5, r6, lr}
 800fb74:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800fb78:	4604      	mov	r4, r0
 800fb7a:	2b00      	cmp	r3, #0
 800fb7c:	d035      	beq.n	800fbea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fb7e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800fb82:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800fb86:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800fb8a:	3001      	adds	r0, #1
 800fb8c:	1ad2      	subs	r2, r2, r3
 800fb8e:	b212      	sxth	r2, r2
 800fb90:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800fb94:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800fb98:	2100      	movs	r1, #0
 800fb9a:	b280      	uxth	r0, r0
 800fb9c:	47a8      	blx	r5
 800fb9e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800fba2:	6823      	ldr	r3, [r4, #0]
 800fba4:	4401      	add	r1, r0
 800fba6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fbaa:	4620      	mov	r0, r4
 800fbac:	4798      	blx	r3
 800fbae:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800fbb2:	429a      	cmp	r2, r3
 800fbb4:	db19      	blt.n	800fbea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fbb6:	2500      	movs	r5, #0
 800fbb8:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fbbc:	f005 fb60 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
 800fbc0:	4621      	mov	r1, r4
 800fbc2:	3004      	adds	r0, #4
 800fbc4:	f005 fba9 	bl	801531a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800fbc8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fbcc:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fbd0:	b158      	cbz	r0, 800fbea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fbd2:	6803      	ldr	r3, [r0, #0]
 800fbd4:	68db      	ldr	r3, [r3, #12]
 800fbd6:	4798      	blx	r3
 800fbd8:	b138      	cbz	r0, 800fbea <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800fbda:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800fbde:	6803      	ldr	r3, [r0, #0]
 800fbe0:	4621      	mov	r1, r4
 800fbe2:	689b      	ldr	r3, [r3, #8]
 800fbe4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fbe8:	4718      	bx	r3
 800fbea:	bd70      	pop	{r4, r5, r6, pc}

0800fbec <_ZN8touchgfx8DrawableC1Ev>:
 800fbec:	4a0a      	ldr	r2, [pc, #40]	; (800fc18 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800fbee:	6002      	str	r2, [r0, #0]
 800fbf0:	2200      	movs	r2, #0
 800fbf2:	8082      	strh	r2, [r0, #4]
 800fbf4:	80c2      	strh	r2, [r0, #6]
 800fbf6:	8102      	strh	r2, [r0, #8]
 800fbf8:	8142      	strh	r2, [r0, #10]
 800fbfa:	8182      	strh	r2, [r0, #12]
 800fbfc:	81c2      	strh	r2, [r0, #14]
 800fbfe:	8202      	strh	r2, [r0, #16]
 800fc00:	8242      	strh	r2, [r0, #18]
 800fc02:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fc06:	61c2      	str	r2, [r0, #28]
 800fc08:	8402      	strh	r2, [r0, #32]
 800fc0a:	8442      	strh	r2, [r0, #34]	; 0x22
 800fc0c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800fc10:	2201      	movs	r2, #1
 800fc12:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800fc16:	4770      	bx	lr
 800fc18:	0802e3a4 	.word	0x0802e3a4

0800fc1c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800fc1c:	b570      	push	{r4, r5, r6, lr}
 800fc1e:	6803      	ldr	r3, [r0, #0]
 800fc20:	4604      	mov	r4, r0
 800fc22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fc24:	4615      	mov	r5, r2
 800fc26:	4798      	blx	r3
 800fc28:	6823      	ldr	r3, [r4, #0]
 800fc2a:	4629      	mov	r1, r5
 800fc2c:	4620      	mov	r0, r4
 800fc2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fc30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fc34:	4718      	bx	r3

0800fc36 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800fc36:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc3a:	4604      	mov	r4, r0
 800fc3c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800fc40:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800fc44:	460e      	mov	r6, r1
 800fc46:	4615      	mov	r5, r2
 800fc48:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800fc4c:	4619      	mov	r1, r3
 800fc4e:	463a      	mov	r2, r7
 800fc50:	3058      	adds	r0, #88	; 0x58
 800fc52:	4698      	mov	r8, r3
 800fc54:	f7ff ffe2 	bl	800fc1c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fc58:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800fc5c:	4446      	add	r6, r8
 800fc5e:	42b3      	cmp	r3, r6
 800fc60:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800fc64:	bfb8      	it	lt
 800fc66:	8126      	strhlt	r6, [r4, #8]
 800fc68:	443d      	add	r5, r7
 800fc6a:	42ab      	cmp	r3, r5
 800fc6c:	bfb8      	it	lt
 800fc6e:	8165      	strhlt	r5, [r4, #10]
 800fc70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fc74 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800fc74:	b510      	push	{r4, lr}
 800fc76:	4604      	mov	r4, r0
 800fc78:	302c      	adds	r0, #44	; 0x2c
 800fc7a:	f002 fdf8 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fc7e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800fc82:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800fc86:	4620      	mov	r0, r4
 800fc88:	f7ff ffc8 	bl	800fc1c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800fc8c:	bd10      	pop	{r4, pc}
	...

0800fc90 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800fc90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fc92:	4604      	mov	r4, r0
 800fc94:	4626      	mov	r6, r4
 800fc96:	2500      	movs	r5, #0
 800fc98:	f7ff ffa8 	bl	800fbec <_ZN8touchgfx8DrawableC1Ev>
 800fc9c:	4b23      	ldr	r3, [pc, #140]	; (800fd2c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800fc9e:	62a5      	str	r5, [r4, #40]	; 0x28
 800fca0:	f846 3b2c 	str.w	r3, [r6], #44
 800fca4:	2226      	movs	r2, #38	; 0x26
 800fca6:	4629      	mov	r1, r5
 800fca8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800fcac:	4630      	mov	r0, r6
 800fcae:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fcb2:	f01a f980 	bl	8029fb6 <memset>
 800fcb6:	4630      	mov	r0, r6
 800fcb8:	f7ff ff98 	bl	800fbec <_ZN8touchgfx8DrawableC1Ev>
 800fcbc:	a902      	add	r1, sp, #8
 800fcbe:	4b1c      	ldr	r3, [pc, #112]	; (800fd30 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800fcc0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fcc2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800fcc6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800fcca:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800fcce:	4630      	mov	r0, r6
 800fcd0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800fcd4:	f002 fdcb 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800fcd8:	4638      	mov	r0, r7
 800fcda:	f7ff ff87 	bl	800fbec <_ZN8touchgfx8DrawableC1Ev>
 800fcde:	4b15      	ldr	r3, [pc, #84]	; (800fd34 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800fce0:	65a3      	str	r3, [r4, #88]	; 0x58
 800fce2:	2364      	movs	r3, #100	; 0x64
 800fce4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800fce8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800fcec:	4b12      	ldr	r3, [pc, #72]	; (800fd38 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800fcee:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800fcf2:	4629      	mov	r1, r5
 800fcf4:	4630      	mov	r0, r6
 800fcf6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800fcfa:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800fcfe:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800fd02:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800fd06:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800fd0a:	f7f1 faa1 	bl	8001250 <_ZN8touchgfx8Drawable4setXEs>
 800fd0e:	4629      	mov	r1, r5
 800fd10:	4630      	mov	r0, r6
 800fd12:	f7f1 fa9f 	bl	8001254 <_ZN8touchgfx8Drawable4setYEs>
 800fd16:	4631      	mov	r1, r6
 800fd18:	4620      	mov	r0, r4
 800fd1a:	f000 f819 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fd1e:	4620      	mov	r0, r4
 800fd20:	4639      	mov	r1, r7
 800fd22:	f000 f815 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800fd26:	4620      	mov	r0, r4
 800fd28:	b003      	add	sp, #12
 800fd2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fd2c:	0802dc38 	.word	0x0802dc38
 800fd30:	0802e260 	.word	0x0802e260
 800fd34:	0802dd0c 	.word	0x0802dd0c
 800fd38:	08016f4b 	.word	0x08016f4b

0800fd3c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800fd3c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fd3e:	2000      	movs	r0, #0
 800fd40:	b12b      	cbz	r3, 800fd4e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fd42:	b920      	cbnz	r0, 800fd4e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800fd44:	1a5a      	subs	r2, r3, r1
 800fd46:	4250      	negs	r0, r2
 800fd48:	4150      	adcs	r0, r2
 800fd4a:	699b      	ldr	r3, [r3, #24]
 800fd4c:	e7f8      	b.n	800fd40 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800fd4e:	4770      	bx	lr

0800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800fd50:	2300      	movs	r3, #0
 800fd52:	6148      	str	r0, [r1, #20]
 800fd54:	618b      	str	r3, [r1, #24]
 800fd56:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fd58:	b913      	cbnz	r3, 800fd60 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800fd5a:	6281      	str	r1, [r0, #40]	; 0x28
 800fd5c:	4770      	bx	lr
 800fd5e:	4613      	mov	r3, r2
 800fd60:	699a      	ldr	r2, [r3, #24]
 800fd62:	2a00      	cmp	r2, #0
 800fd64:	d1fb      	bne.n	800fd5e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800fd66:	6199      	str	r1, [r3, #24]
 800fd68:	4770      	bx	lr

0800fd6a <_ZN8touchgfx9Container9removeAllEv>:
 800fd6a:	2200      	movs	r2, #0
 800fd6c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fd6e:	b123      	cbz	r3, 800fd7a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800fd70:	6999      	ldr	r1, [r3, #24]
 800fd72:	6281      	str	r1, [r0, #40]	; 0x28
 800fd74:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800fd78:	e7f8      	b.n	800fd6c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800fd7a:	4770      	bx	lr

0800fd7c <_ZN8touchgfx9Container6unlinkEv>:
 800fd7c:	2300      	movs	r3, #0
 800fd7e:	6283      	str	r3, [r0, #40]	; 0x28
 800fd80:	4770      	bx	lr

0800fd82 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800fd82:	2200      	movs	r2, #0
 800fd84:	8002      	strh	r2, [r0, #0]
 800fd86:	8042      	strh	r2, [r0, #2]
 800fd88:	8082      	strh	r2, [r0, #4]
 800fd8a:	80c2      	strh	r2, [r0, #6]
 800fd8c:	4770      	bx	lr

0800fd8e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800fd8e:	b570      	push	{r4, r5, r6, lr}
 800fd90:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fd92:	460d      	mov	r5, r1
 800fd94:	4616      	mov	r6, r2
 800fd96:	b13c      	cbz	r4, 800fda8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800fd98:	6823      	ldr	r3, [r4, #0]
 800fd9a:	4620      	mov	r0, r4
 800fd9c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800fd9e:	4632      	mov	r2, r6
 800fda0:	4629      	mov	r1, r5
 800fda2:	4798      	blx	r3
 800fda4:	69a4      	ldr	r4, [r4, #24]
 800fda6:	e7f6      	b.n	800fd96 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800fda8:	bd70      	pop	{r4, r5, r6, pc}

0800fdaa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800fdaa:	b538      	push	{r3, r4, r5, lr}
 800fdac:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fdae:	460d      	mov	r5, r1
 800fdb0:	b134      	cbz	r4, 800fdc0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800fdb2:	682b      	ldr	r3, [r5, #0]
 800fdb4:	4621      	mov	r1, r4
 800fdb6:	689b      	ldr	r3, [r3, #8]
 800fdb8:	4628      	mov	r0, r5
 800fdba:	4798      	blx	r3
 800fdbc:	69a4      	ldr	r4, [r4, #24]
 800fdbe:	e7f7      	b.n	800fdb0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800fdc0:	bd38      	pop	{r3, r4, r5, pc}

0800fdc2 <_ZN8touchgfx9ContainerD1Ev>:
 800fdc2:	4770      	bx	lr

0800fdc4 <_ZN8touchgfx9ContainerD0Ev>:
 800fdc4:	b510      	push	{r4, lr}
 800fdc6:	212c      	movs	r1, #44	; 0x2c
 800fdc8:	4604      	mov	r4, r0
 800fdca:	f019 f8dc 	bl	8028f86 <_ZdlPvj>
 800fdce:	4620      	mov	r0, r4
 800fdd0:	bd10      	pop	{r4, pc}

0800fdd2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800fdd2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fdd4:	b19b      	cbz	r3, 800fdfe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fdd6:	428b      	cmp	r3, r1
 800fdd8:	d109      	bne.n	800fdee <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800fdda:	699a      	ldr	r2, [r3, #24]
 800fddc:	2100      	movs	r1, #0
 800fdde:	6159      	str	r1, [r3, #20]
 800fde0:	6282      	str	r2, [r0, #40]	; 0x28
 800fde2:	b902      	cbnz	r2, 800fde6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800fde4:	4770      	bx	lr
 800fde6:	6199      	str	r1, [r3, #24]
 800fde8:	4770      	bx	lr
 800fdea:	4613      	mov	r3, r2
 800fdec:	b13a      	cbz	r2, 800fdfe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800fdee:	699a      	ldr	r2, [r3, #24]
 800fdf0:	428a      	cmp	r2, r1
 800fdf2:	d1fa      	bne.n	800fdea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800fdf4:	698a      	ldr	r2, [r1, #24]
 800fdf6:	619a      	str	r2, [r3, #24]
 800fdf8:	2300      	movs	r3, #0
 800fdfa:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800fdfe:	4770      	bx	lr

0800fe00 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800fe00:	b410      	push	{r4}
 800fe02:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800fe04:	4604      	mov	r4, r0
 800fe06:	b92b      	cbnz	r3, 800fe14 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800fe08:	6803      	ldr	r3, [r0, #0]
 800fe0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fe0e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800fe10:	4611      	mov	r1, r2
 800fe12:	4718      	bx	r3
 800fe14:	b941      	cbnz	r1, 800fe28 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800fe16:	6193      	str	r3, [r2, #24]
 800fe18:	6282      	str	r2, [r0, #40]	; 0x28
 800fe1a:	6154      	str	r4, [r2, #20]
 800fe1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fe20:	4770      	bx	lr
 800fe22:	4603      	mov	r3, r0
 800fe24:	2800      	cmp	r0, #0
 800fe26:	d0f9      	beq.n	800fe1c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800fe28:	4299      	cmp	r1, r3
 800fe2a:	6998      	ldr	r0, [r3, #24]
 800fe2c:	d1f9      	bne.n	800fe22 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800fe2e:	6190      	str	r0, [r2, #24]
 800fe30:	618a      	str	r2, [r1, #24]
 800fe32:	e7f2      	b.n	800fe1a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800fe34 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800fe34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe38:	461f      	mov	r7, r3
 800fe3a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800fe3e:	460d      	mov	r5, r1
 800fe40:	4616      	mov	r6, r2
 800fe42:	b103      	cbz	r3, 800fe46 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800fe44:	6038      	str	r0, [r7, #0]
 800fe46:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fe48:	b314      	cbz	r4, 800fe90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800fe4a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fe4e:	b1eb      	cbz	r3, 800fe8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fe50:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800fe54:	428d      	cmp	r5, r1
 800fe56:	db19      	blt.n	800fe8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fe58:	8923      	ldrh	r3, [r4, #8]
 800fe5a:	b289      	uxth	r1, r1
 800fe5c:	440b      	add	r3, r1
 800fe5e:	b21b      	sxth	r3, r3
 800fe60:	429d      	cmp	r5, r3
 800fe62:	da13      	bge.n	800fe8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fe64:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800fe68:	4296      	cmp	r6, r2
 800fe6a:	db0f      	blt.n	800fe8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fe6c:	8963      	ldrh	r3, [r4, #10]
 800fe6e:	b292      	uxth	r2, r2
 800fe70:	4413      	add	r3, r2
 800fe72:	b21b      	sxth	r3, r3
 800fe74:	429e      	cmp	r6, r3
 800fe76:	da09      	bge.n	800fe8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800fe78:	6823      	ldr	r3, [r4, #0]
 800fe7a:	1ab2      	subs	r2, r6, r2
 800fe7c:	1a69      	subs	r1, r5, r1
 800fe7e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800fe82:	b212      	sxth	r2, r2
 800fe84:	463b      	mov	r3, r7
 800fe86:	b209      	sxth	r1, r1
 800fe88:	4620      	mov	r0, r4
 800fe8a:	47c0      	blx	r8
 800fe8c:	69a4      	ldr	r4, [r4, #24]
 800fe8e:	e7db      	b.n	800fe48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800fe90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fe94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800fe94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe98:	4c6e      	ldr	r4, [pc, #440]	; (8010054 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800fe9a:	b0a1      	sub	sp, #132	; 0x84
 800fe9c:	6824      	ldr	r4, [r4, #0]
 800fe9e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800fea0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800fea4:	9303      	str	r3, [sp, #12]
 800fea6:	2400      	movs	r4, #0
 800fea8:	802c      	strh	r4, [r5, #0]
 800feaa:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800feac:	802c      	strh	r4, [r5, #0]
 800feae:	601c      	str	r4, [r3, #0]
 800feb0:	4606      	mov	r6, r0
 800feb2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800feb6:	f7ff ffbd 	bl	800fe34 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800feba:	f1b9 0f03 	cmp.w	r9, #3
 800febe:	f340 80c2 	ble.w	8010046 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800fec2:	4631      	mov	r1, r6
 800fec4:	a80c      	add	r0, sp, #48	; 0x30
 800fec6:	f006 fb5f 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800feca:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800fece:	9306      	str	r3, [sp, #24]
 800fed0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800fed4:	9307      	str	r3, [sp, #28]
 800fed6:	9b03      	ldr	r3, [sp, #12]
 800fed8:	f8d3 a000 	ldr.w	sl, [r3]
 800fedc:	f1ba 0f00 	cmp.w	sl, #0
 800fee0:	f000 80b4 	beq.w	801004c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800fee4:	4651      	mov	r1, sl
 800fee6:	a810      	add	r0, sp, #64	; 0x40
 800fee8:	f006 fb4e 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800feec:	9b01      	ldr	r3, [sp, #4]
 800feee:	9a06      	ldr	r2, [sp, #24]
 800fef0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800fef4:	189d      	adds	r5, r3, r2
 800fef6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800fefa:	9a07      	ldr	r2, [sp, #28]
 800fefc:	2002      	movs	r0, #2
 800fefe:	fb91 f1f0 	sdiv	r1, r1, r0
 800ff02:	4419      	add	r1, r3
 800ff04:	1a6d      	subs	r5, r5, r1
 800ff06:	9b02      	ldr	r3, [sp, #8]
 800ff08:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ff0c:	4413      	add	r3, r2
 800ff0e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ff12:	fb92 f2f0 	sdiv	r2, r2, r0
 800ff16:	440a      	add	r2, r1
 800ff18:	1a9b      	subs	r3, r3, r2
 800ff1a:	435b      	muls	r3, r3
 800ff1c:	fb05 3505 	mla	r5, r5, r5, r3
 800ff20:	4f4d      	ldr	r7, [pc, #308]	; (8010058 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ff22:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ff24:	ac10      	add	r4, sp, #64	; 0x40
 800ff26:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ff28:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ff2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ff2c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ff2e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ff30:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ff34:	f1b9 0f0c 	cmp.w	r9, #12
 800ff38:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ff3c:	f04f 0303 	mov.w	r3, #3
 800ff40:	bfc8      	it	gt
 800ff42:	4698      	movgt	r8, r3
 800ff44:	f8cd 9000 	str.w	r9, [sp]
 800ff48:	f04f 0400 	mov.w	r4, #0
 800ff4c:	bfdc      	itt	le
 800ff4e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ff52:	fb92 f8f3 	sdivle	r8, r2, r3
 800ff56:	1c63      	adds	r3, r4, #1
 800ff58:	aa10      	add	r2, sp, #64	; 0x40
 800ff5a:	f004 0401 	and.w	r4, r4, #1
 800ff5e:	9308      	str	r3, [sp, #32]
 800ff60:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ff64:	9b00      	ldr	r3, [sp, #0]
 800ff66:	fb93 f3f8 	sdiv	r3, r3, r8
 800ff6a:	b29b      	uxth	r3, r3
 800ff6c:	3404      	adds	r4, #4
 800ff6e:	f04f 0b00 	mov.w	fp, #0
 800ff72:	9304      	str	r3, [sp, #16]
 800ff74:	9a04      	ldr	r2, [sp, #16]
 800ff76:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ff7a:	fb13 f302 	smulbb	r3, r3, r2
 800ff7e:	9a01      	ldr	r2, [sp, #4]
 800ff80:	b29b      	uxth	r3, r3
 800ff82:	1899      	adds	r1, r3, r2
 800ff84:	9305      	str	r3, [sp, #20]
 800ff86:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ff8a:	b209      	sxth	r1, r1
 800ff8c:	4299      	cmp	r1, r3
 800ff8e:	db4d      	blt.n	801002c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ff90:	8932      	ldrh	r2, [r6, #8]
 800ff92:	4413      	add	r3, r2
 800ff94:	b21b      	sxth	r3, r3
 800ff96:	4299      	cmp	r1, r3
 800ff98:	da48      	bge.n	801002c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ff9a:	9b04      	ldr	r3, [sp, #16]
 800ff9c:	6827      	ldr	r7, [r4, #0]
 800ff9e:	fb17 f703 	smulbb	r7, r7, r3
 800ffa2:	9b02      	ldr	r3, [sp, #8]
 800ffa4:	b2bf      	uxth	r7, r7
 800ffa6:	18fa      	adds	r2, r7, r3
 800ffa8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ffac:	b212      	sxth	r2, r2
 800ffae:	429a      	cmp	r2, r3
 800ffb0:	db3c      	blt.n	801002c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ffb2:	8970      	ldrh	r0, [r6, #10]
 800ffb4:	4403      	add	r3, r0
 800ffb6:	b21b      	sxth	r3, r3
 800ffb8:	429a      	cmp	r2, r3
 800ffba:	da37      	bge.n	801002c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ffbc:	2300      	movs	r3, #0
 800ffbe:	930b      	str	r3, [sp, #44]	; 0x2c
 800ffc0:	4630      	mov	r0, r6
 800ffc2:	ab0b      	add	r3, sp, #44	; 0x2c
 800ffc4:	f7ff ff36 	bl	800fe34 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ffc8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ffca:	b37a      	cbz	r2, 801002c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ffcc:	4552      	cmp	r2, sl
 800ffce:	d02d      	beq.n	801002c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ffd0:	4611      	mov	r1, r2
 800ffd2:	a80e      	add	r0, sp, #56	; 0x38
 800ffd4:	9209      	str	r2, [sp, #36]	; 0x24
 800ffd6:	f006 fad7 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ffda:	9a06      	ldr	r2, [sp, #24]
 800ffdc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800ffe0:	9b01      	ldr	r3, [sp, #4]
 800ffe2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800ffe6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800ffea:	4413      	add	r3, r2
 800ffec:	f04f 0e02 	mov.w	lr, #2
 800fff0:	fb91 f1fe 	sdiv	r1, r1, lr
 800fff4:	4401      	add	r1, r0
 800fff6:	1a58      	subs	r0, r3, r1
 800fff8:	9a07      	ldr	r2, [sp, #28]
 800fffa:	9b02      	ldr	r3, [sp, #8]
 800fffc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8010000:	fb9c fcfe 	sdiv	ip, ip, lr
 8010004:	4413      	add	r3, r2
 8010006:	448c      	add	ip, r1
 8010008:	eba3 030c 	sub.w	r3, r3, ip
 801000c:	435b      	muls	r3, r3
 801000e:	fb00 3300 	mla	r3, r0, r0, r3
 8010012:	42ab      	cmp	r3, r5
 8010014:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010016:	d208      	bcs.n	801002a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010018:	9803      	ldr	r0, [sp, #12]
 801001a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801001c:	6001      	str	r1, [r0, #0]
 801001e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8010020:	9805      	ldr	r0, [sp, #20]
 8010022:	8008      	strh	r0, [r1, #0]
 8010024:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010026:	461d      	mov	r5, r3
 8010028:	800f      	strh	r7, [r1, #0]
 801002a:	4692      	mov	sl, r2
 801002c:	f10b 0b01 	add.w	fp, fp, #1
 8010030:	f1bb 0f04 	cmp.w	fp, #4
 8010034:	f104 0408 	add.w	r4, r4, #8
 8010038:	d19c      	bne.n	800ff74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801003a:	9b00      	ldr	r3, [sp, #0]
 801003c:	9c08      	ldr	r4, [sp, #32]
 801003e:	444b      	add	r3, r9
 8010040:	4544      	cmp	r4, r8
 8010042:	9300      	str	r3, [sp, #0]
 8010044:	d187      	bne.n	800ff56 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010046:	b021      	add	sp, #132	; 0x84
 8010048:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801004c:	f04f 35ff 	mov.w	r5, #4294967295
 8010050:	e766      	b.n	800ff20 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010052:	bf00      	nop
 8010054:	20012e74 	.word	0x20012e74
 8010058:	0802acc4 	.word	0x0802acc4

0801005c <_ZN8touchgfx4RectaNERKS0_>:
 801005c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010060:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010064:	888c      	ldrh	r4, [r1, #4]
 8010066:	f9b0 9000 	ldrsh.w	r9, [r0]
 801006a:	443c      	add	r4, r7
 801006c:	b2a4      	uxth	r4, r4
 801006e:	fa0f f884 	sxth.w	r8, r4
 8010072:	45c1      	cmp	r9, r8
 8010074:	da2f      	bge.n	80100d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010076:	8882      	ldrh	r2, [r0, #4]
 8010078:	444a      	add	r2, r9
 801007a:	b292      	uxth	r2, r2
 801007c:	fa0f fe82 	sxth.w	lr, r2
 8010080:	4577      	cmp	r7, lr
 8010082:	da28      	bge.n	80100d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010084:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010088:	88cb      	ldrh	r3, [r1, #6]
 801008a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801008e:	442b      	add	r3, r5
 8010090:	b21b      	sxth	r3, r3
 8010092:	429e      	cmp	r6, r3
 8010094:	da1f      	bge.n	80100d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010096:	88c3      	ldrh	r3, [r0, #6]
 8010098:	4433      	add	r3, r6
 801009a:	b29b      	uxth	r3, r3
 801009c:	fa0f fc83 	sxth.w	ip, r3
 80100a0:	4565      	cmp	r5, ip
 80100a2:	da18      	bge.n	80100d6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80100a4:	454f      	cmp	r7, r9
 80100a6:	bfb8      	it	lt
 80100a8:	464f      	movlt	r7, r9
 80100aa:	42b5      	cmp	r5, r6
 80100ac:	bfb8      	it	lt
 80100ae:	4635      	movlt	r5, r6
 80100b0:	45f0      	cmp	r8, lr
 80100b2:	bfd8      	it	le
 80100b4:	4622      	movle	r2, r4
 80100b6:	1bd2      	subs	r2, r2, r7
 80100b8:	8082      	strh	r2, [r0, #4]
 80100ba:	884a      	ldrh	r2, [r1, #2]
 80100bc:	88c9      	ldrh	r1, [r1, #6]
 80100be:	8007      	strh	r7, [r0, #0]
 80100c0:	440a      	add	r2, r1
 80100c2:	b292      	uxth	r2, r2
 80100c4:	b211      	sxth	r1, r2
 80100c6:	458c      	cmp	ip, r1
 80100c8:	bfa8      	it	ge
 80100ca:	4613      	movge	r3, r2
 80100cc:	1b5b      	subs	r3, r3, r5
 80100ce:	80c3      	strh	r3, [r0, #6]
 80100d0:	8045      	strh	r5, [r0, #2]
 80100d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80100d6:	2300      	movs	r3, #0
 80100d8:	8003      	strh	r3, [r0, #0]
 80100da:	8043      	strh	r3, [r0, #2]
 80100dc:	8083      	strh	r3, [r0, #4]
 80100de:	80c3      	strh	r3, [r0, #6]
 80100e0:	e7f7      	b.n	80100d2 <_ZN8touchgfx4RectaNERKS0_+0x76>

080100e2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 80100e2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80100e6:	2b00      	cmp	r3, #0
 80100e8:	dd06      	ble.n	80100f8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80100ea:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80100ee:	2800      	cmp	r0, #0
 80100f0:	bfcc      	ite	gt
 80100f2:	2000      	movgt	r0, #0
 80100f4:	2001      	movle	r0, #1
 80100f6:	4770      	bx	lr
 80100f8:	2001      	movs	r0, #1
 80100fa:	4770      	bx	lr

080100fc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80100fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010100:	2300      	movs	r3, #0
 8010102:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010104:	8003      	strh	r3, [r0, #0]
 8010106:	4604      	mov	r4, r0
 8010108:	8043      	strh	r3, [r0, #2]
 801010a:	8083      	strh	r3, [r0, #4]
 801010c:	80c3      	strh	r3, [r0, #6]
 801010e:	2d00      	cmp	r5, #0
 8010110:	d040      	beq.n	8010194 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010112:	1d28      	adds	r0, r5, #4
 8010114:	f7ff ffe5 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010118:	b988      	cbnz	r0, 801013e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801011a:	4620      	mov	r0, r4
 801011c:	f7ff ffe1 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010120:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010124:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010128:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 801012c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010130:	b138      	cbz	r0, 8010142 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010132:	8022      	strh	r2, [r4, #0]
 8010134:	8063      	strh	r3, [r4, #2]
 8010136:	f8a4 e004 	strh.w	lr, [r4, #4]
 801013a:	f8a4 c006 	strh.w	ip, [r4, #6]
 801013e:	69ad      	ldr	r5, [r5, #24]
 8010140:	e7e5      	b.n	801010e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010142:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010146:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801014a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 801014e:	4290      	cmp	r0, r2
 8010150:	4607      	mov	r7, r0
 8010152:	bfa8      	it	ge
 8010154:	4617      	movge	r7, r2
 8010156:	4472      	add	r2, lr
 8010158:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 801015c:	8027      	strh	r7, [r4, #0]
 801015e:	4299      	cmp	r1, r3
 8010160:	460e      	mov	r6, r1
 8010162:	4440      	add	r0, r8
 8010164:	bfa8      	it	ge
 8010166:	461e      	movge	r6, r3
 8010168:	4471      	add	r1, lr
 801016a:	4463      	add	r3, ip
 801016c:	b200      	sxth	r0, r0
 801016e:	b212      	sxth	r2, r2
 8010170:	b209      	sxth	r1, r1
 8010172:	b21b      	sxth	r3, r3
 8010174:	4290      	cmp	r0, r2
 8010176:	bfac      	ite	ge
 8010178:	ebc7 0200 	rsbge	r2, r7, r0
 801017c:	ebc7 0202 	rsblt	r2, r7, r2
 8010180:	4299      	cmp	r1, r3
 8010182:	bfac      	ite	ge
 8010184:	ebc6 0301 	rsbge	r3, r6, r1
 8010188:	ebc6 0303 	rsblt	r3, r6, r3
 801018c:	8066      	strh	r6, [r4, #2]
 801018e:	80a2      	strh	r2, [r4, #4]
 8010190:	80e3      	strh	r3, [r4, #6]
 8010192:	e7d4      	b.n	801013e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010194:	4620      	mov	r0, r4
 8010196:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801019a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801019a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801019e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80101a2:	b383      	cbz	r3, 8010206 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80101a4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80101a6:	b374      	cbz	r4, 8010206 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80101a8:	f9b1 5000 	ldrsh.w	r5, [r1]
 80101ac:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80101b0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80101b4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80101b8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80101bc:	b303      	cbz	r3, 8010200 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80101be:	4668      	mov	r0, sp
 80101c0:	1d21      	adds	r1, r4, #4
 80101c2:	f8ad 5000 	strh.w	r5, [sp]
 80101c6:	f8ad 6002 	strh.w	r6, [sp, #2]
 80101ca:	f8ad 7004 	strh.w	r7, [sp, #4]
 80101ce:	f8ad 8006 	strh.w	r8, [sp, #6]
 80101d2:	f7ff ff43 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 80101d6:	4668      	mov	r0, sp
 80101d8:	f7ff ff83 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80101dc:	b980      	cbnz	r0, 8010200 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80101de:	f8bd 3000 	ldrh.w	r3, [sp]
 80101e2:	88a2      	ldrh	r2, [r4, #4]
 80101e4:	1a9b      	subs	r3, r3, r2
 80101e6:	f8ad 3000 	strh.w	r3, [sp]
 80101ea:	88e2      	ldrh	r2, [r4, #6]
 80101ec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80101f0:	1a9b      	subs	r3, r3, r2
 80101f2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80101f6:	6823      	ldr	r3, [r4, #0]
 80101f8:	4669      	mov	r1, sp
 80101fa:	689b      	ldr	r3, [r3, #8]
 80101fc:	4620      	mov	r0, r4
 80101fe:	4798      	blx	r3
 8010200:	69a4      	ldr	r4, [r4, #24]
 8010202:	2c00      	cmp	r4, #0
 8010204:	d1d8      	bne.n	80101b8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010206:	b002      	add	sp, #8
 8010208:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801020c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801020c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801020e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010212:	460d      	mov	r5, r1
 8010214:	4616      	mov	r6, r2
 8010216:	b323      	cbz	r3, 8010262 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010218:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801021a:	b314      	cbz	r4, 8010262 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801021c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010220:	b1eb      	cbz	r3, 801025e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010222:	6828      	ldr	r0, [r5, #0]
 8010224:	6869      	ldr	r1, [r5, #4]
 8010226:	466b      	mov	r3, sp
 8010228:	c303      	stmia	r3!, {r0, r1}
 801022a:	4668      	mov	r0, sp
 801022c:	1d21      	adds	r1, r4, #4
 801022e:	f7ff ff15 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8010232:	4668      	mov	r0, sp
 8010234:	f7ff ff55 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010238:	b988      	cbnz	r0, 801025e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801023a:	f8bd 3000 	ldrh.w	r3, [sp]
 801023e:	88a2      	ldrh	r2, [r4, #4]
 8010240:	1a9b      	subs	r3, r3, r2
 8010242:	f8ad 3000 	strh.w	r3, [sp]
 8010246:	88e2      	ldrh	r2, [r4, #6]
 8010248:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801024c:	1a9b      	subs	r3, r3, r2
 801024e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010252:	6823      	ldr	r3, [r4, #0]
 8010254:	4632      	mov	r2, r6
 8010256:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010258:	4669      	mov	r1, sp
 801025a:	4620      	mov	r0, r4
 801025c:	4798      	blx	r3
 801025e:	69a4      	ldr	r4, [r4, #24]
 8010260:	e7db      	b.n	801021a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010262:	b002      	add	sp, #8
 8010264:	bd70      	pop	{r4, r5, r6, pc}

08010266 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010266:	b513      	push	{r0, r1, r4, lr}
 8010268:	6803      	ldr	r3, [r0, #0]
 801026a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 801026e:	2300      	movs	r3, #0
 8010270:	e9cd 3300 	strd	r3, r3, [sp]
 8010274:	466b      	mov	r3, sp
 8010276:	47a0      	blx	r4
 8010278:	b002      	add	sp, #8
 801027a:	bd10      	pop	{r4, pc}

0801027c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 801027c:	2301      	movs	r3, #1
 801027e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8010282:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010286:	4770      	bx	lr

08010288 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010288:	2301      	movs	r3, #1
 801028a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801028e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8010292:	4770      	bx	lr

08010294 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010294:	6843      	ldr	r3, [r0, #4]
 8010296:	2201      	movs	r2, #1
 8010298:	725a      	strb	r2, [r3, #9]
 801029a:	6840      	ldr	r0, [r0, #4]
 801029c:	6803      	ldr	r3, [r0, #0]
 801029e:	691b      	ldr	r3, [r3, #16]
 80102a0:	4718      	bx	r3

080102a2 <_ZN8touchgfx3HAL8flushDMAEv>:
 80102a2:	6840      	ldr	r0, [r0, #4]
 80102a4:	6803      	ldr	r3, [r0, #0]
 80102a6:	689b      	ldr	r3, [r3, #8]
 80102a8:	4718      	bx	r3

080102aa <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80102aa:	b530      	push	{r4, r5, lr}
 80102ac:	b08b      	sub	sp, #44	; 0x2c
 80102ae:	6804      	ldr	r4, [r0, #0]
 80102b0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80102b4:	9509      	str	r5, [sp, #36]	; 0x24
 80102b6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80102ba:	9508      	str	r5, [sp, #32]
 80102bc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80102c0:	9507      	str	r5, [sp, #28]
 80102c2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80102c6:	9506      	str	r5, [sp, #24]
 80102c8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80102cc:	9505      	str	r5, [sp, #20]
 80102ce:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80102d2:	9504      	str	r5, [sp, #16]
 80102d4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 80102d8:	9503      	str	r5, [sp, #12]
 80102da:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80102de:	9502      	str	r5, [sp, #8]
 80102e0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80102e4:	e9cd 3500 	strd	r3, r5, [sp]
 80102e8:	4613      	mov	r3, r2
 80102ea:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80102ec:	2200      	movs	r2, #0
 80102ee:	47a0      	blx	r4
 80102f0:	b00b      	add	sp, #44	; 0x2c
 80102f2:	bd30      	pop	{r4, r5, pc}

080102f4 <_ZN8touchgfx3HAL10beginFrameEv>:
 80102f4:	4b04      	ldr	r3, [pc, #16]	; (8010308 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80102f6:	781b      	ldrb	r3, [r3, #0]
 80102f8:	b123      	cbz	r3, 8010304 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80102fa:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80102fe:	f080 0001 	eor.w	r0, r0, #1
 8010302:	4770      	bx	lr
 8010304:	2001      	movs	r0, #1
 8010306:	4770      	bx	lr
 8010308:	20012e72 	.word	0x20012e72

0801030c <_ZN8touchgfx3HAL8endFrameEv>:
 801030c:	b510      	push	{r4, lr}
 801030e:	4604      	mov	r4, r0
 8010310:	6840      	ldr	r0, [r0, #4]
 8010312:	6803      	ldr	r3, [r0, #0]
 8010314:	689b      	ldr	r3, [r3, #8]
 8010316:	4798      	blx	r3
 8010318:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 801031c:	b113      	cbz	r3, 8010324 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 801031e:	2301      	movs	r3, #1
 8010320:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010324:	bd10      	pop	{r4, pc}

08010326 <_ZN8touchgfx3HAL10initializeEv>:
 8010326:	b510      	push	{r4, lr}
 8010328:	4604      	mov	r4, r0
 801032a:	f7f0 fd7b 	bl	8000e24 <_ZN8touchgfx10OSWrappers10initializeEv>
 801032e:	f7f0 fc87 	bl	8000c40 <_ZN8touchgfx4GPIO4initEv>
 8010332:	6860      	ldr	r0, [r4, #4]
 8010334:	6803      	ldr	r3, [r0, #0]
 8010336:	68db      	ldr	r3, [r3, #12]
 8010338:	4798      	blx	r3
 801033a:	68e0      	ldr	r0, [r4, #12]
 801033c:	6803      	ldr	r3, [r0, #0]
 801033e:	689b      	ldr	r3, [r3, #8]
 8010340:	4798      	blx	r3
 8010342:	6823      	ldr	r3, [r4, #0]
 8010344:	4620      	mov	r0, r4
 8010346:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8010348:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801034c:	4718      	bx	r3
	...

08010350 <_ZN8touchgfx3HAL4tickEv>:
 8010350:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010352:	6803      	ldr	r3, [r0, #0]
 8010354:	4d5b      	ldr	r5, [pc, #364]	; (80104c4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010356:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801035a:	4604      	mov	r4, r0
 801035c:	4798      	blx	r3
 801035e:	2800      	cmp	r0, #0
 8010360:	f000 8095 	beq.w	801048e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010364:	2001      	movs	r0, #1
 8010366:	f7f0 fc1d 	bl	8000ba4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801036a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 801036e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8010372:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 8010376:	2600      	movs	r6, #0
 8010378:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 801037c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8010380:	b133      	cbz	r3, 8010390 <_ZN8touchgfx3HAL4tickEv+0x40>
 8010382:	6823      	ldr	r3, [r4, #0]
 8010384:	4620      	mov	r0, r4
 8010386:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 801038a:	4798      	blx	r3
 801038c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8010390:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8010394:	6862      	ldr	r2, [r4, #4]
 8010396:	f083 0301 	eor.w	r3, r3, #1
 801039a:	7253      	strb	r3, [r2, #9]
 801039c:	2601      	movs	r6, #1
 801039e:	702e      	strb	r6, [r5, #0]
 80103a0:	f004 ff6e 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
 80103a4:	6803      	ldr	r3, [r0, #0]
 80103a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80103a8:	4798      	blx	r3
 80103aa:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80103ae:	b90b      	cbnz	r3, 80103b4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80103b0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 80103b4:	f004 ff64 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
 80103b8:	6803      	ldr	r3, [r0, #0]
 80103ba:	695b      	ldr	r3, [r3, #20]
 80103bc:	4798      	blx	r3
 80103be:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80103c0:	6803      	ldr	r3, [r0, #0]
 80103c2:	691b      	ldr	r3, [r3, #16]
 80103c4:	4798      	blx	r3
 80103c6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 80103ca:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 80103ce:	3b01      	subs	r3, #1
 80103d0:	b2db      	uxtb	r3, r3
 80103d2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80103d6:	b10a      	cbz	r2, 80103dc <_ZN8touchgfx3HAL4tickEv+0x8c>
 80103d8:	2b00      	cmp	r3, #0
 80103da:	d1eb      	bne.n	80103b4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80103dc:	4a3a      	ldr	r2, [pc, #232]	; (80104c8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80103de:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 80103e2:	7813      	ldrb	r3, [r2, #0]
 80103e4:	3301      	adds	r3, #1
 80103e6:	b25b      	sxtb	r3, r3
 80103e8:	4299      	cmp	r1, r3
 80103ea:	7013      	strb	r3, [r2, #0]
 80103ec:	dc10      	bgt.n	8010410 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80103ee:	68e0      	ldr	r0, [r4, #12]
 80103f0:	2300      	movs	r3, #0
 80103f2:	7013      	strb	r3, [r2, #0]
 80103f4:	6803      	ldr	r3, [r0, #0]
 80103f6:	aa03      	add	r2, sp, #12
 80103f8:	68db      	ldr	r3, [r3, #12]
 80103fa:	a902      	add	r1, sp, #8
 80103fc:	4798      	blx	r3
 80103fe:	6823      	ldr	r3, [r4, #0]
 8010400:	2800      	cmp	r0, #0
 8010402:	d050      	beq.n	80104a6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010404:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8010408:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801040c:	4620      	mov	r0, r4
 801040e:	4798      	blx	r3
 8010410:	6960      	ldr	r0, [r4, #20]
 8010412:	2300      	movs	r3, #0
 8010414:	f88d 3007 	strb.w	r3, [sp, #7]
 8010418:	b158      	cbz	r0, 8010432 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801041a:	6803      	ldr	r3, [r0, #0]
 801041c:	f10d 0107 	add.w	r1, sp, #7
 8010420:	68db      	ldr	r3, [r3, #12]
 8010422:	4798      	blx	r3
 8010424:	b128      	cbz	r0, 8010432 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010426:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8010428:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801042c:	6803      	ldr	r3, [r0, #0]
 801042e:	68db      	ldr	r3, [r3, #12]
 8010430:	4798      	blx	r3
 8010432:	f104 001c 	add.w	r0, r4, #28
 8010436:	f015 fcc5 	bl	8025dc4 <_ZN8touchgfx8Gestures4tickEv>
 801043a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 801043e:	b30b      	cbz	r3, 8010484 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010440:	6920      	ldr	r0, [r4, #16]
 8010442:	6803      	ldr	r3, [r0, #0]
 8010444:	691b      	ldr	r3, [r3, #16]
 8010446:	4798      	blx	r3
 8010448:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801044a:	4606      	mov	r6, r0
 801044c:	b903      	cbnz	r3, 8010450 <_ZN8touchgfx3HAL4tickEv+0x100>
 801044e:	6760      	str	r0, [r4, #116]	; 0x74
 8010450:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010452:	4a1e      	ldr	r2, [pc, #120]	; (80104cc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010454:	1af3      	subs	r3, r6, r3
 8010456:	4293      	cmp	r3, r2
 8010458:	d914      	bls.n	8010484 <_ZN8touchgfx3HAL4tickEv+0x134>
 801045a:	6920      	ldr	r0, [r4, #16]
 801045c:	6803      	ldr	r3, [r0, #0]
 801045e:	699b      	ldr	r3, [r3, #24]
 8010460:	4798      	blx	r3
 8010462:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8010464:	2264      	movs	r2, #100	; 0x64
 8010466:	1af3      	subs	r3, r6, r3
 8010468:	fbb3 f3f2 	udiv	r3, r3, r2
 801046c:	fbb0 f0f3 	udiv	r0, r0, r3
 8010470:	2800      	cmp	r0, #0
 8010472:	dc1d      	bgt.n	80104b0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8010474:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8010478:	6920      	ldr	r0, [r4, #16]
 801047a:	6803      	ldr	r3, [r0, #0]
 801047c:	2100      	movs	r1, #0
 801047e:	69db      	ldr	r3, [r3, #28]
 8010480:	4798      	blx	r3
 8010482:	6766      	str	r6, [r4, #116]	; 0x74
 8010484:	f004 fefc 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
 8010488:	6803      	ldr	r3, [r0, #0]
 801048a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801048c:	4798      	blx	r3
 801048e:	6823      	ldr	r3, [r4, #0]
 8010490:	4620      	mov	r0, r4
 8010492:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8010496:	4798      	blx	r3
 8010498:	2001      	movs	r0, #1
 801049a:	f7f0 fb9b 	bl	8000bd4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801049e:	2300      	movs	r3, #0
 80104a0:	702b      	strb	r3, [r5, #0]
 80104a2:	b004      	add	sp, #16
 80104a4:	bd70      	pop	{r4, r5, r6, pc}
 80104a6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80104aa:	4620      	mov	r0, r4
 80104ac:	4798      	blx	r3
 80104ae:	e7af      	b.n	8010410 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80104b0:	2863      	cmp	r0, #99	; 0x63
 80104b2:	bfcb      	itete	gt
 80104b4:	2300      	movgt	r3, #0
 80104b6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80104ba:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 80104be:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 80104c2:	e7d9      	b.n	8010478 <_ZN8touchgfx3HAL4tickEv+0x128>
 80104c4:	20012e78 	.word	0x20012e78
 80104c8:	20012e79 	.word	0x20012e79
 80104cc:	05f5e100 	.word	0x05f5e100

080104d0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80104d0:	b510      	push	{r4, lr}
 80104d2:	4604      	mov	r4, r0
 80104d4:	f7f0 fcd6 	bl	8000e84 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80104d8:	6863      	ldr	r3, [r4, #4]
 80104da:	2200      	movs	r2, #0
 80104dc:	729a      	strb	r2, [r3, #10]
 80104de:	bd10      	pop	{r4, pc}

080104e0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80104e0:	65c1      	str	r1, [r0, #92]	; 0x5c
 80104e2:	301c      	adds	r0, #28
 80104e4:	f015 bc6c 	b.w	8025dc0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080104e8 <_ZN8touchgfx3HAL5touchEll>:
 80104e8:	b530      	push	{r4, r5, lr}
 80104ea:	b087      	sub	sp, #28
 80104ec:	4604      	mov	r4, r0
 80104ee:	a804      	add	r0, sp, #16
 80104f0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80104f4:	f004 fc90 	bl	8014e18 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80104f8:	9b04      	ldr	r3, [sp, #16]
 80104fa:	f8ad 300c 	strh.w	r3, [sp, #12]
 80104fe:	a906      	add	r1, sp, #24
 8010500:	9b05      	ldr	r3, [sp, #20]
 8010502:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010506:	a803      	add	r0, sp, #12
 8010508:	f004 fcd8 	bl	8014ebc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801050c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 8010510:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010514:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010518:	f104 001c 	add.w	r0, r4, #28
 801051c:	b189      	cbz	r1, 8010542 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801051e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 8010522:	9300      	str	r3, [sp, #0]
 8010524:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 8010528:	4613      	mov	r3, r2
 801052a:	462a      	mov	r2, r5
 801052c:	f015 fc58 	bl	8025de0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010530:	b128      	cbz	r0, 801053e <_ZN8touchgfx3HAL5touchEll+0x56>
 8010532:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010536:	6623      	str	r3, [r4, #96]	; 0x60
 8010538:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801053c:	6663      	str	r3, [r4, #100]	; 0x64
 801053e:	b007      	add	sp, #28
 8010540:	bd30      	pop	{r4, r5, pc}
 8010542:	f015 fc8d 	bl	8025e60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010546:	2301      	movs	r3, #1
 8010548:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 801054c:	e7f1      	b.n	8010532 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801054e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801054e:	b510      	push	{r4, lr}
 8010550:	2b00      	cmp	r3, #0
 8010552:	d046      	beq.n	80105e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010554:	ea81 0002 	eor.w	r0, r1, r2
 8010558:	07c4      	lsls	r4, r0, #31
 801055a:	d508      	bpl.n	801056e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801055c:	440b      	add	r3, r1
 801055e:	3a01      	subs	r2, #1
 8010560:	428b      	cmp	r3, r1
 8010562:	d93e      	bls.n	80105e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010564:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010568:	f801 0b01 	strb.w	r0, [r1], #1
 801056c:	e7f8      	b.n	8010560 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801056e:	07d0      	lsls	r0, r2, #31
 8010570:	bf42      	ittt	mi
 8010572:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010576:	f801 0b01 	strbmi.w	r0, [r1], #1
 801057a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801057e:	2b01      	cmp	r3, #1
 8010580:	d911      	bls.n	80105a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010582:	ea81 0402 	eor.w	r4, r1, r2
 8010586:	07a4      	lsls	r4, r4, #30
 8010588:	4610      	mov	r0, r2
 801058a:	d022      	beq.n	80105d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801058c:	f023 0401 	bic.w	r4, r3, #1
 8010590:	440c      	add	r4, r1
 8010592:	428c      	cmp	r4, r1
 8010594:	4602      	mov	r2, r0
 8010596:	d904      	bls.n	80105a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010598:	8812      	ldrh	r2, [r2, #0]
 801059a:	f821 2b02 	strh.w	r2, [r1], #2
 801059e:	3002      	adds	r0, #2
 80105a0:	e7f7      	b.n	8010592 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80105a2:	f003 0301 	and.w	r3, r3, #1
 80105a6:	f023 0003 	bic.w	r0, r3, #3
 80105aa:	4408      	add	r0, r1
 80105ac:	4288      	cmp	r0, r1
 80105ae:	4614      	mov	r4, r2
 80105b0:	d904      	bls.n	80105bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80105b2:	6824      	ldr	r4, [r4, #0]
 80105b4:	f841 4b04 	str.w	r4, [r1], #4
 80105b8:	3204      	adds	r2, #4
 80105ba:	e7f7      	b.n	80105ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80105bc:	f003 0303 	and.w	r3, r3, #3
 80105c0:	440b      	add	r3, r1
 80105c2:	3a01      	subs	r2, #1
 80105c4:	428b      	cmp	r3, r1
 80105c6:	d90c      	bls.n	80105e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80105c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80105cc:	f801 0b01 	strb.w	r0, [r1], #1
 80105d0:	e7f8      	b.n	80105c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80105d2:	0790      	lsls	r0, r2, #30
 80105d4:	d0e7      	beq.n	80105a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80105d6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80105da:	f821 0b02 	strh.w	r0, [r1], #2
 80105de:	3b02      	subs	r3, #2
 80105e0:	e7e1      	b.n	80105a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80105e2:	2001      	movs	r0, #1
 80105e4:	bd10      	pop	{r4, pc}

080105e6 <_ZN8touchgfx3HAL7noTouchEv>:
 80105e6:	b510      	push	{r4, lr}
 80105e8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80105ec:	4604      	mov	r4, r0
 80105ee:	b153      	cbz	r3, 8010606 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80105f0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80105f4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80105f8:	2101      	movs	r1, #1
 80105fa:	301c      	adds	r0, #28
 80105fc:	f015 fc30 	bl	8025e60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010600:	2300      	movs	r3, #0
 8010602:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010606:	bd10      	pop	{r4, pc}

08010608 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010608:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801060c:	b085      	sub	sp, #20
 801060e:	ad04      	add	r5, sp, #16
 8010610:	4604      	mov	r4, r0
 8010612:	2000      	movs	r0, #0
 8010614:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010618:	69a0      	ldr	r0, [r4, #24]
 801061a:	6806      	ldr	r6, [r0, #0]
 801061c:	9501      	str	r5, [sp, #4]
 801061e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010622:	9500      	str	r5, [sp, #0]
 8010624:	6835      	ldr	r5, [r6, #0]
 8010626:	4699      	mov	r9, r3
 8010628:	460f      	mov	r7, r1
 801062a:	4690      	mov	r8, r2
 801062c:	47a8      	blx	r5
 801062e:	4d10      	ldr	r5, [pc, #64]	; (8010670 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010630:	4606      	mov	r6, r0
 8010632:	f8a5 9000 	strh.w	r9, [r5]
 8010636:	f7f3 fa73 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 801063a:	6803      	ldr	r3, [r0, #0]
 801063c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801063e:	4798      	blx	r3
 8010640:	b128      	cbz	r0, 801064e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010642:	2801      	cmp	r0, #1
 8010644:	d00b      	beq.n	801065e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010646:	4630      	mov	r0, r6
 8010648:	b005      	add	sp, #20
 801064a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801064e:	882b      	ldrh	r3, [r5, #0]
 8010650:	fb08 7203 	mla	r2, r8, r3, r7
 8010654:	9b03      	ldr	r3, [sp, #12]
 8010656:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801065a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801065c:	e7f3      	b.n	8010646 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801065e:	882a      	ldrh	r2, [r5, #0]
 8010660:	9b03      	ldr	r3, [sp, #12]
 8010662:	fb08 7202 	mla	r2, r8, r2, r7
 8010666:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801066a:	1a9a      	subs	r2, r3, r2
 801066c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801066e:	e7ea      	b.n	8010646 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010670:	20012e6e 	.word	0x20012e6e

08010674 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010674:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010676:	b08b      	sub	sp, #44	; 0x2c
 8010678:	4617      	mov	r7, r2
 801067a:	4604      	mov	r4, r0
 801067c:	460e      	mov	r6, r1
 801067e:	461d      	mov	r5, r3
 8010680:	f7f3 fa4e 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 8010684:	6803      	ldr	r3, [r0, #0]
 8010686:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010688:	4798      	blx	r3
 801068a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801068e:	9007      	str	r0, [sp, #28]
 8010690:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010694:	4b0d      	ldr	r3, [pc, #52]	; (80106cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010696:	6822      	ldr	r2, [r4, #0]
 8010698:	881b      	ldrh	r3, [r3, #0]
 801069a:	9306      	str	r3, [sp, #24]
 801069c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80106a0:	9305      	str	r3, [sp, #20]
 80106a2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80106a6:	9304      	str	r3, [sp, #16]
 80106a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80106ac:	9303      	str	r3, [sp, #12]
 80106ae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80106b2:	9302      	str	r3, [sp, #8]
 80106b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80106b8:	e9cd 5300 	strd	r5, r3, [sp]
 80106bc:	4631      	mov	r1, r6
 80106be:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80106c0:	463b      	mov	r3, r7
 80106c2:	2200      	movs	r2, #0
 80106c4:	4620      	mov	r0, r4
 80106c6:	47a8      	blx	r5
 80106c8:	b00b      	add	sp, #44	; 0x2c
 80106ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80106cc:	20012e6e 	.word	0x20012e6e

080106d0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80106d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80106d4:	4698      	mov	r8, r3
 80106d6:	6803      	ldr	r3, [r0, #0]
 80106d8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80106da:	4b15      	ldr	r3, [pc, #84]	; (8010730 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80106dc:	b08b      	sub	sp, #44	; 0x2c
 80106de:	4617      	mov	r7, r2
 80106e0:	f8b3 9000 	ldrh.w	r9, [r3]
 80106e4:	460e      	mov	r6, r1
 80106e6:	4604      	mov	r4, r0
 80106e8:	f7f3 fa1a 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 80106ec:	6803      	ldr	r3, [r0, #0]
 80106ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80106f0:	4798      	blx	r3
 80106f2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80106f6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80106fa:	2302      	movs	r3, #2
 80106fc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010700:	2301      	movs	r3, #1
 8010702:	9305      	str	r3, [sp, #20]
 8010704:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010708:	9304      	str	r3, [sp, #16]
 801070a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801070e:	9303      	str	r3, [sp, #12]
 8010710:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010714:	9302      	str	r3, [sp, #8]
 8010716:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801071a:	2200      	movs	r2, #0
 801071c:	e9cd 8300 	strd	r8, r3, [sp]
 8010720:	4631      	mov	r1, r6
 8010722:	463b      	mov	r3, r7
 8010724:	4620      	mov	r0, r4
 8010726:	47a8      	blx	r5
 8010728:	b00b      	add	sp, #44	; 0x2c
 801072a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801072e:	bf00      	nop
 8010730:	20012e6e 	.word	0x20012e6e

08010734 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010734:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010738:	4698      	mov	r8, r3
 801073a:	6803      	ldr	r3, [r0, #0]
 801073c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801073e:	4b11      	ldr	r3, [pc, #68]	; (8010784 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010740:	b087      	sub	sp, #28
 8010742:	f8b3 9000 	ldrh.w	r9, [r3]
 8010746:	460e      	mov	r6, r1
 8010748:	4617      	mov	r7, r2
 801074a:	4604      	mov	r4, r0
 801074c:	f7f3 f9e8 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 8010750:	6803      	ldr	r3, [r0, #0]
 8010752:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010754:	4798      	blx	r3
 8010756:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801075a:	f8cd 900c 	str.w	r9, [sp, #12]
 801075e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010762:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010766:	9302      	str	r3, [sp, #8]
 8010768:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801076c:	9301      	str	r3, [sp, #4]
 801076e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010772:	9300      	str	r3, [sp, #0]
 8010774:	463a      	mov	r2, r7
 8010776:	4643      	mov	r3, r8
 8010778:	4631      	mov	r1, r6
 801077a:	4620      	mov	r0, r4
 801077c:	47a8      	blx	r5
 801077e:	b007      	add	sp, #28
 8010780:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010784:	20012e6e 	.word	0x20012e6e

08010788 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801078c:	4604      	mov	r4, r0
 801078e:	b08f      	sub	sp, #60	; 0x3c
 8010790:	4610      	mov	r0, r2
 8010792:	460d      	mov	r5, r1
 8010794:	4691      	mov	r9, r2
 8010796:	461e      	mov	r6, r3
 8010798:	f007 fefc 	bl	8018594 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801079c:	2800      	cmp	r0, #0
 801079e:	f000 809d 	beq.w	80108dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80107a2:	6823      	ldr	r3, [r4, #0]
 80107a4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010940 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80107a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80107aa:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010944 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80107ae:	4f61      	ldr	r7, [pc, #388]	; (8010934 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80107b0:	4620      	mov	r0, r4
 80107b2:	4798      	blx	r3
 80107b4:	6823      	ldr	r3, [r4, #0]
 80107b6:	4620      	mov	r0, r4
 80107b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80107ba:	4798      	blx	r3
 80107bc:	f8bb 3000 	ldrh.w	r3, [fp]
 80107c0:	9301      	str	r3, [sp, #4]
 80107c2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80107c6:	f8ba 3000 	ldrh.w	r3, [sl]
 80107ca:	9302      	str	r3, [sp, #8]
 80107cc:	883b      	ldrh	r3, [r7, #0]
 80107ce:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80107d2:	9303      	str	r3, [sp, #12]
 80107d4:	4b58      	ldr	r3, [pc, #352]	; (8010938 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80107d6:	9305      	str	r3, [sp, #20]
 80107d8:	881a      	ldrh	r2, [r3, #0]
 80107da:	9204      	str	r2, [sp, #16]
 80107dc:	4640      	mov	r0, r8
 80107de:	f007 ff6d 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80107e2:	8038      	strh	r0, [r7, #0]
 80107e4:	4640      	mov	r0, r8
 80107e6:	f007 ff9d 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80107ea:	9b05      	ldr	r3, [sp, #20]
 80107ec:	b280      	uxth	r0, r0
 80107ee:	8018      	strh	r0, [r3, #0]
 80107f0:	4b52      	ldr	r3, [pc, #328]	; (801093c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80107f2:	781b      	ldrb	r3, [r3, #0]
 80107f4:	2b00      	cmp	r3, #0
 80107f6:	d174      	bne.n	80108e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80107f8:	883b      	ldrh	r3, [r7, #0]
 80107fa:	f8ab 3000 	strh.w	r3, [fp]
 80107fe:	f8aa 0000 	strh.w	r0, [sl]
 8010802:	4648      	mov	r0, r9
 8010804:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010808:	f007 fec4 	bl	8018594 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801080c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010810:	2200      	movs	r2, #0
 8010812:	4611      	mov	r1, r2
 8010814:	4628      	mov	r0, r5
 8010816:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801081a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801081e:	f7f2 f8c4 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8010822:	2301      	movs	r3, #1
 8010824:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010828:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801082c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010830:	2b00      	cmp	r3, #0
 8010832:	dd5c      	ble.n	80108ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010834:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010838:	2b00      	cmp	r3, #0
 801083a:	dd58      	ble.n	80108ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801083c:	462a      	mov	r2, r5
 801083e:	ab0a      	add	r3, sp, #40	; 0x28
 8010840:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010844:	6851      	ldr	r1, [r2, #4]
 8010846:	c303      	stmia	r3!, {r0, r1}
 8010848:	4631      	mov	r1, r6
 801084a:	a80a      	add	r0, sp, #40	; 0x28
 801084c:	f7ff fc06 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8010850:	4b38      	ldr	r3, [pc, #224]	; (8010934 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010852:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010856:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801085a:	2100      	movs	r1, #0
 801085c:	aa0a      	add	r2, sp, #40	; 0x28
 801085e:	4b36      	ldr	r3, [pc, #216]	; (8010938 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010860:	910c      	str	r1, [sp, #48]	; 0x30
 8010862:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010866:	f9b3 3000 	ldrsh.w	r3, [r3]
 801086a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801086e:	ab08      	add	r3, sp, #32
 8010870:	e883 0003 	stmia.w	r3, {r0, r1}
 8010874:	4618      	mov	r0, r3
 8010876:	a90c      	add	r1, sp, #48	; 0x30
 8010878:	f7ff fbf0 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 801087c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801087e:	2b00      	cmp	r3, #0
 8010880:	d13c      	bne.n	80108fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010882:	2000      	movs	r0, #0
 8010884:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010888:	2600      	movs	r6, #0
 801088a:	682a      	ldr	r2, [r5, #0]
 801088c:	696b      	ldr	r3, [r5, #20]
 801088e:	616e      	str	r6, [r5, #20]
 8010890:	9305      	str	r3, [sp, #20]
 8010892:	6892      	ldr	r2, [r2, #8]
 8010894:	a908      	add	r1, sp, #32
 8010896:	4628      	mov	r0, r5
 8010898:	4790      	blx	r2
 801089a:	9b05      	ldr	r3, [sp, #20]
 801089c:	616b      	str	r3, [r5, #20]
 801089e:	4652      	mov	r2, sl
 80108a0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80108a4:	4649      	mov	r1, r9
 80108a6:	4628      	mov	r0, r5
 80108a8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80108ac:	f7f2 f87d 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 80108b0:	4b23      	ldr	r3, [pc, #140]	; (8010940 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80108b2:	9a01      	ldr	r2, [sp, #4]
 80108b4:	801a      	strh	r2, [r3, #0]
 80108b6:	4b23      	ldr	r3, [pc, #140]	; (8010944 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80108b8:	9a02      	ldr	r2, [sp, #8]
 80108ba:	801a      	strh	r2, [r3, #0]
 80108bc:	4b1d      	ldr	r3, [pc, #116]	; (8010934 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80108be:	9a03      	ldr	r2, [sp, #12]
 80108c0:	801a      	strh	r2, [r3, #0]
 80108c2:	4b1d      	ldr	r3, [pc, #116]	; (8010938 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80108c4:	9a04      	ldr	r2, [sp, #16]
 80108c6:	801a      	strh	r2, [r3, #0]
 80108c8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80108cc:	6823      	ldr	r3, [r4, #0]
 80108ce:	4620      	mov	r0, r4
 80108d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80108d2:	4798      	blx	r3
 80108d4:	6823      	ldr	r3, [r4, #0]
 80108d6:	4620      	mov	r0, r4
 80108d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80108da:	4798      	blx	r3
 80108dc:	b00f      	add	sp, #60	; 0x3c
 80108de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108e2:	883b      	ldrh	r3, [r7, #0]
 80108e4:	f8ab 0000 	strh.w	r0, [fp]
 80108e8:	f8aa 3000 	strh.w	r3, [sl]
 80108ec:	e789      	b.n	8010802 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80108ee:	462a      	mov	r2, r5
 80108f0:	ab0a      	add	r3, sp, #40	; 0x28
 80108f2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80108f6:	6851      	ldr	r1, [r2, #4]
 80108f8:	c303      	stmia	r3!, {r0, r1}
 80108fa:	e7a9      	b.n	8010850 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80108fc:	a807      	add	r0, sp, #28
 80108fe:	f008 f84d 	bl	801899c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010902:	4606      	mov	r6, r0
 8010904:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010906:	6803      	ldr	r3, [r0, #0]
 8010908:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801090a:	4798      	blx	r3
 801090c:	4286      	cmp	r6, r0
 801090e:	d1b8      	bne.n	8010882 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010910:	f7f3 f906 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 8010914:	6803      	ldr	r3, [r0, #0]
 8010916:	4606      	mov	r6, r0
 8010918:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801091a:	9305      	str	r3, [sp, #20]
 801091c:	a807      	add	r0, sp, #28
 801091e:	f008 f83d 	bl	801899c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010922:	9b05      	ldr	r3, [sp, #20]
 8010924:	4601      	mov	r1, r0
 8010926:	4630      	mov	r0, r6
 8010928:	4798      	blx	r3
 801092a:	f080 0001 	eor.w	r0, r0, #1
 801092e:	b2c0      	uxtb	r0, r0
 8010930:	e7a8      	b.n	8010884 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010932:	bf00      	nop
 8010934:	20012e68 	.word	0x20012e68
 8010938:	20012e6a 	.word	0x20012e6a
 801093c:	20012e6c 	.word	0x20012e6c
 8010940:	20012e6e 	.word	0x20012e6e
 8010944:	20012e70 	.word	0x20012e70

08010948 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010948:	b510      	push	{r4, lr}
 801094a:	4b07      	ldr	r3, [pc, #28]	; (8010968 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801094c:	781b      	ldrb	r3, [r3, #0]
 801094e:	4604      	mov	r4, r0
 8010950:	b13b      	cbz	r3, 8010962 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010952:	6803      	ldr	r3, [r0, #0]
 8010954:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010956:	4798      	blx	r3
 8010958:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801095a:	4283      	cmp	r3, r0
 801095c:	d101      	bne.n	8010962 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801095e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010960:	bd10      	pop	{r4, pc}
 8010962:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010964:	e7fc      	b.n	8010960 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010966:	bf00      	nop
 8010968:	20012e72 	.word	0x20012e72

0801096c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801096c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010970:	b08a      	sub	sp, #40	; 0x28
 8010972:	461d      	mov	r5, r3
 8010974:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010978:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801097c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010980:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010984:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010988:	f8ad 301a 	strh.w	r3, [sp, #26]
 801098c:	2400      	movs	r4, #0
 801098e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010992:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010996:	f8ad 301c 	strh.w	r3, [sp, #28]
 801099a:	4690      	mov	r8, r2
 801099c:	4607      	mov	r7, r0
 801099e:	9404      	str	r4, [sp, #16]
 80109a0:	f88d 4020 	strb.w	r4, [sp, #32]
 80109a4:	f7ff ffd0 	bl	8010948 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80109a8:	fb06 8505 	mla	r5, r6, r5, r8
 80109ac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80109b0:	6878      	ldr	r0, [r7, #4]
 80109b2:	9505      	str	r5, [sp, #20]
 80109b4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80109b8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80109bc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80109c0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80109c4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80109c8:	6803      	ldr	r3, [r0, #0]
 80109ca:	a901      	add	r1, sp, #4
 80109cc:	685b      	ldr	r3, [r3, #4]
 80109ce:	4798      	blx	r3
 80109d0:	b00a      	add	sp, #40	; 0x28
 80109d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080109d6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80109d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80109da:	b08b      	sub	sp, #44	; 0x2c
 80109dc:	2400      	movs	r4, #0
 80109de:	461d      	mov	r5, r3
 80109e0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80109e4:	4688      	mov	r8, r1
 80109e6:	4691      	mov	r9, r2
 80109e8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80109ec:	9404      	str	r4, [sp, #16]
 80109ee:	4607      	mov	r7, r0
 80109f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80109f4:	f7ff ffa8 	bl	8010948 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80109f8:	fb06 9505 	mla	r5, r6, r5, r9
 80109fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010a00:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010a04:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010a08:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010a0c:	6878      	ldr	r0, [r7, #4]
 8010a0e:	9505      	str	r5, [sp, #20]
 8010a10:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010a14:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010a18:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010a1c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010a20:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010a24:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010a28:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010a2c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010a30:	6803      	ldr	r3, [r0, #0]
 8010a32:	a901      	add	r1, sp, #4
 8010a34:	685b      	ldr	r3, [r3, #4]
 8010a36:	4798      	blx	r3
 8010a38:	b00b      	add	sp, #44	; 0x2c
 8010a3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010a40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010a40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a44:	b08a      	sub	sp, #40	; 0x28
 8010a46:	4698      	mov	r8, r3
 8010a48:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8010a4c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010a50:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010a54:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010a58:	2300      	movs	r3, #0
 8010a5a:	2d0b      	cmp	r5, #11
 8010a5c:	4606      	mov	r6, r0
 8010a5e:	9304      	str	r3, [sp, #16]
 8010a60:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010a64:	d138      	bne.n	8010ad8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010a66:	2380      	movs	r3, #128	; 0x80
 8010a68:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010a6c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010a70:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010a74:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010a78:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010a7c:	f88d 0020 	strb.w	r0, [sp, #32]
 8010a80:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010a84:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010a88:	4630      	mov	r0, r6
 8010a8a:	9203      	str	r2, [sp, #12]
 8010a8c:	f7ff ff5c 	bl	8010948 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010a90:	2c0b      	cmp	r4, #11
 8010a92:	bf98      	it	ls
 8010a94:	4b1b      	ldrls	r3, [pc, #108]	; (8010b04 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010a96:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8010a9a:	bf98      	it	ls
 8010a9c:	5d19      	ldrbls	r1, [r3, r4]
 8010a9e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010aa2:	bf88      	it	hi
 8010aa4:	2100      	movhi	r1, #0
 8010aa6:	fb02 8307 	mla	r3, r2, r7, r8
 8010aaa:	10c9      	asrs	r1, r1, #3
 8010aac:	fb01 0003 	mla	r0, r1, r3, r0
 8010ab0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010ab4:	9005      	str	r0, [sp, #20]
 8010ab6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010aba:	6870      	ldr	r0, [r6, #4]
 8010abc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010ac0:	2300      	movs	r3, #0
 8010ac2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010ac6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010aca:	6803      	ldr	r3, [r0, #0]
 8010acc:	a901      	add	r1, sp, #4
 8010ace:	685b      	ldr	r3, [r3, #4]
 8010ad0:	4798      	blx	r3
 8010ad2:	b00a      	add	sp, #40	; 0x28
 8010ad4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010ad8:	2d02      	cmp	r5, #2
 8010ada:	d109      	bne.n	8010af0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8010adc:	28ff      	cmp	r0, #255	; 0xff
 8010ade:	d105      	bne.n	8010aec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010ae0:	f1bc 0f00 	cmp.w	ip, #0
 8010ae4:	bf14      	ite	ne
 8010ae6:	2340      	movne	r3, #64	; 0x40
 8010ae8:	2320      	moveq	r3, #32
 8010aea:	e7bd      	b.n	8010a68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010aec:	2340      	movs	r3, #64	; 0x40
 8010aee:	e7bb      	b.n	8010a68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010af0:	28ff      	cmp	r0, #255	; 0xff
 8010af2:	d105      	bne.n	8010b00 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010af4:	f1bc 0f00 	cmp.w	ip, #0
 8010af8:	bf14      	ite	ne
 8010afa:	2304      	movne	r3, #4
 8010afc:	2301      	moveq	r3, #1
 8010afe:	e7b3      	b.n	8010a68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010b00:	2304      	movs	r3, #4
 8010b02:	e7b1      	b.n	8010a68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010b04:	0802dd94 	.word	0x0802dd94

08010b08 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b0c:	b08b      	sub	sp, #44	; 0x2c
 8010b0e:	461d      	mov	r5, r3
 8010b10:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010b14:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010b18:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8010b1c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010b20:	bf14      	ite	ne
 8010b22:	2308      	movne	r3, #8
 8010b24:	2302      	moveq	r3, #2
 8010b26:	2400      	movs	r4, #0
 8010b28:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010b2c:	4688      	mov	r8, r1
 8010b2e:	4693      	mov	fp, r2
 8010b30:	9404      	str	r4, [sp, #16]
 8010b32:	4607      	mov	r7, r0
 8010b34:	f7ff ff08 	bl	8010948 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010b38:	2e0b      	cmp	r6, #11
 8010b3a:	bf98      	it	ls
 8010b3c:	4b15      	ldrls	r3, [pc, #84]	; (8010b94 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8010b3e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010b42:	bf98      	it	ls
 8010b44:	5d9c      	ldrbls	r4, [r3, r6]
 8010b46:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8010b4a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010b4e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010b52:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010b56:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010b5a:	10e4      	asrs	r4, r4, #3
 8010b5c:	fb04 0405 	mla	r4, r4, r5, r0
 8010b60:	2300      	movs	r3, #0
 8010b62:	6878      	ldr	r0, [r7, #4]
 8010b64:	9405      	str	r4, [sp, #20]
 8010b66:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010b6a:	f8ad a01e 	strh.w	sl, [sp, #30]
 8010b6e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010b72:	f88d 9020 	strb.w	r9, [sp, #32]
 8010b76:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8010b7a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8010b7e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010b82:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010b86:	6803      	ldr	r3, [r0, #0]
 8010b88:	a901      	add	r1, sp, #4
 8010b8a:	685b      	ldr	r3, [r3, #4]
 8010b8c:	4798      	blx	r3
 8010b8e:	b00b      	add	sp, #44	; 0x2c
 8010b90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b94:	0802dd94 	.word	0x0802dd94

08010b98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010b98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b9c:	461e      	mov	r6, r3
 8010b9e:	4b0a      	ldr	r3, [pc, #40]	; (8010bc8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010ba0:	460f      	mov	r7, r1
 8010ba2:	881d      	ldrh	r5, [r3, #0]
 8010ba4:	4690      	mov	r8, r2
 8010ba6:	f7f2 ffbb 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 8010baa:	6803      	ldr	r3, [r0, #0]
 8010bac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010bae:	4798      	blx	r3
 8010bb0:	280b      	cmp	r0, #11
 8010bb2:	bf9a      	itte	ls
 8010bb4:	4b05      	ldrls	r3, [pc, #20]	; (8010bcc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010bb6:	5c1c      	ldrbls	r4, [r3, r0]
 8010bb8:	2400      	movhi	r4, #0
 8010bba:	fb08 7005 	mla	r0, r8, r5, r7
 8010bbe:	10e4      	asrs	r4, r4, #3
 8010bc0:	fb04 6000 	mla	r0, r4, r0, r6
 8010bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010bc8:	20012e6e 	.word	0x20012e6e
 8010bcc:	0802dd94 	.word	0x0802dd94

08010bd0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010bd0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010bd2:	b08b      	sub	sp, #44	; 0x2c
 8010bd4:	461f      	mov	r7, r3
 8010bd6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010bda:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010bde:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010be2:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010be6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010bea:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010bee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010bf2:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010bf6:	2500      	movs	r5, #0
 8010bf8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010bfc:	f88d 3020 	strb.w	r3, [sp, #32]
 8010c00:	4604      	mov	r4, r0
 8010c02:	4616      	mov	r6, r2
 8010c04:	9504      	str	r5, [sp, #16]
 8010c06:	f7ff fe9f 	bl	8010948 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010c0a:	463a      	mov	r2, r7
 8010c0c:	4631      	mov	r1, r6
 8010c0e:	4603      	mov	r3, r0
 8010c10:	4620      	mov	r0, r4
 8010c12:	f7ff ffc1 	bl	8010b98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010c16:	4b0e      	ldr	r3, [pc, #56]	; (8010c50 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010c18:	9005      	str	r0, [sp, #20]
 8010c1a:	881b      	ldrh	r3, [r3, #0]
 8010c1c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010c20:	f7f2 ff7e 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 8010c24:	6803      	ldr	r3, [r0, #0]
 8010c26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010c28:	4798      	blx	r3
 8010c2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8010c2c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010c30:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010c34:	9304      	str	r3, [sp, #16]
 8010c36:	6860      	ldr	r0, [r4, #4]
 8010c38:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010c3c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010c40:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010c44:	6803      	ldr	r3, [r0, #0]
 8010c46:	a901      	add	r1, sp, #4
 8010c48:	685b      	ldr	r3, [r3, #4]
 8010c4a:	4798      	blx	r3
 8010c4c:	b00b      	add	sp, #44	; 0x2c
 8010c4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c50:	20012e6e 	.word	0x20012e6e

08010c54 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010c54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c56:	b08d      	sub	sp, #52	; 0x34
 8010c58:	466b      	mov	r3, sp
 8010c5a:	e883 0006 	stmia.w	r3, {r1, r2}
 8010c5e:	2300      	movs	r3, #0
 8010c60:	9306      	str	r3, [sp, #24]
 8010c62:	6803      	ldr	r3, [r0, #0]
 8010c64:	f8bd 6000 	ldrh.w	r6, [sp]
 8010c68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010c6a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8010c6e:	2501      	movs	r5, #1
 8010c70:	9503      	str	r5, [sp, #12]
 8010c72:	4604      	mov	r4, r0
 8010c74:	4798      	blx	r3
 8010c76:	463a      	mov	r2, r7
 8010c78:	4631      	mov	r1, r6
 8010c7a:	4603      	mov	r3, r0
 8010c7c:	4620      	mov	r0, r4
 8010c7e:	f7ff ff8b 	bl	8010b98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010c82:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010c84:	9307      	str	r3, [sp, #28]
 8010c86:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010c8a:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010c8e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010c92:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010c96:	4b0f      	ldr	r3, [pc, #60]	; (8010cd4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010c98:	9004      	str	r0, [sp, #16]
 8010c9a:	881b      	ldrh	r3, [r3, #0]
 8010c9c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010ca0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010ca4:	f7f2 ff3c 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 8010ca8:	6803      	ldr	r3, [r0, #0]
 8010caa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010cac:	4798      	blx	r3
 8010cae:	23ff      	movs	r3, #255	; 0xff
 8010cb0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010cb4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010cb8:	6860      	ldr	r0, [r4, #4]
 8010cba:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010cbe:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010cc2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010cc6:	6803      	ldr	r3, [r0, #0]
 8010cc8:	a903      	add	r1, sp, #12
 8010cca:	685b      	ldr	r3, [r3, #4]
 8010ccc:	4798      	blx	r3
 8010cce:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010cd0:	b00d      	add	sp, #52	; 0x34
 8010cd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010cd4:	20012e6e 	.word	0x20012e6e

08010cd8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010cd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010cdc:	b08c      	sub	sp, #48	; 0x30
 8010cde:	461e      	mov	r6, r3
 8010ce0:	466d      	mov	r5, sp
 8010ce2:	2300      	movs	r3, #0
 8010ce4:	e885 0006 	stmia.w	r5, {r1, r2}
 8010ce8:	9306      	str	r3, [sp, #24]
 8010cea:	6803      	ldr	r3, [r0, #0]
 8010cec:	f8bd 7000 	ldrh.w	r7, [sp]
 8010cf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010cf2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010cf6:	2501      	movs	r5, #1
 8010cf8:	9503      	str	r5, [sp, #12]
 8010cfa:	4604      	mov	r4, r0
 8010cfc:	4798      	blx	r3
 8010cfe:	4642      	mov	r2, r8
 8010d00:	4639      	mov	r1, r7
 8010d02:	4603      	mov	r3, r0
 8010d04:	4620      	mov	r0, r4
 8010d06:	f7ff ff47 	bl	8010b98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010d0a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8010d0e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010d12:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010d16:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010d1a:	4b11      	ldr	r3, [pc, #68]	; (8010d60 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8010d1c:	9004      	str	r0, [sp, #16]
 8010d1e:	881b      	ldrh	r3, [r3, #0]
 8010d20:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010d24:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010d26:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010d2a:	9607      	str	r6, [sp, #28]
 8010d2c:	f7f2 fef8 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 8010d30:	6803      	ldr	r3, [r0, #0]
 8010d32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010d34:	4798      	blx	r3
 8010d36:	23ff      	movs	r3, #255	; 0xff
 8010d38:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010d3c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010d40:	6860      	ldr	r0, [r4, #4]
 8010d42:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010d46:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010d4a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010d4e:	6803      	ldr	r3, [r0, #0]
 8010d50:	a903      	add	r1, sp, #12
 8010d52:	685b      	ldr	r3, [r3, #4]
 8010d54:	4798      	blx	r3
 8010d56:	4630      	mov	r0, r6
 8010d58:	b00c      	add	sp, #48	; 0x30
 8010d5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d5e:	bf00      	nop
 8010d60:	20012e6e 	.word	0x20012e6e

08010d64 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010d64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d66:	b085      	sub	sp, #20
 8010d68:	ac02      	add	r4, sp, #8
 8010d6a:	e884 0006 	stmia.w	r4, {r1, r2}
 8010d6e:	4605      	mov	r5, r0
 8010d70:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010d74:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010d78:	f7ff fde6 	bl	8010948 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010d7c:	463a      	mov	r2, r7
 8010d7e:	4603      	mov	r3, r0
 8010d80:	4631      	mov	r1, r6
 8010d82:	4628      	mov	r0, r5
 8010d84:	f7ff ff08 	bl	8010b98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010d88:	4a05      	ldr	r2, [pc, #20]	; (8010da0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8010d8a:	682b      	ldr	r3, [r5, #0]
 8010d8c:	8812      	ldrh	r2, [r2, #0]
 8010d8e:	9200      	str	r2, [sp, #0]
 8010d90:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8010d92:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010d96:	4603      	mov	r3, r0
 8010d98:	4628      	mov	r0, r5
 8010d9a:	47b0      	blx	r6
 8010d9c:	b005      	add	sp, #20
 8010d9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010da0:	20012e6e 	.word	0x20012e6e

08010da4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010da4:	b570      	push	{r4, r5, r6, lr}
 8010da6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8010daa:	4604      	mov	r4, r0
 8010dac:	b19b      	cbz	r3, 8010dd6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8010dae:	2002      	movs	r0, #2
 8010db0:	f7ef ff28 	bl	8000c04 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010db4:	2300      	movs	r3, #0
 8010db6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8010dba:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8010dbe:	6823      	ldr	r3, [r4, #0]
 8010dc0:	4620      	mov	r0, r4
 8010dc2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010dc6:	f7ff fdbf 	bl	8010948 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010dca:	462b      	mov	r3, r5
 8010dcc:	4601      	mov	r1, r0
 8010dce:	4620      	mov	r0, r4
 8010dd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010dd4:	4718      	bx	r3
 8010dd6:	bd70      	pop	{r4, r5, r6, pc}

08010dd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010dd8:	b538      	push	{r3, r4, r5, lr}
 8010dda:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8010dde:	428b      	cmp	r3, r1
 8010de0:	4604      	mov	r4, r0
 8010de2:	460d      	mov	r5, r1
 8010de4:	d006      	beq.n	8010df4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010de6:	6803      	ldr	r3, [r0, #0]
 8010de8:	b929      	cbnz	r1, 8010df6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8010dea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010dee:	4798      	blx	r3
 8010df0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010df4:	bd38      	pop	{r3, r4, r5, pc}
 8010df6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8010dfa:	e7f8      	b.n	8010dee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08010dfc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8010dfc:	b510      	push	{r4, lr}
 8010dfe:	4b0d      	ldr	r3, [pc, #52]	; (8010e34 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010e00:	781b      	ldrb	r3, [r3, #0]
 8010e02:	4604      	mov	r4, r0
 8010e04:	b95b      	cbnz	r3, 8010e1e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010e06:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8010e0a:	2b02      	cmp	r3, #2
 8010e0c:	d007      	beq.n	8010e1e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010e0e:	6840      	ldr	r0, [r0, #4]
 8010e10:	f000 f92c 	bl	801106c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010e14:	b118      	cbz	r0, 8010e1e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010e16:	6862      	ldr	r2, [r4, #4]
 8010e18:	7a53      	ldrb	r3, [r2, #9]
 8010e1a:	2b00      	cmp	r3, #0
 8010e1c:	d0fc      	beq.n	8010e18 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8010e1e:	f7f0 f829 	bl	8000e74 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010e22:	4620      	mov	r0, r4
 8010e24:	2100      	movs	r1, #0
 8010e26:	f7ff ffd7 	bl	8010dd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010e2a:	4620      	mov	r0, r4
 8010e2c:	f7ff fd8c 	bl	8010948 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010e30:	bd10      	pop	{r4, pc}
 8010e32:	bf00      	nop
 8010e34:	20012e72 	.word	0x20012e72

08010e38 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010e38:	b570      	push	{r4, r5, r6, lr}
 8010e3a:	4604      	mov	r4, r0
 8010e3c:	6803      	ldr	r3, [r0, #0]
 8010e3e:	b919      	cbnz	r1, 8010e48 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010e40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010e42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010e46:	4718      	bx	r3
 8010e48:	2200      	movs	r2, #0
 8010e4a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8010e4e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010e52:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010e54:	4798      	blx	r3
 8010e56:	6863      	ldr	r3, [r4, #4]
 8010e58:	2101      	movs	r1, #1
 8010e5a:	4605      	mov	r5, r0
 8010e5c:	7299      	strb	r1, [r3, #10]
 8010e5e:	4620      	mov	r0, r4
 8010e60:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010e64:	f7ff ffb8 	bl	8010dd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010e68:	4628      	mov	r0, r5
 8010e6a:	bd70      	pop	{r4, r5, r6, pc}

08010e6c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8010e6c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010e70:	1a13      	subs	r3, r2, r0
 8010e72:	4258      	negs	r0, r3
 8010e74:	4158      	adcs	r0, r3
 8010e76:	4770      	bx	lr

08010e78 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010e78:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8010e7c:	1a9b      	subs	r3, r3, r2
 8010e7e:	2b00      	cmp	r3, #0
 8010e80:	bfdc      	itt	le
 8010e82:	6882      	ldrle	r2, [r0, #8]
 8010e84:	189b      	addle	r3, r3, r2
 8010e86:	2b01      	cmp	r3, #1
 8010e88:	bfcc      	ite	gt
 8010e8a:	2000      	movgt	r0, #0
 8010e8c:	2001      	movle	r0, #1
 8010e8e:	4770      	bx	lr

08010e90 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010e90:	6902      	ldr	r2, [r0, #16]
 8010e92:	6843      	ldr	r3, [r0, #4]
 8010e94:	2024      	movs	r0, #36	; 0x24
 8010e96:	fb00 3002 	mla	r0, r0, r2, r3
 8010e9a:	4770      	bx	lr

08010e9c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8010e9c:	6803      	ldr	r3, [r0, #0]
 8010e9e:	691b      	ldr	r3, [r3, #16]
 8010ea0:	4718      	bx	r3

08010ea2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010ea2:	b570      	push	{r4, r5, r6, lr}
 8010ea4:	2301      	movs	r3, #1
 8010ea6:	7203      	strb	r3, [r0, #8]
 8010ea8:	4604      	mov	r4, r0
 8010eaa:	6840      	ldr	r0, [r0, #4]
 8010eac:	6803      	ldr	r3, [r0, #0]
 8010eae:	699b      	ldr	r3, [r3, #24]
 8010eb0:	4798      	blx	r3
 8010eb2:	6803      	ldr	r3, [r0, #0]
 8010eb4:	2b40      	cmp	r3, #64	; 0x40
 8010eb6:	4605      	mov	r5, r0
 8010eb8:	d00c      	beq.n	8010ed4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010eba:	d810      	bhi.n	8010ede <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8010ebc:	2b04      	cmp	r3, #4
 8010ebe:	d01d      	beq.n	8010efc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010ec0:	d804      	bhi.n	8010ecc <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010ec2:	2b01      	cmp	r3, #1
 8010ec4:	d006      	beq.n	8010ed4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010ec6:	2b02      	cmp	r3, #2
 8010ec8:	d02c      	beq.n	8010f24 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8010eca:	bd70      	pop	{r4, r5, r6, pc}
 8010ecc:	2b08      	cmp	r3, #8
 8010ece:	d01d      	beq.n	8010f0c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010ed0:	2b20      	cmp	r3, #32
 8010ed2:	d1fa      	bne.n	8010eca <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010ed4:	6823      	ldr	r3, [r4, #0]
 8010ed6:	4620      	mov	r0, r4
 8010ed8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010eda:	4798      	blx	r3
 8010edc:	e013      	b.n	8010f06 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8010ede:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010ee2:	d0f7      	beq.n	8010ed4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010ee4:	d804      	bhi.n	8010ef0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010ee6:	2b80      	cmp	r3, #128	; 0x80
 8010ee8:	d0f4      	beq.n	8010ed4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010eea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010eee:	e7f0      	b.n	8010ed2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010ef0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010ef4:	d0ee      	beq.n	8010ed4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010ef6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8010efa:	e7e5      	b.n	8010ec8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8010efc:	6823      	ldr	r3, [r4, #0]
 8010efe:	7f01      	ldrb	r1, [r0, #28]
 8010f00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010f02:	4620      	mov	r0, r4
 8010f04:	4798      	blx	r3
 8010f06:	6823      	ldr	r3, [r4, #0]
 8010f08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010f0a:	e006      	b.n	8010f1a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8010f0c:	6823      	ldr	r3, [r4, #0]
 8010f0e:	7f01      	ldrb	r1, [r0, #28]
 8010f10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010f12:	4620      	mov	r0, r4
 8010f14:	4798      	blx	r3
 8010f16:	6823      	ldr	r3, [r4, #0]
 8010f18:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010f1a:	4629      	mov	r1, r5
 8010f1c:	4620      	mov	r0, r4
 8010f1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f22:	4718      	bx	r3
 8010f24:	6823      	ldr	r3, [r4, #0]
 8010f26:	4620      	mov	r0, r4
 8010f28:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010f2a:	4798      	blx	r3
 8010f2c:	e7f3      	b.n	8010f16 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08010f2e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8010f2e:	4770      	bx	lr

08010f30 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010f30:	4770      	bx	lr

08010f32 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010f32:	4770      	bx	lr

08010f34 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010f34:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010f38:	1ad2      	subs	r2, r2, r3
 8010f3a:	2a00      	cmp	r2, #0
 8010f3c:	b510      	push	{r4, lr}
 8010f3e:	bfdc      	itt	le
 8010f40:	6884      	ldrle	r4, [r0, #8]
 8010f42:	1912      	addle	r2, r2, r4
 8010f44:	2a01      	cmp	r2, #1
 8010f46:	dd16      	ble.n	8010f76 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010f48:	6842      	ldr	r2, [r0, #4]
 8010f4a:	2424      	movs	r4, #36	; 0x24
 8010f4c:	fb04 2303 	mla	r3, r4, r3, r2
 8010f50:	f101 0220 	add.w	r2, r1, #32
 8010f54:	f851 4b04 	ldr.w	r4, [r1], #4
 8010f58:	f843 4b04 	str.w	r4, [r3], #4
 8010f5c:	4291      	cmp	r1, r2
 8010f5e:	d1f9      	bne.n	8010f54 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010f60:	780a      	ldrb	r2, [r1, #0]
 8010f62:	701a      	strb	r2, [r3, #0]
 8010f64:	68c3      	ldr	r3, [r0, #12]
 8010f66:	6882      	ldr	r2, [r0, #8]
 8010f68:	f3bf 8f5b 	dmb	ish
 8010f6c:	3301      	adds	r3, #1
 8010f6e:	429a      	cmp	r2, r3
 8010f70:	bfd8      	it	le
 8010f72:	1a9b      	suble	r3, r3, r2
 8010f74:	60c3      	str	r3, [r0, #12]
 8010f76:	bd10      	pop	{r4, pc}

08010f78 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010f78:	6903      	ldr	r3, [r0, #16]
 8010f7a:	6882      	ldr	r2, [r0, #8]
 8010f7c:	f3bf 8f5b 	dmb	ish
 8010f80:	3301      	adds	r3, #1
 8010f82:	429a      	cmp	r2, r3
 8010f84:	bfd8      	it	le
 8010f86:	1a9b      	suble	r3, r3, r2
 8010f88:	6103      	str	r3, [r0, #16]
 8010f8a:	4770      	bx	lr

08010f8c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8010f8c:	b570      	push	{r4, r5, r6, lr}
 8010f8e:	4604      	mov	r4, r0
 8010f90:	460e      	mov	r6, r1
 8010f92:	6860      	ldr	r0, [r4, #4]
 8010f94:	6803      	ldr	r3, [r0, #0]
 8010f96:	685b      	ldr	r3, [r3, #4]
 8010f98:	4798      	blx	r3
 8010f9a:	2800      	cmp	r0, #0
 8010f9c:	d1f9      	bne.n	8010f92 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8010f9e:	4d0d      	ldr	r5, [pc, #52]	; (8010fd4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010fa0:	6828      	ldr	r0, [r5, #0]
 8010fa2:	6803      	ldr	r3, [r0, #0]
 8010fa4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010fa6:	4798      	blx	r3
 8010fa8:	f7ef ff72 	bl	8000e90 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8010fac:	6828      	ldr	r0, [r5, #0]
 8010fae:	2101      	movs	r1, #1
 8010fb0:	f7ff ff12 	bl	8010dd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010fb4:	6860      	ldr	r0, [r4, #4]
 8010fb6:	6803      	ldr	r3, [r0, #0]
 8010fb8:	4631      	mov	r1, r6
 8010fba:	689b      	ldr	r3, [r3, #8]
 8010fbc:	4798      	blx	r3
 8010fbe:	6823      	ldr	r3, [r4, #0]
 8010fc0:	4620      	mov	r0, r4
 8010fc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010fc4:	4798      	blx	r3
 8010fc6:	6828      	ldr	r0, [r5, #0]
 8010fc8:	6803      	ldr	r3, [r0, #0]
 8010fca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010fce:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010fd0:	4718      	bx	r3
 8010fd2:	bf00      	nop
 8010fd4:	20012e74 	.word	0x20012e74

08010fd8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010fd8:	b508      	push	{r3, lr}
 8010fda:	f7ef ff4b 	bl	8000e74 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010fde:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010fe2:	f7ef bf4f 	b.w	8000e84 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010fe6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010fe6:	b510      	push	{r4, lr}
 8010fe8:	2114      	movs	r1, #20
 8010fea:	4604      	mov	r4, r0
 8010fec:	f017 ffcb 	bl	8028f86 <_ZdlPvj>
 8010ff0:	4620      	mov	r0, r4
 8010ff2:	bd10      	pop	{r4, pc}

08010ff4 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010ff4:	b510      	push	{r4, lr}
 8010ff6:	4604      	mov	r4, r0
 8010ff8:	6840      	ldr	r0, [r0, #4]
 8010ffa:	6803      	ldr	r3, [r0, #0]
 8010ffc:	681b      	ldr	r3, [r3, #0]
 8010ffe:	4798      	blx	r3
 8011000:	b948      	cbnz	r0, 8011016 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011002:	7a63      	ldrb	r3, [r4, #9]
 8011004:	b13b      	cbz	r3, 8011016 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011006:	7a23      	ldrb	r3, [r4, #8]
 8011008:	b92b      	cbnz	r3, 8011016 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801100a:	6823      	ldr	r3, [r4, #0]
 801100c:	4620      	mov	r0, r4
 801100e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011010:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011014:	4718      	bx	r3
 8011016:	bd10      	pop	{r4, pc}

08011018 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011018:	b570      	push	{r4, r5, r6, lr}
 801101a:	4604      	mov	r4, r0
 801101c:	6840      	ldr	r0, [r0, #4]
 801101e:	6803      	ldr	r3, [r0, #0]
 8011020:	681b      	ldr	r3, [r3, #0]
 8011022:	4798      	blx	r3
 8011024:	4605      	mov	r5, r0
 8011026:	b930      	cbnz	r0, 8011036 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011028:	7a23      	ldrb	r3, [r4, #8]
 801102a:	b123      	cbz	r3, 8011036 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801102c:	6860      	ldr	r0, [r4, #4]
 801102e:	6803      	ldr	r3, [r0, #0]
 8011030:	695b      	ldr	r3, [r3, #20]
 8011032:	4798      	blx	r3
 8011034:	7225      	strb	r5, [r4, #8]
 8011036:	6860      	ldr	r0, [r4, #4]
 8011038:	6803      	ldr	r3, [r0, #0]
 801103a:	681b      	ldr	r3, [r3, #0]
 801103c:	4798      	blx	r3
 801103e:	b928      	cbnz	r0, 801104c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011040:	6823      	ldr	r3, [r4, #0]
 8011042:	4620      	mov	r0, r4
 8011044:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011046:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801104a:	4718      	bx	r3
 801104c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011050:	f7ef bf26 	b.w	8000ea0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08011054 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011054:	b510      	push	{r4, lr}
 8011056:	4c04      	ldr	r4, [pc, #16]	; (8011068 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011058:	6082      	str	r2, [r0, #8]
 801105a:	2200      	movs	r2, #0
 801105c:	e9c0 4100 	strd	r4, r1, [r0]
 8011060:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011064:	bd10      	pop	{r4, pc}
 8011066:	bf00      	nop
 8011068:	0802dda8 	.word	0x0802dda8

0801106c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801106c:	6840      	ldr	r0, [r0, #4]
 801106e:	6803      	ldr	r3, [r0, #0]
 8011070:	681b      	ldr	r3, [r3, #0]
 8011072:	4718      	bx	r3

08011074 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011074:	4b06      	ldr	r3, [pc, #24]	; (8011090 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8011076:	60c1      	str	r1, [r0, #12]
 8011078:	094a      	lsrs	r2, r1, #5
 801107a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 801107e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011082:	4313      	orrs	r3, r2
 8011084:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011088:	4319      	orrs	r1, r3
 801108a:	8201      	strh	r1, [r0, #16]
 801108c:	4770      	bx	lr
 801108e:	bf00      	nop
 8011090:	fffff800 	.word	0xfffff800

08011094 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8011094:	f1a0 0008 	sub.w	r0, r0, #8
 8011098:	e7ec      	b.n	8011074 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 801109a:	bf00      	nop

0801109c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 801109c:	b508      	push	{r3, lr}
 801109e:	4b05      	ldr	r3, [pc, #20]	; (80110b4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80110a0:	6818      	ldr	r0, [r3, #0]
 80110a2:	6803      	ldr	r3, [r0, #0]
 80110a4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80110a8:	4798      	blx	r3
 80110aa:	1e43      	subs	r3, r0, #1
 80110ac:	4258      	negs	r0, r3
 80110ae:	4158      	adcs	r0, r3
 80110b0:	bd08      	pop	{r3, pc}
 80110b2:	bf00      	nop
 80110b4:	20012e74 	.word	0x20012e74

080110b8 <_ZN8touchgfx13PainterRGB565D1Ev>:
 80110b8:	4770      	bx	lr

080110ba <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80110ba:	3808      	subs	r0, #8
 80110bc:	4770      	bx	lr

080110be <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 80110be:	b430      	push	{r4, r5}
 80110c0:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 80110c4:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 80110c8:	8a02      	ldrh	r2, [r0, #16]
 80110ca:	9202      	str	r2, [sp, #8]
 80110cc:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80110d0:	68c2      	ldr	r2, [r0, #12]
 80110d2:	4629      	mov	r1, r5
 80110d4:	4620      	mov	r0, r4
 80110d6:	bc30      	pop	{r4, r5}
 80110d8:	f7f0 b9a6 	b.w	8001428 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080110dc <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80110dc:	f7f0 b9a2 	b.w	8001424 <_ZN8touchgfx5paint8tearDownEv>

080110e0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 80110e0:	b510      	push	{r4, lr}
 80110e2:	2114      	movs	r1, #20
 80110e4:	4604      	mov	r4, r0
 80110e6:	f017 ff4e 	bl	8028f86 <_ZdlPvj>
 80110ea:	4620      	mov	r0, r4
 80110ec:	bd10      	pop	{r4, pc}

080110ee <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80110ee:	f1a0 0008 	sub.w	r0, r0, #8
 80110f2:	e7f5      	b.n	80110e0 <_ZN8touchgfx13PainterRGB565D0Ev>

080110f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80110f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80110f6:	6803      	ldr	r3, [r0, #0]
 80110f8:	460d      	mov	r5, r1
 80110fa:	4604      	mov	r4, r0
 80110fc:	4601      	mov	r1, r0
 80110fe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8011100:	a802      	add	r0, sp, #8
 8011102:	4798      	blx	r3
 8011104:	6828      	ldr	r0, [r5, #0]
 8011106:	6869      	ldr	r1, [r5, #4]
 8011108:	466b      	mov	r3, sp
 801110a:	c303      	stmia	r3!, {r0, r1}
 801110c:	4668      	mov	r0, sp
 801110e:	4619      	mov	r1, r3
 8011110:	f7fe ffa4 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8011114:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011116:	b188      	cbz	r0, 801113c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011118:	6803      	ldr	r3, [r0, #0]
 801111a:	1d21      	adds	r1, r4, #4
 801111c:	68db      	ldr	r3, [r3, #12]
 801111e:	4798      	blx	r3
 8011120:	b160      	cbz	r0, 801113c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011122:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8011126:	2b00      	cmp	r3, #0
 8011128:	dd08      	ble.n	801113c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801112a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 801112e:	2d00      	cmp	r5, #0
 8011130:	dd04      	ble.n	801113c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011132:	4a2b      	ldr	r2, [pc, #172]	; (80111e0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8011134:	7812      	ldrb	r2, [r2, #0]
 8011136:	b11a      	cbz	r2, 8011140 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8011138:	2a01      	cmp	r2, #1
 801113a:	d029      	beq.n	8011190 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 801113c:	b004      	add	sp, #16
 801113e:	bd70      	pop	{r4, r5, r6, pc}
 8011140:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011144:	441d      	add	r5, r3
 8011146:	b2ad      	uxth	r5, r5
 8011148:	b22e      	sxth	r6, r5
 801114a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801114e:	42b3      	cmp	r3, r6
 8011150:	daf4      	bge.n	801113c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8011152:	6823      	ldr	r3, [r4, #0]
 8011154:	4669      	mov	r1, sp
 8011156:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011158:	4620      	mov	r0, r4
 801115a:	4798      	blx	r3
 801115c:	b940      	cbnz	r0, 8011170 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801115e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8011162:	2b01      	cmp	r3, #1
 8011164:	d004      	beq.n	8011170 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8011166:	3301      	adds	r3, #1
 8011168:	105b      	asrs	r3, r3, #1
 801116a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801116e:	e7f0      	b.n	8011152 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8011170:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8011174:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011178:	4413      	add	r3, r2
 801117a:	b29b      	uxth	r3, r3
 801117c:	441a      	add	r2, r3
 801117e:	b212      	sxth	r2, r2
 8011180:	4296      	cmp	r6, r2
 8011182:	f8ad 3002 	strh.w	r3, [sp, #2]
 8011186:	dae0      	bge.n	801114a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011188:	1aeb      	subs	r3, r5, r3
 801118a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801118e:	e7dc      	b.n	801114a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8011190:	f8bd 5000 	ldrh.w	r5, [sp]
 8011194:	441d      	add	r5, r3
 8011196:	b2ad      	uxth	r5, r5
 8011198:	b22e      	sxth	r6, r5
 801119a:	f9bd 3000 	ldrsh.w	r3, [sp]
 801119e:	42b3      	cmp	r3, r6
 80111a0:	dacc      	bge.n	801113c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80111a2:	6823      	ldr	r3, [r4, #0]
 80111a4:	4669      	mov	r1, sp
 80111a6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80111a8:	4620      	mov	r0, r4
 80111aa:	4798      	blx	r3
 80111ac:	b940      	cbnz	r0, 80111c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80111ae:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80111b2:	2b01      	cmp	r3, #1
 80111b4:	d004      	beq.n	80111c0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 80111b6:	3301      	adds	r3, #1
 80111b8:	105b      	asrs	r3, r3, #1
 80111ba:	f8ad 3004 	strh.w	r3, [sp, #4]
 80111be:	e7f0      	b.n	80111a2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 80111c0:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 80111c4:	f8bd 3000 	ldrh.w	r3, [sp]
 80111c8:	4413      	add	r3, r2
 80111ca:	b29b      	uxth	r3, r3
 80111cc:	441a      	add	r2, r3
 80111ce:	b212      	sxth	r2, r2
 80111d0:	4296      	cmp	r6, r2
 80111d2:	f8ad 3000 	strh.w	r3, [sp]
 80111d6:	dae0      	bge.n	801119a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80111d8:	1aeb      	subs	r3, r5, r3
 80111da:	f8ad 3004 	strh.w	r3, [sp, #4]
 80111de:	e7dc      	b.n	801119a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 80111e0:	20012e6c 	.word	0x20012e6c

080111e4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 80111e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80111e6:	6803      	ldr	r3, [r0, #0]
 80111e8:	4604      	mov	r4, r0
 80111ea:	4601      	mov	r1, r0
 80111ec:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80111ee:	4668      	mov	r0, sp
 80111f0:	4798      	blx	r3
 80111f2:	2100      	movs	r1, #0
 80111f4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80111f8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80111fc:	9102      	str	r1, [sp, #8]
 80111fe:	4668      	mov	r0, sp
 8011200:	a902      	add	r1, sp, #8
 8011202:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011206:	f8ad 300e 	strh.w	r3, [sp, #14]
 801120a:	f7fe ff27 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 801120e:	6823      	ldr	r3, [r4, #0]
 8011210:	4669      	mov	r1, sp
 8011212:	691b      	ldr	r3, [r3, #16]
 8011214:	4620      	mov	r0, r4
 8011216:	4798      	blx	r3
 8011218:	b004      	add	sp, #16
 801121a:	bd10      	pop	{r4, pc}

0801121c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 801121c:	2101      	movs	r1, #1
 801121e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8011222:	490b      	ldr	r1, [pc, #44]	; (8011250 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8011224:	6001      	str	r1, [r0, #0]
 8011226:	2200      	movs	r2, #0
 8011228:	21ff      	movs	r1, #255	; 0xff
 801122a:	8082      	strh	r2, [r0, #4]
 801122c:	80c2      	strh	r2, [r0, #6]
 801122e:	8102      	strh	r2, [r0, #8]
 8011230:	8142      	strh	r2, [r0, #10]
 8011232:	8182      	strh	r2, [r0, #12]
 8011234:	81c2      	strh	r2, [r0, #14]
 8011236:	8202      	strh	r2, [r0, #16]
 8011238:	8242      	strh	r2, [r0, #18]
 801123a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801123e:	61c2      	str	r2, [r0, #28]
 8011240:	8402      	strh	r2, [r0, #32]
 8011242:	8442      	strh	r2, [r0, #34]	; 0x22
 8011244:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8011248:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 801124c:	6282      	str	r2, [r0, #40]	; 0x28
 801124e:	4770      	bx	lr
 8011250:	0802de04 	.word	0x0802de04

08011254 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8011254:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8011258:	4602      	mov	r2, r0
 801125a:	cb03      	ldmia	r3!, {r0, r1}
 801125c:	6010      	str	r0, [r2, #0]
 801125e:	6051      	str	r1, [r2, #4]
 8011260:	4610      	mov	r0, r2
 8011262:	4770      	bx	lr

08011264 <_ZN8touchgfx4LineD1Ev>:
 8011264:	4770      	bx	lr

08011266 <_ZN8touchgfx4LineD0Ev>:
 8011266:	b510      	push	{r4, lr}
 8011268:	2170      	movs	r1, #112	; 0x70
 801126a:	4604      	mov	r4, r0
 801126c:	f017 fe8b 	bl	8028f86 <_ZdlPvj>
 8011270:	4620      	mov	r0, r4
 8011272:	bd10      	pop	{r4, pc}

08011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8011274:	b507      	push	{r0, r1, r2, lr}
 8011276:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 801127a:	ab01      	add	r3, sp, #4
 801127c:	6809      	ldr	r1, [r1, #0]
 801127e:	6800      	ldr	r0, [r0, #0]
 8011280:	f005 fab4 	bl	80167ec <_ZN8touchgfx6muldivElllRl>
 8011284:	b003      	add	sp, #12
 8011286:	f85d fb04 	ldr.w	pc, [sp], #4

0801128a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 801128a:	6800      	ldr	r0, [r0, #0]
 801128c:	2800      	cmp	r0, #0
 801128e:	bfb9      	ittee	lt
 8011290:	2320      	movlt	r3, #32
 8011292:	fb90 f0f3 	sdivlt	r0, r0, r3
 8011296:	301f      	addge	r0, #31
 8011298:	1140      	asrge	r0, r0, #5
 801129a:	4770      	bx	lr

0801129c <_ZNK8touchgfx4Line17invalidateContentEv>:
 801129c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112a0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 80112a4:	b089      	sub	sp, #36	; 0x24
 80112a6:	4604      	mov	r4, r0
 80112a8:	b353      	cbz	r3, 8011300 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 80112aa:	6803      	ldr	r3, [r0, #0]
 80112ac:	4601      	mov	r1, r0
 80112ae:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80112b0:	a802      	add	r0, sp, #8
 80112b2:	4798      	blx	r3
 80112b4:	2220      	movs	r2, #32
 80112b6:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 80112ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80112bc:	fb9a f0f2 	sdiv	r0, sl, r2
 80112c0:	fb91 f5f2 	sdiv	r5, r1, r2
 80112c4:	1b40      	subs	r0, r0, r5
 80112c6:	2800      	cmp	r0, #0
 80112c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80112ca:	fb93 f6f2 	sdiv	r6, r3, r2
 80112ce:	bfb8      	it	lt
 80112d0:	4240      	neglt	r0, r0
 80112d2:	0076      	lsls	r6, r6, #1
 80112d4:	4286      	cmp	r6, r0
 80112d6:	f8d4 b000 	ldr.w	fp, [r4]
 80112da:	dc0c      	bgt.n	80112f6 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 80112dc:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80112de:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 80112e2:	fb95 f0f2 	sdiv	r0, r5, r2
 80112e6:	fb98 f7f2 	sdiv	r7, r8, r2
 80112ea:	1bc0      	subs	r0, r0, r7
 80112ec:	2800      	cmp	r0, #0
 80112ee:	bfb8      	it	lt
 80112f0:	4240      	neglt	r0, r0
 80112f2:	4286      	cmp	r6, r0
 80112f4:	dd07      	ble.n	8011306 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 80112f6:	f8db 3010 	ldr.w	r3, [fp, #16]
 80112fa:	a902      	add	r1, sp, #8
 80112fc:	4620      	mov	r0, r4
 80112fe:	4798      	blx	r3
 8011300:	b009      	add	sp, #36	; 0x24
 8011302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011306:	3301      	adds	r3, #1
 8011308:	2002      	movs	r0, #2
 801130a:	f10d 0920 	add.w	r9, sp, #32
 801130e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011312:	4103      	asrs	r3, r0
 8011314:	f849 3d08 	str.w	r3, [r9, #-8]!
 8011318:	eb01 060a 	add.w	r6, r1, sl
 801131c:	eb08 0705 	add.w	r7, r8, r5
 8011320:	fb96 f6f0 	sdiv	r6, r6, r0
 8011324:	fb97 f7f0 	sdiv	r7, r7, r0
 8011328:	4648      	mov	r0, r9
 801132a:	9101      	str	r1, [sp, #4]
 801132c:	b236      	sxth	r6, r6
 801132e:	b23f      	sxth	r7, r7
 8011330:	fb96 f6f2 	sdiv	r6, r6, r2
 8011334:	fb97 f7f2 	sdiv	r7, r7, r2
 8011338:	f7ff ffa7 	bl	801128a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801133c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011340:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8011344:	9901      	ldr	r1, [sp, #4]
 8011346:	4293      	cmp	r3, r2
 8011348:	fa1f fe87 	uxth.w	lr, r7
 801134c:	fa1f fc86 	uxth.w	ip, r6
 8011350:	eba1 0a0a 	sub.w	sl, r1, sl
 8011354:	b280      	uxth	r0, r0
 8011356:	da54      	bge.n	8011402 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8011358:	ebac 0100 	sub.w	r1, ip, r0
 801135c:	b289      	uxth	r1, r1
 801135e:	4460      	add	r0, ip
 8011360:	f1ba 0f00 	cmp.w	sl, #0
 8011364:	b20e      	sxth	r6, r1
 8011366:	b280      	uxth	r0, r0
 8011368:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 801136c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8011370:	da29      	bge.n	80113c6 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8011372:	eba8 0505 	sub.w	r5, r8, r5
 8011376:	2d00      	cmp	r5, #0
 8011378:	da2a      	bge.n	80113d0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 801137a:	fa1f f88a 	uxth.w	r8, sl
 801137e:	eba0 0008 	sub.w	r0, r0, r8
 8011382:	fa1f f58c 	uxth.w	r5, ip
 8011386:	4443      	add	r3, r8
 8011388:	f8ad 0014 	strh.w	r0, [sp, #20]
 801138c:	1a59      	subs	r1, r3, r1
 801138e:	ebae 0005 	sub.w	r0, lr, r5
 8011392:	f8ad a010 	strh.w	sl, [sp, #16]
 8011396:	f8ad c012 	strh.w	ip, [sp, #18]
 801139a:	f8ad 0016 	strh.w	r0, [sp, #22]
 801139e:	f8ad 6018 	strh.w	r6, [sp, #24]
 80113a2:	f8ad 701a 	strh.w	r7, [sp, #26]
 80113a6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80113aa:	442a      	add	r2, r5
 80113ac:	eba2 0e0e 	sub.w	lr, r2, lr
 80113b0:	f8ad e01e 	strh.w	lr, [sp, #30]
 80113b4:	f8db 3010 	ldr.w	r3, [fp, #16]
 80113b8:	a904      	add	r1, sp, #16
 80113ba:	4620      	mov	r0, r4
 80113bc:	4798      	blx	r3
 80113be:	6823      	ldr	r3, [r4, #0]
 80113c0:	4649      	mov	r1, r9
 80113c2:	691b      	ldr	r3, [r3, #16]
 80113c4:	e79a      	b.n	80112fc <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 80113c6:	d003      	beq.n	80113d0 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 80113c8:	eba8 0505 	sub.w	r5, r8, r5
 80113cc:	2d00      	cmp	r5, #0
 80113ce:	dcd4      	bgt.n	801137a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 80113d0:	fa1f f88a 	uxth.w	r8, sl
 80113d4:	4443      	add	r3, r8
 80113d6:	fa1f f58c 	uxth.w	r5, ip
 80113da:	1a59      	subs	r1, r3, r1
 80113dc:	eba0 0008 	sub.w	r0, r0, r8
 80113e0:	ebae 0305 	sub.w	r3, lr, r5
 80113e4:	f8ad 6010 	strh.w	r6, [sp, #16]
 80113e8:	f8ad c012 	strh.w	ip, [sp, #18]
 80113ec:	f8ad 1014 	strh.w	r1, [sp, #20]
 80113f0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80113f4:	f8ad a018 	strh.w	sl, [sp, #24]
 80113f8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80113fc:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011400:	e7d3      	b.n	80113aa <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8011402:	ebae 0100 	sub.w	r1, lr, r0
 8011406:	b289      	uxth	r1, r1
 8011408:	4470      	add	r0, lr
 801140a:	f1ba 0f00 	cmp.w	sl, #0
 801140e:	b20f      	sxth	r7, r1
 8011410:	b280      	uxth	r0, r0
 8011412:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8011416:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 801141a:	da20      	bge.n	801145e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 801141c:	eba8 0505 	sub.w	r5, r8, r5
 8011420:	2d00      	cmp	r5, #0
 8011422:	da21      	bge.n	8011468 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011424:	fa1f f88e 	uxth.w	r8, lr
 8011428:	fa1f f58a 	uxth.w	r5, sl
 801142c:	4443      	add	r3, r8
 801142e:	442a      	add	r2, r5
 8011430:	f8ad e010 	strh.w	lr, [sp, #16]
 8011434:	1b40      	subs	r0, r0, r5
 8011436:	ebac 0e08 	sub.w	lr, ip, r8
 801143a:	1a51      	subs	r1, r2, r1
 801143c:	eba3 0c0c 	sub.w	ip, r3, ip
 8011440:	f8ad a012 	strh.w	sl, [sp, #18]
 8011444:	f8ad e014 	strh.w	lr, [sp, #20]
 8011448:	f8ad 0016 	strh.w	r0, [sp, #22]
 801144c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011450:	f8ad 701a 	strh.w	r7, [sp, #26]
 8011454:	f8ad c01c 	strh.w	ip, [sp, #28]
 8011458:	f8ad 101e 	strh.w	r1, [sp, #30]
 801145c:	e7aa      	b.n	80113b4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 801145e:	d003      	beq.n	8011468 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8011460:	eba8 0505 	sub.w	r5, r8, r5
 8011464:	2d00      	cmp	r5, #0
 8011466:	dcdd      	bgt.n	8011424 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8011468:	fa1f f58e 	uxth.w	r5, lr
 801146c:	fa1f f88a 	uxth.w	r8, sl
 8011470:	4442      	add	r2, r8
 8011472:	442b      	add	r3, r5
 8011474:	f8ad 7012 	strh.w	r7, [sp, #18]
 8011478:	1a51      	subs	r1, r2, r1
 801147a:	ebac 0705 	sub.w	r7, ip, r5
 801147e:	eba0 0008 	sub.w	r0, r0, r8
 8011482:	eba3 0c0c 	sub.w	ip, r3, ip
 8011486:	f8ad e010 	strh.w	lr, [sp, #16]
 801148a:	f8ad 7014 	strh.w	r7, [sp, #20]
 801148e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011492:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011496:	f8ad a01a 	strh.w	sl, [sp, #26]
 801149a:	f8ad c01c 	strh.w	ip, [sp, #28]
 801149e:	f8ad 001e 	strh.w	r0, [sp, #30]
 80114a2:	e787      	b.n	80113b4 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

080114a4 <_ZN8touchgfx7CWRUtil4sineEi>:
 80114a4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80114a8:	fb90 f2f3 	sdiv	r2, r0, r3
 80114ac:	fb02 0013 	mls	r0, r2, r3, r0
 80114b0:	2800      	cmp	r0, #0
 80114b2:	bfb8      	it	lt
 80114b4:	18c0      	addlt	r0, r0, r3
 80114b6:	285a      	cmp	r0, #90	; 0x5a
 80114b8:	4b09      	ldr	r3, [pc, #36]	; (80114e0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80114ba:	dc02      	bgt.n	80114c2 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80114bc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80114c0:	4770      	bx	lr
 80114c2:	28b4      	cmp	r0, #180	; 0xb4
 80114c4:	dc02      	bgt.n	80114cc <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 80114c6:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 80114ca:	e7f7      	b.n	80114bc <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 80114cc:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 80114d0:	bfd4      	ite	le
 80114d2:	38b4      	suble	r0, #180	; 0xb4
 80114d4:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 80114d8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80114dc:	4240      	negs	r0, r0
 80114de:	4770      	bx	lr
 80114e0:	0802ded0 	.word	0x0802ded0

080114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 80114e4:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80114e8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80114ea:	fb90 f2f3 	sdiv	r2, r0, r3
 80114ee:	fb02 0013 	mls	r0, r2, r3, r0
 80114f2:	2800      	cmp	r0, #0
 80114f4:	bfb8      	it	lt
 80114f6:	18c0      	addlt	r0, r0, r3
 80114f8:	1144      	asrs	r4, r0, #5
 80114fa:	f000 061f 	and.w	r6, r0, #31
 80114fe:	4620      	mov	r0, r4
 8011500:	f7ff ffd0 	bl	80114a4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011504:	4605      	mov	r5, r0
 8011506:	b90e      	cbnz	r6, 801150c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8011508:	b002      	add	sp, #8
 801150a:	bd70      	pop	{r4, r5, r6, pc}
 801150c:	1c60      	adds	r0, r4, #1
 801150e:	f7ff ffc9 	bl	80114a4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011512:	ab01      	add	r3, sp, #4
 8011514:	2220      	movs	r2, #32
 8011516:	4631      	mov	r1, r6
 8011518:	1b40      	subs	r0, r0, r5
 801151a:	f005 f967 	bl	80167ec <_ZN8touchgfx6muldivElllRl>
 801151e:	4428      	add	r0, r5
 8011520:	e7f2      	b.n	8011508 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08011522 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8011522:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8011526:	bf2c      	ite	cs
 8011528:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 801152c:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8011530:	2300      	movs	r3, #0
 8011532:	1899      	adds	r1, r3, r2
 8011534:	4288      	cmp	r0, r1
 8011536:	bf24      	itt	cs
 8011538:	1853      	addcs	r3, r2, r1
 801153a:	1a40      	subcs	r0, r0, r1
 801153c:	0892      	lsrs	r2, r2, #2
 801153e:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8011542:	d1f6      	bne.n	8011532 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8011544:	4618      	mov	r0, r3
 8011546:	4770      	bx	lr

08011548 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8011548:	b510      	push	{r4, lr}
 801154a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801154e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8011552:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8011556:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801155a:	13a4      	asrs	r4, r4, #14
 801155c:	139b      	asrs	r3, r3, #14
 801155e:	429c      	cmp	r4, r3
 8011560:	bfb8      	it	lt
 8011562:	461c      	movlt	r4, r3
 8011564:	2c01      	cmp	r4, #1
 8011566:	dd07      	ble.n	8011578 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8011568:	fb91 f1f4 	sdiv	r1, r1, r4
 801156c:	fb90 f0f4 	sdiv	r0, r0, r4
 8011570:	f7ff ffea 	bl	8011548 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011574:	4360      	muls	r0, r4
 8011576:	bd10      	pop	{r4, pc}
 8011578:	4340      	muls	r0, r0
 801157a:	fb01 0001 	mla	r0, r1, r1, r0
 801157e:	f7ff ffd0 	bl	8011522 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8011582:	e7f8      	b.n	8011576 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08011584 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8011584:	2800      	cmp	r0, #0
 8011586:	b508      	push	{r3, lr}
 8011588:	da05      	bge.n	8011596 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 801158a:	4240      	negs	r0, r0
 801158c:	f7ff fffa 	bl	8011584 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011590:	4240      	negs	r0, r0
 8011592:	b240      	sxtb	r0, r0
 8011594:	bd08      	pop	{r3, pc}
 8011596:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 801159a:	dc11      	bgt.n	80115c0 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 801159c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80115a0:	dd09      	ble.n	80115b6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 80115a2:	4340      	muls	r0, r0
 80115a4:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 80115a8:	f7ff ffbb 	bl	8011522 <_ZN8touchgfx7CWRUtil5isqrtEm>
 80115ac:	f7ff ffea 	bl	8011584 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80115b0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80115b4:	e7ed      	b.n	8011592 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 80115b6:	3003      	adds	r0, #3
 80115b8:	10c0      	asrs	r0, r0, #3
 80115ba:	4b02      	ldr	r3, [pc, #8]	; (80115c4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 80115bc:	5618      	ldrsb	r0, [r3, r0]
 80115be:	e7e9      	b.n	8011594 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80115c0:	2000      	movs	r0, #0
 80115c2:	e7e7      	b.n	8011594 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 80115c4:	0802de74 	.word	0x0802de74

080115c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 80115c8:	4281      	cmp	r1, r0
 80115ca:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80115cc:	460c      	mov	r4, r1
 80115ce:	4615      	mov	r5, r2
 80115d0:	dd07      	ble.n	80115e2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 80115d2:	4601      	mov	r1, r0
 80115d4:	4620      	mov	r0, r4
 80115d6:	f7ff fff7 	bl	80115c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80115da:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80115de:	b003      	add	sp, #12
 80115e0:	bd30      	pop	{r4, r5, pc}
 80115e2:	f7ff ffb1 	bl	8011548 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 80115e6:	6028      	str	r0, [r5, #0]
 80115e8:	2800      	cmp	r0, #0
 80115ea:	d0f8      	beq.n	80115de <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80115ec:	4602      	mov	r2, r0
 80115ee:	ab01      	add	r3, sp, #4
 80115f0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80115f4:	4620      	mov	r0, r4
 80115f6:	f005 f8f9 	bl	80167ec <_ZN8touchgfx6muldivElllRl>
 80115fa:	f7ff ffc3 	bl	8011584 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80115fe:	e7ee      	b.n	80115de <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011600 <_ZN8touchgfx4LineC1Ev>:
 8011600:	b510      	push	{r4, lr}
 8011602:	4604      	mov	r4, r0
 8011604:	f7ff fe0a 	bl	801121c <_ZN8touchgfx12CanvasWidgetC1Ev>
 8011608:	4b0c      	ldr	r3, [pc, #48]	; (801163c <_ZN8touchgfx4LineC1Ev+0x3c>)
 801160a:	6023      	str	r3, [r4, #0]
 801160c:	2220      	movs	r2, #32
 801160e:	2300      	movs	r3, #0
 8011610:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011612:	2212      	movs	r2, #18
 8011614:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8011618:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 801161c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011620:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011624:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8011628:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 801162c:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011630:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011634:	66e2      	str	r2, [r4, #108]	; 0x6c
 8011636:	60a3      	str	r3, [r4, #8]
 8011638:	4620      	mov	r0, r4
 801163a:	bd10      	pop	{r4, pc}
 801163c:	0802df90 	.word	0x0802df90

08011640 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011640:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011644:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011646:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011648:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801164a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801164c:	1aff      	subs	r7, r7, r3
 801164e:	4604      	mov	r4, r0
 8011650:	eba5 0502 	sub.w	r5, r5, r2
 8011654:	d142      	bne.n	80116dc <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011656:	b955      	cbnz	r5, 801166e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011658:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801165c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011660:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011664:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011668:	b002      	add	sp, #8
 801166a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801166e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011672:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011676:	4629      	mov	r1, r5
 8011678:	4642      	mov	r2, r8
 801167a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801167c:	f005 f8d5 	bl	801682a <_ZN8touchgfx6muldivElll>
 8011680:	2502      	movs	r5, #2
 8011682:	4642      	mov	r2, r8
 8011684:	fb90 f6f5 	sdiv	r6, r0, r5
 8011688:	4639      	mov	r1, r7
 801168a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801168c:	f005 f8cd 	bl	801682a <_ZN8touchgfx6muldivElll>
 8011690:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011694:	fb90 f5f5 	sdiv	r5, r0, r5
 8011698:	f1b9 0f00 	cmp.w	r9, #0
 801169c:	d067      	beq.n	801176e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801169e:	f1b9 0f02 	cmp.w	r9, #2
 80116a2:	d878      	bhi.n	8011796 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80116a4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80116a6:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80116a8:	1b93      	subs	r3, r2, r6
 80116aa:	1b5b      	subs	r3, r3, r5
 80116ac:	6463      	str	r3, [r4, #68]	; 0x44
 80116ae:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80116b0:	18e9      	adds	r1, r5, r3
 80116b2:	1b89      	subs	r1, r1, r6
 80116b4:	6561      	str	r1, [r4, #84]	; 0x54
 80116b6:	1b81      	subs	r1, r0, r6
 80116b8:	4429      	add	r1, r5
 80116ba:	64a1      	str	r1, [r4, #72]	; 0x48
 80116bc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80116be:	4430      	add	r0, r6
 80116c0:	186f      	adds	r7, r5, r1
 80116c2:	4432      	add	r2, r6
 80116c4:	1b49      	subs	r1, r1, r5
 80116c6:	4437      	add	r7, r6
 80116c8:	4428      	add	r0, r5
 80116ca:	4431      	add	r1, r6
 80116cc:	1b52      	subs	r2, r2, r5
 80116ce:	1b5b      	subs	r3, r3, r5
 80116d0:	65a7      	str	r7, [r4, #88]	; 0x58
 80116d2:	64e0      	str	r0, [r4, #76]	; 0x4c
 80116d4:	65e1      	str	r1, [r4, #92]	; 0x5c
 80116d6:	6522      	str	r2, [r4, #80]	; 0x50
 80116d8:	1b9b      	subs	r3, r3, r6
 80116da:	e05b      	b.n	8011794 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80116dc:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80116e0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80116e4:	2d00      	cmp	r5, #0
 80116e6:	d0c6      	beq.n	8011676 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80116e8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80116ec:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80116f0:	fb93 f2f8 	sdiv	r2, r3, r8
 80116f4:	fb08 3312 	mls	r3, r8, r2, r3
 80116f8:	b353      	cbz	r3, 8011750 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80116fa:	fb98 f2f3 	sdiv	r2, r8, r3
 80116fe:	fb03 8812 	mls	r8, r3, r2, r8
 8011702:	f1b8 0f00 	cmp.w	r8, #0
 8011706:	d1f3      	bne.n	80116f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8011708:	2b01      	cmp	r3, #1
 801170a:	bf1c      	itt	ne
 801170c:	fb95 f5f3 	sdivne	r5, r5, r3
 8011710:	fb97 f7f3 	sdivne	r7, r7, r3
 8011714:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8011718:	f24b 5104 	movw	r1, #46340	; 0xb504
 801171c:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011720:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011724:	428b      	cmp	r3, r1
 8011726:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801172a:	4608      	mov	r0, r1
 801172c:	dd01      	ble.n	8011732 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 801172e:	428a      	cmp	r2, r1
 8011730:	dc10      	bgt.n	8011754 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011732:	fb90 f3f3 	sdiv	r3, r0, r3
 8011736:	fb90 f2f2 	sdiv	r2, r0, r2
 801173a:	4293      	cmp	r3, r2
 801173c:	bfa8      	it	ge
 801173e:	4613      	movge	r3, r2
 8011740:	435f      	muls	r7, r3
 8011742:	435d      	muls	r5, r3
 8011744:	4629      	mov	r1, r5
 8011746:	4638      	mov	r0, r7
 8011748:	f7ff fefe 	bl	8011548 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801174c:	4680      	mov	r8, r0
 801174e:	e792      	b.n	8011676 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011750:	4643      	mov	r3, r8
 8011752:	e7d9      	b.n	8011708 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011754:	fb93 f3f1 	sdiv	r3, r3, r1
 8011758:	fb92 f2f1 	sdiv	r2, r2, r1
 801175c:	4293      	cmp	r3, r2
 801175e:	bfcc      	ite	gt
 8011760:	3301      	addgt	r3, #1
 8011762:	1c53      	addle	r3, r2, #1
 8011764:	fb97 f7f3 	sdiv	r7, r7, r3
 8011768:	fb95 f5f3 	sdiv	r5, r5, r3
 801176c:	e7ea      	b.n	8011744 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801176e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011770:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011772:	1b93      	subs	r3, r2, r6
 8011774:	6463      	str	r3, [r4, #68]	; 0x44
 8011776:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011778:	18e9      	adds	r1, r5, r3
 801177a:	6561      	str	r1, [r4, #84]	; 0x54
 801177c:	1b81      	subs	r1, r0, r6
 801177e:	64a1      	str	r1, [r4, #72]	; 0x48
 8011780:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011782:	4430      	add	r0, r6
 8011784:	186f      	adds	r7, r5, r1
 8011786:	4432      	add	r2, r6
 8011788:	1b49      	subs	r1, r1, r5
 801178a:	65a7      	str	r7, [r4, #88]	; 0x58
 801178c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801178e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011790:	6522      	str	r2, [r4, #80]	; 0x50
 8011792:	1b5b      	subs	r3, r3, r5
 8011794:	6623      	str	r3, [r4, #96]	; 0x60
 8011796:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8011798:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801179a:	9200      	str	r2, [sp, #0]
 801179c:	9301      	str	r3, [sp, #4]
 801179e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80117a2:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80117a6:	680f      	ldr	r7, [r1, #0]
 80117a8:	9800      	ldr	r0, [sp, #0]
 80117aa:	42ba      	cmp	r2, r7
 80117ac:	bfa8      	it	ge
 80117ae:	463a      	movge	r2, r7
 80117b0:	4287      	cmp	r7, r0
 80117b2:	bfc8      	it	gt
 80117b4:	9700      	strgt	r7, [sp, #0]
 80117b6:	690f      	ldr	r7, [r1, #16]
 80117b8:	9801      	ldr	r0, [sp, #4]
 80117ba:	42bb      	cmp	r3, r7
 80117bc:	bfa8      	it	ge
 80117be:	463b      	movge	r3, r7
 80117c0:	3104      	adds	r1, #4
 80117c2:	4287      	cmp	r7, r0
 80117c4:	bfc8      	it	gt
 80117c6:	9701      	strgt	r7, [sp, #4]
 80117c8:	458c      	cmp	ip, r1
 80117ca:	d1ec      	bne.n	80117a6 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80117cc:	4668      	mov	r0, sp
 80117ce:	2720      	movs	r7, #32
 80117d0:	fb92 f8f7 	sdiv	r8, r2, r7
 80117d4:	fb93 f7f7 	sdiv	r7, r3, r7
 80117d8:	f7ff fd57 	bl	801128a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80117dc:	4682      	mov	sl, r0
 80117de:	a801      	add	r0, sp, #4
 80117e0:	f7ff fd53 	bl	801128a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80117e4:	ebaa 0208 	sub.w	r2, sl, r8
 80117e8:	1bc0      	subs	r0, r0, r7
 80117ea:	f1b9 0f01 	cmp.w	r9, #1
 80117ee:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80117f2:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80117f6:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80117fa:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80117fe:	f47f af33 	bne.w	8011668 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011802:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011804:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011806:	1b83      	subs	r3, r0, r6
 8011808:	6463      	str	r3, [r4, #68]	; 0x44
 801180a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801180c:	18ea      	adds	r2, r5, r3
 801180e:	6562      	str	r2, [r4, #84]	; 0x54
 8011810:	1b8a      	subs	r2, r1, r6
 8011812:	64a2      	str	r2, [r4, #72]	; 0x48
 8011814:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011816:	4431      	add	r1, r6
 8011818:	18af      	adds	r7, r5, r2
 801181a:	4406      	add	r6, r0
 801181c:	1b52      	subs	r2, r2, r5
 801181e:	1b5d      	subs	r5, r3, r5
 8011820:	65a7      	str	r7, [r4, #88]	; 0x58
 8011822:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011824:	65e2      	str	r2, [r4, #92]	; 0x5c
 8011826:	6526      	str	r6, [r4, #80]	; 0x50
 8011828:	6625      	str	r5, [r4, #96]	; 0x60
 801182a:	e71d      	b.n	8011668 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

0801182c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 801182c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801182e:	428b      	cmp	r3, r1
 8011830:	d102      	bne.n	8011838 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011832:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011834:	4293      	cmp	r3, r2
 8011836:	d003      	beq.n	8011840 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8011838:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 801183c:	f7ff bf00 	b.w	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011840:	4770      	bx	lr

08011842 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011842:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011844:	428b      	cmp	r3, r1
 8011846:	d102      	bne.n	801184e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011848:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801184a:	4293      	cmp	r3, r2
 801184c:	d003      	beq.n	8011856 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801184e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011852:	f7ff bef5 	b.w	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011856:	4770      	bx	lr

08011858 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011858:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801185c:	f7ff bef0 	b.w	8011640 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011860 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011864:	b0a0      	sub	sp, #128	; 0x80
 8011866:	4604      	mov	r4, r0
 8011868:	460a      	mov	r2, r1
 801186a:	4601      	mov	r1, r0
 801186c:	a804      	add	r0, sp, #16
 801186e:	f014 fc47 	bl	8026100 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011872:	2300      	movs	r3, #0
 8011874:	9301      	str	r3, [sp, #4]
 8011876:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801187a:	2b01      	cmp	r3, #1
 801187c:	d17c      	bne.n	8011978 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801187e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011880:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011882:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011884:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011886:	1ac0      	subs	r0, r0, r3
 8011888:	eba1 0102 	sub.w	r1, r1, r2
 801188c:	d437      	bmi.n	80118fe <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801188e:	2900      	cmp	r1, #0
 8011890:	aa01      	add	r2, sp, #4
 8011892:	db2e      	blt.n	80118f2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8011894:	f7ff fe98 	bl	80115c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011898:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801189c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801189e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80118a0:	a804      	add	r0, sp, #16
 80118a2:	f014 fdad 	bl	8026400 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80118a6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80118a8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80118aa:	a804      	add	r0, sp, #16
 80118ac:	f014 fdf5 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80118b0:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80118b2:	2db3      	cmp	r5, #179	; 0xb3
 80118b4:	dc33      	bgt.n	801191e <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80118b6:	eba6 0805 	sub.w	r8, r6, r5
 80118ba:	4640      	mov	r0, r8
 80118bc:	f7ff fdf2 	bl	80114a4 <_ZN8touchgfx7CWRUtil4sineEi>
 80118c0:	a902      	add	r1, sp, #8
 80118c2:	9002      	str	r0, [sp, #8]
 80118c4:	a801      	add	r0, sp, #4
 80118c6:	f7ff fcd5 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80118ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80118cc:	1847      	adds	r7, r0, r1
 80118ce:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80118d2:	f7ff fde7 	bl	80114a4 <_ZN8touchgfx7CWRUtil4sineEi>
 80118d6:	a903      	add	r1, sp, #12
 80118d8:	9003      	str	r0, [sp, #12]
 80118da:	a801      	add	r0, sp, #4
 80118dc:	f7ff fcca 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80118e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80118e2:	4639      	mov	r1, r7
 80118e4:	1a12      	subs	r2, r2, r0
 80118e6:	a804      	add	r0, sp, #16
 80118e8:	f014 fdd7 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80118ec:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80118ee:	441d      	add	r5, r3
 80118f0:	e7df      	b.n	80118b2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80118f2:	4249      	negs	r1, r1
 80118f4:	f7ff fe68 	bl	80115c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80118f8:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 80118fc:	e7ce      	b.n	801189c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80118fe:	2900      	cmp	r1, #0
 8011900:	f1c0 0000 	rsb	r0, r0, #0
 8011904:	aa01      	add	r2, sp, #4
 8011906:	db04      	blt.n	8011912 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8011908:	f7ff fe5e 	bl	80115c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801190c:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011910:	e7c4      	b.n	801189c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011912:	4249      	negs	r1, r1
 8011914:	f7ff fe58 	bl	80115c8 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011918:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 801191c:	e7be      	b.n	801189c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 801191e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011920:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011922:	a804      	add	r0, sp, #16
 8011924:	f014 fdb9 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011928:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801192a:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801192c:	a804      	add	r0, sp, #16
 801192e:	f014 fdb4 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011932:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011934:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8011938:	2d00      	cmp	r5, #0
 801193a:	dd31      	ble.n	80119a0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 801193c:	eb05 0806 	add.w	r8, r5, r6
 8011940:	4640      	mov	r0, r8
 8011942:	f7ff fdaf 	bl	80114a4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011946:	a902      	add	r1, sp, #8
 8011948:	9002      	str	r0, [sp, #8]
 801194a:	a801      	add	r0, sp, #4
 801194c:	f7ff fc92 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011950:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011952:	1847      	adds	r7, r0, r1
 8011954:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011958:	f7ff fda4 	bl	80114a4 <_ZN8touchgfx7CWRUtil4sineEi>
 801195c:	a903      	add	r1, sp, #12
 801195e:	9003      	str	r0, [sp, #12]
 8011960:	a801      	add	r0, sp, #4
 8011962:	f7ff fc87 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011966:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011968:	4639      	mov	r1, r7
 801196a:	1a12      	subs	r2, r2, r0
 801196c:	a804      	add	r0, sp, #16
 801196e:	f014 fd94 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011972:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011974:	1aed      	subs	r5, r5, r3
 8011976:	e7df      	b.n	8011938 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011978:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801197a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801197c:	a804      	add	r0, sp, #16
 801197e:	f014 fd3f 	bl	8026400 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011982:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011984:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011986:	a804      	add	r0, sp, #16
 8011988:	f014 fd87 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801198c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801198e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011990:	a804      	add	r0, sp, #16
 8011992:	f014 fd82 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011996:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011998:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801199a:	a804      	add	r0, sp, #16
 801199c:	f014 fd7d 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80119a0:	21ff      	movs	r1, #255	; 0xff
 80119a2:	a804      	add	r0, sp, #16
 80119a4:	f014 fc68 	bl	8026278 <_ZN8touchgfx6Canvas6renderEh>
 80119a8:	4b04      	ldr	r3, [pc, #16]	; (80119bc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80119aa:	9304      	str	r3, [sp, #16]
 80119ac:	4604      	mov	r4, r0
 80119ae:	a80c      	add	r0, sp, #48	; 0x30
 80119b0:	f001 f8cc 	bl	8012b4c <_ZN8touchgfx7OutlineD1Ev>
 80119b4:	4620      	mov	r0, r4
 80119b6:	b020      	add	sp, #128	; 0x80
 80119b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80119bc:	0802e7b8 	.word	0x0802e7b8

080119c0 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80119c0:	2000      	movs	r0, #0
 80119c2:	4770      	bx	lr

080119c4 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80119c4:	4b07      	ldr	r3, [pc, #28]	; (80119e4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80119c6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80119c8:	881b      	ldrh	r3, [r3, #0]
 80119ca:	4293      	cmp	r3, r2
 80119cc:	bf81      	itttt	hi
 80119ce:	4b06      	ldrhi	r3, [pc, #24]	; (80119e8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80119d0:	681b      	ldrhi	r3, [r3, #0]
 80119d2:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80119d6:	7858      	ldrbhi	r0, [r3, #1]
 80119d8:	bf8c      	ite	hi
 80119da:	f000 0003 	andhi.w	r0, r0, #3
 80119de:	2000      	movls	r0, #0
 80119e0:	4770      	bx	lr
 80119e2:	bf00      	nop
 80119e4:	20012ed0 	.word	0x20012ed0
 80119e8:	20012ecc 	.word	0x20012ecc

080119ec <_ZN8touchgfx8TextAreaD1Ev>:
 80119ec:	4770      	bx	lr
	...

080119f0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80119f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119f4:	4b10      	ldr	r3, [pc, #64]	; (8011a38 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80119f6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80119f8:	881b      	ldrh	r3, [r3, #0]
 80119fa:	428b      	cmp	r3, r1
 80119fc:	4604      	mov	r4, r0
 80119fe:	d918      	bls.n	8011a32 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011a00:	6803      	ldr	r3, [r0, #0]
 8011a02:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8011a04:	4b0d      	ldr	r3, [pc, #52]	; (8011a3c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8011a06:	6818      	ldr	r0, [r3, #0]
 8011a08:	f7f6 fcca 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8011a0c:	6823      	ldr	r3, [r4, #0]
 8011a0e:	4606      	mov	r6, r0
 8011a10:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011a12:	4620      	mov	r0, r4
 8011a14:	4798      	blx	r3
 8011a16:	6823      	ldr	r3, [r4, #0]
 8011a18:	4607      	mov	r7, r0
 8011a1a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011a1e:	4620      	mov	r0, r4
 8011a20:	4798      	blx	r3
 8011a22:	463a      	mov	r2, r7
 8011a24:	4603      	mov	r3, r0
 8011a26:	4631      	mov	r1, r6
 8011a28:	4620      	mov	r0, r4
 8011a2a:	46ac      	mov	ip, r5
 8011a2c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011a30:	4760      	bx	ip
 8011a32:	2000      	movs	r0, #0
 8011a34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a38:	20012ed0 	.word	0x20012ed0
 8011a3c:	20012ed8 	.word	0x20012ed8

08011a40 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011a40:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011a44:	4b17      	ldr	r3, [pc, #92]	; (8011aa4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011a46:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011a48:	881b      	ldrh	r3, [r3, #0]
 8011a4a:	428b      	cmp	r3, r1
 8011a4c:	4604      	mov	r4, r0
 8011a4e:	d926      	bls.n	8011a9e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011a50:	4b15      	ldr	r3, [pc, #84]	; (8011aa8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011a52:	681b      	ldr	r3, [r3, #0]
 8011a54:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011a58:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011a5c:	4b13      	ldr	r3, [pc, #76]	; (8011aac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011a5e:	7855      	ldrb	r5, [r2, #1]
 8011a60:	681b      	ldr	r3, [r3, #0]
 8011a62:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011a66:	6833      	ldr	r3, [r6, #0]
 8011a68:	69df      	ldr	r7, [r3, #28]
 8011a6a:	4b11      	ldr	r3, [pc, #68]	; (8011ab0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011a6c:	6818      	ldr	r0, [r3, #0]
 8011a6e:	f7f6 fc97 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8011a72:	6823      	ldr	r3, [r4, #0]
 8011a74:	4680      	mov	r8, r0
 8011a76:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011a78:	4620      	mov	r0, r4
 8011a7a:	4798      	blx	r3
 8011a7c:	6823      	ldr	r3, [r4, #0]
 8011a7e:	4681      	mov	r9, r0
 8011a80:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011a84:	4620      	mov	r0, r4
 8011a86:	4798      	blx	r3
 8011a88:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011a8c:	9000      	str	r0, [sp, #0]
 8011a8e:	464b      	mov	r3, r9
 8011a90:	4642      	mov	r2, r8
 8011a92:	4629      	mov	r1, r5
 8011a94:	4630      	mov	r0, r6
 8011a96:	47b8      	blx	r7
 8011a98:	b003      	add	sp, #12
 8011a9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011a9e:	2000      	movs	r0, #0
 8011aa0:	e7fa      	b.n	8011a98 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011aa2:	bf00      	nop
 8011aa4:	20012ed0 	.word	0x20012ed0
 8011aa8:	20012ecc 	.word	0x20012ecc
 8011aac:	20012ed4 	.word	0x20012ed4
 8011ab0:	20012ed8 	.word	0x20012ed8

08011ab4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011ab4:	b40e      	push	{r1, r2, r3}
 8011ab6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011aba:	4b2f      	ldr	r3, [pc, #188]	; (8011b78 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011abc:	881a      	ldrh	r2, [r3, #0]
 8011abe:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011ac0:	429a      	cmp	r2, r3
 8011ac2:	b09d      	sub	sp, #116	; 0x74
 8011ac4:	4604      	mov	r4, r0
 8011ac6:	d954      	bls.n	8011b72 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011ac8:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8011b7c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8011acc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011b80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011ad0:	aa26      	add	r2, sp, #152	; 0x98
 8011ad2:	9202      	str	r2, [sp, #8]
 8011ad4:	f8d9 2000 	ldr.w	r2, [r9]
 8011ad8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011adc:	f8d8 3000 	ldr.w	r3, [r8]
 8011ae0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011ae4:	682b      	ldr	r3, [r5, #0]
 8011ae6:	4628      	mov	r0, r5
 8011ae8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011aea:	4798      	blx	r3
 8011aec:	b207      	sxth	r7, r0
 8011aee:	4606      	mov	r6, r0
 8011af0:	a803      	add	r0, sp, #12
 8011af2:	f005 fa57 	bl	8016fa4 <_ZN8touchgfx12TextProviderC1Ev>
 8011af6:	682b      	ldr	r3, [r5, #0]
 8011af8:	4628      	mov	r0, r5
 8011afa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011afc:	4798      	blx	r3
 8011afe:	682b      	ldr	r3, [r5, #0]
 8011b00:	4682      	mov	sl, r0
 8011b02:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011b04:	4628      	mov	r0, r5
 8011b06:	4798      	blx	r3
 8011b08:	4653      	mov	r3, sl
 8011b0a:	9000      	str	r0, [sp, #0]
 8011b0c:	9a02      	ldr	r2, [sp, #8]
 8011b0e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011b10:	a803      	add	r0, sp, #12
 8011b12:	f005 faa2 	bl	801705a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011b16:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011b18:	f8d9 3000 	ldr.w	r3, [r9]
 8011b1c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011b20:	8925      	ldrh	r5, [r4, #8]
 8011b22:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011b26:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011b2a:	eba5 050c 	sub.w	r5, r5, ip
 8011b2e:	784a      	ldrb	r2, [r1, #1]
 8011b30:	f8d8 3000 	ldr.w	r3, [r8]
 8011b34:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011b38:	b22d      	sxth	r5, r5
 8011b3a:	9500      	str	r5, [sp, #0]
 8011b3c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011b40:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011b44:	a803      	add	r0, sp, #12
 8011b46:	f002 feed 	bl	8014924 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011b4a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8011b4e:	18b9      	adds	r1, r7, r2
 8011b50:	2900      	cmp	r1, #0
 8011b52:	b203      	sxth	r3, r0
 8011b54:	dd0b      	ble.n	8011b6e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011b56:	3b01      	subs	r3, #1
 8011b58:	fb13 f302 	smulbb	r3, r3, r2
 8011b5c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011b60:	b21f      	sxth	r7, r3
 8011b62:	4638      	mov	r0, r7
 8011b64:	b01d      	add	sp, #116	; 0x74
 8011b66:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011b6a:	b003      	add	sp, #12
 8011b6c:	4770      	bx	lr
 8011b6e:	2b00      	cmp	r3, #0
 8011b70:	dcf7      	bgt.n	8011b62 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011b72:	2700      	movs	r7, #0
 8011b74:	e7f5      	b.n	8011b62 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011b76:	bf00      	nop
 8011b78:	20012ed0 	.word	0x20012ed0
 8011b7c:	20012ecc 	.word	0x20012ecc
 8011b80:	20012ed4 	.word	0x20012ed4

08011b84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b88:	4bbc      	ldr	r3, [pc, #752]	; (8011e7c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011b8a:	460c      	mov	r4, r1
 8011b8c:	881b      	ldrh	r3, [r3, #0]
 8011b8e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011b90:	428b      	cmp	r3, r1
 8011b92:	b0a9      	sub	sp, #164	; 0xa4
 8011b94:	4680      	mov	r8, r0
 8011b96:	d809      	bhi.n	8011bac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011b98:	2300      	movs	r3, #0
 8011b9a:	f04f 32ff 	mov.w	r2, #4294967295
 8011b9e:	e9c0 3200 	strd	r3, r2, [r0]
 8011ba2:	6083      	str	r3, [r0, #8]
 8011ba4:	4640      	mov	r0, r8
 8011ba6:	b029      	add	sp, #164	; 0xa4
 8011ba8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011bac:	4eb4      	ldr	r6, [pc, #720]	; (8011e80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011bae:	6833      	ldr	r3, [r6, #0]
 8011bb0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011bb4:	4bb3      	ldr	r3, [pc, #716]	; (8011e84 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011bb6:	681b      	ldr	r3, [r3, #0]
 8011bb8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011bbc:	4bb2      	ldr	r3, [pc, #712]	; (8011e88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011bbe:	6818      	ldr	r0, [r3, #0]
 8011bc0:	f7f6 fbee 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8011bc4:	682b      	ldr	r3, [r5, #0]
 8011bc6:	4681      	mov	r9, r0
 8011bc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011bca:	4628      	mov	r0, r5
 8011bcc:	4798      	blx	r3
 8011bce:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8011bd0:	b203      	sxth	r3, r0
 8011bd2:	4407      	add	r7, r0
 8011bd4:	9304      	str	r3, [sp, #16]
 8011bd6:	b2bb      	uxth	r3, r7
 8011bd8:	9303      	str	r3, [sp, #12]
 8011bda:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011bde:	4682      	mov	sl, r0
 8011be0:	a80f      	add	r0, sp, #60	; 0x3c
 8011be2:	2b00      	cmp	r3, #0
 8011be4:	f040 80a6 	bne.w	8011d34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011be8:	f005 f9dc 	bl	8016fa4 <_ZN8touchgfx12TextProviderC1Ev>
 8011bec:	682b      	ldr	r3, [r5, #0]
 8011bee:	4628      	mov	r0, r5
 8011bf0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011bf2:	4798      	blx	r3
 8011bf4:	682b      	ldr	r3, [r5, #0]
 8011bf6:	4606      	mov	r6, r0
 8011bf8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011bfa:	4628      	mov	r0, r5
 8011bfc:	4798      	blx	r3
 8011bfe:	6823      	ldr	r3, [r4, #0]
 8011c00:	4607      	mov	r7, r0
 8011c02:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011c04:	4620      	mov	r0, r4
 8011c06:	4798      	blx	r3
 8011c08:	6823      	ldr	r3, [r4, #0]
 8011c0a:	4683      	mov	fp, r0
 8011c0c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011c10:	4620      	mov	r0, r4
 8011c12:	4798      	blx	r3
 8011c14:	463b      	mov	r3, r7
 8011c16:	e9cd b000 	strd	fp, r0, [sp]
 8011c1a:	4649      	mov	r1, r9
 8011c1c:	4632      	mov	r2, r6
 8011c1e:	a80f      	add	r0, sp, #60	; 0x3c
 8011c20:	f005 fa30 	bl	8017084 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011c24:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011c28:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011e80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011c2c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011c30:	f04f 0600 	mov.w	r6, #0
 8011c34:	bf0c      	ite	eq
 8011c36:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011c3a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011c3e:	4637      	mov	r7, r6
 8011c40:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011c42:	f8db 3000 	ldr.w	r3, [fp]
 8011c46:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011c4a:	4629      	mov	r1, r5
 8011c4c:	785b      	ldrb	r3, [r3, #1]
 8011c4e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011c52:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011c56:	a80f      	add	r0, sp, #60	; 0x3c
 8011c58:	f002 fb7f 	bl	801435a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011c5c:	9b03      	ldr	r3, [sp, #12]
 8011c5e:	4286      	cmp	r6, r0
 8011c60:	bfb8      	it	lt
 8011c62:	4606      	movlt	r6, r0
 8011c64:	3701      	adds	r7, #1
 8011c66:	eba9 0903 	sub.w	r9, r9, r3
 8011c6a:	a80f      	add	r0, sp, #60	; 0x3c
 8011c6c:	b236      	sxth	r6, r6
 8011c6e:	b2bf      	uxth	r7, r7
 8011c70:	fa0f f989 	sxth.w	r9, r9
 8011c74:	f005 f9bd 	bl	8016ff2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011c78:	b918      	cbnz	r0, 8011c82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011c7a:	7a2b      	ldrb	r3, [r5, #8]
 8011c7c:	444b      	add	r3, r9
 8011c7e:	2b00      	cmp	r3, #0
 8011c80:	dcde      	bgt.n	8011c40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011c82:	9b03      	ldr	r3, [sp, #12]
 8011c84:	9a04      	ldr	r2, [sp, #16]
 8011c86:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011c8a:	fb13 f707 	smulbb	r7, r3, r7
 8011c8e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011c90:	1aff      	subs	r7, r7, r3
 8011c92:	b2bf      	uxth	r7, r7
 8011c94:	b23b      	sxth	r3, r7
 8011c96:	429a      	cmp	r2, r3
 8011c98:	bfa8      	it	ge
 8011c9a:	4657      	movge	r7, sl
 8011c9c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011ca0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011ca4:	6823      	ldr	r3, [r4, #0]
 8011ca6:	bf08      	it	eq
 8011ca8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011cac:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011cae:	bf18      	it	ne
 8011cb0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011cb4:	4620      	mov	r0, r4
 8011cb6:	4798      	blx	r3
 8011cb8:	444f      	add	r7, r9
 8011cba:	fa1f f987 	uxth.w	r9, r7
 8011cbe:	2801      	cmp	r0, #1
 8011cc0:	fa0f f789 	sxth.w	r7, r9
 8011cc4:	b2b3      	uxth	r3, r6
 8011cc6:	f000 80e1 	beq.w	8011e8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011cca:	2802      	cmp	r0, #2
 8011ccc:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011cd0:	f000 80e2 	beq.w	8011e98 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011cd4:	7aea      	ldrb	r2, [r5, #11]
 8011cd6:	7b2d      	ldrb	r5, [r5, #12]
 8011cd8:	b236      	sxth	r6, r6
 8011cda:	1ab6      	subs	r6, r6, r2
 8011cdc:	442a      	add	r2, r5
 8011cde:	4413      	add	r3, r2
 8011ce0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011ce4:	fa1f fa86 	uxth.w	sl, r6
 8011ce8:	b29b      	uxth	r3, r3
 8011cea:	2a02      	cmp	r2, #2
 8011cec:	fa0f fb8a 	sxth.w	fp, sl
 8011cf0:	b21e      	sxth	r6, r3
 8011cf2:	f000 80d5 	beq.w	8011ea0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011cf6:	2a03      	cmp	r2, #3
 8011cf8:	f000 80dd 	beq.w	8011eb6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011cfc:	2a01      	cmp	r2, #1
 8011cfe:	f040 80e5 	bne.w	8011ecc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011d02:	8925      	ldrh	r5, [r4, #8]
 8011d04:	4633      	mov	r3, r6
 8011d06:	eba5 0909 	sub.w	r9, r5, r9
 8011d0a:	463e      	mov	r6, r7
 8011d0c:	465d      	mov	r5, fp
 8011d0e:	461f      	mov	r7, r3
 8011d10:	fa0f fb89 	sxth.w	fp, r9
 8011d14:	4b5c      	ldr	r3, [pc, #368]	; (8011e88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011d16:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011d18:	6818      	ldr	r0, [r3, #0]
 8011d1a:	f7f6 fb41 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8011d1e:	f8a8 b000 	strh.w	fp, [r8]
 8011d22:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011d26:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011d2a:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011d2e:	f8c8 0008 	str.w	r0, [r8, #8]
 8011d32:	e737      	b.n	8011ba4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011d34:	f005 f936 	bl	8016fa4 <_ZN8touchgfx12TextProviderC1Ev>
 8011d38:	682b      	ldr	r3, [r5, #0]
 8011d3a:	4628      	mov	r0, r5
 8011d3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011d3e:	4798      	blx	r3
 8011d40:	682b      	ldr	r3, [r5, #0]
 8011d42:	4607      	mov	r7, r0
 8011d44:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011d46:	4628      	mov	r0, r5
 8011d48:	4798      	blx	r3
 8011d4a:	6823      	ldr	r3, [r4, #0]
 8011d4c:	4683      	mov	fp, r0
 8011d4e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011d50:	4620      	mov	r0, r4
 8011d52:	4798      	blx	r3
 8011d54:	6822      	ldr	r2, [r4, #0]
 8011d56:	9005      	str	r0, [sp, #20]
 8011d58:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8011d5c:	4620      	mov	r0, r4
 8011d5e:	4790      	blx	r2
 8011d60:	9b05      	ldr	r3, [sp, #20]
 8011d62:	9001      	str	r0, [sp, #4]
 8011d64:	463a      	mov	r2, r7
 8011d66:	4649      	mov	r1, r9
 8011d68:	9300      	str	r3, [sp, #0]
 8011d6a:	a80f      	add	r0, sp, #60	; 0x3c
 8011d6c:	465b      	mov	r3, fp
 8011d6e:	f005 f989 	bl	8017084 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011d72:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011d76:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011d7a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011d7c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011d80:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011d84:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011d88:	bf0a      	itet	eq
 8011d8a:	464a      	moveq	r2, r9
 8011d8c:	461a      	movne	r2, r3
 8011d8e:	4699      	moveq	r9, r3
 8011d90:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011d94:	1ad2      	subs	r2, r2, r3
 8011d96:	6833      	ldr	r3, [r6, #0]
 8011d98:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011d9c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011da0:	af0f      	add	r7, sp, #60	; 0x3c
 8011da2:	7859      	ldrb	r1, [r3, #1]
 8011da4:	9707      	str	r7, [sp, #28]
 8011da6:	2300      	movs	r3, #0
 8011da8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011dac:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011db0:	f88d 1020 	strb.w	r1, [sp, #32]
 8011db4:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011db8:	9509      	str	r5, [sp, #36]	; 0x24
 8011dba:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011dbe:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011dc2:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011dc6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011dca:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011dce:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011dd2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011dd6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011dda:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011dde:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011de2:	b350      	cbz	r0, 8011e3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011de4:	682b      	ldr	r3, [r5, #0]
 8011de6:	4628      	mov	r0, r5
 8011de8:	695b      	ldr	r3, [r3, #20]
 8011dea:	4798      	blx	r3
 8011dec:	4607      	mov	r7, r0
 8011dee:	b320      	cbz	r0, 8011e3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011df0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011df2:	6803      	ldr	r3, [r0, #0]
 8011df4:	4639      	mov	r1, r7
 8011df6:	68db      	ldr	r3, [r3, #12]
 8011df8:	4798      	blx	r3
 8011dfa:	4606      	mov	r6, r0
 8011dfc:	b1e8      	cbz	r0, 8011e3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011dfe:	7b43      	ldrb	r3, [r0, #13]
 8011e00:	7a82      	ldrb	r2, [r0, #10]
 8011e02:	005b      	lsls	r3, r3, #1
 8011e04:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011e08:	4313      	orrs	r3, r2
 8011e0a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011e0e:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011e12:	2b06      	cmp	r3, #6
 8011e14:	d111      	bne.n	8011e3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011e16:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011e18:	6803      	ldr	r3, [r0, #0]
 8011e1a:	4632      	mov	r2, r6
 8011e1c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011e1e:	4639      	mov	r1, r7
 8011e20:	4798      	blx	r3
 8011e22:	7b73      	ldrb	r3, [r6, #13]
 8011e24:	005b      	lsls	r3, r3, #1
 8011e26:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011e2a:	7ab3      	ldrb	r3, [r6, #10]
 8011e2c:	4313      	orrs	r3, r2
 8011e2e:	4418      	add	r0, r3
 8011e30:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011e34:	4418      	add	r0, r3
 8011e36:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011e3a:	2600      	movs	r6, #0
 8011e3c:	4637      	mov	r7, r6
 8011e3e:	a806      	add	r0, sp, #24
 8011e40:	f002 fc6c 	bl	801471c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011e44:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011e48:	9b03      	ldr	r3, [sp, #12]
 8011e4a:	4286      	cmp	r6, r0
 8011e4c:	eba9 0903 	sub.w	r9, r9, r3
 8011e50:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011e54:	bfb8      	it	lt
 8011e56:	4606      	movlt	r6, r0
 8011e58:	3701      	adds	r7, #1
 8011e5a:	b236      	sxth	r6, r6
 8011e5c:	b2bf      	uxth	r7, r7
 8011e5e:	fa0f f989 	sxth.w	r9, r9
 8011e62:	2b00      	cmp	r3, #0
 8011e64:	f43f af0d 	beq.w	8011c82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e68:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011e6c:	2b00      	cmp	r3, #0
 8011e6e:	f47f af08 	bne.w	8011c82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e72:	7a2b      	ldrb	r3, [r5, #8]
 8011e74:	444b      	add	r3, r9
 8011e76:	2b00      	cmp	r3, #0
 8011e78:	dce1      	bgt.n	8011e3e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011e7a:	e702      	b.n	8011c82 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e7c:	20012ed0 	.word	0x20012ed0
 8011e80:	20012ecc 	.word	0x20012ecc
 8011e84:	20012ed4 	.word	0x20012ed4
 8011e88:	20012ed8 	.word	0x20012ed8
 8011e8c:	ebaa 0606 	sub.w	r6, sl, r6
 8011e90:	2002      	movs	r0, #2
 8011e92:	fb96 f6f0 	sdiv	r6, r6, r0
 8011e96:	e71d      	b.n	8011cd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011e98:	441e      	add	r6, r3
 8011e9a:	ebaa 0606 	sub.w	r6, sl, r6
 8011e9e:	e719      	b.n	8011cd4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011ea0:	8925      	ldrh	r5, [r4, #8]
 8011ea2:	1aed      	subs	r5, r5, r3
 8011ea4:	eba5 050a 	sub.w	r5, r5, sl
 8011ea8:	fa0f fb85 	sxth.w	fp, r5
 8011eac:	8965      	ldrh	r5, [r4, #10]
 8011eae:	eba5 0509 	sub.w	r5, r5, r9
 8011eb2:	b22d      	sxth	r5, r5
 8011eb4:	e72e      	b.n	8011d14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011eb6:	8965      	ldrh	r5, [r4, #10]
 8011eb8:	1aed      	subs	r5, r5, r3
 8011eba:	eba5 050a 	sub.w	r5, r5, sl
 8011ebe:	4633      	mov	r3, r6
 8011ec0:	b22d      	sxth	r5, r5
 8011ec2:	463e      	mov	r6, r7
 8011ec4:	f04f 0b00 	mov.w	fp, #0
 8011ec8:	461f      	mov	r7, r3
 8011eca:	e723      	b.n	8011d14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011ecc:	2500      	movs	r5, #0
 8011ece:	e721      	b.n	8011d14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011ed0 <_ZN8touchgfx8TextAreaD0Ev>:
 8011ed0:	b510      	push	{r4, lr}
 8011ed2:	2148      	movs	r1, #72	; 0x48
 8011ed4:	4604      	mov	r4, r0
 8011ed6:	f017 f856 	bl	8028f86 <_ZdlPvj>
 8011eda:	4620      	mov	r0, r4
 8011edc:	bd10      	pop	{r4, pc}
	...

08011ee0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011ee0:	b513      	push	{r0, r1, r4, lr}
 8011ee2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011ee6:	4604      	mov	r4, r0
 8011ee8:	b1fb      	cbz	r3, 8011f2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011eea:	4b16      	ldr	r3, [pc, #88]	; (8011f44 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011eec:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011eee:	881b      	ldrh	r3, [r3, #0]
 8011ef0:	428b      	cmp	r3, r1
 8011ef2:	d91a      	bls.n	8011f2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011ef4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011ef8:	2b00      	cmp	r3, #0
 8011efa:	dd16      	ble.n	8011f2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011efc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011f00:	2b00      	cmp	r3, #0
 8011f02:	dd12      	ble.n	8011f2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011f04:	4b10      	ldr	r3, [pc, #64]	; (8011f48 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011f06:	6818      	ldr	r0, [r3, #0]
 8011f08:	f7f6 fa4a 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8011f0c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011f10:	6822      	ldr	r2, [r4, #0]
 8011f12:	2b00      	cmp	r3, #0
 8011f14:	db06      	blt.n	8011f24 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011f16:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011f1a:	2b00      	cmp	r3, #0
 8011f1c:	db02      	blt.n	8011f24 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011f1e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011f20:	4298      	cmp	r0, r3
 8011f22:	d004      	beq.n	8011f2e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011f24:	6953      	ldr	r3, [r2, #20]
 8011f26:	4620      	mov	r0, r4
 8011f28:	4798      	blx	r3
 8011f2a:	b002      	add	sp, #8
 8011f2c:	bd10      	pop	{r4, pc}
 8011f2e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011f32:	c903      	ldmia	r1, {r0, r1}
 8011f34:	466b      	mov	r3, sp
 8011f36:	e883 0003 	stmia.w	r3, {r0, r1}
 8011f3a:	6912      	ldr	r2, [r2, #16]
 8011f3c:	4619      	mov	r1, r3
 8011f3e:	4620      	mov	r0, r4
 8011f40:	4790      	blx	r2
 8011f42:	e7f2      	b.n	8011f2a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011f44:	20012ed0 	.word	0x20012ed0
 8011f48:	20012ed8 	.word	0x20012ed8

08011f4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011f4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f50:	4b44      	ldr	r3, [pc, #272]	; (8012064 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011f52:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011f54:	881b      	ldrh	r3, [r3, #0]
 8011f56:	4293      	cmp	r3, r2
 8011f58:	b08e      	sub	sp, #56	; 0x38
 8011f5a:	4604      	mov	r4, r0
 8011f5c:	d97e      	bls.n	801205c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f5e:	6808      	ldr	r0, [r1, #0]
 8011f60:	4d41      	ldr	r5, [pc, #260]	; (8012068 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011f62:	6849      	ldr	r1, [r1, #4]
 8011f64:	ab05      	add	r3, sp, #20
 8011f66:	c303      	stmia	r3!, {r0, r1}
 8011f68:	4611      	mov	r1, r2
 8011f6a:	6828      	ldr	r0, [r5, #0]
 8011f6c:	f7f6 fa18 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8011f70:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011f74:	2b00      	cmp	r3, #0
 8011f76:	db11      	blt.n	8011f9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f78:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011f7c:	2b00      	cmp	r3, #0
 8011f7e:	db0d      	blt.n	8011f9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f80:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011f82:	4298      	cmp	r0, r3
 8011f84:	d10a      	bne.n	8011f9c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f86:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011f8a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011f8e:	ab09      	add	r3, sp, #36	; 0x24
 8011f90:	e883 0003 	stmia.w	r3, {r0, r1}
 8011f94:	4619      	mov	r1, r3
 8011f96:	a805      	add	r0, sp, #20
 8011f98:	f7fe f860 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8011f9c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011fa0:	2b00      	cmp	r3, #0
 8011fa2:	dd5b      	ble.n	801205c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011fa4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011fa8:	2b00      	cmp	r3, #0
 8011faa:	dd57      	ble.n	801205c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011fac:	4f2f      	ldr	r7, [pc, #188]	; (801206c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011fae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011fb0:	683b      	ldr	r3, [r7, #0]
 8011fb2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011fb6:	4b2e      	ldr	r3, [pc, #184]	; (8012070 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011fb8:	681b      	ldr	r3, [r3, #0]
 8011fba:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011fbe:	2e00      	cmp	r6, #0
 8011fc0:	d04c      	beq.n	801205c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011fc2:	6823      	ldr	r3, [r4, #0]
 8011fc4:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011fc8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011fca:	4620      	mov	r0, r4
 8011fcc:	4798      	blx	r3
 8011fce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011fd0:	683b      	ldr	r3, [r7, #0]
 8011fd2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011fd6:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8011fda:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8011fde:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011fe0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011fe4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011fe8:	785b      	ldrb	r3, [r3, #1]
 8011fea:	9609      	str	r6, [sp, #36]	; 0x24
 8011fec:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011ff0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011ff4:	4b1f      	ldr	r3, [pc, #124]	; (8012074 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011ff6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8011ffa:	681b      	ldr	r3, [r3, #0]
 8011ffc:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8012000:	910b      	str	r1, [sp, #44]	; 0x2c
 8012002:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8012006:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801200a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801200e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8012012:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012016:	b10a      	cbz	r2, 801201c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012018:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801201a:	b906      	cbnz	r6, 801201e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801201c:	689e      	ldr	r6, [r3, #8]
 801201e:	af07      	add	r7, sp, #28
 8012020:	4621      	mov	r1, r4
 8012022:	4638      	mov	r0, r7
 8012024:	f004 fab0 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012028:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801202a:	6828      	ldr	r0, [r5, #0]
 801202c:	f7f6 f9b8 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8012030:	6823      	ldr	r3, [r4, #0]
 8012032:	4605      	mov	r5, r0
 8012034:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012036:	4620      	mov	r0, r4
 8012038:	4798      	blx	r3
 801203a:	6823      	ldr	r3, [r4, #0]
 801203c:	4680      	mov	r8, r0
 801203e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012042:	4620      	mov	r0, r4
 8012044:	4798      	blx	r3
 8012046:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801204a:	ab09      	add	r3, sp, #36	; 0x24
 801204c:	9300      	str	r3, [sp, #0]
 801204e:	9501      	str	r5, [sp, #4]
 8012050:	ab05      	add	r3, sp, #20
 8012052:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012056:	4630      	mov	r0, r6
 8012058:	f7f6 f954 	bl	8008304 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801205c:	b00e      	add	sp, #56	; 0x38
 801205e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012062:	bf00      	nop
 8012064:	20012ed0 	.word	0x20012ed0
 8012068:	20012ed8 	.word	0x20012ed8
 801206c:	20012ecc 	.word	0x20012ecc
 8012070:	20012ed4 	.word	0x20012ed4
 8012074:	20012e74 	.word	0x20012e74

08012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012078:	b538      	push	{r3, r4, r5, lr}
 801207a:	4b0e      	ldr	r3, [pc, #56]	; (80120b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801207c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801207e:	881b      	ldrh	r3, [r3, #0]
 8012080:	429a      	cmp	r2, r3
 8012082:	4604      	mov	r4, r0
 8012084:	d214      	bcs.n	80120b0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012086:	6803      	ldr	r3, [r0, #0]
 8012088:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801208a:	4798      	blx	r3
 801208c:	6823      	ldr	r3, [r4, #0]
 801208e:	4605      	mov	r5, r0
 8012090:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8012092:	4620      	mov	r0, r4
 8012094:	4798      	blx	r3
 8012096:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801209a:	b22d      	sxth	r5, r5
 801209c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80120a0:	4601      	mov	r1, r0
 80120a2:	bf06      	itte	eq
 80120a4:	4602      	moveq	r2, r0
 80120a6:	4629      	moveq	r1, r5
 80120a8:	462a      	movne	r2, r5
 80120aa:	4620      	mov	r0, r4
 80120ac:	f7fd fdb6 	bl	800fc1c <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80120b0:	bd38      	pop	{r3, r4, r5, pc}
 80120b2:	bf00      	nop
 80120b4:	20012ed0 	.word	0x20012ed0

080120b8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 80120b8:	b530      	push	{r4, r5, lr}
 80120ba:	888b      	ldrh	r3, [r1, #4]
 80120bc:	8583      	strh	r3, [r0, #44]	; 0x2c
 80120be:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80120c2:	b085      	sub	sp, #20
 80120c4:	4604      	mov	r4, r0
 80120c6:	b923      	cbnz	r3, 80120d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80120c8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80120cc:	b90b      	cbnz	r3, 80120d2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 80120ce:	f7ff ffd3 	bl	8012078 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 80120d2:	6823      	ldr	r3, [r4, #0]
 80120d4:	466d      	mov	r5, sp
 80120d6:	4621      	mov	r1, r4
 80120d8:	4628      	mov	r0, r5
 80120da:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80120de:	4798      	blx	r3
 80120e0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80120e4:	343c      	adds	r4, #60	; 0x3c
 80120e6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80120ea:	b005      	add	sp, #20
 80120ec:	bd30      	pop	{r4, r5, pc}

080120ee <_ZNK8touchgfx3Box12getSolidRectEv>:
 80120ee:	2300      	movs	r3, #0
 80120f0:	8083      	strh	r3, [r0, #4]
 80120f2:	80c3      	strh	r3, [r0, #6]
 80120f4:	8003      	strh	r3, [r0, #0]
 80120f6:	8043      	strh	r3, [r0, #2]
 80120f8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80120fc:	2bff      	cmp	r3, #255	; 0xff
 80120fe:	bf01      	itttt	eq
 8012100:	890b      	ldrheq	r3, [r1, #8]
 8012102:	8083      	strheq	r3, [r0, #4]
 8012104:	894b      	ldrheq	r3, [r1, #10]
 8012106:	80c3      	strheq	r3, [r0, #6]
 8012108:	4770      	bx	lr
	...

0801210c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801210c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801210e:	4604      	mov	r4, r0
 8012110:	6808      	ldr	r0, [r1, #0]
 8012112:	6849      	ldr	r1, [r1, #4]
 8012114:	466b      	mov	r3, sp
 8012116:	c303      	stmia	r3!, {r0, r1}
 8012118:	6823      	ldr	r3, [r4, #0]
 801211a:	4669      	mov	r1, sp
 801211c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801211e:	4620      	mov	r0, r4
 8012120:	4798      	blx	r3
 8012122:	4b08      	ldr	r3, [pc, #32]	; (8012144 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012124:	681b      	ldr	r3, [r3, #0]
 8012126:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801212a:	b10a      	cbz	r2, 8012130 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801212c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801212e:	b900      	cbnz	r0, 8012132 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012130:	6898      	ldr	r0, [r3, #8]
 8012132:	6803      	ldr	r3, [r0, #0]
 8012134:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8012136:	6a1d      	ldr	r5, [r3, #32]
 8012138:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801213c:	4669      	mov	r1, sp
 801213e:	47a8      	blx	r5
 8012140:	b003      	add	sp, #12
 8012142:	bd30      	pop	{r4, r5, pc}
 8012144:	20012e74 	.word	0x20012e74

08012148 <_ZN8touchgfx3BoxD1Ev>:
 8012148:	4770      	bx	lr

0801214a <_ZN8touchgfx3BoxD0Ev>:
 801214a:	b510      	push	{r4, lr}
 801214c:	212c      	movs	r1, #44	; 0x2c
 801214e:	4604      	mov	r4, r0
 8012150:	f016 ff19 	bl	8028f86 <_ZdlPvj>
 8012154:	4620      	mov	r0, r4
 8012156:	bd10      	pop	{r4, pc}

08012158 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8012158:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801215c:	b12a      	cbz	r2, 801216a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801215e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012162:	b112      	cbz	r2, 801216a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012164:	6803      	ldr	r3, [r0, #0]
 8012166:	695b      	ldr	r3, [r3, #20]
 8012168:	4718      	bx	r3
 801216a:	4770      	bx	lr

0801216c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 801216c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8012170:	600b      	str	r3, [r1, #0]
 8012172:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8012176:	6013      	str	r3, [r2, #0]
 8012178:	4770      	bx	lr

0801217a <_ZN8touchgfx5Gauge8setWidthEs>:
 801217a:	8101      	strh	r1, [r0, #8]
 801217c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8012180:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8012184:	4770      	bx	lr

08012186 <_ZN8touchgfx5Gauge9setHeightEs>:
 8012186:	8141      	strh	r1, [r0, #10]
 8012188:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 801218c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8012190:	4770      	bx	lr

08012192 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8012192:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8012196:	4770      	bx	lr

08012198 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8012198:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 801219c:	4770      	bx	lr

0801219e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 801219e:	4770      	bx	lr

080121a0 <_ZN8touchgfx5GaugeD1Ev>:
 80121a0:	4770      	bx	lr

080121a2 <_ZN8touchgfx5Gauge8setAlphaEh>:
 80121a2:	b538      	push	{r3, r4, r5, lr}
 80121a4:	4604      	mov	r4, r0
 80121a6:	460d      	mov	r5, r1
 80121a8:	f7fd fc51 	bl	800fa4e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 80121ac:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 80121b0:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 80121b4:	bd38      	pop	{r3, r4, r5, pc}

080121b6 <_ZN8touchgfx5GaugeD0Ev>:
 80121b6:	b510      	push	{r4, lr}
 80121b8:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 80121bc:	4604      	mov	r4, r0
 80121be:	f016 fee2 	bl	8028f86 <_ZdlPvj>
 80121c2:	4620      	mov	r0, r4
 80121c4:	bd10      	pop	{r4, pc}

080121c6 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 80121c6:	b510      	push	{r4, lr}
 80121c8:	6803      	ldr	r3, [r0, #0]
 80121ca:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80121ce:	4604      	mov	r4, r0
 80121d0:	4798      	blx	r3
 80121d2:	b170      	cbz	r0, 80121f2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80121d4:	6823      	ldr	r3, [r4, #0]
 80121d6:	4620      	mov	r0, r4
 80121d8:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80121dc:	4798      	blx	r3
 80121de:	b140      	cbz	r0, 80121f2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80121e0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80121e4:	b12b      	cbz	r3, 80121f2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 80121e6:	6823      	ldr	r3, [r4, #0]
 80121e8:	4620      	mov	r0, r4
 80121ea:	695b      	ldr	r3, [r3, #20]
 80121ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80121f0:	4718      	bx	r3
 80121f2:	bd10      	pop	{r4, pc}

080121f4 <_ZN8touchgfx5GaugeC1Ev>:
 80121f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80121f6:	4604      	mov	r4, r0
 80121f8:	4626      	mov	r6, r4
 80121fa:	f7fd fd49 	bl	800fc90 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 80121fe:	4b18      	ldr	r3, [pc, #96]	; (8012260 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8012200:	f846 3bb4 	str.w	r3, [r6], #180
 8012204:	a902      	add	r1, sp, #8
 8012206:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801220a:	f821 3d04 	strh.w	r3, [r1, #-4]!
 801220e:	4630      	mov	r0, r6
 8012210:	f014 ff7c 	bl	802710c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8012214:	2500      	movs	r5, #0
 8012216:	2301      	movs	r3, #1
 8012218:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 801221c:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8012220:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8012224:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8012228:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 801222c:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8012230:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8012234:	4638      	mov	r0, r7
 8012236:	f014 f9ad 	bl	8026594 <_ZN8touchgfx6CircleC1Ev>
 801223a:	f104 0158 	add.w	r1, r4, #88	; 0x58
 801223e:	4620      	mov	r0, r4
 8012240:	f7fd fdc7 	bl	800fdd2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8012244:	4639      	mov	r1, r7
 8012246:	4620      	mov	r0, r4
 8012248:	f7fd fd82 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801224c:	4620      	mov	r0, r4
 801224e:	4631      	mov	r1, r6
 8012250:	f7fd fd7e 	bl	800fd50 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012254:	4620      	mov	r0, r4
 8012256:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 801225a:	b003      	add	sp, #12
 801225c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801225e:	bf00      	nop
 8012260:	0802e100 	.word	0x0802e100

08012264 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8012264:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8012268:	4770      	bx	lr

0801226a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 801226a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 801226e:	4770      	bx	lr

08012270 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8012270:	b538      	push	{r3, r4, r5, lr}
 8012272:	8902      	ldrh	r2, [r0, #8]
 8012274:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012278:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 801227c:	4604      	mov	r4, r0
 801227e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8012282:	2200      	movs	r2, #0
 8012284:	4611      	mov	r1, r2
 8012286:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 801228a:	4628      	mov	r0, r5
 801228c:	f7f0 fb8d 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 8012290:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8012294:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8012298:	1a9b      	subs	r3, r3, r2
 801229a:	ee07 3a90 	vmov	s15, r3
 801229e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 80122a2:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 80122a6:	1a9b      	subs	r3, r3, r2
 80122a8:	ee07 3a10 	vmov	s14, r3
 80122ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80122b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80122b4:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 80122b8:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 80122bc:	4628      	mov	r0, r5
 80122be:	f014 ff71 	bl	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80122c2:	4b16      	ldr	r3, [pc, #88]	; (801231c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 80122c4:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 80122c8:	4628      	mov	r0, r5
 80122ca:	f014 ff6b 	bl	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80122ce:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80122d2:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 80122d6:	ee07 3a90 	vmov	s15, r3
 80122da:	ee07 2a10 	vmov	s14, r2
 80122de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80122e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80122e6:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 80122ea:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 80122ee:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 80122f2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80122f6:	4628      	mov	r0, r5
 80122f8:	f014 ff54 	bl	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 80122fc:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8012300:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8012304:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8012308:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 801230c:	4628      	mov	r0, r5
 801230e:	f014 ff49 	bl	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8012312:	2301      	movs	r3, #1
 8012314:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8012318:	bd38      	pop	{r3, r4, r5, pc}
 801231a:	bf00      	nop
 801231c:	43960000 	.word	0x43960000

08012320 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8012320:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012322:	4604      	mov	r4, r0
 8012324:	a802      	add	r0, sp, #8
 8012326:	4616      	mov	r6, r2
 8012328:	f820 1d04 	strh.w	r1, [r0, #-4]!
 801232c:	461d      	mov	r5, r3
 801232e:	4601      	mov	r1, r0
 8012330:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8012334:	f015 f88c 	bl	8027450 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8012338:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 801233c:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8012340:	4620      	mov	r0, r4
 8012342:	f7ff ff95 	bl	8012270 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8012346:	b002      	add	sp, #8
 8012348:	bd70      	pop	{r4, r5, r6, pc}

0801234a <_ZN8touchgfx5Gauge9setCenterEii>:
 801234a:	b570      	push	{r4, r5, r6, lr}
 801234c:	4606      	mov	r6, r0
 801234e:	460d      	mov	r5, r1
 8012350:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8012354:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8012358:	4614      	mov	r4, r2
 801235a:	f7ff ff89 	bl	8012270 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 801235e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8012362:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8012366:	1aa4      	subs	r4, r4, r2
 8012368:	1a6d      	subs	r5, r5, r1
 801236a:	0164      	lsls	r4, r4, #5
 801236c:	016d      	lsls	r5, r5, #5
 801236e:	3410      	adds	r4, #16
 8012370:	3510      	adds	r5, #16
 8012372:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8012376:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 801237a:	bd70      	pop	{r4, r5, r6, pc}

0801237c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 801237c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801237e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8012380:	0149      	lsls	r1, r1, #5
 8012382:	4299      	cmp	r1, r3
 8012384:	4604      	mov	r4, r0
 8012386:	9101      	str	r1, [sp, #4]
 8012388:	d00b      	beq.n	80123a2 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 801238a:	4601      	mov	r1, r0
 801238c:	aa01      	add	r2, sp, #4
 801238e:	a802      	add	r0, sp, #8
 8012390:	f014 fafe 	bl	8026990 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8012394:	9b01      	ldr	r3, [sp, #4]
 8012396:	63e3      	str	r3, [r4, #60]	; 0x3c
 8012398:	6823      	ldr	r3, [r4, #0]
 801239a:	a902      	add	r1, sp, #8
 801239c:	691b      	ldr	r3, [r3, #16]
 801239e:	4620      	mov	r0, r4
 80123a0:	4798      	blx	r3
 80123a2:	b004      	add	sp, #16
 80123a4:	bd10      	pop	{r4, pc}
	...

080123a8 <_ZN8touchgfx5Gauge8setValueEi>:
 80123a8:	b570      	push	{r4, r5, r6, lr}
 80123aa:	4604      	mov	r4, r0
 80123ac:	f7fd fba2 	bl	800faf4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 80123b0:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 80123b4:	429a      	cmp	r2, r3
 80123b6:	bfac      	ite	ge
 80123b8:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 80123bc:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 80123c0:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 80123c4:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 80123c8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80123cc:	1ac9      	subs	r1, r1, r3
 80123ce:	2900      	cmp	r1, #0
 80123d0:	bfb8      	it	lt
 80123d2:	4249      	neglt	r1, r1
 80123d4:	b289      	uxth	r1, r1
 80123d6:	4620      	mov	r0, r4
 80123d8:	f7fd fbae 	bl	800fb38 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 80123dc:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 80123e0:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 80123e4:	eddf 6a19 	vldr	s13, [pc, #100]	; 801244c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 80123e8:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8012450 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 80123ec:	429a      	cmp	r2, r3
 80123ee:	4605      	mov	r5, r0
 80123f0:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 80123f4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 80123f8:	da15      	bge.n	8012426 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 80123fa:	1b5b      	subs	r3, r3, r5
 80123fc:	ee07 3a90 	vmov	s15, r3
 8012400:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012404:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012408:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 801240c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8012410:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012414:	f014 fe35 	bl	8027082 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012418:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 801241c:	1b49      	subs	r1, r1, r5
 801241e:	4630      	mov	r0, r6
 8012420:	f7ff ffac 	bl	801237c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8012424:	bd70      	pop	{r4, r5, r6, pc}
 8012426:	442b      	add	r3, r5
 8012428:	ee07 3a90 	vmov	s15, r3
 801242c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012430:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8012434:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8012438:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 801243c:	ee21 1a07 	vmul.f32	s2, s2, s14
 8012440:	f014 fe1f 	bl	8027082 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8012444:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8012448:	4429      	add	r1, r5
 801244a:	e7e8      	b.n	801241e <_ZN8touchgfx5Gauge8setValueEi+0x76>
 801244c:	43340000 	.word	0x43340000
 8012450:	40490fdb 	.word	0x40490fdb

08012454 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8012454:	b510      	push	{r4, lr}
 8012456:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 801245a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 801245e:	0149      	lsls	r1, r1, #5
 8012460:	0152      	lsls	r2, r2, #5
 8012462:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8012466:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 801246a:	4604      	mov	r4, r0
 801246c:	f7fd faec 	bl	800fa48 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8012470:	4601      	mov	r1, r0
 8012472:	4620      	mov	r0, r4
 8012474:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012478:	f7ff bf96 	b.w	80123a8 <_ZN8touchgfx5Gauge8setValueEi>

0801247c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801247c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012480:	4770      	bx	lr

08012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012482:	b570      	push	{r4, r5, r6, lr}
 8012484:	880b      	ldrh	r3, [r1, #0]
 8012486:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012488:	4605      	mov	r5, r0
 801248a:	8813      	ldrh	r3, [r2, #0]
 801248c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012490:	4604      	mov	r4, r0
 8012492:	4628      	mov	r0, r5
 8012494:	f006 f912 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012498:	4606      	mov	r6, r0
 801249a:	4628      	mov	r0, r5
 801249c:	f006 f942 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80124a0:	6823      	ldr	r3, [r4, #0]
 80124a2:	4605      	mov	r5, r0
 80124a4:	4631      	mov	r1, r6
 80124a6:	4620      	mov	r0, r4
 80124a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80124aa:	4798      	blx	r3
 80124ac:	6823      	ldr	r3, [r4, #0]
 80124ae:	4629      	mov	r1, r5
 80124b0:	4620      	mov	r0, r4
 80124b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80124b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124b8:	4718      	bx	r3

080124ba <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80124ba:	b510      	push	{r4, lr}
 80124bc:	4604      	mov	r4, r0
 80124be:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80124c0:	b150      	cbz	r0, 80124d8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80124c2:	6803      	ldr	r3, [r0, #0]
 80124c4:	68db      	ldr	r3, [r3, #12]
 80124c6:	4798      	blx	r3
 80124c8:	b130      	cbz	r0, 80124d8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80124ca:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80124cc:	6803      	ldr	r3, [r0, #0]
 80124ce:	4621      	mov	r1, r4
 80124d0:	689b      	ldr	r3, [r3, #8]
 80124d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80124d6:	4718      	bx	r3
 80124d8:	bd10      	pop	{r4, pc}

080124da <_ZNK8touchgfx6Button12getSolidRectEv>:
 80124da:	b510      	push	{r4, lr}
 80124dc:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80124e0:	2bff      	cmp	r3, #255	; 0xff
 80124e2:	4604      	mov	r4, r0
 80124e4:	d006      	beq.n	80124f4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80124e6:	2300      	movs	r3, #0
 80124e8:	8003      	strh	r3, [r0, #0]
 80124ea:	8043      	strh	r3, [r0, #2]
 80124ec:	8083      	strh	r3, [r0, #4]
 80124ee:	80c3      	strh	r3, [r0, #6]
 80124f0:	4620      	mov	r0, r4
 80124f2:	bd10      	pop	{r4, pc}
 80124f4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 80124f8:	b11b      	cbz	r3, 8012502 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80124fa:	3130      	adds	r1, #48	; 0x30
 80124fc:	f006 f946 	bl	801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012500:	e7f6      	b.n	80124f0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012502:	312e      	adds	r1, #46	; 0x2e
 8012504:	e7fa      	b.n	80124fc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08012508 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8012508:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801250c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8012510:	b08a      	sub	sp, #40	; 0x28
 8012512:	4604      	mov	r4, r0
 8012514:	4688      	mov	r8, r1
 8012516:	2b00      	cmp	r3, #0
 8012518:	d066      	beq.n	80125e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801251a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801251c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012520:	a805      	add	r0, sp, #20
 8012522:	f006 f8cb 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012526:	4607      	mov	r7, r0
 8012528:	a805      	add	r0, sp, #20
 801252a:	f006 f8fb 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801252e:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012532:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8012536:	4432      	add	r2, r6
 8012538:	b292      	uxth	r2, r2
 801253a:	2300      	movs	r3, #0
 801253c:	fa0f fc82 	sxth.w	ip, r2
 8012540:	459c      	cmp	ip, r3
 8012542:	9306      	str	r3, [sp, #24]
 8012544:	dd52      	ble.n	80125ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012546:	42b7      	cmp	r7, r6
 8012548:	dd50      	ble.n	80125ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801254a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801254e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012552:	442b      	add	r3, r5
 8012554:	b29b      	uxth	r3, r3
 8012556:	b219      	sxth	r1, r3
 8012558:	2900      	cmp	r1, #0
 801255a:	dd47      	ble.n	80125ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801255c:	42a8      	cmp	r0, r5
 801255e:	dd45      	ble.n	80125ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012560:	4567      	cmp	r7, ip
 8012562:	bfb8      	it	lt
 8012564:	b2ba      	uxthlt	r2, r7
 8012566:	4288      	cmp	r0, r1
 8012568:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801256c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012570:	bfb8      	it	lt
 8012572:	b283      	uxthlt	r3, r0
 8012574:	1b92      	subs	r2, r2, r6
 8012576:	1b5b      	subs	r3, r3, r5
 8012578:	f8ad 201c 	strh.w	r2, [sp, #28]
 801257c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012580:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012584:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012588:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801258c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012590:	429a      	cmp	r2, r3
 8012592:	d026      	beq.n	80125e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012594:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012598:	2b00      	cmp	r3, #0
 801259a:	dd22      	ble.n	80125e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801259c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80125a0:	2b00      	cmp	r3, #0
 80125a2:	dd1e      	ble.n	80125e2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80125a4:	2300      	movs	r3, #0
 80125a6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80125aa:	6823      	ldr	r3, [r4, #0]
 80125ac:	a908      	add	r1, sp, #32
 80125ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80125b0:	4620      	mov	r0, r4
 80125b2:	4798      	blx	r3
 80125b4:	4b0f      	ldr	r3, [pc, #60]	; (80125f4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80125b6:	681b      	ldr	r3, [r3, #0]
 80125b8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80125bc:	b10a      	cbz	r2, 80125c2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80125be:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80125c0:	b900      	cbnz	r0, 80125c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80125c2:	6898      	ldr	r0, [r3, #8]
 80125c4:	6801      	ldr	r1, [r0, #0]
 80125c6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80125ca:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80125ce:	2501      	movs	r5, #1
 80125d0:	9502      	str	r5, [sp, #8]
 80125d2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80125d6:	9401      	str	r4, [sp, #4]
 80125d8:	ac06      	add	r4, sp, #24
 80125da:	9400      	str	r4, [sp, #0]
 80125dc:	688c      	ldr	r4, [r1, #8]
 80125de:	a905      	add	r1, sp, #20
 80125e0:	47a0      	blx	r4
 80125e2:	b00a      	add	sp, #40	; 0x28
 80125e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80125e8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80125ea:	e797      	b.n	801251c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80125ec:	2300      	movs	r3, #0
 80125ee:	9307      	str	r3, [sp, #28]
 80125f0:	e7ca      	b.n	8012588 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 80125f2:	bf00      	nop
 80125f4:	20012e74 	.word	0x20012e74

080125f8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 80125f8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 80125fc:	b12a      	cbz	r2, 801260a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 80125fe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8012602:	b112      	cbz	r2, 801260a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012604:	6803      	ldr	r3, [r0, #0]
 8012606:	695b      	ldr	r3, [r3, #20]
 8012608:	4718      	bx	r3
 801260a:	4770      	bx	lr

0801260c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801260c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012610:	4b2f      	ldr	r3, [pc, #188]	; (80126d0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8012612:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012614:	881b      	ldrh	r3, [r3, #0]
 8012616:	4293      	cmp	r3, r2
 8012618:	b08d      	sub	sp, #52	; 0x34
 801261a:	4604      	mov	r4, r0
 801261c:	460f      	mov	r7, r1
 801261e:	d954      	bls.n	80126ca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012620:	4b2c      	ldr	r3, [pc, #176]	; (80126d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8012622:	6819      	ldr	r1, [r3, #0]
 8012624:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012628:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801262c:	4a2a      	ldr	r2, [pc, #168]	; (80126d8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801262e:	6812      	ldr	r2, [r2, #0]
 8012630:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012634:	2900      	cmp	r1, #0
 8012636:	d048      	beq.n	80126ca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012638:	785a      	ldrb	r2, [r3, #1]
 801263a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801263e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012642:	4b26      	ldr	r3, [pc, #152]	; (80126dc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012644:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012648:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801264c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012650:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012652:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012656:	9107      	str	r1, [sp, #28]
 8012658:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801265c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012660:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012664:	681a      	ldr	r2, [r3, #0]
 8012666:	f88d 8020 	strb.w	r8, [sp, #32]
 801266a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801266e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012672:	9609      	str	r6, [sp, #36]	; 0x24
 8012674:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012678:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801267c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012680:	b10b      	cbz	r3, 8012686 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012682:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012684:	b905      	cbnz	r5, 8012688 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012686:	6895      	ldr	r5, [r2, #8]
 8012688:	ae05      	add	r6, sp, #20
 801268a:	4621      	mov	r1, r4
 801268c:	4630      	mov	r0, r6
 801268e:	f003 ff7b 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012692:	4b13      	ldr	r3, [pc, #76]	; (80126e0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8012694:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012696:	6818      	ldr	r0, [r3, #0]
 8012698:	f7f5 fe82 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 801269c:	6823      	ldr	r3, [r4, #0]
 801269e:	4680      	mov	r8, r0
 80126a0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80126a2:	4620      	mov	r0, r4
 80126a4:	4798      	blx	r3
 80126a6:	6823      	ldr	r3, [r4, #0]
 80126a8:	4681      	mov	r9, r0
 80126aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80126ae:	4620      	mov	r0, r4
 80126b0:	4798      	blx	r3
 80126b2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80126b6:	ab07      	add	r3, sp, #28
 80126b8:	9300      	str	r3, [sp, #0]
 80126ba:	f8cd 8004 	str.w	r8, [sp, #4]
 80126be:	463b      	mov	r3, r7
 80126c0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80126c4:	4628      	mov	r0, r5
 80126c6:	f7f5 fe1d 	bl	8008304 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80126ca:	b00d      	add	sp, #52	; 0x34
 80126cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80126d0:	20012ed0 	.word	0x20012ed0
 80126d4:	20012ecc 	.word	0x20012ecc
 80126d8:	20012ed4 	.word	0x20012ed4
 80126dc:	20012e74 	.word	0x20012e74
 80126e0:	20012ed8 	.word	0x20012ed8

080126e4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80126e4:	4770      	bx	lr

080126e6 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80126e6:	4770      	bx	lr

080126e8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80126e8:	b510      	push	{r4, lr}
 80126ea:	213c      	movs	r1, #60	; 0x3c
 80126ec:	4604      	mov	r4, r0
 80126ee:	f016 fc4a 	bl	8028f86 <_ZdlPvj>
 80126f2:	4620      	mov	r0, r4
 80126f4:	bd10      	pop	{r4, pc}

080126f6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80126f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126fa:	461c      	mov	r4, r3
 80126fc:	4606      	mov	r6, r0
 80126fe:	9f06      	ldr	r7, [sp, #24]
 8012700:	f7ff febf 	bl	8012482 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8012704:	8823      	ldrh	r3, [r4, #0]
 8012706:	86b3      	strh	r3, [r6, #52]	; 0x34
 8012708:	883b      	ldrh	r3, [r7, #0]
 801270a:	86f3      	strh	r3, [r6, #54]	; 0x36
 801270c:	4638      	mov	r0, r7
 801270e:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8012712:	f005 ffd3 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012716:	f04f 0802 	mov.w	r8, #2
 801271a:	fb95 f5f8 	sdiv	r5, r5, r8
 801271e:	b2ad      	uxth	r5, r5
 8012720:	fb90 f0f8 	sdiv	r0, r0, r8
 8012724:	1a2d      	subs	r5, r5, r0
 8012726:	8735      	strh	r5, [r6, #56]	; 0x38
 8012728:	4638      	mov	r0, r7
 801272a:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 801272e:	fb94 f4f8 	sdiv	r4, r4, r8
 8012732:	f005 fff7 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012736:	b2a4      	uxth	r4, r4
 8012738:	fb90 f0f8 	sdiv	r0, r0, r8
 801273c:	1a24      	subs	r4, r4, r0
 801273e:	8774      	strh	r4, [r6, #58]	; 0x3a
 8012740:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012744 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012744:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012748:	4604      	mov	r4, r0
 801274a:	b08c      	sub	sp, #48	; 0x30
 801274c:	460d      	mov	r5, r1
 801274e:	f7ff fedb 	bl	8012508 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012752:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012756:	2b00      	cmp	r3, #0
 8012758:	d05d      	beq.n	8012816 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801275a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801275c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012760:	a805      	add	r0, sp, #20
 8012762:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8012766:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801276a:	f005 ffa7 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801276e:	4606      	mov	r6, r0
 8012770:	a805      	add	r0, sp, #20
 8012772:	f005 ffd7 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012776:	6869      	ldr	r1, [r5, #4]
 8012778:	f8ad 001e 	strh.w	r0, [sp, #30]
 801277c:	6828      	ldr	r0, [r5, #0]
 801277e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012782:	ab08      	add	r3, sp, #32
 8012784:	ad08      	add	r5, sp, #32
 8012786:	c303      	stmia	r3!, {r0, r1}
 8012788:	a906      	add	r1, sp, #24
 801278a:	4628      	mov	r0, r5
 801278c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012790:	f8ad 601c 	strh.w	r6, [sp, #28]
 8012794:	f7fd fc62 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8012798:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801279c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80127a0:	429a      	cmp	r2, r3
 80127a2:	d035      	beq.n	8012810 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80127a4:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80127a8:	2b00      	cmp	r3, #0
 80127aa:	dd31      	ble.n	8012810 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80127ac:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 80127b0:	2b00      	cmp	r3, #0
 80127b2:	dd2d      	ble.n	8012810 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80127b4:	2300      	movs	r3, #0
 80127b6:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 80127ba:	6823      	ldr	r3, [r4, #0]
 80127bc:	a90a      	add	r1, sp, #40	; 0x28
 80127be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80127c0:	4620      	mov	r0, r4
 80127c2:	4798      	blx	r3
 80127c4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80127c8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80127ca:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80127ce:	1a9b      	subs	r3, r3, r2
 80127d0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80127d4:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 80127d6:	1ac9      	subs	r1, r1, r3
 80127d8:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 80127dc:	490f      	ldr	r1, [pc, #60]	; (801281c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80127de:	6809      	ldr	r1, [r1, #0]
 80127e0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80127e4:	b108      	cbz	r0, 80127ea <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80127e6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80127e8:	b900      	cbnz	r0, 80127ec <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80127ea:	6888      	ldr	r0, [r1, #8]
 80127ec:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80127f0:	440b      	add	r3, r1
 80127f2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80127f6:	2601      	movs	r6, #1
 80127f8:	440a      	add	r2, r1
 80127fa:	6801      	ldr	r1, [r0, #0]
 80127fc:	9602      	str	r6, [sp, #8]
 80127fe:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8012802:	e9cd 5400 	strd	r5, r4, [sp]
 8012806:	b21b      	sxth	r3, r3
 8012808:	688c      	ldr	r4, [r1, #8]
 801280a:	b212      	sxth	r2, r2
 801280c:	a905      	add	r1, sp, #20
 801280e:	47a0      	blx	r4
 8012810:	b00c      	add	sp, #48	; 0x30
 8012812:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012816:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012818:	e7a0      	b.n	801275c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 801281a:	bf00      	nop
 801281c:	20012e74 	.word	0x20012e74

08012820 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8012820:	b510      	push	{r4, lr}
 8012822:	2101      	movs	r1, #1
 8012824:	2200      	movs	r2, #0
 8012826:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801282a:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801282e:	4c0e      	ldr	r4, [pc, #56]	; (8012868 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8012830:	8082      	strh	r2, [r0, #4]
 8012832:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012836:	80c2      	strh	r2, [r0, #6]
 8012838:	8102      	strh	r2, [r0, #8]
 801283a:	8142      	strh	r2, [r0, #10]
 801283c:	8182      	strh	r2, [r0, #12]
 801283e:	81c2      	strh	r2, [r0, #14]
 8012840:	8202      	strh	r2, [r0, #16]
 8012842:	8242      	strh	r2, [r0, #18]
 8012844:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012848:	61c2      	str	r2, [r0, #28]
 801284a:	8402      	strh	r2, [r0, #32]
 801284c:	8442      	strh	r2, [r0, #34]	; 0x22
 801284e:	6282      	str	r2, [r0, #40]	; 0x28
 8012850:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012854:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012856:	8601      	strh	r1, [r0, #48]	; 0x30
 8012858:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801285c:	6004      	str	r4, [r0, #0]
 801285e:	8681      	strh	r1, [r0, #52]	; 0x34
 8012860:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012862:	8702      	strh	r2, [r0, #56]	; 0x38
 8012864:	8742      	strh	r2, [r0, #58]	; 0x3a
 8012866:	bd10      	pop	{r4, pc}
 8012868:	0802e1e8 	.word	0x0802e1e8

0801286c <_ZN8touchgfx5ImageD1Ev>:
 801286c:	4770      	bx	lr

0801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801286e:	b570      	push	{r4, r5, r6, lr}
 8012870:	880b      	ldrh	r3, [r1, #0]
 8012872:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012874:	4604      	mov	r4, r0
 8012876:	4608      	mov	r0, r1
 8012878:	460d      	mov	r5, r1
 801287a:	f005 ff1f 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801287e:	4606      	mov	r6, r0
 8012880:	4628      	mov	r0, r5
 8012882:	f005 ff4f 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012886:	6823      	ldr	r3, [r4, #0]
 8012888:	4605      	mov	r5, r0
 801288a:	4631      	mov	r1, r6
 801288c:	4620      	mov	r0, r4
 801288e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012890:	4798      	blx	r3
 8012892:	6823      	ldr	r3, [r4, #0]
 8012894:	4629      	mov	r1, r5
 8012896:	4620      	mov	r0, r4
 8012898:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801289a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801289e:	4718      	bx	r3

080128a0 <_ZN8touchgfx5ImageD0Ev>:
 80128a0:	b510      	push	{r4, lr}
 80128a2:	212c      	movs	r1, #44	; 0x2c
 80128a4:	4604      	mov	r4, r0
 80128a6:	f016 fb6e 	bl	8028f86 <_ZdlPvj>
 80128aa:	4620      	mov	r0, r4
 80128ac:	bd10      	pop	{r4, pc}

080128ae <_ZNK8touchgfx5Image12getSolidRectEv>:
 80128ae:	b510      	push	{r4, lr}
 80128b0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80128b4:	2bff      	cmp	r3, #255	; 0xff
 80128b6:	4604      	mov	r4, r0
 80128b8:	d006      	beq.n	80128c8 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80128ba:	2300      	movs	r3, #0
 80128bc:	8003      	strh	r3, [r0, #0]
 80128be:	8043      	strh	r3, [r0, #2]
 80128c0:	8083      	strh	r3, [r0, #4]
 80128c2:	80c3      	strh	r3, [r0, #6]
 80128c4:	4620      	mov	r0, r4
 80128c6:	bd10      	pop	{r4, pc}
 80128c8:	3126      	adds	r1, #38	; 0x26
 80128ca:	f005 ff5f 	bl	801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80128ce:	e7f9      	b.n	80128c4 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

080128d0 <_ZNK8touchgfx5Image17invalidateContentEv>:
 80128d0:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80128d4:	b12a      	cbz	r2, 80128e2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80128d6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80128da:	b112      	cbz	r2, 80128e2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80128dc:	6803      	ldr	r3, [r0, #0]
 80128de:	695b      	ldr	r3, [r3, #20]
 80128e0:	4718      	bx	r3
 80128e2:	4770      	bx	lr

080128e4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80128e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80128e8:	4604      	mov	r4, r0
 80128ea:	b088      	sub	sp, #32
 80128ec:	f854 3b26 	ldr.w	r3, [r4], #38
 80128f0:	2500      	movs	r5, #0
 80128f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80128f4:	460f      	mov	r7, r1
 80128f6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80128fa:	a904      	add	r1, sp, #16
 80128fc:	4606      	mov	r6, r0
 80128fe:	4798      	blx	r3
 8012900:	4620      	mov	r0, r4
 8012902:	f005 fedb 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012906:	4680      	mov	r8, r0
 8012908:	4620      	mov	r0, r4
 801290a:	f005 ff0b 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801290e:	9506      	str	r5, [sp, #24]
 8012910:	ad06      	add	r5, sp, #24
 8012912:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012916:	4639      	mov	r1, r7
 8012918:	4628      	mov	r0, r5
 801291a:	f8ad 801c 	strh.w	r8, [sp, #28]
 801291e:	f7fd fb9d 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8012922:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012926:	2b00      	cmp	r3, #0
 8012928:	dd19      	ble.n	801295e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801292a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801292e:	2b00      	cmp	r3, #0
 8012930:	dd15      	ble.n	801295e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012932:	4b0c      	ldr	r3, [pc, #48]	; (8012964 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012934:	681b      	ldr	r3, [r3, #0]
 8012936:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801293a:	b10a      	cbz	r2, 8012940 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801293c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801293e:	b900      	cbnz	r0, 8012942 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012940:	6898      	ldr	r0, [r3, #8]
 8012942:	6801      	ldr	r1, [r0, #0]
 8012944:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012948:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801294c:	2701      	movs	r7, #1
 801294e:	9702      	str	r7, [sp, #8]
 8012950:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012954:	e9cd 5600 	strd	r5, r6, [sp]
 8012958:	688d      	ldr	r5, [r1, #8]
 801295a:	4621      	mov	r1, r4
 801295c:	47a8      	blx	r5
 801295e:	b008      	add	sp, #32
 8012960:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012964:	20012e74 	.word	0x20012e74

08012968 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012968:	4770      	bx	lr

0801296a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801296a:	b510      	push	{r4, lr}
 801296c:	2148      	movs	r1, #72	; 0x48
 801296e:	4604      	mov	r4, r0
 8012970:	f016 fb09 	bl	8028f86 <_ZdlPvj>
 8012974:	4620      	mov	r0, r4
 8012976:	bd10      	pop	{r4, pc}

08012978 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012978:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801297c:	b08d      	sub	sp, #52	; 0x34
 801297e:	4604      	mov	r4, r0
 8012980:	460f      	mov	r7, r1
 8012982:	f7ff fdc1 	bl	8012508 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012986:	4a55      	ldr	r2, [pc, #340]	; (8012adc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012988:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801298a:	8812      	ldrh	r2, [r2, #0]
 801298c:	429a      	cmp	r2, r3
 801298e:	f240 8082 	bls.w	8012a96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012992:	4d53      	ldr	r5, [pc, #332]	; (8012ae0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8012994:	682a      	ldr	r2, [r5, #0]
 8012996:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801299a:	4b52      	ldr	r3, [pc, #328]	; (8012ae4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801299c:	681b      	ldr	r3, [r3, #0]
 801299e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80129a2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80129a6:	2200      	movs	r2, #0
 80129a8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80129ac:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80129b0:	2a03      	cmp	r2, #3
 80129b2:	d811      	bhi.n	80129d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80129b4:	e8df f002 	tbb	[pc, r2]
 80129b8:	89727902 	.word	0x89727902
 80129bc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80129c0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80129c4:	1ad2      	subs	r2, r2, r3
 80129c6:	2002      	movs	r0, #2
 80129c8:	f8ad 1010 	strh.w	r1, [sp, #16]
 80129cc:	fb92 f2f0 	sdiv	r2, r2, r0
 80129d0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80129d4:	f8ad 200e 	strh.w	r2, [sp, #14]
 80129d8:	f10d 080c 	add.w	r8, sp, #12
 80129dc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80129e0:	f10d 0914 	add.w	r9, sp, #20
 80129e4:	e889 0003 	stmia.w	r9, {r0, r1}
 80129e8:	4639      	mov	r1, r7
 80129ea:	4648      	mov	r0, r9
 80129ec:	f7fd fb36 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 80129f0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80129f4:	2b00      	cmp	r3, #0
 80129f6:	dd4e      	ble.n	8012a96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80129f8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80129fc:	2b00      	cmp	r3, #0
 80129fe:	dd4a      	ble.n	8012a96 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012a00:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012a04:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012a08:	1a9b      	subs	r3, r3, r2
 8012a0a:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012a0e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012a12:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8012a16:	1a9b      	subs	r3, r3, r2
 8012a18:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012a1c:	6823      	ldr	r3, [r4, #0]
 8012a1e:	4641      	mov	r1, r8
 8012a20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a22:	4620      	mov	r0, r4
 8012a24:	4798      	blx	r3
 8012a26:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012a2a:	2b00      	cmp	r3, #0
 8012a2c:	d053      	beq.n	8012ad6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8012a2e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012a30:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8012a32:	682b      	ldr	r3, [r5, #0]
 8012a34:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012a38:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8012a3c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012a40:	785b      	ldrb	r3, [r3, #1]
 8012a42:	9209      	str	r2, [sp, #36]	; 0x24
 8012a44:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012a48:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012a4c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012a50:	2300      	movs	r3, #0
 8012a52:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012a56:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012a5a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012a5e:	4b22      	ldr	r3, [pc, #136]	; (8012ae8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012a60:	9607      	str	r6, [sp, #28]
 8012a62:	681b      	ldr	r3, [r3, #0]
 8012a64:	f88d 5020 	strb.w	r5, [sp, #32]
 8012a68:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012a6c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012a70:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012a74:	b10a      	cbz	r2, 8012a7a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012a76:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012a78:	b904      	cbnz	r4, 8012a7c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8012a7a:	689c      	ldr	r4, [r3, #8]
 8012a7c:	4b1b      	ldr	r3, [pc, #108]	; (8012aec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8012a7e:	6818      	ldr	r0, [r3, #0]
 8012a80:	f7f5 fc8e 	bl	80083a0 <_ZNK8touchgfx5Texts7getTextEt>
 8012a84:	ab07      	add	r3, sp, #28
 8012a86:	9001      	str	r0, [sp, #4]
 8012a88:	9300      	str	r3, [sp, #0]
 8012a8a:	e898 0006 	ldmia.w	r8, {r1, r2}
 8012a8e:	464b      	mov	r3, r9
 8012a90:	4620      	mov	r0, r4
 8012a92:	f7f5 fc37 	bl	8008304 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012a96:	b00d      	add	sp, #52	; 0x34
 8012a98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012a9c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012aa0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012aa4:	1ad2      	subs	r2, r2, r3
 8012aa6:	3201      	adds	r2, #1
 8012aa8:	e78d      	b.n	80129c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8012aaa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012aae:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012ab2:	1ad2      	subs	r2, r2, r3
 8012ab4:	3201      	adds	r2, #1
 8012ab6:	2002      	movs	r0, #2
 8012ab8:	f8ad 3010 	strh.w	r3, [sp, #16]
 8012abc:	fb92 f2f0 	sdiv	r2, r2, r0
 8012ac0:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012ac4:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012ac8:	e786      	b.n	80129d8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012aca:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012ace:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012ad2:	1ad2      	subs	r2, r2, r3
 8012ad4:	e7ef      	b.n	8012ab6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8012ad6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8012ad8:	e7aa      	b.n	8012a30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8012ada:	bf00      	nop
 8012adc:	20012ed0 	.word	0x20012ed0
 8012ae0:	20012ecc 	.word	0x20012ecc
 8012ae4:	20012ed4 	.word	0x20012ed4
 8012ae8:	20012e74 	.word	0x20012e74
 8012aec:	20012ed8 	.word	0x20012ed8

08012af0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012af0:	b510      	push	{r4, lr}
 8012af2:	2101      	movs	r1, #1
 8012af4:	4c13      	ldr	r4, [pc, #76]	; (8012b44 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8012af6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012afa:	2200      	movs	r2, #0
 8012afc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012b00:	6004      	str	r4, [r0, #0]
 8012b02:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012b06:	4c10      	ldr	r4, [pc, #64]	; (8012b48 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012b08:	8082      	strh	r2, [r0, #4]
 8012b0a:	80c2      	strh	r2, [r0, #6]
 8012b0c:	8102      	strh	r2, [r0, #8]
 8012b0e:	8142      	strh	r2, [r0, #10]
 8012b10:	8182      	strh	r2, [r0, #12]
 8012b12:	81c2      	strh	r2, [r0, #14]
 8012b14:	8202      	strh	r2, [r0, #16]
 8012b16:	8242      	strh	r2, [r0, #18]
 8012b18:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012b1c:	61c2      	str	r2, [r0, #28]
 8012b1e:	8402      	strh	r2, [r0, #32]
 8012b20:	8442      	strh	r2, [r0, #34]	; 0x22
 8012b22:	6282      	str	r2, [r0, #40]	; 0x28
 8012b24:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012b28:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012b2a:	8601      	strh	r1, [r0, #48]	; 0x30
 8012b2c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012b30:	6344      	str	r4, [r0, #52]	; 0x34
 8012b32:	8701      	strh	r1, [r0, #56]	; 0x38
 8012b34:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012b38:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8012b3c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012b40:	bd10      	pop	{r4, pc}
 8012b42:	bf00      	nop
 8012b44:	0802e2cc 	.word	0x0802e2cc
 8012b48:	0802b750 	.word	0x0802b750

08012b4c <_ZN8touchgfx7OutlineD1Ev>:
 8012b4c:	4770      	bx	lr

08012b4e <_ZN8touchgfx7OutlineD0Ev>:
 8012b4e:	b510      	push	{r4, lr}
 8012b50:	2130      	movs	r1, #48	; 0x30
 8012b52:	4604      	mov	r4, r0
 8012b54:	f016 fa17 	bl	8028f86 <_ZdlPvj>
 8012b58:	4620      	mov	r0, r4
 8012b5a:	bd10      	pop	{r4, pc}

08012b5c <_ZN8touchgfx7Outline5resetEv>:
 8012b5c:	b510      	push	{r4, lr}
 8012b5e:	4604      	mov	r4, r0
 8012b60:	f000 fe96 	bl	8013890 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012b64:	60e0      	str	r0, [r4, #12]
 8012b66:	f000 fe99 	bl	801389c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8012b6a:	68e3      	ldr	r3, [r4, #12]
 8012b6c:	6123      	str	r3, [r4, #16]
 8012b6e:	08c0      	lsrs	r0, r0, #3
 8012b70:	2200      	movs	r2, #0
 8012b72:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012b76:	3801      	subs	r0, #1
 8012b78:	6060      	str	r0, [r4, #4]
 8012b7a:	60a2      	str	r2, [r4, #8]
 8012b7c:	8019      	strh	r1, [r3, #0]
 8012b7e:	8059      	strh	r1, [r3, #2]
 8012b80:	809a      	strh	r2, [r3, #4]
 8012b82:	80da      	strh	r2, [r3, #6]
 8012b84:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012b86:	f023 0301 	bic.w	r3, r3, #1
 8012b8a:	f043 0302 	orr.w	r3, r3, #2
 8012b8e:	6263      	str	r3, [r4, #36]	; 0x24
 8012b90:	bd10      	pop	{r4, pc}
	...

08012b94 <_ZN8touchgfx7OutlineC1Ev>:
 8012b94:	b510      	push	{r4, lr}
 8012b96:	4b0a      	ldr	r3, [pc, #40]	; (8012bc0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8012b98:	6003      	str	r3, [r0, #0]
 8012b9a:	2300      	movs	r3, #0
 8012b9c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8012ba0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8012ba4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012ba8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8012bac:	6243      	str	r3, [r0, #36]	; 0x24
 8012bae:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8012bb2:	4604      	mov	r4, r0
 8012bb4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8012bb8:	f7ff ffd0 	bl	8012b5c <_ZN8touchgfx7Outline5resetEv>
 8012bbc:	4620      	mov	r0, r4
 8012bbe:	bd10      	pop	{r4, pc}
 8012bc0:	0802e340 	.word	0x0802e340

08012bc4 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8012bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012bc8:	b093      	sub	sp, #76	; 0x4c
 8012bca:	1156      	asrs	r6, r2, #5
 8012bcc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8012bce:	9305      	str	r3, [sp, #20]
 8012bd0:	f004 051f 	and.w	r5, r4, #31
 8012bd4:	1153      	asrs	r3, r2, #5
 8012bd6:	9504      	str	r5, [sp, #16]
 8012bd8:	1165      	asrs	r5, r4, #5
 8012bda:	9303      	str	r3, [sp, #12]
 8012bdc:	42ae      	cmp	r6, r5
 8012bde:	ea4f 1364 	mov.w	r3, r4, asr #5
 8012be2:	9306      	str	r3, [sp, #24]
 8012be4:	f002 031f 	and.w	r3, r2, #31
 8012be8:	f040 80f8 	bne.w	8012ddc <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8012bec:	9c04      	ldr	r4, [sp, #16]
 8012bee:	9a05      	ldr	r2, [sp, #20]
 8012bf0:	42a3      	cmp	r3, r4
 8012bf2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8012bf6:	6902      	ldr	r2, [r0, #16]
 8012bf8:	d125      	bne.n	8012c46 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8012bfa:	f9b2 3000 	ldrsh.w	r3, [r2]
 8012bfe:	459e      	cmp	lr, r3
 8012c00:	d103      	bne.n	8012c0a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8012c02:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012c06:	429e      	cmp	r6, r3
 8012c08:	d035      	beq.n	8012c76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012c0a:	88d1      	ldrh	r1, [r2, #6]
 8012c0c:	8893      	ldrh	r3, [r2, #4]
 8012c0e:	430b      	orrs	r3, r1
 8012c10:	d010      	beq.n	8012c34 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012c12:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8012c16:	2b00      	cmp	r3, #0
 8012c18:	db0c      	blt.n	8012c34 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012c1a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012c1c:	428b      	cmp	r3, r1
 8012c1e:	da09      	bge.n	8012c34 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012c20:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012c24:	428b      	cmp	r3, r1
 8012c26:	bf38      	it	cc
 8012c28:	3208      	addcc	r2, #8
 8012c2a:	f103 0301 	add.w	r3, r3, #1
 8012c2e:	bf38      	it	cc
 8012c30:	6102      	strcc	r2, [r0, #16]
 8012c32:	6083      	str	r3, [r0, #8]
 8012c34:	6903      	ldr	r3, [r0, #16]
 8012c36:	9a03      	ldr	r2, [sp, #12]
 8012c38:	f8a3 e000 	strh.w	lr, [r3]
 8012c3c:	805a      	strh	r2, [r3, #2]
 8012c3e:	2200      	movs	r2, #0
 8012c40:	809a      	strh	r2, [r3, #4]
 8012c42:	80da      	strh	r2, [r3, #6]
 8012c44:	e017      	b.n	8012c76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012c46:	9c05      	ldr	r4, [sp, #20]
 8012c48:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8012c4c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012c50:	f004 041f 	and.w	r4, r4, #31
 8012c54:	114e      	asrs	r6, r1, #5
 8012c56:	9402      	str	r4, [sp, #8]
 8012c58:	9c04      	ldr	r4, [sp, #16]
 8012c5a:	4576      	cmp	r6, lr
 8012c5c:	f001 0c1f 	and.w	ip, r1, #31
 8012c60:	eba4 0403 	sub.w	r4, r4, r3
 8012c64:	d10a      	bne.n	8012c7c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012c66:	9b02      	ldr	r3, [sp, #8]
 8012c68:	449c      	add	ip, r3
 8012c6a:	44a0      	add	r8, r4
 8012c6c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012c70:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012c74:	80d4      	strh	r4, [r2, #6]
 8012c76:	b013      	add	sp, #76	; 0x4c
 8012c78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c7c:	9d05      	ldr	r5, [sp, #20]
 8012c7e:	1a69      	subs	r1, r5, r1
 8012c80:	bf5b      	ittet	pl
 8012c82:	f1cc 0520 	rsbpl	r5, ip, #32
 8012c86:	436c      	mulpl	r4, r5
 8012c88:	2500      	movmi	r5, #0
 8012c8a:	2520      	movpl	r5, #32
 8012c8c:	bf44      	itt	mi
 8012c8e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012c92:	4249      	negmi	r1, r1
 8012c94:	9501      	str	r5, [sp, #4]
 8012c96:	9f01      	ldr	r7, [sp, #4]
 8012c98:	fb94 f5f1 	sdiv	r5, r4, r1
 8012c9c:	fb01 4415 	mls	r4, r1, r5, r4
 8012ca0:	bf54      	ite	pl
 8012ca2:	f04f 0901 	movpl.w	r9, #1
 8012ca6:	f04f 39ff 	movmi.w	r9, #4294967295
 8012caa:	2c00      	cmp	r4, #0
 8012cac:	bfb8      	it	lt
 8012cae:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012cb2:	44bc      	add	ip, r7
 8012cb4:	44a8      	add	r8, r5
 8012cb6:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012cba:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012cbe:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012cc2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012cc6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012cca:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8012cce:	bfb8      	it	lt
 8012cd0:	1864      	addlt	r4, r4, r1
 8012cd2:	ea58 0202 	orrs.w	r2, r8, r2
 8012cd6:	444e      	add	r6, r9
 8012cd8:	d011      	beq.n	8012cfe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012cda:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012cde:	f1b8 0f00 	cmp.w	r8, #0
 8012ce2:	db0c      	blt.n	8012cfe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012ce4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012ce6:	4590      	cmp	r8, r2
 8012ce8:	da09      	bge.n	8012cfe <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012cea:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8012cee:	4590      	cmp	r8, r2
 8012cf0:	bf3c      	itt	cc
 8012cf2:	f10c 0208 	addcc.w	r2, ip, #8
 8012cf6:	6102      	strcc	r2, [r0, #16]
 8012cf8:	f108 0201 	add.w	r2, r8, #1
 8012cfc:	6082      	str	r2, [r0, #8]
 8012cfe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012d02:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012d06:	f8ac 6000 	strh.w	r6, [ip]
 8012d0a:	2700      	movs	r7, #0
 8012d0c:	45b6      	cmp	lr, r6
 8012d0e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8012d12:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012d16:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012d1a:	442b      	add	r3, r5
 8012d1c:	d04d      	beq.n	8012dba <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8012d1e:	9f04      	ldr	r7, [sp, #16]
 8012d20:	1aff      	subs	r7, r7, r3
 8012d22:	443d      	add	r5, r7
 8012d24:	016d      	lsls	r5, r5, #5
 8012d26:	fb95 f8f1 	sdiv	r8, r5, r1
 8012d2a:	fb01 5518 	mls	r5, r1, r8, r5
 8012d2e:	2d00      	cmp	r5, #0
 8012d30:	bfb8      	it	lt
 8012d32:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012d36:	f108 0701 	add.w	r7, r8, #1
 8012d3a:	bfb8      	it	lt
 8012d3c:	186d      	addlt	r5, r5, r1
 8012d3e:	1a64      	subs	r4, r4, r1
 8012d40:	9703      	str	r7, [sp, #12]
 8012d42:	f04f 0a00 	mov.w	sl, #0
 8012d46:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012d4a:	1964      	adds	r4, r4, r5
 8012d4c:	bf58      	it	pl
 8012d4e:	9f03      	ldrpl	r7, [sp, #12]
 8012d50:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012d54:	bf48      	it	mi
 8012d56:	4647      	movmi	r7, r8
 8012d58:	44bb      	add	fp, r7
 8012d5a:	f8ac b004 	strh.w	fp, [ip, #4]
 8012d5e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012d62:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012d66:	f8ac b006 	strh.w	fp, [ip, #6]
 8012d6a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012d6e:	443b      	add	r3, r7
 8012d70:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012d74:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012d78:	bf58      	it	pl
 8012d7a:	1a64      	subpl	r4, r4, r1
 8012d7c:	ea5b 0707 	orrs.w	r7, fp, r7
 8012d80:	444e      	add	r6, r9
 8012d82:	d011      	beq.n	8012da8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012d84:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012d88:	f1bb 0f00 	cmp.w	fp, #0
 8012d8c:	db0c      	blt.n	8012da8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012d8e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012d90:	45bb      	cmp	fp, r7
 8012d92:	da09      	bge.n	8012da8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012d94:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012d98:	45bb      	cmp	fp, r7
 8012d9a:	bf3c      	itt	cc
 8012d9c:	f10c 0708 	addcc.w	r7, ip, #8
 8012da0:	6107      	strcc	r7, [r0, #16]
 8012da2:	f10b 0701 	add.w	r7, fp, #1
 8012da6:	6087      	str	r7, [r0, #8]
 8012da8:	6907      	ldr	r7, [r0, #16]
 8012daa:	45b6      	cmp	lr, r6
 8012dac:	803e      	strh	r6, [r7, #0]
 8012dae:	807a      	strh	r2, [r7, #2]
 8012db0:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012db4:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012db8:	d1c5      	bne.n	8012d46 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8012dba:	9a04      	ldr	r2, [sp, #16]
 8012dbc:	1ad3      	subs	r3, r2, r3
 8012dbe:	6902      	ldr	r2, [r0, #16]
 8012dc0:	8891      	ldrh	r1, [r2, #4]
 8012dc2:	88d6      	ldrh	r6, [r2, #6]
 8012dc4:	4419      	add	r1, r3
 8012dc6:	8091      	strh	r1, [r2, #4]
 8012dc8:	9902      	ldr	r1, [sp, #8]
 8012dca:	f101 0c20 	add.w	ip, r1, #32
 8012dce:	9901      	ldr	r1, [sp, #4]
 8012dd0:	ebac 0c01 	sub.w	ip, ip, r1
 8012dd4:	fb03 630c 	mla	r3, r3, ip, r6
 8012dd8:	80d3      	strh	r3, [r2, #6]
 8012dda:	e74c      	b.n	8012c76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012ddc:	9d05      	ldr	r5, [sp, #20]
 8012dde:	1aa2      	subs	r2, r4, r2
 8012de0:	eba5 0501 	sub.w	r5, r5, r1
 8012de4:	9508      	str	r5, [sp, #32]
 8012de6:	9202      	str	r2, [sp, #8]
 8012de8:	f140 8128 	bpl.w	801303c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8012dec:	9a03      	ldr	r2, [sp, #12]
 8012dee:	2a00      	cmp	r2, #0
 8012df0:	f6ff af41 	blt.w	8012c76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012df4:	9a02      	ldr	r2, [sp, #8]
 8012df6:	4252      	negs	r2, r2
 8012df8:	9202      	str	r2, [sp, #8]
 8012dfa:	9a06      	ldr	r2, [sp, #24]
 8012dfc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012e00:	f04f 34ff 	mov.w	r4, #4294967295
 8012e04:	9206      	str	r2, [sp, #24]
 8012e06:	462a      	mov	r2, r5
 8012e08:	940b      	str	r4, [sp, #44]	; 0x2c
 8012e0a:	435a      	muls	r2, r3
 8012e0c:	2400      	movs	r4, #0
 8012e0e:	9d02      	ldr	r5, [sp, #8]
 8012e10:	9401      	str	r4, [sp, #4]
 8012e12:	9c02      	ldr	r4, [sp, #8]
 8012e14:	fb92 f4f4 	sdiv	r4, r2, r4
 8012e18:	fb05 2214 	mls	r2, r5, r4, r2
 8012e1c:	2a00      	cmp	r2, #0
 8012e1e:	9207      	str	r2, [sp, #28]
 8012e20:	bfbc      	itt	lt
 8012e22:	1952      	addlt	r2, r2, r5
 8012e24:	9207      	strlt	r2, [sp, #28]
 8012e26:	9a01      	ldr	r2, [sp, #4]
 8012e28:	6905      	ldr	r5, [r0, #16]
 8012e2a:	bfb8      	it	lt
 8012e2c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012e30:	eb04 0901 	add.w	r9, r4, r1
 8012e34:	429a      	cmp	r2, r3
 8012e36:	ea4f 1669 	mov.w	r6, r9, asr #5
 8012e3a:	f040 8112 	bne.w	8013062 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8012e3e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012e42:	429e      	cmp	r6, r3
 8012e44:	d104      	bne.n	8012e50 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012e46:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012e4a:	9a03      	ldr	r2, [sp, #12]
 8012e4c:	429a      	cmp	r2, r3
 8012e4e:	d01b      	beq.n	8012e88 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012e50:	88ea      	ldrh	r2, [r5, #6]
 8012e52:	88ab      	ldrh	r3, [r5, #4]
 8012e54:	4313      	orrs	r3, r2
 8012e56:	d010      	beq.n	8012e7a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012e58:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012e5c:	2a00      	cmp	r2, #0
 8012e5e:	db0c      	blt.n	8012e7a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012e60:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012e62:	429a      	cmp	r2, r3
 8012e64:	da09      	bge.n	8012e7a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012e66:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8012e6a:	429a      	cmp	r2, r3
 8012e6c:	bf38      	it	cc
 8012e6e:	3508      	addcc	r5, #8
 8012e70:	f102 0201 	add.w	r2, r2, #1
 8012e74:	bf38      	it	cc
 8012e76:	6105      	strcc	r5, [r0, #16]
 8012e78:	6082      	str	r2, [r0, #8]
 8012e7a:	6903      	ldr	r3, [r0, #16]
 8012e7c:	9a03      	ldr	r2, [sp, #12]
 8012e7e:	805a      	strh	r2, [r3, #2]
 8012e80:	2200      	movs	r2, #0
 8012e82:	801e      	strh	r6, [r3, #0]
 8012e84:	809a      	strh	r2, [r3, #4]
 8012e86:	80da      	strh	r2, [r3, #6]
 8012e88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012e8a:	9a03      	ldr	r2, [sp, #12]
 8012e8c:	6901      	ldr	r1, [r0, #16]
 8012e8e:	441a      	add	r2, r3
 8012e90:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012e94:	42b3      	cmp	r3, r6
 8012e96:	d103      	bne.n	8012ea0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012e98:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012e9c:	429a      	cmp	r2, r3
 8012e9e:	d01a      	beq.n	8012ed6 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012ea0:	88cc      	ldrh	r4, [r1, #6]
 8012ea2:	888b      	ldrh	r3, [r1, #4]
 8012ea4:	4323      	orrs	r3, r4
 8012ea6:	d010      	beq.n	8012eca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ea8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012eac:	2c00      	cmp	r4, #0
 8012eae:	db0c      	blt.n	8012eca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012eb0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012eb2:	429c      	cmp	r4, r3
 8012eb4:	da09      	bge.n	8012eca <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012eb6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012eba:	429c      	cmp	r4, r3
 8012ebc:	bf38      	it	cc
 8012ebe:	3108      	addcc	r1, #8
 8012ec0:	f104 0401 	add.w	r4, r4, #1
 8012ec4:	bf38      	it	cc
 8012ec6:	6101      	strcc	r1, [r0, #16]
 8012ec8:	6084      	str	r4, [r0, #8]
 8012eca:	6903      	ldr	r3, [r0, #16]
 8012ecc:	2100      	movs	r1, #0
 8012ece:	801e      	strh	r6, [r3, #0]
 8012ed0:	805a      	strh	r2, [r3, #2]
 8012ed2:	8099      	strh	r1, [r3, #4]
 8012ed4:	80d9      	strh	r1, [r3, #6]
 8012ed6:	9b06      	ldr	r3, [sp, #24]
 8012ed8:	4293      	cmp	r3, r2
 8012eda:	f000 8082 	beq.w	8012fe2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8012ede:	9b08      	ldr	r3, [sp, #32]
 8012ee0:	9c02      	ldr	r4, [sp, #8]
 8012ee2:	9902      	ldr	r1, [sp, #8]
 8012ee4:	015b      	lsls	r3, r3, #5
 8012ee6:	fb93 f1f1 	sdiv	r1, r3, r1
 8012eea:	fb04 3311 	mls	r3, r4, r1, r3
 8012eee:	2b00      	cmp	r3, #0
 8012ef0:	9103      	str	r1, [sp, #12]
 8012ef2:	9308      	str	r3, [sp, #32]
 8012ef4:	da04      	bge.n	8012f00 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012ef6:	1e4b      	subs	r3, r1, #1
 8012ef8:	9303      	str	r3, [sp, #12]
 8012efa:	9b08      	ldr	r3, [sp, #32]
 8012efc:	4423      	add	r3, r4
 8012efe:	9308      	str	r3, [sp, #32]
 8012f00:	9b07      	ldr	r3, [sp, #28]
 8012f02:	9902      	ldr	r1, [sp, #8]
 8012f04:	1a5b      	subs	r3, r3, r1
 8012f06:	9307      	str	r3, [sp, #28]
 8012f08:	9b01      	ldr	r3, [sp, #4]
 8012f0a:	f1c3 0320 	rsb	r3, r3, #32
 8012f0e:	930e      	str	r3, [sp, #56]	; 0x38
 8012f10:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012f12:	9b01      	ldr	r3, [sp, #4]
 8012f14:	1a5b      	subs	r3, r3, r1
 8012f16:	464f      	mov	r7, r9
 8012f18:	930a      	str	r3, [sp, #40]	; 0x28
 8012f1a:	2600      	movs	r6, #0
 8012f1c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012f20:	185b      	adds	r3, r3, r1
 8012f22:	bf58      	it	pl
 8012f24:	9902      	ldrpl	r1, [sp, #8]
 8012f26:	9307      	str	r3, [sp, #28]
 8012f28:	bf5d      	ittte	pl
 8012f2a:	1a5b      	subpl	r3, r3, r1
 8012f2c:	9307      	strpl	r3, [sp, #28]
 8012f2e:	9b03      	ldrpl	r3, [sp, #12]
 8012f30:	9903      	ldrmi	r1, [sp, #12]
 8012f32:	bf58      	it	pl
 8012f34:	1c59      	addpl	r1, r3, #1
 8012f36:	4489      	add	r9, r1
 8012f38:	2a00      	cmp	r2, #0
 8012f3a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8012f3e:	db2e      	blt.n	8012f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012f40:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012f42:	4293      	cmp	r3, r2
 8012f44:	dd2b      	ble.n	8012f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012f46:	9c01      	ldr	r4, [sp, #4]
 8012f48:	6905      	ldr	r5, [r0, #16]
 8012f4a:	46a0      	mov	r8, r4
 8012f4c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8012f4e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012f52:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012f56:	45a0      	cmp	r8, r4
 8012f58:	f040 814f 	bne.w	80131fa <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8012f5c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012f60:	4551      	cmp	r1, sl
 8012f62:	d103      	bne.n	8012f6c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012f64:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012f68:	4291      	cmp	r1, r2
 8012f6a:	d018      	beq.n	8012f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012f6c:	ea5c 010e 	orrs.w	r1, ip, lr
 8012f70:	d00f      	beq.n	8012f92 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012f72:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012f76:	2900      	cmp	r1, #0
 8012f78:	db0b      	blt.n	8012f92 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012f7a:	428b      	cmp	r3, r1
 8012f7c:	dd09      	ble.n	8012f92 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012f7e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012f82:	4299      	cmp	r1, r3
 8012f84:	bf38      	it	cc
 8012f86:	3508      	addcc	r5, #8
 8012f88:	f101 0101 	add.w	r1, r1, #1
 8012f8c:	bf38      	it	cc
 8012f8e:	6105      	strcc	r5, [r0, #16]
 8012f90:	6081      	str	r1, [r0, #8]
 8012f92:	6903      	ldr	r3, [r0, #16]
 8012f94:	f8a3 a000 	strh.w	sl, [r3]
 8012f98:	805a      	strh	r2, [r3, #2]
 8012f9a:	809e      	strh	r6, [r3, #4]
 8012f9c:	80de      	strh	r6, [r3, #6]
 8012f9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012fa0:	6901      	ldr	r1, [r0, #16]
 8012fa2:	441a      	add	r2, r3
 8012fa4:	88cc      	ldrh	r4, [r1, #6]
 8012fa6:	888b      	ldrh	r3, [r1, #4]
 8012fa8:	4323      	orrs	r3, r4
 8012faa:	d010      	beq.n	8012fce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012fac:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012fb0:	2c00      	cmp	r4, #0
 8012fb2:	db0c      	blt.n	8012fce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012fb4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012fb6:	429c      	cmp	r4, r3
 8012fb8:	da09      	bge.n	8012fce <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012fba:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012fbe:	429c      	cmp	r4, r3
 8012fc0:	bf38      	it	cc
 8012fc2:	3108      	addcc	r1, #8
 8012fc4:	f104 0401 	add.w	r4, r4, #1
 8012fc8:	bf38      	it	cc
 8012fca:	6101      	strcc	r1, [r0, #16]
 8012fcc:	6084      	str	r4, [r0, #8]
 8012fce:	6903      	ldr	r3, [r0, #16]
 8012fd0:	f8a3 a000 	strh.w	sl, [r3]
 8012fd4:	805a      	strh	r2, [r3, #2]
 8012fd6:	809e      	strh	r6, [r3, #4]
 8012fd8:	80de      	strh	r6, [r3, #6]
 8012fda:	9b06      	ldr	r3, [sp, #24]
 8012fdc:	4293      	cmp	r3, r2
 8012fde:	464f      	mov	r7, r9
 8012fe0:	d19c      	bne.n	8012f1c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012fe2:	9b01      	ldr	r3, [sp, #4]
 8012fe4:	6907      	ldr	r7, [r0, #16]
 8012fe6:	f1c3 0620 	rsb	r6, r3, #32
 8012fea:	9b05      	ldr	r3, [sp, #20]
 8012fec:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012ff0:	9b04      	ldr	r3, [sp, #16]
 8012ff2:	429e      	cmp	r6, r3
 8012ff4:	f040 81cc 	bne.w	8013390 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012ff8:	f9b7 3000 	ldrsh.w	r3, [r7]
 8012ffc:	459e      	cmp	lr, r3
 8012ffe:	d104      	bne.n	801300a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8013000:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013004:	429a      	cmp	r2, r3
 8013006:	f43f ae36 	beq.w	8012c76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801300a:	88f9      	ldrh	r1, [r7, #6]
 801300c:	88bb      	ldrh	r3, [r7, #4]
 801300e:	430b      	orrs	r3, r1
 8013010:	d010      	beq.n	8013034 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013012:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8013016:	2b00      	cmp	r3, #0
 8013018:	db0c      	blt.n	8013034 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801301a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801301c:	428b      	cmp	r3, r1
 801301e:	da09      	bge.n	8013034 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8013020:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8013024:	428b      	cmp	r3, r1
 8013026:	bf38      	it	cc
 8013028:	3708      	addcc	r7, #8
 801302a:	f103 0301 	add.w	r3, r3, #1
 801302e:	bf38      	it	cc
 8013030:	6107      	strcc	r7, [r0, #16]
 8013032:	6083      	str	r3, [r0, #8]
 8013034:	6903      	ldr	r3, [r0, #16]
 8013036:	f8a3 e000 	strh.w	lr, [r3]
 801303a:	e5ff      	b.n	8012c3c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801303c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801303e:	9c03      	ldr	r4, [sp, #12]
 8013040:	42a2      	cmp	r2, r4
 8013042:	f6ff ae18 	blt.w	8012c76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8013046:	9c06      	ldr	r4, [sp, #24]
 8013048:	42a2      	cmp	r2, r4
 801304a:	bfb8      	it	lt
 801304c:	3201      	addlt	r2, #1
 801304e:	9c08      	ldr	r4, [sp, #32]
 8013050:	bfb8      	it	lt
 8013052:	9206      	strlt	r2, [sp, #24]
 8013054:	f1c3 0220 	rsb	r2, r3, #32
 8013058:	4362      	muls	r2, r4
 801305a:	2401      	movs	r4, #1
 801305c:	940b      	str	r4, [sp, #44]	; 0x2c
 801305e:	2420      	movs	r4, #32
 8013060:	e6d5      	b.n	8012e0e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8013062:	f009 021f 	and.w	r2, r9, #31
 8013066:	ea4f 1861 	mov.w	r8, r1, asr #5
 801306a:	920c      	str	r2, [sp, #48]	; 0x30
 801306c:	9a01      	ldr	r2, [sp, #4]
 801306e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8013072:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8013076:	45b0      	cmp	r8, r6
 8013078:	f001 011f 	and.w	r1, r1, #31
 801307c:	eba2 0203 	sub.w	r2, r2, r3
 8013080:	d108      	bne.n	8013094 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8013082:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013084:	4419      	add	r1, r3
 8013086:	4496      	add	lr, r2
 8013088:	fb02 a101 	mla	r1, r2, r1, sl
 801308c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8013090:	80e9      	strh	r1, [r5, #6]
 8013092:	e6f9      	b.n	8012e88 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8013094:	2c00      	cmp	r4, #0
 8013096:	f2c0 80a9 	blt.w	80131ec <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801309a:	2701      	movs	r7, #1
 801309c:	f1c1 0c20 	rsb	ip, r1, #32
 80130a0:	970a      	str	r7, [sp, #40]	; 0x28
 80130a2:	fb02 f20c 	mul.w	r2, r2, ip
 80130a6:	2720      	movs	r7, #32
 80130a8:	9709      	str	r7, [sp, #36]	; 0x24
 80130aa:	fb92 fcf4 	sdiv	ip, r2, r4
 80130ae:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80130b0:	fb04 221c 	mls	r2, r4, ip, r2
 80130b4:	2a00      	cmp	r2, #0
 80130b6:	bfb8      	it	lt
 80130b8:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 80130bc:	4439      	add	r1, r7
 80130be:	fb0c a101 	mla	r1, ip, r1, sl
 80130c2:	80e9      	strh	r1, [r5, #6]
 80130c4:	44e6      	add	lr, ip
 80130c6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80130c8:	f8a5 e004 	strh.w	lr, [r5, #4]
 80130cc:	eb08 0501 	add.w	r5, r8, r1
 80130d0:	6901      	ldr	r1, [r0, #16]
 80130d2:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 80130d6:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 80130da:	bfb8      	it	lt
 80130dc:	1912      	addlt	r2, r2, r4
 80130de:	ea58 070e 	orrs.w	r7, r8, lr
 80130e2:	d010      	beq.n	8013106 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80130e4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 80130e8:	f1be 0f00 	cmp.w	lr, #0
 80130ec:	db0b      	blt.n	8013106 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80130ee:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80130f0:	45be      	cmp	lr, r7
 80130f2:	da08      	bge.n	8013106 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 80130f4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80130f8:	45be      	cmp	lr, r7
 80130fa:	bf3c      	itt	cc
 80130fc:	3108      	addcc	r1, #8
 80130fe:	6101      	strcc	r1, [r0, #16]
 8013100:	f10e 0101 	add.w	r1, lr, #1
 8013104:	6081      	str	r1, [r0, #8]
 8013106:	6901      	ldr	r1, [r0, #16]
 8013108:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801310c:	800d      	strh	r5, [r1, #0]
 801310e:	f04f 0e00 	mov.w	lr, #0
 8013112:	42ae      	cmp	r6, r5
 8013114:	f8a1 8002 	strh.w	r8, [r1, #2]
 8013118:	f8a1 e004 	strh.w	lr, [r1, #4]
 801311c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8013120:	4463      	add	r3, ip
 8013122:	d054      	beq.n	80131ce <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8013124:	9901      	ldr	r1, [sp, #4]
 8013126:	1ac9      	subs	r1, r1, r3
 8013128:	4461      	add	r1, ip
 801312a:	0149      	lsls	r1, r1, #5
 801312c:	fb91 fef4 	sdiv	lr, r1, r4
 8013130:	fb04 111e 	mls	r1, r4, lr, r1
 8013134:	2900      	cmp	r1, #0
 8013136:	bfb8      	it	lt
 8013138:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801313c:	f10e 0701 	add.w	r7, lr, #1
 8013140:	bfb8      	it	lt
 8013142:	1909      	addlt	r1, r1, r4
 8013144:	1b12      	subs	r2, r2, r4
 8013146:	970d      	str	r7, [sp, #52]	; 0x34
 8013148:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801314c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801314e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8013152:	1852      	adds	r2, r2, r1
 8013154:	bf54      	ite	pl
 8013156:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801315a:	46f4      	movmi	ip, lr
 801315c:	44e3      	add	fp, ip
 801315e:	f8aa b004 	strh.w	fp, [sl, #4]
 8013162:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8013166:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801316a:	f8aa b006 	strh.w	fp, [sl, #6]
 801316e:	4463      	add	r3, ip
 8013170:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013174:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8013178:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801317c:	bf58      	it	pl
 801317e:	1b12      	subpl	r2, r2, r4
 8013180:	443d      	add	r5, r7
 8013182:	ea5b 070a 	orrs.w	r7, fp, sl
 8013186:	d014      	beq.n	80131b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013188:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801318c:	f1ba 0f00 	cmp.w	sl, #0
 8013190:	db0f      	blt.n	80131b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013192:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013194:	45ba      	cmp	sl, r7
 8013196:	da0c      	bge.n	80131b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8013198:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801319c:	45ba      	cmp	sl, r7
 801319e:	bf38      	it	cc
 80131a0:	f10c 0c08 	addcc.w	ip, ip, #8
 80131a4:	f10a 0a01 	add.w	sl, sl, #1
 80131a8:	bf38      	it	cc
 80131aa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80131ae:	f8c0 a008 	str.w	sl, [r0, #8]
 80131b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80131b6:	f04f 0700 	mov.w	r7, #0
 80131ba:	42ae      	cmp	r6, r5
 80131bc:	f8ac 5000 	strh.w	r5, [ip]
 80131c0:	f8ac 8002 	strh.w	r8, [ip, #2]
 80131c4:	f8ac 7004 	strh.w	r7, [ip, #4]
 80131c8:	f8ac 7006 	strh.w	r7, [ip, #6]
 80131cc:	d1bc      	bne.n	8013148 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 80131ce:	6904      	ldr	r4, [r0, #16]
 80131d0:	9a01      	ldr	r2, [sp, #4]
 80131d2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80131d4:	1ad3      	subs	r3, r2, r3
 80131d6:	88a2      	ldrh	r2, [r4, #4]
 80131d8:	441a      	add	r2, r3
 80131da:	80a2      	strh	r2, [r4, #4]
 80131dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80131de:	3120      	adds	r1, #32
 80131e0:	1a89      	subs	r1, r1, r2
 80131e2:	88e2      	ldrh	r2, [r4, #6]
 80131e4:	fb03 2301 	mla	r3, r3, r1, r2
 80131e8:	80e3      	strh	r3, [r4, #6]
 80131ea:	e64d      	b.n	8012e88 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80131ec:	f04f 37ff 	mov.w	r7, #4294967295
 80131f0:	970a      	str	r7, [sp, #40]	; 0x28
 80131f2:	434a      	muls	r2, r1
 80131f4:	4264      	negs	r4, r4
 80131f6:	2700      	movs	r7, #0
 80131f8:	e756      	b.n	80130a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 80131fa:	ea4f 1867 	mov.w	r8, r7, asr #5
 80131fe:	f009 031f 	and.w	r3, r9, #31
 8013202:	45d0      	cmp	r8, sl
 8013204:	f007 071f 	and.w	r7, r7, #31
 8013208:	930f      	str	r3, [sp, #60]	; 0x3c
 801320a:	fa1f fc8c 	uxth.w	ip, ip
 801320e:	fa1f fe8e 	uxth.w	lr, lr
 8013212:	d10a      	bne.n	801322a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8013214:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013216:	449c      	add	ip, r3
 8013218:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801321a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801321e:	441f      	add	r7, r3
 8013220:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013222:	fb03 e707 	mla	r7, r3, r7, lr
 8013226:	80ef      	strh	r7, [r5, #6]
 8013228:	e6b9      	b.n	8012f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801322a:	2900      	cmp	r1, #0
 801322c:	f2c0 80a8 	blt.w	8013380 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8013230:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013232:	f1c7 0320 	rsb	r3, r7, #32
 8013236:	4363      	muls	r3, r4
 8013238:	2401      	movs	r4, #1
 801323a:	940d      	str	r4, [sp, #52]	; 0x34
 801323c:	2420      	movs	r4, #32
 801323e:	940c      	str	r4, [sp, #48]	; 0x30
 8013240:	fb93 f4f1 	sdiv	r4, r3, r1
 8013244:	fb01 3b14 	mls	fp, r1, r4, r3
 8013248:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801324a:	f1bb 0f00 	cmp.w	fp, #0
 801324e:	bfb8      	it	lt
 8013250:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8013254:	441f      	add	r7, r3
 8013256:	fb04 e707 	mla	r7, r4, r7, lr
 801325a:	44a4      	add	ip, r4
 801325c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8013260:	80ef      	strh	r7, [r5, #6]
 8013262:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013266:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013268:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801326c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013270:	bfb8      	it	lt
 8013272:	448b      	addlt	fp, r1
 8013274:	eb08 0503 	add.w	r5, r8, r3
 8013278:	ea5e 0307 	orrs.w	r3, lr, r7
 801327c:	d011      	beq.n	80132a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801327e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8013282:	f1be 0f00 	cmp.w	lr, #0
 8013286:	db0c      	blt.n	80132a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8013288:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801328a:	45be      	cmp	lr, r7
 801328c:	da09      	bge.n	80132a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801328e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8013292:	45be      	cmp	lr, r7
 8013294:	bf3c      	itt	cc
 8013296:	f10c 0708 	addcc.w	r7, ip, #8
 801329a:	6107      	strcc	r7, [r0, #16]
 801329c:	f10e 0701 	add.w	r7, lr, #1
 80132a0:	6087      	str	r7, [r0, #8]
 80132a2:	6907      	ldr	r7, [r0, #16]
 80132a4:	b213      	sxth	r3, r2
 80132a6:	9310      	str	r3, [sp, #64]	; 0x40
 80132a8:	807b      	strh	r3, [r7, #2]
 80132aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80132ac:	803d      	strh	r5, [r7, #0]
 80132ae:	4555      	cmp	r5, sl
 80132b0:	80be      	strh	r6, [r7, #4]
 80132b2:	80fe      	strh	r6, [r7, #6]
 80132b4:	eb04 0c03 	add.w	ip, r4, r3
 80132b8:	d051      	beq.n	801335e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 80132ba:	9b01      	ldr	r3, [sp, #4]
 80132bc:	eba3 070c 	sub.w	r7, r3, ip
 80132c0:	443c      	add	r4, r7
 80132c2:	0164      	lsls	r4, r4, #5
 80132c4:	fb94 f8f1 	sdiv	r8, r4, r1
 80132c8:	fb01 4418 	mls	r4, r1, r8, r4
 80132cc:	2c00      	cmp	r4, #0
 80132ce:	bfb8      	it	lt
 80132d0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80132d4:	ebab 0301 	sub.w	r3, fp, r1
 80132d8:	f108 0701 	add.w	r7, r8, #1
 80132dc:	bfb8      	it	lt
 80132de:	1864      	addlt	r4, r4, r1
 80132e0:	9309      	str	r3, [sp, #36]	; 0x24
 80132e2:	9711      	str	r7, [sp, #68]	; 0x44
 80132e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80132e6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 80132ea:	191b      	adds	r3, r3, r4
 80132ec:	bf58      	it	pl
 80132ee:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 80132f0:	f8be b004 	ldrh.w	fp, [lr, #4]
 80132f4:	9309      	str	r3, [sp, #36]	; 0x24
 80132f6:	bf48      	it	mi
 80132f8:	4647      	movmi	r7, r8
 80132fa:	44bb      	add	fp, r7
 80132fc:	f8ae b004 	strh.w	fp, [lr, #4]
 8013300:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013304:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8013308:	f8ae b006 	strh.w	fp, [lr, #6]
 801330c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8013310:	44bc      	add	ip, r7
 8013312:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8013314:	f8be b006 	ldrh.w	fp, [lr, #6]
 8013318:	443d      	add	r5, r7
 801331a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 801331e:	bf5c      	itt	pl
 8013320:	1a5b      	subpl	r3, r3, r1
 8013322:	9309      	strpl	r3, [sp, #36]	; 0x24
 8013324:	ea5b 0307 	orrs.w	r3, fp, r7
 8013328:	d011      	beq.n	801334e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801332a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801332e:	f1bb 0f00 	cmp.w	fp, #0
 8013332:	db0c      	blt.n	801334e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8013334:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013336:	45bb      	cmp	fp, r7
 8013338:	da09      	bge.n	801334e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801333a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801333e:	45bb      	cmp	fp, r7
 8013340:	bf3c      	itt	cc
 8013342:	f10e 0708 	addcc.w	r7, lr, #8
 8013346:	6107      	strcc	r7, [r0, #16]
 8013348:	f10b 0701 	add.w	r7, fp, #1
 801334c:	6087      	str	r7, [r0, #8]
 801334e:	6907      	ldr	r7, [r0, #16]
 8013350:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013352:	803d      	strh	r5, [r7, #0]
 8013354:	4555      	cmp	r5, sl
 8013356:	807b      	strh	r3, [r7, #2]
 8013358:	80be      	strh	r6, [r7, #4]
 801335a:	80fe      	strh	r6, [r7, #6]
 801335c:	d1c2      	bne.n	80132e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801335e:	9b01      	ldr	r3, [sp, #4]
 8013360:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013362:	eba3 0c0c 	sub.w	ip, r3, ip
 8013366:	6903      	ldr	r3, [r0, #16]
 8013368:	8899      	ldrh	r1, [r3, #4]
 801336a:	4461      	add	r1, ip
 801336c:	8099      	strh	r1, [r3, #4]
 801336e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013370:	3720      	adds	r7, #32
 8013372:	1a7f      	subs	r7, r7, r1
 8013374:	88d9      	ldrh	r1, [r3, #6]
 8013376:	fb0c 1c07 	mla	ip, ip, r7, r1
 801337a:	f8a3 c006 	strh.w	ip, [r3, #6]
 801337e:	e60e      	b.n	8012f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8013380:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013382:	f04f 34ff 	mov.w	r4, #4294967295
 8013386:	940d      	str	r4, [sp, #52]	; 0x34
 8013388:	437b      	muls	r3, r7
 801338a:	4249      	negs	r1, r1
 801338c:	2400      	movs	r4, #0
 801338e:	e756      	b.n	801323e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8013390:	9905      	ldr	r1, [sp, #20]
 8013392:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8013396:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801339a:	f001 011f 	and.w	r1, r1, #31
 801339e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 80133a2:	9102      	str	r1, [sp, #8]
 80133a4:	9904      	ldr	r1, [sp, #16]
 80133a6:	45f3      	cmp	fp, lr
 80133a8:	f009 0c1f 	and.w	ip, r9, #31
 80133ac:	eba1 0406 	sub.w	r4, r1, r6
 80133b0:	d108      	bne.n	80133c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 80133b2:	9b02      	ldr	r3, [sp, #8]
 80133b4:	449c      	add	ip, r3
 80133b6:	44a0      	add	r8, r4
 80133b8:	fb04 a40c 	mla	r4, r4, ip, sl
 80133bc:	f8a7 8004 	strh.w	r8, [r7, #4]
 80133c0:	80fc      	strh	r4, [r7, #6]
 80133c2:	e458      	b.n	8012c76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80133c4:	9905      	ldr	r1, [sp, #20]
 80133c6:	ebb1 0109 	subs.w	r1, r1, r9
 80133ca:	bf5b      	ittet	pl
 80133cc:	f1cc 0520 	rsbpl	r5, ip, #32
 80133d0:	436c      	mulpl	r4, r5
 80133d2:	2500      	movmi	r5, #0
 80133d4:	2520      	movpl	r5, #32
 80133d6:	bf44      	itt	mi
 80133d8:	fb04 f40c 	mulmi.w	r4, r4, ip
 80133dc:	4249      	negmi	r1, r1
 80133de:	9501      	str	r5, [sp, #4]
 80133e0:	9b01      	ldr	r3, [sp, #4]
 80133e2:	fb94 f5f1 	sdiv	r5, r4, r1
 80133e6:	fb01 4415 	mls	r4, r1, r5, r4
 80133ea:	bf54      	ite	pl
 80133ec:	f04f 0901 	movpl.w	r9, #1
 80133f0:	f04f 39ff 	movmi.w	r9, #4294967295
 80133f4:	2c00      	cmp	r4, #0
 80133f6:	bfb8      	it	lt
 80133f8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80133fc:	449c      	add	ip, r3
 80133fe:	44a8      	add	r8, r5
 8013400:	fb05 ac0c 	mla	ip, r5, ip, sl
 8013404:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013408:	f8a7 c006 	strh.w	ip, [r7, #6]
 801340c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013410:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8013414:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013418:	bfb8      	it	lt
 801341a:	1864      	addlt	r4, r4, r1
 801341c:	ea58 0707 	orrs.w	r7, r8, r7
 8013420:	eb0b 0309 	add.w	r3, fp, r9
 8013424:	d011      	beq.n	801344a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013426:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801342a:	f1b8 0f00 	cmp.w	r8, #0
 801342e:	db0c      	blt.n	801344a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013430:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8013432:	45b8      	cmp	r8, r7
 8013434:	da09      	bge.n	801344a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013436:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801343a:	45b8      	cmp	r8, r7
 801343c:	bf3c      	itt	cc
 801343e:	f10c 0708 	addcc.w	r7, ip, #8
 8013442:	6107      	strcc	r7, [r0, #16]
 8013444:	f108 0701 	add.w	r7, r8, #1
 8013448:	6087      	str	r7, [r0, #8]
 801344a:	6907      	ldr	r7, [r0, #16]
 801344c:	f04f 0c00 	mov.w	ip, #0
 8013450:	b212      	sxth	r2, r2
 8013452:	459e      	cmp	lr, r3
 8013454:	803b      	strh	r3, [r7, #0]
 8013456:	807a      	strh	r2, [r7, #2]
 8013458:	f8a7 c004 	strh.w	ip, [r7, #4]
 801345c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013460:	442e      	add	r6, r5
 8013462:	d04d      	beq.n	8013500 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8013464:	9f04      	ldr	r7, [sp, #16]
 8013466:	1bbf      	subs	r7, r7, r6
 8013468:	443d      	add	r5, r7
 801346a:	016d      	lsls	r5, r5, #5
 801346c:	fb95 f8f1 	sdiv	r8, r5, r1
 8013470:	fb01 5518 	mls	r5, r1, r8, r5
 8013474:	4565      	cmp	r5, ip
 8013476:	bfb8      	it	lt
 8013478:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801347c:	f108 0701 	add.w	r7, r8, #1
 8013480:	bfb8      	it	lt
 8013482:	186d      	addlt	r5, r5, r1
 8013484:	1a64      	subs	r4, r4, r1
 8013486:	9703      	str	r7, [sp, #12]
 8013488:	f04f 0a00 	mov.w	sl, #0
 801348c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013490:	1964      	adds	r4, r4, r5
 8013492:	bf58      	it	pl
 8013494:	9f03      	ldrpl	r7, [sp, #12]
 8013496:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801349a:	bf48      	it	mi
 801349c:	4647      	movmi	r7, r8
 801349e:	44bb      	add	fp, r7
 80134a0:	f8ac b004 	strh.w	fp, [ip, #4]
 80134a4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80134a8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80134ac:	f8ac b006 	strh.w	fp, [ip, #6]
 80134b0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80134b4:	443e      	add	r6, r7
 80134b6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80134ba:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80134be:	bf58      	it	pl
 80134c0:	1a64      	subpl	r4, r4, r1
 80134c2:	ea5b 0707 	orrs.w	r7, fp, r7
 80134c6:	444b      	add	r3, r9
 80134c8:	d011      	beq.n	80134ee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80134ca:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80134ce:	f1bb 0f00 	cmp.w	fp, #0
 80134d2:	db0c      	blt.n	80134ee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80134d4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80134d6:	45bb      	cmp	fp, r7
 80134d8:	da09      	bge.n	80134ee <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80134da:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80134de:	45bb      	cmp	fp, r7
 80134e0:	bf3c      	itt	cc
 80134e2:	f10c 0708 	addcc.w	r7, ip, #8
 80134e6:	6107      	strcc	r7, [r0, #16]
 80134e8:	f10b 0701 	add.w	r7, fp, #1
 80134ec:	6087      	str	r7, [r0, #8]
 80134ee:	6907      	ldr	r7, [r0, #16]
 80134f0:	459e      	cmp	lr, r3
 80134f2:	803b      	strh	r3, [r7, #0]
 80134f4:	807a      	strh	r2, [r7, #2]
 80134f6:	f8a7 a004 	strh.w	sl, [r7, #4]
 80134fa:	f8a7 a006 	strh.w	sl, [r7, #6]
 80134fe:	d1c5      	bne.n	801348c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013500:	9b04      	ldr	r3, [sp, #16]
 8013502:	1b9e      	subs	r6, r3, r6
 8013504:	6903      	ldr	r3, [r0, #16]
 8013506:	889a      	ldrh	r2, [r3, #4]
 8013508:	4432      	add	r2, r6
 801350a:	809a      	strh	r2, [r3, #4]
 801350c:	9a02      	ldr	r2, [sp, #8]
 801350e:	f102 0c20 	add.w	ip, r2, #32
 8013512:	9a01      	ldr	r2, [sp, #4]
 8013514:	ebac 0c02 	sub.w	ip, ip, r2
 8013518:	88da      	ldrh	r2, [r3, #6]
 801351a:	fb06 260c 	mla	r6, r6, ip, r2
 801351e:	80de      	strh	r6, [r3, #6]
 8013520:	f7ff bba9 	b.w	8012c76 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08013524 <_ZN8touchgfx7Outline6lineToEii>:
 8013524:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013526:	079b      	lsls	r3, r3, #30
 8013528:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801352a:	460e      	mov	r6, r1
 801352c:	4615      	mov	r5, r2
 801352e:	d511      	bpl.n	8013554 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013530:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8013534:	ea86 0701 	eor.w	r7, r6, r1
 8013538:	ea85 0302 	eor.w	r3, r5, r2
 801353c:	433b      	orrs	r3, r7
 801353e:	d009      	beq.n	8013554 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013540:	4633      	mov	r3, r6
 8013542:	9500      	str	r5, [sp, #0]
 8013544:	f7ff fb3e 	bl	8012bc4 <_ZN8touchgfx7Outline10renderLineEiiii>
 8013548:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801354a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801354e:	f043 0301 	orr.w	r3, r3, #1
 8013552:	6243      	str	r3, [r0, #36]	; 0x24
 8013554:	b003      	add	sp, #12
 8013556:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013558 <_ZN8touchgfx7Outline6moveToEii>:
 8013558:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801355a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801355c:	4615      	mov	r5, r2
 801355e:	079a      	lsls	r2, r3, #30
 8013560:	4604      	mov	r4, r0
 8013562:	460e      	mov	r6, r1
 8013564:	d401      	bmi.n	801356a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8013566:	f7ff faf9 	bl	8012b5c <_ZN8touchgfx7Outline5resetEv>
 801356a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801356c:	07db      	lsls	r3, r3, #31
 801356e:	d504      	bpl.n	801357a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013570:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8013574:	4620      	mov	r0, r4
 8013576:	f7ff ffd5 	bl	8013524 <_ZN8touchgfx7Outline6lineToEii>
 801357a:	6923      	ldr	r3, [r4, #16]
 801357c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013580:	1170      	asrs	r0, r6, #5
 8013582:	4290      	cmp	r0, r2
 8013584:	ea4f 1165 	mov.w	r1, r5, asr #5
 8013588:	d103      	bne.n	8013592 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801358a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801358e:	4291      	cmp	r1, r2
 8013590:	d01a      	beq.n	80135c8 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8013592:	88df      	ldrh	r7, [r3, #6]
 8013594:	889a      	ldrh	r2, [r3, #4]
 8013596:	433a      	orrs	r2, r7
 8013598:	d010      	beq.n	80135bc <_ZN8touchgfx7Outline6moveToEii+0x64>
 801359a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801359e:	2a00      	cmp	r2, #0
 80135a0:	db0c      	blt.n	80135bc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80135a2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80135a4:	42ba      	cmp	r2, r7
 80135a6:	da09      	bge.n	80135bc <_ZN8touchgfx7Outline6moveToEii+0x64>
 80135a8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80135ac:	42ba      	cmp	r2, r7
 80135ae:	bf38      	it	cc
 80135b0:	3308      	addcc	r3, #8
 80135b2:	f102 0201 	add.w	r2, r2, #1
 80135b6:	bf38      	it	cc
 80135b8:	6123      	strcc	r3, [r4, #16]
 80135ba:	60a2      	str	r2, [r4, #8]
 80135bc:	6923      	ldr	r3, [r4, #16]
 80135be:	2200      	movs	r2, #0
 80135c0:	8018      	strh	r0, [r3, #0]
 80135c2:	8059      	strh	r1, [r3, #2]
 80135c4:	809a      	strh	r2, [r3, #4]
 80135c6:	80da      	strh	r2, [r3, #6]
 80135c8:	6166      	str	r6, [r4, #20]
 80135ca:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80135ce:	6225      	str	r5, [r4, #32]
 80135d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080135d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80135d2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80135d6:	b0d0      	sub	sp, #320	; 0x140
 80135d8:	466c      	mov	r4, sp
 80135da:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 80135de:	4627      	mov	r7, r4
 80135e0:	1a0d      	subs	r5, r1, r0
 80135e2:	2d48      	cmp	r5, #72	; 0x48
 80135e4:	f100 0308 	add.w	r3, r0, #8
 80135e8:	f340 80d5 	ble.w	8013796 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80135ec:	112d      	asrs	r5, r5, #4
 80135ee:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 80135f2:	f9b0 9000 	ldrsh.w	r9, [r0]
 80135f6:	6816      	ldr	r6, [r2, #0]
 80135f8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 80135fc:	6006      	str	r6, [r0, #0]
 80135fe:	6856      	ldr	r6, [r2, #4]
 8013600:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013604:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013608:	6046      	str	r6, [r0, #4]
 801360a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801360e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8013612:	f8a2 e004 	strh.w	lr, [r2, #4]
 8013616:	f8a2 c006 	strh.w	ip, [r2, #6]
 801361a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801361e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8013622:	4565      	cmp	r5, ip
 8013624:	f1a1 0208 	sub.w	r2, r1, #8
 8013628:	db06      	blt.n	8013638 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801362a:	d119      	bne.n	8013660 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801362c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013630:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8013634:	42ae      	cmp	r6, r5
 8013636:	dd13      	ble.n	8013660 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013638:	460e      	mov	r6, r1
 801363a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801363e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013642:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8013646:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801364a:	601d      	str	r5, [r3, #0]
 801364c:	6875      	ldr	r5, [r6, #4]
 801364e:	605d      	str	r5, [r3, #4]
 8013650:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013654:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013658:	f821 8c04 	strh.w	r8, [r1, #-4]
 801365c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013660:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013664:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013668:	42ae      	cmp	r6, r5
 801366a:	db06      	blt.n	801367a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801366c:	d116      	bne.n	801369c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801366e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013672:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013676:	45ac      	cmp	ip, r5
 8013678:	da10      	bge.n	801369c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801367a:	681d      	ldr	r5, [r3, #0]
 801367c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013680:	6005      	str	r5, [r0, #0]
 8013682:	685d      	ldr	r5, [r3, #4]
 8013684:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013688:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801368c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8013690:	6045      	str	r5, [r0, #4]
 8013692:	8146      	strh	r6, [r0, #10]
 8013694:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8013698:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801369c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80136a0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80136a4:	4565      	cmp	r5, ip
 80136a6:	db06      	blt.n	80136b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80136a8:	d119      	bne.n	80136de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80136aa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80136ae:	f9b0 5000 	ldrsh.w	r5, [r0]
 80136b2:	42ae      	cmp	r6, r5
 80136b4:	da13      	bge.n	80136de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80136b6:	460e      	mov	r6, r1
 80136b8:	f9b0 9000 	ldrsh.w	r9, [r0]
 80136bc:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80136c0:	6005      	str	r5, [r0, #0]
 80136c2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80136c6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80136ca:	6875      	ldr	r5, [r6, #4]
 80136cc:	6045      	str	r5, [r0, #4]
 80136ce:	f821 9c08 	strh.w	r9, [r1, #-8]
 80136d2:	f821 cc06 	strh.w	ip, [r1, #-6]
 80136d6:	f821 8c04 	strh.w	r8, [r1, #-4]
 80136da:	f821 ec02 	strh.w	lr, [r1, #-2]
 80136de:	3308      	adds	r3, #8
 80136e0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80136e4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80136e8:	45e6      	cmp	lr, ip
 80136ea:	dbf8      	blt.n	80136de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80136ec:	d105      	bne.n	80136fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80136ee:	f9b3 6000 	ldrsh.w	r6, [r3]
 80136f2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80136f6:	42ae      	cmp	r6, r5
 80136f8:	dbf1      	blt.n	80136de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80136fa:	4615      	mov	r5, r2
 80136fc:	3a08      	subs	r2, #8
 80136fe:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8013702:	45b4      	cmp	ip, r6
 8013704:	dbf9      	blt.n	80136fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013706:	d105      	bne.n	8013714 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8013708:	f9b0 8000 	ldrsh.w	r8, [r0]
 801370c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8013710:	45b0      	cmp	r8, r6
 8013712:	dbf2      	blt.n	80136fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013714:	4293      	cmp	r3, r2
 8013716:	f1a5 0608 	sub.w	r6, r5, #8
 801371a:	d816      	bhi.n	801374a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801371c:	f8d6 c000 	ldr.w	ip, [r6]
 8013720:	f9b3 a000 	ldrsh.w	sl, [r3]
 8013724:	f8c3 c000 	str.w	ip, [r3]
 8013728:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801372c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8013730:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8013734:	f8c3 c004 	str.w	ip, [r3, #4]
 8013738:	f825 ac08 	strh.w	sl, [r5, #-8]
 801373c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013740:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013744:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013748:	e7c9      	b.n	80136de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801374a:	f8d6 e000 	ldr.w	lr, [r6]
 801374e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8013752:	f8c0 e000 	str.w	lr, [r0]
 8013756:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801375a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801375e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8013762:	f8c0 e004 	str.w	lr, [r0, #4]
 8013766:	f825 ac08 	strh.w	sl, [r5, #-8]
 801376a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801376e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013772:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013776:	1acd      	subs	r5, r1, r3
 8013778:	1a16      	subs	r6, r2, r0
 801377a:	10ed      	asrs	r5, r5, #3
 801377c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8013780:	bfb5      	itete	lt
 8013782:	e9c4 0200 	strdlt	r0, r2, [r4]
 8013786:	e9c4 3100 	strdge	r3, r1, [r4]
 801378a:	460a      	movlt	r2, r1
 801378c:	4603      	movge	r3, r0
 801378e:	3408      	adds	r4, #8
 8013790:	4618      	mov	r0, r3
 8013792:	4611      	mov	r1, r2
 8013794:	e724      	b.n	80135e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013796:	4299      	cmp	r1, r3
 8013798:	d928      	bls.n	80137ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801379a:	f1a3 0210 	sub.w	r2, r3, #16
 801379e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80137a2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80137a6:	45ac      	cmp	ip, r5
 80137a8:	db06      	blt.n	80137b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80137aa:	d11d      	bne.n	80137e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80137ac:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80137b0:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80137b4:	42ae      	cmp	r6, r5
 80137b6:	da17      	bge.n	80137e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80137b8:	4615      	mov	r5, r2
 80137ba:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80137be:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80137c2:	6116      	str	r6, [r2, #16]
 80137c4:	686e      	ldr	r6, [r5, #4]
 80137c6:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80137ca:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80137ce:	f8a2 9008 	strh.w	r9, [r2, #8]
 80137d2:	42a8      	cmp	r0, r5
 80137d4:	6156      	str	r6, [r2, #20]
 80137d6:	f8a2 c00a 	strh.w	ip, [r2, #10]
 80137da:	f8a2 800c 	strh.w	r8, [r2, #12]
 80137de:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80137e2:	f1a2 0208 	sub.w	r2, r2, #8
 80137e6:	d1da      	bne.n	801379e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80137e8:	3308      	adds	r3, #8
 80137ea:	e7d4      	b.n	8013796 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80137ec:	42bc      	cmp	r4, r7
 80137ee:	d903      	bls.n	80137f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80137f0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80137f4:	3c08      	subs	r4, #8
 80137f6:	e6f3      	b.n	80135e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80137f8:	b050      	add	sp, #320	; 0x140
 80137fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080137fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80137fe:	b510      	push	{r4, lr}
 8013800:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013802:	07da      	lsls	r2, r3, #31
 8013804:	4604      	mov	r4, r0
 8013806:	d507      	bpl.n	8013818 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013808:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801380c:	f7ff fe8a 	bl	8013524 <_ZN8touchgfx7Outline6lineToEii>
 8013810:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013812:	f023 0301 	bic.w	r3, r3, #1
 8013816:	6243      	str	r3, [r0, #36]	; 0x24
 8013818:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801381a:	079b      	lsls	r3, r3, #30
 801381c:	d521      	bpl.n	8013862 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801381e:	6923      	ldr	r3, [r4, #16]
 8013820:	88d9      	ldrh	r1, [r3, #6]
 8013822:	889a      	ldrh	r2, [r3, #4]
 8013824:	430a      	orrs	r2, r1
 8013826:	d010      	beq.n	801384a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013828:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801382c:	2a00      	cmp	r2, #0
 801382e:	db0c      	blt.n	801384a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013830:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8013832:	428a      	cmp	r2, r1
 8013834:	da09      	bge.n	801384a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013836:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801383a:	4291      	cmp	r1, r2
 801383c:	bf88      	it	hi
 801383e:	3308      	addhi	r3, #8
 8013840:	f102 0201 	add.w	r2, r2, #1
 8013844:	bf88      	it	hi
 8013846:	6123      	strhi	r3, [r4, #16]
 8013848:	60a2      	str	r2, [r4, #8]
 801384a:	68a1      	ldr	r1, [r4, #8]
 801384c:	b129      	cbz	r1, 801385a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801384e:	6863      	ldr	r3, [r4, #4]
 8013850:	4299      	cmp	r1, r3
 8013852:	d802      	bhi.n	801385a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013854:	68e0      	ldr	r0, [r4, #12]
 8013856:	f7ff febc 	bl	80135d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801385a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801385c:	f023 0302 	bic.w	r3, r3, #2
 8013860:	6263      	str	r3, [r4, #36]	; 0x24
 8013862:	68e0      	ldr	r0, [r4, #12]
 8013864:	bd10      	pop	{r4, pc}
	...

08013868 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013868:	4b02      	ldr	r3, [pc, #8]	; (8013874 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801386a:	6018      	str	r0, [r3, #0]
 801386c:	4b02      	ldr	r3, [pc, #8]	; (8013878 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801386e:	6019      	str	r1, [r3, #0]
 8013870:	4770      	bx	lr
 8013872:	bf00      	nop
 8013874:	20012e7c 	.word	0x20012e7c
 8013878:	20012e80 	.word	0x20012e80

0801387c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801387c:	4a02      	ldr	r2, [pc, #8]	; (8013888 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801387e:	2300      	movs	r3, #0
 8013880:	6013      	str	r3, [r2, #0]
 8013882:	4a02      	ldr	r2, [pc, #8]	; (801388c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8013884:	6013      	str	r3, [r2, #0]
 8013886:	4770      	bx	lr
 8013888:	20012e7c 	.word	0x20012e7c
 801388c:	20012e80 	.word	0x20012e80

08013890 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8013890:	4b01      	ldr	r3, [pc, #4]	; (8013898 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8013892:	6818      	ldr	r0, [r3, #0]
 8013894:	4770      	bx	lr
 8013896:	bf00      	nop
 8013898:	20012e7c 	.word	0x20012e7c

0801389c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801389c:	4b01      	ldr	r3, [pc, #4]	; (80138a4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801389e:	6818      	ldr	r0, [r3, #0]
 80138a0:	4770      	bx	lr
 80138a2:	bf00      	nop
 80138a4:	20012e80 	.word	0x20012e80

080138a8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80138a8:	b510      	push	{r4, lr}
 80138aa:	6803      	ldr	r3, [r0, #0]
 80138ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80138ae:	460c      	mov	r4, r1
 80138b0:	4798      	blx	r3
 80138b2:	1b03      	subs	r3, r0, r4
 80138b4:	4258      	negs	r0, r3
 80138b6:	4158      	adcs	r0, r3
 80138b8:	bd10      	pop	{r4, pc}
	...

080138bc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80138bc:	4b01      	ldr	r3, [pc, #4]	; (80138c4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80138be:	6019      	str	r1, [r3, #0]
 80138c0:	4770      	bx	lr
 80138c2:	bf00      	nop
 80138c4:	20012e84 	.word	0x20012e84

080138c8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80138c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138cc:	4696      	mov	lr, r2
 80138ce:	4605      	mov	r5, r0
 80138d0:	4614      	mov	r4, r2
 80138d2:	460e      	mov	r6, r1
 80138d4:	461f      	mov	r7, r3
 80138d6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80138da:	b097      	sub	sp, #92	; 0x5c
 80138dc:	f10d 0c1c 	add.w	ip, sp, #28
 80138e0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80138e4:	f8de 3000 	ldr.w	r3, [lr]
 80138e8:	f8cc 3000 	str.w	r3, [ip]
 80138ec:	f104 0e14 	add.w	lr, r4, #20
 80138f0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80138f4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80138f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80138fc:	f8de 3000 	ldr.w	r3, [lr]
 8013900:	f8cc 3000 	str.w	r3, [ip]
 8013904:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013908:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801390c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013910:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013914:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013918:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801391c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013920:	f8de 3000 	ldr.w	r3, [lr]
 8013924:	f8cc 3000 	str.w	r3, [ip]
 8013928:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801392a:	682b      	ldr	r3, [r5, #0]
 801392c:	9201      	str	r2, [sp, #4]
 801392e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013932:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013934:	9200      	str	r2, [sp, #0]
 8013936:	f8cd 8008 	str.w	r8, [sp, #8]
 801393a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801393e:	aa07      	add	r2, sp, #28
 8013940:	463b      	mov	r3, r7
 8013942:	4631      	mov	r1, r6
 8013944:	4628      	mov	r0, r5
 8013946:	47d8      	blx	fp
 8013948:	46a6      	mov	lr, r4
 801394a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801394e:	f10d 0c1c 	add.w	ip, sp, #28
 8013952:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013956:	f8de 3000 	ldr.w	r3, [lr]
 801395a:	f8cc 3000 	str.w	r3, [ip]
 801395e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013962:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013966:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801396a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801396e:	343c      	adds	r4, #60	; 0x3c
 8013970:	f8de 3000 	ldr.w	r3, [lr]
 8013974:	f8cc 3000 	str.w	r3, [ip]
 8013978:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801397a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801397e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013982:	6823      	ldr	r3, [r4, #0]
 8013984:	f8cc 3000 	str.w	r3, [ip]
 8013988:	682b      	ldr	r3, [r5, #0]
 801398a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801398e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013990:	9201      	str	r2, [sp, #4]
 8013992:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013994:	9200      	str	r2, [sp, #0]
 8013996:	f8cd 8008 	str.w	r8, [sp, #8]
 801399a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801399c:	aa07      	add	r2, sp, #28
 801399e:	463b      	mov	r3, r7
 80139a0:	4631      	mov	r1, r6
 80139a2:	4628      	mov	r0, r5
 80139a4:	47a0      	blx	r4
 80139a6:	b017      	add	sp, #92	; 0x5c
 80139a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080139ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80139ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139b0:	b08d      	sub	sp, #52	; 0x34
 80139b2:	4688      	mov	r8, r1
 80139b4:	9916      	ldr	r1, [sp, #88]	; 0x58
 80139b6:	f8d3 c000 	ldr.w	ip, [r3]
 80139ba:	680f      	ldr	r7, [r1, #0]
 80139bc:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80139c0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80139c4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80139c8:	edd3 6a07 	vldr	s13, [r3, #28]
 80139cc:	9918      	ldr	r1, [sp, #96]	; 0x60
 80139ce:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80139d2:	f9b1 9000 	ldrsh.w	r9, [r1]
 80139d6:	f9ba 1000 	ldrsh.w	r1, [sl]
 80139da:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80139de:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80139e2:	eba7 070c 	sub.w	r7, r7, ip
 80139e6:	42bc      	cmp	r4, r7
 80139e8:	bfa8      	it	ge
 80139ea:	463c      	movge	r4, r7
 80139ec:	ee07 4a90 	vmov	s15, r4
 80139f0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80139f4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80139f8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80139fc:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013a00:	ee25 5a27 	vmul.f32	s10, s10, s15
 8013a04:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013a08:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013a0c:	eb09 0e0c 	add.w	lr, r9, ip
 8013a10:	4571      	cmp	r1, lr
 8013a12:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8013a16:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013a1a:	ee36 0a84 	vadd.f32	s0, s13, s8
 8013a1e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013a22:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013a26:	f340 808d 	ble.w	8013b44 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8013a2a:	eba1 060e 	sub.w	r6, r1, lr
 8013a2e:	fb96 f5f4 	sdiv	r5, r6, r4
 8013a32:	ee07 5a10 	vmov	s14, r5
 8013a36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013a3a:	2d00      	cmp	r5, #0
 8013a3c:	fb04 6615 	mls	r6, r4, r5, r6
 8013a40:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013a44:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013a48:	eea7 1a05 	vfma.f32	s2, s14, s10
 8013a4c:	dd13      	ble.n	8013a76 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8013a4e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013a52:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013a56:	eef5 6a40 	vcmp.f32	s13, #0.0
 8013a5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013a5e:	bf18      	it	ne
 8013a60:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013a64:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013a68:	bf08      	it	eq
 8013a6a:	eeb0 7a67 	vmoveq.f32	s14, s15
 8013a6e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013a72:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013a76:	fb05 f204 	mul.w	r2, r5, r4
 8013a7a:	1abf      	subs	r7, r7, r2
 8013a7c:	4494      	add	ip, r2
 8013a7e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013a82:	4411      	add	r1, r2
 8013a84:	eb09 020c 	add.w	r2, r9, ip
 8013a88:	443a      	add	r2, r7
 8013a8a:	b209      	sxth	r1, r1
 8013a8c:	428a      	cmp	r2, r1
 8013a8e:	bfc4      	itt	gt
 8013a90:	eba1 0209 	subgt.w	r2, r1, r9
 8013a94:	eba2 070c 	subgt.w	r7, r2, ip
 8013a98:	2f00      	cmp	r7, #0
 8013a9a:	dd50      	ble.n	8013b3e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8013a9c:	fb97 f1f4 	sdiv	r1, r7, r4
 8013aa0:	fb04 7211 	mls	r2, r4, r1, r7
 8013aa4:	b90a      	cbnz	r2, 8013aaa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8013aa6:	3901      	subs	r1, #1
 8013aa8:	4622      	mov	r2, r4
 8013aaa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8013aae:	6840      	ldr	r0, [r0, #4]
 8013ab0:	900b      	str	r0, [sp, #44]	; 0x2c
 8013ab2:	f8d0 a000 	ldr.w	sl, [r0]
 8013ab6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013ab8:	9008      	str	r0, [sp, #32]
 8013aba:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8013abe:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013ac0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013ac4:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013ac8:	695b      	ldr	r3, [r3, #20]
 8013aca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013acc:	445b      	add	r3, fp
 8013ace:	eef0 6a42 	vmov.f32	s13, s4
 8013ad2:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013ad6:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013ada:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013ade:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013ae2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013ae6:	9307      	str	r3, [sp, #28]
 8013ae8:	ee17 7a90 	vmov	r7, s15
 8013aec:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013af0:	eeb0 7a61 	vmov.f32	s14, s3
 8013af4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013af8:	ee16 3a90 	vmov	r3, s13
 8013afc:	fb97 f7f4 	sdiv	r7, r7, r4
 8013b00:	ee17 ca90 	vmov	ip, s15
 8013b04:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013b08:	fb9c fcf4 	sdiv	ip, ip, r4
 8013b0c:	fb0c 3306 	mla	r3, ip, r6, r3
 8013b10:	9302      	str	r3, [sp, #8]
 8013b12:	ee17 3a10 	vmov	r3, s14
 8013b16:	44b6      	add	lr, r6
 8013b18:	fb04 e505 	mla	r5, r4, r5, lr
 8013b1c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013b20:	fb07 3706 	mla	r7, r7, r6, r3
 8013b24:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013b28:	e9cd 4700 	strd	r4, r7, [sp]
 8013b2c:	2900      	cmp	r1, #0
 8013b2e:	bfcc      	ite	gt
 8013b30:	46a1      	movgt	r9, r4
 8013b32:	4691      	movle	r9, r2
 8013b34:	eba9 0306 	sub.w	r3, r9, r6
 8013b38:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013b3c:	47a0      	blx	r4
 8013b3e:	b00d      	add	sp, #52	; 0x34
 8013b40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b44:	2500      	movs	r5, #0
 8013b46:	462e      	mov	r6, r5
 8013b48:	e799      	b.n	8013a7e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08013b4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b50:	b0db      	sub	sp, #364	; 0x16c
 8013b52:	461d      	mov	r5, r3
 8013b54:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013b58:	930a      	str	r3, [sp, #40]	; 0x28
 8013b5a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013b5e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013b60:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013b64:	9310      	str	r3, [sp, #64]	; 0x40
 8013b66:	6803      	ldr	r3, [r0, #0]
 8013b68:	910f      	str	r1, [sp, #60]	; 0x3c
 8013b6a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8013b6c:	9009      	str	r0, [sp, #36]	; 0x24
 8013b6e:	4614      	mov	r4, r2
 8013b70:	4629      	mov	r1, r5
 8013b72:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013b76:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8013b7a:	47b8      	blx	r7
 8013b7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013b7e:	6058      	str	r0, [r3, #4]
 8013b80:	2800      	cmp	r0, #0
 8013b82:	f000 83a1 	beq.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013b86:	682b      	ldr	r3, [r5, #0]
 8013b88:	9314      	str	r3, [sp, #80]	; 0x50
 8013b8a:	686b      	ldr	r3, [r5, #4]
 8013b8c:	9315      	str	r3, [sp, #84]	; 0x54
 8013b8e:	4bc4      	ldr	r3, [pc, #784]	; (8013ea0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013b90:	ed94 7a02 	vldr	s14, [r4, #8]
 8013b94:	7819      	ldrb	r1, [r3, #0]
 8013b96:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8013b9a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8013b9e:	2900      	cmp	r1, #0
 8013ba0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013ba4:	bf16      	itet	ne
 8013ba6:	4619      	movne	r1, r3
 8013ba8:	4611      	moveq	r1, r2
 8013baa:	4613      	movne	r3, r2
 8013bac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013bb0:	9116      	str	r1, [sp, #88]	; 0x58
 8013bb2:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013bb6:	f240 8387 	bls.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013bba:	ed94 7a07 	vldr	s14, [r4, #28]
 8013bbe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013bc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013bc6:	f240 837f 	bls.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013bca:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8013bce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013bd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013bd6:	f240 8377 	bls.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013bda:	6822      	ldr	r2, [r4, #0]
 8013bdc:	4bb1      	ldr	r3, [pc, #708]	; (8013ea4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8013bde:	429a      	cmp	r2, r3
 8013be0:	f2c0 8372 	blt.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013be4:	49b0      	ldr	r1, [pc, #704]	; (8013ea8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8013be6:	6963      	ldr	r3, [r4, #20]
 8013be8:	428a      	cmp	r2, r1
 8013bea:	f300 836d 	bgt.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013bee:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013bf2:	48ae      	ldr	r0, [pc, #696]	; (8013eac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8013bf4:	33ff      	adds	r3, #255	; 0xff
 8013bf6:	4283      	cmp	r3, r0
 8013bf8:	f200 8366 	bhi.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013bfc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013bfe:	4dac      	ldr	r5, [pc, #688]	; (8013eb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013c00:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8013c04:	33ff      	adds	r3, #255	; 0xff
 8013c06:	42ab      	cmp	r3, r5
 8013c08:	f200 835e 	bhi.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c0c:	6862      	ldr	r2, [r4, #4]
 8013c0e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8013c12:	33ff      	adds	r3, #255	; 0xff
 8013c14:	4283      	cmp	r3, r0
 8013c16:	f200 8357 	bhi.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c1a:	69a1      	ldr	r1, [r4, #24]
 8013c1c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013c20:	33ff      	adds	r3, #255	; 0xff
 8013c22:	4283      	cmp	r3, r0
 8013c24:	f200 8350 	bhi.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013c2a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8013c2e:	30ff      	adds	r0, #255	; 0xff
 8013c30:	42a8      	cmp	r0, r5
 8013c32:	f200 8349 	bhi.w	80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c36:	428a      	cmp	r2, r1
 8013c38:	f280 8110 	bge.w	8013e5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013c3c:	429a      	cmp	r2, r3
 8013c3e:	f300 8119 	bgt.w	8013e74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013c42:	4299      	cmp	r1, r3
 8013c44:	f280 811d 	bge.w	8013e82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013c48:	2502      	movs	r5, #2
 8013c4a:	2701      	movs	r7, #1
 8013c4c:	46a9      	mov	r9, r5
 8013c4e:	46b8      	mov	r8, r7
 8013c50:	f04f 0a00 	mov.w	sl, #0
 8013c54:	4621      	mov	r1, r4
 8013c56:	a849      	add	r0, sp, #292	; 0x124
 8013c58:	f003 feec 	bl	8017a34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013c5c:	4622      	mov	r2, r4
 8013c5e:	4653      	mov	r3, sl
 8013c60:	a949      	add	r1, sp, #292	; 0x124
 8013c62:	f8cd 9000 	str.w	r9, [sp]
 8013c66:	a819      	add	r0, sp, #100	; 0x64
 8013c68:	f004 f814 	bl	8017c94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013c6c:	4622      	mov	r2, r4
 8013c6e:	4653      	mov	r3, sl
 8013c70:	a949      	add	r1, sp, #292	; 0x124
 8013c72:	f8cd 8000 	str.w	r8, [sp]
 8013c76:	a829      	add	r0, sp, #164	; 0xa4
 8013c78:	f004 f80c 	bl	8017c94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013c7c:	4643      	mov	r3, r8
 8013c7e:	4622      	mov	r2, r4
 8013c80:	a949      	add	r1, sp, #292	; 0x124
 8013c82:	f8cd 9000 	str.w	r9, [sp]
 8013c86:	a839      	add	r0, sp, #228	; 0xe4
 8013c88:	f004 f804 	bl	8017c94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013c8c:	42af      	cmp	r7, r5
 8013c8e:	bfb5      	itete	lt
 8013c90:	2300      	movlt	r3, #0
 8013c92:	2301      	movge	r3, #1
 8013c94:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013c96:	930e      	strge	r3, [sp, #56]	; 0x38
 8013c98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013c9a:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013c9e:	af12      	add	r7, sp, #72	; 0x48
 8013ca0:	bfb9      	ittee	lt
 8013ca2:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013ca4:	ac19      	addlt	r4, sp, #100	; 0x64
 8013ca6:	ad19      	addge	r5, sp, #100	; 0x64
 8013ca8:	ac29      	addge	r4, sp, #164	; 0xa4
 8013caa:	e887 0003 	stmia.w	r7, {r0, r1}
 8013cae:	b928      	cbnz	r0, 8013cbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013cb0:	4b80      	ldr	r3, [pc, #512]	; (8013eb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013cb2:	6818      	ldr	r0, [r3, #0]
 8013cb4:	6803      	ldr	r3, [r0, #0]
 8013cb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013cb8:	4798      	blx	r3
 8013cba:	6038      	str	r0, [r7, #0]
 8013cbc:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013cbe:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013cc2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013cc6:	930c      	str	r3, [sp, #48]	; 0x30
 8013cc8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013cca:	6963      	ldr	r3, [r4, #20]
 8013ccc:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013cce:	440b      	add	r3, r1
 8013cd0:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013cd4:	4408      	add	r0, r1
 8013cd6:	b200      	sxth	r0, r0
 8013cd8:	4283      	cmp	r3, r0
 8013cda:	900d      	str	r0, [sp, #52]	; 0x34
 8013cdc:	f280 80dd 	bge.w	8013e9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013ce0:	428b      	cmp	r3, r1
 8013ce2:	da08      	bge.n	8013cf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013ce4:	2a00      	cmp	r2, #0
 8013ce6:	dd06      	ble.n	8013cf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013ce8:	1acb      	subs	r3, r1, r3
 8013cea:	429a      	cmp	r2, r3
 8013cec:	f2c0 80e4 	blt.w	8013eb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013cf0:	2b00      	cmp	r3, #0
 8013cf2:	f300 80e2 	bgt.w	8013eba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8013cf6:	6967      	ldr	r7, [r4, #20]
 8013cf8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013cfa:	443b      	add	r3, r7
 8013cfc:	461f      	mov	r7, r3
 8013cfe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d00:	1bdf      	subs	r7, r3, r7
 8013d02:	4297      	cmp	r7, r2
 8013d04:	bfa8      	it	ge
 8013d06:	4617      	movge	r7, r2
 8013d08:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013d0c:	2f00      	cmp	r7, #0
 8013d0e:	f340 8166 	ble.w	8013fde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8013d12:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013d14:	6829      	ldr	r1, [r5, #0]
 8013d16:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d1a:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013d1e:	6820      	ldr	r0, [r4, #0]
 8013d20:	4411      	add	r1, r2
 8013d22:	4299      	cmp	r1, r3
 8013d24:	dd1a      	ble.n	8013d5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013d26:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013d2a:	440b      	add	r3, r1
 8013d2c:	4402      	add	r2, r0
 8013d2e:	b21b      	sxth	r3, r3
 8013d30:	429a      	cmp	r2, r3
 8013d32:	dc13      	bgt.n	8013d5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8013d34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013d38:	681b      	ldr	r3, [r3, #0]
 8013d3a:	9206      	str	r2, [sp, #24]
 8013d3c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013d3e:	9205      	str	r2, [sp, #20]
 8013d40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013d42:	9500      	str	r5, [sp, #0]
 8013d44:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013d48:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013d4a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013d4c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013d50:	a912      	add	r1, sp, #72	; 0x48
 8013d52:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013d56:	aa49      	add	r2, sp, #292	; 0x124
 8013d58:	4623      	mov	r3, r4
 8013d5a:	47c8      	blx	r9
 8013d5c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013d60:	441a      	add	r2, r3
 8013d62:	6963      	ldr	r3, [r4, #20]
 8013d64:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013d68:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013d6c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013d70:	68a1      	ldr	r1, [r4, #8]
 8013d72:	ed94 6a08 	vldr	s12, [r4, #32]
 8013d76:	6022      	str	r2, [r4, #0]
 8013d78:	3301      	adds	r3, #1
 8013d7a:	6163      	str	r3, [r4, #20]
 8013d7c:	69a3      	ldr	r3, [r4, #24]
 8013d7e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013d82:	3b01      	subs	r3, #1
 8013d84:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013d88:	61a3      	str	r3, [r4, #24]
 8013d8a:	6923      	ldr	r3, [r4, #16]
 8013d8c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013d90:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013d94:	edd4 6a07 	vldr	s13, [r4, #28]
 8013d98:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013d9c:	440b      	add	r3, r1
 8013d9e:	68e1      	ldr	r1, [r4, #12]
 8013da0:	6123      	str	r3, [r4, #16]
 8013da2:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013da6:	428b      	cmp	r3, r1
 8013da8:	edc4 6a07 	vstr	s13, [r4, #28]
 8013dac:	db15      	blt.n	8013dda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013dae:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013db2:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013db6:	3201      	adds	r2, #1
 8013db8:	edc4 6a07 	vstr	s13, [r4, #28]
 8013dbc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013dc0:	6022      	str	r2, [r4, #0]
 8013dc2:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013dc6:	1a5b      	subs	r3, r3, r1
 8013dc8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013dcc:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013dd0:	6123      	str	r3, [r4, #16]
 8013dd2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013dd6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013dda:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013dde:	441a      	add	r2, r3
 8013de0:	696b      	ldr	r3, [r5, #20]
 8013de2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013de6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013dea:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013dee:	68a9      	ldr	r1, [r5, #8]
 8013df0:	ed95 6a08 	vldr	s12, [r5, #32]
 8013df4:	602a      	str	r2, [r5, #0]
 8013df6:	3301      	adds	r3, #1
 8013df8:	616b      	str	r3, [r5, #20]
 8013dfa:	69ab      	ldr	r3, [r5, #24]
 8013dfc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013e00:	3b01      	subs	r3, #1
 8013e02:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013e06:	61ab      	str	r3, [r5, #24]
 8013e08:	692b      	ldr	r3, [r5, #16]
 8013e0a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013e0e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013e12:	edd5 6a07 	vldr	s13, [r5, #28]
 8013e16:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013e1a:	440b      	add	r3, r1
 8013e1c:	68e9      	ldr	r1, [r5, #12]
 8013e1e:	612b      	str	r3, [r5, #16]
 8013e20:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013e24:	428b      	cmp	r3, r1
 8013e26:	edc5 6a07 	vstr	s13, [r5, #28]
 8013e2a:	db15      	blt.n	8013e58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013e2c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013e30:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013e34:	3201      	adds	r2, #1
 8013e36:	edc5 6a07 	vstr	s13, [r5, #28]
 8013e3a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013e3e:	602a      	str	r2, [r5, #0]
 8013e40:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013e44:	1a5b      	subs	r3, r3, r1
 8013e46:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013e4a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013e4e:	612b      	str	r3, [r5, #16]
 8013e50:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013e54:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013e58:	3f01      	subs	r7, #1
 8013e5a:	e757      	b.n	8013d0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013e5c:	4299      	cmp	r1, r3
 8013e5e:	dc13      	bgt.n	8013e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013e60:	429a      	cmp	r2, r3
 8013e62:	da14      	bge.n	8013e8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013e64:	2502      	movs	r5, #2
 8013e66:	2703      	movs	r7, #3
 8013e68:	46a9      	mov	r9, r5
 8013e6a:	f04f 0800 	mov.w	r8, #0
 8013e6e:	f04f 0a01 	mov.w	sl, #1
 8013e72:	e6ef      	b.n	8013c54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013e74:	2501      	movs	r5, #1
 8013e76:	2700      	movs	r7, #0
 8013e78:	46a9      	mov	r9, r5
 8013e7a:	46b8      	mov	r8, r7
 8013e7c:	f04f 0a02 	mov.w	sl, #2
 8013e80:	e6e8      	b.n	8013c54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013e82:	2501      	movs	r5, #1
 8013e84:	2702      	movs	r7, #2
 8013e86:	e6e1      	b.n	8013c4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013e88:	2500      	movs	r5, #0
 8013e8a:	2701      	movs	r7, #1
 8013e8c:	e7f4      	b.n	8013e78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013e8e:	2702      	movs	r7, #2
 8013e90:	2503      	movs	r5, #3
 8013e92:	f04f 0900 	mov.w	r9, #0
 8013e96:	46b8      	mov	r8, r7
 8013e98:	e7e9      	b.n	8013e6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013e9a:	4613      	mov	r3, r2
 8013e9c:	e728      	b.n	8013cf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013e9e:	bf00      	nop
 8013ea0:	20012e6c 	.word	0x20012e6c
 8013ea4:	fffd8f01 	.word	0xfffd8f01
 8013ea8:	00027100 	.word	0x00027100
 8013eac:	0004e1ff 	.word	0x0004e1ff
 8013eb0:	0004e1fe 	.word	0x0004e1fe
 8013eb4:	20012e74 	.word	0x20012e74
 8013eb8:	4613      	mov	r3, r2
 8013eba:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013ebc:	9111      	str	r1, [sp, #68]	; 0x44
 8013ebe:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013ec2:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013ec6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013ec8:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8013ecc:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013ed0:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013ed4:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013ed8:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8013edc:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013ee0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013ee4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013ee8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8013eec:	469e      	mov	lr, r3
 8013eee:	469c      	mov	ip, r3
 8013ef0:	f04f 0900 	mov.w	r9, #0
 8013ef4:	f1bc 0f00 	cmp.w	ip, #0
 8013ef8:	d147      	bne.n	8013f8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013efa:	eb03 0c07 	add.w	ip, r3, r7
 8013efe:	1ad7      	subs	r7, r2, r3
 8013f00:	f1b9 0f00 	cmp.w	r9, #0
 8013f04:	d009      	beq.n	8013f1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013f06:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8013f0a:	9029      	str	r0, [sp, #164]	; 0xa4
 8013f0c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013f10:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013f14:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013f18:	912d      	str	r1, [sp, #180]	; 0xb4
 8013f1a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013f1c:	9111      	str	r1, [sp, #68]	; 0x44
 8013f1e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013f22:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013f26:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013f2a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013f2e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013f32:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013f36:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013f3a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013f3e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013f42:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013f46:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013f4a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013f4e:	f04f 0800 	mov.w	r8, #0
 8013f52:	f1be 0f00 	cmp.w	lr, #0
 8013f56:	d031      	beq.n	8013fbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013f58:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013f5a:	4431      	add	r1, r6
 8013f5c:	4549      	cmp	r1, r9
 8013f5e:	4450      	add	r0, sl
 8013f60:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013f64:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013f68:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013f6c:	db08      	blt.n	8013f80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013f6e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013f72:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013f76:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013f7a:	3001      	adds	r0, #1
 8013f7c:	eba1 0109 	sub.w	r1, r1, r9
 8013f80:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013f84:	f04f 0801 	mov.w	r8, #1
 8013f88:	e7e3      	b.n	8013f52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8013f8a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013f8c:	4431      	add	r1, r6
 8013f8e:	4541      	cmp	r1, r8
 8013f90:	4450      	add	r0, sl
 8013f92:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013f96:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013f9a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013f9e:	db08      	blt.n	8013fb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013fa0:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013fa4:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013fa8:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013fac:	3001      	adds	r0, #1
 8013fae:	eba1 0108 	sub.w	r1, r1, r8
 8013fb2:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013fb6:	f04f 0901 	mov.w	r9, #1
 8013fba:	e79b      	b.n	8013ef4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013fbc:	449c      	add	ip, r3
 8013fbe:	1aff      	subs	r7, r7, r3
 8013fc0:	f1b8 0f00 	cmp.w	r8, #0
 8013fc4:	d009      	beq.n	8013fda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013fc6:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013fca:	9019      	str	r0, [sp, #100]	; 0x64
 8013fcc:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013fd0:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013fd4:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013fd8:	911d      	str	r1, [sp, #116]	; 0x74
 8013fda:	1ad2      	subs	r2, r2, r3
 8013fdc:	e68b      	b.n	8013cf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013fde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013fe0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013fe2:	2b00      	cmp	r3, #0
 8013fe4:	f000 80d1 	beq.w	801418a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013fe8:	ad19      	add	r5, sp, #100	; 0x64
 8013fea:	ac39      	add	r4, sp, #228	; 0xe4
 8013fec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013fee:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013ff2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013ff6:	930c      	str	r3, [sp, #48]	; 0x30
 8013ff8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013ffa:	6963      	ldr	r3, [r4, #20]
 8013ffc:	440b      	add	r3, r1
 8013ffe:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8014002:	4408      	add	r0, r1
 8014004:	b200      	sxth	r0, r0
 8014006:	4283      	cmp	r3, r0
 8014008:	900d      	str	r0, [sp, #52]	; 0x34
 801400a:	f280 80c1 	bge.w	8014190 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801400e:	428b      	cmp	r3, r1
 8014010:	da08      	bge.n	8014024 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014012:	2a00      	cmp	r2, #0
 8014014:	dd06      	ble.n	8014024 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8014016:	1acb      	subs	r3, r1, r3
 8014018:	429a      	cmp	r2, r3
 801401a:	f2c0 80bb 	blt.w	8014194 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801401e:	2b00      	cmp	r3, #0
 8014020:	f300 80b9 	bgt.w	8014196 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8014024:	6967      	ldr	r7, [r4, #20]
 8014026:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014028:	443b      	add	r3, r7
 801402a:	461f      	mov	r7, r3
 801402c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801402e:	1bdf      	subs	r7, r3, r7
 8014030:	4297      	cmp	r7, r2
 8014032:	bfa8      	it	ge
 8014034:	4617      	movge	r7, r2
 8014036:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801403a:	2f00      	cmp	r7, #0
 801403c:	f340 813c 	ble.w	80142b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8014040:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8014042:	6829      	ldr	r1, [r5, #0]
 8014044:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014048:	f9bb 3000 	ldrsh.w	r3, [fp]
 801404c:	6820      	ldr	r0, [r4, #0]
 801404e:	4411      	add	r1, r2
 8014050:	4299      	cmp	r1, r3
 8014052:	dd1a      	ble.n	801408a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014054:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8014058:	440b      	add	r3, r1
 801405a:	4402      	add	r2, r0
 801405c:	b21b      	sxth	r3, r3
 801405e:	429a      	cmp	r2, r3
 8014060:	dc13      	bgt.n	801408a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8014062:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014064:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014066:	681b      	ldr	r3, [r3, #0]
 8014068:	9206      	str	r2, [sp, #24]
 801406a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801406c:	9205      	str	r2, [sp, #20]
 801406e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014070:	9500      	str	r5, [sp, #0]
 8014072:	e9cd b203 	strd	fp, r2, [sp, #12]
 8014076:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8014078:	9809      	ldr	r0, [sp, #36]	; 0x24
 801407a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801407e:	a912      	add	r1, sp, #72	; 0x48
 8014080:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8014084:	aa49      	add	r2, sp, #292	; 0x124
 8014086:	4623      	mov	r3, r4
 8014088:	47c8      	blx	r9
 801408a:	e9d4 2300 	ldrd	r2, r3, [r4]
 801408e:	441a      	add	r2, r3
 8014090:	6963      	ldr	r3, [r4, #20]
 8014092:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8014096:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801409a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801409e:	68a1      	ldr	r1, [r4, #8]
 80140a0:	ed94 6a08 	vldr	s12, [r4, #32]
 80140a4:	6022      	str	r2, [r4, #0]
 80140a6:	3301      	adds	r3, #1
 80140a8:	6163      	str	r3, [r4, #20]
 80140aa:	69a3      	ldr	r3, [r4, #24]
 80140ac:	ee37 7a27 	vadd.f32	s14, s14, s15
 80140b0:	3b01      	subs	r3, #1
 80140b2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80140b6:	61a3      	str	r3, [r4, #24]
 80140b8:	6923      	ldr	r3, [r4, #16]
 80140ba:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80140be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80140c2:	edd4 6a07 	vldr	s13, [r4, #28]
 80140c6:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80140ca:	440b      	add	r3, r1
 80140cc:	68e1      	ldr	r1, [r4, #12]
 80140ce:	6123      	str	r3, [r4, #16]
 80140d0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80140d4:	428b      	cmp	r3, r1
 80140d6:	edc4 6a07 	vstr	s13, [r4, #28]
 80140da:	db15      	blt.n	8014108 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80140dc:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80140e0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80140e4:	3201      	adds	r2, #1
 80140e6:	edc4 6a07 	vstr	s13, [r4, #28]
 80140ea:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80140ee:	6022      	str	r2, [r4, #0]
 80140f0:	ee36 7a87 	vadd.f32	s14, s13, s14
 80140f4:	1a5b      	subs	r3, r3, r1
 80140f6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80140fa:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80140fe:	6123      	str	r3, [r4, #16]
 8014100:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014104:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8014108:	e9d5 2300 	ldrd	r2, r3, [r5]
 801410c:	441a      	add	r2, r3
 801410e:	696b      	ldr	r3, [r5, #20]
 8014110:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8014114:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8014118:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801411c:	68a9      	ldr	r1, [r5, #8]
 801411e:	ed95 6a08 	vldr	s12, [r5, #32]
 8014122:	602a      	str	r2, [r5, #0]
 8014124:	3301      	adds	r3, #1
 8014126:	616b      	str	r3, [r5, #20]
 8014128:	69ab      	ldr	r3, [r5, #24]
 801412a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801412e:	3b01      	subs	r3, #1
 8014130:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8014134:	61ab      	str	r3, [r5, #24]
 8014136:	692b      	ldr	r3, [r5, #16]
 8014138:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801413c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014140:	edd5 6a07 	vldr	s13, [r5, #28]
 8014144:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014148:	440b      	add	r3, r1
 801414a:	68e9      	ldr	r1, [r5, #12]
 801414c:	612b      	str	r3, [r5, #16]
 801414e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8014152:	428b      	cmp	r3, r1
 8014154:	edc5 6a07 	vstr	s13, [r5, #28]
 8014158:	db15      	blt.n	8014186 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801415a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801415e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8014162:	3201      	adds	r2, #1
 8014164:	edc5 6a07 	vstr	s13, [r5, #28]
 8014168:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801416c:	602a      	str	r2, [r5, #0]
 801416e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8014172:	1a5b      	subs	r3, r3, r1
 8014174:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8014178:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801417c:	612b      	str	r3, [r5, #16]
 801417e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8014182:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8014186:	3f01      	subs	r7, #1
 8014188:	e757      	b.n	801403a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801418a:	ad39      	add	r5, sp, #228	; 0xe4
 801418c:	ac19      	add	r4, sp, #100	; 0x64
 801418e:	e72d      	b.n	8013fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8014190:	4613      	mov	r3, r2
 8014192:	e744      	b.n	801401e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8014194:	4613      	mov	r3, r2
 8014196:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801419a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801419c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80141a0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80141a4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80141a8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80141ac:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 80141b0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 80141b4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 80141b8:	993d      	ldr	r1, [sp, #244]	; 0xf4
 80141ba:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 80141be:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 80141c2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 80141c6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 80141ca:	960e      	str	r6, [sp, #56]	; 0x38
 80141cc:	469e      	mov	lr, r3
 80141ce:	461f      	mov	r7, r3
 80141d0:	f04f 0900 	mov.w	r9, #0
 80141d4:	2f00      	cmp	r7, #0
 80141d6:	d146      	bne.n	8014266 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80141d8:	449c      	add	ip, r3
 80141da:	1ad7      	subs	r7, r2, r3
 80141dc:	f1b9 0f00 	cmp.w	r9, #0
 80141e0:	d009      	beq.n	80141f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80141e2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80141e6:	9039      	str	r0, [sp, #228]	; 0xe4
 80141e8:	913d      	str	r1, [sp, #244]	; 0xf4
 80141ea:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80141ee:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80141f2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80141f6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80141f8:	910e      	str	r1, [sp, #56]	; 0x38
 80141fa:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80141fe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8014202:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8014206:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801420a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801420e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8014212:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8014216:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801421a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801421e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8014222:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8014226:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801422a:	f04f 0800 	mov.w	r8, #0
 801422e:	f1be 0f00 	cmp.w	lr, #0
 8014232:	d030      	beq.n	8014296 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8014234:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014236:	4431      	add	r1, r6
 8014238:	4549      	cmp	r1, r9
 801423a:	4450      	add	r0, sl
 801423c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8014240:	ee37 7a04 	vadd.f32	s14, s14, s8
 8014244:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8014248:	db08      	blt.n	801425c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801424a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801424e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8014252:	ee37 7a06 	vadd.f32	s14, s14, s12
 8014256:	3001      	adds	r0, #1
 8014258:	eba1 0109 	sub.w	r1, r1, r9
 801425c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014260:	f04f 0801 	mov.w	r8, #1
 8014264:	e7e3      	b.n	801422e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8014266:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014268:	4431      	add	r1, r6
 801426a:	4541      	cmp	r1, r8
 801426c:	4450      	add	r0, sl
 801426e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8014272:	ee77 7a84 	vadd.f32	s15, s15, s8
 8014276:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801427a:	db08      	blt.n	801428e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801427c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8014280:	ee37 7a25 	vadd.f32	s14, s14, s11
 8014284:	ee77 7a86 	vadd.f32	s15, s15, s12
 8014288:	3001      	adds	r0, #1
 801428a:	eba1 0108 	sub.w	r1, r1, r8
 801428e:	3f01      	subs	r7, #1
 8014290:	f04f 0901 	mov.w	r9, #1
 8014294:	e79e      	b.n	80141d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8014296:	449c      	add	ip, r3
 8014298:	1aff      	subs	r7, r7, r3
 801429a:	f1b8 0f00 	cmp.w	r8, #0
 801429e:	d009      	beq.n	80142b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80142a0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80142a4:	9019      	str	r0, [sp, #100]	; 0x64
 80142a6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80142aa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80142ae:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80142b2:	911d      	str	r1, [sp, #116]	; 0x74
 80142b4:	1ad2      	subs	r2, r2, r3
 80142b6:	e6b5      	b.n	8014024 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80142b8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80142ba:	681b      	ldr	r3, [r3, #0]
 80142bc:	b923      	cbnz	r3, 80142c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80142be:	4b04      	ldr	r3, [pc, #16]	; (80142d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80142c0:	6818      	ldr	r0, [r3, #0]
 80142c2:	6803      	ldr	r3, [r0, #0]
 80142c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80142c6:	4798      	blx	r3
 80142c8:	b05b      	add	sp, #364	; 0x16c
 80142ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80142ce:	bf00      	nop
 80142d0:	20012e74 	.word	0x20012e74

080142d4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80142d4:	b570      	push	{r4, r5, r6, lr}
 80142d6:	4604      	mov	r4, r0
 80142d8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80142dc:	9805      	ldr	r0, [sp, #20]
 80142de:	6061      	str	r1, [r4, #4]
 80142e0:	2500      	movs	r5, #0
 80142e2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80142e6:	8263      	strh	r3, [r4, #18]
 80142e8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80142ec:	8025      	strh	r5, [r4, #0]
 80142ee:	7221      	strb	r1, [r4, #8]
 80142f0:	7266      	strb	r6, [r4, #9]
 80142f2:	60e0      	str	r0, [r4, #12]
 80142f4:	8222      	strh	r2, [r4, #16]
 80142f6:	82a3      	strh	r3, [r4, #20]
 80142f8:	82e5      	strh	r5, [r4, #22]
 80142fa:	8325      	strh	r5, [r4, #24]
 80142fc:	8365      	strh	r5, [r4, #26]
 80142fe:	83a5      	strh	r5, [r4, #28]
 8014300:	83e5      	strh	r5, [r4, #30]
 8014302:	8425      	strh	r5, [r4, #32]
 8014304:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014308:	b32e      	cbz	r6, 8014356 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801430a:	6803      	ldr	r3, [r0, #0]
 801430c:	695b      	ldr	r3, [r3, #20]
 801430e:	4798      	blx	r3
 8014310:	4606      	mov	r6, r0
 8014312:	b300      	cbz	r0, 8014356 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014314:	68e0      	ldr	r0, [r4, #12]
 8014316:	6803      	ldr	r3, [r0, #0]
 8014318:	4631      	mov	r1, r6
 801431a:	68db      	ldr	r3, [r3, #12]
 801431c:	4798      	blx	r3
 801431e:	4605      	mov	r5, r0
 8014320:	b1c8      	cbz	r0, 8014356 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014322:	7b43      	ldrb	r3, [r0, #13]
 8014324:	7a82      	ldrb	r2, [r0, #10]
 8014326:	005b      	lsls	r3, r3, #1
 8014328:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801432c:	4313      	orrs	r3, r2
 801432e:	8423      	strh	r3, [r4, #32]
 8014330:	7a63      	ldrb	r3, [r4, #9]
 8014332:	2b06      	cmp	r3, #6
 8014334:	d10f      	bne.n	8014356 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8014336:	68e0      	ldr	r0, [r4, #12]
 8014338:	6803      	ldr	r3, [r0, #0]
 801433a:	462a      	mov	r2, r5
 801433c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801433e:	4631      	mov	r1, r6
 8014340:	4798      	blx	r3
 8014342:	7b6b      	ldrb	r3, [r5, #13]
 8014344:	005b      	lsls	r3, r3, #1
 8014346:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801434a:	7aab      	ldrb	r3, [r5, #10]
 801434c:	4313      	orrs	r3, r2
 801434e:	4418      	add	r0, r3
 8014350:	8c23      	ldrh	r3, [r4, #32]
 8014352:	4418      	add	r0, r3
 8014354:	8420      	strh	r0, [r4, #32]
 8014356:	4620      	mov	r0, r4
 8014358:	bd70      	pop	{r4, r5, r6, pc}

0801435a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801435a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801435e:	2400      	movs	r4, #0
 8014360:	b085      	sub	sp, #20
 8014362:	4681      	mov	r9, r0
 8014364:	4688      	mov	r8, r1
 8014366:	4692      	mov	sl, r2
 8014368:	469b      	mov	fp, r3
 801436a:	4627      	mov	r7, r4
 801436c:	4625      	mov	r5, r4
 801436e:	4626      	mov	r6, r4
 8014370:	4554      	cmp	r4, sl
 8014372:	da2a      	bge.n	80143ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8014374:	2300      	movs	r3, #0
 8014376:	9303      	str	r3, [sp, #12]
 8014378:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801437c:	429d      	cmp	r5, r3
 801437e:	d004      	beq.n	801438a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8014380:	f242 030b 	movw	r3, #8203	; 0x200b
 8014384:	429d      	cmp	r5, r3
 8014386:	bf18      	it	ne
 8014388:	462f      	movne	r7, r5
 801438a:	ab03      	add	r3, sp, #12
 801438c:	4642      	mov	r2, r8
 801438e:	4659      	mov	r1, fp
 8014390:	4648      	mov	r0, r9
 8014392:	f003 f965 	bl	8017660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014396:	4605      	mov	r5, r0
 8014398:	b1b8      	cbz	r0, 80143ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801439a:	280a      	cmp	r0, #10
 801439c:	d015      	beq.n	80143ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801439e:	9a03      	ldr	r2, [sp, #12]
 80143a0:	b18a      	cbz	r2, 80143c6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80143a2:	7b50      	ldrb	r0, [r2, #13]
 80143a4:	7a93      	ldrb	r3, [r2, #10]
 80143a6:	8895      	ldrh	r5, [r2, #4]
 80143a8:	0040      	lsls	r0, r0, #1
 80143aa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80143ae:	4303      	orrs	r3, r0
 80143b0:	9301      	str	r3, [sp, #4]
 80143b2:	f8d8 3000 	ldr.w	r3, [r8]
 80143b6:	4639      	mov	r1, r7
 80143b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80143ba:	4640      	mov	r0, r8
 80143bc:	4798      	blx	r3
 80143be:	9b01      	ldr	r3, [sp, #4]
 80143c0:	4418      	add	r0, r3
 80143c2:	4406      	add	r6, r0
 80143c4:	b2b6      	uxth	r6, r6
 80143c6:	3401      	adds	r4, #1
 80143c8:	e7d2      	b.n	8014370 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80143ca:	4630      	mov	r0, r6
 80143cc:	b005      	add	sp, #20
 80143ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080143d2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80143d2:	2a02      	cmp	r2, #2
 80143d4:	b530      	push	{r4, r5, lr}
 80143d6:	d011      	beq.n	80143fc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80143d8:	2a03      	cmp	r2, #3
 80143da:	d01c      	beq.n	8014416 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80143dc:	2a01      	cmp	r2, #1
 80143de:	d10c      	bne.n	80143fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80143e0:	888b      	ldrh	r3, [r1, #4]
 80143e2:	8801      	ldrh	r1, [r0, #0]
 80143e4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80143e8:	8844      	ldrh	r4, [r0, #2]
 80143ea:	8004      	strh	r4, [r0, #0]
 80143ec:	1a5b      	subs	r3, r3, r1
 80143ee:	1a9b      	subs	r3, r3, r2
 80143f0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80143f4:	8043      	strh	r3, [r0, #2]
 80143f6:	8081      	strh	r1, [r0, #4]
 80143f8:	80c2      	strh	r2, [r0, #6]
 80143fa:	bd30      	pop	{r4, r5, pc}
 80143fc:	88cb      	ldrh	r3, [r1, #6]
 80143fe:	8842      	ldrh	r2, [r0, #2]
 8014400:	1a9b      	subs	r3, r3, r2
 8014402:	88c2      	ldrh	r2, [r0, #6]
 8014404:	1a9b      	subs	r3, r3, r2
 8014406:	888a      	ldrh	r2, [r1, #4]
 8014408:	8801      	ldrh	r1, [r0, #0]
 801440a:	8043      	strh	r3, [r0, #2]
 801440c:	1a52      	subs	r2, r2, r1
 801440e:	8881      	ldrh	r1, [r0, #4]
 8014410:	1a52      	subs	r2, r2, r1
 8014412:	8002      	strh	r2, [r0, #0]
 8014414:	e7f1      	b.n	80143fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014416:	88cb      	ldrh	r3, [r1, #6]
 8014418:	8841      	ldrh	r1, [r0, #2]
 801441a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801441e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014422:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8014426:	8045      	strh	r5, [r0, #2]
 8014428:	1a5b      	subs	r3, r3, r1
 801442a:	1a9b      	subs	r3, r3, r2
 801442c:	8003      	strh	r3, [r0, #0]
 801442e:	8082      	strh	r2, [r0, #4]
 8014430:	80c4      	strh	r4, [r0, #6]
 8014432:	e7e2      	b.n	80143fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08014434 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8014434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014438:	b09f      	sub	sp, #124	; 0x7c
 801443a:	9116      	str	r1, [sp, #88]	; 0x58
 801443c:	9317      	str	r3, [sp, #92]	; 0x5c
 801443e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014440:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014442:	8809      	ldrh	r1, [r1, #0]
 8014444:	889b      	ldrh	r3, [r3, #4]
 8014446:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801444a:	9212      	str	r2, [sp, #72]	; 0x48
 801444c:	440b      	add	r3, r1
 801444e:	b21b      	sxth	r3, r3
 8014450:	9310      	str	r3, [sp, #64]	; 0x40
 8014452:	f8d8 3000 	ldr.w	r3, [r8]
 8014456:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801445a:	7b19      	ldrb	r1, [r3, #12]
 801445c:	7adb      	ldrb	r3, [r3, #11]
 801445e:	9011      	str	r0, [sp, #68]	; 0x44
 8014460:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8014464:	9114      	str	r1, [sp, #80]	; 0x50
 8014466:	9315      	str	r3, [sp, #84]	; 0x54
 8014468:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 801446c:	2a00      	cmp	r2, #0
 801446e:	d06a      	beq.n	8014546 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014470:	f898 3010 	ldrb.w	r3, [r8, #16]
 8014474:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014476:	2b06      	cmp	r3, #6
 8014478:	bf14      	ite	ne
 801447a:	2301      	movne	r3, #1
 801447c:	2302      	moveq	r3, #2
 801447e:	4413      	add	r3, r2
 8014480:	f04f 0900 	mov.w	r9, #0
 8014484:	930f      	str	r3, [sp, #60]	; 0x3c
 8014486:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801448a:	464c      	mov	r4, r9
 801448c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8014490:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8014494:	4293      	cmp	r3, r2
 8014496:	f280 808f 	bge.w	80145b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801449a:	2300      	movs	r3, #0
 801449c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80144a0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80144a4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80144a8:	429c      	cmp	r4, r3
 80144aa:	d006      	beq.n	80144ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80144ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80144ae:	f242 020b 	movw	r2, #8203	; 0x200b
 80144b2:	4294      	cmp	r4, r2
 80144b4:	bf18      	it	ne
 80144b6:	4623      	movne	r3, r4
 80144b8:	930d      	str	r3, [sp, #52]	; 0x34
 80144ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80144bc:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80144be:	f8d8 2000 	ldr.w	r2, [r8]
 80144c2:	428b      	cmp	r3, r1
 80144c4:	db41      	blt.n	801454a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80144c6:	6813      	ldr	r3, [r2, #0]
 80144c8:	4610      	mov	r0, r2
 80144ca:	695b      	ldr	r3, [r3, #20]
 80144cc:	4798      	blx	r3
 80144ce:	4604      	mov	r4, r0
 80144d0:	f8d8 0000 	ldr.w	r0, [r8]
 80144d4:	6803      	ldr	r3, [r0, #0]
 80144d6:	aa1d      	add	r2, sp, #116	; 0x74
 80144d8:	689d      	ldr	r5, [r3, #8]
 80144da:	4621      	mov	r1, r4
 80144dc:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80144e0:	47a8      	blx	r5
 80144e2:	901c      	str	r0, [sp, #112]	; 0x70
 80144e4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80144e8:	429c      	cmp	r4, r3
 80144ea:	f000 80eb 	beq.w	80146c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80144ee:	f242 030b 	movw	r3, #8203	; 0x200b
 80144f2:	429c      	cmp	r4, r3
 80144f4:	f000 80e6 	beq.w	80146c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80144f8:	2c00      	cmp	r4, #0
 80144fa:	f000 80f8 	beq.w	80146ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80144fe:	2c0a      	cmp	r4, #10
 8014500:	d060      	beq.n	80145c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014502:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8014504:	b36a      	cbz	r2, 8014562 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8014506:	8894      	ldrh	r4, [r2, #4]
 8014508:	f1bb 0f00 	cmp.w	fp, #0
 801450c:	d03b      	beq.n	8014586 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801450e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8014512:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8014516:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801451a:	f892 900a 	ldrb.w	r9, [r2, #10]
 801451e:	f1bb 0f01 	cmp.w	fp, #1
 8014522:	ea49 0903 	orr.w	r9, r9, r3
 8014526:	d134      	bne.n	8014592 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014528:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801452a:	eba6 0609 	sub.w	r6, r6, r9
 801452e:	2b00      	cmp	r3, #0
 8014530:	d14f      	bne.n	80145d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8014532:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014534:	eb09 0306 	add.w	r3, r9, r6
 8014538:	4413      	add	r3, r2
 801453a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801453c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014540:	4293      	cmp	r3, r2
 8014542:	da51      	bge.n	80145e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8014544:	e038      	b.n	80145b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8014546:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014548:	e79a      	b.n	8014480 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801454a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801454e:	9301      	str	r3, [sp, #4]
 8014550:	ab1d      	add	r3, sp, #116	; 0x74
 8014552:	9300      	str	r3, [sp, #0]
 8014554:	4659      	mov	r1, fp
 8014556:	ab1c      	add	r3, sp, #112	; 0x70
 8014558:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801455a:	f003 f8ca 	bl	80176f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801455e:	4604      	mov	r4, r0
 8014560:	e7c0      	b.n	80144e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8014562:	f8d8 0000 	ldr.w	r0, [r8]
 8014566:	6803      	ldr	r3, [r0, #0]
 8014568:	691b      	ldr	r3, [r3, #16]
 801456a:	4798      	blx	r3
 801456c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014570:	4298      	cmp	r0, r3
 8014572:	f000 80a7 	beq.w	80146c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014576:	f242 030b 	movw	r3, #8203	; 0x200b
 801457a:	4298      	cmp	r0, r3
 801457c:	f000 80a2 	beq.w	80146c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014580:	f1bb 0f00 	cmp.w	fp, #0
 8014584:	d100      	bne.n	8014588 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8014586:	444e      	add	r6, r9
 8014588:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801458a:	2a00      	cmp	r2, #0
 801458c:	d1bf      	bne.n	801450e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801458e:	4691      	mov	r9, r2
 8014590:	e098      	b.n	80146c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014592:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014594:	2b00      	cmp	r3, #0
 8014596:	f000 80ac 	beq.w	80146f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 801459a:	f1bb 0f00 	cmp.w	fp, #0
 801459e:	d118      	bne.n	80145d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80145a0:	f8d8 0000 	ldr.w	r0, [r8]
 80145a4:	990d      	ldr	r1, [sp, #52]	; 0x34
 80145a6:	6803      	ldr	r3, [r0, #0]
 80145a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80145aa:	4798      	blx	r3
 80145ac:	4406      	add	r6, r0
 80145ae:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80145b0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80145b2:	1af3      	subs	r3, r6, r3
 80145b4:	4293      	cmp	r3, r2
 80145b6:	dd17      	ble.n	80145e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80145b8:	2c00      	cmp	r4, #0
 80145ba:	f000 8098 	beq.w	80146ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80145be:	2c0a      	cmp	r4, #10
 80145c0:	f040 8086 	bne.w	80146d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80145c4:	240a      	movs	r4, #10
 80145c6:	fab4 f084 	clz	r0, r4
 80145ca:	0940      	lsrs	r0, r0, #5
 80145cc:	b01f      	add	sp, #124	; 0x7c
 80145ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80145d2:	f8d8 0000 	ldr.w	r0, [r8]
 80145d6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80145d8:	6803      	ldr	r3, [r0, #0]
 80145da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80145dc:	4798      	blx	r3
 80145de:	f1bb 0f01 	cmp.w	fp, #1
 80145e2:	eba6 0600 	sub.w	r6, r6, r0
 80145e6:	d0a4      	beq.n	8014532 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80145e8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80145ea:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80145ec:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80145f0:	f9b3 7000 	ldrsh.w	r7, [r3]
 80145f4:	7b43      	ldrb	r3, [r0, #13]
 80145f6:	015b      	lsls	r3, r3, #5
 80145f8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80145fc:	7983      	ldrb	r3, [r0, #6]
 80145fe:	4431      	add	r1, r6
 8014600:	4313      	orrs	r3, r2
 8014602:	440b      	add	r3, r1
 8014604:	42bb      	cmp	r3, r7
 8014606:	db5d      	blt.n	80146c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014608:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801460a:	4299      	cmp	r1, r3
 801460c:	da5a      	bge.n	80146c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801460e:	f8d8 0000 	ldr.w	r0, [r8]
 8014612:	6803      	ldr	r3, [r0, #0]
 8014614:	42b7      	cmp	r7, r6
 8014616:	bfc8      	it	gt
 8014618:	1bbf      	subgt	r7, r7, r6
 801461a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801461c:	bfcc      	ite	gt
 801461e:	b2bf      	uxthgt	r7, r7
 8014620:	2700      	movle	r7, #0
 8014622:	4798      	blx	r3
 8014624:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8014626:	7b5a      	ldrb	r2, [r3, #13]
 8014628:	00d1      	lsls	r1, r2, #3
 801462a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 801462e:	7a19      	ldrb	r1, [r3, #8]
 8014630:	4329      	orrs	r1, r5
 8014632:	0655      	lsls	r5, r2, #25
 8014634:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8014636:	bf44      	itt	mi
 8014638:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801463c:	b209      	sxthmi	r1, r1
 801463e:	1945      	adds	r5, r0, r5
 8014640:	1a6d      	subs	r5, r5, r1
 8014642:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014644:	b2ad      	uxth	r5, r5
 8014646:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801464a:	fa0f fa85 	sxth.w	sl, r5
 801464e:	4551      	cmp	r1, sl
 8014650:	dd3c      	ble.n	80146cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014652:	0112      	lsls	r2, r2, #4
 8014654:	79d8      	ldrb	r0, [r3, #7]
 8014656:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801465a:	4302      	orrs	r2, r0
 801465c:	4492      	add	sl, r2
 801465e:	4551      	cmp	r1, sl
 8014660:	dc30      	bgt.n	80146c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014662:	1b4d      	subs	r5, r1, r5
 8014664:	b22d      	sxth	r5, r5
 8014666:	468a      	mov	sl, r1
 8014668:	9319      	str	r3, [sp, #100]	; 0x64
 801466a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801466c:	f8d8 0000 	ldr.w	r0, [r8]
 8014670:	681a      	ldr	r2, [r3, #0]
 8014672:	6801      	ldr	r1, [r0, #0]
 8014674:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014676:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014678:	9313      	str	r3, [sp, #76]	; 0x4c
 801467a:	9218      	str	r2, [sp, #96]	; 0x60
 801467c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801467e:	4788      	blx	r1
 8014680:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014684:	910b      	str	r1, [sp, #44]	; 0x2c
 8014686:	f898 100e 	ldrb.w	r1, [r8, #14]
 801468a:	910a      	str	r1, [sp, #40]	; 0x28
 801468c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014690:	9109      	str	r1, [sp, #36]	; 0x24
 8014692:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8014696:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014698:	9305      	str	r3, [sp, #20]
 801469a:	b2ad      	uxth	r5, r5
 801469c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80146a0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80146a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80146a6:	9304      	str	r3, [sp, #16]
 80146a8:	4437      	add	r7, r6
 80146aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80146ac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80146ae:	9206      	str	r2, [sp, #24]
 80146b0:	b23f      	sxth	r7, r7
 80146b2:	f8cd a004 	str.w	sl, [sp, #4]
 80146b6:	9700      	str	r7, [sp, #0]
 80146b8:	681a      	ldr	r2, [r3, #0]
 80146ba:	9916      	ldr	r1, [sp, #88]	; 0x58
 80146bc:	685b      	ldr	r3, [r3, #4]
 80146be:	9811      	ldr	r0, [sp, #68]	; 0x44
 80146c0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80146c2:	47a8      	blx	r5
 80146c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80146c6:	3301      	adds	r3, #1
 80146c8:	930e      	str	r3, [sp, #56]	; 0x38
 80146ca:	e6e1      	b.n	8014490 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80146cc:	2500      	movs	r5, #0
 80146ce:	e7cb      	b.n	8014668 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80146d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80146d2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80146d4:	3501      	adds	r5, #1
 80146d6:	429d      	cmp	r5, r3
 80146d8:	f6bf af75 	bge.w	80145c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80146dc:	4659      	mov	r1, fp
 80146de:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80146e0:	f7f3 fdcc 	bl	800827c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80146e4:	4604      	mov	r4, r0
 80146e6:	b110      	cbz	r0, 80146ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80146e8:	280a      	cmp	r0, #10
 80146ea:	d1f2      	bne.n	80146d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80146ec:	e76a      	b.n	80145c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80146ee:	2400      	movs	r4, #0
 80146f0:	e769      	b.n	80145c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80146f2:	f1bb 0f00 	cmp.w	fp, #0
 80146f6:	f43f af5a 	beq.w	80145ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80146fa:	e775      	b.n	80145e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080146fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80146fc:	b530      	push	{r4, r5, lr}
 80146fe:	8ac4      	ldrh	r4, [r0, #22]
 8014700:	8b45      	ldrh	r5, [r0, #26]
 8014702:	8343      	strh	r3, [r0, #26]
 8014704:	442c      	add	r4, r5
 8014706:	1ae4      	subs	r4, r4, r3
 8014708:	82c4      	strh	r4, [r0, #22]
 801470a:	8b83      	ldrh	r3, [r0, #28]
 801470c:	8b04      	ldrh	r4, [r0, #24]
 801470e:	4422      	add	r2, r4
 8014710:	440c      	add	r4, r1
 8014712:	1a59      	subs	r1, r3, r1
 8014714:	83c2      	strh	r2, [r0, #30]
 8014716:	8304      	strh	r4, [r0, #24]
 8014718:	8381      	strh	r1, [r0, #28]
 801471a:	bd30      	pop	{r4, r5, pc}

0801471c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 801471c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014720:	4604      	mov	r4, r0
 8014722:	8a47      	ldrh	r7, [r0, #18]
 8014724:	68c0      	ldr	r0, [r0, #12]
 8014726:	6803      	ldr	r3, [r0, #0]
 8014728:	b085      	sub	sp, #20
 801472a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801472c:	4798      	blx	r3
 801472e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8014732:	7a63      	ldrb	r3, [r4, #9]
 8014734:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014738:	42b7      	cmp	r7, r6
 801473a:	f103 33ff 	add.w	r3, r3, #4294967295
 801473e:	bfac      	ite	ge
 8014740:	f04f 0900 	movge.w	r9, #0
 8014744:	f04f 0901 	movlt.w	r9, #1
 8014748:	2b05      	cmp	r3, #5
 801474a:	d804      	bhi.n	8014756 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801474c:	e8df f003 	tbb	[pc, r3]
 8014750:	470e0854 	.word	0x470e0854
 8014754:	4c4c      	.short	0x4c4c
 8014756:	2500      	movs	r5, #0
 8014758:	46a9      	mov	r9, r5
 801475a:	462e      	mov	r6, r5
 801475c:	462f      	mov	r7, r5
 801475e:	e00d      	b.n	801477c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014760:	42b7      	cmp	r7, r6
 8014762:	bfb4      	ite	lt
 8014764:	2600      	movlt	r6, #0
 8014766:	2601      	movge	r6, #1
 8014768:	2500      	movs	r5, #0
 801476a:	e7f7      	b.n	801475c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801476c:	42b7      	cmp	r7, r6
 801476e:	464d      	mov	r5, r9
 8014770:	f04f 0900 	mov.w	r9, #0
 8014774:	bfb4      	ite	lt
 8014776:	2600      	movlt	r6, #0
 8014778:	2601      	movge	r6, #1
 801477a:	464f      	mov	r7, r9
 801477c:	f04f 0800 	mov.w	r8, #0
 8014780:	f8a4 8016 	strh.w	r8, [r4, #22]
 8014784:	f8a4 8018 	strh.w	r8, [r4, #24]
 8014788:	f8cd 8004 	str.w	r8, [sp, #4]
 801478c:	2300      	movs	r3, #0
 801478e:	9303      	str	r3, [sp, #12]
 8014790:	8823      	ldrh	r3, [r4, #0]
 8014792:	2b20      	cmp	r3, #32
 8014794:	d034      	beq.n	8014800 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8014796:	f242 010b 	movw	r1, #8203	; 0x200b
 801479a:	1a5a      	subs	r2, r3, r1
 801479c:	f1d2 0a00 	rsbs	sl, r2, #0
 80147a0:	eb4a 0a02 	adc.w	sl, sl, r2
 80147a4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80147a8:	4293      	cmp	r3, r2
 80147aa:	d009      	beq.n	80147c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80147ac:	428b      	cmp	r3, r1
 80147ae:	9a01      	ldr	r2, [sp, #4]
 80147b0:	bf18      	it	ne
 80147b2:	461a      	movne	r2, r3
 80147b4:	9201      	str	r2, [sp, #4]
 80147b6:	bf0c      	ite	eq
 80147b8:	f04f 0a01 	moveq.w	sl, #1
 80147bc:	f04f 0a00 	movne.w	sl, #0
 80147c0:	ab03      	add	r3, sp, #12
 80147c2:	68e2      	ldr	r2, [r4, #12]
 80147c4:	7a21      	ldrb	r1, [r4, #8]
 80147c6:	6860      	ldr	r0, [r4, #4]
 80147c8:	f002 ff4a 	bl	8017660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80147cc:	8020      	strh	r0, [r4, #0]
 80147ce:	b9d8      	cbnz	r0, 8014808 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80147d0:	8ba2      	ldrh	r2, [r4, #28]
 80147d2:	2300      	movs	r3, #0
 80147d4:	4611      	mov	r1, r2
 80147d6:	4620      	mov	r0, r4
 80147d8:	f7ff ff90 	bl	80146fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80147dc:	e06e      	b.n	80148bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80147de:	2500      	movs	r5, #0
 80147e0:	46a9      	mov	r9, r5
 80147e2:	462e      	mov	r6, r5
 80147e4:	2701      	movs	r7, #1
 80147e6:	e7c9      	b.n	801477c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80147e8:	42b7      	cmp	r7, r6
 80147ea:	f04f 0500 	mov.w	r5, #0
 80147ee:	bfb4      	ite	lt
 80147f0:	2700      	movlt	r7, #0
 80147f2:	2701      	movge	r7, #1
 80147f4:	462e      	mov	r6, r5
 80147f6:	e7c1      	b.n	801477c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80147f8:	2500      	movs	r5, #0
 80147fa:	46a9      	mov	r9, r5
 80147fc:	2601      	movs	r6, #1
 80147fe:	e7ad      	b.n	801475c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014800:	9301      	str	r3, [sp, #4]
 8014802:	f04f 0a01 	mov.w	sl, #1
 8014806:	e7db      	b.n	80147c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014808:	8b63      	ldrh	r3, [r4, #26]
 801480a:	280a      	cmp	r0, #10
 801480c:	f103 0301 	add.w	r3, r3, #1
 8014810:	8363      	strh	r3, [r4, #26]
 8014812:	d0dd      	beq.n	80147d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8014814:	9a03      	ldr	r2, [sp, #12]
 8014816:	bb62      	cbnz	r2, 8014872 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014818:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801481c:	4298      	cmp	r0, r3
 801481e:	d003      	beq.n	8014828 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014820:	f242 030b 	movw	r3, #8203	; 0x200b
 8014824:	4298      	cmp	r0, r3
 8014826:	d1b1      	bne.n	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014828:	8823      	ldrh	r3, [r4, #0]
 801482a:	8ba1      	ldrh	r1, [r4, #28]
 801482c:	2b20      	cmp	r3, #32
 801482e:	d003      	beq.n	8014838 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014830:	f242 000b 	movw	r0, #8203	; 0x200b
 8014834:	4283      	cmp	r3, r0
 8014836:	d131      	bne.n	801489c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014838:	f1ba 0f00 	cmp.w	sl, #0
 801483c:	bf0a      	itet	eq
 801483e:	4688      	moveq	r8, r1
 8014840:	4650      	movne	r0, sl
 8014842:	2001      	moveq	r0, #1
 8014844:	440a      	add	r2, r1
 8014846:	8b23      	ldrh	r3, [r4, #24]
 8014848:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801484c:	b292      	uxth	r2, r2
 801484e:	83a2      	strh	r2, [r4, #28]
 8014850:	4413      	add	r3, r2
 8014852:	f1b9 0f00 	cmp.w	r9, #0
 8014856:	d102      	bne.n	801485e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014858:	2d00      	cmp	r5, #0
 801485a:	d042      	beq.n	80148e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801485c:	b300      	cbz	r0, 80148a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801485e:	8c21      	ldrh	r1, [r4, #32]
 8014860:	4419      	add	r1, r3
 8014862:	458c      	cmp	ip, r1
 8014864:	da37      	bge.n	80148d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014866:	8ae1      	ldrh	r1, [r4, #22]
 8014868:	2900      	cmp	r1, #0
 801486a:	d034      	beq.n	80148d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801486c:	4563      	cmp	r3, ip
 801486e:	dd8d      	ble.n	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014870:	e01d      	b.n	80148ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8014872:	8893      	ldrh	r3, [r2, #4]
 8014874:	8023      	strh	r3, [r4, #0]
 8014876:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801487a:	9901      	ldr	r1, [sp, #4]
 801487c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014880:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8014884:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014888:	ea4b 0b00 	orr.w	fp, fp, r0
 801488c:	68e0      	ldr	r0, [r4, #12]
 801488e:	6803      	ldr	r3, [r0, #0]
 8014890:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014892:	4798      	blx	r3
 8014894:	eb0b 0200 	add.w	r2, fp, r0
 8014898:	b292      	uxth	r2, r2
 801489a:	e7c5      	b.n	8014828 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801489c:	2000      	movs	r0, #0
 801489e:	e7d1      	b.n	8014844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80148a0:	4563      	cmp	r3, ip
 80148a2:	f77f af73 	ble.w	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80148a6:	8ae3      	ldrh	r3, [r4, #22]
 80148a8:	2b00      	cmp	r3, #0
 80148aa:	f43f af6f 	beq.w	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80148ae:	2301      	movs	r3, #1
 80148b0:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80148b4:	8c22      	ldrh	r2, [r4, #32]
 80148b6:	8be3      	ldrh	r3, [r4, #30]
 80148b8:	4413      	add	r3, r2
 80148ba:	83e3      	strh	r3, [r4, #30]
 80148bc:	68e0      	ldr	r0, [r4, #12]
 80148be:	6803      	ldr	r3, [r0, #0]
 80148c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80148c2:	4798      	blx	r3
 80148c4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80148c8:	4418      	add	r0, r3
 80148ca:	8a63      	ldrh	r3, [r4, #18]
 80148cc:	1a18      	subs	r0, r3, r0
 80148ce:	8260      	strh	r0, [r4, #18]
 80148d0:	b005      	add	sp, #20
 80148d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80148d6:	2300      	movs	r3, #0
 80148d8:	4611      	mov	r1, r2
 80148da:	4620      	mov	r0, r4
 80148dc:	f7ff ff0e 	bl	80146fc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80148e0:	e754      	b.n	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80148e2:	4563      	cmp	r3, ip
 80148e4:	dd14      	ble.n	8014910 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80148e6:	b117      	cbz	r7, 80148ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80148e8:	2301      	movs	r3, #1
 80148ea:	460a      	mov	r2, r1
 80148ec:	e772      	b.n	80147d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80148ee:	2e00      	cmp	r6, #0
 80148f0:	f43f af4c 	beq.w	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80148f4:	2800      	cmp	r0, #0
 80148f6:	f47f af49 	bne.w	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80148fa:	f1ba 0f00 	cmp.w	sl, #0
 80148fe:	d002      	beq.n	8014906 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8014900:	2301      	movs	r3, #1
 8014902:	4642      	mov	r2, r8
 8014904:	e767      	b.n	80147d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8014906:	8ae3      	ldrh	r3, [r4, #22]
 8014908:	2b00      	cmp	r3, #0
 801490a:	f43f af3f 	beq.w	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801490e:	e7d5      	b.n	80148bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014910:	2800      	cmp	r0, #0
 8014912:	f47f af3b 	bne.w	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014916:	f1ba 0f00 	cmp.w	sl, #0
 801491a:	f43f af37 	beq.w	801478c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801491e:	2301      	movs	r3, #1
 8014920:	4642      	mov	r2, r8
 8014922:	e7da      	b.n	80148da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08014924 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8014924:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014926:	4605      	mov	r5, r0
 8014928:	b08f      	sub	sp, #60	; 0x3c
 801492a:	4617      	mov	r7, r2
 801492c:	461c      	mov	r4, r3
 801492e:	460e      	mov	r6, r1
 8014930:	b1d1      	cbz	r1, 8014968 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8014932:	681b      	ldr	r3, [r3, #0]
 8014934:	4620      	mov	r0, r4
 8014936:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014938:	4798      	blx	r3
 801493a:	4240      	negs	r0, r0
 801493c:	b200      	sxth	r0, r0
 801493e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014942:	9603      	str	r6, [sp, #12]
 8014944:	9700      	str	r7, [sp, #0]
 8014946:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801494a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801494e:	4629      	mov	r1, r5
 8014950:	a805      	add	r0, sp, #20
 8014952:	f7ff fcbf 	bl	80142d4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014956:	2401      	movs	r4, #1
 8014958:	a805      	add	r0, sp, #20
 801495a:	f7ff fedf 	bl	801471c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801495e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014962:	b163      	cbz	r3, 801497e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014964:	3401      	adds	r4, #1
 8014966:	e7f7      	b.n	8014958 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014968:	f002 ff48 	bl	80177fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801496c:	2401      	movs	r4, #1
 801496e:	280a      	cmp	r0, #10
 8014970:	4628      	mov	r0, r5
 8014972:	bf08      	it	eq
 8014974:	3401      	addeq	r4, #1
 8014976:	f002 ff41 	bl	80177fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801497a:	2800      	cmp	r0, #0
 801497c:	d1f7      	bne.n	801496e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801497e:	b2a0      	uxth	r0, r4
 8014980:	b00f      	add	sp, #60	; 0x3c
 8014982:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014984 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014988:	b0e3      	sub	sp, #396	; 0x18c
 801498a:	461c      	mov	r4, r3
 801498c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801498e:	4683      	mov	fp, r0
 8014990:	4688      	mov	r8, r1
 8014992:	2b00      	cmp	r3, #0
 8014994:	f000 8112 	beq.w	8014bbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014998:	6823      	ldr	r3, [r4, #0]
 801499a:	2b00      	cmp	r3, #0
 801499c:	f000 810e 	beq.w	8014bbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80149a0:	7ba3      	ldrb	r3, [r4, #14]
 80149a2:	2b00      	cmp	r3, #0
 80149a4:	f000 810a 	beq.w	8014bbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80149a8:	6810      	ldr	r0, [r2, #0]
 80149aa:	6851      	ldr	r1, [r2, #4]
 80149ac:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80149b0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80149b4:	ad0a      	add	r5, sp, #40	; 0x28
 80149b6:	462b      	mov	r3, r5
 80149b8:	c303      	stmia	r3!, {r0, r1}
 80149ba:	2100      	movs	r1, #0
 80149bc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80149c0:	910c      	str	r1, [sp, #48]	; 0x30
 80149c2:	79a2      	ldrb	r2, [r4, #6]
 80149c4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80149c8:	a90c      	add	r1, sp, #48	; 0x30
 80149ca:	4628      	mov	r0, r5
 80149cc:	f7ff fd01 	bl	80143d2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80149d0:	a90c      	add	r1, sp, #48	; 0x30
 80149d2:	4608      	mov	r0, r1
 80149d4:	79a2      	ldrb	r2, [r4, #6]
 80149d6:	f7ff fcfc 	bl	80143d2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80149da:	a817      	add	r0, sp, #92	; 0x5c
 80149dc:	f002 fae2 	bl	8016fa4 <_ZN8touchgfx12TextProviderC1Ev>
 80149e0:	6820      	ldr	r0, [r4, #0]
 80149e2:	6803      	ldr	r3, [r0, #0]
 80149e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80149e6:	4798      	blx	r3
 80149e8:	4606      	mov	r6, r0
 80149ea:	6820      	ldr	r0, [r4, #0]
 80149ec:	6803      	ldr	r3, [r0, #0]
 80149ee:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80149f0:	4798      	blx	r3
 80149f2:	4633      	mov	r3, r6
 80149f4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80149f6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80149f8:	9000      	str	r0, [sp, #0]
 80149fa:	a817      	add	r0, sp, #92	; 0x5c
 80149fc:	f002 fb2d 	bl	801705a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014a00:	6820      	ldr	r0, [r4, #0]
 8014a02:	f894 a004 	ldrb.w	sl, [r4, #4]
 8014a06:	6803      	ldr	r3, [r0, #0]
 8014a08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014a0a:	4798      	blx	r3
 8014a0c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014a10:	6823      	ldr	r3, [r4, #0]
 8014a12:	4607      	mov	r7, r0
 8014a14:	4406      	add	r6, r0
 8014a16:	a830      	add	r0, sp, #192	; 0xc0
 8014a18:	f893 9009 	ldrb.w	r9, [r3, #9]
 8014a1c:	f002 fac2 	bl	8016fa4 <_ZN8touchgfx12TextProviderC1Ev>
 8014a20:	7c23      	ldrb	r3, [r4, #16]
 8014a22:	b17b      	cbz	r3, 8014a44 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8014a24:	6820      	ldr	r0, [r4, #0]
 8014a26:	6803      	ldr	r3, [r0, #0]
 8014a28:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014a2a:	4798      	blx	r3
 8014a2c:	9009      	str	r0, [sp, #36]	; 0x24
 8014a2e:	6820      	ldr	r0, [r4, #0]
 8014a30:	6802      	ldr	r2, [r0, #0]
 8014a32:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8014a34:	4790      	blx	r2
 8014a36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a38:	9000      	str	r0, [sp, #0]
 8014a3a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014a3c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014a3e:	a830      	add	r0, sp, #192	; 0xc0
 8014a40:	f002 fb0b 	bl	801705a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014a44:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014a48:	7be2      	ldrb	r2, [r4, #15]
 8014a4a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014a4e:	1a8a      	subs	r2, r1, r2
 8014a50:	7c21      	ldrb	r1, [r4, #16]
 8014a52:	9103      	str	r1, [sp, #12]
 8014a54:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014a58:	9102      	str	r1, [sp, #8]
 8014a5a:	6821      	ldr	r1, [r4, #0]
 8014a5c:	9101      	str	r1, [sp, #4]
 8014a5e:	7961      	ldrb	r1, [r4, #5]
 8014a60:	9100      	str	r1, [sp, #0]
 8014a62:	b292      	uxth	r2, r2
 8014a64:	a930      	add	r1, sp, #192	; 0xc0
 8014a66:	a80e      	add	r0, sp, #56	; 0x38
 8014a68:	f7ff fc34 	bl	80142d4 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014a6c:	2e00      	cmp	r6, #0
 8014a6e:	dc5b      	bgt.n	8014b28 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014a70:	af17      	add	r7, sp, #92	; 0x5c
 8014a72:	f04f 0900 	mov.w	r9, #0
 8014a76:	7c23      	ldrb	r3, [r4, #16]
 8014a78:	2b00      	cmp	r3, #0
 8014a7a:	f000 80b1 	beq.w	8014be0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8014a7e:	a80e      	add	r0, sp, #56	; 0x38
 8014a80:	f7ff fe4c 	bl	801471c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014a84:	f1ba 0f00 	cmp.w	sl, #0
 8014a88:	f000 80a5 	beq.w	8014bd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014a8c:	7c23      	ldrb	r3, [r4, #16]
 8014a8e:	9309      	str	r3, [sp, #36]	; 0x24
 8014a90:	2264      	movs	r2, #100	; 0x64
 8014a92:	4639      	mov	r1, r7
 8014a94:	a849      	add	r0, sp, #292	; 0x124
 8014a96:	f015 fbb4 	bl	802a202 <memcpy>
 8014a9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a9c:	2b00      	cmp	r3, #0
 8014a9e:	f000 80a7 	beq.w	8014bf0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014aa2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014aa6:	7922      	ldrb	r2, [r4, #4]
 8014aa8:	2a01      	cmp	r2, #1
 8014aaa:	f040 808a 	bne.w	8014bc2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8014aae:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8014ab2:	1ac0      	subs	r0, r0, r3
 8014ab4:	2302      	movs	r3, #2
 8014ab6:	fb90 f0f3 	sdiv	r0, r0, r3
 8014aba:	b200      	sxth	r0, r0
 8014abc:	7c23      	ldrb	r3, [r4, #16]
 8014abe:	2b00      	cmp	r3, #0
 8014ac0:	f000 808b 	beq.w	8014bda <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014ac4:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014ac8:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8014acc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014ad0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014ad4:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014ad8:	4410      	add	r0, r2
 8014ada:	b200      	sxth	r0, r0
 8014adc:	9000      	str	r0, [sp, #0]
 8014ade:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014ae2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8014ae6:	4642      	mov	r2, r8
 8014ae8:	2100      	movs	r1, #0
 8014aea:	4658      	mov	r0, fp
 8014aec:	f7ff fca2 	bl	8014434 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014af0:	2800      	cmp	r0, #0
 8014af2:	d163      	bne.n	8014bbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014af4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014af8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014afc:	b2b2      	uxth	r2, r6
 8014afe:	4413      	add	r3, r2
 8014b00:	1a8a      	subs	r2, r1, r2
 8014b02:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8014b06:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8014b0a:	b21b      	sxth	r3, r3
 8014b0c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014b10:	2a00      	cmp	r2, #0
 8014b12:	d153      	bne.n	8014bbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014b14:	6822      	ldr	r2, [r4, #0]
 8014b16:	8869      	ldrh	r1, [r5, #2]
 8014b18:	7a12      	ldrb	r2, [r2, #8]
 8014b1a:	1a9b      	subs	r3, r3, r2
 8014b1c:	88ea      	ldrh	r2, [r5, #6]
 8014b1e:	440a      	add	r2, r1
 8014b20:	b212      	sxth	r2, r2
 8014b22:	4293      	cmp	r3, r2
 8014b24:	dda7      	ble.n	8014a76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8014b26:	e049      	b.n	8014bbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014b28:	7c23      	ldrb	r3, [r4, #16]
 8014b2a:	444f      	add	r7, r9
 8014b2c:	b1c3      	cbz	r3, 8014b60 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8014b2e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8014b32:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014b36:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014b3a:	443b      	add	r3, r7
 8014b3c:	4293      	cmp	r3, r2
 8014b3e:	da97      	bge.n	8014a70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014b40:	a80e      	add	r0, sp, #56	; 0x38
 8014b42:	f7ff fdeb 	bl	801471c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014b46:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8014b4a:	3b01      	subs	r3, #1
 8014b4c:	b29b      	uxth	r3, r3
 8014b4e:	454b      	cmp	r3, r9
 8014b50:	9309      	str	r3, [sp, #36]	; 0x24
 8014b52:	d021      	beq.n	8014b98 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014b54:	7961      	ldrb	r1, [r4, #5]
 8014b56:	a817      	add	r0, sp, #92	; 0x5c
 8014b58:	f7f3 fb90 	bl	800827c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014b5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014b5e:	e7f4      	b.n	8014b4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014b60:	fa1f f986 	uxth.w	r9, r6
 8014b64:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014b68:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014b6c:	443b      	add	r3, r7
 8014b6e:	4293      	cmp	r3, r2
 8014b70:	f6bf af7e 	bge.w	8014a70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014b74:	a817      	add	r0, sp, #92	; 0x5c
 8014b76:	f002 fe41 	bl	80177fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014b7a:	b1f8      	cbz	r0, 8014bbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014b7c:	280a      	cmp	r0, #10
 8014b7e:	d1f1      	bne.n	8014b64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014b80:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014b84:	444b      	add	r3, r9
 8014b86:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014b8a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014b8e:	eba3 0309 	sub.w	r3, r3, r9
 8014b92:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014b96:	e7e5      	b.n	8014b64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014b98:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014b9c:	b2b3      	uxth	r3, r6
 8014b9e:	441a      	add	r2, r3
 8014ba0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014ba4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8014ba8:	1ad3      	subs	r3, r2, r3
 8014baa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014bae:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014bb2:	b11b      	cbz	r3, 8014bbc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014bb4:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8014bb8:	2b00      	cmp	r3, #0
 8014bba:	d0ba      	beq.n	8014b32 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8014bbc:	b063      	add	sp, #396	; 0x18c
 8014bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bc2:	2a02      	cmp	r2, #2
 8014bc4:	d105      	bne.n	8014bd2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014bc6:	7be2      	ldrb	r2, [r4, #15]
 8014bc8:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014bcc:	1a80      	subs	r0, r0, r2
 8014bce:	1ac0      	subs	r0, r0, r3
 8014bd0:	e773      	b.n	8014aba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8014bd2:	2000      	movs	r0, #0
 8014bd4:	e772      	b.n	8014abc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014bd6:	7be0      	ldrb	r0, [r4, #15]
 8014bd8:	e770      	b.n	8014abc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014bda:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014bde:	e773      	b.n	8014ac8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014be0:	f1ba 0f00 	cmp.w	sl, #0
 8014be4:	d0f7      	beq.n	8014bd6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014be6:	2264      	movs	r2, #100	; 0x64
 8014be8:	4639      	mov	r1, r7
 8014bea:	a849      	add	r0, sp, #292	; 0x124
 8014bec:	f015 fb09 	bl	802a202 <memcpy>
 8014bf0:	2300      	movs	r3, #0
 8014bf2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014bf6:	6821      	ldr	r1, [r4, #0]
 8014bf8:	a849      	add	r0, sp, #292	; 0x124
 8014bfa:	f7ff fbae 	bl	801435a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014bfe:	b203      	sxth	r3, r0
 8014c00:	e751      	b.n	8014aa6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08014c02 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8014c02:	2b03      	cmp	r3, #3
 8014c04:	d818      	bhi.n	8014c38 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8014c06:	e8df f003 	tbb	[pc, r3]
 8014c0a:	0602      	.short	0x0602
 8014c0c:	130d      	.short	0x130d
 8014c0e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014c12:	1850      	adds	r0, r2, r1
 8014c14:	4770      	bx	lr
 8014c16:	8803      	ldrh	r3, [r0, #0]
 8014c18:	8880      	ldrh	r0, [r0, #4]
 8014c1a:	4418      	add	r0, r3
 8014c1c:	b200      	sxth	r0, r0
 8014c1e:	1a80      	subs	r0, r0, r2
 8014c20:	3801      	subs	r0, #1
 8014c22:	4770      	bx	lr
 8014c24:	8803      	ldrh	r3, [r0, #0]
 8014c26:	8880      	ldrh	r0, [r0, #4]
 8014c28:	4418      	add	r0, r3
 8014c2a:	b200      	sxth	r0, r0
 8014c2c:	1a40      	subs	r0, r0, r1
 8014c2e:	e7f7      	b.n	8014c20 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014c30:	f9b0 0000 	ldrsh.w	r0, [r0]
 8014c34:	4410      	add	r0, r2
 8014c36:	4770      	bx	lr
 8014c38:	2000      	movs	r0, #0
 8014c3a:	4770      	bx	lr

08014c3c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8014c3c:	2b03      	cmp	r3, #3
 8014c3e:	d817      	bhi.n	8014c70 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014c40:	e8df f003 	tbb	[pc, r3]
 8014c44:	10090602 	.word	0x10090602
 8014c48:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014c4c:	1850      	adds	r0, r2, r1
 8014c4e:	4770      	bx	lr
 8014c50:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014c54:	e7fa      	b.n	8014c4c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014c56:	8843      	ldrh	r3, [r0, #2]
 8014c58:	88c0      	ldrh	r0, [r0, #6]
 8014c5a:	4418      	add	r0, r3
 8014c5c:	b200      	sxth	r0, r0
 8014c5e:	1a80      	subs	r0, r0, r2
 8014c60:	3801      	subs	r0, #1
 8014c62:	4770      	bx	lr
 8014c64:	8843      	ldrh	r3, [r0, #2]
 8014c66:	88c0      	ldrh	r0, [r0, #6]
 8014c68:	4418      	add	r0, r3
 8014c6a:	b200      	sxth	r0, r0
 8014c6c:	1a40      	subs	r0, r0, r1
 8014c6e:	e7f7      	b.n	8014c60 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014c70:	2000      	movs	r0, #0
 8014c72:	4770      	bx	lr

08014c74 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014c74:	4b01      	ldr	r3, [pc, #4]	; (8014c7c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014c76:	2200      	movs	r2, #0
 8014c78:	601a      	str	r2, [r3, #0]
 8014c7a:	4770      	bx	lr
 8014c7c:	20012e84 	.word	0x20012e84

08014c80 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014c80:	4603      	mov	r3, r0
 8014c82:	b1c8      	cbz	r0, 8014cb8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014c84:	0c02      	lsrs	r2, r0, #16
 8014c86:	0412      	lsls	r2, r2, #16
 8014c88:	b9a2      	cbnz	r2, 8014cb4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8014c8a:	0403      	lsls	r3, r0, #16
 8014c8c:	2010      	movs	r0, #16
 8014c8e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014c92:	bf04      	itt	eq
 8014c94:	021b      	lsleq	r3, r3, #8
 8014c96:	3008      	addeq	r0, #8
 8014c98:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8014c9c:	bf04      	itt	eq
 8014c9e:	011b      	lsleq	r3, r3, #4
 8014ca0:	3004      	addeq	r0, #4
 8014ca2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014ca6:	bf04      	itt	eq
 8014ca8:	009b      	lsleq	r3, r3, #2
 8014caa:	3002      	addeq	r0, #2
 8014cac:	2b00      	cmp	r3, #0
 8014cae:	db04      	blt.n	8014cba <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014cb0:	3001      	adds	r0, #1
 8014cb2:	4770      	bx	lr
 8014cb4:	2000      	movs	r0, #0
 8014cb6:	e7ea      	b.n	8014c8e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014cb8:	2020      	movs	r0, #32
 8014cba:	4770      	bx	lr

08014cbc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8014cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cc0:	b087      	sub	sp, #28
 8014cc2:	460d      	mov	r5, r1
 8014cc4:	4616      	mov	r6, r2
 8014cc6:	4698      	mov	r8, r3
 8014cc8:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8014ccc:	4601      	mov	r1, r0
 8014cce:	b120      	cbz	r0, 8014cda <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014cd0:	b11a      	cbz	r2, 8014cda <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014cd2:	2d1f      	cmp	r5, #31
 8014cd4:	d801      	bhi.n	8014cda <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014cd6:	2b1f      	cmp	r3, #31
 8014cd8:	d904      	bls.n	8014ce4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8014cda:	2000      	movs	r0, #0
 8014cdc:	6038      	str	r0, [r7, #0]
 8014cde:	b007      	add	sp, #28
 8014ce0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ce4:	b97d      	cbnz	r5, 8014d06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014ce6:	b143      	cbz	r3, 8014cfa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014ce8:	4602      	mov	r2, r0
 8014cea:	e9cd 4700 	strd	r4, r7, [sp]
 8014cee:	462b      	mov	r3, r5
 8014cf0:	4641      	mov	r1, r8
 8014cf2:	4630      	mov	r0, r6
 8014cf4:	f7ff ffe2 	bl	8014cbc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014cf8:	e7f1      	b.n	8014cde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014cfa:	f04f 33ff 	mov.w	r3, #4294967295
 8014cfe:	603b      	str	r3, [r7, #0]
 8014d00:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8014d04:	e7eb      	b.n	8014cde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014d06:	fa32 fa05 	lsrs.w	sl, r2, r5
 8014d0a:	d106      	bne.n	8014d1a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8014d0c:	4346      	muls	r6, r0
 8014d0e:	fbb6 f0f4 	udiv	r0, r6, r4
 8014d12:	fb04 6610 	mls	r6, r4, r0, r6
 8014d16:	603e      	str	r6, [r7, #0]
 8014d18:	e7e1      	b.n	8014cde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014d1a:	2201      	movs	r2, #1
 8014d1c:	40aa      	lsls	r2, r5
 8014d1e:	3a01      	subs	r2, #1
 8014d20:	4016      	ands	r6, r2
 8014d22:	fa00 fb05 	lsl.w	fp, r0, r5
 8014d26:	4630      	mov	r0, r6
 8014d28:	fbbb f9f4 	udiv	r9, fp, r4
 8014d2c:	fb0a f309 	mul.w	r3, sl, r9
 8014d30:	9303      	str	r3, [sp, #12]
 8014d32:	f7ff ffa5 	bl	8014c80 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014d36:	462b      	mov	r3, r5
 8014d38:	460a      	mov	r2, r1
 8014d3a:	e9cd 4700 	strd	r4, r7, [sp]
 8014d3e:	4601      	mov	r1, r0
 8014d40:	4630      	mov	r0, r6
 8014d42:	f7ff ffbb 	bl	8014cbc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014d46:	fb04 b919 	mls	r9, r4, r9, fp
 8014d4a:	4606      	mov	r6, r0
 8014d4c:	4648      	mov	r0, r9
 8014d4e:	eb05 0108 	add.w	r1, r5, r8
 8014d52:	f7ff ff95 	bl	8014c80 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014d56:	ab05      	add	r3, sp, #20
 8014d58:	e9cd 4300 	strd	r4, r3, [sp]
 8014d5c:	464a      	mov	r2, r9
 8014d5e:	4603      	mov	r3, r0
 8014d60:	4650      	mov	r0, sl
 8014d62:	f7ff ffab 	bl	8014cbc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014d66:	6839      	ldr	r1, [r7, #0]
 8014d68:	9a05      	ldr	r2, [sp, #20]
 8014d6a:	9b03      	ldr	r3, [sp, #12]
 8014d6c:	4411      	add	r1, r2
 8014d6e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014d72:	18d3      	adds	r3, r2, r3
 8014d74:	441e      	add	r6, r3
 8014d76:	fb04 1412 	mls	r4, r4, r2, r1
 8014d7a:	4430      	add	r0, r6
 8014d7c:	603c      	str	r4, [r7, #0]
 8014d7e:	e7ae      	b.n	8014cde <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014d80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014d80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014d84:	b085      	sub	sp, #20
 8014d86:	f1b0 0900 	subs.w	r9, r0, #0
 8014d8a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014d8c:	461d      	mov	r5, r3
 8014d8e:	bfbf      	itttt	lt
 8014d90:	6823      	ldrlt	r3, [r4, #0]
 8014d92:	425b      	neglt	r3, r3
 8014d94:	f1c9 0900 	rsblt	r9, r9, #0
 8014d98:	6023      	strlt	r3, [r4, #0]
 8014d9a:	bfb4      	ite	lt
 8014d9c:	f04f 36ff 	movlt.w	r6, #4294967295
 8014da0:	2601      	movge	r6, #1
 8014da2:	2a00      	cmp	r2, #0
 8014da4:	4617      	mov	r7, r2
 8014da6:	da04      	bge.n	8014db2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014da8:	6823      	ldr	r3, [r4, #0]
 8014daa:	425b      	negs	r3, r3
 8014dac:	4257      	negs	r7, r2
 8014dae:	4276      	negs	r6, r6
 8014db0:	6023      	str	r3, [r4, #0]
 8014db2:	2d00      	cmp	r5, #0
 8014db4:	4638      	mov	r0, r7
 8014db6:	bfba      	itte	lt
 8014db8:	426d      	neglt	r5, r5
 8014dba:	f04f 38ff 	movlt.w	r8, #4294967295
 8014dbe:	f04f 0801 	movge.w	r8, #1
 8014dc2:	f7ff ff5d 	bl	8014c80 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014dc6:	ab03      	add	r3, sp, #12
 8014dc8:	e9cd 5300 	strd	r5, r3, [sp]
 8014dcc:	463a      	mov	r2, r7
 8014dce:	4603      	mov	r3, r0
 8014dd0:	4648      	mov	r0, r9
 8014dd2:	f7ff ff73 	bl	8014cbc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014dd6:	6823      	ldr	r3, [r4, #0]
 8014dd8:	9a03      	ldr	r2, [sp, #12]
 8014dda:	4546      	cmp	r6, r8
 8014ddc:	441a      	add	r2, r3
 8014dde:	fb92 f3f5 	sdiv	r3, r2, r5
 8014de2:	4418      	add	r0, r3
 8014de4:	bf18      	it	ne
 8014de6:	4240      	negne	r0, r0
 8014de8:	fb05 2313 	mls	r3, r5, r3, r2
 8014dec:	1c72      	adds	r2, r6, #1
 8014dee:	6023      	str	r3, [r4, #0]
 8014df0:	d105      	bne.n	8014dfe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014df2:	2b00      	cmp	r3, #0
 8014df4:	f1c3 0200 	rsb	r2, r3, #0
 8014df8:	db0b      	blt.n	8014e12 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014dfa:	6022      	str	r2, [r4, #0]
 8014dfc:	e006      	b.n	8014e0c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014dfe:	2e01      	cmp	r6, #1
 8014e00:	d104      	bne.n	8014e0c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014e02:	2b00      	cmp	r3, #0
 8014e04:	da02      	bge.n	8014e0c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014e06:	442b      	add	r3, r5
 8014e08:	3801      	subs	r0, #1
 8014e0a:	6023      	str	r3, [r4, #0]
 8014e0c:	b005      	add	sp, #20
 8014e0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014e12:	3801      	subs	r0, #1
 8014e14:	1b52      	subs	r2, r2, r5
 8014e16:	e7f0      	b.n	8014dfa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014e18 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014e18:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014e1c:	4c1c      	ldr	r4, [pc, #112]	; (8014e90 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014e1e:	6807      	ldr	r7, [r0, #0]
 8014e20:	69a3      	ldr	r3, [r4, #24]
 8014e22:	4605      	mov	r5, r0
 8014e24:	b92b      	cbnz	r3, 8014e32 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014e26:	6840      	ldr	r0, [r0, #4]
 8014e28:	e9c5 7000 	strd	r7, r0, [r5]
 8014e2c:	b004      	add	sp, #16
 8014e2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014e32:	68a2      	ldr	r2, [r4, #8]
 8014e34:	6820      	ldr	r0, [r4, #0]
 8014e36:	ae04      	add	r6, sp, #16
 8014e38:	f04f 0802 	mov.w	r8, #2
 8014e3c:	fb93 f1f8 	sdiv	r1, r3, r8
 8014e40:	440a      	add	r2, r1
 8014e42:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014e46:	69e1      	ldr	r1, [r4, #28]
 8014e48:	9600      	str	r6, [sp, #0]
 8014e4a:	463a      	mov	r2, r7
 8014e4c:	f7ff ff98 	bl	8014d80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014e50:	69a3      	ldr	r3, [r4, #24]
 8014e52:	686a      	ldr	r2, [r5, #4]
 8014e54:	6a21      	ldr	r1, [r4, #32]
 8014e56:	9600      	str	r6, [sp, #0]
 8014e58:	4607      	mov	r7, r0
 8014e5a:	6860      	ldr	r0, [r4, #4]
 8014e5c:	f7ff ff90 	bl	8014d80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014e60:	6962      	ldr	r2, [r4, #20]
 8014e62:	69a3      	ldr	r3, [r4, #24]
 8014e64:	fb93 f8f8 	sdiv	r8, r3, r8
 8014e68:	4442      	add	r2, r8
 8014e6a:	9203      	str	r2, [sp, #12]
 8014e6c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014e6e:	682a      	ldr	r2, [r5, #0]
 8014e70:	9600      	str	r6, [sp, #0]
 8014e72:	4407      	add	r7, r0
 8014e74:	68e0      	ldr	r0, [r4, #12]
 8014e76:	f7ff ff83 	bl	8014d80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014e7a:	9600      	str	r6, [sp, #0]
 8014e7c:	4680      	mov	r8, r0
 8014e7e:	69a3      	ldr	r3, [r4, #24]
 8014e80:	686a      	ldr	r2, [r5, #4]
 8014e82:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014e84:	6920      	ldr	r0, [r4, #16]
 8014e86:	f7ff ff7b 	bl	8014d80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014e8a:	4440      	add	r0, r8
 8014e8c:	e7cc      	b.n	8014e28 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014e8e:	bf00      	nop
 8014e90:	20012e88 	.word	0x20012e88

08014e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014e94:	4b07      	ldr	r3, [pc, #28]	; (8014eb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014e96:	781b      	ldrb	r3, [r3, #0]
 8014e98:	2b01      	cmp	r3, #1
 8014e9a:	d109      	bne.n	8014eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014e9c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014ea0:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014ea4:	8003      	strh	r3, [r0, #0]
 8014ea6:	4b04      	ldr	r3, [pc, #16]	; (8014eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014ea8:	881b      	ldrh	r3, [r3, #0]
 8014eaa:	3b01      	subs	r3, #1
 8014eac:	1a9b      	subs	r3, r3, r2
 8014eae:	800b      	strh	r3, [r1, #0]
 8014eb0:	4770      	bx	lr
 8014eb2:	bf00      	nop
 8014eb4:	20012e6c 	.word	0x20012e6c
 8014eb8:	20012e68 	.word	0x20012e68

08014ebc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014ebc:	b510      	push	{r4, lr}
 8014ebe:	4b07      	ldr	r3, [pc, #28]	; (8014edc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014ec0:	781b      	ldrb	r3, [r3, #0]
 8014ec2:	2b01      	cmp	r3, #1
 8014ec4:	d108      	bne.n	8014ed8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014ec6:	4b06      	ldr	r3, [pc, #24]	; (8014ee0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014ec8:	880c      	ldrh	r4, [r1, #0]
 8014eca:	881b      	ldrh	r3, [r3, #0]
 8014ecc:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014ed0:	3b01      	subs	r3, #1
 8014ed2:	1b1b      	subs	r3, r3, r4
 8014ed4:	8003      	strh	r3, [r0, #0]
 8014ed6:	800a      	strh	r2, [r1, #0]
 8014ed8:	bd10      	pop	{r4, pc}
 8014eda:	bf00      	nop
 8014edc:	20012e6c 	.word	0x20012e6c
 8014ee0:	20012e68 	.word	0x20012e68

08014ee4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014ee4:	b510      	push	{r4, lr}
 8014ee6:	4b0a      	ldr	r3, [pc, #40]	; (8014f10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014ee8:	781b      	ldrb	r3, [r3, #0]
 8014eea:	2b01      	cmp	r3, #1
 8014eec:	d10e      	bne.n	8014f0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014eee:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014ef2:	8843      	ldrh	r3, [r0, #2]
 8014ef4:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014ef8:	8044      	strh	r4, [r0, #2]
 8014efa:	18ca      	adds	r2, r1, r3
 8014efc:	4b05      	ldr	r3, [pc, #20]	; (8014f14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8014efe:	881b      	ldrh	r3, [r3, #0]
 8014f00:	1a9b      	subs	r3, r3, r2
 8014f02:	8003      	strh	r3, [r0, #0]
 8014f04:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014f08:	80c3      	strh	r3, [r0, #6]
 8014f0a:	8081      	strh	r1, [r0, #4]
 8014f0c:	bd10      	pop	{r4, pc}
 8014f0e:	bf00      	nop
 8014f10:	20012e6c 	.word	0x20012e6c
 8014f14:	20012e68 	.word	0x20012e68

08014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014f18:	4b08      	ldr	r3, [pc, #32]	; (8014f3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014f1a:	781b      	ldrb	r3, [r3, #0]
 8014f1c:	2b01      	cmp	r3, #1
 8014f1e:	d10c      	bne.n	8014f3a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014f20:	8803      	ldrh	r3, [r0, #0]
 8014f22:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014f26:	8842      	ldrh	r2, [r0, #2]
 8014f28:	8002      	strh	r2, [r0, #0]
 8014f2a:	185a      	adds	r2, r3, r1
 8014f2c:	4b04      	ldr	r3, [pc, #16]	; (8014f40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8014f2e:	881b      	ldrh	r3, [r3, #0]
 8014f30:	1a9b      	subs	r3, r3, r2
 8014f32:	8043      	strh	r3, [r0, #2]
 8014f34:	88c3      	ldrh	r3, [r0, #6]
 8014f36:	8083      	strh	r3, [r0, #4]
 8014f38:	80c1      	strh	r1, [r0, #6]
 8014f3a:	4770      	bx	lr
 8014f3c:	20012e6c 	.word	0x20012e6c
 8014f40:	20012e68 	.word	0x20012e68

08014f44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014f44:	b510      	push	{r4, lr}
 8014f46:	4b07      	ldr	r3, [pc, #28]	; (8014f64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014f48:	781b      	ldrb	r3, [r3, #0]
 8014f4a:	2b01      	cmp	r3, #1
 8014f4c:	d108      	bne.n	8014f60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8014f4e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014f52:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014f56:	8003      	strh	r3, [r0, #0]
 8014f58:	8893      	ldrh	r3, [r2, #4]
 8014f5a:	3b01      	subs	r3, #1
 8014f5c:	1b1b      	subs	r3, r3, r4
 8014f5e:	800b      	strh	r3, [r1, #0]
 8014f60:	bd10      	pop	{r4, pc}
 8014f62:	bf00      	nop
 8014f64:	20012e6c 	.word	0x20012e6c

08014f68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014f68:	4b0b      	ldr	r3, [pc, #44]	; (8014f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8014f6a:	781b      	ldrb	r3, [r3, #0]
 8014f6c:	2b01      	cmp	r3, #1
 8014f6e:	d111      	bne.n	8014f94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014f70:	680b      	ldr	r3, [r1, #0]
 8014f72:	ed90 7a00 	vldr	s14, [r0]
 8014f76:	6003      	str	r3, [r0, #0]
 8014f78:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8014f7c:	eddf 6a07 	vldr	s13, [pc, #28]	; 8014f9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8014f80:	ee07 3a90 	vmov	s15, r3
 8014f84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014f88:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014f8c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014f90:	edc1 7a00 	vstr	s15, [r1]
 8014f94:	4770      	bx	lr
 8014f96:	bf00      	nop
 8014f98:	20012e6c 	.word	0x20012e6c
 8014f9c:	38d1b717 	.word	0x38d1b717

08014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014fa0:	b510      	push	{r4, lr}
 8014fa2:	4b0a      	ldr	r3, [pc, #40]	; (8014fcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014fa4:	781b      	ldrb	r3, [r3, #0]
 8014fa6:	2b01      	cmp	r3, #1
 8014fa8:	460a      	mov	r2, r1
 8014faa:	d10d      	bne.n	8014fc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014fac:	8881      	ldrh	r1, [r0, #4]
 8014fae:	8803      	ldrh	r3, [r0, #0]
 8014fb0:	440b      	add	r3, r1
 8014fb2:	4601      	mov	r1, r0
 8014fb4:	3b01      	subs	r3, #1
 8014fb6:	f821 3b02 	strh.w	r3, [r1], #2
 8014fba:	f7ff ffc3 	bl	8014f44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014fbe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014fc2:	88c2      	ldrh	r2, [r0, #6]
 8014fc4:	8082      	strh	r2, [r0, #4]
 8014fc6:	80c3      	strh	r3, [r0, #6]
 8014fc8:	bd10      	pop	{r4, pc}
 8014fca:	bf00      	nop
 8014fcc:	20012e6c 	.word	0x20012e6c

08014fd0 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014fd0:	4b06      	ldr	r3, [pc, #24]	; (8014fec <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014fd2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014fd6:	4b06      	ldr	r3, [pc, #24]	; (8014ff0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014fd8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8014fdc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014fe0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8014fe4:	2100      	movs	r1, #0
 8014fe6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8014fea:	4770      	bx	lr
 8014fec:	20012e68 	.word	0x20012e68
 8014ff0:	20012e6a 	.word	0x20012e6a

08014ff4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014ff4:	4b03      	ldr	r3, [pc, #12]	; (8015004 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014ff6:	6818      	ldr	r0, [r3, #0]
 8014ff8:	b110      	cbz	r0, 8015000 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014ffa:	6803      	ldr	r3, [r0, #0]
 8014ffc:	699b      	ldr	r3, [r3, #24]
 8014ffe:	4718      	bx	r3
 8015000:	4770      	bx	lr
 8015002:	bf00      	nop
 8015004:	20012eb8 	.word	0x20012eb8

08015008 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8015008:	4770      	bx	lr
	...

0801500c <_ZN8touchgfx11Application4drawEv>:
 801500c:	b507      	push	{r0, r1, r2, lr}
 801500e:	4b09      	ldr	r3, [pc, #36]	; (8015034 <_ZN8touchgfx11Application4drawEv+0x28>)
 8015010:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015014:	4b08      	ldr	r3, [pc, #32]	; (8015038 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8015016:	f8ad 2004 	strh.w	r2, [sp, #4]
 801501a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801501e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015022:	6803      	ldr	r3, [r0, #0]
 8015024:	2100      	movs	r1, #0
 8015026:	9100      	str	r1, [sp, #0]
 8015028:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801502a:	4669      	mov	r1, sp
 801502c:	4798      	blx	r3
 801502e:	b003      	add	sp, #12
 8015030:	f85d fb04 	ldr.w	pc, [sp], #4
 8015034:	20012e68 	.word	0x20012e68
 8015038:	20012e6a 	.word	0x20012e6a

0801503c <_ZN8touchgfx11Application10invalidateEv>:
 801503c:	4b09      	ldr	r3, [pc, #36]	; (8015064 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801503e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015042:	4b09      	ldr	r3, [pc, #36]	; (8015068 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8015044:	b082      	sub	sp, #8
 8015046:	f9b3 3000 	ldrsh.w	r3, [r3]
 801504a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801504e:	2100      	movs	r1, #0
 8015050:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015054:	9100      	str	r1, [sp, #0]
 8015056:	6803      	ldr	r3, [r0, #0]
 8015058:	aa02      	add	r2, sp, #8
 801505a:	e912 0006 	ldmdb	r2, {r1, r2}
 801505e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015060:	b002      	add	sp, #8
 8015062:	4718      	bx	r3
 8015064:	20012e68 	.word	0x20012e68
 8015068:	20012e6a 	.word	0x20012e6a

0801506c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801506c:	4b03      	ldr	r3, [pc, #12]	; (801507c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801506e:	6818      	ldr	r0, [r3, #0]
 8015070:	b110      	cbz	r0, 8015078 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8015072:	6803      	ldr	r3, [r0, #0]
 8015074:	69db      	ldr	r3, [r3, #28]
 8015076:	4718      	bx	r3
 8015078:	4770      	bx	lr
 801507a:	bf00      	nop
 801507c:	20012eb8 	.word	0x20012eb8

08015080 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8015080:	4b03      	ldr	r3, [pc, #12]	; (8015090 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8015082:	6818      	ldr	r0, [r3, #0]
 8015084:	b110      	cbz	r0, 801508c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8015086:	6803      	ldr	r3, [r0, #0]
 8015088:	6a1b      	ldr	r3, [r3, #32]
 801508a:	4718      	bx	r3
 801508c:	4770      	bx	lr
 801508e:	bf00      	nop
 8015090:	20012eb8 	.word	0x20012eb8

08015094 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8015094:	2300      	movs	r3, #0
 8015096:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 801509a:	4770      	bx	lr

0801509c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801509c:	4b03      	ldr	r3, [pc, #12]	; (80150ac <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801509e:	6818      	ldr	r0, [r3, #0]
 80150a0:	b110      	cbz	r0, 80150a8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80150a2:	6803      	ldr	r3, [r0, #0]
 80150a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80150a6:	4718      	bx	r3
 80150a8:	4770      	bx	lr
 80150aa:	bf00      	nop
 80150ac:	20012eb8 	.word	0x20012eb8

080150b0 <_ZN8touchgfx11ApplicationD1Ev>:
 80150b0:	4770      	bx	lr

080150b2 <_ZN8touchgfx11ApplicationD0Ev>:
 80150b2:	b510      	push	{r4, lr}
 80150b4:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80150b8:	4604      	mov	r4, r0
 80150ba:	f013 ff64 	bl	8028f86 <_ZdlPvj>
 80150be:	4620      	mov	r0, r4
 80150c0:	bd10      	pop	{r4, pc}

080150c2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 80150c2:	b510      	push	{r4, lr}
 80150c4:	f9b1 4000 	ldrsh.w	r4, [r1]
 80150c8:	888a      	ldrh	r2, [r1, #4]
 80150ca:	f9b0 3000 	ldrsh.w	r3, [r0]
 80150ce:	4422      	add	r2, r4
 80150d0:	b212      	sxth	r2, r2
 80150d2:	4293      	cmp	r3, r2
 80150d4:	da15      	bge.n	8015102 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80150d6:	8882      	ldrh	r2, [r0, #4]
 80150d8:	4413      	add	r3, r2
 80150da:	b21b      	sxth	r3, r3
 80150dc:	429c      	cmp	r4, r3
 80150de:	da10      	bge.n	8015102 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80150e0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80150e4:	88c9      	ldrh	r1, [r1, #6]
 80150e6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80150ea:	4419      	add	r1, r3
 80150ec:	b209      	sxth	r1, r1
 80150ee:	428a      	cmp	r2, r1
 80150f0:	da07      	bge.n	8015102 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80150f2:	88c0      	ldrh	r0, [r0, #6]
 80150f4:	4410      	add	r0, r2
 80150f6:	b200      	sxth	r0, r0
 80150f8:	4283      	cmp	r3, r0
 80150fa:	bfac      	ite	ge
 80150fc:	2000      	movge	r0, #0
 80150fe:	2001      	movlt	r0, #1
 8015100:	bd10      	pop	{r4, pc}
 8015102:	2000      	movs	r0, #0
 8015104:	e7fc      	b.n	8015100 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08015106 <_ZN8touchgfx4Rect10restrictToEss>:
 8015106:	f9b0 3000 	ldrsh.w	r3, [r0]
 801510a:	2b00      	cmp	r3, #0
 801510c:	b510      	push	{r4, lr}
 801510e:	da04      	bge.n	801511a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8015110:	8884      	ldrh	r4, [r0, #4]
 8015112:	4423      	add	r3, r4
 8015114:	8083      	strh	r3, [r0, #4]
 8015116:	2300      	movs	r3, #0
 8015118:	8003      	strh	r3, [r0, #0]
 801511a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801511e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015122:	1b09      	subs	r1, r1, r4
 8015124:	428b      	cmp	r3, r1
 8015126:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801512a:	bfc8      	it	gt
 801512c:	8081      	strhgt	r1, [r0, #4]
 801512e:	2b00      	cmp	r3, #0
 8015130:	da04      	bge.n	801513c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8015132:	88c1      	ldrh	r1, [r0, #6]
 8015134:	440b      	add	r3, r1
 8015136:	80c3      	strh	r3, [r0, #6]
 8015138:	2300      	movs	r3, #0
 801513a:	8043      	strh	r3, [r0, #2]
 801513c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015140:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8015144:	1a52      	subs	r2, r2, r1
 8015146:	4293      	cmp	r3, r2
 8015148:	bfc8      	it	gt
 801514a:	80c2      	strhgt	r2, [r0, #6]
 801514c:	bd10      	pop	{r4, pc}
	...

08015150 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8015150:	b510      	push	{r4, lr}
 8015152:	4b10      	ldr	r3, [pc, #64]	; (8015194 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8015154:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015158:	4b0f      	ldr	r3, [pc, #60]	; (8015198 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801515a:	460c      	mov	r4, r1
 801515c:	4620      	mov	r0, r4
 801515e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015162:	f7ff ffd0 	bl	8015106 <_ZN8touchgfx4Rect10restrictToEss>
 8015166:	4b0d      	ldr	r3, [pc, #52]	; (801519c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8015168:	6818      	ldr	r0, [r3, #0]
 801516a:	b190      	cbz	r0, 8015192 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801516c:	6803      	ldr	r3, [r0, #0]
 801516e:	4621      	mov	r1, r4
 8015170:	689b      	ldr	r3, [r3, #8]
 8015172:	4798      	blx	r3
 8015174:	4b0a      	ldr	r3, [pc, #40]	; (80151a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8015176:	6818      	ldr	r0, [r3, #0]
 8015178:	b118      	cbz	r0, 8015182 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801517a:	6803      	ldr	r3, [r0, #0]
 801517c:	4621      	mov	r1, r4
 801517e:	689b      	ldr	r3, [r3, #8]
 8015180:	4798      	blx	r3
 8015182:	4b08      	ldr	r3, [pc, #32]	; (80151a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8015184:	6818      	ldr	r0, [r3, #0]
 8015186:	6803      	ldr	r3, [r0, #0]
 8015188:	4621      	mov	r1, r4
 801518a:	69db      	ldr	r3, [r3, #28]
 801518c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015190:	4718      	bx	r3
 8015192:	bd10      	pop	{r4, pc}
 8015194:	20012e6a 	.word	0x20012e6a
 8015198:	20012e68 	.word	0x20012e68
 801519c:	20012eb8 	.word	0x20012eb8
 80151a0:	20012eb4 	.word	0x20012eb4
 80151a4:	20012e74 	.word	0x20012e74

080151a8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80151a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80151aa:	4606      	mov	r6, r0
 80151ac:	4608      	mov	r0, r1
 80151ae:	460f      	mov	r7, r1
 80151b0:	f7fa ff97 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80151b4:	b9e8      	cbnz	r0, 80151f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80151b6:	f9b7 5000 	ldrsh.w	r5, [r7]
 80151ba:	f9b6 4000 	ldrsh.w	r4, [r6]
 80151be:	42a5      	cmp	r5, r4
 80151c0:	db17      	blt.n	80151f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80151c2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80151c6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80151ca:	429a      	cmp	r2, r3
 80151cc:	db11      	blt.n	80151f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80151ce:	88b9      	ldrh	r1, [r7, #4]
 80151d0:	440d      	add	r5, r1
 80151d2:	88b1      	ldrh	r1, [r6, #4]
 80151d4:	440c      	add	r4, r1
 80151d6:	b22d      	sxth	r5, r5
 80151d8:	b224      	sxth	r4, r4
 80151da:	42a5      	cmp	r5, r4
 80151dc:	dc09      	bgt.n	80151f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80151de:	88f8      	ldrh	r0, [r7, #6]
 80151e0:	4410      	add	r0, r2
 80151e2:	88f2      	ldrh	r2, [r6, #6]
 80151e4:	4413      	add	r3, r2
 80151e6:	b200      	sxth	r0, r0
 80151e8:	b21b      	sxth	r3, r3
 80151ea:	4298      	cmp	r0, r3
 80151ec:	bfcc      	ite	gt
 80151ee:	2000      	movgt	r0, #0
 80151f0:	2001      	movle	r0, #1
 80151f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080151f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80151f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80151f6:	4604      	mov	r4, r0
 80151f8:	4608      	mov	r0, r1
 80151fa:	460d      	mov	r5, r1
 80151fc:	f7fa ff71 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015200:	b978      	cbnz	r0, 8015222 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8015202:	4620      	mov	r0, r4
 8015204:	f7fa ff6d 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015208:	f9b5 6000 	ldrsh.w	r6, [r5]
 801520c:	b150      	cbz	r0, 8015224 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801520e:	8026      	strh	r6, [r4, #0]
 8015210:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8015214:	8063      	strh	r3, [r4, #2]
 8015216:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801521a:	80a3      	strh	r3, [r4, #4]
 801521c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8015220:	80e3      	strh	r3, [r4, #6]
 8015222:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015224:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015228:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801522c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8015230:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8015234:	88ed      	ldrh	r5, [r5, #6]
 8015236:	42b1      	cmp	r1, r6
 8015238:	460f      	mov	r7, r1
 801523a:	bfa8      	it	ge
 801523c:	4637      	movge	r7, r6
 801523e:	4293      	cmp	r3, r2
 8015240:	4618      	mov	r0, r3
 8015242:	4466      	add	r6, ip
 8015244:	bfa8      	it	ge
 8015246:	4610      	movge	r0, r2
 8015248:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801524c:	8027      	strh	r7, [r4, #0]
 801524e:	442a      	add	r2, r5
 8015250:	88e5      	ldrh	r5, [r4, #6]
 8015252:	8060      	strh	r0, [r4, #2]
 8015254:	4461      	add	r1, ip
 8015256:	442b      	add	r3, r5
 8015258:	b236      	sxth	r6, r6
 801525a:	b209      	sxth	r1, r1
 801525c:	b212      	sxth	r2, r2
 801525e:	b21b      	sxth	r3, r3
 8015260:	428e      	cmp	r6, r1
 8015262:	bfac      	ite	ge
 8015264:	ebc7 0106 	rsbge	r1, r7, r6
 8015268:	ebc7 0101 	rsblt	r1, r7, r1
 801526c:	429a      	cmp	r2, r3
 801526e:	bfac      	ite	ge
 8015270:	ebc0 0202 	rsbge	r2, r0, r2
 8015274:	ebc0 0203 	rsblt	r2, r0, r3
 8015278:	80a1      	strh	r1, [r4, #4]
 801527a:	80e2      	strh	r2, [r4, #6]
 801527c:	e7d1      	b.n	8015222 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08015280 <_ZN8touchgfx11Application11getInstanceEv>:
 8015280:	4b01      	ldr	r3, [pc, #4]	; (8015288 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8015282:	6818      	ldr	r0, [r3, #0]
 8015284:	4770      	bx	lr
 8015286:	bf00      	nop
 8015288:	20012ec8 	.word	0x20012ec8

0801528c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 801528c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801528e:	4b10      	ldr	r3, [pc, #64]	; (80152d0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8015290:	781b      	ldrb	r3, [r3, #0]
 8015292:	4605      	mov	r5, r0
 8015294:	b1d3      	cbz	r3, 80152cc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8015296:	4b0f      	ldr	r3, [pc, #60]	; (80152d4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8015298:	4f0f      	ldr	r7, [pc, #60]	; (80152d8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801529a:	881c      	ldrh	r4, [r3, #0]
 801529c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80152a0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80152a4:	42a3      	cmp	r3, r4
 80152a6:	d90e      	bls.n	80152c6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80152a8:	683b      	ldr	r3, [r7, #0]
 80152aa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80152ae:	b10a      	cbz	r2, 80152b4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 80152b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80152b2:	b900      	cbnz	r0, 80152b6 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 80152b4:	6898      	ldr	r0, [r3, #8]
 80152b6:	6803      	ldr	r3, [r0, #0]
 80152b8:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 80152bc:	69db      	ldr	r3, [r3, #28]
 80152be:	3401      	adds	r4, #1
 80152c0:	4798      	blx	r3
 80152c2:	b2a4      	uxth	r4, r4
 80152c4:	e7ec      	b.n	80152a0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 80152c6:	2300      	movs	r3, #0
 80152c8:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 80152cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80152ce:	bf00      	nop
 80152d0:	20012e72 	.word	0x20012e72
 80152d4:	20000088 	.word	0x20000088
 80152d8:	20012e74 	.word	0x20012e74

080152dc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80152dc:	b510      	push	{r4, lr}
 80152de:	2300      	movs	r3, #0
 80152e0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 80152e4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80152e8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80152ec:	4604      	mov	r4, r0
 80152ee:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80152f2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80152f6:	429a      	cmp	r2, r3
 80152f8:	d90e      	bls.n	8015318 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80152fa:	18e2      	adds	r2, r4, r3
 80152fc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8015300:	b122      	cbz	r2, 801530c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8015302:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8015306:	6803      	ldr	r3, [r0, #0]
 8015308:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801530a:	4798      	blx	r3
 801530c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8015310:	3301      	adds	r3, #1
 8015312:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015316:	e7ea      	b.n	80152ee <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8015318:	bd10      	pop	{r4, pc}

0801531a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801531a:	b530      	push	{r4, r5, lr}
 801531c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8015320:	2200      	movs	r2, #0
 8015322:	b293      	uxth	r3, r2
 8015324:	429d      	cmp	r5, r3
 8015326:	d90e      	bls.n	8015346 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015328:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 801532c:	428b      	cmp	r3, r1
 801532e:	d10b      	bne.n	8015348 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015330:	1884      	adds	r4, r0, r2
 8015332:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8015336:	b13b      	cbz	r3, 8015348 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8015338:	3b01      	subs	r3, #1
 801533a:	b2db      	uxtb	r3, r3
 801533c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8015340:	b90b      	cbnz	r3, 8015346 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8015342:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8015346:	bd30      	pop	{r4, r5, pc}
 8015348:	3201      	adds	r2, #1
 801534a:	e7ea      	b.n	8015322 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801534c:	2300      	movs	r3, #0
 801534e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015352:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8015356:	30a4      	adds	r0, #164	; 0xa4
 8015358:	f802 3b01 	strb.w	r3, [r2], #1
 801535c:	4282      	cmp	r2, r0
 801535e:	d1fb      	bne.n	8015358 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8015360:	4770      	bx	lr
	...

08015364 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8015364:	b570      	push	{r4, r5, r6, lr}
 8015366:	4c0b      	ldr	r4, [pc, #44]	; (8015394 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8015368:	4605      	mov	r5, r0
 801536a:	6820      	ldr	r0, [r4, #0]
 801536c:	460e      	mov	r6, r1
 801536e:	b110      	cbz	r0, 8015376 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8015370:	6803      	ldr	r3, [r0, #0]
 8015372:	695b      	ldr	r3, [r3, #20]
 8015374:	4798      	blx	r3
 8015376:	1d28      	adds	r0, r5, #4
 8015378:	f7ff ffe8 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801537c:	6026      	str	r6, [r4, #0]
 801537e:	6833      	ldr	r3, [r6, #0]
 8015380:	4630      	mov	r0, r6
 8015382:	68db      	ldr	r3, [r3, #12]
 8015384:	4798      	blx	r3
 8015386:	682b      	ldr	r3, [r5, #0]
 8015388:	4628      	mov	r0, r5
 801538a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801538c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015390:	4718      	bx	r3
 8015392:	bf00      	nop
 8015394:	20012eb8 	.word	0x20012eb8

08015398 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8015398:	2300      	movs	r3, #0
 801539a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 801539e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 80153a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80153a4:	461a      	mov	r2, r3
 80153a6:	461c      	mov	r4, r3
 80153a8:	461d      	mov	r5, r3
 80153aa:	459c      	cmp	ip, r3
 80153ac:	dd1a      	ble.n	80153e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80153ae:	18c6      	adds	r6, r0, r3
 80153b0:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 80153b4:	b16e      	cbz	r6, 80153d2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80153b6:	429a      	cmp	r2, r3
 80153b8:	d008      	beq.n	80153cc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80153ba:	fa1f fe82 	uxth.w	lr, r2
 80153be:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80153c2:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80153c6:	1887      	adds	r7, r0, r2
 80153c8:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 80153cc:	3201      	adds	r2, #1
 80153ce:	3301      	adds	r3, #1
 80153d0:	e7eb      	b.n	80153aa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80153d2:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 80153d6:	4299      	cmp	r1, r3
 80153d8:	bfa8      	it	ge
 80153da:	3501      	addge	r5, #1
 80153dc:	429e      	cmp	r6, r3
 80153de:	bfc8      	it	gt
 80153e0:	3401      	addgt	r4, #1
 80153e2:	e7f4      	b.n	80153ce <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80153e4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 80153e8:	1b49      	subs	r1, r1, r5
 80153ea:	1b1b      	subs	r3, r3, r4
 80153ec:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 80153f0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80153f4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80153f8:	4293      	cmp	r3, r2
 80153fa:	dd03      	ble.n	8015404 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 80153fc:	3b01      	subs	r3, #1
 80153fe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8015402:	e7f7      	b.n	80153f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8015404:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015408 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015408:	b570      	push	{r4, r5, r6, lr}
 801540a:	4d16      	ldr	r5, [pc, #88]	; (8015464 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801540c:	4604      	mov	r4, r0
 801540e:	6828      	ldr	r0, [r5, #0]
 8015410:	b140      	cbz	r0, 8015424 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015412:	7a03      	ldrb	r3, [r0, #8]
 8015414:	b933      	cbnz	r3, 8015424 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8015416:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801541a:	6803      	ldr	r3, [r0, #0]
 801541c:	689b      	ldr	r3, [r3, #8]
 801541e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015422:	4718      	bx	r3
 8015424:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015428:	4e0f      	ldr	r6, [pc, #60]	; (8015468 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801542a:	b973      	cbnz	r3, 801544a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801542c:	b168      	cbz	r0, 801544a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801542e:	7a03      	ldrb	r3, [r0, #8]
 8015430:	b15b      	cbz	r3, 801544a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015432:	6830      	ldr	r0, [r6, #0]
 8015434:	b110      	cbz	r0, 801543c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8015436:	6803      	ldr	r3, [r0, #0]
 8015438:	691b      	ldr	r3, [r3, #16]
 801543a:	4798      	blx	r3
 801543c:	6828      	ldr	r0, [r5, #0]
 801543e:	6803      	ldr	r3, [r0, #0]
 8015440:	68db      	ldr	r3, [r3, #12]
 8015442:	4798      	blx	r3
 8015444:	2301      	movs	r3, #1
 8015446:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801544a:	3404      	adds	r4, #4
 801544c:	4620      	mov	r0, r4
 801544e:	f7ff ff45 	bl	80152dc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8015452:	4620      	mov	r0, r4
 8015454:	f7ff ffa0 	bl	8015398 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015458:	6830      	ldr	r0, [r6, #0]
 801545a:	b110      	cbz	r0, 8015462 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 801545c:	6803      	ldr	r3, [r0, #0]
 801545e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015460:	e7dd      	b.n	801541e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8015462:	bd70      	pop	{r4, r5, r6, pc}
 8015464:	20012ebc 	.word	0x20012ebc
 8015468:	20012eb8 	.word	0x20012eb8

0801546c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 801546c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801546e:	2300      	movs	r3, #0
 8015470:	4604      	mov	r4, r0
 8015472:	460d      	mov	r5, r1
 8015474:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8015478:	4618      	mov	r0, r3
 801547a:	b29a      	uxth	r2, r3
 801547c:	4291      	cmp	r1, r2
 801547e:	d911      	bls.n	80154a4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8015480:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8015484:	18e6      	adds	r6, r4, r3
 8015486:	42af      	cmp	r7, r5
 8015488:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 801548c:	d105      	bne.n	801549a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801548e:	2aff      	cmp	r2, #255	; 0xff
 8015490:	d002      	beq.n	8015498 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8015492:	3201      	adds	r2, #1
 8015494:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8015498:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801549a:	2a00      	cmp	r2, #0
 801549c:	bf08      	it	eq
 801549e:	2001      	moveq	r0, #1
 80154a0:	3301      	adds	r3, #1
 80154a2:	e7ea      	b.n	801547a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 80154a4:	b120      	cbz	r0, 80154b0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80154a6:	2920      	cmp	r1, #32
 80154a8:	d102      	bne.n	80154b0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80154aa:	4620      	mov	r0, r4
 80154ac:	f7ff ff74 	bl	8015398 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80154b0:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 80154b4:	2b1f      	cmp	r3, #31
 80154b6:	d8ef      	bhi.n	8015498 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80154b8:	18e2      	adds	r2, r4, r3
 80154ba:	2101      	movs	r1, #1
 80154bc:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 80154c0:	185a      	adds	r2, r3, r1
 80154c2:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 80154c6:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80154ca:	e7e5      	b.n	8015498 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080154cc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80154cc:	4603      	mov	r3, r0
 80154ce:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80154d2:	2200      	movs	r2, #0
 80154d4:	801a      	strh	r2, [r3, #0]
 80154d6:	805a      	strh	r2, [r3, #2]
 80154d8:	809a      	strh	r2, [r3, #4]
 80154da:	80da      	strh	r2, [r3, #6]
 80154dc:	3308      	adds	r3, #8
 80154de:	428b      	cmp	r3, r1
 80154e0:	d1f8      	bne.n	80154d4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80154e2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80154e6:	4770      	bx	lr

080154e8 <_ZN8touchgfx11ApplicationC1Ev>:
 80154e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80154ea:	4606      	mov	r6, r0
 80154ec:	4b1c      	ldr	r3, [pc, #112]	; (8015560 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80154ee:	f846 3b04 	str.w	r3, [r6], #4
 80154f2:	4604      	mov	r4, r0
 80154f4:	2500      	movs	r5, #0
 80154f6:	22a8      	movs	r2, #168	; 0xa8
 80154f8:	2100      	movs	r1, #0
 80154fa:	4630      	mov	r0, r6
 80154fc:	f014 fd5b 	bl	8029fb6 <memset>
 8015500:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8015504:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015508:	f7ff ffe0 	bl	80154cc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801550c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015510:	f7ff ffdc 	bl	80154cc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015514:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015518:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801551c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015520:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8015524:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015528:	490e      	ldr	r1, [pc, #56]	; (8015564 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801552a:	480f      	ldr	r0, [pc, #60]	; (8015568 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801552c:	4f0f      	ldr	r7, [pc, #60]	; (801556c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801552e:	f010 fbf5 	bl	8025d1c <CRC_Lock>
 8015532:	4b0f      	ldr	r3, [pc, #60]	; (8015570 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8015534:	b158      	cbz	r0, 801554e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8015536:	801d      	strh	r5, [r3, #0]
 8015538:	4a0e      	ldr	r2, [pc, #56]	; (8015574 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 801553a:	2300      	movs	r3, #0
 801553c:	6013      	str	r3, [r2, #0]
 801553e:	4a0e      	ldr	r2, [pc, #56]	; (8015578 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015540:	603b      	str	r3, [r7, #0]
 8015542:	4630      	mov	r0, r6
 8015544:	6013      	str	r3, [r2, #0]
 8015546:	f7ff ff01 	bl	801534c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 801554a:	4620      	mov	r0, r4
 801554c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801554e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8015552:	2002      	movs	r0, #2
 8015554:	801a      	strh	r2, [r3, #0]
 8015556:	6038      	str	r0, [r7, #0]
 8015558:	f001 fb4a 	bl	8016bf0 <_ZN8touchgfx6Screen4drawEv>
 801555c:	e7ec      	b.n	8015538 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801555e:	bf00      	nop
 8015560:	0802e350 	.word	0x0802e350
 8015564:	b5e8b5cd 	.word	0xb5e8b5cd
 8015568:	f407a5c2 	.word	0xf407a5c2
 801556c:	20012eb8 	.word	0x20012eb8
 8015570:	20000088 	.word	0x20000088
 8015574:	20012ec8 	.word	0x20012ec8
 8015578:	20012ebc 	.word	0x20012ebc

0801557c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801557c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8015580:	3b01      	subs	r3, #1
 8015582:	b29b      	uxth	r3, r3
 8015584:	428b      	cmp	r3, r1
 8015586:	b510      	push	{r4, lr}
 8015588:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801558c:	d908      	bls.n	80155a0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801558e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015592:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8015596:	681a      	ldr	r2, [r3, #0]
 8015598:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801559c:	685a      	ldr	r2, [r3, #4]
 801559e:	6062      	str	r2, [r4, #4]
 80155a0:	bd10      	pop	{r4, pc}
	...

080155a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80155a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155a8:	4b8f      	ldr	r3, [pc, #572]	; (80157e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80155aa:	b08f      	sub	sp, #60	; 0x3c
 80155ac:	ac0a      	add	r4, sp, #40	; 0x28
 80155ae:	e884 0006 	stmia.w	r4, {r1, r2}
 80155b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80155b6:	4b8d      	ldr	r3, [pc, #564]	; (80157ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80155b8:	4683      	mov	fp, r0
 80155ba:	f9b3 1000 	ldrsh.w	r1, [r3]
 80155be:	4620      	mov	r0, r4
 80155c0:	f7ff fda1 	bl	8015106 <_ZN8touchgfx4Rect10restrictToEss>
 80155c4:	4620      	mov	r0, r4
 80155c6:	f7fa fd8c 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80155ca:	2800      	cmp	r0, #0
 80155cc:	d16a      	bne.n	80156a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80155ce:	9403      	str	r4, [sp, #12]
 80155d0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80155d4:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80155d8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80155dc:	35a4      	adds	r5, #164	; 0xa4
 80155de:	9301      	str	r3, [sp, #4]
 80155e0:	b15c      	cbz	r4, 80155fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80155e2:	4629      	mov	r1, r5
 80155e4:	9803      	ldr	r0, [sp, #12]
 80155e6:	f7ff fddf 	bl	80151a8 <_ZNK8touchgfx4Rect8includesERKS0_>
 80155ea:	3c01      	subs	r4, #1
 80155ec:	b118      	cbz	r0, 80155f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80155ee:	b2a1      	uxth	r1, r4
 80155f0:	9801      	ldr	r0, [sp, #4]
 80155f2:	f7ff ffc3 	bl	801557c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80155f6:	3d08      	subs	r5, #8
 80155f8:	e7f2      	b.n	80155e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80155fa:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 80155fe:	f8cd a010 	str.w	sl, [sp, #16]
 8015602:	f10a 33ff 	add.w	r3, sl, #4294967295
 8015606:	9302      	str	r3, [sp, #8]
 8015608:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801560c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015610:	9306      	str	r3, [sp, #24]
 8015612:	445c      	add	r4, fp
 8015614:	2500      	movs	r5, #0
 8015616:	4626      	mov	r6, r4
 8015618:	f8cd a014 	str.w	sl, [sp, #20]
 801561c:	462f      	mov	r7, r5
 801561e:	9b05      	ldr	r3, [sp, #20]
 8015620:	2b00      	cmp	r3, #0
 8015622:	d073      	beq.n	801570c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8015624:	9903      	ldr	r1, [sp, #12]
 8015626:	4630      	mov	r0, r6
 8015628:	f7ff fd4b 	bl	80150c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801562c:	b350      	cbz	r0, 8015684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801562e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8015632:	f9b6 c000 	ldrsh.w	ip, [r6]
 8015636:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 801563a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801563e:	45e6      	cmp	lr, ip
 8015640:	db33      	blt.n	80156aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015642:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015646:	88b3      	ldrh	r3, [r6, #4]
 8015648:	4472      	add	r2, lr
 801564a:	4463      	add	r3, ip
 801564c:	b212      	sxth	r2, r2
 801564e:	b21b      	sxth	r3, r3
 8015650:	429a      	cmp	r2, r3
 8015652:	dc2a      	bgt.n	80156aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015654:	88f3      	ldrh	r3, [r6, #6]
 8015656:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801565a:	fa1f f289 	uxth.w	r2, r9
 801565e:	4413      	add	r3, r2
 8015660:	b29b      	uxth	r3, r3
 8015662:	45c8      	cmp	r8, r9
 8015664:	fa1f fc88 	uxth.w	ip, r8
 8015668:	fa0f fe83 	sxth.w	lr, r3
 801566c:	db0f      	blt.n	801568e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801566e:	eba3 030c 	sub.w	r3, r3, ip
 8015672:	1ac9      	subs	r1, r1, r3
 8015674:	b209      	sxth	r1, r1
 8015676:	2900      	cmp	r1, #0
 8015678:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801567c:	dd12      	ble.n	80156a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801567e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015682:	4605      	mov	r5, r0
 8015684:	9b05      	ldr	r3, [sp, #20]
 8015686:	3b01      	subs	r3, #1
 8015688:	9305      	str	r3, [sp, #20]
 801568a:	3e08      	subs	r6, #8
 801568c:	e7c7      	b.n	801561e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801568e:	4461      	add	r1, ip
 8015690:	b209      	sxth	r1, r1
 8015692:	4571      	cmp	r1, lr
 8015694:	dc38      	bgt.n	8015708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015696:	eba2 020c 	sub.w	r2, r2, ip
 801569a:	b212      	sxth	r2, r2
 801569c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80156a0:	2a00      	cmp	r2, #0
 80156a2:	dcee      	bgt.n	8015682 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80156a4:	b00f      	add	sp, #60	; 0x3c
 80156a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156aa:	45c8      	cmp	r8, r9
 80156ac:	db2c      	blt.n	8015708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80156ae:	88f3      	ldrh	r3, [r6, #6]
 80156b0:	4499      	add	r9, r3
 80156b2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80156b6:	4498      	add	r8, r3
 80156b8:	fa0f f989 	sxth.w	r9, r9
 80156bc:	fa0f f888 	sxth.w	r8, r8
 80156c0:	45c1      	cmp	r9, r8
 80156c2:	db21      	blt.n	8015708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80156c4:	88b3      	ldrh	r3, [r6, #4]
 80156c6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80156ca:	fa1f f28c 	uxth.w	r2, ip
 80156ce:	4413      	add	r3, r2
 80156d0:	b29b      	uxth	r3, r3
 80156d2:	45e6      	cmp	lr, ip
 80156d4:	fa1f f88e 	uxth.w	r8, lr
 80156d8:	fa0f f983 	sxth.w	r9, r3
 80156dc:	db0a      	blt.n	80156f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80156de:	eba3 0308 	sub.w	r3, r3, r8
 80156e2:	1ac9      	subs	r1, r1, r3
 80156e4:	b209      	sxth	r1, r1
 80156e6:	2900      	cmp	r1, #0
 80156e8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80156ec:	ddda      	ble.n	80156a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80156ee:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80156f2:	e7c6      	b.n	8015682 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80156f4:	4441      	add	r1, r8
 80156f6:	b209      	sxth	r1, r1
 80156f8:	4549      	cmp	r1, r9
 80156fa:	dc05      	bgt.n	8015708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80156fc:	eba2 0208 	sub.w	r2, r2, r8
 8015700:	b212      	sxth	r2, r2
 8015702:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8015706:	e7cb      	b.n	80156a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015708:	4607      	mov	r7, r0
 801570a:	e7bb      	b.n	8015684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801570c:	2d00      	cmp	r5, #0
 801570e:	d181      	bne.n	8015614 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015710:	2f00      	cmp	r7, #0
 8015712:	f000 81dd 	beq.w	8015ad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015716:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801571a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801571e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8015722:	b2b3      	uxth	r3, r6
 8015724:	9305      	str	r3, [sp, #20]
 8015726:	9a05      	ldr	r2, [sp, #20]
 8015728:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 801572c:	4413      	add	r3, r2
 801572e:	b2ba      	uxth	r2, r7
 8015730:	4492      	add	sl, r2
 8015732:	b29b      	uxth	r3, r3
 8015734:	fa1f fa8a 	uxth.w	sl, sl
 8015738:	fa0f f883 	sxth.w	r8, r3
 801573c:	fa0f f98a 	sxth.w	r9, sl
 8015740:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015744:	9b04      	ldr	r3, [sp, #16]
 8015746:	2b00      	cmp	r3, #0
 8015748:	d052      	beq.n	80157f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801574a:	9903      	ldr	r1, [sp, #12]
 801574c:	4620      	mov	r0, r4
 801574e:	f7ff fcb8 	bl	80150c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015752:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015756:	b1c0      	cbz	r0, 801578a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015758:	f9b4 e000 	ldrsh.w	lr, [r4]
 801575c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015760:	4576      	cmp	r6, lr
 8015762:	dc22      	bgt.n	80157aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015764:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015768:	44f4      	add	ip, lr
 801576a:	fa0f fc8c 	sxth.w	ip, ip
 801576e:	45e0      	cmp	r8, ip
 8015770:	db1b      	blt.n	80157aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015772:	428f      	cmp	r7, r1
 8015774:	fa1f fc81 	uxth.w	ip, r1
 8015778:	88e1      	ldrh	r1, [r4, #6]
 801577a:	dc0d      	bgt.n	8015798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801577c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8015780:	eba1 010c 	sub.w	r1, r1, ip
 8015784:	f8a4 9002 	strh.w	r9, [r4, #2]
 8015788:	80e1      	strh	r1, [r4, #6]
 801578a:	4628      	mov	r0, r5
 801578c:	9904      	ldr	r1, [sp, #16]
 801578e:	3901      	subs	r1, #1
 8015790:	9104      	str	r1, [sp, #16]
 8015792:	3c08      	subs	r4, #8
 8015794:	4605      	mov	r5, r0
 8015796:	e7d3      	b.n	8015740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8015798:	4461      	add	r1, ip
 801579a:	b209      	sxth	r1, r1
 801579c:	4549      	cmp	r1, r9
 801579e:	dcf5      	bgt.n	801578c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80157a0:	eba2 0c0c 	sub.w	ip, r2, ip
 80157a4:	f8a4 c006 	strh.w	ip, [r4, #6]
 80157a8:	e7ef      	b.n	801578a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80157aa:	428f      	cmp	r7, r1
 80157ac:	dcee      	bgt.n	801578c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80157ae:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80157b2:	4461      	add	r1, ip
 80157b4:	b209      	sxth	r1, r1
 80157b6:	4589      	cmp	r9, r1
 80157b8:	dbe8      	blt.n	801578c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80157ba:	4576      	cmp	r6, lr
 80157bc:	fa1f fc8e 	uxth.w	ip, lr
 80157c0:	88a1      	ldrh	r1, [r4, #4]
 80157c2:	dc07      	bgt.n	80157d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80157c4:	eba3 0c0c 	sub.w	ip, r3, ip
 80157c8:	eba1 010c 	sub.w	r1, r1, ip
 80157cc:	f8a4 8000 	strh.w	r8, [r4]
 80157d0:	80a1      	strh	r1, [r4, #4]
 80157d2:	e7da      	b.n	801578a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80157d4:	4461      	add	r1, ip
 80157d6:	b209      	sxth	r1, r1
 80157d8:	4588      	cmp	r8, r1
 80157da:	dbd7      	blt.n	801578c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80157dc:	9905      	ldr	r1, [sp, #20]
 80157de:	eba1 0c0c 	sub.w	ip, r1, ip
 80157e2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80157e6:	e7d0      	b.n	801578a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80157e8:	20012e6a 	.word	0x20012e6a
 80157ec:	20012e68 	.word	0x20012e68
 80157f0:	2d00      	cmp	r5, #0
 80157f2:	f000 816d 	beq.w	8015ad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80157f6:	9b06      	ldr	r3, [sp, #24]
 80157f8:	445b      	add	r3, fp
 80157fa:	461c      	mov	r4, r3
 80157fc:	9b02      	ldr	r3, [sp, #8]
 80157fe:	3301      	adds	r3, #1
 8015800:	f000 8166 	beq.w	8015ad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8015804:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015808:	4629      	mov	r1, r5
 801580a:	9803      	ldr	r0, [sp, #12]
 801580c:	f7ff fccc 	bl	80151a8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015810:	b120      	cbz	r0, 801581c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8015812:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8015816:	9801      	ldr	r0, [sp, #4]
 8015818:	f7ff feb0 	bl	801557c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801581c:	9903      	ldr	r1, [sp, #12]
 801581e:	4628      	mov	r0, r5
 8015820:	f7ff fc4f 	bl	80150c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015824:	2800      	cmp	r0, #0
 8015826:	f000 809c 	beq.w	8015962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801582a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 801582e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015832:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015836:	9309      	str	r3, [sp, #36]	; 0x24
 8015838:	fa1f f189 	uxth.w	r1, r9
 801583c:	eb01 0c03 	add.w	ip, r1, r3
 8015840:	fa1f fa8c 	uxth.w	sl, ip
 8015844:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015848:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801584c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015850:	b283      	uxth	r3, r0
 8015852:	eb03 050c 	add.w	r5, r3, ip
 8015856:	b2ad      	uxth	r5, r5
 8015858:	9505      	str	r5, [sp, #20]
 801585a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801585e:	9504      	str	r5, [sp, #16]
 8015860:	4548      	cmp	r0, r9
 8015862:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015866:	f340 8099 	ble.w	801599c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801586a:	1a5b      	subs	r3, r3, r1
 801586c:	b29b      	uxth	r3, r3
 801586e:	4596      	cmp	lr, r2
 8015870:	fa0f f08a 	sxth.w	r0, sl
 8015874:	b21e      	sxth	r6, r3
 8015876:	dd2e      	ble.n	80158d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015878:	9f02      	ldr	r7, [sp, #8]
 801587a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801587e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8015882:	9f04      	ldr	r7, [sp, #16]
 8015884:	1a3f      	subs	r7, r7, r0
 8015886:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801588a:	fa1f fe8e 	uxth.w	lr, lr
 801588e:	b292      	uxth	r2, r2
 8015890:	ebae 0102 	sub.w	r1, lr, r2
 8015894:	44a6      	add	lr, r4
 8015896:	4402      	add	r2, r0
 8015898:	b289      	uxth	r1, r1
 801589a:	fa0f fe8e 	sxth.w	lr, lr
 801589e:	b212      	sxth	r2, r2
 80158a0:	b20d      	sxth	r5, r1
 80158a2:	ebae 0202 	sub.w	r2, lr, r2
 80158a6:	436f      	muls	r7, r5
 80158a8:	4372      	muls	r2, r6
 80158aa:	4297      	cmp	r7, r2
 80158ac:	db09      	blt.n	80158c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80158ae:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80158b2:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80158b6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80158ba:	449c      	add	ip, r3
 80158bc:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80158c0:	e686      	b.n	80155d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80158c2:	4421      	add	r1, r4
 80158c4:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80158c8:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80158cc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80158d0:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80158d4:	e67c      	b.n	80155d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80158d6:	9f04      	ldr	r7, [sp, #16]
 80158d8:	42b8      	cmp	r0, r7
 80158da:	da27      	bge.n	801592c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80158dc:	9902      	ldr	r1, [sp, #8]
 80158de:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80158e2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80158e6:	eb05 010e 	add.w	r1, r5, lr
 80158ea:	fa1f f881 	uxth.w	r8, r1
 80158ee:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80158f2:	4411      	add	r1, r2
 80158f4:	eba1 0108 	sub.w	r1, r1, r8
 80158f8:	b289      	uxth	r1, r1
 80158fa:	fa0f f988 	sxth.w	r9, r8
 80158fe:	eba2 020e 	sub.w	r2, r2, lr
 8015902:	fa0f f881 	sxth.w	r8, r1
 8015906:	1a3f      	subs	r7, r7, r0
 8015908:	4372      	muls	r2, r6
 801590a:	fb08 f707 	mul.w	r7, r8, r7
 801590e:	42ba      	cmp	r2, r7
 8015910:	dc06      	bgt.n	8015920 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8015912:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8015916:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 801591a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 801591e:	e7ca      	b.n	80158b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015920:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8015924:	4429      	add	r1, r5
 8015926:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801592a:	e651      	b.n	80155d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801592c:	9805      	ldr	r0, [sp, #20]
 801592e:	ebaa 0000 	sub.w	r0, sl, r0
 8015932:	b280      	uxth	r0, r0
 8015934:	2d06      	cmp	r5, #6
 8015936:	fa0f fe80 	sxth.w	lr, r0
 801593a:	d817      	bhi.n	801596c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 801593c:	9b04      	ldr	r3, [sp, #16]
 801593e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015942:	1c6b      	adds	r3, r5, #1
 8015944:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015948:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801594c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015950:	9b01      	ldr	r3, [sp, #4]
 8015952:	9801      	ldr	r0, [sp, #4]
 8015954:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015958:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801595c:	805a      	strh	r2, [r3, #2]
 801595e:	809e      	strh	r6, [r3, #4]
 8015960:	80d9      	strh	r1, [r3, #6]
 8015962:	9b02      	ldr	r3, [sp, #8]
 8015964:	3b01      	subs	r3, #1
 8015966:	9302      	str	r3, [sp, #8]
 8015968:	3c08      	subs	r4, #8
 801596a:	e747      	b.n	80157fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801596c:	9a02      	ldr	r2, [sp, #8]
 801596e:	45b6      	cmp	lr, r6
 8015970:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015974:	db0d      	blt.n	8015992 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015976:	449c      	add	ip, r3
 8015978:	fa1f fc8c 	uxth.w	ip, ip
 801597c:	445a      	add	r2, fp
 801597e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015982:	448c      	add	ip, r1
 8015984:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015988:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801598c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015990:	e61e      	b.n	80155d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015992:	445a      	add	r2, fp
 8015994:	4484      	add	ip, r0
 8015996:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801599a:	e78f      	b.n	80158bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801599c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80159a0:	fa1f f18e 	uxth.w	r1, lr
 80159a4:	eb01 0806 	add.w	r8, r1, r6
 80159a8:	b293      	uxth	r3, r2
 80159aa:	fa1f f888 	uxth.w	r8, r8
 80159ae:	9306      	str	r3, [sp, #24]
 80159b0:	fa0f f388 	sxth.w	r3, r8
 80159b4:	9307      	str	r3, [sp, #28]
 80159b6:	9f06      	ldr	r7, [sp, #24]
 80159b8:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80159bc:	443b      	add	r3, r7
 80159be:	b29b      	uxth	r3, r3
 80159c0:	4596      	cmp	lr, r2
 80159c2:	9308      	str	r3, [sp, #32]
 80159c4:	da24      	bge.n	8015a10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80159c6:	9905      	ldr	r1, [sp, #20]
 80159c8:	eba3 0308 	sub.w	r3, r3, r8
 80159cc:	ebaa 0401 	sub.w	r4, sl, r1
 80159d0:	b2a4      	uxth	r4, r4
 80159d2:	b29b      	uxth	r3, r3
 80159d4:	b225      	sxth	r5, r4
 80159d6:	b219      	sxth	r1, r3
 80159d8:	eba2 020e 	sub.w	r2, r2, lr
 80159dc:	eba9 0000 	sub.w	r0, r9, r0
 80159e0:	436a      	muls	r2, r5
 80159e2:	4348      	muls	r0, r1
 80159e4:	4282      	cmp	r2, r0
 80159e6:	9a02      	ldr	r2, [sp, #8]
 80159e8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80159ec:	445a      	add	r2, fp
 80159ee:	dc06      	bgt.n	80159fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80159f0:	9b07      	ldr	r3, [sp, #28]
 80159f2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80159f6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80159fa:	44a4      	add	ip, r4
 80159fc:	e75e      	b.n	80158bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80159fe:	9904      	ldr	r1, [sp, #16]
 8015a00:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8015a04:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015a08:	4433      	add	r3, r6
 8015a0a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015a0e:	e5df      	b.n	80155d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015a10:	9f06      	ldr	r7, [sp, #24]
 8015a12:	9b04      	ldr	r3, [sp, #16]
 8015a14:	1bc9      	subs	r1, r1, r7
 8015a16:	fa0f f78a 	sxth.w	r7, sl
 8015a1a:	b289      	uxth	r1, r1
 8015a1c:	429f      	cmp	r7, r3
 8015a1e:	fa0f fe81 	sxth.w	lr, r1
 8015a22:	dd23      	ble.n	8015a6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8015a24:	9a05      	ldr	r2, [sp, #20]
 8015a26:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015a2a:	9d07      	ldr	r5, [sp, #28]
 8015a2c:	ebaa 0202 	sub.w	r2, sl, r2
 8015a30:	b292      	uxth	r2, r2
 8015a32:	eba5 0a03 	sub.w	sl, r5, r3
 8015a36:	b214      	sxth	r4, r2
 8015a38:	eba9 0000 	sub.w	r0, r9, r0
 8015a3c:	9b02      	ldr	r3, [sp, #8]
 8015a3e:	fb0e f000 	mul.w	r0, lr, r0
 8015a42:	fb04 fa0a 	mul.w	sl, r4, sl
 8015a46:	00db      	lsls	r3, r3, #3
 8015a48:	4550      	cmp	r0, sl
 8015a4a:	445b      	add	r3, fp
 8015a4c:	db03      	blt.n	8015a56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8015a4e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015a52:	4494      	add	ip, r2
 8015a54:	e732      	b.n	80158bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015a56:	9a04      	ldr	r2, [sp, #16]
 8015a58:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8015a5c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015a60:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015a64:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015a68:	4431      	add	r1, r6
 8015a6a:	e75c      	b.n	8015926 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8015a6c:	9b08      	ldr	r3, [sp, #32]
 8015a6e:	eba3 0308 	sub.w	r3, r3, r8
 8015a72:	b29b      	uxth	r3, r3
 8015a74:	2d06      	cmp	r5, #6
 8015a76:	b218      	sxth	r0, r3
 8015a78:	d813      	bhi.n	8015aa2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8015a7a:	9b07      	ldr	r3, [sp, #28]
 8015a7c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015a80:	1c6b      	adds	r3, r5, #1
 8015a82:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015a86:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015a8a:	9b01      	ldr	r3, [sp, #4]
 8015a8c:	9901      	ldr	r1, [sp, #4]
 8015a8e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015a92:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8015a96:	805a      	strh	r2, [r3, #2]
 8015a98:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015a9a:	809a      	strh	r2, [r3, #4]
 8015a9c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015aa0:	e75f      	b.n	8015962 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015aa2:	9c02      	ldr	r4, [sp, #8]
 8015aa4:	4570      	cmp	r0, lr
 8015aa6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8015aaa:	db0d      	blt.n	8015ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8015aac:	4431      	add	r1, r6
 8015aae:	9b06      	ldr	r3, [sp, #24]
 8015ab0:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015ab4:	b289      	uxth	r1, r1
 8015ab6:	445c      	add	r4, fp
 8015ab8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015abc:	4419      	add	r1, r3
 8015abe:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8015ac2:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8015ac6:	e583      	b.n	80155d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015ac8:	445c      	add	r4, fp
 8015aca:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8015ace:	e79b      	b.n	8015a08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8015ad0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015ad4:	1e65      	subs	r5, r4, #1
 8015ad6:	b2ad      	uxth	r5, r5
 8015ad8:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8015adc:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015ae0:	42b5      	cmp	r5, r6
 8015ae2:	d044      	beq.n	8015b6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015ae4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015ae8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8015aec:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015af0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8015af4:	4282      	cmp	r2, r0
 8015af6:	d11f      	bne.n	8015b38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015af8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8015afc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015b00:	459c      	cmp	ip, r3
 8015b02:	d119      	bne.n	8015b38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015b04:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015b08:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015b0c:	19d8      	adds	r0, r3, r7
 8015b0e:	b200      	sxth	r0, r0
 8015b10:	4288      	cmp	r0, r1
 8015b12:	d109      	bne.n	8015b28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015b14:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015b18:	4413      	add	r3, r2
 8015b1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8015b1e:	4629      	mov	r1, r5
 8015b20:	9801      	ldr	r0, [sp, #4]
 8015b22:	f7ff fd2b 	bl	801557c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015b26:	e003      	b.n	8015b30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015b28:	4411      	add	r1, r2
 8015b2a:	b209      	sxth	r1, r1
 8015b2c:	42b9      	cmp	r1, r7
 8015b2e:	d0f3      	beq.n	8015b18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015b30:	3d01      	subs	r5, #1
 8015b32:	b2ad      	uxth	r5, r5
 8015b34:	3c08      	subs	r4, #8
 8015b36:	e7d3      	b.n	8015ae0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015b38:	42b9      	cmp	r1, r7
 8015b3a:	d1f9      	bne.n	8015b30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015b3c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015b40:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015b44:	4299      	cmp	r1, r3
 8015b46:	d1f3      	bne.n	8015b30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015b48:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015b4c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015b50:	181f      	adds	r7, r3, r0
 8015b52:	b23f      	sxth	r7, r7
 8015b54:	42ba      	cmp	r2, r7
 8015b56:	d105      	bne.n	8015b64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015b58:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8015b5c:	440b      	add	r3, r1
 8015b5e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015b62:	e7dc      	b.n	8015b1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015b64:	440a      	add	r2, r1
 8015b66:	b212      	sxth	r2, r2
 8015b68:	4290      	cmp	r0, r2
 8015b6a:	d1e1      	bne.n	8015b30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015b6c:	e7f6      	b.n	8015b5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8015b6e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015b72:	2e07      	cmp	r6, #7
 8015b74:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015b78:	d812      	bhi.n	8015ba0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8015b7a:	1c75      	adds	r5, r6, #1
 8015b7c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015b80:	9d01      	ldr	r5, [sp, #4]
 8015b82:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015b86:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8015b8a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8015b8e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8015b92:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8015b96:	442c      	add	r4, r5
 8015b98:	8061      	strh	r1, [r4, #2]
 8015b9a:	80a2      	strh	r2, [r4, #4]
 8015b9c:	80e3      	strh	r3, [r4, #6]
 8015b9e:	e581      	b.n	80156a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015ba0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015ba4:	3e01      	subs	r6, #1
 8015ba6:	445c      	add	r4, fp
 8015ba8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8015bac:	f04f 37ff 	mov.w	r7, #4294967295
 8015bb0:	2500      	movs	r5, #0
 8015bb2:	9305      	str	r3, [sp, #20]
 8015bb4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015bb8:	9302      	str	r3, [sp, #8]
 8015bba:	1e72      	subs	r2, r6, #1
 8015bbc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015bc0:	9304      	str	r3, [sp, #16]
 8015bc2:	4691      	mov	r9, r2
 8015bc4:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015bc8:	f1b9 3fff 	cmp.w	r9, #4294967295
 8015bcc:	bf14      	ite	ne
 8015bce:	9905      	ldrne	r1, [sp, #20]
 8015bd0:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015bd4:	6818      	ldr	r0, [r3, #0]
 8015bd6:	9207      	str	r2, [sp, #28]
 8015bd8:	bf18      	it	ne
 8015bda:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8015bde:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8015be2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015be6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015bea:	9306      	str	r3, [sp, #24]
 8015bec:	fb18 f801 	smulbb	r8, r8, r1
 8015bf0:	6859      	ldr	r1, [r3, #4]
 8015bf2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015bf6:	4671      	mov	r1, lr
 8015bf8:	a80c      	add	r0, sp, #48	; 0x30
 8015bfa:	f7ff fafb 	bl	80151f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015bfe:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8015c02:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8015c06:	9b04      	ldr	r3, [sp, #16]
 8015c08:	9a02      	ldr	r2, [sp, #8]
 8015c0a:	fb10 f001 	smulbb	r0, r0, r1
 8015c0e:	fb02 8803 	mla	r8, r2, r3, r8
 8015c12:	eba0 0108 	sub.w	r1, r0, r8
 8015c16:	f04f 0c08 	mov.w	ip, #8
 8015c1a:	fb90 f0fc 	sdiv	r0, r0, ip
 8015c1e:	4288      	cmp	r0, r1
 8015c20:	dc20      	bgt.n	8015c64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015c22:	4551      	cmp	r1, sl
 8015c24:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015c28:	da03      	bge.n	8015c32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8015c2a:	b1d9      	cbz	r1, 8015c64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015c2c:	468a      	mov	sl, r1
 8015c2e:	464f      	mov	r7, r9
 8015c30:	4635      	mov	r5, r6
 8015c32:	f109 39ff 	add.w	r9, r9, #4294967295
 8015c36:	f119 0f02 	cmn.w	r9, #2
 8015c3a:	d1c5      	bne.n	8015bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8015c3c:	4616      	mov	r6, r2
 8015c3e:	3201      	adds	r2, #1
 8015c40:	f1a4 0408 	sub.w	r4, r4, #8
 8015c44:	d1b6      	bne.n	8015bb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015c46:	9b01      	ldr	r3, [sp, #4]
 8015c48:	b2ac      	uxth	r4, r5
 8015c4a:	00ed      	lsls	r5, r5, #3
 8015c4c:	1958      	adds	r0, r3, r5
 8015c4e:	1c7b      	adds	r3, r7, #1
 8015c50:	d10b      	bne.n	8015c6a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015c52:	4601      	mov	r1, r0
 8015c54:	9803      	ldr	r0, [sp, #12]
 8015c56:	f7ff facd 	bl	80151f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015c5a:	4621      	mov	r1, r4
 8015c5c:	9801      	ldr	r0, [sp, #4]
 8015c5e:	f7ff fc8d 	bl	801557c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015c62:	e4b5      	b.n	80155d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015c64:	464f      	mov	r7, r9
 8015c66:	4635      	mov	r5, r6
 8015c68:	e7ed      	b.n	8015c46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8015c6a:	9b01      	ldr	r3, [sp, #4]
 8015c6c:	00ff      	lsls	r7, r7, #3
 8015c6e:	19d9      	adds	r1, r3, r7
 8015c70:	f7ff fac0 	bl	80151f4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015c74:	9b03      	ldr	r3, [sp, #12]
 8015c76:	cb03      	ldmia	r3!, {r0, r1}
 8015c78:	445f      	add	r7, fp
 8015c7a:	445d      	add	r5, fp
 8015c7c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015c80:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015c84:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015c88:	9b03      	ldr	r3, [sp, #12]
 8015c8a:	6869      	ldr	r1, [r5, #4]
 8015c8c:	c303      	stmia	r3!, {r0, r1}
 8015c8e:	e7e4      	b.n	8015c5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08015c90 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c94:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015c98:	b09b      	sub	sp, #108	; 0x6c
 8015c9a:	4604      	mov	r4, r0
 8015c9c:	4630      	mov	r0, r6
 8015c9e:	f7fa fa20 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ca2:	4605      	mov	r5, r0
 8015ca4:	b948      	cbnz	r0, 8015cba <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8015ca6:	6823      	ldr	r3, [r4, #0]
 8015ca8:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015cac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015cae:	4620      	mov	r0, r4
 8015cb0:	4798      	blx	r3
 8015cb2:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015cb6:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8015cba:	4bc6      	ldr	r3, [pc, #792]	; (8015fd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8015cbc:	681b      	ldr	r3, [r3, #0]
 8015cbe:	2b00      	cmp	r3, #0
 8015cc0:	d03f      	beq.n	8015d42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015cc2:	4dc5      	ldr	r5, [pc, #788]	; (8015fd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8015cc4:	4628      	mov	r0, r5
 8015cc6:	f7fa fa0c 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015cca:	4606      	mov	r6, r0
 8015ccc:	2800      	cmp	r0, #0
 8015cce:	d138      	bne.n	8015d42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015cd0:	4628      	mov	r0, r5
 8015cd2:	f7ff f907 	bl	8014ee4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015cd6:	6823      	ldr	r3, [r4, #0]
 8015cd8:	6829      	ldr	r1, [r5, #0]
 8015cda:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015cdc:	686a      	ldr	r2, [r5, #4]
 8015cde:	4620      	mov	r0, r4
 8015ce0:	4798      	blx	r3
 8015ce2:	802e      	strh	r6, [r5, #0]
 8015ce4:	806e      	strh	r6, [r5, #2]
 8015ce6:	80ae      	strh	r6, [r5, #4]
 8015ce8:	80ee      	strh	r6, [r5, #6]
 8015cea:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8015cee:	4dbb      	ldr	r5, [pc, #748]	; (8015fdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015cf0:	4640      	mov	r0, r8
 8015cf2:	f7ff fbeb 	bl	80154cc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015cf6:	882e      	ldrh	r6, [r5, #0]
 8015cf8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015cfc:	4633      	mov	r3, r6
 8015cfe:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015d02:	42bb      	cmp	r3, r7
 8015d04:	d224      	bcs.n	8015d50 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015d06:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8015d0a:	2907      	cmp	r1, #7
 8015d0c:	d816      	bhi.n	8015d3c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8015d0e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8015d12:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015d16:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8015d1a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8015d1e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8015d22:	1c4a      	adds	r2, r1, #1
 8015d24:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015d28:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8015d2c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015d30:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015d34:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015d38:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015d3c:	3301      	adds	r3, #1
 8015d3e:	b29b      	uxth	r3, r3
 8015d40:	e7df      	b.n	8015d02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015d42:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015d46:	2b00      	cmp	r3, #0
 8015d48:	d1cf      	bne.n	8015cea <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8015d4a:	b01b      	add	sp, #108	; 0x6c
 8015d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d50:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015d54:	42b3      	cmp	r3, r6
 8015d56:	d90c      	bls.n	8015d72 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015d58:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015d5c:	6822      	ldr	r2, [r4, #0]
 8015d5e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015d62:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015d64:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015d68:	4620      	mov	r0, r4
 8015d6a:	3601      	adds	r6, #1
 8015d6c:	47b8      	blx	r7
 8015d6e:	b2b6      	uxth	r6, r6
 8015d70:	e7ee      	b.n	8015d50 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015d72:	4a9b      	ldr	r2, [pc, #620]	; (8015fe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015d74:	6813      	ldr	r3, [r2, #0]
 8015d76:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8015d7a:	2b01      	cmp	r3, #1
 8015d7c:	4691      	mov	r9, r2
 8015d7e:	f040 80e2 	bne.w	8015f46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015d82:	8829      	ldrh	r1, [r5, #0]
 8015d84:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015d88:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8015d8c:	33ae      	adds	r3, #174	; 0xae
 8015d8e:	2600      	movs	r6, #0
 8015d90:	428f      	cmp	r7, r1
 8015d92:	f103 0308 	add.w	r3, r3, #8
 8015d96:	dd0a      	ble.n	8015dae <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015d98:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8015d9c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015da0:	4402      	add	r2, r0
 8015da2:	b212      	sxth	r2, r2
 8015da4:	4296      	cmp	r6, r2
 8015da6:	bfb8      	it	lt
 8015da8:	4616      	movlt	r6, r2
 8015daa:	3101      	adds	r1, #1
 8015dac:	e7f0      	b.n	8015d90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8015dae:	4b8d      	ldr	r3, [pc, #564]	; (8015fe4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015db0:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015fe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8015db4:	881b      	ldrh	r3, [r3, #0]
 8015db6:	2b0f      	cmp	r3, #15
 8015db8:	bf88      	it	hi
 8015dba:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8015dbe:	f04f 0300 	mov.w	r3, #0
 8015dc2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015dc6:	bf98      	it	ls
 8015dc8:	f04f 0b01 	movls.w	fp, #1
 8015dcc:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015dd0:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8015dd4:	4b82      	ldr	r3, [pc, #520]	; (8015fe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015dd6:	4438      	add	r0, r7
 8015dd8:	b207      	sxth	r7, r0
 8015dda:	6818      	ldr	r0, [r3, #0]
 8015ddc:	42b7      	cmp	r7, r6
 8015dde:	6803      	ldr	r3, [r0, #0]
 8015de0:	f280 8083 	bge.w	8015eea <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015de4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015de8:	4798      	blx	r3
 8015dea:	eb07 030b 	add.w	r3, r7, fp
 8015dee:	4298      	cmp	r0, r3
 8015df0:	da07      	bge.n	8015e02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015df2:	42b0      	cmp	r0, r6
 8015df4:	da05      	bge.n	8015e02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015df6:	4287      	cmp	r7, r0
 8015df8:	dd6c      	ble.n	8015ed4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015dfa:	2f00      	cmp	r7, #0
 8015dfc:	dd6a      	ble.n	8015ed4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015dfe:	4630      	mov	r0, r6
 8015e00:	e004      	b.n	8015e0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015e02:	4287      	cmp	r7, r0
 8015e04:	dcfb      	bgt.n	8015dfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015e06:	42b0      	cmp	r0, r6
 8015e08:	bfa8      	it	ge
 8015e0a:	4630      	movge	r0, r6
 8015e0c:	4b76      	ldr	r3, [pc, #472]	; (8015fe8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015e0e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015e12:	1bc0      	subs	r0, r0, r7
 8015e14:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015e18:	882f      	ldrh	r7, [r5, #0]
 8015e1a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015e1e:	2200      	movs	r2, #0
 8015e20:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015e24:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015e28:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015e2c:	42bb      	cmp	r3, r7
 8015e2e:	d9cd      	bls.n	8015dcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015e30:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015e34:	ab07      	add	r3, sp, #28
 8015e36:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015e3a:	6851      	ldr	r1, [r2, #4]
 8015e3c:	c303      	stmia	r3!, {r0, r1}
 8015e3e:	a905      	add	r1, sp, #20
 8015e40:	a807      	add	r0, sp, #28
 8015e42:	f7ff f93e 	bl	80150c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015e46:	2800      	cmp	r0, #0
 8015e48:	d04c      	beq.n	8015ee4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8015e4a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015e4e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015e52:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015e56:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015e5a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015e5e:	9302      	str	r3, [sp, #8]
 8015e60:	4686      	mov	lr, r0
 8015e62:	4290      	cmp	r0, r2
 8015e64:	4450      	add	r0, sl
 8015e66:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8015e6a:	bfb8      	it	lt
 8015e6c:	4696      	movlt	lr, r2
 8015e6e:	4452      	add	r2, sl
 8015e70:	4299      	cmp	r1, r3
 8015e72:	b280      	uxth	r0, r0
 8015e74:	b292      	uxth	r2, r2
 8015e76:	468c      	mov	ip, r1
 8015e78:	fa0f fa82 	sxth.w	sl, r2
 8015e7c:	bfb8      	it	lt
 8015e7e:	469c      	movlt	ip, r3
 8015e80:	b203      	sxth	r3, r0
 8015e82:	4553      	cmp	r3, sl
 8015e84:	bfb8      	it	lt
 8015e86:	4602      	movlt	r2, r0
 8015e88:	eba2 020e 	sub.w	r2, r2, lr
 8015e8c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015e90:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015e94:	9b02      	ldr	r3, [sp, #8]
 8015e96:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015e9a:	4411      	add	r1, r2
 8015e9c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015ea0:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015ea4:	4413      	add	r3, r2
 8015ea6:	b289      	uxth	r1, r1
 8015ea8:	b29b      	uxth	r3, r3
 8015eaa:	b208      	sxth	r0, r1
 8015eac:	b21a      	sxth	r2, r3
 8015eae:	4290      	cmp	r0, r2
 8015eb0:	bfb8      	it	lt
 8015eb2:	460b      	movlt	r3, r1
 8015eb4:	eba3 030c 	sub.w	r3, r3, ip
 8015eb8:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015ebc:	a807      	add	r0, sp, #28
 8015ebe:	f7fa f910 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ec2:	b920      	cbnz	r0, 8015ece <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015ec4:	6823      	ldr	r3, [r4, #0]
 8015ec6:	a907      	add	r1, sp, #28
 8015ec8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015eca:	4620      	mov	r0, r4
 8015ecc:	4798      	blx	r3
 8015ece:	3701      	adds	r7, #1
 8015ed0:	b2bf      	uxth	r7, r7
 8015ed2:	e7a9      	b.n	8015e28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015ed4:	f8d9 0000 	ldr.w	r0, [r9]
 8015ed8:	6803      	ldr	r3, [r0, #0]
 8015eda:	2101      	movs	r1, #1
 8015edc:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015ee0:	4798      	blx	r3
 8015ee2:	e773      	b.n	8015dcc <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015ee4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015ee8:	e7e8      	b.n	8015ebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8015eea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015eec:	4798      	blx	r3
 8015eee:	4b3f      	ldr	r3, [pc, #252]	; (8015fec <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015ef0:	781b      	ldrb	r3, [r3, #0]
 8015ef2:	2b00      	cmp	r3, #0
 8015ef4:	f43f af29 	beq.w	8015d4a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015ef8:	2300      	movs	r3, #0
 8015efa:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8015efe:	882b      	ldrh	r3, [r5, #0]
 8015f00:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015f04:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015f08:	42ab      	cmp	r3, r5
 8015f0a:	f4bf af1e 	bcs.w	8015d4a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015f0e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015f12:	2907      	cmp	r1, #7
 8015f14:	d814      	bhi.n	8015f40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015f16:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015f1a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8015f1e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015f22:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015f26:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8015f2a:	1c4a      	adds	r2, r1, #1
 8015f2c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015f30:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015f34:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015f38:	f8a2 c002 	strh.w	ip, [r2, #2]
 8015f3c:	8097      	strh	r7, [r2, #4]
 8015f3e:	80d6      	strh	r6, [r2, #6]
 8015f40:	3301      	adds	r3, #1
 8015f42:	b29b      	uxth	r3, r3
 8015f44:	e7e0      	b.n	8015f08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015f46:	2b02      	cmp	r3, #2
 8015f48:	f040 8133 	bne.w	80161b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8015f4c:	4b28      	ldr	r3, [pc, #160]	; (8015ff0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8015f4e:	781b      	ldrb	r3, [r3, #0]
 8015f50:	2b01      	cmp	r3, #1
 8015f52:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015f56:	f000 8098 	beq.w	801608a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015f5a:	882a      	ldrh	r2, [r5, #0]
 8015f5c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015f60:	3201      	adds	r2, #1
 8015f62:	b292      	uxth	r2, r2
 8015f64:	2900      	cmp	r1, #0
 8015f66:	d0c2      	beq.n	8015eee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015f68:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8015f6c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015f70:	441e      	add	r6, r3
 8015f72:	b236      	sxth	r6, r6
 8015f74:	4694      	mov	ip, r2
 8015f76:	f04f 0900 	mov.w	r9, #0
 8015f7a:	fa1f f38c 	uxth.w	r3, ip
 8015f7e:	4299      	cmp	r1, r3
 8015f80:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8015f84:	f240 80bf 	bls.w	8016106 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015f88:	4427      	add	r7, r4
 8015f8a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8015f8e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8015f92:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8015f96:	4283      	cmp	r3, r0
 8015f98:	f340 80a1 	ble.w	80160de <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8015f9c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8015fa0:	4406      	add	r6, r0
 8015fa2:	b236      	sxth	r6, r6
 8015fa4:	429e      	cmp	r6, r3
 8015fa6:	bfa8      	it	ge
 8015fa8:	461e      	movge	r6, r3
 8015faa:	46e1      	mov	r9, ip
 8015fac:	f10c 0c01 	add.w	ip, ip, #1
 8015fb0:	e7e3      	b.n	8015f7a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8015fb2:	d10a      	bne.n	8015fca <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8015fb4:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8015fb8:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8015fbc:	4562      	cmp	r2, ip
 8015fbe:	bfb8      	it	lt
 8015fc0:	4662      	movlt	r2, ip
 8015fc2:	4288      	cmp	r0, r1
 8015fc4:	bfb8      	it	lt
 8015fc6:	461f      	movlt	r7, r3
 8015fc8:	e087      	b.n	80160da <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015fca:	428a      	cmp	r2, r1
 8015fcc:	bfb8      	it	lt
 8015fce:	460a      	movlt	r2, r1
 8015fd0:	e083      	b.n	80160da <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015fd2:	bf00      	nop
 8015fd4:	20012eb4 	.word	0x20012eb4
 8015fd8:	20012ec0 	.word	0x20012ec0
 8015fdc:	20000088 	.word	0x20000088
 8015fe0:	20012e74 	.word	0x20012e74
 8015fe4:	20012e6a 	.word	0x20012e6a
 8015fe8:	20012e68 	.word	0x20012e68
 8015fec:	20012e72 	.word	0x20012e72
 8015ff0:	20012e6c 	.word	0x20012e6c
 8015ff4:	19a1      	adds	r1, r4, r6
 8015ff6:	ab07      	add	r3, sp, #28
 8015ff8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8015ffc:	6849      	ldr	r1, [r1, #4]
 8015ffe:	c303      	stmia	r3!, {r0, r1}
 8016000:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016004:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016008:	2b13      	cmp	r3, #19
 801600a:	bfd8      	it	le
 801600c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8016010:	f8ad 201c 	strh.w	r2, [sp, #28]
 8016014:	440b      	add	r3, r1
 8016016:	1a9b      	subs	r3, r3, r2
 8016018:	a807      	add	r0, sp, #28
 801601a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801601e:	f7fe ff7b 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016022:	a807      	add	r0, sp, #28
 8016024:	f7fa f85d 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016028:	bb78      	cbnz	r0, 801608a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801602a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801602e:	f8d9 0000 	ldr.w	r0, [r9]
 8016032:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8016036:	f8d0 e000 	ldr.w	lr, [r0]
 801603a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801603e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8016042:	f1bc 0f14 	cmp.w	ip, #20
 8016046:	bfa8      	it	ge
 8016048:	f04f 0c14 	movge.w	ip, #20
 801604c:	fa1f fc8c 	uxth.w	ip, ip
 8016050:	f8cd c000 	str.w	ip, [sp]
 8016054:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8016058:	47d8      	blx	fp
 801605a:	4683      	mov	fp, r0
 801605c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016060:	a807      	add	r0, sp, #28
 8016062:	f7fe ff3f 	bl	8014ee4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016066:	6823      	ldr	r3, [r4, #0]
 8016068:	4426      	add	r6, r4
 801606a:	4620      	mov	r0, r4
 801606c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801606e:	a907      	add	r1, sp, #28
 8016070:	4798      	blx	r3
 8016072:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8016076:	eba0 000b 	sub.w	r0, r0, fp
 801607a:	b200      	sxth	r0, r0
 801607c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8016080:	b918      	cbnz	r0, 801608a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8016082:	b2b9      	uxth	r1, r7
 8016084:	4650      	mov	r0, sl
 8016086:	f7ff fa79 	bl	801557c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801608a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 801608e:	f1bb 0f00 	cmp.w	fp, #0
 8016092:	f43f af2c 	beq.w	8015eee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8016096:	882b      	ldrh	r3, [r5, #0]
 8016098:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 801609c:	3301      	adds	r3, #1
 801609e:	b29b      	uxth	r3, r3
 80160a0:	2700      	movs	r7, #0
 80160a2:	b299      	uxth	r1, r3
 80160a4:	458b      	cmp	fp, r1
 80160a6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80160aa:	d9a3      	bls.n	8015ff4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80160ac:	4426      	add	r6, r4
 80160ae:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80160b2:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 80160b6:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80160ba:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 80160be:	4408      	add	r0, r1
 80160c0:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 80160c4:	4461      	add	r1, ip
 80160c6:	b200      	sxth	r0, r0
 80160c8:	b209      	sxth	r1, r1
 80160ca:	4288      	cmp	r0, r1
 80160cc:	f6bf af71 	bge.w	8015fb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 80160d0:	4584      	cmp	ip, r0
 80160d2:	4662      	mov	r2, ip
 80160d4:	461f      	mov	r7, r3
 80160d6:	bfb8      	it	lt
 80160d8:	4602      	movlt	r2, r0
 80160da:	3301      	adds	r3, #1
 80160dc:	e7e1      	b.n	80160a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 80160de:	d10e      	bne.n	80160fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 80160e0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80160e4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 80160e8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80160ec:	4473      	add	r3, lr
 80160ee:	b21b      	sxth	r3, r3
 80160f0:	429e      	cmp	r6, r3
 80160f2:	bfa8      	it	ge
 80160f4:	461e      	movge	r6, r3
 80160f6:	4287      	cmp	r7, r0
 80160f8:	bfb8      	it	lt
 80160fa:	46e1      	movlt	r9, ip
 80160fc:	e756      	b.n	8015fac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80160fe:	4286      	cmp	r6, r0
 8016100:	bfa8      	it	ge
 8016102:	4606      	movge	r6, r0
 8016104:	e752      	b.n	8015fac <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8016106:	eb0a 0007 	add.w	r0, sl, r7
 801610a:	4427      	add	r7, r4
 801610c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8016110:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8016114:	f1bb 0f13 	cmp.w	fp, #19
 8016118:	bfde      	ittt	le
 801611a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801611e:	445e      	addle	r6, fp
 8016120:	b236      	sxthle	r6, r6
 8016122:	f7f9 ffde 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016126:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801612a:	2800      	cmp	r0, #0
 801612c:	f47f af1a 	bne.w	8015f64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8016130:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8016134:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8016138:	482a      	ldr	r0, [pc, #168]	; (80161e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801613a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801613e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8016142:	6800      	ldr	r0, [r0, #0]
 8016144:	f8ad 101c 	strh.w	r1, [sp, #28]
 8016148:	1ab6      	subs	r6, r6, r2
 801614a:	2e14      	cmp	r6, #20
 801614c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8016150:	f8ad 3020 	strh.w	r3, [sp, #32]
 8016154:	bfa8      	it	ge
 8016156:	2614      	movge	r6, #20
 8016158:	f8d0 c000 	ldr.w	ip, [r0]
 801615c:	b2b6      	uxth	r6, r6
 801615e:	fa1f fb8b 	uxth.w	fp, fp
 8016162:	455e      	cmp	r6, fp
 8016164:	bf94      	ite	ls
 8016166:	9600      	strls	r6, [sp, #0]
 8016168:	f8cd b000 	strhi.w	fp, [sp]
 801616c:	b292      	uxth	r2, r2
 801616e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8016172:	b29b      	uxth	r3, r3
 8016174:	b289      	uxth	r1, r1
 8016176:	47b0      	blx	r6
 8016178:	6823      	ldr	r3, [r4, #0]
 801617a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801617e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016180:	a907      	add	r1, sp, #28
 8016182:	4620      	mov	r0, r4
 8016184:	4798      	blx	r3
 8016186:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801618a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 801618e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8016192:	1a5b      	subs	r3, r3, r1
 8016194:	440a      	add	r2, r1
 8016196:	b21b      	sxth	r3, r3
 8016198:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801619c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80161a0:	2b00      	cmp	r3, #0
 80161a2:	f47f aeda 	bne.w	8015f5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80161a6:	fa1f f189 	uxth.w	r1, r9
 80161aa:	4650      	mov	r0, sl
 80161ac:	f7ff f9e6 	bl	801557c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80161b0:	e6d3      	b.n	8015f5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80161b2:	882e      	ldrh	r6, [r5, #0]
 80161b4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80161b8:	42b3      	cmp	r3, r6
 80161ba:	f67f ae98 	bls.w	8015eee <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80161be:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80161c2:	ab07      	add	r3, sp, #28
 80161c4:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80161c8:	6851      	ldr	r1, [r2, #4]
 80161ca:	c303      	stmia	r3!, {r0, r1}
 80161cc:	a807      	add	r0, sp, #28
 80161ce:	f7f9 ff88 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80161d2:	b920      	cbnz	r0, 80161de <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80161d4:	6823      	ldr	r3, [r4, #0]
 80161d6:	a907      	add	r1, sp, #28
 80161d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80161da:	4620      	mov	r0, r4
 80161dc:	4798      	blx	r3
 80161de:	3601      	adds	r6, #1
 80161e0:	b2b6      	uxth	r6, r6
 80161e2:	e7e7      	b.n	80161b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80161e4:	20012e74 	.word	0x20012e74

080161e8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80161e8:	4b03      	ldr	r3, [pc, #12]	; (80161f8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80161ea:	2200      	movs	r2, #0
 80161ec:	801a      	strh	r2, [r3, #0]
 80161ee:	805a      	strh	r2, [r3, #2]
 80161f0:	809a      	strh	r2, [r3, #4]
 80161f2:	80da      	strh	r2, [r3, #6]
 80161f4:	4770      	bx	lr
 80161f6:	bf00      	nop
 80161f8:	20012ec0 	.word	0x20012ec0

080161fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80161fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016200:	4606      	mov	r6, r0
 8016202:	b09d      	sub	sp, #116	; 0x74
 8016204:	a803      	add	r0, sp, #12
 8016206:	4614      	mov	r4, r2
 8016208:	468a      	mov	sl, r1
 801620a:	461d      	mov	r5, r3
 801620c:	f000 feca 	bl	8016fa4 <_ZN8touchgfx12TextProviderC1Ev>
 8016210:	6833      	ldr	r3, [r6, #0]
 8016212:	4630      	mov	r0, r6
 8016214:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016216:	4798      	blx	r3
 8016218:	6833      	ldr	r3, [r6, #0]
 801621a:	4607      	mov	r7, r0
 801621c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801621e:	4630      	mov	r0, r6
 8016220:	4798      	blx	r3
 8016222:	462a      	mov	r2, r5
 8016224:	9000      	str	r0, [sp, #0]
 8016226:	4621      	mov	r1, r4
 8016228:	463b      	mov	r3, r7
 801622a:	a803      	add	r0, sp, #12
 801622c:	f000 ff15 	bl	801705a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016230:	2500      	movs	r5, #0
 8016232:	462c      	mov	r4, r5
 8016234:	46a9      	mov	r9, r5
 8016236:	46a8      	mov	r8, r5
 8016238:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801623c:	2300      	movs	r3, #0
 801623e:	9302      	str	r3, [sp, #8]
 8016240:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8016244:	429c      	cmp	r4, r3
 8016246:	d002      	beq.n	801624e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8016248:	455c      	cmp	r4, fp
 801624a:	bf18      	it	ne
 801624c:	4625      	movne	r5, r4
 801624e:	ab02      	add	r3, sp, #8
 8016250:	4632      	mov	r2, r6
 8016252:	4651      	mov	r1, sl
 8016254:	a803      	add	r0, sp, #12
 8016256:	f001 fa03 	bl	8017660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801625a:	4604      	mov	r4, r0
 801625c:	b108      	cbz	r0, 8016262 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801625e:	280a      	cmp	r0, #10
 8016260:	d10a      	bne.n	8016278 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8016262:	45c1      	cmp	r9, r8
 8016264:	bf38      	it	cc
 8016266:	46c1      	movcc	r9, r8
 8016268:	f04f 0800 	mov.w	r8, #0
 801626c:	2c00      	cmp	r4, #0
 801626e:	d1e5      	bne.n	801623c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8016270:	4648      	mov	r0, r9
 8016272:	b01d      	add	sp, #116	; 0x74
 8016274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016278:	9a02      	ldr	r2, [sp, #8]
 801627a:	2a00      	cmp	r2, #0
 801627c:	d0de      	beq.n	801623c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801627e:	7b57      	ldrb	r7, [r2, #13]
 8016280:	6833      	ldr	r3, [r6, #0]
 8016282:	8894      	ldrh	r4, [r2, #4]
 8016284:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016286:	007f      	lsls	r7, r7, #1
 8016288:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801628c:	7a97      	ldrb	r7, [r2, #10]
 801628e:	4629      	mov	r1, r5
 8016290:	4307      	orrs	r7, r0
 8016292:	4630      	mov	r0, r6
 8016294:	4798      	blx	r3
 8016296:	4438      	add	r0, r7
 8016298:	4480      	add	r8, r0
 801629a:	fa1f f888 	uxth.w	r8, r8
 801629e:	e7e5      	b.n	801626c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080162a0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80162a0:	b508      	push	{r3, lr}
 80162a2:	6803      	ldr	r3, [r0, #0]
 80162a4:	68db      	ldr	r3, [r3, #12]
 80162a6:	4798      	blx	r3
 80162a8:	b128      	cbz	r0, 80162b6 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80162aa:	7b43      	ldrb	r3, [r0, #13]
 80162ac:	7a80      	ldrb	r0, [r0, #10]
 80162ae:	005b      	lsls	r3, r3, #1
 80162b0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80162b4:	4318      	orrs	r0, r3
 80162b6:	bd08      	pop	{r3, pc}

080162b8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80162b8:	b40e      	push	{r1, r2, r3}
 80162ba:	b5f0      	push	{r4, r5, r6, r7, lr}
 80162bc:	b09e      	sub	sp, #120	; 0x78
 80162be:	ab23      	add	r3, sp, #140	; 0x8c
 80162c0:	4605      	mov	r5, r0
 80162c2:	f853 4b04 	ldr.w	r4, [r3], #4
 80162c6:	9303      	str	r3, [sp, #12]
 80162c8:	a805      	add	r0, sp, #20
 80162ca:	f000 fe6b 	bl	8016fa4 <_ZN8touchgfx12TextProviderC1Ev>
 80162ce:	682b      	ldr	r3, [r5, #0]
 80162d0:	4628      	mov	r0, r5
 80162d2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80162d4:	4798      	blx	r3
 80162d6:	682b      	ldr	r3, [r5, #0]
 80162d8:	4606      	mov	r6, r0
 80162da:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80162dc:	4628      	mov	r0, r5
 80162de:	4798      	blx	r3
 80162e0:	4633      	mov	r3, r6
 80162e2:	ae1e      	add	r6, sp, #120	; 0x78
 80162e4:	4621      	mov	r1, r4
 80162e6:	9000      	str	r0, [sp, #0]
 80162e8:	9a03      	ldr	r2, [sp, #12]
 80162ea:	2400      	movs	r4, #0
 80162ec:	a805      	add	r0, sp, #20
 80162ee:	f000 feb4 	bl	801705a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80162f2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80162f6:	462a      	mov	r2, r5
 80162f8:	4633      	mov	r3, r6
 80162fa:	4621      	mov	r1, r4
 80162fc:	a805      	add	r0, sp, #20
 80162fe:	f001 f9af 	bl	8017660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016302:	b1f0      	cbz	r0, 8016342 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8016304:	280a      	cmp	r0, #10
 8016306:	d018      	beq.n	801633a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8016308:	9f04      	ldr	r7, [sp, #16]
 801630a:	b1b7      	cbz	r7, 801633a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801630c:	7b78      	ldrb	r0, [r7, #13]
 801630e:	7a3b      	ldrb	r3, [r7, #8]
 8016310:	88ea      	ldrh	r2, [r5, #6]
 8016312:	00c1      	lsls	r1, r0, #3
 8016314:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016318:	4319      	orrs	r1, r3
 801631a:	0643      	lsls	r3, r0, #25
 801631c:	bf44      	itt	mi
 801631e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8016322:	b219      	sxthmi	r1, r3
 8016324:	0100      	lsls	r0, r0, #4
 8016326:	79fb      	ldrb	r3, [r7, #7]
 8016328:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801632c:	4303      	orrs	r3, r0
 801632e:	4413      	add	r3, r2
 8016330:	1a5b      	subs	r3, r3, r1
 8016332:	b21b      	sxth	r3, r3
 8016334:	429c      	cmp	r4, r3
 8016336:	bfb8      	it	lt
 8016338:	461c      	movlt	r4, r3
 801633a:	4633      	mov	r3, r6
 801633c:	462a      	mov	r2, r5
 801633e:	2100      	movs	r1, #0
 8016340:	e7dc      	b.n	80162fc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8016342:	b2a0      	uxth	r0, r4
 8016344:	b01e      	add	sp, #120	; 0x78
 8016346:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801634a:	b003      	add	sp, #12
 801634c:	4770      	bx	lr

0801634e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801634e:	7a43      	ldrb	r3, [r0, #9]
 8016350:	8880      	ldrh	r0, [r0, #4]
 8016352:	4418      	add	r0, r3
 8016354:	b280      	uxth	r0, r0
 8016356:	4770      	bx	lr

08016358 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8016358:	6803      	ldr	r3, [r0, #0]
 801635a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801635c:	4718      	bx	r3

0801635e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801635e:	b40e      	push	{r1, r2, r3}
 8016360:	b570      	push	{r4, r5, r6, lr}
 8016362:	b09d      	sub	sp, #116	; 0x74
 8016364:	ab21      	add	r3, sp, #132	; 0x84
 8016366:	4604      	mov	r4, r0
 8016368:	f853 5b04 	ldr.w	r5, [r3], #4
 801636c:	9302      	str	r3, [sp, #8]
 801636e:	a803      	add	r0, sp, #12
 8016370:	f000 fe18 	bl	8016fa4 <_ZN8touchgfx12TextProviderC1Ev>
 8016374:	6823      	ldr	r3, [r4, #0]
 8016376:	4620      	mov	r0, r4
 8016378:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801637a:	4798      	blx	r3
 801637c:	6823      	ldr	r3, [r4, #0]
 801637e:	4606      	mov	r6, r0
 8016380:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016382:	4620      	mov	r0, r4
 8016384:	4798      	blx	r3
 8016386:	4633      	mov	r3, r6
 8016388:	9000      	str	r0, [sp, #0]
 801638a:	9a02      	ldr	r2, [sp, #8]
 801638c:	4629      	mov	r1, r5
 801638e:	a803      	add	r0, sp, #12
 8016390:	f000 fe63 	bl	801705a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016394:	a803      	add	r0, sp, #12
 8016396:	f001 fa31 	bl	80177fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801639a:	2401      	movs	r4, #1
 801639c:	b2a3      	uxth	r3, r4
 801639e:	b140      	cbz	r0, 80163b2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80163a0:	280a      	cmp	r0, #10
 80163a2:	bf08      	it	eq
 80163a4:	3301      	addeq	r3, #1
 80163a6:	a803      	add	r0, sp, #12
 80163a8:	bf08      	it	eq
 80163aa:	b21c      	sxtheq	r4, r3
 80163ac:	f001 fa26 	bl	80177fc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80163b0:	e7f4      	b.n	801639c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80163b2:	4618      	mov	r0, r3
 80163b4:	b01d      	add	sp, #116	; 0x74
 80163b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80163ba:	b003      	add	sp, #12
 80163bc:	4770      	bx	lr

080163be <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80163be:	b40e      	push	{r1, r2, r3}
 80163c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80163c2:	b09e      	sub	sp, #120	; 0x78
 80163c4:	ab23      	add	r3, sp, #140	; 0x8c
 80163c6:	4604      	mov	r4, r0
 80163c8:	f853 5b04 	ldr.w	r5, [r3], #4
 80163cc:	9303      	str	r3, [sp, #12]
 80163ce:	a805      	add	r0, sp, #20
 80163d0:	f000 fde8 	bl	8016fa4 <_ZN8touchgfx12TextProviderC1Ev>
 80163d4:	6823      	ldr	r3, [r4, #0]
 80163d6:	4620      	mov	r0, r4
 80163d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80163da:	4798      	blx	r3
 80163dc:	6823      	ldr	r3, [r4, #0]
 80163de:	4606      	mov	r6, r0
 80163e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80163e2:	4620      	mov	r0, r4
 80163e4:	4798      	blx	r3
 80163e6:	4633      	mov	r3, r6
 80163e8:	4629      	mov	r1, r5
 80163ea:	9000      	str	r0, [sp, #0]
 80163ec:	9a03      	ldr	r2, [sp, #12]
 80163ee:	a805      	add	r0, sp, #20
 80163f0:	ad1e      	add	r5, sp, #120	; 0x78
 80163f2:	f000 fe32 	bl	801705a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80163f6:	2100      	movs	r1, #0
 80163f8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80163fc:	4622      	mov	r2, r4
 80163fe:	462b      	mov	r3, r5
 8016400:	a805      	add	r0, sp, #20
 8016402:	f001 f92d 	bl	8017660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016406:	f647 76ff 	movw	r6, #32767	; 0x7fff
 801640a:	b1d8      	cbz	r0, 8016444 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801640c:	280a      	cmp	r0, #10
 801640e:	d012      	beq.n	8016436 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016410:	9804      	ldr	r0, [sp, #16]
 8016412:	b180      	cbz	r0, 8016436 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016414:	7b47      	ldrb	r7, [r0, #13]
 8016416:	88e2      	ldrh	r2, [r4, #6]
 8016418:	00fb      	lsls	r3, r7, #3
 801641a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801641e:	7a03      	ldrb	r3, [r0, #8]
 8016420:	430b      	orrs	r3, r1
 8016422:	0679      	lsls	r1, r7, #25
 8016424:	bf44      	itt	mi
 8016426:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801642a:	b21b      	sxthmi	r3, r3
 801642c:	1ad3      	subs	r3, r2, r3
 801642e:	b21b      	sxth	r3, r3
 8016430:	429e      	cmp	r6, r3
 8016432:	bfa8      	it	ge
 8016434:	461e      	movge	r6, r3
 8016436:	462b      	mov	r3, r5
 8016438:	4622      	mov	r2, r4
 801643a:	2100      	movs	r1, #0
 801643c:	a805      	add	r0, sp, #20
 801643e:	f001 f90f 	bl	8017660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8016442:	e7e2      	b.n	801640a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8016444:	4630      	mov	r0, r6
 8016446:	b01e      	add	sp, #120	; 0x78
 8016448:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801644c:	b003      	add	sp, #12
 801644e:	4770      	bx	lr

08016450 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016450:	b513      	push	{r0, r1, r4, lr}
 8016452:	6803      	ldr	r3, [r0, #0]
 8016454:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016458:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801645c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016460:	2400      	movs	r4, #0
 8016462:	9400      	str	r4, [sp, #0]
 8016464:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016468:	691b      	ldr	r3, [r3, #16]
 801646a:	4669      	mov	r1, sp
 801646c:	4798      	blx	r3
 801646e:	b002      	add	sp, #8
 8016470:	bd10      	pop	{r4, pc}

08016472 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8016472:	b538      	push	{r3, r4, r5, lr}
 8016474:	680b      	ldr	r3, [r1, #0]
 8016476:	460c      	mov	r4, r1
 8016478:	68db      	ldr	r3, [r3, #12]
 801647a:	4605      	mov	r5, r0
 801647c:	4798      	blx	r3
 801647e:	6823      	ldr	r3, [r4, #0]
 8016480:	4620      	mov	r0, r4
 8016482:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016484:	4629      	mov	r1, r5
 8016486:	4798      	blx	r3
 8016488:	4628      	mov	r0, r5
 801648a:	bd38      	pop	{r3, r4, r5, pc}

0801648c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801648c:	b410      	push	{r4}
 801648e:	880a      	ldrh	r2, [r1, #0]
 8016490:	8884      	ldrh	r4, [r0, #4]
 8016492:	4422      	add	r2, r4
 8016494:	800a      	strh	r2, [r1, #0]
 8016496:	88c4      	ldrh	r4, [r0, #6]
 8016498:	884a      	ldrh	r2, [r1, #2]
 801649a:	4422      	add	r2, r4
 801649c:	804a      	strh	r2, [r1, #2]
 801649e:	6940      	ldr	r0, [r0, #20]
 80164a0:	b120      	cbz	r0, 80164ac <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80164a2:	6803      	ldr	r3, [r0, #0]
 80164a4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80164a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80164aa:	4718      	bx	r3
 80164ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80164b0:	4770      	bx	lr

080164b2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80164b2:	b570      	push	{r4, r5, r6, lr}
 80164b4:	8882      	ldrh	r2, [r0, #4]
 80164b6:	880b      	ldrh	r3, [r1, #0]
 80164b8:	4413      	add	r3, r2
 80164ba:	800b      	strh	r3, [r1, #0]
 80164bc:	88c2      	ldrh	r2, [r0, #6]
 80164be:	884b      	ldrh	r3, [r1, #2]
 80164c0:	460c      	mov	r4, r1
 80164c2:	4413      	add	r3, r2
 80164c4:	804b      	strh	r3, [r1, #2]
 80164c6:	4605      	mov	r5, r0
 80164c8:	1d01      	adds	r1, r0, #4
 80164ca:	4620      	mov	r0, r4
 80164cc:	f7f9 fdc6 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 80164d0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80164d4:	2b00      	cmp	r3, #0
 80164d6:	dd0b      	ble.n	80164f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80164d8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80164dc:	2b00      	cmp	r3, #0
 80164de:	dd07      	ble.n	80164f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80164e0:	6968      	ldr	r0, [r5, #20]
 80164e2:	b128      	cbz	r0, 80164f0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80164e4:	6803      	ldr	r3, [r0, #0]
 80164e6:	4621      	mov	r1, r4
 80164e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80164ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80164ee:	4718      	bx	r3
 80164f0:	bd70      	pop	{r4, r5, r6, pc}
	...

080164f4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80164f4:	b570      	push	{r4, r5, r6, lr}
 80164f6:	8882      	ldrh	r2, [r0, #4]
 80164f8:	880b      	ldrh	r3, [r1, #0]
 80164fa:	4413      	add	r3, r2
 80164fc:	800b      	strh	r3, [r1, #0]
 80164fe:	88c2      	ldrh	r2, [r0, #6]
 8016500:	884b      	ldrh	r3, [r1, #2]
 8016502:	460c      	mov	r4, r1
 8016504:	4413      	add	r3, r2
 8016506:	804b      	strh	r3, [r1, #2]
 8016508:	4605      	mov	r5, r0
 801650a:	1d01      	adds	r1, r0, #4
 801650c:	4620      	mov	r0, r4
 801650e:	f7f9 fda5 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8016512:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8016516:	2b00      	cmp	r3, #0
 8016518:	dd19      	ble.n	801654e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801651a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801651e:	2b00      	cmp	r3, #0
 8016520:	dd15      	ble.n	801654e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016522:	6968      	ldr	r0, [r5, #20]
 8016524:	b128      	cbz	r0, 8016532 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8016526:	6803      	ldr	r3, [r0, #0]
 8016528:	4621      	mov	r1, r4
 801652a:	691b      	ldr	r3, [r3, #16]
 801652c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016530:	4718      	bx	r3
 8016532:	4b07      	ldr	r3, [pc, #28]	; (8016550 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8016534:	681b      	ldr	r3, [r3, #0]
 8016536:	3304      	adds	r3, #4
 8016538:	429d      	cmp	r5, r3
 801653a:	d108      	bne.n	801654e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801653c:	f7fe fea0 	bl	8015280 <_ZN8touchgfx11Application11getInstanceEv>
 8016540:	6803      	ldr	r3, [r0, #0]
 8016542:	6821      	ldr	r1, [r4, #0]
 8016544:	6862      	ldr	r2, [r4, #4]
 8016546:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016548:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801654c:	4718      	bx	r3
 801654e:	bd70      	pop	{r4, r5, r6, pc}
 8016550:	20012eb8 	.word	0x20012eb8

08016554 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8016554:	b570      	push	{r4, r5, r6, lr}
 8016556:	4604      	mov	r4, r0
 8016558:	4616      	mov	r6, r2
 801655a:	460d      	mov	r5, r1
 801655c:	b901      	cbnz	r1, 8016560 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801655e:	b192      	cbz	r2, 8016586 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016560:	6823      	ldr	r3, [r4, #0]
 8016562:	4620      	mov	r0, r4
 8016564:	699b      	ldr	r3, [r3, #24]
 8016566:	4798      	blx	r3
 8016568:	88e2      	ldrh	r2, [r4, #6]
 801656a:	88a1      	ldrh	r1, [r4, #4]
 801656c:	4432      	add	r2, r6
 801656e:	4429      	add	r1, r5
 8016570:	4620      	mov	r0, r4
 8016572:	b212      	sxth	r2, r2
 8016574:	b209      	sxth	r1, r1
 8016576:	f7ec fa18 	bl	80029aa <_ZN8touchgfx8Drawable5setXYEss>
 801657a:	6823      	ldr	r3, [r4, #0]
 801657c:	4620      	mov	r0, r4
 801657e:	699b      	ldr	r3, [r3, #24]
 8016580:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016584:	4718      	bx	r3
 8016586:	bd70      	pop	{r4, r5, r6, pc}

08016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8016588:	b510      	push	{r4, lr}
 801658a:	4604      	mov	r4, r0
 801658c:	4608      	mov	r0, r1
 801658e:	2300      	movs	r3, #0
 8016590:	8023      	strh	r3, [r4, #0]
 8016592:	8063      	strh	r3, [r4, #2]
 8016594:	6803      	ldr	r3, [r0, #0]
 8016596:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801659a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801659e:	80a1      	strh	r1, [r4, #4]
 80165a0:	80e2      	strh	r2, [r4, #6]
 80165a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80165a4:	4621      	mov	r1, r4
 80165a6:	4798      	blx	r3
 80165a8:	4620      	mov	r0, r4
 80165aa:	bd10      	pop	{r4, pc}

080165ac <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80165ac:	b530      	push	{r4, r5, lr}
 80165ae:	8083      	strh	r3, [r0, #4]
 80165b0:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80165b4:	80c3      	strh	r3, [r0, #6]
 80165b6:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80165ba:	7203      	strb	r3, [r0, #8]
 80165bc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80165c0:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80165c4:	7243      	strb	r3, [r0, #9]
 80165c6:	7a83      	ldrb	r3, [r0, #10]
 80165c8:	6141      	str	r1, [r0, #20]
 80165ca:	f365 0306 	bfi	r3, r5, #0, #7
 80165ce:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80165d2:	8302      	strh	r2, [r0, #24]
 80165d4:	f365 13c7 	bfi	r3, r5, #7, #1
 80165d8:	7283      	strb	r3, [r0, #10]
 80165da:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80165de:	72c3      	strb	r3, [r0, #11]
 80165e0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 80165e4:	7303      	strb	r3, [r0, #12]
 80165e6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80165ea:	81c3      	strh	r3, [r0, #14]
 80165ec:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80165f0:	8203      	strh	r3, [r0, #16]
 80165f2:	4b01      	ldr	r3, [pc, #4]	; (80165f8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80165f4:	6003      	str	r3, [r0, #0]
 80165f6:	bd30      	pop	{r4, r5, pc}
 80165f8:	0802e40c 	.word	0x0802e40c

080165fc <_ZNK8touchgfx9ConstFont4findEt>:
 80165fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80165fe:	6944      	ldr	r4, [r0, #20]
 8016600:	b3bc      	cbz	r4, 8016672 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016602:	88a3      	ldrh	r3, [r4, #4]
 8016604:	8b02      	ldrh	r2, [r0, #24]
 8016606:	1acb      	subs	r3, r1, r3
 8016608:	f102 32ff 	add.w	r2, r2, #4294967295
 801660c:	d431      	bmi.n	8016672 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801660e:	4293      	cmp	r3, r2
 8016610:	dd0c      	ble.n	801662c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8016612:	230e      	movs	r3, #14
 8016614:	fb03 4302 	mla	r3, r3, r2, r4
 8016618:	889b      	ldrh	r3, [r3, #4]
 801661a:	1a5b      	subs	r3, r3, r1
 801661c:	1ad3      	subs	r3, r2, r3
 801661e:	429a      	cmp	r2, r3
 8016620:	db27      	blt.n	8016672 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016622:	2b00      	cmp	r3, #0
 8016624:	bfbc      	itt	lt
 8016626:	2302      	movlt	r3, #2
 8016628:	fb92 f3f3 	sdivlt	r3, r2, r3
 801662c:	2500      	movs	r5, #0
 801662e:	260e      	movs	r6, #14
 8016630:	4295      	cmp	r5, r2
 8016632:	dc1e      	bgt.n	8016672 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016634:	fb06 4003 	mla	r0, r6, r3, r4
 8016638:	8887      	ldrh	r7, [r0, #4]
 801663a:	42b9      	cmp	r1, r7
 801663c:	d01a      	beq.n	8016674 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801663e:	d20d      	bcs.n	801665c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016640:	1e5a      	subs	r2, r3, #1
 8016642:	4295      	cmp	r5, r2
 8016644:	dc15      	bgt.n	8016672 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016646:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801664a:	1a5b      	subs	r3, r3, r1
 801664c:	1ad3      	subs	r3, r2, r3
 801664e:	429a      	cmp	r2, r3
 8016650:	db0f      	blt.n	8016672 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016652:	429d      	cmp	r5, r3
 8016654:	ddec      	ble.n	8016630 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016656:	1953      	adds	r3, r2, r5
 8016658:	105b      	asrs	r3, r3, #1
 801665a:	e7e9      	b.n	8016630 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801665c:	1c5d      	adds	r5, r3, #1
 801665e:	42aa      	cmp	r2, r5
 8016660:	db07      	blt.n	8016672 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016662:	8a43      	ldrh	r3, [r0, #18]
 8016664:	1acb      	subs	r3, r1, r3
 8016666:	442b      	add	r3, r5
 8016668:	429d      	cmp	r5, r3
 801666a:	dc02      	bgt.n	8016672 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801666c:	429a      	cmp	r2, r3
 801666e:	dadf      	bge.n	8016630 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016670:	e7f1      	b.n	8016656 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016672:	2000      	movs	r0, #0
 8016674:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016676 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016676:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016678:	4604      	mov	r4, r0
 801667a:	4617      	mov	r7, r2
 801667c:	461e      	mov	r6, r3
 801667e:	b911      	cbnz	r1, 8016686 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016680:	2500      	movs	r5, #0
 8016682:	4628      	mov	r0, r5
 8016684:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016686:	290a      	cmp	r1, #10
 8016688:	d0fa      	beq.n	8016680 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801668a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801668e:	4291      	cmp	r1, r2
 8016690:	d0f6      	beq.n	8016680 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016692:	f242 020b 	movw	r2, #8203	; 0x200b
 8016696:	4291      	cmp	r1, r2
 8016698:	d0f2      	beq.n	8016680 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801669a:	f7ff ffaf 	bl	80165fc <_ZNK8touchgfx9ConstFont4findEt>
 801669e:	4605      	mov	r5, r0
 80166a0:	b950      	cbnz	r0, 80166b8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80166a2:	6823      	ldr	r3, [r4, #0]
 80166a4:	4620      	mov	r0, r4
 80166a6:	691b      	ldr	r3, [r3, #16]
 80166a8:	4798      	blx	r3
 80166aa:	4601      	mov	r1, r0
 80166ac:	4620      	mov	r0, r4
 80166ae:	f7ff ffa5 	bl	80165fc <_ZNK8touchgfx9ConstFont4findEt>
 80166b2:	4605      	mov	r5, r0
 80166b4:	2800      	cmp	r0, #0
 80166b6:	d0e3      	beq.n	8016680 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80166b8:	6823      	ldr	r3, [r4, #0]
 80166ba:	4629      	mov	r1, r5
 80166bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80166be:	4620      	mov	r0, r4
 80166c0:	4798      	blx	r3
 80166c2:	6038      	str	r0, [r7, #0]
 80166c4:	6823      	ldr	r3, [r4, #0]
 80166c6:	4620      	mov	r0, r4
 80166c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80166ca:	4798      	blx	r3
 80166cc:	7030      	strb	r0, [r6, #0]
 80166ce:	e7d8      	b.n	8016682 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080166d0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80166d0:	b538      	push	{r3, r4, r5, lr}
 80166d2:	4605      	mov	r5, r0
 80166d4:	f002 f962 	bl	801899c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80166d8:	4604      	mov	r4, r0
 80166da:	4628      	mov	r0, r5
 80166dc:	f002 f8a2 	bl	8018824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80166e0:	2800      	cmp	r0, #0
 80166e2:	bf14      	ite	ne
 80166e4:	2002      	movne	r0, #2
 80166e6:	2000      	moveq	r0, #0
 80166e8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80166ec:	b280      	uxth	r0, r0
 80166ee:	bd38      	pop	{r3, r4, r5, pc}

080166f0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80166f0:	b538      	push	{r3, r4, r5, lr}
 80166f2:	4605      	mov	r5, r0
 80166f4:	f002 f952 	bl	801899c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80166f8:	4604      	mov	r4, r0
 80166fa:	4628      	mov	r0, r5
 80166fc:	f002 f892 	bl	8018824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016700:	2800      	cmp	r0, #0
 8016702:	bf14      	ite	ne
 8016704:	2002      	movne	r0, #2
 8016706:	2000      	moveq	r0, #0
 8016708:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 801670c:	f040 0001 	orr.w	r0, r0, #1
 8016710:	b280      	uxth	r0, r0
 8016712:	bd38      	pop	{r3, r4, r5, pc}

08016714 <_ZN8touchgfx4clzuEm>:
 8016714:	4603      	mov	r3, r0
 8016716:	b1c8      	cbz	r0, 801674c <_ZN8touchgfx4clzuEm+0x38>
 8016718:	0c02      	lsrs	r2, r0, #16
 801671a:	0412      	lsls	r2, r2, #16
 801671c:	b9a2      	cbnz	r2, 8016748 <_ZN8touchgfx4clzuEm+0x34>
 801671e:	0403      	lsls	r3, r0, #16
 8016720:	2010      	movs	r0, #16
 8016722:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8016726:	bf04      	itt	eq
 8016728:	021b      	lsleq	r3, r3, #8
 801672a:	3008      	addeq	r0, #8
 801672c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016730:	bf04      	itt	eq
 8016732:	011b      	lsleq	r3, r3, #4
 8016734:	3004      	addeq	r0, #4
 8016736:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801673a:	bf04      	itt	eq
 801673c:	009b      	lsleq	r3, r3, #2
 801673e:	3002      	addeq	r0, #2
 8016740:	2b00      	cmp	r3, #0
 8016742:	db04      	blt.n	801674e <_ZN8touchgfx4clzuEm+0x3a>
 8016744:	3001      	adds	r0, #1
 8016746:	4770      	bx	lr
 8016748:	2000      	movs	r0, #0
 801674a:	e7ea      	b.n	8016722 <_ZN8touchgfx4clzuEm+0xe>
 801674c:	2020      	movs	r0, #32
 801674e:	4770      	bx	lr

08016750 <_ZN8touchgfx7muldivuEmmmRm>:
 8016750:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016754:	460f      	mov	r7, r1
 8016756:	4615      	mov	r5, r2
 8016758:	461e      	mov	r6, r3
 801675a:	4601      	mov	r1, r0
 801675c:	b100      	cbz	r0, 8016760 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801675e:	b927      	cbnz	r7, 801676a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016760:	2000      	movs	r0, #0
 8016762:	6030      	str	r0, [r6, #0]
 8016764:	b002      	add	sp, #8
 8016766:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801676a:	f7ff ffd3 	bl	8016714 <_ZN8touchgfx4clzuEm>
 801676e:	b980      	cbnz	r0, 8016792 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016770:	4638      	mov	r0, r7
 8016772:	f7ff ffcf 	bl	8016714 <_ZN8touchgfx4clzuEm>
 8016776:	2800      	cmp	r0, #0
 8016778:	dd05      	ble.n	8016786 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801677a:	4633      	mov	r3, r6
 801677c:	462a      	mov	r2, r5
 801677e:	4638      	mov	r0, r7
 8016780:	f7ff ffe6 	bl	8016750 <_ZN8touchgfx7muldivuEmmmRm>
 8016784:	e7ee      	b.n	8016764 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016786:	f04f 33ff 	mov.w	r3, #4294967295
 801678a:	6033      	str	r3, [r6, #0]
 801678c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016790:	e7e8      	b.n	8016764 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016792:	fa37 f800 	lsrs.w	r8, r7, r0
 8016796:	fb07 f301 	mul.w	r3, r7, r1
 801679a:	d105      	bne.n	80167a8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801679c:	fbb3 f0f5 	udiv	r0, r3, r5
 80167a0:	fb05 3510 	mls	r5, r5, r0, r3
 80167a4:	6035      	str	r5, [r6, #0]
 80167a6:	e7dd      	b.n	8016764 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80167a8:	2301      	movs	r3, #1
 80167aa:	fa01 fa00 	lsl.w	sl, r1, r0
 80167ae:	fa03 f000 	lsl.w	r0, r3, r0
 80167b2:	3801      	subs	r0, #1
 80167b4:	462a      	mov	r2, r5
 80167b6:	4633      	mov	r3, r6
 80167b8:	4038      	ands	r0, r7
 80167ba:	f7ff ffc9 	bl	8016750 <_ZN8touchgfx7muldivuEmmmRm>
 80167be:	fbba f9f5 	udiv	r9, sl, r5
 80167c2:	462a      	mov	r2, r5
 80167c4:	4607      	mov	r7, r0
 80167c6:	ab01      	add	r3, sp, #4
 80167c8:	fb05 a119 	mls	r1, r5, r9, sl
 80167cc:	4640      	mov	r0, r8
 80167ce:	f7ff ffbf 	bl	8016750 <_ZN8touchgfx7muldivuEmmmRm>
 80167d2:	9b01      	ldr	r3, [sp, #4]
 80167d4:	6832      	ldr	r2, [r6, #0]
 80167d6:	fb08 f409 	mul.w	r4, r8, r9
 80167da:	441a      	add	r2, r3
 80167dc:	fbb2 f3f5 	udiv	r3, r2, r5
 80167e0:	441c      	add	r4, r3
 80167e2:	443c      	add	r4, r7
 80167e4:	4420      	add	r0, r4
 80167e6:	fb05 2513 	mls	r5, r5, r3, r2
 80167ea:	e7db      	b.n	80167a4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080167ec <_ZN8touchgfx6muldivElllRl>:
 80167ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80167ee:	2800      	cmp	r0, #0
 80167f0:	bfba      	itte	lt
 80167f2:	4240      	neglt	r0, r0
 80167f4:	f04f 34ff 	movlt.w	r4, #4294967295
 80167f8:	2401      	movge	r4, #1
 80167fa:	2900      	cmp	r1, #0
 80167fc:	bfbc      	itt	lt
 80167fe:	4249      	neglt	r1, r1
 8016800:	4264      	neglt	r4, r4
 8016802:	2a00      	cmp	r2, #0
 8016804:	bfb6      	itet	lt
 8016806:	4265      	neglt	r5, r4
 8016808:	4625      	movge	r5, r4
 801680a:	4252      	neglt	r2, r2
 801680c:	4288      	cmp	r0, r1
 801680e:	461e      	mov	r6, r3
 8016810:	bfc2      	ittt	gt
 8016812:	4603      	movgt	r3, r0
 8016814:	4608      	movgt	r0, r1
 8016816:	4619      	movgt	r1, r3
 8016818:	ab01      	add	r3, sp, #4
 801681a:	f7ff ff99 	bl	8016750 <_ZN8touchgfx7muldivuEmmmRm>
 801681e:	9b01      	ldr	r3, [sp, #4]
 8016820:	4368      	muls	r0, r5
 8016822:	435c      	muls	r4, r3
 8016824:	6034      	str	r4, [r6, #0]
 8016826:	b002      	add	sp, #8
 8016828:	bd70      	pop	{r4, r5, r6, pc}

0801682a <_ZN8touchgfx6muldivElll>:
 801682a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801682c:	4606      	mov	r6, r0
 801682e:	ab01      	add	r3, sp, #4
 8016830:	460d      	mov	r5, r1
 8016832:	4614      	mov	r4, r2
 8016834:	f7ff ffda 	bl	80167ec <_ZN8touchgfx6muldivElllRl>
 8016838:	2e00      	cmp	r6, #0
 801683a:	db20      	blt.n	801687e <_ZN8touchgfx6muldivElll+0x54>
 801683c:	bf14      	ite	ne
 801683e:	2301      	movne	r3, #1
 8016840:	2300      	moveq	r3, #0
 8016842:	2d00      	cmp	r5, #0
 8016844:	db1e      	blt.n	8016884 <_ZN8touchgfx6muldivElll+0x5a>
 8016846:	bf14      	ite	ne
 8016848:	2201      	movne	r2, #1
 801684a:	2200      	moveq	r2, #0
 801684c:	2c00      	cmp	r4, #0
 801684e:	fb03 f202 	mul.w	r2, r3, r2
 8016852:	db1a      	blt.n	801688a <_ZN8touchgfx6muldivElll+0x60>
 8016854:	bf14      	ite	ne
 8016856:	2301      	movne	r3, #1
 8016858:	2300      	moveq	r3, #0
 801685a:	4353      	muls	r3, r2
 801685c:	2b01      	cmp	r3, #1
 801685e:	d117      	bne.n	8016890 <_ZN8touchgfx6muldivElll+0x66>
 8016860:	9b01      	ldr	r3, [sp, #4]
 8016862:	2c00      	cmp	r4, #0
 8016864:	bfb8      	it	lt
 8016866:	4264      	neglt	r4, r4
 8016868:	2b00      	cmp	r3, #0
 801686a:	f104 0401 	add.w	r4, r4, #1
 801686e:	bfb8      	it	lt
 8016870:	425b      	neglt	r3, r3
 8016872:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016876:	db00      	blt.n	801687a <_ZN8touchgfx6muldivElll+0x50>
 8016878:	3001      	adds	r0, #1
 801687a:	b002      	add	sp, #8
 801687c:	bd70      	pop	{r4, r5, r6, pc}
 801687e:	f04f 33ff 	mov.w	r3, #4294967295
 8016882:	e7de      	b.n	8016842 <_ZN8touchgfx6muldivElll+0x18>
 8016884:	f04f 32ff 	mov.w	r2, #4294967295
 8016888:	e7e0      	b.n	801684c <_ZN8touchgfx6muldivElll+0x22>
 801688a:	f04f 33ff 	mov.w	r3, #4294967295
 801688e:	e7e4      	b.n	801685a <_ZN8touchgfx6muldivElll+0x30>
 8016890:	3301      	adds	r3, #1
 8016892:	d1f2      	bne.n	801687a <_ZN8touchgfx6muldivElll+0x50>
 8016894:	9b01      	ldr	r3, [sp, #4]
 8016896:	2c00      	cmp	r4, #0
 8016898:	bfb8      	it	lt
 801689a:	4264      	neglt	r4, r4
 801689c:	2b00      	cmp	r3, #0
 801689e:	bfb8      	it	lt
 80168a0:	425b      	neglt	r3, r3
 80168a2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80168a6:	bfc8      	it	gt
 80168a8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80168ac:	e7e5      	b.n	801687a <_ZN8touchgfx6muldivElll+0x50>

080168ae <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80168ae:	2000      	movs	r0, #0
 80168b0:	4770      	bx	lr

080168b2 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80168b2:	2001      	movs	r0, #1
 80168b4:	4770      	bx	lr

080168b6 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80168b6:	2002      	movs	r0, #2
 80168b8:	4770      	bx	lr

080168ba <_ZN8touchgfx6ScreenD1Ev>:
 80168ba:	4770      	bx	lr

080168bc <_ZN8touchgfx12GestureEventD1Ev>:
 80168bc:	4770      	bx	lr

080168be <_ZN8touchgfx9DragEventD1Ev>:
 80168be:	4770      	bx	lr

080168c0 <_ZN8touchgfx10ClickEventD1Ev>:
 80168c0:	4770      	bx	lr

080168c2 <_ZN8touchgfx10ClickEventD0Ev>:
 80168c2:	b510      	push	{r4, lr}
 80168c4:	210c      	movs	r1, #12
 80168c6:	4604      	mov	r4, r0
 80168c8:	f012 fb5d 	bl	8028f86 <_ZdlPvj>
 80168cc:	4620      	mov	r0, r4
 80168ce:	bd10      	pop	{r4, pc}

080168d0 <_ZN8touchgfx9DragEventD0Ev>:
 80168d0:	b510      	push	{r4, lr}
 80168d2:	2110      	movs	r1, #16
 80168d4:	4604      	mov	r4, r0
 80168d6:	f012 fb56 	bl	8028f86 <_ZdlPvj>
 80168da:	4620      	mov	r0, r4
 80168dc:	bd10      	pop	{r4, pc}

080168de <_ZN8touchgfx12GestureEventD0Ev>:
 80168de:	b510      	push	{r4, lr}
 80168e0:	210c      	movs	r1, #12
 80168e2:	4604      	mov	r4, r0
 80168e4:	f012 fb4f 	bl	8028f86 <_ZdlPvj>
 80168e8:	4620      	mov	r0, r4
 80168ea:	bd10      	pop	{r4, pc}

080168ec <_ZN8touchgfx6ScreenD0Ev>:
 80168ec:	b510      	push	{r4, lr}
 80168ee:	213c      	movs	r1, #60	; 0x3c
 80168f0:	4604      	mov	r4, r0
 80168f2:	f012 fb48 	bl	8028f86 <_ZdlPvj>
 80168f6:	4620      	mov	r0, r4
 80168f8:	bd10      	pop	{r4, pc}
	...

080168fc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80168fc:	b530      	push	{r4, r5, lr}
 80168fe:	460d      	mov	r5, r1
 8016900:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016902:	b087      	sub	sp, #28
 8016904:	4604      	mov	r4, r0
 8016906:	b301      	cbz	r1, 801694a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016908:	a801      	add	r0, sp, #4
 801690a:	f7ff fe3d 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801690e:	892a      	ldrh	r2, [r5, #8]
 8016910:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8016914:	7928      	ldrb	r0, [r5, #4]
 8016916:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801691a:	f88d 0010 	strb.w	r0, [sp, #16]
 801691e:	1ad2      	subs	r2, r2, r3
 8016920:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8016922:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016924:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016928:	441a      	add	r2, r3
 801692a:	896b      	ldrh	r3, [r5, #10]
 801692c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016930:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016934:	1b5b      	subs	r3, r3, r5
 8016936:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016938:	442b      	add	r3, r5
 801693a:	4d05      	ldr	r5, [pc, #20]	; (8016950 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801693c:	9503      	str	r5, [sp, #12]
 801693e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016942:	6803      	ldr	r3, [r0, #0]
 8016944:	a903      	add	r1, sp, #12
 8016946:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016948:	4798      	blx	r3
 801694a:	b007      	add	sp, #28
 801694c:	bd30      	pop	{r4, r5, pc}
 801694e:	bf00      	nop
 8016950:	0802e494 	.word	0x0802e494

08016954 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016954:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016958:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801695a:	b08a      	sub	sp, #40	; 0x28
 801695c:	4604      	mov	r4, r0
 801695e:	460d      	mov	r5, r1
 8016960:	b113      	cbz	r3, 8016968 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016962:	790b      	ldrb	r3, [r1, #4]
 8016964:	2b00      	cmp	r3, #0
 8016966:	d044      	beq.n	80169f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016968:	f104 0804 	add.w	r8, r4, #4
 801696c:	4641      	mov	r1, r8
 801696e:	a803      	add	r0, sp, #12
 8016970:	f7ff fe0a 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016974:	792b      	ldrb	r3, [r5, #4]
 8016976:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801697a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801697e:	b983      	cbnz	r3, 80169a2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016980:	892a      	ldrh	r2, [r5, #8]
 8016982:	88e9      	ldrh	r1, [r5, #6]
 8016984:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016988:	1b92      	subs	r2, r2, r6
 801698a:	1bc9      	subs	r1, r1, r7
 801698c:	9301      	str	r3, [sp, #4]
 801698e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016992:	9300      	str	r3, [sp, #0]
 8016994:	b212      	sxth	r2, r2
 8016996:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801699a:	b209      	sxth	r1, r1
 801699c:	4640      	mov	r0, r8
 801699e:	f7f9 fa79 	bl	800fe94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80169a2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80169a4:	b329      	cbz	r1, 80169f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80169a6:	a805      	add	r0, sp, #20
 80169a8:	f7ff fdee 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80169ac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80169b0:	792b      	ldrb	r3, [r5, #4]
 80169b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80169b4:	f88d 3020 	strb.w	r3, [sp, #32]
 80169b8:	1abf      	subs	r7, r7, r2
 80169ba:	88ea      	ldrh	r2, [r5, #6]
 80169bc:	4417      	add	r7, r2
 80169be:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80169c0:	4417      	add	r7, r2
 80169c2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80169c6:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80169ca:	1ab6      	subs	r6, r6, r2
 80169cc:	892a      	ldrh	r2, [r5, #8]
 80169ce:	4416      	add	r6, r2
 80169d0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80169d2:	4416      	add	r6, r2
 80169d4:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80169d8:	4a07      	ldr	r2, [pc, #28]	; (80169f8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80169da:	9207      	str	r2, [sp, #28]
 80169dc:	2600      	movs	r6, #0
 80169de:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80169e2:	6803      	ldr	r3, [r0, #0]
 80169e4:	a907      	add	r1, sp, #28
 80169e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80169e8:	4798      	blx	r3
 80169ea:	792b      	ldrb	r3, [r5, #4]
 80169ec:	b10b      	cbz	r3, 80169f2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80169ee:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80169f2:	b00a      	add	sp, #40	; 0x28
 80169f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80169f8:	0802e46c 	.word	0x0802e46c

080169fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80169fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016a00:	460c      	mov	r4, r1
 8016a02:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8016a04:	b088      	sub	sp, #32
 8016a06:	4605      	mov	r5, r0
 8016a08:	2900      	cmp	r1, #0
 8016a0a:	d06d      	beq.n	8016ae8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8016a0c:	4668      	mov	r0, sp
 8016a0e:	f7ff fdbb 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a12:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8016a14:	88e3      	ldrh	r3, [r4, #6]
 8016a16:	f9bd 8000 	ldrsh.w	r8, [sp]
 8016a1a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8016a1e:	440b      	add	r3, r1
 8016a20:	b21b      	sxth	r3, r3
 8016a22:	4543      	cmp	r3, r8
 8016a24:	db31      	blt.n	8016a8a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016a26:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8016a2a:	44c4      	add	ip, r8
 8016a2c:	fa0f fc8c 	sxth.w	ip, ip
 8016a30:	4563      	cmp	r3, ip
 8016a32:	da2a      	bge.n	8016a8a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016a34:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8016a36:	8926      	ldrh	r6, [r4, #8]
 8016a38:	4416      	add	r6, r2
 8016a3a:	b236      	sxth	r6, r6
 8016a3c:	42be      	cmp	r6, r7
 8016a3e:	db24      	blt.n	8016a8a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016a40:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016a44:	4438      	add	r0, r7
 8016a46:	b200      	sxth	r0, r0
 8016a48:	4286      	cmp	r6, r0
 8016a4a:	da1e      	bge.n	8016a8a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016a4c:	8963      	ldrh	r3, [r4, #10]
 8016a4e:	4419      	add	r1, r3
 8016a50:	b209      	sxth	r1, r1
 8016a52:	4541      	cmp	r1, r8
 8016a54:	db08      	blt.n	8016a68 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016a56:	4561      	cmp	r1, ip
 8016a58:	da06      	bge.n	8016a68 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016a5a:	89a3      	ldrh	r3, [r4, #12]
 8016a5c:	441a      	add	r2, r3
 8016a5e:	b212      	sxth	r2, r2
 8016a60:	42ba      	cmp	r2, r7
 8016a62:	db01      	blt.n	8016a68 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016a64:	4282      	cmp	r2, r0
 8016a66:	db10      	blt.n	8016a8a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016a68:	4b21      	ldr	r3, [pc, #132]	; (8016af0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8016a6a:	9304      	str	r3, [sp, #16]
 8016a6c:	2302      	movs	r3, #2
 8016a6e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016a72:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016a74:	2300      	movs	r3, #0
 8016a76:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016a7a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016a7e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016a82:	6803      	ldr	r3, [r0, #0]
 8016a84:	a904      	add	r1, sp, #16
 8016a86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016a88:	4798      	blx	r3
 8016a8a:	1d29      	adds	r1, r5, #4
 8016a8c:	a802      	add	r0, sp, #8
 8016a8e:	f7ff fd7b 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a92:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016a96:	88e0      	ldrh	r0, [r4, #6]
 8016a98:	7921      	ldrb	r1, [r4, #4]
 8016a9a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8016a9e:	8922      	ldrh	r2, [r4, #8]
 8016aa0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016aa2:	f88d 1014 	strb.w	r1, [sp, #20]
 8016aa6:	eba3 0808 	sub.w	r8, r3, r8
 8016aaa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016aae:	1bdf      	subs	r7, r3, r7
 8016ab0:	b2bb      	uxth	r3, r7
 8016ab2:	fa1f f888 	uxth.w	r8, r8
 8016ab6:	8967      	ldrh	r7, [r4, #10]
 8016ab8:	89a4      	ldrh	r4, [r4, #12]
 8016aba:	4440      	add	r0, r8
 8016abc:	4460      	add	r0, ip
 8016abe:	441a      	add	r2, r3
 8016ac0:	44b8      	add	r8, r7
 8016ac2:	4423      	add	r3, r4
 8016ac4:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016ac8:	4433      	add	r3, r6
 8016aca:	4432      	add	r2, r6
 8016acc:	44e0      	add	r8, ip
 8016ace:	4c09      	ldr	r4, [pc, #36]	; (8016af4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016ad0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016ad2:	9404      	str	r4, [sp, #16]
 8016ad4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016ad8:	f8ad 801a 	strh.w	r8, [sp, #26]
 8016adc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016ae0:	6803      	ldr	r3, [r0, #0]
 8016ae2:	a904      	add	r1, sp, #16
 8016ae4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016ae6:	4798      	blx	r3
 8016ae8:	b008      	add	sp, #32
 8016aea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016aee:	bf00      	nop
 8016af0:	0802e46c 	.word	0x0802e46c
 8016af4:	0802e480 	.word	0x0802e480

08016af8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016af8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016afa:	4604      	mov	r4, r0
 8016afc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016b00:	3201      	adds	r2, #1
 8016b02:	d112      	bne.n	8016b2a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8016b04:	6803      	ldr	r3, [r0, #0]
 8016b06:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016b0a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016b0e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016b12:	2500      	movs	r5, #0
 8016b14:	9500      	str	r5, [sp, #0]
 8016b16:	466d      	mov	r5, sp
 8016b18:	4629      	mov	r1, r5
 8016b1a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016b1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016b20:	4798      	blx	r3
 8016b22:	e895 0003 	ldmia.w	r5, {r0, r1}
 8016b26:	e884 0003 	stmia.w	r4, {r0, r1}
 8016b2a:	4620      	mov	r0, r4
 8016b2c:	b003      	add	sp, #12
 8016b2e:	bd30      	pop	{r4, r5, pc}

08016b30 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016b30:	b513      	push	{r0, r1, r4, lr}
 8016b32:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8016b36:	3301      	adds	r3, #1
 8016b38:	4604      	mov	r4, r0
 8016b3a:	d109      	bne.n	8016b50 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016b3c:	4601      	mov	r1, r0
 8016b3e:	4668      	mov	r0, sp
 8016b40:	f7ff fd22 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b44:	f8bd 3000 	ldrh.w	r3, [sp]
 8016b48:	8423      	strh	r3, [r4, #32]
 8016b4a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016b4e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016b50:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016b54:	b002      	add	sp, #8
 8016b56:	bd10      	pop	{r4, pc}

08016b58 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016b58:	b513      	push	{r0, r1, r4, lr}
 8016b5a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8016b5e:	3301      	adds	r3, #1
 8016b60:	4604      	mov	r4, r0
 8016b62:	d109      	bne.n	8016b78 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016b64:	4601      	mov	r1, r0
 8016b66:	4668      	mov	r0, sp
 8016b68:	f7ff fd0e 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016b6c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016b70:	8423      	strh	r3, [r4, #32]
 8016b72:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016b76:	8463      	strh	r3, [r4, #34]	; 0x22
 8016b78:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8016b7c:	b002      	add	sp, #8
 8016b7e:	bd10      	pop	{r4, pc}

08016b80 <_ZN8touchgfx6ScreenC1Ev>:
 8016b80:	b570      	push	{r4, r5, r6, lr}
 8016b82:	4605      	mov	r5, r0
 8016b84:	4b16      	ldr	r3, [pc, #88]	; (8016be0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016b86:	f845 3b04 	str.w	r3, [r5], #4
 8016b8a:	2300      	movs	r3, #0
 8016b8c:	8103      	strh	r3, [r0, #8]
 8016b8e:	8143      	strh	r3, [r0, #10]
 8016b90:	8183      	strh	r3, [r0, #12]
 8016b92:	81c3      	strh	r3, [r0, #14]
 8016b94:	8203      	strh	r3, [r0, #16]
 8016b96:	8243      	strh	r3, [r0, #18]
 8016b98:	8283      	strh	r3, [r0, #20]
 8016b9a:	82c3      	strh	r3, [r0, #22]
 8016b9c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016ba0:	6203      	str	r3, [r0, #32]
 8016ba2:	8483      	strh	r3, [r0, #36]	; 0x24
 8016ba4:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016ba6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8016baa:	4a0e      	ldr	r2, [pc, #56]	; (8016be4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8016bac:	6343      	str	r3, [r0, #52]	; 0x34
 8016bae:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016bb2:	4b0d      	ldr	r3, [pc, #52]	; (8016be8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016bb4:	6042      	str	r2, [r0, #4]
 8016bb6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016bba:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8016bbc:	4a0b      	ldr	r2, [pc, #44]	; (8016bec <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8016bbe:	4604      	mov	r4, r0
 8016bc0:	2101      	movs	r1, #1
 8016bc2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016bc6:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8016bca:	f9b2 1000 	ldrsh.w	r1, [r2]
 8016bce:	4628      	mov	r0, r5
 8016bd0:	4798      	blx	r3
 8016bd2:	6863      	ldr	r3, [r4, #4]
 8016bd4:	4628      	mov	r0, r5
 8016bd6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016bd8:	4631      	mov	r1, r6
 8016bda:	4798      	blx	r3
 8016bdc:	4620      	mov	r0, r4
 8016bde:	bd70      	pop	{r4, r5, r6, pc}
 8016be0:	0802e4a8 	.word	0x0802e4a8
 8016be4:	0802dd0c 	.word	0x0802dd0c
 8016be8:	20012e6a 	.word	0x20012e6a
 8016bec:	20012e68 	.word	0x20012e68

08016bf0 <_ZN8touchgfx6Screen4drawEv>:
 8016bf0:	b507      	push	{r0, r1, r2, lr}
 8016bf2:	4b09      	ldr	r3, [pc, #36]	; (8016c18 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8016bf4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016bf8:	4b08      	ldr	r3, [pc, #32]	; (8016c1c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8016bfa:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016bfe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016c02:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016c06:	6803      	ldr	r3, [r0, #0]
 8016c08:	2100      	movs	r1, #0
 8016c0a:	9100      	str	r1, [sp, #0]
 8016c0c:	689b      	ldr	r3, [r3, #8]
 8016c0e:	4669      	mov	r1, sp
 8016c10:	4798      	blx	r3
 8016c12:	b003      	add	sp, #12
 8016c14:	f85d fb04 	ldr.w	pc, [sp], #4
 8016c18:	20012e68 	.word	0x20012e68
 8016c1c:	20012e6a 	.word	0x20012e6a

08016c20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c24:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016c28:	2b00      	cmp	r3, #0
 8016c2a:	b089      	sub	sp, #36	; 0x24
 8016c2c:	4680      	mov	r8, r0
 8016c2e:	460c      	mov	r4, r1
 8016c30:	4615      	mov	r5, r2
 8016c32:	dd0e      	ble.n	8016c52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016c34:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016c38:	2b00      	cmp	r3, #0
 8016c3a:	dd0a      	ble.n	8016c52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016c3c:	4628      	mov	r0, r5
 8016c3e:	f7ff ff5b 	bl	8016af8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016c42:	4621      	mov	r1, r4
 8016c44:	f7fe fa3d 	bl	80150c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016c48:	69eb      	ldr	r3, [r5, #28]
 8016c4a:	b928      	cbnz	r0, 8016c58 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8016c4c:	461d      	mov	r5, r3
 8016c4e:	2b00      	cmp	r3, #0
 8016c50:	d1f4      	bne.n	8016c3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016c52:	b009      	add	sp, #36	; 0x24
 8016c54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c58:	ae04      	add	r6, sp, #16
 8016c5a:	2b00      	cmp	r3, #0
 8016c5c:	f000 80b5 	beq.w	8016dca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016c60:	682b      	ldr	r3, [r5, #0]
 8016c62:	4629      	mov	r1, r5
 8016c64:	68db      	ldr	r3, [r3, #12]
 8016c66:	a802      	add	r0, sp, #8
 8016c68:	4798      	blx	r3
 8016c6a:	4628      	mov	r0, r5
 8016c6c:	f7ff ff60 	bl	8016b30 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016c70:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016c74:	4407      	add	r7, r0
 8016c76:	4628      	mov	r0, r5
 8016c78:	f7ff ff6e 	bl	8016b58 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016c7c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016c80:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016c84:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016c88:	4418      	add	r0, r3
 8016c8a:	4621      	mov	r1, r4
 8016c8c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016c90:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016c94:	b23f      	sxth	r7, r7
 8016c96:	4630      	mov	r0, r6
 8016c98:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016c9c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016ca0:	f7f9 f9dc 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8016ca4:	4628      	mov	r0, r5
 8016ca6:	f7ff ff27 	bl	8016af8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016caa:	4602      	mov	r2, r0
 8016cac:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016cb0:	ab06      	add	r3, sp, #24
 8016cb2:	e883 0003 	stmia.w	r3, {r0, r1}
 8016cb6:	4611      	mov	r1, r2
 8016cb8:	4618      	mov	r0, r3
 8016cba:	f7f9 f9cf 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8016cbe:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016cc2:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016cc6:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8016cca:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8016cce:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016cd2:	4299      	cmp	r1, r3
 8016cd4:	d10b      	bne.n	8016cee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016cd6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016cda:	4552      	cmp	r2, sl
 8016cdc:	d107      	bne.n	8016cee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016cde:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8016ce2:	455a      	cmp	r2, fp
 8016ce4:	d103      	bne.n	8016cee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016ce6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016cea:	454a      	cmp	r2, r9
 8016cec:	d06d      	beq.n	8016dca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016cee:	f1bb 0f00 	cmp.w	fp, #0
 8016cf2:	dd65      	ble.n	8016dc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016cf4:	f1b9 0f00 	cmp.w	r9, #0
 8016cf8:	dd62      	ble.n	8016dc0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016cfa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016cfe:	fa1f f08a 	uxth.w	r0, sl
 8016d02:	4552      	cmp	r2, sl
 8016d04:	9000      	str	r0, [sp, #0]
 8016d06:	da12      	bge.n	8016d2e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016d08:	9301      	str	r3, [sp, #4]
 8016d0a:	9b00      	ldr	r3, [sp, #0]
 8016d0c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016d10:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016d14:	1a9a      	subs	r2, r3, r2
 8016d16:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016d1a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016d1e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8016d22:	69ea      	ldr	r2, [r5, #28]
 8016d24:	4631      	mov	r1, r6
 8016d26:	4640      	mov	r0, r8
 8016d28:	f7ff ff7a 	bl	8016c20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016d2c:	9b01      	ldr	r3, [sp, #4]
 8016d2e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8016d32:	429a      	cmp	r2, r3
 8016d34:	b29f      	uxth	r7, r3
 8016d36:	da0d      	bge.n	8016d54 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016d38:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016d3c:	1aba      	subs	r2, r7, r2
 8016d3e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016d42:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016d46:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016d4a:	69ea      	ldr	r2, [r5, #28]
 8016d4c:	4631      	mov	r1, r6
 8016d4e:	4640      	mov	r0, r8
 8016d50:	f7ff ff66 	bl	8016c20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016d54:	8822      	ldrh	r2, [r4, #0]
 8016d56:	88a3      	ldrh	r3, [r4, #4]
 8016d58:	445f      	add	r7, fp
 8016d5a:	4413      	add	r3, r2
 8016d5c:	b29b      	uxth	r3, r3
 8016d5e:	b2bf      	uxth	r7, r7
 8016d60:	b23a      	sxth	r2, r7
 8016d62:	b219      	sxth	r1, r3
 8016d64:	4291      	cmp	r1, r2
 8016d66:	dd0d      	ble.n	8016d84 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016d68:	1bdb      	subs	r3, r3, r7
 8016d6a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016d6e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016d72:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016d76:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016d7a:	69ea      	ldr	r2, [r5, #28]
 8016d7c:	4631      	mov	r1, r6
 8016d7e:	4640      	mov	r0, r8
 8016d80:	f7ff ff4e 	bl	8016c20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016d84:	88e2      	ldrh	r2, [r4, #6]
 8016d86:	8863      	ldrh	r3, [r4, #2]
 8016d88:	4413      	add	r3, r2
 8016d8a:	9a00      	ldr	r2, [sp, #0]
 8016d8c:	444a      	add	r2, r9
 8016d8e:	b29b      	uxth	r3, r3
 8016d90:	fa1f f982 	uxth.w	r9, r2
 8016d94:	fa0f f289 	sxth.w	r2, r9
 8016d98:	b219      	sxth	r1, r3
 8016d9a:	428a      	cmp	r2, r1
 8016d9c:	da15      	bge.n	8016dca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016d9e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016da2:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016da6:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016daa:	eba3 0309 	sub.w	r3, r3, r9
 8016dae:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016db2:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016db6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016dba:	69ea      	ldr	r2, [r5, #28]
 8016dbc:	4631      	mov	r1, r6
 8016dbe:	e001      	b.n	8016dc4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016dc0:	69ea      	ldr	r2, [r5, #28]
 8016dc2:	4621      	mov	r1, r4
 8016dc4:	4640      	mov	r0, r8
 8016dc6:	f7ff ff2b 	bl	8016c20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016dca:	4628      	mov	r0, r5
 8016dcc:	f7ff fe94 	bl	8016af8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016dd0:	6861      	ldr	r1, [r4, #4]
 8016dd2:	4602      	mov	r2, r0
 8016dd4:	6820      	ldr	r0, [r4, #0]
 8016dd6:	4633      	mov	r3, r6
 8016dd8:	c303      	stmia	r3!, {r0, r1}
 8016dda:	4611      	mov	r1, r2
 8016ddc:	4630      	mov	r0, r6
 8016dde:	f7f9 f93d 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8016de2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016de6:	2b00      	cmp	r3, #0
 8016de8:	f77f af33 	ble.w	8016c52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016dec:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016df0:	2b00      	cmp	r3, #0
 8016df2:	f77f af2e 	ble.w	8016c52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016df6:	4628      	mov	r0, r5
 8016df8:	f7ff fe9a 	bl	8016b30 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016dfc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016e00:	1a18      	subs	r0, r3, r0
 8016e02:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016e06:	4628      	mov	r0, r5
 8016e08:	f7ff fea6 	bl	8016b58 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016e0c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016e10:	1a18      	subs	r0, r3, r0
 8016e12:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016e16:	682b      	ldr	r3, [r5, #0]
 8016e18:	4631      	mov	r1, r6
 8016e1a:	689b      	ldr	r3, [r3, #8]
 8016e1c:	4628      	mov	r0, r5
 8016e1e:	4798      	blx	r3
 8016e20:	e717      	b.n	8016c52 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016e22 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016e22:	b570      	push	{r4, r5, r6, lr}
 8016e24:	460c      	mov	r4, r1
 8016e26:	b086      	sub	sp, #24
 8016e28:	1d06      	adds	r6, r0, #4
 8016e2a:	2300      	movs	r3, #0
 8016e2c:	4631      	mov	r1, r6
 8016e2e:	4605      	mov	r5, r0
 8016e30:	a802      	add	r0, sp, #8
 8016e32:	9301      	str	r3, [sp, #4]
 8016e34:	f7ff fba8 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016e38:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016e3c:	8822      	ldrh	r2, [r4, #0]
 8016e3e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016e42:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016e46:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016e4a:	1ad2      	subs	r2, r2, r3
 8016e4c:	8863      	ldrh	r3, [r4, #2]
 8016e4e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016e52:	1a5b      	subs	r3, r3, r1
 8016e54:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016e58:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016e5c:	aa01      	add	r2, sp, #4
 8016e5e:	a904      	add	r1, sp, #16
 8016e60:	4630      	mov	r0, r6
 8016e62:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016e66:	f7f9 f9d1 	bl	801020c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016e6a:	9a01      	ldr	r2, [sp, #4]
 8016e6c:	b11a      	cbz	r2, 8016e76 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016e6e:	4621      	mov	r1, r4
 8016e70:	4628      	mov	r0, r5
 8016e72:	f7ff fed5 	bl	8016c20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016e76:	b006      	add	sp, #24
 8016e78:	bd70      	pop	{r4, r5, r6, pc}

08016e7a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016e7a:	b530      	push	{r4, r5, lr}
 8016e7c:	4602      	mov	r2, r0
 8016e7e:	4604      	mov	r4, r0
 8016e80:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016e84:	b085      	sub	sp, #20
 8016e86:	460d      	mov	r5, r1
 8016e88:	6851      	ldr	r1, [r2, #4]
 8016e8a:	466b      	mov	r3, sp
 8016e8c:	c303      	stmia	r3!, {r0, r1}
 8016e8e:	4629      	mov	r1, r5
 8016e90:	4668      	mov	r0, sp
 8016e92:	f7f9 f8e3 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 8016e96:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016e9a:	b12b      	cbz	r3, 8016ea8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016e9c:	4669      	mov	r1, sp
 8016e9e:	4620      	mov	r0, r4
 8016ea0:	f7ff ffbf 	bl	8016e22 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016ea4:	b005      	add	sp, #20
 8016ea6:	bd30      	pop	{r4, r5, pc}
 8016ea8:	3404      	adds	r4, #4
 8016eaa:	4621      	mov	r1, r4
 8016eac:	a802      	add	r0, sp, #8
 8016eae:	f7ff fb6b 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016eb2:	f8bd 3000 	ldrh.w	r3, [sp]
 8016eb6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016eba:	1a9b      	subs	r3, r3, r2
 8016ebc:	f8ad 3000 	strh.w	r3, [sp]
 8016ec0:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016ec4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016ec8:	4669      	mov	r1, sp
 8016eca:	1a9b      	subs	r3, r3, r2
 8016ecc:	4620      	mov	r0, r4
 8016ece:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016ed2:	f7f9 f962 	bl	801019a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016ed6:	e7e5      	b.n	8016ea4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016ed8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016ed8:	680a      	ldr	r2, [r1, #0]
 8016eda:	460b      	mov	r3, r1
 8016edc:	6992      	ldr	r2, [r2, #24]
 8016ede:	1d01      	adds	r1, r0, #4
 8016ee0:	4618      	mov	r0, r3
 8016ee2:	4710      	bx	r2

08016ee4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016ee4:	4298      	cmp	r0, r3
 8016ee6:	d200      	bcs.n	8016eea <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016ee8:	b913      	cbnz	r3, 8016ef0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8016eea:	440a      	add	r2, r1
 8016eec:	b210      	sxth	r0, r2
 8016eee:	4770      	bx	lr
 8016ef0:	ee07 0a90 	vmov	s15, r0
 8016ef4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016ef8:	ee07 3a90 	vmov	s15, r3
 8016efc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016f00:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016f04:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016f08:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016f0c:	ee07 2a90 	vmov	s15, r2
 8016f10:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016f14:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016f18:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016f1c:	ee07 1a90 	vmov	s15, r1
 8016f20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016f24:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016f28:	eee6 7a26 	vfma.f32	s15, s12, s13
 8016f2c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016f30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f34:	bfcc      	ite	gt
 8016f36:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016f3a:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016f3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016f42:	ee17 3a90 	vmov	r3, s15
 8016f46:	b218      	sxth	r0, r3
 8016f48:	4770      	bx	lr

08016f4a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8016f4a:	4298      	cmp	r0, r3
 8016f4c:	d200      	bcs.n	8016f50 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8016f4e:	b913      	cbnz	r3, 8016f56 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016f50:	440a      	add	r2, r1
 8016f52:	b210      	sxth	r0, r2
 8016f54:	4770      	bx	lr
 8016f56:	ee07 2a90 	vmov	s15, r2
 8016f5a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8016f5e:	ee07 0a90 	vmov	s15, r0
 8016f62:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016f66:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016f6a:	ee07 3a10 	vmov	s14, r3
 8016f6e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016f72:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016f76:	ee07 1a90 	vmov	s15, r1
 8016f7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016f7e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016f82:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016f86:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016f8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016f8e:	bfcc      	ite	gt
 8016f90:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016f94:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016f98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016f9c:	ee17 3a90 	vmov	r3, s15
 8016fa0:	b218      	sxth	r0, r3
 8016fa2:	4770      	bx	lr

08016fa4 <_ZN8touchgfx12TextProviderC1Ev>:
 8016fa4:	b538      	push	{r3, r4, r5, lr}
 8016fa6:	2500      	movs	r5, #0
 8016fa8:	2302      	movs	r3, #2
 8016faa:	4604      	mov	r4, r0
 8016fac:	e9c0 5500 	strd	r5, r5, [r0]
 8016fb0:	7403      	strb	r3, [r0, #16]
 8016fb2:	6145      	str	r5, [r0, #20]
 8016fb4:	7605      	strb	r5, [r0, #24]
 8016fb6:	83c5      	strh	r5, [r0, #30]
 8016fb8:	8405      	strh	r5, [r0, #32]
 8016fba:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016fbc:	8705      	strh	r5, [r0, #56]	; 0x38
 8016fbe:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016fc0:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016fc4:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016fc8:	220e      	movs	r2, #14
 8016fca:	4629      	mov	r1, r5
 8016fcc:	304c      	adds	r0, #76	; 0x4c
 8016fce:	f012 fff2 	bl	8029fb6 <memset>
 8016fd2:	2301      	movs	r3, #1
 8016fd4:	4620      	mov	r0, r4
 8016fd6:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8016fda:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016fde:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016fe2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016fe6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016fea:	f7f1 f989 	bl	8008300 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016fee:	4620      	mov	r0, r4
 8016ff0:	bd38      	pop	{r3, r4, r5, pc}

08016ff2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016ff2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016ff4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016ff8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8016ffa:	fab0 f080 	clz	r0, r0
 8016ffe:	0940      	lsrs	r0, r0, #5
 8017000:	4770      	bx	lr

08017002 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017002:	b530      	push	{r4, r5, lr}
 8017004:	2500      	movs	r5, #0
 8017006:	2401      	movs	r4, #1
 8017008:	6843      	ldr	r3, [r0, #4]
 801700a:	b913      	cbnz	r3, 8017012 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801700c:	6803      	ldr	r3, [r0, #0]
 801700e:	b313      	cbz	r3, 8017056 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017010:	6043      	str	r3, [r0, #4]
 8017012:	7e03      	ldrb	r3, [r0, #24]
 8017014:	b143      	cbz	r3, 8017028 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017016:	6943      	ldr	r3, [r0, #20]
 8017018:	b12b      	cbz	r3, 8017026 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801701a:	881a      	ldrh	r2, [r3, #0]
 801701c:	b11a      	cbz	r2, 8017026 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801701e:	1c9a      	adds	r2, r3, #2
 8017020:	6142      	str	r2, [r0, #20]
 8017022:	8818      	ldrh	r0, [r3, #0]
 8017024:	bd30      	pop	{r4, r5, pc}
 8017026:	7605      	strb	r5, [r0, #24]
 8017028:	6843      	ldr	r3, [r0, #4]
 801702a:	8819      	ldrh	r1, [r3, #0]
 801702c:	b199      	cbz	r1, 8017056 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801702e:	1c9a      	adds	r2, r3, #2
 8017030:	2902      	cmp	r1, #2
 8017032:	6042      	str	r2, [r0, #4]
 8017034:	d1f5      	bne.n	8017022 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017036:	7c03      	ldrb	r3, [r0, #16]
 8017038:	2b01      	cmp	r3, #1
 801703a:	d8e5      	bhi.n	8017008 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801703c:	1c5a      	adds	r2, r3, #1
 801703e:	3302      	adds	r3, #2
 8017040:	7402      	strb	r2, [r0, #16]
 8017042:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017046:	6143      	str	r3, [r0, #20]
 8017048:	2b00      	cmp	r3, #0
 801704a:	d0dd      	beq.n	8017008 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801704c:	881b      	ldrh	r3, [r3, #0]
 801704e:	2b00      	cmp	r3, #0
 8017050:	d0da      	beq.n	8017008 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017052:	7604      	strb	r4, [r0, #24]
 8017054:	e7d8      	b.n	8017008 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017056:	2000      	movs	r0, #0
 8017058:	e7e4      	b.n	8017024 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801705a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 801705a:	b430      	push	{r4, r5}
 801705c:	6001      	str	r1, [r0, #0]
 801705e:	2100      	movs	r1, #0
 8017060:	6041      	str	r1, [r0, #4]
 8017062:	6815      	ldr	r5, [r2, #0]
 8017064:	6085      	str	r5, [r0, #8]
 8017066:	6852      	ldr	r2, [r2, #4]
 8017068:	6443      	str	r3, [r0, #68]	; 0x44
 801706a:	9b02      	ldr	r3, [sp, #8]
 801706c:	60c2      	str	r2, [r0, #12]
 801706e:	7401      	strb	r1, [r0, #16]
 8017070:	6141      	str	r1, [r0, #20]
 8017072:	7601      	strb	r1, [r0, #24]
 8017074:	8701      	strh	r1, [r0, #56]	; 0x38
 8017076:	8401      	strh	r1, [r0, #32]
 8017078:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801707c:	6483      	str	r3, [r0, #72]	; 0x48
 801707e:	bc30      	pop	{r4, r5}
 8017080:	f7f1 b93e 	b.w	8008300 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017084 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8017084:	b408      	push	{r3}
 8017086:	b510      	push	{r4, lr}
 8017088:	b085      	sub	sp, #20
 801708a:	ac07      	add	r4, sp, #28
 801708c:	f854 3b04 	ldr.w	r3, [r4], #4
 8017090:	9300      	str	r3, [sp, #0]
 8017092:	4613      	mov	r3, r2
 8017094:	4622      	mov	r2, r4
 8017096:	9403      	str	r4, [sp, #12]
 8017098:	f7ff ffdf 	bl	801705a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801709c:	b005      	add	sp, #20
 801709e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80170a2:	b001      	add	sp, #4
 80170a4:	4770      	bx	lr

080170a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80170a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80170a8:	4605      	mov	r5, r0
 80170aa:	4608      	mov	r0, r1
 80170ac:	b1e9      	cbz	r1, 80170ea <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80170ae:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80170b2:	460b      	mov	r3, r1
 80170b4:	f101 0708 	add.w	r7, r1, #8
 80170b8:	4622      	mov	r2, r4
 80170ba:	6818      	ldr	r0, [r3, #0]
 80170bc:	6859      	ldr	r1, [r3, #4]
 80170be:	4626      	mov	r6, r4
 80170c0:	c603      	stmia	r6!, {r0, r1}
 80170c2:	3308      	adds	r3, #8
 80170c4:	42bb      	cmp	r3, r7
 80170c6:	4634      	mov	r4, r6
 80170c8:	d1f7      	bne.n	80170ba <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80170ca:	6818      	ldr	r0, [r3, #0]
 80170cc:	6030      	str	r0, [r6, #0]
 80170ce:	889b      	ldrh	r3, [r3, #4]
 80170d0:	80b3      	strh	r3, [r6, #4]
 80170d2:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80170d6:	015b      	lsls	r3, r3, #5
 80170d8:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80170dc:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80170e0:	430b      	orrs	r3, r1
 80170e2:	425b      	negs	r3, r3
 80170e4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80170e8:	4610      	mov	r0, r2
 80170ea:	bdf0      	pop	{r4, r5, r6, r7, pc}

080170ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80170ec:	b538      	push	{r3, r4, r5, lr}
 80170ee:	460c      	mov	r4, r1
 80170f0:	6811      	ldr	r1, [r2, #0]
 80170f2:	4610      	mov	r0, r2
 80170f4:	68cd      	ldr	r5, [r1, #12]
 80170f6:	4619      	mov	r1, r3
 80170f8:	47a8      	blx	r5
 80170fa:	2800      	cmp	r0, #0
 80170fc:	bf08      	it	eq
 80170fe:	4620      	moveq	r0, r4
 8017100:	bd38      	pop	{r3, r4, r5, pc}
	...

08017104 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8017104:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017106:	4604      	mov	r4, r0
 8017108:	4615      	mov	r5, r2
 801710a:	4608      	mov	r0, r1
 801710c:	b93a      	cbnz	r2, 801711e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801710e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8017112:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8017116:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801711a:	4628      	mov	r0, r5
 801711c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801711e:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8017122:	8893      	ldrh	r3, [r2, #4]
 8017124:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8017128:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801712c:	79ee      	ldrb	r6, [r5, #7]
 801712e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8017132:	4316      	orrs	r6, r2
 8017134:	19da      	adds	r2, r3, r7
 8017136:	b291      	uxth	r1, r2
 8017138:	291d      	cmp	r1, #29
 801713a:	b2b7      	uxth	r7, r6
 801713c:	d87a      	bhi.n	8017234 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801713e:	2201      	movs	r2, #1
 8017140:	408a      	lsls	r2, r1
 8017142:	4975      	ldr	r1, [pc, #468]	; (8017318 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8017144:	420a      	tst	r2, r1
 8017146:	ea4f 06e6 	mov.w	r6, r6, asr #3
 801714a:	d12d      	bne.n	80171a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801714c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8017150:	d070      	beq.n	8017234 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8017152:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8017156:	462b      	mov	r3, r5
 8017158:	f105 0e08 	add.w	lr, r5, #8
 801715c:	4615      	mov	r5, r2
 801715e:	6818      	ldr	r0, [r3, #0]
 8017160:	6859      	ldr	r1, [r3, #4]
 8017162:	4694      	mov	ip, r2
 8017164:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017168:	3308      	adds	r3, #8
 801716a:	4573      	cmp	r3, lr
 801716c:	4662      	mov	r2, ip
 801716e:	d1f6      	bne.n	801715e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8017170:	6818      	ldr	r0, [r3, #0]
 8017172:	f8cc 0000 	str.w	r0, [ip]
 8017176:	889b      	ldrh	r3, [r3, #4]
 8017178:	f8ac 3004 	strh.w	r3, [ip, #4]
 801717c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8017180:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8017184:	b2b3      	uxth	r3, r6
 8017186:	1aca      	subs	r2, r1, r3
 8017188:	b292      	uxth	r2, r2
 801718a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801718e:	10d2      	asrs	r2, r2, #3
 8017190:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8017194:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8017198:	4302      	orrs	r2, r0
 801719a:	1bcf      	subs	r7, r1, r7
 801719c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80171a0:	1afb      	subs	r3, r7, r3
 80171a2:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80171a6:	e7b8      	b.n	801711a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80171a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80171aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80171ae:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80171b0:	f640 6333 	movw	r3, #3635	; 0xe33
 80171b4:	4299      	cmp	r1, r3
 80171b6:	d110      	bne.n	80171da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80171b8:	6803      	ldr	r3, [r0, #0]
 80171ba:	68db      	ldr	r3, [r3, #12]
 80171bc:	4798      	blx	r3
 80171be:	7b41      	ldrb	r1, [r0, #13]
 80171c0:	00cb      	lsls	r3, r1, #3
 80171c2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80171c6:	7a03      	ldrb	r3, [r0, #8]
 80171c8:	0648      	lsls	r0, r1, #25
 80171ca:	ea43 0302 	orr.w	r3, r3, r2
 80171ce:	bf44      	itt	mi
 80171d0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80171d4:	b21b      	sxthmi	r3, r3
 80171d6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80171da:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80171de:	443b      	add	r3, r7
 80171e0:	4433      	add	r3, r6
 80171e2:	b29b      	uxth	r3, r3
 80171e4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80171e8:	462a      	mov	r2, r5
 80171ea:	f105 0c08 	add.w	ip, r5, #8
 80171ee:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80171f2:	4635      	mov	r5, r6
 80171f4:	6810      	ldr	r0, [r2, #0]
 80171f6:	6851      	ldr	r1, [r2, #4]
 80171f8:	4637      	mov	r7, r6
 80171fa:	c703      	stmia	r7!, {r0, r1}
 80171fc:	3208      	adds	r2, #8
 80171fe:	4562      	cmp	r2, ip
 8017200:	463e      	mov	r6, r7
 8017202:	d1f7      	bne.n	80171f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8017204:	6810      	ldr	r0, [r2, #0]
 8017206:	6038      	str	r0, [r7, #0]
 8017208:	8892      	ldrh	r2, [r2, #4]
 801720a:	80ba      	strh	r2, [r7, #4]
 801720c:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017210:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017214:	10db      	asrs	r3, r3, #3
 8017216:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801721a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801721e:	4313      	orrs	r3, r2
 8017220:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017224:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8017228:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801722c:	1a9b      	subs	r3, r3, r2
 801722e:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8017232:	e772      	b.n	801711a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8017234:	f023 0204 	bic.w	r2, r3, #4
 8017238:	f640 611b 	movw	r1, #3611	; 0xe1b
 801723c:	428a      	cmp	r2, r1
 801723e:	d003      	beq.n	8017248 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8017240:	f640 621d 	movw	r2, #3613	; 0xe1d
 8017244:	4293      	cmp	r3, r2
 8017246:	d120      	bne.n	801728a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8017248:	3b01      	subs	r3, #1
 801724a:	4602      	mov	r2, r0
 801724c:	b29b      	uxth	r3, r3
 801724e:	4629      	mov	r1, r5
 8017250:	4620      	mov	r0, r4
 8017252:	f7ff ff4b 	bl	80170ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8017256:	7b41      	ldrb	r1, [r0, #13]
 8017258:	00cb      	lsls	r3, r1, #3
 801725a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801725e:	7a03      	ldrb	r3, [r0, #8]
 8017260:	0649      	lsls	r1, r1, #25
 8017262:	ea43 0302 	orr.w	r3, r3, r2
 8017266:	bf44      	itt	mi
 8017268:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801726c:	b21b      	sxthmi	r3, r3
 801726e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017272:	7b6b      	ldrb	r3, [r5, #13]
 8017274:	7aaa      	ldrb	r2, [r5, #10]
 8017276:	005b      	lsls	r3, r3, #1
 8017278:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801727c:	4313      	orrs	r3, r2
 801727e:	115a      	asrs	r2, r3, #5
 8017280:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8017284:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017288:	e036      	b.n	80172f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 801728a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801728e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8017292:	7a2a      	ldrb	r2, [r5, #8]
 8017294:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8017298:	ea42 0201 	orr.w	r2, r2, r1
 801729c:	bf1c      	itt	ne
 801729e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80172a2:	b212      	sxthne	r2, r2
 80172a4:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80172a8:	f640 6109 	movw	r1, #3593	; 0xe09
 80172ac:	f023 0210 	bic.w	r2, r3, #16
 80172b0:	428a      	cmp	r2, r1
 80172b2:	d003      	beq.n	80172bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 80172b4:	f640 6213 	movw	r2, #3603	; 0xe13
 80172b8:	4293      	cmp	r3, r2
 80172ba:	d12a      	bne.n	8017312 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80172bc:	7b6e      	ldrb	r6, [r5, #13]
 80172be:	0076      	lsls	r6, r6, #1
 80172c0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80172c4:	7aae      	ldrb	r6, [r5, #10]
 80172c6:	4316      	orrs	r6, r2
 80172c8:	f640 6213 	movw	r2, #3603	; 0xe13
 80172cc:	4293      	cmp	r3, r2
 80172ce:	bf18      	it	ne
 80172d0:	f103 33ff 	addne.w	r3, r3, #4294967295
 80172d4:	4602      	mov	r2, r0
 80172d6:	bf14      	ite	ne
 80172d8:	b29b      	uxthne	r3, r3
 80172da:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80172de:	4629      	mov	r1, r5
 80172e0:	4620      	mov	r0, r4
 80172e2:	f7ff ff03 	bl	80170ec <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80172e6:	7b43      	ldrb	r3, [r0, #13]
 80172e8:	7a82      	ldrb	r2, [r0, #10]
 80172ea:	005b      	lsls	r3, r3, #1
 80172ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80172f0:	4313      	orrs	r3, r2
 80172f2:	1af6      	subs	r6, r6, r3
 80172f4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80172f8:	7b69      	ldrb	r1, [r5, #13]
 80172fa:	00cb      	lsls	r3, r1, #3
 80172fc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017300:	7a2b      	ldrb	r3, [r5, #8]
 8017302:	4313      	orrs	r3, r2
 8017304:	064a      	lsls	r2, r1, #25
 8017306:	bf44      	itt	mi
 8017308:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801730c:	b21b      	sxthmi	r3, r3
 801730e:	1bdb      	subs	r3, r3, r7
 8017310:	e747      	b.n	80171a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8017312:	2300      	movs	r3, #0
 8017314:	e7b6      	b.n	8017284 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8017316:	bf00      	nop
 8017318:	3fc00079 	.word	0x3fc00079

0801731c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801731c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017320:	4604      	mov	r4, r0
 8017322:	b942      	cbnz	r2, 8017336 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8017324:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017328:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 801732c:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8017330:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8017334:	e047      	b.n	80173c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8017336:	7b51      	ldrb	r1, [r2, #13]
 8017338:	8893      	ldrh	r3, [r2, #4]
 801733a:	010d      	lsls	r5, r1, #4
 801733c:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8017340:	79d5      	ldrb	r5, [r2, #7]
 8017342:	4305      	orrs	r5, r0
 8017344:	2d04      	cmp	r5, #4
 8017346:	bfcc      	ite	gt
 8017348:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 801734c:	f04f 0e01 	movle.w	lr, #1
 8017350:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8017354:	f200 80ab 	bhi.w	80174ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8017358:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801735c:	4283      	cmp	r3, r0
 801735e:	d216      	bcs.n	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017360:	f240 605b 	movw	r0, #1627	; 0x65b
 8017364:	4283      	cmp	r3, r0
 8017366:	d859      	bhi.n	801741c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8017368:	f240 6057 	movw	r0, #1623	; 0x657
 801736c:	4283      	cmp	r3, r0
 801736e:	d20e      	bcs.n	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017370:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017374:	d24a      	bcs.n	801740c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8017376:	f240 604e 	movw	r0, #1614	; 0x64e
 801737a:	4283      	cmp	r3, r0
 801737c:	d207      	bcs.n	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801737e:	f240 601a 	movw	r0, #1562	; 0x61a
 8017382:	4283      	cmp	r3, r0
 8017384:	d02a      	beq.n	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017386:	d821      	bhi.n	80173cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8017388:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801738c:	d35b      	bcc.n	8017446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801738e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8017392:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017396:	f040 80d0 	bne.w	801753a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801739a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801739e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80173a2:	f040 80ca 	bne.w	801753a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80173a6:	00cb      	lsls	r3, r1, #3
 80173a8:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80173ac:	7a13      	ldrb	r3, [r2, #8]
 80173ae:	0649      	lsls	r1, r1, #25
 80173b0:	ea43 0300 	orr.w	r3, r3, r0
 80173b4:	bf44      	itt	mi
 80173b6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80173ba:	b21b      	sxthmi	r3, r3
 80173bc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80173c0:	1b5d      	subs	r5, r3, r5
 80173c2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80173c6:	4610      	mov	r0, r2
 80173c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80173cc:	f240 604b 	movw	r0, #1611	; 0x64b
 80173d0:	4283      	cmp	r3, r0
 80173d2:	d338      	bcc.n	8017446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80173d4:	f240 604c 	movw	r0, #1612	; 0x64c
 80173d8:	4283      	cmp	r3, r0
 80173da:	d9d8      	bls.n	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80173dc:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80173e0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80173e4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80173e8:	f040 80f2 	bne.w	80175d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80173ec:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80173f0:	f040 80ee 	bne.w	80175d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80173f4:	00cb      	lsls	r3, r1, #3
 80173f6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80173fa:	7a13      	ldrb	r3, [r2, #8]
 80173fc:	064e      	lsls	r6, r1, #25
 80173fe:	ea43 0300 	orr.w	r3, r3, r0
 8017402:	bf44      	itt	mi
 8017404:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017408:	b21b      	sxthmi	r3, r3
 801740a:	e7d9      	b.n	80173c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801740c:	f240 6054 	movw	r0, #1620	; 0x654
 8017410:	4283      	cmp	r3, r0
 8017412:	d8e3      	bhi.n	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017414:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017418:	d9e0      	bls.n	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801741a:	e7b8      	b.n	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801741c:	f240 6074 	movw	r0, #1652	; 0x674
 8017420:	4283      	cmp	r3, r0
 8017422:	d0b4      	beq.n	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017424:	d82d      	bhi.n	8017482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8017426:	f240 605e 	movw	r0, #1630	; 0x65e
 801742a:	4283      	cmp	r3, r0
 801742c:	d804      	bhi.n	8017438 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801742e:	f240 605d 	movw	r0, #1629	; 0x65d
 8017432:	4283      	cmp	r3, r0
 8017434:	d3d2      	bcc.n	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017436:	e7aa      	b.n	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017438:	f240 605f 	movw	r0, #1631	; 0x65f
 801743c:	4283      	cmp	r3, r0
 801743e:	d0cd      	beq.n	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017440:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8017444:	d0a3      	beq.n	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017446:	00cb      	lsls	r3, r1, #3
 8017448:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801744c:	7a13      	ldrb	r3, [r2, #8]
 801744e:	0649      	lsls	r1, r1, #25
 8017450:	ea43 0300 	orr.w	r3, r3, r0
 8017454:	bf44      	itt	mi
 8017456:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801745a:	b21b      	sxthmi	r3, r3
 801745c:	1b5d      	subs	r5, r3, r5
 801745e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8017462:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017466:	7b53      	ldrb	r3, [r2, #13]
 8017468:	015b      	lsls	r3, r3, #5
 801746a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801746e:	7993      	ldrb	r3, [r2, #6]
 8017470:	430b      	orrs	r3, r1
 8017472:	005b      	lsls	r3, r3, #1
 8017474:	2105      	movs	r1, #5
 8017476:	fb93 f3f1 	sdiv	r3, r3, r1
 801747a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801747e:	440b      	add	r3, r1
 8017480:	e756      	b.n	8017330 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8017482:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8017486:	4283      	cmp	r3, r0
 8017488:	d809      	bhi.n	801749e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801748a:	f240 60df 	movw	r0, #1759	; 0x6df
 801748e:	4283      	cmp	r3, r0
 8017490:	f4bf af7d 	bcs.w	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017494:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8017498:	2b05      	cmp	r3, #5
 801749a:	d8d4      	bhi.n	8017446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801749c:	e777      	b.n	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801749e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80174a2:	4283      	cmp	r3, r0
 80174a4:	d09a      	beq.n	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80174a6:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80174aa:	4283      	cmp	r3, r0
 80174ac:	e7ca      	b.n	8017444 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80174ae:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80174b2:	d22b      	bcs.n	801750c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80174b4:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80174b8:	4283      	cmp	r3, r0
 80174ba:	d28f      	bcs.n	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80174bc:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80174c0:	4283      	cmp	r3, r0
 80174c2:	d816      	bhi.n	80174f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80174c4:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80174c8:	4283      	cmp	r3, r0
 80174ca:	f4bf af60 	bcs.w	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174ce:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80174d2:	4283      	cmp	r3, r0
 80174d4:	d80a      	bhi.n	80174ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80174d6:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80174da:	4283      	cmp	r3, r0
 80174dc:	f4bf af57 	bcs.w	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80174e0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80174e4:	4283      	cmp	r3, r0
 80174e6:	f43f af79 	beq.w	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80174ea:	e7ac      	b.n	8017446 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80174ec:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80174f0:	e7f8      	b.n	80174e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80174f2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80174f6:	4283      	cmp	r3, r0
 80174f8:	d802      	bhi.n	8017500 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80174fa:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80174fe:	e798      	b.n	8017432 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017500:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8017504:	4283      	cmp	r3, r0
 8017506:	f47f af42 	bne.w	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801750a:	e767      	b.n	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801750c:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017510:	4283      	cmp	r3, r0
 8017512:	f43f af63 	beq.w	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017516:	d802      	bhi.n	801751e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017518:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801751c:	e7f2      	b.n	8017504 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801751e:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8017522:	4283      	cmp	r3, r0
 8017524:	d805      	bhi.n	8017532 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8017526:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801752a:	4283      	cmp	r3, r0
 801752c:	f4ff af2f 	bcc.w	801738e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017530:	e754      	b.n	80173dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017532:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8017536:	4283      	cmp	r3, r0
 8017538:	e7af      	b.n	801749a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 801753a:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801753e:	4617      	mov	r7, r2
 8017540:	f102 0808 	add.w	r8, r2, #8
 8017544:	4666      	mov	r6, ip
 8017546:	6838      	ldr	r0, [r7, #0]
 8017548:	6879      	ldr	r1, [r7, #4]
 801754a:	46e6      	mov	lr, ip
 801754c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017550:	3708      	adds	r7, #8
 8017552:	4547      	cmp	r7, r8
 8017554:	46f4      	mov	ip, lr
 8017556:	d1f6      	bne.n	8017546 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017558:	6838      	ldr	r0, [r7, #0]
 801755a:	f8ce 0000 	str.w	r0, [lr]
 801755e:	88b9      	ldrh	r1, [r7, #4]
 8017560:	f8ae 1004 	strh.w	r1, [lr, #4]
 8017564:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017568:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801756c:	d009      	beq.n	8017582 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801756e:	7b51      	ldrb	r1, [r2, #13]
 8017570:	7992      	ldrb	r2, [r2, #6]
 8017572:	0149      	lsls	r1, r1, #5
 8017574:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017578:	4311      	orrs	r1, r2
 801757a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801757e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017582:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017586:	b2ad      	uxth	r5, r5
 8017588:	d00d      	beq.n	80175a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801758a:	442b      	add	r3, r5
 801758c:	b29b      	uxth	r3, r3
 801758e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017592:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017596:	10db      	asrs	r3, r3, #3
 8017598:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801759c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80175a0:	4313      	orrs	r3, r2
 80175a2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80175a6:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80175aa:	00cb      	lsls	r3, r1, #3
 80175ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80175b0:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80175b4:	064f      	lsls	r7, r1, #25
 80175b6:	ea43 0302 	orr.w	r3, r3, r2
 80175ba:	bf44      	itt	mi
 80175bc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80175c0:	b21b      	sxthmi	r3, r3
 80175c2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80175c6:	1b5b      	subs	r3, r3, r5
 80175c8:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80175cc:	4632      	mov	r2, r6
 80175ce:	e6fa      	b.n	80173c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80175d0:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80175d4:	4617      	mov	r7, r2
 80175d6:	f102 0908 	add.w	r9, r2, #8
 80175da:	4666      	mov	r6, ip
 80175dc:	6838      	ldr	r0, [r7, #0]
 80175de:	6879      	ldr	r1, [r7, #4]
 80175e0:	46e0      	mov	r8, ip
 80175e2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80175e6:	3708      	adds	r7, #8
 80175e8:	454f      	cmp	r7, r9
 80175ea:	46c4      	mov	ip, r8
 80175ec:	d1f6      	bne.n	80175dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80175ee:	6838      	ldr	r0, [r7, #0]
 80175f0:	f8c8 0000 	str.w	r0, [r8]
 80175f4:	88b9      	ldrh	r1, [r7, #4]
 80175f6:	f8a8 1004 	strh.w	r1, [r8, #4]
 80175fa:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80175fe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017602:	d009      	beq.n	8017618 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8017604:	7b51      	ldrb	r1, [r2, #13]
 8017606:	7992      	ldrb	r2, [r2, #6]
 8017608:	0149      	lsls	r1, r1, #5
 801760a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801760e:	4311      	orrs	r1, r2
 8017610:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8017614:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017618:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801761c:	d00e      	beq.n	801763c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801761e:	eba3 030e 	sub.w	r3, r3, lr
 8017622:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8017626:	b29b      	uxth	r3, r3
 8017628:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801762c:	10db      	asrs	r3, r3, #3
 801762e:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8017632:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8017636:	4313      	orrs	r3, r2
 8017638:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801763c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017640:	00cb      	lsls	r3, r1, #3
 8017642:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017646:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801764a:	0648      	lsls	r0, r1, #25
 801764c:	ea43 0302 	orr.w	r3, r3, r2
 8017650:	bf44      	itt	mi
 8017652:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017656:	b21b      	sxthmi	r3, r3
 8017658:	1b5d      	subs	r5, r3, r5
 801765a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801765e:	e7b5      	b.n	80175cc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017660 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017660:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017664:	461e      	mov	r6, r3
 8017666:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017668:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801766c:	4604      	mov	r4, r0
 801766e:	4617      	mov	r7, r2
 8017670:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017674:	f7f0 fe02 	bl	800827c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017678:	4605      	mov	r5, r0
 801767a:	b918      	cbnz	r0, 8017684 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801767c:	6030      	str	r0, [r6, #0]
 801767e:	4628      	mov	r0, r5
 8017680:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017684:	683b      	ldr	r3, [r7, #0]
 8017686:	4601      	mov	r1, r0
 8017688:	68db      	ldr	r3, [r3, #12]
 801768a:	4638      	mov	r0, r7
 801768c:	4798      	blx	r3
 801768e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017692:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017696:	4602      	mov	r2, r0
 8017698:	6030      	str	r0, [r6, #0]
 801769a:	d213      	bcs.n	80176c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801769c:	4643      	mov	r3, r8
 801769e:	4639      	mov	r1, r7
 80176a0:	4620      	mov	r0, r4
 80176a2:	f7ff fe3b 	bl	801731c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80176a6:	6030      	str	r0, [r6, #0]
 80176a8:	6833      	ldr	r3, [r6, #0]
 80176aa:	b143      	cbz	r3, 80176be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80176ac:	7b5a      	ldrb	r2, [r3, #13]
 80176ae:	7a9b      	ldrb	r3, [r3, #10]
 80176b0:	0052      	lsls	r2, r2, #1
 80176b2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80176b6:	4313      	orrs	r3, r2
 80176b8:	bf0c      	ite	eq
 80176ba:	2301      	moveq	r3, #1
 80176bc:	2300      	movne	r3, #0
 80176be:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80176c2:	e7dc      	b.n	801767e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80176c4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80176c8:	b29b      	uxth	r3, r3
 80176ca:	2b7f      	cmp	r3, #127	; 0x7f
 80176cc:	d804      	bhi.n	80176d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80176ce:	4639      	mov	r1, r7
 80176d0:	4620      	mov	r0, r4
 80176d2:	f7ff fd17 	bl	8017104 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80176d6:	e7e6      	b.n	80176a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80176d8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80176dc:	2b00      	cmp	r3, #0
 80176de:	d0e3      	beq.n	80176a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80176e0:	f640 1302 	movw	r3, #2306	; 0x902
 80176e4:	429d      	cmp	r5, r3
 80176e6:	d1df      	bne.n	80176a8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80176e8:	4601      	mov	r1, r0
 80176ea:	4620      	mov	r0, r4
 80176ec:	f7ff fcdb 	bl	80170a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80176f0:	e7d9      	b.n	80176a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080176f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80176f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80176f6:	461e      	mov	r6, r3
 80176f8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80176fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80176fe:	4604      	mov	r4, r0
 8017700:	4617      	mov	r7, r2
 8017702:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017706:	f7f0 fdb9 	bl	800827c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801770a:	4605      	mov	r5, r0
 801770c:	b918      	cbnz	r0, 8017716 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801770e:	6030      	str	r0, [r6, #0]
 8017710:	4628      	mov	r0, r5
 8017712:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8017716:	683b      	ldr	r3, [r7, #0]
 8017718:	4601      	mov	r1, r0
 801771a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801771e:	4638      	mov	r0, r7
 8017720:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8017724:	47c8      	blx	r9
 8017726:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801772a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801772e:	4602      	mov	r2, r0
 8017730:	6030      	str	r0, [r6, #0]
 8017732:	d213      	bcs.n	801775c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8017734:	4643      	mov	r3, r8
 8017736:	4639      	mov	r1, r7
 8017738:	4620      	mov	r0, r4
 801773a:	f7ff fdef 	bl	801731c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801773e:	6030      	str	r0, [r6, #0]
 8017740:	6833      	ldr	r3, [r6, #0]
 8017742:	b143      	cbz	r3, 8017756 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8017744:	7b5a      	ldrb	r2, [r3, #13]
 8017746:	7a9b      	ldrb	r3, [r3, #10]
 8017748:	0052      	lsls	r2, r2, #1
 801774a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801774e:	4313      	orrs	r3, r2
 8017750:	bf0c      	ite	eq
 8017752:	2301      	moveq	r3, #1
 8017754:	2300      	movne	r3, #0
 8017756:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801775a:	e7d9      	b.n	8017710 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801775c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017760:	b29b      	uxth	r3, r3
 8017762:	2b7f      	cmp	r3, #127	; 0x7f
 8017764:	d804      	bhi.n	8017770 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8017766:	4639      	mov	r1, r7
 8017768:	4620      	mov	r0, r4
 801776a:	f7ff fccb 	bl	8017104 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801776e:	e7e6      	b.n	801773e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017770:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017774:	2b00      	cmp	r3, #0
 8017776:	d0e3      	beq.n	8017740 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017778:	f640 1302 	movw	r3, #2306	; 0x902
 801777c:	429d      	cmp	r5, r3
 801777e:	d1df      	bne.n	8017740 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017780:	4601      	mov	r1, r0
 8017782:	4620      	mov	r0, r4
 8017784:	f7ff fc8f 	bl	80170a6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017788:	e7d9      	b.n	801773e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801778a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801778a:	b510      	push	{r4, lr}
 801778c:	4604      	mov	r4, r0
 801778e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8017792:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017794:	b1f1      	cbz	r1, 80177d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017796:	2b0a      	cmp	r3, #10
 8017798:	d02f      	beq.n	80177fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801779a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801779c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80177a0:	3901      	subs	r1, #1
 80177a2:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80177a4:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80177a8:	1c51      	adds	r1, r2, #1
 80177aa:	b289      	uxth	r1, r1
 80177ac:	2901      	cmp	r1, #1
 80177ae:	bf84      	itt	hi
 80177b0:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80177b4:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80177b6:	f103 0201 	add.w	r2, r3, #1
 80177ba:	8722      	strh	r2, [r4, #56]	; 0x38
 80177bc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80177be:	bf98      	it	ls
 80177c0:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80177c2:	4413      	add	r3, r2
 80177c4:	b29b      	uxth	r3, r3
 80177c6:	2b09      	cmp	r3, #9
 80177c8:	bf88      	it	hi
 80177ca:	3b0a      	subhi	r3, #10
 80177cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80177d0:	8458      	strh	r0, [r3, #34]	; 0x22
 80177d2:	e7dc      	b.n	801778e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80177d4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80177d6:	2b0a      	cmp	r3, #10
 80177d8:	d00f      	beq.n	80177fa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80177da:	4620      	mov	r0, r4
 80177dc:	f7ff fc11 	bl	8017002 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80177e0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80177e2:	1c5a      	adds	r2, r3, #1
 80177e4:	8722      	strh	r2, [r4, #56]	; 0x38
 80177e6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80177e8:	4413      	add	r3, r2
 80177ea:	b29b      	uxth	r3, r3
 80177ec:	2b09      	cmp	r3, #9
 80177ee:	bf88      	it	hi
 80177f0:	3b0a      	subhi	r3, #10
 80177f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80177f6:	8458      	strh	r0, [r3, #34]	; 0x22
 80177f8:	e7ec      	b.n	80177d4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80177fa:	bd10      	pop	{r4, pc}

080177fc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80177fc:	b538      	push	{r3, r4, r5, lr}
 80177fe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017800:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8017804:	4604      	mov	r4, r0
 8017806:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017808:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 801780a:	3a01      	subs	r2, #1
 801780c:	8702      	strh	r2, [r0, #56]	; 0x38
 801780e:	1c5a      	adds	r2, r3, #1
 8017810:	b292      	uxth	r2, r2
 8017812:	2a09      	cmp	r2, #9
 8017814:	bf86      	itte	hi
 8017816:	3b09      	subhi	r3, #9
 8017818:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 801781a:	86c2      	strhls	r2, [r0, #54]	; 0x36
 801781c:	f7ff ffb5 	bl	801778a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017820:	8c23      	ldrh	r3, [r4, #32]
 8017822:	2b01      	cmp	r3, #1
 8017824:	bf9c      	itt	ls
 8017826:	3301      	addls	r3, #1
 8017828:	8423      	strhls	r3, [r4, #32]
 801782a:	8be3      	ldrh	r3, [r4, #30]
 801782c:	b90b      	cbnz	r3, 8017832 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801782e:	2302      	movs	r3, #2
 8017830:	83e3      	strh	r3, [r4, #30]
 8017832:	8be3      	ldrh	r3, [r4, #30]
 8017834:	3b01      	subs	r3, #1
 8017836:	b29b      	uxth	r3, r3
 8017838:	83e3      	strh	r3, [r4, #30]
 801783a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801783e:	4628      	mov	r0, r5
 8017840:	8365      	strh	r5, [r4, #26]
 8017842:	bd38      	pop	{r3, r4, r5, pc}

08017844 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017844:	428a      	cmp	r2, r1
 8017846:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801784a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801784c:	d931      	bls.n	80178b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801784e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017850:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017854:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017858:	19ee      	adds	r6, r5, r7
 801785a:	1a54      	subs	r4, r2, r1
 801785c:	3e01      	subs	r6, #1
 801785e:	fa1f fe84 	uxth.w	lr, r4
 8017862:	b2b4      	uxth	r4, r6
 8017864:	eba4 090e 	sub.w	r9, r4, lr
 8017868:	fa1f f989 	uxth.w	r9, r9
 801786c:	2c09      	cmp	r4, #9
 801786e:	4626      	mov	r6, r4
 8017870:	bf88      	it	hi
 8017872:	f1a4 060a 	subhi.w	r6, r4, #10
 8017876:	f1bc 0f00 	cmp.w	ip, #0
 801787a:	bf08      	it	eq
 801787c:	f04f 0c02 	moveq.w	ip, #2
 8017880:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017884:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017888:	fa1f fc8c 	uxth.w	ip, ip
 801788c:	3c01      	subs	r4, #1
 801788e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8017892:	b2a4      	uxth	r4, r4
 8017894:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017898:	454c      	cmp	r4, r9
 801789a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801789e:	d1e5      	bne.n	801786c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80178a0:	eba5 050e 	sub.w	r5, r5, lr
 80178a4:	eb0e 0408 	add.w	r4, lr, r8
 80178a8:	8705      	strh	r5, [r0, #56]	; 0x38
 80178aa:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80178ae:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80178b2:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80178b4:	1a64      	subs	r4, r4, r1
 80178b6:	4439      	add	r1, r7
 80178b8:	b289      	uxth	r1, r1
 80178ba:	2909      	cmp	r1, #9
 80178bc:	bf88      	it	hi
 80178be:	390a      	subhi	r1, #10
 80178c0:	8704      	strh	r4, [r0, #56]	; 0x38
 80178c2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80178c4:	250a      	movs	r5, #10
 80178c6:	b18a      	cbz	r2, 80178ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80178c8:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80178ca:	3a01      	subs	r2, #1
 80178cc:	b292      	uxth	r2, r2
 80178ce:	3101      	adds	r1, #1
 80178d0:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80178d4:	8701      	strh	r1, [r0, #56]	; 0x38
 80178d6:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80178d8:	b901      	cbnz	r1, 80178dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80178da:	86c5      	strh	r5, [r0, #54]	; 0x36
 80178dc:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80178de:	3901      	subs	r1, #1
 80178e0:	b289      	uxth	r1, r1
 80178e2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80178e4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80178e8:	844c      	strh	r4, [r1, #34]	; 0x22
 80178ea:	e7ec      	b.n	80178c6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80178ec:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80178f0:	f7ff bf4b 	b.w	801778a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080178f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80178f4:	b570      	push	{r4, r5, r6, lr}
 80178f6:	2500      	movs	r5, #0
 80178f8:	4295      	cmp	r5, r2
 80178fa:	d011      	beq.n	8017920 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80178fc:	8bc4      	ldrh	r4, [r0, #30]
 80178fe:	f831 6b02 	ldrh.w	r6, [r1], #2
 8017902:	4414      	add	r4, r2
 8017904:	3c01      	subs	r4, #1
 8017906:	1b64      	subs	r4, r4, r5
 8017908:	b2a4      	uxth	r4, r4
 801790a:	2c01      	cmp	r4, #1
 801790c:	bf88      	it	hi
 801790e:	3c02      	subhi	r4, #2
 8017910:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017914:	8b64      	ldrh	r4, [r4, #26]
 8017916:	42b4      	cmp	r4, r6
 8017918:	d117      	bne.n	801794a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801791a:	3501      	adds	r5, #1
 801791c:	b2ad      	uxth	r5, r5
 801791e:	e7eb      	b.n	80178f8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017920:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017924:	2400      	movs	r4, #0
 8017926:	4413      	add	r3, r2
 8017928:	b2a2      	uxth	r2, r4
 801792a:	429a      	cmp	r2, r3
 801792c:	da0f      	bge.n	801794e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 801792e:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017930:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8017934:	4432      	add	r2, r6
 8017936:	b292      	uxth	r2, r2
 8017938:	2a09      	cmp	r2, #9
 801793a:	bf88      	it	hi
 801793c:	3a0a      	subhi	r2, #10
 801793e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017942:	3401      	adds	r4, #1
 8017944:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017946:	42aa      	cmp	r2, r5
 8017948:	d0ee      	beq.n	8017928 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801794a:	2000      	movs	r0, #0
 801794c:	bd70      	pop	{r4, r5, r6, pc}
 801794e:	2001      	movs	r0, #1
 8017950:	e7fc      	b.n	801794c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017952 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017952:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017956:	4605      	mov	r5, r0
 8017958:	4616      	mov	r6, r2
 801795a:	1c8c      	adds	r4, r1, #2
 801795c:	8809      	ldrh	r1, [r1, #0]
 801795e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017962:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017966:	42b3      	cmp	r3, r6
 8017968:	d124      	bne.n	80179b4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801796a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801796e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017972:	f001 070f 	and.w	r7, r1, #15
 8017976:	f8cd 8000 	str.w	r8, [sp]
 801797a:	464b      	mov	r3, r9
 801797c:	4652      	mov	r2, sl
 801797e:	4621      	mov	r1, r4
 8017980:	4628      	mov	r0, r5
 8017982:	f7ff ffb7 	bl	80178f4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017986:	4683      	mov	fp, r0
 8017988:	b168      	cbz	r0, 80179a6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801798a:	eb0a 0109 	add.w	r1, sl, r9
 801798e:	4441      	add	r1, r8
 8017990:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017994:	463a      	mov	r2, r7
 8017996:	4649      	mov	r1, r9
 8017998:	4628      	mov	r0, r5
 801799a:	f7ff ff53 	bl	8017844 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801799e:	4658      	mov	r0, fp
 80179a0:	b003      	add	sp, #12
 80179a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80179a6:	eb07 010a 	add.w	r1, r7, sl
 80179aa:	4449      	add	r1, r9
 80179ac:	4441      	add	r1, r8
 80179ae:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80179b2:	e7d2      	b.n	801795a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80179b4:	f04f 0b00 	mov.w	fp, #0
 80179b8:	e7f1      	b.n	801799e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080179ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80179ba:	b570      	push	{r4, r5, r6, lr}
 80179bc:	8810      	ldrh	r0, [r2, #0]
 80179be:	4298      	cmp	r0, r3
 80179c0:	d817      	bhi.n	80179f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80179c2:	1e48      	subs	r0, r1, #1
 80179c4:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80179c8:	4298      	cmp	r0, r3
 80179ca:	d312      	bcc.n	80179f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80179cc:	2400      	movs	r4, #0
 80179ce:	428c      	cmp	r4, r1
 80179d0:	d20f      	bcs.n	80179f2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80179d2:	1860      	adds	r0, r4, r1
 80179d4:	1040      	asrs	r0, r0, #1
 80179d6:	0085      	lsls	r5, r0, #2
 80179d8:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80179dc:	42b3      	cmp	r3, r6
 80179de:	d902      	bls.n	80179e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80179e0:	3001      	adds	r0, #1
 80179e2:	b284      	uxth	r4, r0
 80179e4:	e7f3      	b.n	80179ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80179e6:	d201      	bcs.n	80179ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80179e8:	b281      	uxth	r1, r0
 80179ea:	e7f0      	b.n	80179ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80179ec:	442a      	add	r2, r5
 80179ee:	8850      	ldrh	r0, [r2, #2]
 80179f0:	bd70      	pop	{r4, r5, r6, pc}
 80179f2:	2000      	movs	r0, #0
 80179f4:	e7fc      	b.n	80179f0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080179f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80179f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80179fa:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80179fc:	886f      	ldrh	r7, [r5, #2]
 80179fe:	4604      	mov	r4, r0
 8017a00:	087f      	lsrs	r7, r7, #1
 8017a02:	260b      	movs	r6, #11
 8017a04:	3e01      	subs	r6, #1
 8017a06:	d013      	beq.n	8017a30 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017a08:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017a0a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017a0e:	462a      	mov	r2, r5
 8017a10:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017a14:	4639      	mov	r1, r7
 8017a16:	4643      	mov	r3, r8
 8017a18:	4620      	mov	r0, r4
 8017a1a:	f7ff ffce 	bl	80179ba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8017a1e:	b138      	cbz	r0, 8017a30 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017a20:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8017a24:	4642      	mov	r2, r8
 8017a26:	4620      	mov	r0, r4
 8017a28:	f7ff ff93 	bl	8017952 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8017a2c:	2800      	cmp	r0, #0
 8017a2e:	d1e9      	bne.n	8017a04 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017a30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08017a34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8017a34:	b570      	push	{r4, r5, r6, lr}
 8017a36:	694a      	ldr	r2, [r1, #20]
 8017a38:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8017a3a:	684b      	ldr	r3, [r1, #4]
 8017a3c:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8017a3e:	1b54      	subs	r4, r2, r5
 8017a40:	f000 8106 	beq.w	8017c50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017a44:	1b9b      	subs	r3, r3, r6
 8017a46:	d003      	beq.n	8017a50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017a48:	4363      	muls	r3, r4
 8017a4a:	2210      	movs	r2, #16
 8017a4c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017a50:	680c      	ldr	r4, [r1, #0]
 8017a52:	698a      	ldr	r2, [r1, #24]
 8017a54:	1b65      	subs	r5, r4, r5
 8017a56:	f000 80fd 	beq.w	8017c54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8017a5a:	1b92      	subs	r2, r2, r6
 8017a5c:	d003      	beq.n	8017a66 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017a5e:	436a      	muls	r2, r5
 8017a60:	2410      	movs	r4, #16
 8017a62:	fb92 f2f4 	sdiv	r2, r2, r4
 8017a66:	1a9b      	subs	r3, r3, r2
 8017a68:	ee07 3a90 	vmov	s15, r3
 8017a6c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8017c90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017a70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017a74:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017a78:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017a7c:	460a      	mov	r2, r1
 8017a7e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017a82:	4603      	mov	r3, r0
 8017a84:	f100 040c 	add.w	r4, r0, #12
 8017a88:	eeb1 6a43 	vneg.f32	s12, s6
 8017a8c:	edd2 7a02 	vldr	s15, [r2, #8]
 8017a90:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017a94:	3214      	adds	r2, #20
 8017a96:	ece3 6a01 	vstmia	r3!, {s13}
 8017a9a:	ed52 7a02 	vldr	s15, [r2, #-8]
 8017a9e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017aa2:	429c      	cmp	r4, r3
 8017aa4:	edc3 7a02 	vstr	s15, [r3, #8]
 8017aa8:	ed52 7a01 	vldr	s15, [r2, #-4]
 8017aac:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017ab0:	edc3 7a05 	vstr	s15, [r3, #20]
 8017ab4:	d1ea      	bne.n	8017a8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017ab6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017ab8:	698b      	ldr	r3, [r1, #24]
 8017aba:	edd0 4a02 	vldr	s9, [r0, #8]
 8017abe:	edd0 3a00 	vldr	s7, [r0]
 8017ac2:	edd0 6a01 	vldr	s13, [r0, #4]
 8017ac6:	ed90 5a05 	vldr	s10, [r0, #20]
 8017aca:	ed90 2a03 	vldr	s4, [r0, #12]
 8017ace:	edd0 5a04 	vldr	s11, [r0, #16]
 8017ad2:	ed90 1a07 	vldr	s2, [r0, #28]
 8017ad6:	edd0 2a06 	vldr	s5, [r0, #24]
 8017ada:	1a9b      	subs	r3, r3, r2
 8017adc:	ee07 3a90 	vmov	s15, r3
 8017ae0:	684b      	ldr	r3, [r1, #4]
 8017ae2:	1a9b      	subs	r3, r3, r2
 8017ae4:	ee07 3a10 	vmov	s14, r3
 8017ae8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017aec:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017af0:	ee67 7a84 	vmul.f32	s15, s15, s8
 8017af4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017af8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017afc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017b00:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017b04:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017b08:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017b0c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017b10:	ee67 7a83 	vmul.f32	s15, s15, s6
 8017b14:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017b18:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017b1a:	694a      	ldr	r2, [r1, #20]
 8017b1c:	1b13      	subs	r3, r2, r4
 8017b1e:	ee07 3a10 	vmov	s14, r3
 8017b22:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017b26:	680b      	ldr	r3, [r1, #0]
 8017b28:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017b2c:	1b1b      	subs	r3, r3, r4
 8017b2e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8017b32:	ee07 3a10 	vmov	s14, r3
 8017b36:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017b3a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017b3e:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017b42:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017b46:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8017b4a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017b4c:	698b      	ldr	r3, [r1, #24]
 8017b4e:	1a9b      	subs	r3, r3, r2
 8017b50:	ee06 3a90 	vmov	s13, r3
 8017b54:	684b      	ldr	r3, [r1, #4]
 8017b56:	1a9b      	subs	r3, r3, r2
 8017b58:	ee07 3a10 	vmov	s14, r3
 8017b5c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017b60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017b64:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017b68:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017b6c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017b70:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017b74:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017b78:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8017b7c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017b7e:	694a      	ldr	r2, [r1, #20]
 8017b80:	1b13      	subs	r3, r2, r4
 8017b82:	ee07 3a10 	vmov	s14, r3
 8017b86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017b8a:	680b      	ldr	r3, [r1, #0]
 8017b8c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017b90:	1b1b      	subs	r3, r3, r4
 8017b92:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017b96:	ee07 3a10 	vmov	s14, r3
 8017b9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017b9e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017ba2:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017ba6:	edd0 5a08 	vldr	s11, [r0, #32]
 8017baa:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017bae:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017bb2:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017bb6:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017bb8:	698b      	ldr	r3, [r1, #24]
 8017bba:	1a9b      	subs	r3, r3, r2
 8017bbc:	ee07 3a10 	vmov	s14, r3
 8017bc0:	684b      	ldr	r3, [r1, #4]
 8017bc2:	1a9b      	subs	r3, r3, r2
 8017bc4:	ee01 3a90 	vmov	s3, r3
 8017bc8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017bcc:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017bd0:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017bd4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017bd8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017bdc:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017be0:	eea1 7a21 	vfma.f32	s14, s2, s3
 8017be4:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017be8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017bec:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017bee:	694a      	ldr	r2, [r1, #20]
 8017bf0:	1b13      	subs	r3, r2, r4
 8017bf2:	ee03 3a10 	vmov	s6, r3
 8017bf6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017bfa:	680b      	ldr	r3, [r1, #0]
 8017bfc:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017c00:	1b1b      	subs	r3, r3, r4
 8017c02:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8017c06:	ee03 3a10 	vmov	s6, r3
 8017c0a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017c0e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8017c12:	eee1 5a04 	vfma.f32	s11, s2, s8
 8017c16:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017c1a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017c1e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8017c22:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8017c26:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8017c2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c2e:	dd13      	ble.n	8017c58 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017c30:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017c34:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017c38:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017c3a:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017c3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017c42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c46:	dd15      	ble.n	8017c74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017c48:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017c4c:	6403      	str	r3, [r0, #64]	; 0x40
 8017c4e:	bd70      	pop	{r4, r5, r6, pc}
 8017c50:	4623      	mov	r3, r4
 8017c52:	e6fd      	b.n	8017a50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017c54:	462a      	mov	r2, r5
 8017c56:	e706      	b.n	8017a66 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017c58:	d502      	bpl.n	8017c60 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017c5a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017c5e:	e7e9      	b.n	8017c34 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017c60:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017c64:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017c68:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017c6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c70:	dade      	bge.n	8017c30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017c72:	e7f2      	b.n	8017c5a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017c74:	d502      	bpl.n	8017c7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017c76:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017c7a:	e7e7      	b.n	8017c4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8017c7c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017c80:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017c84:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017c88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017c8c:	dadc      	bge.n	8017c48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017c8e:	e7f2      	b.n	8017c76 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017c90:	3d800000 	.word	0x3d800000

08017c94 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017c94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017c98:	2714      	movs	r7, #20
 8017c9a:	435f      	muls	r7, r3
 8017c9c:	eb02 0c07 	add.w	ip, r2, r7
 8017ca0:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017ca4:	f115 0e0f 	adds.w	lr, r5, #15
 8017ca8:	f100 80a2 	bmi.w	8017df0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017cac:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017cb0:	9c08      	ldr	r4, [sp, #32]
 8017cb2:	f8c0 e014 	str.w	lr, [r0, #20]
 8017cb6:	2614      	movs	r6, #20
 8017cb8:	4366      	muls	r6, r4
 8017cba:	eb02 0806 	add.w	r8, r2, r6
 8017cbe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017cc2:	f115 040f 	adds.w	r4, r5, #15
 8017cc6:	f100 809f 	bmi.w	8017e08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017cca:	1124      	asrs	r4, r4, #4
 8017ccc:	eba4 040e 	sub.w	r4, r4, lr
 8017cd0:	6184      	str	r4, [r0, #24]
 8017cd2:	2c00      	cmp	r4, #0
 8017cd4:	f000 808a 	beq.w	8017dec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017cd8:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017cdc:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017ce0:	5995      	ldr	r5, [r2, r6]
 8017ce2:	eba4 0809 	sub.w	r8, r4, r9
 8017ce6:	59d4      	ldr	r4, [r2, r7]
 8017ce8:	eba5 0a04 	sub.w	sl, r5, r4
 8017cec:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017cf0:	fb0e fe05 	mul.w	lr, lr, r5
 8017cf4:	fb0a ee19 	mls	lr, sl, r9, lr
 8017cf8:	fb08 e404 	mla	r4, r8, r4, lr
 8017cfc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017d00:	3c01      	subs	r4, #1
 8017d02:	19a4      	adds	r4, r4, r6
 8017d04:	f100 808c 	bmi.w	8017e20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017d08:	fb94 fef6 	sdiv	lr, r4, r6
 8017d0c:	f8c0 e000 	str.w	lr, [r0]
 8017d10:	fb06 441e 	mls	r4, r6, lr, r4
 8017d14:	6104      	str	r4, [r0, #16]
 8017d16:	2d00      	cmp	r5, #0
 8017d18:	f2c0 8095 	blt.w	8017e46 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017d1c:	fb95 f4f6 	sdiv	r4, r5, r6
 8017d20:	6044      	str	r4, [r0, #4]
 8017d22:	fb06 5514 	mls	r5, r6, r4, r5
 8017d26:	6085      	str	r5, [r0, #8]
 8017d28:	60c6      	str	r6, [r0, #12]
 8017d2a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8017d2e:	6945      	ldr	r5, [r0, #20]
 8017d30:	59d2      	ldr	r2, [r2, r7]
 8017d32:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017e68 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8017d36:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017d3a:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017d3e:	ee07 4a10 	vmov	s14, r4
 8017d42:	6804      	ldr	r4, [r0, #0]
 8017d44:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017d48:	ee07 2a90 	vmov	s15, r2
 8017d4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017d50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017d54:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017d58:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017d5c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017d60:	edd3 6a00 	vldr	s13, [r3]
 8017d64:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017d68:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017d6c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017d70:	edc0 6a07 	vstr	s13, [r0, #28]
 8017d74:	edd0 6a01 	vldr	s13, [r0, #4]
 8017d78:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8017d7c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017d80:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017d84:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017d88:	ed80 6a08 	vstr	s12, [r0, #32]
 8017d8c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017d8e:	6242      	str	r2, [r0, #36]	; 0x24
 8017d90:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017d94:	ed93 6a03 	vldr	s12, [r3, #12]
 8017d98:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017d9c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017da0:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017da4:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017da8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017dac:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017db0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017db4:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017db8:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017dba:	6302      	str	r2, [r0, #48]	; 0x30
 8017dbc:	ed93 6a06 	vldr	s12, [r3, #24]
 8017dc0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017dc4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017dc8:	eeb0 7a46 	vmov.f32	s14, s12
 8017dcc:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017dd0:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017dd4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017dd8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017ddc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017de0:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017de4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017de8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017dea:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017dec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017df0:	f1c5 0501 	rsb	r5, r5, #1
 8017df4:	f015 050f 	ands.w	r5, r5, #15
 8017df8:	bf18      	it	ne
 8017dfa:	2501      	movne	r5, #1
 8017dfc:	2410      	movs	r4, #16
 8017dfe:	fb9e fef4 	sdiv	lr, lr, r4
 8017e02:	ebae 0e05 	sub.w	lr, lr, r5
 8017e06:	e753      	b.n	8017cb0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017e08:	f1c5 0501 	rsb	r5, r5, #1
 8017e0c:	f015 050f 	ands.w	r5, r5, #15
 8017e10:	bf18      	it	ne
 8017e12:	2501      	movne	r5, #1
 8017e14:	f04f 0910 	mov.w	r9, #16
 8017e18:	fb94 f4f9 	sdiv	r4, r4, r9
 8017e1c:	1b64      	subs	r4, r4, r5
 8017e1e:	e755      	b.n	8017ccc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017e20:	4264      	negs	r4, r4
 8017e22:	fb94 fef6 	sdiv	lr, r4, r6
 8017e26:	f1ce 0800 	rsb	r8, lr, #0
 8017e2a:	fb06 441e 	mls	r4, r6, lr, r4
 8017e2e:	f8c0 8000 	str.w	r8, [r0]
 8017e32:	6104      	str	r4, [r0, #16]
 8017e34:	2c00      	cmp	r4, #0
 8017e36:	f43f af6e 	beq.w	8017d16 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017e3a:	ea6f 0e0e 	mvn.w	lr, lr
 8017e3e:	f8c0 e000 	str.w	lr, [r0]
 8017e42:	1b34      	subs	r4, r6, r4
 8017e44:	e766      	b.n	8017d14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017e46:	426d      	negs	r5, r5
 8017e48:	fb95 f4f6 	sdiv	r4, r5, r6
 8017e4c:	f1c4 0e00 	rsb	lr, r4, #0
 8017e50:	fb06 5514 	mls	r5, r6, r4, r5
 8017e54:	f8c0 e004 	str.w	lr, [r0, #4]
 8017e58:	6085      	str	r5, [r0, #8]
 8017e5a:	2d00      	cmp	r5, #0
 8017e5c:	f43f af64 	beq.w	8017d28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017e60:	43e4      	mvns	r4, r4
 8017e62:	6044      	str	r4, [r0, #4]
 8017e64:	1b75      	subs	r5, r6, r5
 8017e66:	e75e      	b.n	8017d26 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017e68:	3d800000 	.word	0x3d800000

08017e6c <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017e6c:	4602      	mov	r2, r0
 8017e6e:	b148      	cbz	r0, 8017e84 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017e70:	2300      	movs	r3, #0
 8017e72:	b298      	uxth	r0, r3
 8017e74:	3301      	adds	r3, #1
 8017e76:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017e7a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017e7e:	2900      	cmp	r1, #0
 8017e80:	d1f7      	bne.n	8017e72 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017e82:	4770      	bx	lr
 8017e84:	4770      	bx	lr

08017e86 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017e86:	b530      	push	{r4, r5, lr}
 8017e88:	4604      	mov	r4, r0
 8017e8a:	b159      	cbz	r1, 8017ea4 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017e8c:	b148      	cbz	r0, 8017ea2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017e8e:	2300      	movs	r3, #0
 8017e90:	b298      	uxth	r0, r3
 8017e92:	4282      	cmp	r2, r0
 8017e94:	d905      	bls.n	8017ea2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017e96:	5ccd      	ldrb	r5, [r1, r3]
 8017e98:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017e9c:	3301      	adds	r3, #1
 8017e9e:	2d00      	cmp	r5, #0
 8017ea0:	d1f6      	bne.n	8017e90 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017ea2:	bd30      	pop	{r4, r5, pc}
 8017ea4:	4608      	mov	r0, r1
 8017ea6:	e7fc      	b.n	8017ea2 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017ea8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017ea8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017eaa:	b08b      	sub	sp, #44	; 0x2c
 8017eac:	468c      	mov	ip, r1
 8017eae:	2100      	movs	r1, #0
 8017eb0:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017eb4:	4604      	mov	r4, r0
 8017eb6:	261f      	movs	r6, #31
 8017eb8:	af01      	add	r7, sp, #4
 8017eba:	fb94 fef3 	sdiv	lr, r4, r3
 8017ebe:	fb03 441e 	mls	r4, r3, lr, r4
 8017ec2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017ec6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017eca:	b2ec      	uxtb	r4, r5
 8017ecc:	2d09      	cmp	r5, #9
 8017ece:	bfd4      	ite	le
 8017ed0:	3430      	addle	r4, #48	; 0x30
 8017ed2:	3457      	addgt	r4, #87	; 0x57
 8017ed4:	b2e4      	uxtb	r4, r4
 8017ed6:	55bc      	strb	r4, [r7, r6]
 8017ed8:	4674      	mov	r4, lr
 8017eda:	1e71      	subs	r1, r6, #1
 8017edc:	b974      	cbnz	r4, 8017efc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017ede:	2800      	cmp	r0, #0
 8017ee0:	da05      	bge.n	8017eee <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017ee2:	ab0a      	add	r3, sp, #40	; 0x28
 8017ee4:	4419      	add	r1, r3
 8017ee6:	232d      	movs	r3, #45	; 0x2d
 8017ee8:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017eec:	1eb1      	subs	r1, r6, #2
 8017eee:	3101      	adds	r1, #1
 8017ef0:	4439      	add	r1, r7
 8017ef2:	4660      	mov	r0, ip
 8017ef4:	f7ff ffc7 	bl	8017e86 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017ef8:	b00b      	add	sp, #44	; 0x2c
 8017efa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017efc:	460e      	mov	r6, r1
 8017efe:	e7dc      	b.n	8017eba <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017f00 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017f00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017f02:	b08b      	sub	sp, #44	; 0x2c
 8017f04:	468c      	mov	ip, r1
 8017f06:	2100      	movs	r1, #0
 8017f08:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017f0c:	ae01      	add	r6, sp, #4
 8017f0e:	211f      	movs	r1, #31
 8017f10:	fbb0 f7f3 	udiv	r7, r0, r3
 8017f14:	fb03 0517 	mls	r5, r3, r7, r0
 8017f18:	b2ec      	uxtb	r4, r5
 8017f1a:	2d09      	cmp	r5, #9
 8017f1c:	bfd4      	ite	le
 8017f1e:	3430      	addle	r4, #48	; 0x30
 8017f20:	3457      	addgt	r4, #87	; 0x57
 8017f22:	b2e4      	uxtb	r4, r4
 8017f24:	558c      	strb	r4, [r1, r6]
 8017f26:	4638      	mov	r0, r7
 8017f28:	1e4c      	subs	r4, r1, #1
 8017f2a:	b92f      	cbnz	r7, 8017f38 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8017f2c:	4431      	add	r1, r6
 8017f2e:	4660      	mov	r0, ip
 8017f30:	f7ff ffa9 	bl	8017e86 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017f34:	b00b      	add	sp, #44	; 0x2c
 8017f36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017f38:	4621      	mov	r1, r4
 8017f3a:	e7e9      	b.n	8017f10 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08017f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f40:	4691      	mov	r9, r2
 8017f42:	b085      	sub	sp, #20
 8017f44:	6802      	ldr	r2, [r0, #0]
 8017f46:	9201      	str	r2, [sp, #4]
 8017f48:	4688      	mov	r8, r1
 8017f4a:	4683      	mov	fp, r0
 8017f4c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017f50:	9103      	str	r1, [sp, #12]
 8017f52:	4610      	mov	r0, r2
 8017f54:	461c      	mov	r4, r3
 8017f56:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017f5a:	9302      	str	r3, [sp, #8]
 8017f5c:	f7ff ff86 	bl	8017e6c <_ZN8touchgfx7Unicode6strlenEPKt>
 8017f60:	f1b8 0f00 	cmp.w	r8, #0
 8017f64:	bf0c      	ite	eq
 8017f66:	4684      	moveq	ip, r0
 8017f68:	f100 0c01 	addne.w	ip, r0, #1
 8017f6c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017f70:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017f74:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017f76:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017f78:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017f7c:	9903      	ldr	r1, [sp, #12]
 8017f7e:	fa1f fc8c 	uxth.w	ip, ip
 8017f82:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017f86:	d041      	beq.n	801800c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017f88:	d834      	bhi.n	8017ff4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017f8a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017f8e:	d059      	beq.n	8018044 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017f90:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017f94:	d03a      	beq.n	801800c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017f96:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017f9a:	d034      	beq.n	8018006 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017f9c:	2400      	movs	r4, #0
 8017f9e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017fa2:	3a01      	subs	r2, #1
 8017fa4:	b169      	cbz	r1, 8017fc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017fa6:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017fa8:	458c      	cmp	ip, r1
 8017faa:	da09      	bge.n	8017fc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017fac:	eba1 010c 	sub.w	r1, r1, ip
 8017fb0:	b289      	uxth	r1, r1
 8017fb2:	b933      	cbnz	r3, 8017fc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017fb4:	2e00      	cmp	r6, #0
 8017fb6:	d051      	beq.n	801805c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017fb8:	2800      	cmp	r0, #0
 8017fba:	d04f      	beq.n	801805c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017fbc:	440c      	add	r4, r1
 8017fbe:	b2a4      	uxth	r4, r4
 8017fc0:	2100      	movs	r1, #0
 8017fc2:	682b      	ldr	r3, [r5, #0]
 8017fc4:	4293      	cmp	r3, r2
 8017fc6:	da07      	bge.n	8017fd8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017fc8:	f1b8 0f00 	cmp.w	r8, #0
 8017fcc:	d004      	beq.n	8017fd8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017fce:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017fd2:	682b      	ldr	r3, [r5, #0]
 8017fd4:	3301      	adds	r3, #1
 8017fd6:	602b      	str	r3, [r5, #0]
 8017fd8:	2730      	movs	r7, #48	; 0x30
 8017fda:	2c00      	cmp	r4, #0
 8017fdc:	d04e      	beq.n	801807c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017fde:	682e      	ldr	r6, [r5, #0]
 8017fe0:	3c01      	subs	r4, #1
 8017fe2:	42b2      	cmp	r2, r6
 8017fe4:	b2a4      	uxth	r4, r4
 8017fe6:	dd49      	ble.n	801807c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017fe8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017fec:	682b      	ldr	r3, [r5, #0]
 8017fee:	3301      	adds	r3, #1
 8017ff0:	602b      	str	r3, [r5, #0]
 8017ff2:	e7f2      	b.n	8017fda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017ff4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017ff8:	d01d      	beq.n	8018036 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017ffa:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017ffe:	d002      	beq.n	8018006 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8018000:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8018004:	e7c9      	b.n	8017f9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8018006:	4684      	mov	ip, r0
 8018008:	f04f 0800 	mov.w	r8, #0
 801800c:	2c00      	cmp	r4, #0
 801800e:	d0c6      	beq.n	8017f9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018010:	b947      	cbnz	r7, 8018024 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018012:	2801      	cmp	r0, #1
 8018014:	d106      	bne.n	8018024 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8018016:	8814      	ldrh	r4, [r2, #0]
 8018018:	2c30      	cmp	r4, #48	; 0x30
 801801a:	bf02      	ittt	eq
 801801c:	3202      	addeq	r2, #2
 801801e:	f8cb 2000 	streq.w	r2, [fp]
 8018022:	4638      	moveq	r0, r7
 8018024:	45bc      	cmp	ip, r7
 8018026:	da14      	bge.n	8018052 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8018028:	b2bf      	uxth	r7, r7
 801802a:	eba7 040c 	sub.w	r4, r7, ip
 801802e:	b2a4      	uxth	r4, r4
 8018030:	46bc      	mov	ip, r7
 8018032:	2600      	movs	r6, #0
 8018034:	e7b3      	b.n	8017f9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018036:	4684      	mov	ip, r0
 8018038:	b16c      	cbz	r4, 8018056 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801803a:	42b8      	cmp	r0, r7
 801803c:	dd00      	ble.n	8018040 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801803e:	b2b8      	uxth	r0, r7
 8018040:	2400      	movs	r4, #0
 8018042:	e003      	b.n	801804c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8018044:	f04f 0c01 	mov.w	ip, #1
 8018048:	2400      	movs	r4, #0
 801804a:	4660      	mov	r0, ip
 801804c:	4626      	mov	r6, r4
 801804e:	46a0      	mov	r8, r4
 8018050:	e7a5      	b.n	8017f9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8018052:	2400      	movs	r4, #0
 8018054:	e7ed      	b.n	8018032 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8018056:	4626      	mov	r6, r4
 8018058:	46a0      	mov	r8, r4
 801805a:	e7a0      	b.n	8017f9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801805c:	2900      	cmp	r1, #0
 801805e:	d0b0      	beq.n	8017fc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018060:	2720      	movs	r7, #32
 8018062:	682e      	ldr	r6, [r5, #0]
 8018064:	2900      	cmp	r1, #0
 8018066:	d0ac      	beq.n	8017fc2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8018068:	3901      	subs	r1, #1
 801806a:	4296      	cmp	r6, r2
 801806c:	b289      	uxth	r1, r1
 801806e:	daa7      	bge.n	8017fc0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8018070:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8018074:	682b      	ldr	r3, [r5, #0]
 8018076:	3301      	adds	r3, #1
 8018078:	602b      	str	r3, [r5, #0]
 801807a:	e7f2      	b.n	8018062 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801807c:	b188      	cbz	r0, 80180a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801807e:	682b      	ldr	r3, [r5, #0]
 8018080:	3801      	subs	r0, #1
 8018082:	429a      	cmp	r2, r3
 8018084:	b280      	uxth	r0, r0
 8018086:	dd0c      	ble.n	80180a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8018088:	f8db 3000 	ldr.w	r3, [fp]
 801808c:	1c9c      	adds	r4, r3, #2
 801808e:	f8cb 4000 	str.w	r4, [fp]
 8018092:	881c      	ldrh	r4, [r3, #0]
 8018094:	682b      	ldr	r3, [r5, #0]
 8018096:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801809a:	682b      	ldr	r3, [r5, #0]
 801809c:	3301      	adds	r3, #1
 801809e:	602b      	str	r3, [r5, #0]
 80180a0:	e7ec      	b.n	801807c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80180a2:	2620      	movs	r6, #32
 80180a4:	b151      	cbz	r1, 80180bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80180a6:	6828      	ldr	r0, [r5, #0]
 80180a8:	3901      	subs	r1, #1
 80180aa:	4282      	cmp	r2, r0
 80180ac:	b289      	uxth	r1, r1
 80180ae:	dd05      	ble.n	80180bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80180b0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80180b4:	682b      	ldr	r3, [r5, #0]
 80180b6:	3301      	adds	r3, #1
 80180b8:	602b      	str	r3, [r5, #0]
 80180ba:	e7f3      	b.n	80180a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80180bc:	b005      	add	sp, #20
 80180be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080180c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80180c2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80180c6:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80180ca:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80180ce:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80180d2:	2400      	movs	r4, #0
 80180d4:	8014      	strh	r4, [r2, #0]
 80180d6:	701c      	strb	r4, [r3, #0]
 80180d8:	f888 4000 	strb.w	r4, [r8]
 80180dc:	f88c 4000 	strb.w	r4, [ip]
 80180e0:	f88e 4000 	strb.w	r4, [lr]
 80180e4:	703c      	strb	r4, [r7, #0]
 80180e6:	6804      	ldr	r4, [r0, #0]
 80180e8:	b1a4      	cbz	r4, 8018114 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80180ea:	8824      	ldrh	r4, [r4, #0]
 80180ec:	f04f 0901 	mov.w	r9, #1
 80180f0:	b314      	cbz	r4, 8018138 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80180f2:	2c2b      	cmp	r4, #43	; 0x2b
 80180f4:	d001      	beq.n	80180fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80180f6:	2c20      	cmp	r4, #32
 80180f8:	d110      	bne.n	801811c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80180fa:	8014      	strh	r4, [r2, #0]
 80180fc:	6804      	ldr	r4, [r0, #0]
 80180fe:	b10c      	cbz	r4, 8018104 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8018100:	3402      	adds	r4, #2
 8018102:	6004      	str	r4, [r0, #0]
 8018104:	680c      	ldr	r4, [r1, #0]
 8018106:	b10c      	cbz	r4, 801810c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8018108:	3401      	adds	r4, #1
 801810a:	600c      	str	r4, [r1, #0]
 801810c:	6804      	ldr	r4, [r0, #0]
 801810e:	b17c      	cbz	r4, 8018130 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8018110:	8824      	ldrh	r4, [r4, #0]
 8018112:	e7ed      	b.n	80180f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018114:	680c      	ldr	r4, [r1, #0]
 8018116:	b17c      	cbz	r4, 8018138 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018118:	7824      	ldrb	r4, [r4, #0]
 801811a:	e7e7      	b.n	80180ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801811c:	2c2d      	cmp	r4, #45	; 0x2d
 801811e:	d102      	bne.n	8018126 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8018120:	f883 9000 	strb.w	r9, [r3]
 8018124:	e7ea      	b.n	80180fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018126:	2c23      	cmp	r4, #35	; 0x23
 8018128:	d107      	bne.n	801813a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801812a:	f888 9000 	strb.w	r9, [r8]
 801812e:	e7e5      	b.n	80180fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8018130:	680c      	ldr	r4, [r1, #0]
 8018132:	b10c      	cbz	r4, 8018138 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8018134:	7824      	ldrb	r4, [r4, #0]
 8018136:	e7db      	b.n	80180f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8018138:	2400      	movs	r4, #0
 801813a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801813e:	2b09      	cmp	r3, #9
 8018140:	d901      	bls.n	8018146 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8018142:	2c2a      	cmp	r4, #42	; 0x2a
 8018144:	d122      	bne.n	801818c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8018146:	2301      	movs	r3, #1
 8018148:	2c30      	cmp	r4, #48	; 0x30
 801814a:	f88e 3000 	strb.w	r3, [lr]
 801814e:	d10d      	bne.n	801816c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8018150:	f88c 3000 	strb.w	r3, [ip]
 8018154:	6803      	ldr	r3, [r0, #0]
 8018156:	b10b      	cbz	r3, 801815c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8018158:	3302      	adds	r3, #2
 801815a:	6003      	str	r3, [r0, #0]
 801815c:	680b      	ldr	r3, [r1, #0]
 801815e:	b10b      	cbz	r3, 8018164 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8018160:	3301      	adds	r3, #1
 8018162:	600b      	str	r3, [r1, #0]
 8018164:	6803      	ldr	r3, [r0, #0]
 8018166:	2b00      	cmp	r3, #0
 8018168:	d02f      	beq.n	80181ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801816a:	881c      	ldrh	r4, [r3, #0]
 801816c:	2c2a      	cmp	r4, #42	; 0x2a
 801816e:	d135      	bne.n	80181dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8018170:	f04f 33ff 	mov.w	r3, #4294967295
 8018174:	6033      	str	r3, [r6, #0]
 8018176:	6803      	ldr	r3, [r0, #0]
 8018178:	b10b      	cbz	r3, 801817e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801817a:	3302      	adds	r3, #2
 801817c:	6003      	str	r3, [r0, #0]
 801817e:	680b      	ldr	r3, [r1, #0]
 8018180:	b10b      	cbz	r3, 8018186 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8018182:	3301      	adds	r3, #1
 8018184:	600b      	str	r3, [r1, #0]
 8018186:	6803      	ldr	r3, [r0, #0]
 8018188:	b31b      	cbz	r3, 80181d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801818a:	881c      	ldrh	r4, [r3, #0]
 801818c:	2c2e      	cmp	r4, #46	; 0x2e
 801818e:	d11a      	bne.n	80181c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8018190:	2301      	movs	r3, #1
 8018192:	703b      	strb	r3, [r7, #0]
 8018194:	6803      	ldr	r3, [r0, #0]
 8018196:	b10b      	cbz	r3, 801819c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8018198:	3302      	adds	r3, #2
 801819a:	6003      	str	r3, [r0, #0]
 801819c:	680b      	ldr	r3, [r1, #0]
 801819e:	b10b      	cbz	r3, 80181a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80181a0:	3301      	adds	r3, #1
 80181a2:	600b      	str	r3, [r1, #0]
 80181a4:	6803      	ldr	r3, [r0, #0]
 80181a6:	2b00      	cmp	r3, #0
 80181a8:	d036      	beq.n	8018218 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80181aa:	881b      	ldrh	r3, [r3, #0]
 80181ac:	2b2a      	cmp	r3, #42	; 0x2a
 80181ae:	d137      	bne.n	8018220 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80181b0:	f04f 33ff 	mov.w	r3, #4294967295
 80181b4:	602b      	str	r3, [r5, #0]
 80181b6:	6803      	ldr	r3, [r0, #0]
 80181b8:	b10b      	cbz	r3, 80181be <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80181ba:	3302      	adds	r3, #2
 80181bc:	6003      	str	r3, [r0, #0]
 80181be:	680b      	ldr	r3, [r1, #0]
 80181c0:	b10b      	cbz	r3, 80181c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80181c2:	3301      	adds	r3, #1
 80181c4:	600b      	str	r3, [r1, #0]
 80181c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80181ca:	680c      	ldr	r4, [r1, #0]
 80181cc:	b134      	cbz	r4, 80181dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80181ce:	7824      	ldrb	r4, [r4, #0]
 80181d0:	e7cc      	b.n	801816c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80181d2:	680b      	ldr	r3, [r1, #0]
 80181d4:	2b00      	cmp	r3, #0
 80181d6:	d0f6      	beq.n	80181c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80181d8:	781c      	ldrb	r4, [r3, #0]
 80181da:	e7d7      	b.n	801818c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80181dc:	2300      	movs	r3, #0
 80181de:	6033      	str	r3, [r6, #0]
 80181e0:	220a      	movs	r2, #10
 80181e2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80181e6:	fa1f f38c 	uxth.w	r3, ip
 80181ea:	2b09      	cmp	r3, #9
 80181ec:	d8ce      	bhi.n	801818c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80181ee:	6833      	ldr	r3, [r6, #0]
 80181f0:	fb02 c303 	mla	r3, r2, r3, ip
 80181f4:	6033      	str	r3, [r6, #0]
 80181f6:	6803      	ldr	r3, [r0, #0]
 80181f8:	b10b      	cbz	r3, 80181fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80181fa:	3302      	adds	r3, #2
 80181fc:	6003      	str	r3, [r0, #0]
 80181fe:	680b      	ldr	r3, [r1, #0]
 8018200:	b10b      	cbz	r3, 8018206 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8018202:	3301      	adds	r3, #1
 8018204:	600b      	str	r3, [r1, #0]
 8018206:	6803      	ldr	r3, [r0, #0]
 8018208:	b10b      	cbz	r3, 801820e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801820a:	881c      	ldrh	r4, [r3, #0]
 801820c:	e7e9      	b.n	80181e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801820e:	680c      	ldr	r4, [r1, #0]
 8018210:	2c00      	cmp	r4, #0
 8018212:	d0e6      	beq.n	80181e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018214:	7824      	ldrb	r4, [r4, #0]
 8018216:	e7e4      	b.n	80181e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8018218:	680b      	ldr	r3, [r1, #0]
 801821a:	b10b      	cbz	r3, 8018220 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801821c:	781b      	ldrb	r3, [r3, #0]
 801821e:	e7c5      	b.n	80181ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8018220:	2200      	movs	r2, #0
 8018222:	602a      	str	r2, [r5, #0]
 8018224:	240a      	movs	r4, #10
 8018226:	3b30      	subs	r3, #48	; 0x30
 8018228:	b29e      	uxth	r6, r3
 801822a:	2e09      	cmp	r6, #9
 801822c:	682a      	ldr	r2, [r5, #0]
 801822e:	d813      	bhi.n	8018258 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8018230:	fb04 3302 	mla	r3, r4, r2, r3
 8018234:	602b      	str	r3, [r5, #0]
 8018236:	6803      	ldr	r3, [r0, #0]
 8018238:	b10b      	cbz	r3, 801823e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801823a:	3302      	adds	r3, #2
 801823c:	6003      	str	r3, [r0, #0]
 801823e:	680b      	ldr	r3, [r1, #0]
 8018240:	b10b      	cbz	r3, 8018246 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8018242:	3301      	adds	r3, #1
 8018244:	600b      	str	r3, [r1, #0]
 8018246:	6803      	ldr	r3, [r0, #0]
 8018248:	b10b      	cbz	r3, 801824e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801824a:	881b      	ldrh	r3, [r3, #0]
 801824c:	e7eb      	b.n	8018226 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801824e:	680b      	ldr	r3, [r1, #0]
 8018250:	2b00      	cmp	r3, #0
 8018252:	d0e8      	beq.n	8018226 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018254:	781b      	ldrb	r3, [r3, #0]
 8018256:	e7e6      	b.n	8018226 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8018258:	2a06      	cmp	r2, #6
 801825a:	bfa8      	it	ge
 801825c:	2206      	movge	r2, #6
 801825e:	602a      	str	r2, [r5, #0]
 8018260:	e7b1      	b.n	80181c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08018262 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8018262:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018266:	b0a3      	sub	sp, #140	; 0x8c
 8018268:	2600      	movs	r6, #0
 801826a:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801826e:	4607      	mov	r7, r0
 8018270:	4688      	mov	r8, r1
 8018272:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8018276:	4631      	mov	r1, r6
 8018278:	2242      	movs	r2, #66	; 0x42
 801827a:	4648      	mov	r0, r9
 801827c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801827e:	960d      	str	r6, [sp, #52]	; 0x34
 8018280:	f011 fe99 	bl	8029fb6 <memset>
 8018284:	b15f      	cbz	r7, 801829e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8018286:	f108 3aff 	add.w	sl, r8, #4294967295
 801828a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801828c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801828e:	b152      	cbz	r2, 80182a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8018290:	8812      	ldrh	r2, [r2, #0]
 8018292:	b10a      	cbz	r2, 8018298 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8018294:	459a      	cmp	sl, r3
 8018296:	dc2e      	bgt.n	80182f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8018298:	2200      	movs	r2, #0
 801829a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801829e:	4638      	mov	r0, r7
 80182a0:	b023      	add	sp, #140	; 0x8c
 80182a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182a6:	9a08      	ldr	r2, [sp, #32]
 80182a8:	2a00      	cmp	r2, #0
 80182aa:	d0f5      	beq.n	8018298 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80182ac:	7812      	ldrb	r2, [r2, #0]
 80182ae:	e7f0      	b.n	8018292 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 80182b0:	2d00      	cmp	r5, #0
 80182b2:	d0ea      	beq.n	801828a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80182b4:	782a      	ldrb	r2, [r5, #0]
 80182b6:	b142      	cbz	r2, 80182ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80182b8:	2a25      	cmp	r2, #37	; 0x25
 80182ba:	d001      	beq.n	80182c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80182bc:	459a      	cmp	sl, r3
 80182be:	dc08      	bgt.n	80182d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80182c0:	f1bb 0f00 	cmp.w	fp, #0
 80182c4:	d121      	bne.n	801830a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80182c6:	2d00      	cmp	r5, #0
 80182c8:	d0df      	beq.n	801828a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80182ca:	782a      	ldrb	r2, [r5, #0]
 80182cc:	f04f 0b00 	mov.w	fp, #0
 80182d0:	e01d      	b.n	801830e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80182d2:	f1bb 0f00 	cmp.w	fp, #0
 80182d6:	d078      	beq.n	80183ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80182d8:	f8bb 2000 	ldrh.w	r2, [fp]
 80182dc:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80182e0:	f1bb 0f00 	cmp.w	fp, #0
 80182e4:	d002      	beq.n	80182ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80182e6:	f10b 0202 	add.w	r2, fp, #2
 80182ea:	9209      	str	r2, [sp, #36]	; 0x24
 80182ec:	b10d      	cbz	r5, 80182f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80182ee:	3501      	adds	r5, #1
 80182f0:	9508      	str	r5, [sp, #32]
 80182f2:	3301      	adds	r3, #1
 80182f4:	930d      	str	r3, [sp, #52]	; 0x34
 80182f6:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80182fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80182fc:	f1bb 0f00 	cmp.w	fp, #0
 8018300:	d0d6      	beq.n	80182b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8018302:	f8bb 2000 	ldrh.w	r2, [fp]
 8018306:	2a00      	cmp	r2, #0
 8018308:	d1d6      	bne.n	80182b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801830a:	f8bb 2000 	ldrh.w	r2, [fp]
 801830e:	2a00      	cmp	r2, #0
 8018310:	d0bb      	beq.n	801828a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018312:	459a      	cmp	sl, r3
 8018314:	ddb9      	ble.n	801828a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018316:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801831a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801831e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8018322:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8018326:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801832a:	960e      	str	r6, [sp, #56]	; 0x38
 801832c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8018330:	960f      	str	r6, [sp, #60]	; 0x3c
 8018332:	f1bb 0f00 	cmp.w	fp, #0
 8018336:	d002      	beq.n	801833e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8018338:	f10b 0302 	add.w	r3, fp, #2
 801833c:	9309      	str	r3, [sp, #36]	; 0x24
 801833e:	b10d      	cbz	r5, 8018344 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8018340:	1c6b      	adds	r3, r5, #1
 8018342:	9308      	str	r3, [sp, #32]
 8018344:	ab0f      	add	r3, sp, #60	; 0x3c
 8018346:	9305      	str	r3, [sp, #20]
 8018348:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801834c:	9304      	str	r3, [sp, #16]
 801834e:	ab0e      	add	r3, sp, #56	; 0x38
 8018350:	9303      	str	r3, [sp, #12]
 8018352:	ab0c      	add	r3, sp, #48	; 0x30
 8018354:	9302      	str	r3, [sp, #8]
 8018356:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801835a:	9301      	str	r3, [sp, #4]
 801835c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018360:	9300      	str	r3, [sp, #0]
 8018362:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018366:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801836a:	a908      	add	r1, sp, #32
 801836c:	a809      	add	r0, sp, #36	; 0x24
 801836e:	f7ff fea8 	bl	80180c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018372:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018374:	2b00      	cmp	r3, #0
 8018376:	bfbe      	ittt	lt
 8018378:	6823      	ldrlt	r3, [r4, #0]
 801837a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801837e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8018380:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018382:	bfb8      	it	lt
 8018384:	3404      	addlt	r4, #4
 8018386:	2b00      	cmp	r3, #0
 8018388:	bfb8      	it	lt
 801838a:	6823      	ldrlt	r3, [r4, #0]
 801838c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018390:	bfbe      	ittt	lt
 8018392:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8018396:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8018398:	3404      	addlt	r4, #4
 801839a:	b1d9      	cbz	r1, 80183d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 801839c:	880b      	ldrh	r3, [r1, #0]
 801839e:	2b69      	cmp	r3, #105	; 0x69
 80183a0:	d01f      	beq.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80183a2:	d82f      	bhi.n	8018404 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 80183a4:	2b58      	cmp	r3, #88	; 0x58
 80183a6:	d01c      	beq.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80183a8:	d818      	bhi.n	80183dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 80183aa:	2b25      	cmp	r3, #37	; 0x25
 80183ac:	d034      	beq.n	8018418 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 80183ae:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 80183b2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80183b4:	f1bb 0f00 	cmp.w	fp, #0
 80183b8:	f000 80b8 	beq.w	801852c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80183bc:	f8bb 5000 	ldrh.w	r5, [fp]
 80183c0:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80183c4:	3301      	adds	r3, #1
 80183c6:	930d      	str	r3, [sp, #52]	; 0x34
 80183c8:	e029      	b.n	801841e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80183ca:	b10d      	cbz	r5, 80183d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80183cc:	782a      	ldrb	r2, [r5, #0]
 80183ce:	e785      	b.n	80182dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80183d0:	462a      	mov	r2, r5
 80183d2:	e783      	b.n	80182dc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80183d4:	2a00      	cmp	r2, #0
 80183d6:	d0ea      	beq.n	80183ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80183d8:	7813      	ldrb	r3, [r2, #0]
 80183da:	e7e0      	b.n	801839e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80183dc:	3b63      	subs	r3, #99	; 0x63
 80183de:	2b01      	cmp	r3, #1
 80183e0:	d8e5      	bhi.n	80183ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80183e2:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80183e6:	b329      	cbz	r1, 8018434 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80183e8:	880b      	ldrh	r3, [r1, #0]
 80183ea:	2b69      	cmp	r3, #105	; 0x69
 80183ec:	d063      	beq.n	80184b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80183ee:	d825      	bhi.n	801843c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80183f0:	2b63      	cmp	r3, #99	; 0x63
 80183f2:	d038      	beq.n	8018466 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80183f4:	2b64      	cmp	r3, #100	; 0x64
 80183f6:	d05e      	beq.n	80184b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80183f8:	2b58      	cmp	r3, #88	; 0x58
 80183fa:	d07b      	beq.n	80184f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80183fc:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018400:	4625      	mov	r5, r4
 8018402:	e036      	b.n	8018472 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018404:	2b73      	cmp	r3, #115	; 0x73
 8018406:	d0ec      	beq.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018408:	d802      	bhi.n	8018410 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801840a:	2b6f      	cmp	r3, #111	; 0x6f
 801840c:	d1cf      	bne.n	80183ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801840e:	e7e8      	b.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018410:	2b75      	cmp	r3, #117	; 0x75
 8018412:	d0e6      	beq.n	80183e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018414:	2b78      	cmp	r3, #120	; 0x78
 8018416:	e7f9      	b.n	801840c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018418:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801841a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801841e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018420:	b10b      	cbz	r3, 8018426 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018422:	3302      	adds	r3, #2
 8018424:	9309      	str	r3, [sp, #36]	; 0x24
 8018426:	9b08      	ldr	r3, [sp, #32]
 8018428:	2b00      	cmp	r3, #0
 801842a:	f43f af2e 	beq.w	801828a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801842e:	3301      	adds	r3, #1
 8018430:	9308      	str	r3, [sp, #32]
 8018432:	e72a      	b.n	801828a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018434:	2a00      	cmp	r2, #0
 8018436:	d0e1      	beq.n	80183fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018438:	7813      	ldrb	r3, [r2, #0]
 801843a:	e7d6      	b.n	80183ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801843c:	2b73      	cmp	r3, #115	; 0x73
 801843e:	d036      	beq.n	80184ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018440:	d807      	bhi.n	8018452 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018442:	2b6f      	cmp	r3, #111	; 0x6f
 8018444:	d1da      	bne.n	80183fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018446:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018448:	1d25      	adds	r5, r4, #4
 801844a:	eba8 0202 	sub.w	r2, r8, r2
 801844e:	2308      	movs	r3, #8
 8018450:	e04a      	b.n	80184e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018452:	2b75      	cmp	r3, #117	; 0x75
 8018454:	d043      	beq.n	80184de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018456:	2b78      	cmp	r3, #120	; 0x78
 8018458:	d1d0      	bne.n	80183fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801845a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801845c:	1d25      	adds	r5, r4, #4
 801845e:	eba8 0202 	sub.w	r2, r8, r2
 8018462:	2310      	movs	r3, #16
 8018464:	e040      	b.n	80184e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018466:	6823      	ldr	r3, [r4, #0]
 8018468:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801846c:	1d25      	adds	r5, r4, #4
 801846e:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8018472:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018474:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018478:	2b00      	cmp	r3, #0
 801847a:	d052      	beq.n	8018522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 801847c:	881a      	ldrh	r2, [r3, #0]
 801847e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018482:	a80d      	add	r0, sp, #52	; 0x34
 8018484:	9005      	str	r0, [sp, #20]
 8018486:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801848a:	9004      	str	r0, [sp, #16]
 801848c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801848e:	9003      	str	r0, [sp, #12]
 8018490:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018494:	9002      	str	r0, [sp, #8]
 8018496:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018498:	9001      	str	r0, [sp, #4]
 801849a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801849e:	9000      	str	r0, [sp, #0]
 80184a0:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80184a4:	a810      	add	r0, sp, #64	; 0x40
 80184a6:	f7ff fd49 	bl	8017f3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80184aa:	462c      	mov	r4, r5
 80184ac:	e7b7      	b.n	801841e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80184ae:	6823      	ldr	r3, [r4, #0]
 80184b0:	1d25      	adds	r5, r4, #4
 80184b2:	9310      	str	r3, [sp, #64]	; 0x40
 80184b4:	e7dd      	b.n	8018472 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80184b6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80184b8:	6820      	ldr	r0, [r4, #0]
 80184ba:	eba8 0202 	sub.w	r2, r8, r2
 80184be:	230a      	movs	r3, #10
 80184c0:	b292      	uxth	r2, r2
 80184c2:	4649      	mov	r1, r9
 80184c4:	f7ff fcf0 	bl	8017ea8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80184c8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80184cc:	2b2d      	cmp	r3, #45	; 0x2d
 80184ce:	f104 0504 	add.w	r5, r4, #4
 80184d2:	d1ce      	bne.n	8018472 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80184d4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80184d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80184da:	3302      	adds	r3, #2
 80184dc:	e7e9      	b.n	80184b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80184de:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80184e0:	1d25      	adds	r5, r4, #4
 80184e2:	eba8 0202 	sub.w	r2, r8, r2
 80184e6:	230a      	movs	r3, #10
 80184e8:	b292      	uxth	r2, r2
 80184ea:	4649      	mov	r1, r9
 80184ec:	6820      	ldr	r0, [r4, #0]
 80184ee:	f7ff fd07 	bl	8017f00 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80184f2:	e7be      	b.n	8018472 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80184f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80184f6:	6820      	ldr	r0, [r4, #0]
 80184f8:	eba8 0202 	sub.w	r2, r8, r2
 80184fc:	b292      	uxth	r2, r2
 80184fe:	2310      	movs	r3, #16
 8018500:	4649      	mov	r1, r9
 8018502:	f7ff fcfd 	bl	8017f00 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018506:	1d25      	adds	r5, r4, #4
 8018508:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801850c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018510:	2b00      	cmp	r3, #0
 8018512:	d0ae      	beq.n	8018472 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018514:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018518:	2919      	cmp	r1, #25
 801851a:	d8f7      	bhi.n	801850c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801851c:	3b20      	subs	r3, #32
 801851e:	8013      	strh	r3, [r2, #0]
 8018520:	e7f4      	b.n	801850c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018522:	9a08      	ldr	r2, [sp, #32]
 8018524:	2a00      	cmp	r2, #0
 8018526:	d0aa      	beq.n	801847e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018528:	7812      	ldrb	r2, [r2, #0]
 801852a:	e7a8      	b.n	801847e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801852c:	2d00      	cmp	r5, #0
 801852e:	f43f af47 	beq.w	80183c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018532:	782d      	ldrb	r5, [r5, #0]
 8018534:	e744      	b.n	80183c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018536 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8018536:	b507      	push	{r0, r1, r2, lr}
 8018538:	9300      	str	r3, [sp, #0]
 801853a:	4613      	mov	r3, r2
 801853c:	2200      	movs	r2, #0
 801853e:	f7ff fe90 	bl	8018262 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8018542:	b003      	add	sp, #12
 8018544:	f85d fb04 	ldr.w	pc, [sp], #4

08018548 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018548:	b40c      	push	{r2, r3}
 801854a:	b507      	push	{r0, r1, r2, lr}
 801854c:	ab04      	add	r3, sp, #16
 801854e:	f853 2b04 	ldr.w	r2, [r3], #4
 8018552:	9301      	str	r3, [sp, #4]
 8018554:	f7ff ffef 	bl	8018536 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018558:	b003      	add	sp, #12
 801855a:	f85d eb04 	ldr.w	lr, [sp], #4
 801855e:	b002      	add	sp, #8
 8018560:	4770      	bx	lr
	...

08018564 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8018564:	4b01      	ldr	r3, [pc, #4]	; (801856c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8018566:	6018      	str	r0, [r3, #0]
 8018568:	4770      	bx	lr
 801856a:	bf00      	nop
 801856c:	20012edc 	.word	0x20012edc

08018570 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018570:	4b06      	ldr	r3, [pc, #24]	; (801858c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8018572:	881a      	ldrh	r2, [r3, #0]
 8018574:	4282      	cmp	r2, r0
 8018576:	d807      	bhi.n	8018588 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018578:	4b05      	ldr	r3, [pc, #20]	; (8018590 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801857a:	881b      	ldrh	r3, [r3, #0]
 801857c:	4413      	add	r3, r2
 801857e:	4298      	cmp	r0, r3
 8018580:	bfac      	ite	ge
 8018582:	2000      	movge	r0, #0
 8018584:	2001      	movlt	r0, #1
 8018586:	4770      	bx	lr
 8018588:	2000      	movs	r0, #0
 801858a:	4770      	bx	lr
 801858c:	20012efc 	.word	0x20012efc
 8018590:	20012f00 	.word	0x20012f00

08018594 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8018594:	b508      	push	{r3, lr}
 8018596:	4601      	mov	r1, r0
 8018598:	f7ff ffea 	bl	8018570 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801859c:	b118      	cbz	r0, 80185a6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801859e:	4b02      	ldr	r3, [pc, #8]	; (80185a8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80185a0:	681b      	ldr	r3, [r3, #0]
 80185a2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80185a6:	bd08      	pop	{r3, pc}
 80185a8:	20012ee0 	.word	0x20012ee0

080185ac <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80185ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80185ae:	4c24      	ldr	r4, [pc, #144]	; (8018640 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80185b0:	6823      	ldr	r3, [r4, #0]
 80185b2:	2b00      	cmp	r3, #0
 80185b4:	d042      	beq.n	801863c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80185b6:	4a23      	ldr	r2, [pc, #140]	; (8018644 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80185b8:	4d23      	ldr	r5, [pc, #140]	; (8018648 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80185ba:	8811      	ldrh	r1, [r2, #0]
 80185bc:	f8b5 c000 	ldrh.w	ip, [r5]
 80185c0:	4822      	ldr	r0, [pc, #136]	; (801864c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80185c2:	4461      	add	r1, ip
 80185c4:	1c4a      	adds	r2, r1, #1
 80185c6:	f022 0201 	bic.w	r2, r2, #1
 80185ca:	008f      	lsls	r7, r1, #2
 80185cc:	0412      	lsls	r2, r2, #16
 80185ce:	19de      	adds	r6, r3, r7
 80185d0:	0c12      	lsrs	r2, r2, #16
 80185d2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80185d6:	6006      	str	r6, [r0, #0]
 80185d8:	4e1d      	ldr	r6, [pc, #116]	; (8018650 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80185da:	19da      	adds	r2, r3, r7
 80185dc:	6032      	str	r2, [r6, #0]
 80185de:	220e      	movs	r2, #14
 80185e0:	fb02 f20c 	mul.w	r2, r2, ip
 80185e4:	3203      	adds	r2, #3
 80185e6:	f022 0203 	bic.w	r2, r2, #3
 80185ea:	443a      	add	r2, r7
 80185ec:	4f19      	ldr	r7, [pc, #100]	; (8018654 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80185ee:	4413      	add	r3, r2
 80185f0:	603b      	str	r3, [r7, #0]
 80185f2:	4f19      	ldr	r7, [pc, #100]	; (8018658 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80185f4:	2300      	movs	r3, #0
 80185f6:	803b      	strh	r3, [r7, #0]
 80185f8:	4f18      	ldr	r7, [pc, #96]	; (801865c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80185fa:	683f      	ldr	r7, [r7, #0]
 80185fc:	1aba      	subs	r2, r7, r2
 80185fe:	4f18      	ldr	r7, [pc, #96]	; (8018660 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018600:	603a      	str	r2, [r7, #0]
 8018602:	4a18      	ldr	r2, [pc, #96]	; (8018664 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8018604:	469c      	mov	ip, r3
 8018606:	8013      	strh	r3, [r2, #0]
 8018608:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801860c:	428b      	cmp	r3, r1
 801860e:	d10d      	bne.n	801862c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8018610:	882d      	ldrh	r5, [r5, #0]
 8018612:	6830      	ldr	r0, [r6, #0]
 8018614:	2300      	movs	r3, #0
 8018616:	240e      	movs	r4, #14
 8018618:	429d      	cmp	r5, r3
 801861a:	d90f      	bls.n	801863c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801861c:	fb04 0203 	mla	r2, r4, r3, r0
 8018620:	3301      	adds	r3, #1
 8018622:	7b11      	ldrb	r1, [r2, #12]
 8018624:	f36f 1145 	bfc	r1, #5, #1
 8018628:	7311      	strb	r1, [r2, #12]
 801862a:	e7f5      	b.n	8018618 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801862c:	6822      	ldr	r2, [r4, #0]
 801862e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8018632:	6802      	ldr	r2, [r0, #0]
 8018634:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018638:	3301      	adds	r3, #1
 801863a:	e7e7      	b.n	801860c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801863c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801863e:	bf00      	nop
 8018640:	20012ee0 	.word	0x20012ee0
 8018644:	20012efc 	.word	0x20012efc
 8018648:	20012f00 	.word	0x20012f00
 801864c:	20012ef4 	.word	0x20012ef4
 8018650:	20012ee4 	.word	0x20012ee4
 8018654:	20012eec 	.word	0x20012eec
 8018658:	20012efe 	.word	0x20012efe
 801865c:	20012ee8 	.word	0x20012ee8
 8018660:	20012ef8 	.word	0x20012ef8
 8018664:	20012ef0 	.word	0x20012ef0

08018668 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018668:	4b06      	ldr	r3, [pc, #24]	; (8018684 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801866a:	681b      	ldr	r3, [r3, #0]
 801866c:	b943      	cbnz	r3, 8018680 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801866e:	b139      	cbz	r1, 8018680 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018670:	4b05      	ldr	r3, [pc, #20]	; (8018688 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8018672:	801a      	strh	r2, [r3, #0]
 8018674:	4b05      	ldr	r3, [pc, #20]	; (801868c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018676:	6019      	str	r1, [r3, #0]
 8018678:	4b05      	ldr	r3, [pc, #20]	; (8018690 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801867a:	6018      	str	r0, [r3, #0]
 801867c:	f7ff bf96 	b.w	80185ac <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018680:	4770      	bx	lr
 8018682:	bf00      	nop
 8018684:	20012eec 	.word	0x20012eec
 8018688:	20012f00 	.word	0x20012f00
 801868c:	20012ee8 	.word	0x20012ee8
 8018690:	20012ee0 	.word	0x20012ee0

08018694 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018694:	b470      	push	{r4, r5, r6}
 8018696:	4c07      	ldr	r4, [pc, #28]	; (80186b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018698:	6826      	ldr	r6, [r4, #0]
 801869a:	4605      	mov	r5, r0
 801869c:	4610      	mov	r0, r2
 801869e:	9a03      	ldr	r2, [sp, #12]
 80186a0:	b936      	cbnz	r6, 80186b0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80186a2:	6025      	str	r5, [r4, #0]
 80186a4:	4c04      	ldr	r4, [pc, #16]	; (80186b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80186a6:	8021      	strh	r1, [r4, #0]
 80186a8:	bc70      	pop	{r4, r5, r6}
 80186aa:	4619      	mov	r1, r3
 80186ac:	f7ff bfdc 	b.w	8018668 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80186b0:	bc70      	pop	{r4, r5, r6}
 80186b2:	4770      	bx	lr
 80186b4:	20012f04 	.word	0x20012f04
 80186b8:	20012efc 	.word	0x20012efc

080186bc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80186bc:	4a12      	ldr	r2, [pc, #72]	; (8018708 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80186be:	8803      	ldrh	r3, [r0, #0]
 80186c0:	8812      	ldrh	r2, [r2, #0]
 80186c2:	4293      	cmp	r3, r2
 80186c4:	d207      	bcs.n	80186d6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80186c6:	4a11      	ldr	r2, [pc, #68]	; (801870c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80186c8:	6812      	ldr	r2, [r2, #0]
 80186ca:	2114      	movs	r1, #20
 80186cc:	fb01 2303 	mla	r3, r1, r3, r2
 80186d0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80186d4:	4770      	bx	lr
 80186d6:	490e      	ldr	r1, [pc, #56]	; (8018710 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80186d8:	8809      	ldrh	r1, [r1, #0]
 80186da:	4411      	add	r1, r2
 80186dc:	428b      	cmp	r3, r1
 80186de:	da04      	bge.n	80186ea <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80186e0:	1a9b      	subs	r3, r3, r2
 80186e2:	4a0c      	ldr	r2, [pc, #48]	; (8018714 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80186e4:	210e      	movs	r1, #14
 80186e6:	6812      	ldr	r2, [r2, #0]
 80186e8:	e7f0      	b.n	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80186ea:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80186ee:	4293      	cmp	r3, r2
 80186f0:	d108      	bne.n	8018704 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80186f2:	4b09      	ldr	r3, [pc, #36]	; (8018718 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80186f4:	781b      	ldrb	r3, [r3, #0]
 80186f6:	b91b      	cbnz	r3, 8018700 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80186f8:	4b08      	ldr	r3, [pc, #32]	; (801871c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80186fa:	f9b3 0000 	ldrsh.w	r0, [r3]
 80186fe:	4770      	bx	lr
 8018700:	4b07      	ldr	r3, [pc, #28]	; (8018720 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018702:	e7fa      	b.n	80186fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018704:	2000      	movs	r0, #0
 8018706:	4770      	bx	lr
 8018708:	20012efc 	.word	0x20012efc
 801870c:	20012f04 	.word	0x20012f04
 8018710:	20012f00 	.word	0x20012f00
 8018714:	20012ee4 	.word	0x20012ee4
 8018718:	20012e6c 	.word	0x20012e6c
 801871c:	20012e6e 	.word	0x20012e6e
 8018720:	20012e70 	.word	0x20012e70

08018724 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8018724:	4a12      	ldr	r2, [pc, #72]	; (8018770 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8018726:	8803      	ldrh	r3, [r0, #0]
 8018728:	8812      	ldrh	r2, [r2, #0]
 801872a:	4293      	cmp	r3, r2
 801872c:	d207      	bcs.n	801873e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801872e:	4a11      	ldr	r2, [pc, #68]	; (8018774 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018730:	6812      	ldr	r2, [r2, #0]
 8018732:	2114      	movs	r1, #20
 8018734:	fb01 2303 	mla	r3, r1, r3, r2
 8018738:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801873c:	4770      	bx	lr
 801873e:	490e      	ldr	r1, [pc, #56]	; (8018778 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8018740:	8809      	ldrh	r1, [r1, #0]
 8018742:	4411      	add	r1, r2
 8018744:	428b      	cmp	r3, r1
 8018746:	da04      	bge.n	8018752 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018748:	1a9b      	subs	r3, r3, r2
 801874a:	4a0c      	ldr	r2, [pc, #48]	; (801877c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801874c:	210e      	movs	r1, #14
 801874e:	6812      	ldr	r2, [r2, #0]
 8018750:	e7f0      	b.n	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8018752:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018756:	4293      	cmp	r3, r2
 8018758:	d108      	bne.n	801876c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801875a:	4b09      	ldr	r3, [pc, #36]	; (8018780 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801875c:	781b      	ldrb	r3, [r3, #0]
 801875e:	b91b      	cbnz	r3, 8018768 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018760:	4b08      	ldr	r3, [pc, #32]	; (8018784 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8018762:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018766:	4770      	bx	lr
 8018768:	4b07      	ldr	r3, [pc, #28]	; (8018788 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801876a:	e7fa      	b.n	8018762 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801876c:	2000      	movs	r0, #0
 801876e:	4770      	bx	lr
 8018770:	20012efc 	.word	0x20012efc
 8018774:	20012f04 	.word	0x20012f04
 8018778:	20012f00 	.word	0x20012f00
 801877c:	20012ee4 	.word	0x20012ee4
 8018780:	20012e6c 	.word	0x20012e6c
 8018784:	20012e70 	.word	0x20012e70
 8018788:	20012e6e 	.word	0x20012e6e

0801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801878c:	b510      	push	{r4, lr}
 801878e:	4a1f      	ldr	r2, [pc, #124]	; (801880c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018790:	880b      	ldrh	r3, [r1, #0]
 8018792:	8812      	ldrh	r2, [r2, #0]
 8018794:	4293      	cmp	r3, r2
 8018796:	d213      	bcs.n	80187c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018798:	4a1d      	ldr	r2, [pc, #116]	; (8018810 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801879a:	6812      	ldr	r2, [r2, #0]
 801879c:	2114      	movs	r1, #20
 801879e:	fb01 2303 	mla	r3, r1, r3, r2
 80187a2:	8a1a      	ldrh	r2, [r3, #16]
 80187a4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80187a8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80187ac:	8a5b      	ldrh	r3, [r3, #18]
 80187ae:	8004      	strh	r4, [r0, #0]
 80187b0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80187b4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80187b8:	8041      	strh	r1, [r0, #2]
 80187ba:	8082      	strh	r2, [r0, #4]
 80187bc:	80c3      	strh	r3, [r0, #6]
 80187be:	e00e      	b.n	80187de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80187c0:	4914      	ldr	r1, [pc, #80]	; (8018814 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80187c2:	8809      	ldrh	r1, [r1, #0]
 80187c4:	4411      	add	r1, r2
 80187c6:	428b      	cmp	r3, r1
 80187c8:	da0a      	bge.n	80187e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80187ca:	1a9b      	subs	r3, r3, r2
 80187cc:	4a12      	ldr	r2, [pc, #72]	; (8018818 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80187ce:	6812      	ldr	r2, [r2, #0]
 80187d0:	210e      	movs	r1, #14
 80187d2:	fb01 2303 	mla	r3, r1, r3, r2
 80187d6:	681a      	ldr	r2, [r3, #0]
 80187d8:	6002      	str	r2, [r0, #0]
 80187da:	685a      	ldr	r2, [r3, #4]
 80187dc:	6042      	str	r2, [r0, #4]
 80187de:	bd10      	pop	{r4, pc}
 80187e0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80187e4:	4293      	cmp	r3, r2
 80187e6:	d10b      	bne.n	8018800 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80187e8:	4b0c      	ldr	r3, [pc, #48]	; (801881c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80187ea:	f9b3 1000 	ldrsh.w	r1, [r3]
 80187ee:	4b0c      	ldr	r3, [pc, #48]	; (8018820 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80187f0:	8081      	strh	r1, [r0, #4]
 80187f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80187f6:	80c2      	strh	r2, [r0, #6]
 80187f8:	2300      	movs	r3, #0
 80187fa:	8003      	strh	r3, [r0, #0]
 80187fc:	8043      	strh	r3, [r0, #2]
 80187fe:	e7ee      	b.n	80187de <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018800:	2300      	movs	r3, #0
 8018802:	8003      	strh	r3, [r0, #0]
 8018804:	8043      	strh	r3, [r0, #2]
 8018806:	8083      	strh	r3, [r0, #4]
 8018808:	e7d8      	b.n	80187bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801880a:	bf00      	nop
 801880c:	20012efc 	.word	0x20012efc
 8018810:	20012f04 	.word	0x20012f04
 8018814:	20012f00 	.word	0x20012f00
 8018818:	20012ee4 	.word	0x20012ee4
 801881c:	20012e68 	.word	0x20012e68
 8018820:	20012e6a 	.word	0x20012e6a

08018824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018824:	4a17      	ldr	r2, [pc, #92]	; (8018884 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018826:	8803      	ldrh	r3, [r0, #0]
 8018828:	8812      	ldrh	r2, [r2, #0]
 801882a:	4293      	cmp	r3, r2
 801882c:	d213      	bcs.n	8018856 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801882e:	4a16      	ldr	r2, [pc, #88]	; (8018888 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018830:	6812      	ldr	r2, [r2, #0]
 8018832:	2114      	movs	r1, #20
 8018834:	fb01 2303 	mla	r3, r1, r3, r2
 8018838:	8a1a      	ldrh	r2, [r3, #16]
 801883a:	8919      	ldrh	r1, [r3, #8]
 801883c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018840:	428a      	cmp	r2, r1
 8018842:	db1d      	blt.n	8018880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018844:	8a58      	ldrh	r0, [r3, #18]
 8018846:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801884a:	895b      	ldrh	r3, [r3, #10]
 801884c:	4298      	cmp	r0, r3
 801884e:	bfac      	ite	ge
 8018850:	2000      	movge	r0, #0
 8018852:	2001      	movlt	r0, #1
 8018854:	4770      	bx	lr
 8018856:	490d      	ldr	r1, [pc, #52]	; (801888c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018858:	8809      	ldrh	r1, [r1, #0]
 801885a:	4411      	add	r1, r2
 801885c:	428b      	cmp	r3, r1
 801885e:	da0d      	bge.n	801887c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018860:	1a9b      	subs	r3, r3, r2
 8018862:	4a0b      	ldr	r2, [pc, #44]	; (8018890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018864:	6812      	ldr	r2, [r2, #0]
 8018866:	210e      	movs	r1, #14
 8018868:	fb01 2303 	mla	r3, r1, r3, r2
 801886c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018870:	891a      	ldrh	r2, [r3, #8]
 8018872:	4291      	cmp	r1, r2
 8018874:	db04      	blt.n	8018880 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018876:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801887a:	e7e6      	b.n	801884a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801887c:	2000      	movs	r0, #0
 801887e:	4770      	bx	lr
 8018880:	2001      	movs	r0, #1
 8018882:	4770      	bx	lr
 8018884:	20012efc 	.word	0x20012efc
 8018888:	20012f04 	.word	0x20012f04
 801888c:	20012f00 	.word	0x20012f00
 8018890:	20012ee4 	.word	0x20012ee4

08018894 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8018894:	4a12      	ldr	r2, [pc, #72]	; (80188e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8018896:	8803      	ldrh	r3, [r0, #0]
 8018898:	8811      	ldrh	r1, [r2, #0]
 801889a:	428b      	cmp	r3, r1
 801889c:	d20b      	bcs.n	80188b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801889e:	4a11      	ldr	r2, [pc, #68]	; (80188e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80188a0:	6812      	ldr	r2, [r2, #0]
 80188a2:	b112      	cbz	r2, 80188aa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80188a4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80188a8:	b9c0      	cbnz	r0, 80188dc <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80188aa:	4a0f      	ldr	r2, [pc, #60]	; (80188e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80188ac:	6811      	ldr	r1, [r2, #0]
 80188ae:	2214      	movs	r2, #20
 80188b0:	4353      	muls	r3, r2
 80188b2:	58c8      	ldr	r0, [r1, r3]
 80188b4:	4770      	bx	lr
 80188b6:	4a0d      	ldr	r2, [pc, #52]	; (80188ec <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80188b8:	8812      	ldrh	r2, [r2, #0]
 80188ba:	440a      	add	r2, r1
 80188bc:	4293      	cmp	r3, r2
 80188be:	da04      	bge.n	80188ca <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80188c0:	4a08      	ldr	r2, [pc, #32]	; (80188e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80188c2:	6812      	ldr	r2, [r2, #0]
 80188c4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80188c8:	4770      	bx	lr
 80188ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80188ce:	4293      	cmp	r3, r2
 80188d0:	d103      	bne.n	80188da <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80188d2:	4b07      	ldr	r3, [pc, #28]	; (80188f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80188d4:	681b      	ldr	r3, [r3, #0]
 80188d6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80188d8:	4770      	bx	lr
 80188da:	2000      	movs	r0, #0
 80188dc:	4770      	bx	lr
 80188de:	bf00      	nop
 80188e0:	20012efc 	.word	0x20012efc
 80188e4:	20012ee0 	.word	0x20012ee0
 80188e8:	20012f04 	.word	0x20012f04
 80188ec:	20012f00 	.word	0x20012f00
 80188f0:	20012e74 	.word	0x20012e74

080188f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80188f4:	4b24      	ldr	r3, [pc, #144]	; (8018988 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80188f6:	8802      	ldrh	r2, [r0, #0]
 80188f8:	8818      	ldrh	r0, [r3, #0]
 80188fa:	4282      	cmp	r2, r0
 80188fc:	d221      	bcs.n	8018942 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80188fe:	4b23      	ldr	r3, [pc, #140]	; (801898c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018900:	6819      	ldr	r1, [r3, #0]
 8018902:	2314      	movs	r3, #20
 8018904:	fb03 1302 	mla	r3, r3, r2, r1
 8018908:	6858      	ldr	r0, [r3, #4]
 801890a:	2800      	cmp	r0, #0
 801890c:	d03a      	beq.n	8018984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801890e:	4920      	ldr	r1, [pc, #128]	; (8018990 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018910:	6809      	ldr	r1, [r1, #0]
 8018912:	2900      	cmp	r1, #0
 8018914:	d036      	beq.n	8018984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018916:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801891a:	2900      	cmp	r1, #0
 801891c:	d032      	beq.n	8018984 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801891e:	891a      	ldrh	r2, [r3, #8]
 8018920:	8958      	ldrh	r0, [r3, #10]
 8018922:	4350      	muls	r0, r2
 8018924:	7c5a      	ldrb	r2, [r3, #17]
 8018926:	7cdb      	ldrb	r3, [r3, #19]
 8018928:	0952      	lsrs	r2, r2, #5
 801892a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801892e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018932:	2b0b      	cmp	r3, #11
 8018934:	bf18      	it	ne
 8018936:	0040      	lslne	r0, r0, #1
 8018938:	3003      	adds	r0, #3
 801893a:	f020 0003 	bic.w	r0, r0, #3
 801893e:	4408      	add	r0, r1
 8018940:	4770      	bx	lr
 8018942:	4b14      	ldr	r3, [pc, #80]	; (8018994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018944:	881b      	ldrh	r3, [r3, #0]
 8018946:	4403      	add	r3, r0
 8018948:	429a      	cmp	r2, r3
 801894a:	da1a      	bge.n	8018982 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801894c:	4b12      	ldr	r3, [pc, #72]	; (8018998 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801894e:	681b      	ldr	r3, [r3, #0]
 8018950:	1a10      	subs	r0, r2, r0
 8018952:	210e      	movs	r1, #14
 8018954:	fb01 3000 	mla	r0, r1, r0, r3
 8018958:	7b03      	ldrb	r3, [r0, #12]
 801895a:	f003 031f 	and.w	r3, r3, #31
 801895e:	2b0b      	cmp	r3, #11
 8018960:	d10b      	bne.n	801897a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018962:	8903      	ldrh	r3, [r0, #8]
 8018964:	8940      	ldrh	r0, [r0, #10]
 8018966:	4358      	muls	r0, r3
 8018968:	4b09      	ldr	r3, [pc, #36]	; (8018990 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801896a:	6819      	ldr	r1, [r3, #0]
 801896c:	3003      	adds	r0, #3
 801896e:	f020 0303 	bic.w	r3, r0, #3
 8018972:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018976:	4418      	add	r0, r3
 8018978:	4770      	bx	lr
 801897a:	2b0d      	cmp	r3, #13
 801897c:	d101      	bne.n	8018982 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801897e:	300d      	adds	r0, #13
 8018980:	4770      	bx	lr
 8018982:	2000      	movs	r0, #0
 8018984:	4770      	bx	lr
 8018986:	bf00      	nop
 8018988:	20012efc 	.word	0x20012efc
 801898c:	20012f04 	.word	0x20012f04
 8018990:	20012ee0 	.word	0x20012ee0
 8018994:	20012f00 	.word	0x20012f00
 8018998:	20012ee4 	.word	0x20012ee4

0801899c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801899c:	b510      	push	{r4, lr}
 801899e:	4a17      	ldr	r2, [pc, #92]	; (80189fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80189a0:	8803      	ldrh	r3, [r0, #0]
 80189a2:	8812      	ldrh	r2, [r2, #0]
 80189a4:	4293      	cmp	r3, r2
 80189a6:	d20c      	bcs.n	80189c2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80189a8:	4a15      	ldr	r2, [pc, #84]	; (8018a00 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80189aa:	6812      	ldr	r2, [r2, #0]
 80189ac:	2114      	movs	r1, #20
 80189ae:	fb01 2303 	mla	r3, r1, r3, r2
 80189b2:	7c58      	ldrb	r0, [r3, #17]
 80189b4:	0942      	lsrs	r2, r0, #5
 80189b6:	7cd8      	ldrb	r0, [r3, #19]
 80189b8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80189bc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80189c0:	bd10      	pop	{r4, pc}
 80189c2:	4910      	ldr	r1, [pc, #64]	; (8018a04 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80189c4:	8809      	ldrh	r1, [r1, #0]
 80189c6:	4411      	add	r1, r2
 80189c8:	428b      	cmp	r3, r1
 80189ca:	da09      	bge.n	80189e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80189cc:	1a9b      	subs	r3, r3, r2
 80189ce:	4a0e      	ldr	r2, [pc, #56]	; (8018a08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80189d0:	6812      	ldr	r2, [r2, #0]
 80189d2:	210e      	movs	r1, #14
 80189d4:	fb01 2303 	mla	r3, r1, r3, r2
 80189d8:	7b18      	ldrb	r0, [r3, #12]
 80189da:	f000 001f 	and.w	r0, r0, #31
 80189de:	e7ef      	b.n	80189c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80189e0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80189e4:	4293      	cmp	r3, r2
 80189e6:	d106      	bne.n	80189f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80189e8:	f7eb f89a 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 80189ec:	6803      	ldr	r3, [r0, #0]
 80189ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80189f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80189f4:	4718      	bx	r3
 80189f6:	2000      	movs	r0, #0
 80189f8:	e7e2      	b.n	80189c0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80189fa:	bf00      	nop
 80189fc:	20012efc 	.word	0x20012efc
 8018a00:	20012f04 	.word	0x20012f04
 8018a04:	20012f00 	.word	0x20012f00
 8018a08:	20012ee4 	.word	0x20012ee4

08018a0c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018a0c:	2010      	movs	r0, #16
 8018a0e:	4770      	bx	lr

08018a10 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018a10:	2000      	movs	r0, #0
 8018a12:	4770      	bx	lr

08018a14 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018a14:	4b02      	ldr	r3, [pc, #8]	; (8018a20 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018a16:	8818      	ldrh	r0, [r3, #0]
 8018a18:	0040      	lsls	r0, r0, #1
 8018a1a:	b280      	uxth	r0, r0
 8018a1c:	4770      	bx	lr
 8018a1e:	bf00      	nop
 8018a20:	20012e6e 	.word	0x20012e6e

08018a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018a24:	2bff      	cmp	r3, #255	; 0xff
 8018a26:	d050      	beq.n	8018aca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018a28:	2a0b      	cmp	r2, #11
 8018a2a:	d04a      	beq.n	8018ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018a2c:	d80e      	bhi.n	8018a4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8018a2e:	2a03      	cmp	r2, #3
 8018a30:	d03f      	beq.n	8018ab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018a32:	d804      	bhi.n	8018a3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018a34:	2a01      	cmp	r2, #1
 8018a36:	d03e      	beq.n	8018ab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018a38:	d93f      	bls.n	8018aba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8018a3a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8018a3c:	4770      	bx	lr
 8018a3e:	2a09      	cmp	r2, #9
 8018a40:	d03f      	beq.n	8018ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018a42:	d83c      	bhi.n	8018abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018a44:	2a08      	cmp	r2, #8
 8018a46:	d03a      	beq.n	8018abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018a48:	2000      	movs	r0, #0
 8018a4a:	4770      	bx	lr
 8018a4c:	2a2f      	cmp	r2, #47	; 0x2f
 8018a4e:	d024      	beq.n	8018a9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018a50:	d80d      	bhi.n	8018a6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8018a52:	2a2d      	cmp	r2, #45	; 0x2d
 8018a54:	d014      	beq.n	8018a80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018a56:	d826      	bhi.n	8018aa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018a58:	2a2c      	cmp	r2, #44	; 0x2c
 8018a5a:	d1f5      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a5c:	684b      	ldr	r3, [r1, #4]
 8018a5e:	781b      	ldrb	r3, [r3, #0]
 8018a60:	2b01      	cmp	r3, #1
 8018a62:	d018      	beq.n	8018a96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018a64:	d323      	bcc.n	8018aae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018a66:	2b02      	cmp	r3, #2
 8018a68:	d1ee      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a6a:	6880      	ldr	r0, [r0, #8]
 8018a6c:	4770      	bx	lr
 8018a6e:	2a31      	cmp	r2, #49	; 0x31
 8018a70:	d004      	beq.n	8018a7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018a72:	d328      	bcc.n	8018ac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018a74:	2a32      	cmp	r2, #50	; 0x32
 8018a76:	d026      	beq.n	8018ac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018a78:	2a33      	cmp	r2, #51	; 0x33
 8018a7a:	d1e5      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a7c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018a7e:	4770      	bx	lr
 8018a80:	684b      	ldr	r3, [r1, #4]
 8018a82:	781b      	ldrb	r3, [r3, #0]
 8018a84:	2b01      	cmp	r3, #1
 8018a86:	d004      	beq.n	8018a92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018a88:	d30b      	bcc.n	8018aa2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018a8a:	2b02      	cmp	r3, #2
 8018a8c:	d1dc      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a8e:	6900      	ldr	r0, [r0, #16]
 8018a90:	4770      	bx	lr
 8018a92:	6a00      	ldr	r0, [r0, #32]
 8018a94:	4770      	bx	lr
 8018a96:	6980      	ldr	r0, [r0, #24]
 8018a98:	4770      	bx	lr
 8018a9a:	684b      	ldr	r3, [r1, #4]
 8018a9c:	781b      	ldrb	r3, [r3, #0]
 8018a9e:	2b00      	cmp	r3, #0
 8018aa0:	d1d2      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018aa2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018aa4:	4770      	bx	lr
 8018aa6:	684b      	ldr	r3, [r1, #4]
 8018aa8:	781b      	ldrb	r3, [r3, #0]
 8018aaa:	2b00      	cmp	r3, #0
 8018aac:	d1cc      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018aae:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018ab0:	4770      	bx	lr
 8018ab2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018ab4:	4770      	bx	lr
 8018ab6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018ab8:	4770      	bx	lr
 8018aba:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018abc:	4770      	bx	lr
 8018abe:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018ac0:	4770      	bx	lr
 8018ac2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018ac4:	4770      	bx	lr
 8018ac6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018ac8:	4770      	bx	lr
 8018aca:	2a0b      	cmp	r2, #11
 8018acc:	d049      	beq.n	8018b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018ace:	d80e      	bhi.n	8018aee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018ad0:	2a03      	cmp	r2, #3
 8018ad2:	d040      	beq.n	8018b56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018ad4:	d804      	bhi.n	8018ae0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018ad6:	2a01      	cmp	r2, #1
 8018ad8:	d03f      	beq.n	8018b5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8018ada:	d940      	bls.n	8018b5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8018adc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8018ade:	4770      	bx	lr
 8018ae0:	2a09      	cmp	r2, #9
 8018ae2:	d03e      	beq.n	8018b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018ae4:	d801      	bhi.n	8018aea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018ae6:	2a08      	cmp	r2, #8
 8018ae8:	d1ae      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018aea:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8018aec:	4770      	bx	lr
 8018aee:	2a2f      	cmp	r2, #47	; 0x2f
 8018af0:	d024      	beq.n	8018b3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018af2:	d80d      	bhi.n	8018b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018af4:	2a2d      	cmp	r2, #45	; 0x2d
 8018af6:	d014      	beq.n	8018b22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018af8:	d826      	bhi.n	8018b48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8018afa:	2a2c      	cmp	r2, #44	; 0x2c
 8018afc:	d1a4      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018afe:	684b      	ldr	r3, [r1, #4]
 8018b00:	781b      	ldrb	r3, [r3, #0]
 8018b02:	2b01      	cmp	r3, #1
 8018b04:	d018      	beq.n	8018b38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018b06:	d324      	bcc.n	8018b52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018b08:	2b02      	cmp	r3, #2
 8018b0a:	d19d      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b0c:	68c0      	ldr	r0, [r0, #12]
 8018b0e:	4770      	bx	lr
 8018b10:	2a31      	cmp	r2, #49	; 0x31
 8018b12:	d004      	beq.n	8018b1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018b14:	d327      	bcc.n	8018b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018b16:	2a32      	cmp	r2, #50	; 0x32
 8018b18:	d025      	beq.n	8018b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018b1a:	2a33      	cmp	r2, #51	; 0x33
 8018b1c:	d194      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b1e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018b20:	4770      	bx	lr
 8018b22:	684b      	ldr	r3, [r1, #4]
 8018b24:	781b      	ldrb	r3, [r3, #0]
 8018b26:	2b01      	cmp	r3, #1
 8018b28:	d004      	beq.n	8018b34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8018b2a:	d30b      	bcc.n	8018b44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8018b2c:	2b02      	cmp	r3, #2
 8018b2e:	d18b      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b30:	6940      	ldr	r0, [r0, #20]
 8018b32:	4770      	bx	lr
 8018b34:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018b36:	4770      	bx	lr
 8018b38:	69c0      	ldr	r0, [r0, #28]
 8018b3a:	4770      	bx	lr
 8018b3c:	684b      	ldr	r3, [r1, #4]
 8018b3e:	781b      	ldrb	r3, [r3, #0]
 8018b40:	2b00      	cmp	r3, #0
 8018b42:	d181      	bne.n	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b44:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018b46:	4770      	bx	lr
 8018b48:	684b      	ldr	r3, [r1, #4]
 8018b4a:	781b      	ldrb	r3, [r3, #0]
 8018b4c:	2b00      	cmp	r3, #0
 8018b4e:	f47f af7b 	bne.w	8018a48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b52:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018b54:	4770      	bx	lr
 8018b56:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018b58:	4770      	bx	lr
 8018b5a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018b5c:	4770      	bx	lr
 8018b5e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018b60:	4770      	bx	lr
 8018b62:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018b64:	4770      	bx	lr
 8018b66:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018b68:	4770      	bx	lr

08018b6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b6e:	b087      	sub	sp, #28
 8018b70:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018b72:	9205      	str	r2, [sp, #20]
 8018b74:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018b78:	9202      	str	r2, [sp, #8]
 8018b7a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018b7e:	9101      	str	r1, [sp, #4]
 8018b80:	6841      	ldr	r1, [r0, #4]
 8018b82:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018b86:	fb01 2404 	mla	r4, r1, r4, r2
 8018b8a:	6802      	ldr	r2, [r0, #0]
 8018b8c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b90:	f8de 2000 	ldr.w	r2, [lr]
 8018b94:	9203      	str	r2, [sp, #12]
 8018b96:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018b9a:	3204      	adds	r2, #4
 8018b9c:	9204      	str	r2, [sp, #16]
 8018b9e:	9a02      	ldr	r2, [sp, #8]
 8018ba0:	43d6      	mvns	r6, r2
 8018ba2:	b2f6      	uxtb	r6, r6
 8018ba4:	9a01      	ldr	r2, [sp, #4]
 8018ba6:	2a00      	cmp	r2, #0
 8018ba8:	dc03      	bgt.n	8018bb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018baa:	9a05      	ldr	r2, [sp, #20]
 8018bac:	2a00      	cmp	r2, #0
 8018bae:	f340 8129 	ble.w	8018e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018bb2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018bb4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018bb8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018bbc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018bc0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018bc2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018bc6:	2b00      	cmp	r3, #0
 8018bc8:	dd0e      	ble.n	8018be8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018bca:	1408      	asrs	r0, r1, #16
 8018bcc:	d405      	bmi.n	8018bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bce:	4560      	cmp	r0, ip
 8018bd0:	da03      	bge.n	8018bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bd2:	1410      	asrs	r0, r2, #16
 8018bd4:	d401      	bmi.n	8018bda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bd6:	42b8      	cmp	r0, r7
 8018bd8:	db07      	blt.n	8018bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018bda:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018bdc:	4401      	add	r1, r0
 8018bde:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018be0:	3b01      	subs	r3, #1
 8018be2:	4402      	add	r2, r0
 8018be4:	3402      	adds	r4, #2
 8018be6:	e7ee      	b.n	8018bc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018be8:	d071      	beq.n	8018cce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018bea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018bec:	1e58      	subs	r0, r3, #1
 8018bee:	fb05 1500 	mla	r5, r5, r0, r1
 8018bf2:	142d      	asrs	r5, r5, #16
 8018bf4:	d45f      	bmi.n	8018cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018bf6:	4565      	cmp	r5, ip
 8018bf8:	da5d      	bge.n	8018cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018bfa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018bfc:	fb05 2000 	mla	r0, r5, r0, r2
 8018c00:	1400      	asrs	r0, r0, #16
 8018c02:	d458      	bmi.n	8018cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018c04:	42b8      	cmp	r0, r7
 8018c06:	da56      	bge.n	8018cb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018c08:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8018c0c:	4699      	mov	r9, r3
 8018c0e:	46a2      	mov	sl, r4
 8018c10:	f1b9 0f00 	cmp.w	r9, #0
 8018c14:	dd57      	ble.n	8018cc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018c16:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018c1a:	9803      	ldr	r0, [sp, #12]
 8018c1c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018c20:	140d      	asrs	r5, r1, #16
 8018c22:	fb07 000c 	mla	r0, r7, ip, r0
 8018c26:	f109 39ff 	add.w	r9, r9, #4294967295
 8018c2a:	5d40      	ldrb	r0, [r0, r5]
 8018c2c:	9d04      	ldr	r5, [sp, #16]
 8018c2e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018c32:	f8ba 5000 	ldrh.w	r5, [sl]
 8018c36:	122f      	asrs	r7, r5, #8
 8018c38:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018c3c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018c40:	fb17 f706 	smulbb	r7, r7, r6
 8018c44:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018c48:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018c4c:	00ed      	lsls	r5, r5, #3
 8018c4e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018c52:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018c56:	10c7      	asrs	r7, r0, #3
 8018c58:	b2ed      	uxtb	r5, r5
 8018c5a:	00c0      	lsls	r0, r0, #3
 8018c5c:	fb18 f806 	smulbb	r8, r8, r6
 8018c60:	fb15 f506 	smulbb	r5, r5, r6
 8018c64:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018c68:	b2c0      	uxtb	r0, r0
 8018c6a:	fa1f fc8c 	uxth.w	ip, ip
 8018c6e:	fb07 870b 	mla	r7, r7, fp, r8
 8018c72:	fb00 500b 	mla	r0, r0, fp, r5
 8018c76:	b280      	uxth	r0, r0
 8018c78:	b2bf      	uxth	r7, r7
 8018c7a:	f10c 0501 	add.w	r5, ip, #1
 8018c7e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018c82:	f107 0801 	add.w	r8, r7, #1
 8018c86:	1c45      	adds	r5, r0, #1
 8018c88:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018c8c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018c90:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018c92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018c96:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018c9a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018c9e:	ea45 0c0c 	orr.w	ip, r5, ip
 8018ca2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018ca6:	4401      	add	r1, r0
 8018ca8:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018caa:	ea4c 0c08 	orr.w	ip, ip, r8
 8018cae:	f82a cb02 	strh.w	ip, [sl], #2
 8018cb2:	4402      	add	r2, r0
 8018cb4:	e7ac      	b.n	8018c10 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018cb6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8018cba:	f04f 0800 	mov.w	r8, #0
 8018cbe:	eb03 0008 	add.w	r0, r3, r8
 8018cc2:	2800      	cmp	r0, #0
 8018cc4:	dc41      	bgt.n	8018d4a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018cc6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018cca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018cce:	9b01      	ldr	r3, [sp, #4]
 8018cd0:	2b00      	cmp	r3, #0
 8018cd2:	f340 8097 	ble.w	8018e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018cd6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018cda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018cde:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018ce2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ce4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018ce8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018cec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018cf0:	eef0 6a62 	vmov.f32	s13, s5
 8018cf4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018cf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018cfc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018d00:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018d04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018d08:	eef0 6a43 	vmov.f32	s13, s6
 8018d0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018d10:	ee12 2a90 	vmov	r2, s5
 8018d14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018d18:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d1c:	ee13 2a10 	vmov	r2, s6
 8018d20:	9313      	str	r3, [sp, #76]	; 0x4c
 8018d22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d24:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d28:	9314      	str	r3, [sp, #80]	; 0x50
 8018d2a:	9b01      	ldr	r3, [sp, #4]
 8018d2c:	9a05      	ldr	r2, [sp, #20]
 8018d2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d32:	3b01      	subs	r3, #1
 8018d34:	9301      	str	r3, [sp, #4]
 8018d36:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018d3a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d3c:	eeb0 3a67 	vmov.f32	s6, s15
 8018d40:	bf08      	it	eq
 8018d42:	4613      	moveq	r3, r2
 8018d44:	eef0 2a47 	vmov.f32	s5, s14
 8018d48:	e72c      	b.n	8018ba4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018d4a:	140f      	asrs	r7, r1, #16
 8018d4c:	d453      	bmi.n	8018df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d4e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018d52:	42bd      	cmp	r5, r7
 8018d54:	dd4f      	ble.n	8018df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d56:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018d5a:	d44c      	bmi.n	8018df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d5c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018d60:	4560      	cmp	r0, ip
 8018d62:	dd48      	ble.n	8018df6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d64:	9803      	ldr	r0, [sp, #12]
 8018d66:	b22d      	sxth	r5, r5
 8018d68:	fb0c 0505 	mla	r5, ip, r5, r0
 8018d6c:	5de8      	ldrb	r0, [r5, r7]
 8018d6e:	9d04      	ldr	r5, [sp, #16]
 8018d70:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018d74:	f06f 0501 	mvn.w	r5, #1
 8018d78:	fb05 fb08 	mul.w	fp, r5, r8
 8018d7c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018d80:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018d84:	122f      	asrs	r7, r5, #8
 8018d86:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018d8a:	fb17 f706 	smulbb	r7, r7, r6
 8018d8e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018d92:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018d96:	00ed      	lsls	r5, r5, #3
 8018d98:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018d9c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018da0:	10c7      	asrs	r7, r0, #3
 8018da2:	b2ed      	uxtb	r5, r5
 8018da4:	00c0      	lsls	r0, r0, #3
 8018da6:	fb19 f906 	smulbb	r9, r9, r6
 8018daa:	fb15 f506 	smulbb	r5, r5, r6
 8018dae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018db2:	b2c0      	uxtb	r0, r0
 8018db4:	fa1f fc8c 	uxth.w	ip, ip
 8018db8:	fb07 970a 	mla	r7, r7, sl, r9
 8018dbc:	fb00 500a 	mla	r0, r0, sl, r5
 8018dc0:	b2bf      	uxth	r7, r7
 8018dc2:	b280      	uxth	r0, r0
 8018dc4:	f10c 0501 	add.w	r5, ip, #1
 8018dc8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018dcc:	f107 0901 	add.w	r9, r7, #1
 8018dd0:	1c45      	adds	r5, r0, #1
 8018dd2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018dd6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018dda:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018dde:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018de2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018de6:	ea45 0c0c 	orr.w	ip, r5, ip
 8018dea:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018dee:	ea4c 0c09 	orr.w	ip, ip, r9
 8018df2:	f824 c00b 	strh.w	ip, [r4, fp]
 8018df6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018df8:	4401      	add	r1, r0
 8018dfa:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018dfc:	f108 38ff 	add.w	r8, r8, #4294967295
 8018e00:	4402      	add	r2, r0
 8018e02:	e75c      	b.n	8018cbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018e04:	b007      	add	sp, #28
 8018e06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018e0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e0e:	b085      	sub	sp, #20
 8018e10:	4693      	mov	fp, r2
 8018e12:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018e14:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018e16:	6870      	ldr	r0, [r6, #4]
 8018e18:	9100      	str	r1, [sp, #0]
 8018e1a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018e1e:	fb00 2404 	mla	r4, r0, r4, r2
 8018e22:	6832      	ldr	r2, [r6, #0]
 8018e24:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018e28:	682a      	ldr	r2, [r5, #0]
 8018e2a:	9201      	str	r2, [sp, #4]
 8018e2c:	686a      	ldr	r2, [r5, #4]
 8018e2e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018e32:	3204      	adds	r2, #4
 8018e34:	9202      	str	r2, [sp, #8]
 8018e36:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018e3a:	9a00      	ldr	r2, [sp, #0]
 8018e3c:	2a00      	cmp	r2, #0
 8018e3e:	dc03      	bgt.n	8018e48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018e40:	f1bb 0f00 	cmp.w	fp, #0
 8018e44:	f340 80a0 	ble.w	8018f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018e48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018e4a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018e4e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018e52:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018e56:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018e58:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018e5c:	2b00      	cmp	r3, #0
 8018e5e:	dd0c      	ble.n	8018e7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018e60:	1406      	asrs	r6, r0, #16
 8018e62:	d405      	bmi.n	8018e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018e64:	454e      	cmp	r6, r9
 8018e66:	da03      	bge.n	8018e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018e68:	1416      	asrs	r6, r2, #16
 8018e6a:	d401      	bmi.n	8018e70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018e6c:	4546      	cmp	r6, r8
 8018e6e:	db05      	blt.n	8018e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018e70:	4470      	add	r0, lr
 8018e72:	4462      	add	r2, ip
 8018e74:	3b01      	subs	r3, #1
 8018e76:	3402      	adds	r4, #2
 8018e78:	e7f0      	b.n	8018e5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018e7a:	d00f      	beq.n	8018e9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018e7c:	1e5e      	subs	r6, r3, #1
 8018e7e:	fb0e 0706 	mla	r7, lr, r6, r0
 8018e82:	143f      	asrs	r7, r7, #16
 8018e84:	d541      	bpl.n	8018f0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018e86:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018e8a:	4698      	mov	r8, r3
 8018e8c:	9603      	str	r6, [sp, #12]
 8018e8e:	f1b8 0f00 	cmp.w	r8, #0
 8018e92:	dc59      	bgt.n	8018f48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018e98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018e9c:	9b00      	ldr	r3, [sp, #0]
 8018e9e:	2b00      	cmp	r3, #0
 8018ea0:	dd72      	ble.n	8018f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018ea2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018ea6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018eaa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018eae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018eb0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018eb4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018eb8:	eeb0 6a62 	vmov.f32	s12, s5
 8018ebc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ec0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ec4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ec8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018ecc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ed0:	eeb0 6a43 	vmov.f32	s12, s6
 8018ed4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ed8:	ee12 2a90 	vmov	r2, s5
 8018edc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ee0:	fb92 fef3 	sdiv	lr, r2, r3
 8018ee4:	ee13 2a10 	vmov	r2, s6
 8018ee8:	fb92 fcf3 	sdiv	ip, r2, r3
 8018eec:	9b00      	ldr	r3, [sp, #0]
 8018eee:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ef2:	3b01      	subs	r3, #1
 8018ef4:	9300      	str	r3, [sp, #0]
 8018ef6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018efa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018efc:	eeb0 3a67 	vmov.f32	s6, s15
 8018f00:	bf08      	it	eq
 8018f02:	465b      	moveq	r3, fp
 8018f04:	eef0 2a47 	vmov.f32	s5, s14
 8018f08:	e797      	b.n	8018e3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018f0a:	454f      	cmp	r7, r9
 8018f0c:	dabb      	bge.n	8018e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018f0e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018f12:	1436      	asrs	r6, r6, #16
 8018f14:	d4b7      	bmi.n	8018e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018f16:	4546      	cmp	r6, r8
 8018f18:	dab5      	bge.n	8018e86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018f1a:	461e      	mov	r6, r3
 8018f1c:	46a0      	mov	r8, r4
 8018f1e:	2e00      	cmp	r6, #0
 8018f20:	ddb8      	ble.n	8018e94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018f22:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018f26:	9901      	ldr	r1, [sp, #4]
 8018f28:	1417      	asrs	r7, r2, #16
 8018f2a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018f2e:	fb0a 1707 	mla	r7, sl, r7, r1
 8018f32:	9902      	ldr	r1, [sp, #8]
 8018f34:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018f38:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018f3c:	f828 7b02 	strh.w	r7, [r8], #2
 8018f40:	4470      	add	r0, lr
 8018f42:	4462      	add	r2, ip
 8018f44:	3e01      	subs	r6, #1
 8018f46:	e7ea      	b.n	8018f1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018f48:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018f4c:	d417      	bmi.n	8018f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f4e:	68ae      	ldr	r6, [r5, #8]
 8018f50:	454e      	cmp	r6, r9
 8018f52:	dd14      	ble.n	8018f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f54:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018f58:	d411      	bmi.n	8018f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f5a:	68ef      	ldr	r7, [r5, #12]
 8018f5c:	4557      	cmp	r7, sl
 8018f5e:	dd0e      	ble.n	8018f7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f60:	9f01      	ldr	r7, [sp, #4]
 8018f62:	b236      	sxth	r6, r6
 8018f64:	fb0a 7606 	mla	r6, sl, r6, r7
 8018f68:	9f02      	ldr	r7, [sp, #8]
 8018f6a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018f6e:	f06f 0101 	mvn.w	r1, #1
 8018f72:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018f76:	fb01 f608 	mul.w	r6, r1, r8
 8018f7a:	9903      	ldr	r1, [sp, #12]
 8018f7c:	538f      	strh	r7, [r1, r6]
 8018f7e:	4470      	add	r0, lr
 8018f80:	4462      	add	r2, ip
 8018f82:	f108 38ff 	add.w	r8, r8, #4294967295
 8018f86:	e782      	b.n	8018e8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018f88:	b005      	add	sp, #20
 8018f8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018f8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f92:	b087      	sub	sp, #28
 8018f94:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018f96:	9205      	str	r2, [sp, #20]
 8018f98:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018f9c:	9203      	str	r2, [sp, #12]
 8018f9e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018fa2:	9102      	str	r1, [sp, #8]
 8018fa4:	6861      	ldr	r1, [r4, #4]
 8018fa6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018faa:	fb01 2000 	mla	r0, r1, r0, r2
 8018fae:	6822      	ldr	r2, [r4, #0]
 8018fb0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018fb4:	9200      	str	r2, [sp, #0]
 8018fb6:	f8dc 2000 	ldr.w	r2, [ip]
 8018fba:	9204      	str	r2, [sp, #16]
 8018fbc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018fc0:	3204      	adds	r2, #4
 8018fc2:	9201      	str	r2, [sp, #4]
 8018fc4:	9a03      	ldr	r2, [sp, #12]
 8018fc6:	43d5      	mvns	r5, r2
 8018fc8:	b2ed      	uxtb	r5, r5
 8018fca:	9a02      	ldr	r2, [sp, #8]
 8018fcc:	2a00      	cmp	r2, #0
 8018fce:	dc03      	bgt.n	8018fd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018fd0:	9a05      	ldr	r2, [sp, #20]
 8018fd2:	2a00      	cmp	r2, #0
 8018fd4:	f340 812c 	ble.w	8019230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018fd8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018fda:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018fde:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018fe2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018fe6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018fe8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018fec:	2b00      	cmp	r3, #0
 8018fee:	dd10      	ble.n	8019012 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018ff0:	140c      	asrs	r4, r1, #16
 8018ff2:	d405      	bmi.n	8019000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018ff4:	4574      	cmp	r4, lr
 8018ff6:	da03      	bge.n	8019000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018ff8:	1414      	asrs	r4, r2, #16
 8018ffa:	d401      	bmi.n	8019000 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018ffc:	42bc      	cmp	r4, r7
 8018ffe:	db09      	blt.n	8019014 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019000:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019002:	9800      	ldr	r0, [sp, #0]
 8019004:	4421      	add	r1, r4
 8019006:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019008:	3002      	adds	r0, #2
 801900a:	4422      	add	r2, r4
 801900c:	3b01      	subs	r3, #1
 801900e:	9000      	str	r0, [sp, #0]
 8019010:	e7ec      	b.n	8018fec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019012:	d071      	beq.n	80190f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019014:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019016:	1e5c      	subs	r4, r3, #1
 8019018:	fb06 1604 	mla	r6, r6, r4, r1
 801901c:	1436      	asrs	r6, r6, #16
 801901e:	d45d      	bmi.n	80190dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019020:	4576      	cmp	r6, lr
 8019022:	da5b      	bge.n	80190dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019024:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019026:	fb06 2404 	mla	r4, r6, r4, r2
 801902a:	1424      	asrs	r4, r4, #16
 801902c:	d456      	bmi.n	80190dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801902e:	42bc      	cmp	r4, r7
 8019030:	da54      	bge.n	80190dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019032:	f8dd 9000 	ldr.w	r9, [sp]
 8019036:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801903a:	4698      	mov	r8, r3
 801903c:	f1b8 0f00 	cmp.w	r8, #0
 8019040:	dd54      	ble.n	80190ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019042:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019046:	9804      	ldr	r0, [sp, #16]
 8019048:	1414      	asrs	r4, r2, #16
 801904a:	fb07 0404 	mla	r4, r7, r4, r0
 801904e:	140e      	asrs	r6, r1, #16
 8019050:	9801      	ldr	r0, [sp, #4]
 8019052:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019056:	f8b9 4000 	ldrh.w	r4, [r9]
 801905a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801905e:	eb00 0b0e 	add.w	fp, r0, lr
 8019062:	1227      	asrs	r7, r4, #8
 8019064:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019068:	f89b b001 	ldrb.w	fp, [fp, #1]
 801906c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019070:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019072:	fb16 f60a 	smulbb	r6, r6, sl
 8019076:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801907a:	fb07 6705 	mla	r7, r7, r5, r6
 801907e:	10e6      	asrs	r6, r4, #3
 8019080:	00e4      	lsls	r4, r4, #3
 8019082:	b2e4      	uxtb	r4, r4
 8019084:	fb1b fb0a 	smulbb	fp, fp, sl
 8019088:	fb14 f405 	smulbb	r4, r4, r5
 801908c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019090:	b2bf      	uxth	r7, r7
 8019092:	fb06 b605 	mla	r6, r6, r5, fp
 8019096:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801909a:	b2b6      	uxth	r6, r6
 801909c:	fa1f fe8e 	uxth.w	lr, lr
 80190a0:	1c7c      	adds	r4, r7, #1
 80190a2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80190a6:	f106 0b01 	add.w	fp, r6, #1
 80190aa:	f10e 0401 	add.w	r4, lr, #1
 80190ae:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80190b2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80190b6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80190ba:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80190be:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80190c2:	4327      	orrs	r7, r4
 80190c4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80190c8:	4401      	add	r1, r0
 80190ca:	9814      	ldr	r0, [sp, #80]	; 0x50
 80190cc:	ea47 070b 	orr.w	r7, r7, fp
 80190d0:	f829 7b02 	strh.w	r7, [r9], #2
 80190d4:	4402      	add	r2, r0
 80190d6:	f108 38ff 	add.w	r8, r8, #4294967295
 80190da:	e7af      	b.n	801903c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80190dc:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80190e0:	f04f 0e00 	mov.w	lr, #0
 80190e4:	eb03 040e 	add.w	r4, r3, lr
 80190e8:	2c00      	cmp	r4, #0
 80190ea:	dc43      	bgt.n	8019174 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80190ec:	9a00      	ldr	r2, [sp, #0]
 80190ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80190f2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80190f6:	9300      	str	r3, [sp, #0]
 80190f8:	9b02      	ldr	r3, [sp, #8]
 80190fa:	2b00      	cmp	r3, #0
 80190fc:	f340 8098 	ble.w	8019230 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019100:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019104:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019108:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801910c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801910e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019112:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019116:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801911a:	eef0 6a62 	vmov.f32	s13, s5
 801911e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019122:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019126:	ee77 2a62 	vsub.f32	s5, s14, s5
 801912a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801912e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019132:	eef0 6a43 	vmov.f32	s13, s6
 8019136:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801913a:	ee12 2a90 	vmov	r2, s5
 801913e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019142:	fb92 f3f3 	sdiv	r3, r2, r3
 8019146:	ee13 2a10 	vmov	r2, s6
 801914a:	9313      	str	r3, [sp, #76]	; 0x4c
 801914c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801914e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019152:	9314      	str	r3, [sp, #80]	; 0x50
 8019154:	9b02      	ldr	r3, [sp, #8]
 8019156:	9a05      	ldr	r2, [sp, #20]
 8019158:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801915c:	3b01      	subs	r3, #1
 801915e:	9302      	str	r3, [sp, #8]
 8019160:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019164:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019166:	eeb0 3a67 	vmov.f32	s6, s15
 801916a:	bf08      	it	eq
 801916c:	4613      	moveq	r3, r2
 801916e:	eef0 2a47 	vmov.f32	s5, s14
 8019172:	e72a      	b.n	8018fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019174:	140f      	asrs	r7, r1, #16
 8019176:	d454      	bmi.n	8019222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019178:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801917c:	42be      	cmp	r6, r7
 801917e:	dd50      	ble.n	8019222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019180:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019184:	d44d      	bmi.n	8019222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019186:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801918a:	4544      	cmp	r4, r8
 801918c:	dd49      	ble.n	8019222 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801918e:	9c04      	ldr	r4, [sp, #16]
 8019190:	b236      	sxth	r6, r6
 8019192:	fb08 4606 	mla	r6, r8, r6, r4
 8019196:	f06f 0001 	mvn.w	r0, #1
 801919a:	f816 8007 	ldrb.w	r8, [r6, r7]
 801919e:	9c01      	ldr	r4, [sp, #4]
 80191a0:	fb00 fa0e 	mul.w	sl, r0, lr
 80191a4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80191a8:	9800      	ldr	r0, [sp, #0]
 80191aa:	eb04 0b08 	add.w	fp, r4, r8
 80191ae:	f830 400a 	ldrh.w	r4, [r0, sl]
 80191b2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80191b6:	9801      	ldr	r0, [sp, #4]
 80191b8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80191bc:	f810 8008 	ldrb.w	r8, [r0, r8]
 80191c0:	9800      	ldr	r0, [sp, #0]
 80191c2:	1227      	asrs	r7, r4, #8
 80191c4:	fb16 f609 	smulbb	r6, r6, r9
 80191c8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80191cc:	fb07 6705 	mla	r7, r7, r5, r6
 80191d0:	10e6      	asrs	r6, r4, #3
 80191d2:	00e4      	lsls	r4, r4, #3
 80191d4:	b2e4      	uxtb	r4, r4
 80191d6:	fb1b fb09 	smulbb	fp, fp, r9
 80191da:	fb14 f405 	smulbb	r4, r4, r5
 80191de:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80191e2:	b2bf      	uxth	r7, r7
 80191e4:	fb06 b605 	mla	r6, r6, r5, fp
 80191e8:	fb08 4809 	mla	r8, r8, r9, r4
 80191ec:	b2b6      	uxth	r6, r6
 80191ee:	fa1f f888 	uxth.w	r8, r8
 80191f2:	1c7c      	adds	r4, r7, #1
 80191f4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80191f8:	f106 0b01 	add.w	fp, r6, #1
 80191fc:	f108 0401 	add.w	r4, r8, #1
 8019200:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8019204:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019208:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801920c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019210:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019214:	4327      	orrs	r7, r4
 8019216:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801921a:	ea47 070b 	orr.w	r7, r7, fp
 801921e:	f820 700a 	strh.w	r7, [r0, sl]
 8019222:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019224:	4401      	add	r1, r0
 8019226:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019228:	f10e 3eff 	add.w	lr, lr, #4294967295
 801922c:	4402      	add	r2, r0
 801922e:	e759      	b.n	80190e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019230:	b007      	add	sp, #28
 8019232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019238 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801923c:	b085      	sub	sp, #20
 801923e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019242:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019244:	9203      	str	r2, [sp, #12]
 8019246:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801924a:	6870      	ldr	r0, [r6, #4]
 801924c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801924e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8019252:	686f      	ldr	r7, [r5, #4]
 8019254:	9101      	str	r1, [sp, #4]
 8019256:	fb00 2404 	mla	r4, r0, r4, r2
 801925a:	6832      	ldr	r2, [r6, #0]
 801925c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019260:	682a      	ldr	r2, [r5, #0]
 8019262:	9202      	str	r2, [sp, #8]
 8019264:	3704      	adds	r7, #4
 8019266:	9a01      	ldr	r2, [sp, #4]
 8019268:	2a00      	cmp	r2, #0
 801926a:	dc03      	bgt.n	8019274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801926c:	9a03      	ldr	r2, [sp, #12]
 801926e:	2a00      	cmp	r2, #0
 8019270:	f340 80cc 	ble.w	801940c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019274:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019276:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801927a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801927e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019282:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019284:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019288:	2b00      	cmp	r3, #0
 801928a:	dd0d      	ble.n	80192a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801928c:	1406      	asrs	r6, r0, #16
 801928e:	d405      	bmi.n	801929c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019290:	454e      	cmp	r6, r9
 8019292:	da03      	bge.n	801929c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019294:	1416      	asrs	r6, r2, #16
 8019296:	d401      	bmi.n	801929c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019298:	4546      	cmp	r6, r8
 801929a:	db06      	blt.n	80192aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801929c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801929e:	4460      	add	r0, ip
 80192a0:	4432      	add	r2, r6
 80192a2:	3b01      	subs	r3, #1
 80192a4:	3402      	adds	r4, #2
 80192a6:	e7ef      	b.n	8019288 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80192a8:	d00f      	beq.n	80192ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80192aa:	1e5e      	subs	r6, r3, #1
 80192ac:	fb0c 0e06 	mla	lr, ip, r6, r0
 80192b0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80192b4:	d543      	bpl.n	801933e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80192b6:	4698      	mov	r8, r3
 80192b8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80192bc:	f1b8 0f00 	cmp.w	r8, #0
 80192c0:	dc71      	bgt.n	80193a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80192c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80192c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80192ca:	9b01      	ldr	r3, [sp, #4]
 80192cc:	2b00      	cmp	r3, #0
 80192ce:	f340 809d 	ble.w	801940c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80192d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80192d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80192da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80192de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80192e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80192e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80192e8:	eeb0 6a62 	vmov.f32	s12, s5
 80192ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 80192f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80192f8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80192fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019300:	eeb0 6a43 	vmov.f32	s12, s6
 8019304:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019308:	ee12 2a90 	vmov	r2, s5
 801930c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019310:	fb92 fcf3 	sdiv	ip, r2, r3
 8019314:	ee13 2a10 	vmov	r2, s6
 8019318:	fb92 f3f3 	sdiv	r3, r2, r3
 801931c:	9312      	str	r3, [sp, #72]	; 0x48
 801931e:	9b01      	ldr	r3, [sp, #4]
 8019320:	9a03      	ldr	r2, [sp, #12]
 8019322:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019326:	3b01      	subs	r3, #1
 8019328:	9301      	str	r3, [sp, #4]
 801932a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801932e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019330:	eeb0 3a67 	vmov.f32	s6, s15
 8019334:	bf08      	it	eq
 8019336:	4613      	moveq	r3, r2
 8019338:	eef0 2a47 	vmov.f32	s5, s14
 801933c:	e793      	b.n	8019266 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801933e:	45ce      	cmp	lr, r9
 8019340:	dab9      	bge.n	80192b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019342:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019344:	fb01 2606 	mla	r6, r1, r6, r2
 8019348:	1436      	asrs	r6, r6, #16
 801934a:	d4b4      	bmi.n	80192b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801934c:	4546      	cmp	r6, r8
 801934e:	dab2      	bge.n	80192b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019350:	4698      	mov	r8, r3
 8019352:	46a2      	mov	sl, r4
 8019354:	f1b8 0f00 	cmp.w	r8, #0
 8019358:	ddb3      	ble.n	80192c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801935a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801935e:	9902      	ldr	r1, [sp, #8]
 8019360:	1416      	asrs	r6, r2, #16
 8019362:	fb09 1606 	mla	r6, r9, r6, r1
 8019366:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801936a:	492a      	ldr	r1, [pc, #168]	; (8019414 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801936c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019370:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019374:	eb07 0b0e 	add.w	fp, r7, lr
 8019378:	4460      	add	r0, ip
 801937a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801937e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8019382:	00f6      	lsls	r6, r6, #3
 8019384:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019388:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801938c:	ea49 0606 	orr.w	r6, r9, r6
 8019390:	f817 900e 	ldrb.w	r9, [r7, lr]
 8019394:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019396:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801939a:	f82a 6b02 	strh.w	r6, [sl], #2
 801939e:	440a      	add	r2, r1
 80193a0:	f108 38ff 	add.w	r8, r8, #4294967295
 80193a4:	e7d6      	b.n	8019354 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80193a6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80193aa:	d429      	bmi.n	8019400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193ac:	68ae      	ldr	r6, [r5, #8]
 80193ae:	454e      	cmp	r6, r9
 80193b0:	dd26      	ble.n	8019400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193b2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80193b6:	d423      	bmi.n	8019400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193b8:	68e9      	ldr	r1, [r5, #12]
 80193ba:	4559      	cmp	r1, fp
 80193bc:	dd20      	ble.n	8019400 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193be:	9902      	ldr	r1, [sp, #8]
 80193c0:	fa0f fe86 	sxth.w	lr, r6
 80193c4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80193c8:	f06f 0101 	mvn.w	r1, #1
 80193cc:	f81e e009 	ldrb.w	lr, [lr, r9]
 80193d0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80193d4:	eb07 060e 	add.w	r6, r7, lr
 80193d8:	fb01 f908 	mul.w	r9, r1, r8
 80193dc:	f896 b002 	ldrb.w	fp, [r6, #2]
 80193e0:	7876      	ldrb	r6, [r6, #1]
 80193e2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80193e6:	00f6      	lsls	r6, r6, #3
 80193e8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80193ec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80193f0:	ea4b 0606 	orr.w	r6, fp, r6
 80193f4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80193f8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80193fc:	f82a 6009 	strh.w	r6, [sl, r9]
 8019400:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019402:	4460      	add	r0, ip
 8019404:	440a      	add	r2, r1
 8019406:	f108 38ff 	add.w	r8, r8, #4294967295
 801940a:	e757      	b.n	80192bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801940c:	b005      	add	sp, #20
 801940e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019412:	bf00      	nop
 8019414:	fffff800 	.word	0xfffff800

08019418 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801941c:	b087      	sub	sp, #28
 801941e:	468b      	mov	fp, r1
 8019420:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019422:	9204      	str	r2, [sp, #16]
 8019424:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019428:	9205      	str	r2, [sp, #20]
 801942a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801942e:	6841      	ldr	r1, [r0, #4]
 8019430:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019434:	fb01 2404 	mla	r4, r1, r4, r2
 8019438:	6802      	ldr	r2, [r0, #0]
 801943a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801943e:	f8dc 2000 	ldr.w	r2, [ip]
 8019442:	9201      	str	r2, [sp, #4]
 8019444:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019448:	3204      	adds	r2, #4
 801944a:	9202      	str	r2, [sp, #8]
 801944c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019450:	f1bb 0f00 	cmp.w	fp, #0
 8019454:	dc03      	bgt.n	801945e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8019456:	9a04      	ldr	r2, [sp, #16]
 8019458:	2a00      	cmp	r2, #0
 801945a:	f340 8138 	ble.w	80196ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801945e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019460:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019464:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019468:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801946c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801946e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019472:	2b00      	cmp	r3, #0
 8019474:	dd0e      	ble.n	8019494 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019476:	1402      	asrs	r2, r0, #16
 8019478:	d405      	bmi.n	8019486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801947a:	42ba      	cmp	r2, r7
 801947c:	da03      	bge.n	8019486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801947e:	140a      	asrs	r2, r1, #16
 8019480:	d401      	bmi.n	8019486 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019482:	42b2      	cmp	r2, r6
 8019484:	db07      	blt.n	8019496 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019486:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019488:	4410      	add	r0, r2
 801948a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801948c:	3b01      	subs	r3, #1
 801948e:	4411      	add	r1, r2
 8019490:	3402      	adds	r4, #2
 8019492:	e7ee      	b.n	8019472 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019494:	d019      	beq.n	80194ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019496:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019498:	1e5a      	subs	r2, r3, #1
 801949a:	fb05 0502 	mla	r5, r5, r2, r0
 801949e:	142d      	asrs	r5, r5, #16
 80194a0:	d409      	bmi.n	80194b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80194a2:	42bd      	cmp	r5, r7
 80194a4:	da07      	bge.n	80194b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80194a6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80194a8:	fb05 1202 	mla	r2, r5, r2, r1
 80194ac:	1412      	asrs	r2, r2, #16
 80194ae:	d402      	bmi.n	80194b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80194b0:	42b2      	cmp	r2, r6
 80194b2:	f2c0 80ac 	blt.w	801960e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80194b6:	f04f 0e00 	mov.w	lr, #0
 80194ba:	eb03 020e 	add.w	r2, r3, lr
 80194be:	2a00      	cmp	r2, #0
 80194c0:	dc3e      	bgt.n	8019540 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80194c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80194c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80194ca:	f1bb 0f00 	cmp.w	fp, #0
 80194ce:	f340 80fe 	ble.w	80196ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80194d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80194d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80194da:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80194de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194e0:	f1bb 0b01 	subs.w	fp, fp, #1
 80194e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80194e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80194ec:	eeb0 6a62 	vmov.f32	s12, s5
 80194f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80194f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80194f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80194fc:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019500:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019504:	eeb0 6a43 	vmov.f32	s12, s6
 8019508:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801950c:	ee12 2a90 	vmov	r2, s5
 8019510:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019514:	fb92 f3f3 	sdiv	r3, r2, r3
 8019518:	ee13 2a10 	vmov	r2, s6
 801951c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019520:	9313      	str	r3, [sp, #76]	; 0x4c
 8019522:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019524:	fb92 f3f3 	sdiv	r3, r2, r3
 8019528:	9a04      	ldr	r2, [sp, #16]
 801952a:	9314      	str	r3, [sp, #80]	; 0x50
 801952c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019530:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019532:	eeb0 3a67 	vmov.f32	s6, s15
 8019536:	bf08      	it	eq
 8019538:	4613      	moveq	r3, r2
 801953a:	eef0 2a47 	vmov.f32	s5, s14
 801953e:	e787      	b.n	8019450 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019540:	1406      	asrs	r6, r0, #16
 8019542:	d45d      	bmi.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019544:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019548:	42b5      	cmp	r5, r6
 801954a:	dd59      	ble.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801954c:	140f      	asrs	r7, r1, #16
 801954e:	d457      	bmi.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019550:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8019554:	42ba      	cmp	r2, r7
 8019556:	dd53      	ble.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019558:	9a01      	ldr	r2, [sp, #4]
 801955a:	b22d      	sxth	r5, r5
 801955c:	fb07 2505 	mla	r5, r7, r5, r2
 8019560:	5daa      	ldrb	r2, [r5, r6]
 8019562:	9d02      	ldr	r5, [sp, #8]
 8019564:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019568:	0e2e      	lsrs	r6, r5, #24
 801956a:	d049      	beq.n	8019600 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801956c:	f06f 0201 	mvn.w	r2, #1
 8019570:	fb02 f20e 	mul.w	r2, r2, lr
 8019574:	9203      	str	r2, [sp, #12]
 8019576:	f834 8002 	ldrh.w	r8, [r4, r2]
 801957a:	9a05      	ldr	r2, [sp, #20]
 801957c:	4356      	muls	r6, r2
 801957e:	1c72      	adds	r2, r6, #1
 8019580:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019584:	1212      	asrs	r2, r2, #8
 8019586:	fa1f f982 	uxth.w	r9, r2
 801958a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801958e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019592:	43d2      	mvns	r2, r2
 8019594:	b2d2      	uxtb	r2, r2
 8019596:	fb16 f609 	smulbb	r6, r6, r9
 801959a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801959e:	fb07 6702 	mla	r7, r7, r2, r6
 80195a2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80195a6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80195aa:	b2ed      	uxtb	r5, r5
 80195ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80195b0:	fa5f f888 	uxtb.w	r8, r8
 80195b4:	fb15 f509 	smulbb	r5, r5, r9
 80195b8:	fb08 5502 	mla	r5, r8, r2, r5
 80195bc:	b2bf      	uxth	r7, r7
 80195be:	fb1a fa09 	smulbb	sl, sl, r9
 80195c2:	b2ad      	uxth	r5, r5
 80195c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80195c8:	fb06 a602 	mla	r6, r6, r2, sl
 80195cc:	1c7a      	adds	r2, r7, #1
 80195ce:	f105 0a01 	add.w	sl, r5, #1
 80195d2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80195d6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80195da:	b2b6      	uxth	r6, r6
 80195dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80195e0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80195e4:	ea4a 0707 	orr.w	r7, sl, r7
 80195e8:	f106 0a01 	add.w	sl, r6, #1
 80195ec:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80195f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80195f4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80195f8:	9a03      	ldr	r2, [sp, #12]
 80195fa:	ea47 070a 	orr.w	r7, r7, sl
 80195fe:	52a7      	strh	r7, [r4, r2]
 8019600:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019602:	4410      	add	r0, r2
 8019604:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019606:	f10e 3eff 	add.w	lr, lr, #4294967295
 801960a:	4411      	add	r1, r2
 801960c:	e755      	b.n	80194ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801960e:	f04f 0800 	mov.w	r8, #0
 8019612:	eba3 0208 	sub.w	r2, r3, r8
 8019616:	2a00      	cmp	r2, #0
 8019618:	f77f af53 	ble.w	80194c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801961c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8019620:	9f01      	ldr	r7, [sp, #4]
 8019622:	140a      	asrs	r2, r1, #16
 8019624:	1405      	asrs	r5, r0, #16
 8019626:	fb06 7202 	mla	r2, r6, r2, r7
 801962a:	5d52      	ldrb	r2, [r2, r5]
 801962c:	9d02      	ldr	r5, [sp, #8]
 801962e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019632:	0e2e      	lsrs	r6, r5, #24
 8019634:	d044      	beq.n	80196c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019636:	9a05      	ldr	r2, [sp, #20]
 8019638:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801963c:	4356      	muls	r6, r2
 801963e:	1c72      	adds	r2, r6, #1
 8019640:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019644:	1212      	asrs	r2, r2, #8
 8019646:	fa1f f982 	uxth.w	r9, r2
 801964a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801964e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019652:	43d2      	mvns	r2, r2
 8019654:	b2d2      	uxtb	r2, r2
 8019656:	fb16 f609 	smulbb	r6, r6, r9
 801965a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801965e:	fb07 6702 	mla	r7, r7, r2, r6
 8019662:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019666:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801966a:	b2ed      	uxtb	r5, r5
 801966c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019670:	fa5f fe8e 	uxtb.w	lr, lr
 8019674:	fb15 f509 	smulbb	r5, r5, r9
 8019678:	fb0e 5502 	mla	r5, lr, r2, r5
 801967c:	b2bf      	uxth	r7, r7
 801967e:	fb1a fa09 	smulbb	sl, sl, r9
 8019682:	b2ad      	uxth	r5, r5
 8019684:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019688:	fb06 a602 	mla	r6, r6, r2, sl
 801968c:	1c7a      	adds	r2, r7, #1
 801968e:	f105 0a01 	add.w	sl, r5, #1
 8019692:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019696:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801969a:	b2b6      	uxth	r6, r6
 801969c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80196a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80196a4:	ea4a 0707 	orr.w	r7, sl, r7
 80196a8:	f106 0a01 	add.w	sl, r6, #1
 80196ac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80196b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80196b4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80196b8:	ea47 070a 	orr.w	r7, r7, sl
 80196bc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80196c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80196c2:	4410      	add	r0, r2
 80196c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80196c6:	f108 0801 	add.w	r8, r8, #1
 80196ca:	4411      	add	r1, r2
 80196cc:	e7a1      	b.n	8019612 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80196ce:	b007      	add	sp, #28
 80196d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080196d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80196d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196d8:	b085      	sub	sp, #20
 80196da:	468b      	mov	fp, r1
 80196dc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80196de:	9203      	str	r2, [sp, #12]
 80196e0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80196e4:	6841      	ldr	r1, [r0, #4]
 80196e6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80196ea:	fb01 2404 	mla	r4, r1, r4, r2
 80196ee:	6802      	ldr	r2, [r0, #0]
 80196f0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80196f4:	f8de 2000 	ldr.w	r2, [lr]
 80196f8:	9200      	str	r2, [sp, #0]
 80196fa:	f8de 2004 	ldr.w	r2, [lr, #4]
 80196fe:	3204      	adds	r2, #4
 8019700:	9201      	str	r2, [sp, #4]
 8019702:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019706:	f1bb 0f00 	cmp.w	fp, #0
 801970a:	dc03      	bgt.n	8019714 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801970c:	9a03      	ldr	r2, [sp, #12]
 801970e:	2a00      	cmp	r2, #0
 8019710:	f340 8153 	ble.w	80199ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019714:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019716:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801971a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801971e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019722:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019724:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019728:	2b00      	cmp	r3, #0
 801972a:	dd0e      	ble.n	801974a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801972c:	1408      	asrs	r0, r1, #16
 801972e:	d405      	bmi.n	801973c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019730:	42b8      	cmp	r0, r7
 8019732:	da03      	bge.n	801973c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019734:	1410      	asrs	r0, r2, #16
 8019736:	d401      	bmi.n	801973c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019738:	42b0      	cmp	r0, r6
 801973a:	db07      	blt.n	801974c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801973c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801973e:	4401      	add	r1, r0
 8019740:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019742:	3b01      	subs	r3, #1
 8019744:	4402      	add	r2, r0
 8019746:	3402      	adds	r4, #2
 8019748:	e7ee      	b.n	8019728 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801974a:	d017      	beq.n	801977c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801974c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801974e:	1e58      	subs	r0, r3, #1
 8019750:	fb05 1500 	mla	r5, r5, r0, r1
 8019754:	142d      	asrs	r5, r5, #16
 8019756:	d409      	bmi.n	801976c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019758:	42bd      	cmp	r5, r7
 801975a:	da07      	bge.n	801976c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801975c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801975e:	fb05 2000 	mla	r0, r5, r0, r2
 8019762:	1400      	asrs	r0, r0, #16
 8019764:	d402      	bmi.n	801976c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019766:	42b0      	cmp	r0, r6
 8019768:	f2c0 80bc 	blt.w	80198e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801976c:	2600      	movs	r6, #0
 801976e:	1998      	adds	r0, r3, r6
 8019770:	2800      	cmp	r0, #0
 8019772:	dc3e      	bgt.n	80197f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019774:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019778:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801977c:	f1bb 0f00 	cmp.w	fp, #0
 8019780:	f340 811b 	ble.w	80199ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019784:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019788:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801978c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019790:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019792:	f1bb 0b01 	subs.w	fp, fp, #1
 8019796:	ee31 1a05 	vadd.f32	s2, s2, s10
 801979a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801979e:	eeb0 6a62 	vmov.f32	s12, s5
 80197a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80197a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197aa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80197ae:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80197b2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80197b6:	eeb0 6a43 	vmov.f32	s12, s6
 80197ba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80197be:	ee12 2a90 	vmov	r2, s5
 80197c2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80197c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80197ca:	ee13 2a10 	vmov	r2, s6
 80197ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197d2:	9311      	str	r3, [sp, #68]	; 0x44
 80197d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80197d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80197da:	9a03      	ldr	r2, [sp, #12]
 80197dc:	9312      	str	r3, [sp, #72]	; 0x48
 80197de:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80197e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80197e4:	eeb0 3a67 	vmov.f32	s6, s15
 80197e8:	bf08      	it	eq
 80197ea:	4613      	moveq	r3, r2
 80197ec:	eef0 2a47 	vmov.f32	s5, s14
 80197f0:	e789      	b.n	8019706 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80197f2:	140f      	asrs	r7, r1, #16
 80197f4:	d426      	bmi.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80197f6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80197fa:	42bd      	cmp	r5, r7
 80197fc:	dd22      	ble.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80197fe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019802:	d41f      	bmi.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019804:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019808:	4560      	cmp	r0, ip
 801980a:	dd1b      	ble.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801980c:	9800      	ldr	r0, [sp, #0]
 801980e:	b22d      	sxth	r5, r5
 8019810:	fb0c 0505 	mla	r5, ip, r5, r0
 8019814:	5de8      	ldrb	r0, [r5, r7]
 8019816:	9d01      	ldr	r5, [sp, #4]
 8019818:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801981c:	0e07      	lsrs	r7, r0, #24
 801981e:	2fff      	cmp	r7, #255	; 0xff
 8019820:	d116      	bne.n	8019850 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019822:	f06f 0501 	mvn.w	r5, #1
 8019826:	fb05 f706 	mul.w	r7, r5, r6
 801982a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801982e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019832:	0945      	lsrs	r5, r0, #5
 8019834:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019838:	ea4c 0505 	orr.w	r5, ip, r5
 801983c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019840:	4305      	orrs	r5, r0
 8019842:	53e5      	strh	r5, [r4, r7]
 8019844:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019846:	4401      	add	r1, r0
 8019848:	9812      	ldr	r0, [sp, #72]	; 0x48
 801984a:	3e01      	subs	r6, #1
 801984c:	4402      	add	r2, r0
 801984e:	e78e      	b.n	801976e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019850:	b2fd      	uxtb	r5, r7
 8019852:	2f00      	cmp	r7, #0
 8019854:	d0f6      	beq.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019856:	f06f 0701 	mvn.w	r7, #1
 801985a:	4377      	muls	r7, r6
 801985c:	fa1f f985 	uxth.w	r9, r5
 8019860:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019864:	9702      	str	r7, [sp, #8]
 8019866:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801986a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801986e:	43ed      	mvns	r5, r5
 8019870:	b2ed      	uxtb	r5, r5
 8019872:	fb17 f709 	smulbb	r7, r7, r9
 8019876:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801987a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801987e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019882:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019886:	b2c0      	uxtb	r0, r0
 8019888:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801988c:	fa5f f888 	uxtb.w	r8, r8
 8019890:	fb10 f009 	smulbb	r0, r0, r9
 8019894:	fb08 0005 	mla	r0, r8, r5, r0
 8019898:	b280      	uxth	r0, r0
 801989a:	fa1f fc8c 	uxth.w	ip, ip
 801989e:	fb1a fa09 	smulbb	sl, sl, r9
 80198a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80198a6:	fb07 a705 	mla	r7, r7, r5, sl
 80198aa:	f100 0a01 	add.w	sl, r0, #1
 80198ae:	f10c 0501 	add.w	r5, ip, #1
 80198b2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80198b6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80198ba:	b2bf      	uxth	r7, r7
 80198bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80198c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80198c4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80198c8:	f107 0a01 	add.w	sl, r7, #1
 80198cc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80198d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80198d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80198d8:	9802      	ldr	r0, [sp, #8]
 80198da:	ea4c 0c0a 	orr.w	ip, ip, sl
 80198de:	f824 c000 	strh.w	ip, [r4, r0]
 80198e2:	e7af      	b.n	8019844 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80198e4:	f04f 0800 	mov.w	r8, #0
 80198e8:	eba3 0008 	sub.w	r0, r3, r8
 80198ec:	2800      	cmp	r0, #0
 80198ee:	f77f af41 	ble.w	8019774 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80198f2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80198f6:	9f00      	ldr	r7, [sp, #0]
 80198f8:	1410      	asrs	r0, r2, #16
 80198fa:	140d      	asrs	r5, r1, #16
 80198fc:	fb06 7000 	mla	r0, r6, r0, r7
 8019900:	5d40      	ldrb	r0, [r0, r5]
 8019902:	9d01      	ldr	r5, [sp, #4]
 8019904:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019908:	0e2e      	lsrs	r6, r5, #24
 801990a:	2eff      	cmp	r6, #255	; 0xff
 801990c:	d112      	bne.n	8019934 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801990e:	482c      	ldr	r0, [pc, #176]	; (80199c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019910:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019914:	0968      	lsrs	r0, r5, #5
 8019916:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801991a:	4330      	orrs	r0, r6
 801991c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019920:	4328      	orrs	r0, r5
 8019922:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019926:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019928:	4401      	add	r1, r0
 801992a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801992c:	f108 0801 	add.w	r8, r8, #1
 8019930:	4402      	add	r2, r0
 8019932:	e7d9      	b.n	80198e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019934:	b2f0      	uxtb	r0, r6
 8019936:	2e00      	cmp	r6, #0
 8019938:	d0f5      	beq.n	8019926 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801993a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801993e:	fa1f f980 	uxth.w	r9, r0
 8019942:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019946:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801994a:	43c0      	mvns	r0, r0
 801994c:	b2c0      	uxtb	r0, r0
 801994e:	fb16 f609 	smulbb	r6, r6, r9
 8019952:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019956:	fb07 6700 	mla	r7, r7, r0, r6
 801995a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801995e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019962:	b2ed      	uxtb	r5, r5
 8019964:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019968:	fa5f fc8c 	uxtb.w	ip, ip
 801996c:	fb15 f509 	smulbb	r5, r5, r9
 8019970:	fb0c 5500 	mla	r5, ip, r0, r5
 8019974:	b2bf      	uxth	r7, r7
 8019976:	fb1a fa09 	smulbb	sl, sl, r9
 801997a:	b2ad      	uxth	r5, r5
 801997c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019980:	fb06 a600 	mla	r6, r6, r0, sl
 8019984:	1c78      	adds	r0, r7, #1
 8019986:	f105 0a01 	add.w	sl, r5, #1
 801998a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801998e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019992:	b2b6      	uxth	r6, r6
 8019994:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019998:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801999c:	ea4a 0707 	orr.w	r7, sl, r7
 80199a0:	f106 0a01 	add.w	sl, r6, #1
 80199a4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80199a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80199ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80199b0:	ea47 070a 	orr.w	r7, r7, sl
 80199b4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80199b8:	e7b5      	b.n	8019926 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80199ba:	b005      	add	sp, #20
 80199bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199c0:	fffff800 	.word	0xfffff800

080199c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199c8:	b087      	sub	sp, #28
 80199ca:	468b      	mov	fp, r1
 80199cc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80199ce:	9204      	str	r2, [sp, #16]
 80199d0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80199d4:	9205      	str	r2, [sp, #20]
 80199d6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80199da:	6861      	ldr	r1, [r4, #4]
 80199dc:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80199e0:	fb01 2000 	mla	r0, r1, r0, r2
 80199e4:	6822      	ldr	r2, [r4, #0]
 80199e6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80199ea:	f8de 2000 	ldr.w	r2, [lr]
 80199ee:	9201      	str	r2, [sp, #4]
 80199f0:	f8de 2004 	ldr.w	r2, [lr, #4]
 80199f4:	9202      	str	r2, [sp, #8]
 80199f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80199fa:	f1bb 0f00 	cmp.w	fp, #0
 80199fe:	dc03      	bgt.n	8019a08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019a00:	9a04      	ldr	r2, [sp, #16]
 8019a02:	2a00      	cmp	r2, #0
 8019a04:	f340 8142 	ble.w	8019c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019a08:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019a0a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019a0e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019a12:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019a16:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019a18:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019a1c:	2b00      	cmp	r3, #0
 8019a1e:	dd0e      	ble.n	8019a3e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019a20:	140c      	asrs	r4, r1, #16
 8019a22:	d405      	bmi.n	8019a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a24:	42bc      	cmp	r4, r7
 8019a26:	da03      	bge.n	8019a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a28:	1414      	asrs	r4, r2, #16
 8019a2a:	d401      	bmi.n	8019a30 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a2c:	42b4      	cmp	r4, r6
 8019a2e:	db07      	blt.n	8019a40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019a30:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019a32:	4421      	add	r1, r4
 8019a34:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019a36:	3b01      	subs	r3, #1
 8019a38:	4422      	add	r2, r4
 8019a3a:	3002      	adds	r0, #2
 8019a3c:	e7ee      	b.n	8019a1c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019a3e:	d019      	beq.n	8019a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019a40:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a42:	1e5c      	subs	r4, r3, #1
 8019a44:	fb05 1504 	mla	r5, r5, r4, r1
 8019a48:	142d      	asrs	r5, r5, #16
 8019a4a:	d409      	bmi.n	8019a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019a4c:	42bd      	cmp	r5, r7
 8019a4e:	da07      	bge.n	8019a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019a50:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a52:	fb05 2404 	mla	r4, r5, r4, r2
 8019a56:	1424      	asrs	r4, r4, #16
 8019a58:	d402      	bmi.n	8019a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019a5a:	42b4      	cmp	r4, r6
 8019a5c:	f2c0 80b1 	blt.w	8019bc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019a60:	f04f 0800 	mov.w	r8, #0
 8019a64:	eb03 0408 	add.w	r4, r3, r8
 8019a68:	2c00      	cmp	r4, #0
 8019a6a:	dc3e      	bgt.n	8019aea <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019a6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019a74:	f1bb 0f00 	cmp.w	fp, #0
 8019a78:	f340 8108 	ble.w	8019c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019a7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a84:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019a88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a8a:	f1bb 0b01 	subs.w	fp, fp, #1
 8019a8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019a96:	eeb0 6a62 	vmov.f32	s12, s5
 8019a9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019a9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019aa2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019aa6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019aaa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019aae:	eeb0 6a43 	vmov.f32	s12, s6
 8019ab2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ab6:	ee12 2a90 	vmov	r2, s5
 8019aba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019abe:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ac2:	ee13 2a10 	vmov	r2, s6
 8019ac6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019aca:	9313      	str	r3, [sp, #76]	; 0x4c
 8019acc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ace:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ad2:	9a04      	ldr	r2, [sp, #16]
 8019ad4:	9314      	str	r3, [sp, #80]	; 0x50
 8019ad6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019ada:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019adc:	eeb0 3a67 	vmov.f32	s6, s15
 8019ae0:	bf08      	it	eq
 8019ae2:	4613      	moveq	r3, r2
 8019ae4:	eef0 2a47 	vmov.f32	s5, s14
 8019ae8:	e787      	b.n	80199fa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8019aea:	140e      	asrs	r6, r1, #16
 8019aec:	d462      	bmi.n	8019bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019aee:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019af2:	42b5      	cmp	r5, r6
 8019af4:	dd5e      	ble.n	8019bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019af6:	1417      	asrs	r7, r2, #16
 8019af8:	d45c      	bmi.n	8019bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019afa:	f8de 400c 	ldr.w	r4, [lr, #12]
 8019afe:	42bc      	cmp	r4, r7
 8019b00:	dd58      	ble.n	8019bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b02:	b22d      	sxth	r5, r5
 8019b04:	fb07 6505 	mla	r5, r7, r5, r6
 8019b08:	9c02      	ldr	r4, [sp, #8]
 8019b0a:	5d66      	ldrb	r6, [r4, r5]
 8019b0c:	2e00      	cmp	r6, #0
 8019b0e:	d051      	beq.n	8019bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b10:	9c01      	ldr	r4, [sp, #4]
 8019b12:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019b16:	f06f 0401 	mvn.w	r4, #1
 8019b1a:	fb04 f408 	mul.w	r4, r4, r8
 8019b1e:	9403      	str	r4, [sp, #12]
 8019b20:	5b05      	ldrh	r5, [r0, r4]
 8019b22:	9c05      	ldr	r4, [sp, #20]
 8019b24:	4366      	muls	r6, r4
 8019b26:	1c74      	adds	r4, r6, #1
 8019b28:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019b2c:	1224      	asrs	r4, r4, #8
 8019b2e:	b2a7      	uxth	r7, r4
 8019b30:	122e      	asrs	r6, r5, #8
 8019b32:	43e4      	mvns	r4, r4
 8019b34:	b2e4      	uxtb	r4, r4
 8019b36:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8019b3a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019b3e:	fb16 f604 	smulbb	r6, r6, r4
 8019b42:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019b46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b4a:	00ed      	lsls	r5, r5, #3
 8019b4c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019b50:	b2ed      	uxtb	r5, r5
 8019b52:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019b56:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019b5a:	fb15 f504 	smulbb	r5, r5, r4
 8019b5e:	fa5f f989 	uxtb.w	r9, r9
 8019b62:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019b66:	fb09 5507 	mla	r5, r9, r7, r5
 8019b6a:	fb1a fa04 	smulbb	sl, sl, r4
 8019b6e:	fa1f fc8c 	uxth.w	ip, ip
 8019b72:	b2ad      	uxth	r5, r5
 8019b74:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019b78:	fb06 a607 	mla	r6, r6, r7, sl
 8019b7c:	f10c 0401 	add.w	r4, ip, #1
 8019b80:	f105 0a01 	add.w	sl, r5, #1
 8019b84:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019b88:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b8c:	b2b6      	uxth	r6, r6
 8019b8e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019b92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019b96:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019b9a:	f106 0a01 	add.w	sl, r6, #1
 8019b9e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019ba2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019ba6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019baa:	9c03      	ldr	r4, [sp, #12]
 8019bac:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019bb0:	f820 c004 	strh.w	ip, [r0, r4]
 8019bb4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019bb6:	4421      	add	r1, r4
 8019bb8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019bba:	f108 38ff 	add.w	r8, r8, #4294967295
 8019bbe:	4422      	add	r2, r4
 8019bc0:	e750      	b.n	8019a64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019bc2:	f04f 0900 	mov.w	r9, #0
 8019bc6:	eba3 0409 	sub.w	r4, r3, r9
 8019bca:	2c00      	cmp	r4, #0
 8019bcc:	f77f af4e 	ble.w	8019a6c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019bd0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019bd4:	140d      	asrs	r5, r1, #16
 8019bd6:	1414      	asrs	r4, r2, #16
 8019bd8:	fb06 5404 	mla	r4, r6, r4, r5
 8019bdc:	9d02      	ldr	r5, [sp, #8]
 8019bde:	5d2e      	ldrb	r6, [r5, r4]
 8019be0:	2e00      	cmp	r6, #0
 8019be2:	d04c      	beq.n	8019c7e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019be4:	9d01      	ldr	r5, [sp, #4]
 8019be6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8019bea:	9c05      	ldr	r4, [sp, #20]
 8019bec:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019bf0:	4366      	muls	r6, r4
 8019bf2:	1c74      	adds	r4, r6, #1
 8019bf4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019bf8:	1224      	asrs	r4, r4, #8
 8019bfa:	b2a7      	uxth	r7, r4
 8019bfc:	122e      	asrs	r6, r5, #8
 8019bfe:	43e4      	mvns	r4, r4
 8019c00:	b2e4      	uxtb	r4, r4
 8019c02:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019c06:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019c0a:	fb16 f604 	smulbb	r6, r6, r4
 8019c0e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019c12:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c16:	00ed      	lsls	r5, r5, #3
 8019c18:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019c1c:	b2ed      	uxtb	r5, r5
 8019c1e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019c22:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019c26:	fb15 f504 	smulbb	r5, r5, r4
 8019c2a:	fa5f f888 	uxtb.w	r8, r8
 8019c2e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019c32:	fb08 5507 	mla	r5, r8, r7, r5
 8019c36:	fb1a fa04 	smulbb	sl, sl, r4
 8019c3a:	fa1f fc8c 	uxth.w	ip, ip
 8019c3e:	b2ad      	uxth	r5, r5
 8019c40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019c44:	fb06 a607 	mla	r6, r6, r7, sl
 8019c48:	f10c 0401 	add.w	r4, ip, #1
 8019c4c:	f105 0a01 	add.w	sl, r5, #1
 8019c50:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019c54:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019c58:	b2b6      	uxth	r6, r6
 8019c5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019c5e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c62:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019c66:	f106 0a01 	add.w	sl, r6, #1
 8019c6a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019c6e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019c76:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019c7a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019c7e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c80:	4421      	add	r1, r4
 8019c82:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019c84:	f109 0901 	add.w	r9, r9, #1
 8019c88:	4422      	add	r2, r4
 8019c8a:	e79c      	b.n	8019bc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019c8c:	b007      	add	sp, #28
 8019c8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c96:	b085      	sub	sp, #20
 8019c98:	468b      	mov	fp, r1
 8019c9a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c9c:	9203      	str	r2, [sp, #12]
 8019c9e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019ca2:	6861      	ldr	r1, [r4, #4]
 8019ca4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019ca8:	fb01 2000 	mla	r0, r1, r0, r2
 8019cac:	6822      	ldr	r2, [r4, #0]
 8019cae:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019cb2:	f8d8 2000 	ldr.w	r2, [r8]
 8019cb6:	9200      	str	r2, [sp, #0]
 8019cb8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019cbc:	9201      	str	r2, [sp, #4]
 8019cbe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019cc2:	f1bb 0f00 	cmp.w	fp, #0
 8019cc6:	dc03      	bgt.n	8019cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019cc8:	9a03      	ldr	r2, [sp, #12]
 8019cca:	2a00      	cmp	r2, #0
 8019ccc:	f340 8146 	ble.w	8019f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019cd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019cd2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019cd6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019cda:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019cde:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019ce0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019ce4:	2b00      	cmp	r3, #0
 8019ce6:	dd0e      	ble.n	8019d06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019ce8:	140c      	asrs	r4, r1, #16
 8019cea:	d405      	bmi.n	8019cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cec:	42bc      	cmp	r4, r7
 8019cee:	da03      	bge.n	8019cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cf0:	1414      	asrs	r4, r2, #16
 8019cf2:	d401      	bmi.n	8019cf8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cf4:	42b4      	cmp	r4, r6
 8019cf6:	db07      	blt.n	8019d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019cf8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019cfa:	4421      	add	r1, r4
 8019cfc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019cfe:	3b01      	subs	r3, #1
 8019d00:	4422      	add	r2, r4
 8019d02:	3002      	adds	r0, #2
 8019d04:	e7ee      	b.n	8019ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019d06:	d017      	beq.n	8019d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019d08:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d0a:	1e5c      	subs	r4, r3, #1
 8019d0c:	fb05 1504 	mla	r5, r5, r4, r1
 8019d10:	142d      	asrs	r5, r5, #16
 8019d12:	d409      	bmi.n	8019d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d14:	42bd      	cmp	r5, r7
 8019d16:	da07      	bge.n	8019d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d18:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d1a:	fb05 2404 	mla	r4, r5, r4, r2
 8019d1e:	1424      	asrs	r4, r4, #16
 8019d20:	d402      	bmi.n	8019d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d22:	42b4      	cmp	r4, r6
 8019d24:	f2c0 80b3 	blt.w	8019e8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019d28:	2600      	movs	r6, #0
 8019d2a:	199c      	adds	r4, r3, r6
 8019d2c:	2c00      	cmp	r4, #0
 8019d2e:	dc3e      	bgt.n	8019dae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019d30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d34:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019d38:	f1bb 0f00 	cmp.w	fp, #0
 8019d3c:	f340 810e 	ble.w	8019f5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019d40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d48:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d4e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019d52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d5a:	eeb0 6a62 	vmov.f32	s12, s5
 8019d5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d62:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d6a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019d6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d72:	eeb0 6a43 	vmov.f32	s12, s6
 8019d76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d7a:	ee12 2a90 	vmov	r2, s5
 8019d7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d82:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d86:	ee13 2a10 	vmov	r2, s6
 8019d8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d8e:	9311      	str	r3, [sp, #68]	; 0x44
 8019d90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d92:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d96:	9a03      	ldr	r2, [sp, #12]
 8019d98:	9312      	str	r3, [sp, #72]	; 0x48
 8019d9a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019d9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019da0:	eeb0 3a67 	vmov.f32	s6, s15
 8019da4:	bf08      	it	eq
 8019da6:	4613      	moveq	r3, r2
 8019da8:	eef0 2a47 	vmov.f32	s5, s14
 8019dac:	e789      	b.n	8019cc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019dae:	140f      	asrs	r7, r1, #16
 8019db0:	d418      	bmi.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019db2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019db6:	42bd      	cmp	r5, r7
 8019db8:	dd14      	ble.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019dba:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019dbe:	d411      	bmi.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019dc0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019dc4:	4564      	cmp	r4, ip
 8019dc6:	dd0d      	ble.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019dc8:	b22d      	sxth	r5, r5
 8019dca:	fb0c 7505 	mla	r5, ip, r5, r7
 8019dce:	9c01      	ldr	r4, [sp, #4]
 8019dd0:	5d64      	ldrb	r4, [r4, r5]
 8019dd2:	2cff      	cmp	r4, #255	; 0xff
 8019dd4:	d10c      	bne.n	8019df0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019dd6:	9c00      	ldr	r4, [sp, #0]
 8019dd8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019ddc:	f06f 0401 	mvn.w	r4, #1
 8019de0:	4374      	muls	r4, r6
 8019de2:	5305      	strh	r5, [r0, r4]
 8019de4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019de6:	4421      	add	r1, r4
 8019de8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019dea:	3e01      	subs	r6, #1
 8019dec:	4422      	add	r2, r4
 8019dee:	e79c      	b.n	8019d2a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019df0:	2c00      	cmp	r4, #0
 8019df2:	d0f7      	beq.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019df4:	9f00      	ldr	r7, [sp, #0]
 8019df6:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019dfa:	f06f 0501 	mvn.w	r5, #1
 8019dfe:	4375      	muls	r5, r6
 8019e00:	9502      	str	r5, [sp, #8]
 8019e02:	5b45      	ldrh	r5, [r0, r5]
 8019e04:	fa1f fc84 	uxth.w	ip, r4
 8019e08:	122f      	asrs	r7, r5, #8
 8019e0a:	43e4      	mvns	r4, r4
 8019e0c:	b2e4      	uxtb	r4, r4
 8019e0e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019e12:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019e16:	fb17 f704 	smulbb	r7, r7, r4
 8019e1a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019e1e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019e22:	00ed      	lsls	r5, r5, #3
 8019e24:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019e28:	b2ed      	uxtb	r5, r5
 8019e2a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019e2e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019e32:	fb15 f504 	smulbb	r5, r5, r4
 8019e36:	fa5f f989 	uxtb.w	r9, r9
 8019e3a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019e3e:	fb09 550c 	mla	r5, r9, ip, r5
 8019e42:	fb1a fa04 	smulbb	sl, sl, r4
 8019e46:	fa1f fe8e 	uxth.w	lr, lr
 8019e4a:	b2ad      	uxth	r5, r5
 8019e4c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019e50:	fb07 a70c 	mla	r7, r7, ip, sl
 8019e54:	f10e 0401 	add.w	r4, lr, #1
 8019e58:	f105 0a01 	add.w	sl, r5, #1
 8019e5c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019e60:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019e64:	b2bf      	uxth	r7, r7
 8019e66:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019e6a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019e6e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019e72:	f107 0a01 	add.w	sl, r7, #1
 8019e76:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019e7a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019e7e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019e82:	9c02      	ldr	r4, [sp, #8]
 8019e84:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019e88:	f820 e004 	strh.w	lr, [r0, r4]
 8019e8c:	e7aa      	b.n	8019de4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019e8e:	f04f 0900 	mov.w	r9, #0
 8019e92:	eba3 0409 	sub.w	r4, r3, r9
 8019e96:	2c00      	cmp	r4, #0
 8019e98:	f77f af4a 	ble.w	8019d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019e9c:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019ea0:	1414      	asrs	r4, r2, #16
 8019ea2:	140d      	asrs	r5, r1, #16
 8019ea4:	fb06 5504 	mla	r5, r6, r4, r5
 8019ea8:	9c01      	ldr	r4, [sp, #4]
 8019eaa:	5d64      	ldrb	r4, [r4, r5]
 8019eac:	2cff      	cmp	r4, #255	; 0xff
 8019eae:	d10b      	bne.n	8019ec8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019eb0:	9c00      	ldr	r4, [sp, #0]
 8019eb2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019eb6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019eba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019ebc:	4421      	add	r1, r4
 8019ebe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019ec0:	f109 0901 	add.w	r9, r9, #1
 8019ec4:	4422      	add	r2, r4
 8019ec6:	e7e4      	b.n	8019e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019ec8:	2c00      	cmp	r4, #0
 8019eca:	d0f6      	beq.n	8019eba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019ecc:	9e00      	ldr	r6, [sp, #0]
 8019ece:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019ed2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019ed6:	b2a7      	uxth	r7, r4
 8019ed8:	122e      	asrs	r6, r5, #8
 8019eda:	43e4      	mvns	r4, r4
 8019edc:	b2e4      	uxtb	r4, r4
 8019ede:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019ee2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019ee6:	fb16 f604 	smulbb	r6, r6, r4
 8019eea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019eee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ef2:	00ed      	lsls	r5, r5, #3
 8019ef4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019ef8:	b2ed      	uxtb	r5, r5
 8019efa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019efe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019f02:	fb15 f504 	smulbb	r5, r5, r4
 8019f06:	fa5f fe8e 	uxtb.w	lr, lr
 8019f0a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019f0e:	fb0e 5507 	mla	r5, lr, r7, r5
 8019f12:	fb1a fa04 	smulbb	sl, sl, r4
 8019f16:	fa1f fc8c 	uxth.w	ip, ip
 8019f1a:	b2ad      	uxth	r5, r5
 8019f1c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f20:	fb06 a607 	mla	r6, r6, r7, sl
 8019f24:	f10c 0401 	add.w	r4, ip, #1
 8019f28:	f105 0a01 	add.w	sl, r5, #1
 8019f2c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019f30:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019f34:	b2b6      	uxth	r6, r6
 8019f36:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019f3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019f3e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019f42:	f106 0a01 	add.w	sl, r6, #1
 8019f46:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019f4a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f4e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019f52:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019f56:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019f5a:	e7ae      	b.n	8019eba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019f5c:	b005      	add	sp, #20
 8019f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f62 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f66:	b085      	sub	sp, #20
 8019f68:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f6a:	9203      	str	r2, [sp, #12]
 8019f6c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019f70:	9201      	str	r2, [sp, #4]
 8019f72:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019f76:	9100      	str	r1, [sp, #0]
 8019f78:	6841      	ldr	r1, [r0, #4]
 8019f7a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019f7e:	fb01 2404 	mla	r4, r1, r4, r2
 8019f82:	6802      	ldr	r2, [r0, #0]
 8019f84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f88:	f8de 2000 	ldr.w	r2, [lr]
 8019f8c:	9202      	str	r2, [sp, #8]
 8019f8e:	9a01      	ldr	r2, [sp, #4]
 8019f90:	43d6      	mvns	r6, r2
 8019f92:	b2f6      	uxtb	r6, r6
 8019f94:	9a00      	ldr	r2, [sp, #0]
 8019f96:	2a00      	cmp	r2, #0
 8019f98:	dc03      	bgt.n	8019fa2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019f9a:	9a03      	ldr	r2, [sp, #12]
 8019f9c:	2a00      	cmp	r2, #0
 8019f9e:	f340 8124 	ble.w	801a1ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019fa2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019fa4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019fa8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019fac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019fb0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019fb2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019fb6:	2b00      	cmp	r3, #0
 8019fb8:	dd0e      	ble.n	8019fd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fba:	1408      	asrs	r0, r1, #16
 8019fbc:	d405      	bmi.n	8019fca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fbe:	4560      	cmp	r0, ip
 8019fc0:	da03      	bge.n	8019fca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fc2:	1410      	asrs	r0, r2, #16
 8019fc4:	d401      	bmi.n	8019fca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fc6:	42b8      	cmp	r0, r7
 8019fc8:	db07      	blt.n	8019fda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019fca:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019fcc:	4401      	add	r1, r0
 8019fce:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019fd0:	3b01      	subs	r3, #1
 8019fd2:	4402      	add	r2, r0
 8019fd4:	3402      	adds	r4, #2
 8019fd6:	e7ee      	b.n	8019fb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019fd8:	d06e      	beq.n	801a0b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019fda:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019fdc:	1e58      	subs	r0, r3, #1
 8019fde:	fb05 1500 	mla	r5, r5, r0, r1
 8019fe2:	142d      	asrs	r5, r5, #16
 8019fe4:	d45c      	bmi.n	801a0a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019fe6:	4565      	cmp	r5, ip
 8019fe8:	da5a      	bge.n	801a0a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019fea:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019fec:	fb05 2000 	mla	r0, r5, r0, r2
 8019ff0:	1400      	asrs	r0, r0, #16
 8019ff2:	d455      	bmi.n	801a0a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019ff4:	42b8      	cmp	r0, r7
 8019ff6:	da53      	bge.n	801a0a0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019ff8:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019ffc:	4699      	mov	r9, r3
 8019ffe:	46a2      	mov	sl, r4
 801a000:	f1b9 0f00 	cmp.w	r9, #0
 801a004:	dd54      	ble.n	801a0b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a006:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a00a:	140d      	asrs	r5, r1, #16
 801a00c:	1410      	asrs	r0, r2, #16
 801a00e:	fb07 5000 	mla	r0, r7, r0, r5
 801a012:	9d02      	ldr	r5, [sp, #8]
 801a014:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a018:	f8ba 5000 	ldrh.w	r5, [sl]
 801a01c:	122f      	asrs	r7, r5, #8
 801a01e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a022:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a026:	fb17 f706 	smulbb	r7, r7, r6
 801a02a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a02e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a032:	00ed      	lsls	r5, r5, #3
 801a034:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a038:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a03c:	10c7      	asrs	r7, r0, #3
 801a03e:	b2ed      	uxtb	r5, r5
 801a040:	00c0      	lsls	r0, r0, #3
 801a042:	fb18 f806 	smulbb	r8, r8, r6
 801a046:	fb15 f506 	smulbb	r5, r5, r6
 801a04a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a04e:	b2c0      	uxtb	r0, r0
 801a050:	fa1f fc8c 	uxth.w	ip, ip
 801a054:	fb07 870b 	mla	r7, r7, fp, r8
 801a058:	fb00 500b 	mla	r0, r0, fp, r5
 801a05c:	b280      	uxth	r0, r0
 801a05e:	b2bf      	uxth	r7, r7
 801a060:	f10c 0501 	add.w	r5, ip, #1
 801a064:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a068:	f107 0801 	add.w	r8, r7, #1
 801a06c:	1c45      	adds	r5, r0, #1
 801a06e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a072:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a076:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a078:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a07c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a080:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a084:	ea45 0c0c 	orr.w	ip, r5, ip
 801a088:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a08c:	4401      	add	r1, r0
 801a08e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a090:	ea4c 0c08 	orr.w	ip, ip, r8
 801a094:	f82a cb02 	strh.w	ip, [sl], #2
 801a098:	4402      	add	r2, r0
 801a09a:	f109 39ff 	add.w	r9, r9, #4294967295
 801a09e:	e7af      	b.n	801a000 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a0a0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801a0a4:	f04f 0800 	mov.w	r8, #0
 801a0a8:	eb03 0008 	add.w	r0, r3, r8
 801a0ac:	2800      	cmp	r0, #0
 801a0ae:	dc41      	bgt.n	801a134 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a0b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a0b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a0b8:	9b00      	ldr	r3, [sp, #0]
 801a0ba:	2b00      	cmp	r3, #0
 801a0bc:	f340 8095 	ble.w	801a1ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a0c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a0c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a0c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a0cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a0ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a0d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a0d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a0da:	eef0 6a62 	vmov.f32	s13, s5
 801a0de:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a0e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a0e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a0ea:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801a0ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a0f2:	eef0 6a43 	vmov.f32	s13, s6
 801a0f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a0fa:	ee12 2a90 	vmov	r2, s5
 801a0fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a102:	fb92 f3f3 	sdiv	r3, r2, r3
 801a106:	ee13 2a10 	vmov	r2, s6
 801a10a:	9311      	str	r3, [sp, #68]	; 0x44
 801a10c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a10e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a112:	9312      	str	r3, [sp, #72]	; 0x48
 801a114:	9b00      	ldr	r3, [sp, #0]
 801a116:	9a03      	ldr	r2, [sp, #12]
 801a118:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a11c:	3b01      	subs	r3, #1
 801a11e:	9300      	str	r3, [sp, #0]
 801a120:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801a124:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a126:	eeb0 3a67 	vmov.f32	s6, s15
 801a12a:	bf08      	it	eq
 801a12c:	4613      	moveq	r3, r2
 801a12e:	eef0 2a47 	vmov.f32	s5, s14
 801a132:	e72f      	b.n	8019f94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a134:	140f      	asrs	r7, r1, #16
 801a136:	d451      	bmi.n	801a1dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a138:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a13c:	42bd      	cmp	r5, r7
 801a13e:	dd4d      	ble.n	801a1dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a140:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a144:	d44a      	bmi.n	801a1dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a146:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a14a:	4560      	cmp	r0, ip
 801a14c:	dd46      	ble.n	801a1dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a14e:	b22d      	sxth	r5, r5
 801a150:	fb0c 7505 	mla	r5, ip, r5, r7
 801a154:	9802      	ldr	r0, [sp, #8]
 801a156:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a15a:	f06f 0501 	mvn.w	r5, #1
 801a15e:	fb05 fb08 	mul.w	fp, r5, r8
 801a162:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a166:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a16a:	122f      	asrs	r7, r5, #8
 801a16c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a170:	fb17 f706 	smulbb	r7, r7, r6
 801a174:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a178:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a17c:	00ed      	lsls	r5, r5, #3
 801a17e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a182:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a186:	10c7      	asrs	r7, r0, #3
 801a188:	b2ed      	uxtb	r5, r5
 801a18a:	00c0      	lsls	r0, r0, #3
 801a18c:	fb19 f906 	smulbb	r9, r9, r6
 801a190:	fb15 f506 	smulbb	r5, r5, r6
 801a194:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a198:	b2c0      	uxtb	r0, r0
 801a19a:	fa1f fc8c 	uxth.w	ip, ip
 801a19e:	fb07 970a 	mla	r7, r7, sl, r9
 801a1a2:	fb00 500a 	mla	r0, r0, sl, r5
 801a1a6:	b2bf      	uxth	r7, r7
 801a1a8:	b280      	uxth	r0, r0
 801a1aa:	f10c 0501 	add.w	r5, ip, #1
 801a1ae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a1b2:	f107 0901 	add.w	r9, r7, #1
 801a1b6:	1c45      	adds	r5, r0, #1
 801a1b8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a1bc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a1c0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a1c4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a1c8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a1cc:	ea45 0c0c 	orr.w	ip, r5, ip
 801a1d0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a1d4:	ea4c 0c09 	orr.w	ip, ip, r9
 801a1d8:	f824 c00b 	strh.w	ip, [r4, fp]
 801a1dc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a1de:	4401      	add	r1, r0
 801a1e0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a1e2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a1e6:	4402      	add	r2, r0
 801a1e8:	e75e      	b.n	801a0a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801a1ea:	b005      	add	sp, #20
 801a1ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a1f0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a1f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a1f4:	b085      	sub	sp, #20
 801a1f6:	4693      	mov	fp, r2
 801a1f8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a1fa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a1fc:	6870      	ldr	r0, [r6, #4]
 801a1fe:	9101      	str	r1, [sp, #4]
 801a200:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a204:	fb00 2404 	mla	r4, r0, r4, r2
 801a208:	6832      	ldr	r2, [r6, #0]
 801a20a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a20e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a212:	682a      	ldr	r2, [r5, #0]
 801a214:	9202      	str	r2, [sp, #8]
 801a216:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a21a:	9a01      	ldr	r2, [sp, #4]
 801a21c:	2a00      	cmp	r2, #0
 801a21e:	dc03      	bgt.n	801a228 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a220:	f1bb 0f00 	cmp.w	fp, #0
 801a224:	f340 809a 	ble.w	801a35c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a228:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a22a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a22e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a232:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a236:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a238:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a23c:	2b00      	cmp	r3, #0
 801a23e:	dd0c      	ble.n	801a25a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a240:	1406      	asrs	r6, r0, #16
 801a242:	d405      	bmi.n	801a250 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a244:	454e      	cmp	r6, r9
 801a246:	da03      	bge.n	801a250 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a248:	1416      	asrs	r6, r2, #16
 801a24a:	d401      	bmi.n	801a250 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a24c:	4546      	cmp	r6, r8
 801a24e:	db05      	blt.n	801a25c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a250:	4470      	add	r0, lr
 801a252:	4462      	add	r2, ip
 801a254:	3b01      	subs	r3, #1
 801a256:	3402      	adds	r4, #2
 801a258:	e7f0      	b.n	801a23c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a25a:	d00f      	beq.n	801a27c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a25c:	1e5e      	subs	r6, r3, #1
 801a25e:	fb0e 0706 	mla	r7, lr, r6, r0
 801a262:	143f      	asrs	r7, r7, #16
 801a264:	d541      	bpl.n	801a2ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a266:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a26a:	4698      	mov	r8, r3
 801a26c:	9603      	str	r6, [sp, #12]
 801a26e:	f1b8 0f00 	cmp.w	r8, #0
 801a272:	dc56      	bgt.n	801a322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a274:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a278:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a27c:	9b01      	ldr	r3, [sp, #4]
 801a27e:	2b00      	cmp	r3, #0
 801a280:	dd6c      	ble.n	801a35c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a282:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a286:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a28a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a28e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a290:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a294:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a298:	eeb0 6a62 	vmov.f32	s12, s5
 801a29c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a2a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a2a8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a2ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a2b0:	eeb0 6a43 	vmov.f32	s12, s6
 801a2b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a2b8:	ee12 2a90 	vmov	r2, s5
 801a2bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a2c0:	fb92 fef3 	sdiv	lr, r2, r3
 801a2c4:	ee13 2a10 	vmov	r2, s6
 801a2c8:	fb92 fcf3 	sdiv	ip, r2, r3
 801a2cc:	9b01      	ldr	r3, [sp, #4]
 801a2ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2d2:	3b01      	subs	r3, #1
 801a2d4:	9301      	str	r3, [sp, #4]
 801a2d6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a2da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2dc:	eeb0 3a67 	vmov.f32	s6, s15
 801a2e0:	bf08      	it	eq
 801a2e2:	465b      	moveq	r3, fp
 801a2e4:	eef0 2a47 	vmov.f32	s5, s14
 801a2e8:	e797      	b.n	801a21a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a2ea:	454f      	cmp	r7, r9
 801a2ec:	dabb      	bge.n	801a266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2ee:	fb0c 2606 	mla	r6, ip, r6, r2
 801a2f2:	1436      	asrs	r6, r6, #16
 801a2f4:	d4b7      	bmi.n	801a266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2f6:	4546      	cmp	r6, r8
 801a2f8:	dab5      	bge.n	801a266 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2fa:	461e      	mov	r6, r3
 801a2fc:	46a0      	mov	r8, r4
 801a2fe:	2e00      	cmp	r6, #0
 801a300:	ddb8      	ble.n	801a274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a302:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a306:	9902      	ldr	r1, [sp, #8]
 801a308:	1417      	asrs	r7, r2, #16
 801a30a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a30e:	fb0a 9707 	mla	r7, sl, r7, r9
 801a312:	4470      	add	r0, lr
 801a314:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a318:	f828 7b02 	strh.w	r7, [r8], #2
 801a31c:	4462      	add	r2, ip
 801a31e:	3e01      	subs	r6, #1
 801a320:	e7ed      	b.n	801a2fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a322:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a326:	d414      	bmi.n	801a352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a328:	68ae      	ldr	r6, [r5, #8]
 801a32a:	454e      	cmp	r6, r9
 801a32c:	dd11      	ble.n	801a352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a32e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a332:	d40e      	bmi.n	801a352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a334:	68ef      	ldr	r7, [r5, #12]
 801a336:	4557      	cmp	r7, sl
 801a338:	dd0b      	ble.n	801a352 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a33a:	b236      	sxth	r6, r6
 801a33c:	fb0a 9606 	mla	r6, sl, r6, r9
 801a340:	9f02      	ldr	r7, [sp, #8]
 801a342:	f06f 0101 	mvn.w	r1, #1
 801a346:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a34a:	fb01 f608 	mul.w	r6, r1, r8
 801a34e:	9903      	ldr	r1, [sp, #12]
 801a350:	538f      	strh	r7, [r1, r6]
 801a352:	4470      	add	r0, lr
 801a354:	4462      	add	r2, ip
 801a356:	f108 38ff 	add.w	r8, r8, #4294967295
 801a35a:	e788      	b.n	801a26e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a35c:	b005      	add	sp, #20
 801a35e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a362 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a362:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a366:	b087      	sub	sp, #28
 801a368:	468b      	mov	fp, r1
 801a36a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a36c:	9203      	str	r2, [sp, #12]
 801a36e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a372:	9204      	str	r2, [sp, #16]
 801a374:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a378:	6841      	ldr	r1, [r0, #4]
 801a37a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a37e:	fb01 2505 	mla	r5, r1, r5, r2
 801a382:	6802      	ldr	r2, [r0, #0]
 801a384:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a388:	f8d9 2000 	ldr.w	r2, [r9]
 801a38c:	9201      	str	r2, [sp, #4]
 801a38e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a392:	f1bb 0f00 	cmp.w	fp, #0
 801a396:	dc03      	bgt.n	801a3a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a398:	9a03      	ldr	r2, [sp, #12]
 801a39a:	2a00      	cmp	r2, #0
 801a39c:	f340 8159 	ble.w	801a652 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a3a0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a3a2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a3a6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a3aa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a3ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a3b0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a3b4:	2b00      	cmp	r3, #0
 801a3b6:	dd0e      	ble.n	801a3d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a3b8:	1402      	asrs	r2, r0, #16
 801a3ba:	d405      	bmi.n	801a3c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3bc:	42ba      	cmp	r2, r7
 801a3be:	da03      	bge.n	801a3c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3c0:	140a      	asrs	r2, r1, #16
 801a3c2:	d401      	bmi.n	801a3c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3c4:	42b2      	cmp	r2, r6
 801a3c6:	db07      	blt.n	801a3d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a3c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a3ca:	4410      	add	r0, r2
 801a3cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a3ce:	3b01      	subs	r3, #1
 801a3d0:	4411      	add	r1, r2
 801a3d2:	3502      	adds	r5, #2
 801a3d4:	e7ee      	b.n	801a3b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a3d6:	d017      	beq.n	801a408 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a3d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a3da:	1e5a      	subs	r2, r3, #1
 801a3dc:	fb04 0402 	mla	r4, r4, r2, r0
 801a3e0:	1424      	asrs	r4, r4, #16
 801a3e2:	d409      	bmi.n	801a3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a3e4:	42bc      	cmp	r4, r7
 801a3e6:	da07      	bge.n	801a3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a3e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a3ea:	fb04 1202 	mla	r2, r4, r2, r1
 801a3ee:	1412      	asrs	r2, r2, #16
 801a3f0:	d402      	bmi.n	801a3f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a3f2:	42b2      	cmp	r2, r6
 801a3f4:	f2c0 80bf 	blt.w	801a576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a3f8:	2700      	movs	r7, #0
 801a3fa:	19da      	adds	r2, r3, r7
 801a3fc:	2a00      	cmp	r2, #0
 801a3fe:	dc3e      	bgt.n	801a47e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a400:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a404:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a408:	f1bb 0f00 	cmp.w	fp, #0
 801a40c:	f340 8121 	ble.w	801a652 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a410:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a414:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a418:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a41c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a41e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a422:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a426:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a42a:	eeb0 6a62 	vmov.f32	s12, s5
 801a42e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a432:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a436:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a43a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a43e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a442:	eeb0 6a43 	vmov.f32	s12, s6
 801a446:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a44a:	ee12 2a90 	vmov	r2, s5
 801a44e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a452:	fb92 f3f3 	sdiv	r3, r2, r3
 801a456:	ee13 2a10 	vmov	r2, s6
 801a45a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a45e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a460:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a462:	fb92 f3f3 	sdiv	r3, r2, r3
 801a466:	9a03      	ldr	r2, [sp, #12]
 801a468:	9314      	str	r3, [sp, #80]	; 0x50
 801a46a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a46e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a470:	eeb0 3a67 	vmov.f32	s6, s15
 801a474:	bf08      	it	eq
 801a476:	4613      	moveq	r3, r2
 801a478:	eef0 2a47 	vmov.f32	s5, s14
 801a47c:	e789      	b.n	801a392 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a47e:	1406      	asrs	r6, r0, #16
 801a480:	d42d      	bmi.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a482:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a486:	42b4      	cmp	r4, r6
 801a488:	dd29      	ble.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a48a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a48e:	d426      	bmi.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a490:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a494:	4562      	cmp	r2, ip
 801a496:	dd22      	ble.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a498:	b224      	sxth	r4, r4
 801a49a:	9a01      	ldr	r2, [sp, #4]
 801a49c:	fb0c 6404 	mla	r4, ip, r4, r6
 801a4a0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a4a4:	0e22      	lsrs	r2, r4, #24
 801a4a6:	d01a      	beq.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a4a8:	9e04      	ldr	r6, [sp, #16]
 801a4aa:	4372      	muls	r2, r6
 801a4ac:	1c56      	adds	r6, r2, #1
 801a4ae:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a4b2:	1212      	asrs	r2, r2, #8
 801a4b4:	0a26      	lsrs	r6, r4, #8
 801a4b6:	2aff      	cmp	r2, #255	; 0xff
 801a4b8:	9605      	str	r6, [sp, #20]
 801a4ba:	d116      	bne.n	801a4ea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a4bc:	f06f 0201 	mvn.w	r2, #1
 801a4c0:	fb02 fc07 	mul.w	ip, r2, r7
 801a4c4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a4c8:	0962      	lsrs	r2, r4, #5
 801a4ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a4ce:	f026 0607 	bic.w	r6, r6, #7
 801a4d2:	4316      	orrs	r6, r2
 801a4d4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a4d8:	4326      	orrs	r6, r4
 801a4da:	f825 600c 	strh.w	r6, [r5, ip]
 801a4de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a4e0:	4410      	add	r0, r2
 801a4e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a4e4:	3f01      	subs	r7, #1
 801a4e6:	4411      	add	r1, r2
 801a4e8:	e787      	b.n	801a3fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a4ea:	f06f 0601 	mvn.w	r6, #1
 801a4ee:	437e      	muls	r6, r7
 801a4f0:	fa1f fa82 	uxth.w	sl, r2
 801a4f4:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a4f8:	9602      	str	r6, [sp, #8]
 801a4fa:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a4fe:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a502:	43d2      	mvns	r2, r2
 801a504:	b2d2      	uxtb	r2, r2
 801a506:	fb1c fc0a 	smulbb	ip, ip, sl
 801a50a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a50e:	fb0e ce02 	mla	lr, lr, r2, ip
 801a512:	b2e4      	uxtb	r4, r4
 801a514:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a518:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a51c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a520:	fa5f f888 	uxtb.w	r8, r8
 801a524:	fb14 f40a 	smulbb	r4, r4, sl
 801a528:	fb08 4402 	mla	r4, r8, r2, r4
 801a52c:	fa1f fe8e 	uxth.w	lr, lr
 801a530:	fb16 f60a 	smulbb	r6, r6, sl
 801a534:	b2a4      	uxth	r4, r4
 801a536:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a53a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a53e:	f10e 0201 	add.w	r2, lr, #1
 801a542:	1c66      	adds	r6, r4, #1
 801a544:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a548:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a54c:	fa1f fc8c 	uxth.w	ip, ip
 801a550:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a554:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a558:	ea46 0e0e 	orr.w	lr, r6, lr
 801a55c:	f10c 0601 	add.w	r6, ip, #1
 801a560:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a564:	0976      	lsrs	r6, r6, #5
 801a566:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a56a:	9a02      	ldr	r2, [sp, #8]
 801a56c:	ea4e 0e06 	orr.w	lr, lr, r6
 801a570:	f825 e002 	strh.w	lr, [r5, r2]
 801a574:	e7b3      	b.n	801a4de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a576:	f04f 0800 	mov.w	r8, #0
 801a57a:	eba3 0208 	sub.w	r2, r3, r8
 801a57e:	2a00      	cmp	r2, #0
 801a580:	f77f af3e 	ble.w	801a400 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a584:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a588:	1404      	asrs	r4, r0, #16
 801a58a:	140a      	asrs	r2, r1, #16
 801a58c:	fb06 4202 	mla	r2, r6, r2, r4
 801a590:	9c01      	ldr	r4, [sp, #4]
 801a592:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a596:	0e22      	lsrs	r2, r4, #24
 801a598:	d016      	beq.n	801a5c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a59a:	9e04      	ldr	r6, [sp, #16]
 801a59c:	4372      	muls	r2, r6
 801a59e:	1c56      	adds	r6, r2, #1
 801a5a0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a5a4:	1212      	asrs	r2, r2, #8
 801a5a6:	2aff      	cmp	r2, #255	; 0xff
 801a5a8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a5ac:	d113      	bne.n	801a5d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a5ae:	0962      	lsrs	r2, r4, #5
 801a5b0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a5b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a5b8:	f026 0607 	bic.w	r6, r6, #7
 801a5bc:	4316      	orrs	r6, r2
 801a5be:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a5c2:	4326      	orrs	r6, r4
 801a5c4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a5c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a5ca:	4410      	add	r0, r2
 801a5cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a5ce:	f108 0801 	add.w	r8, r8, #1
 801a5d2:	4411      	add	r1, r2
 801a5d4:	e7d1      	b.n	801a57a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a5d6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a5da:	fa1f fa82 	uxth.w	sl, r2
 801a5de:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a5e2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a5e6:	43d2      	mvns	r2, r2
 801a5e8:	b2d2      	uxtb	r2, r2
 801a5ea:	fb17 f70a 	smulbb	r7, r7, sl
 801a5ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a5f2:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a5f6:	b2e4      	uxtb	r4, r4
 801a5f8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a5fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a600:	fa5f fe8e 	uxtb.w	lr, lr
 801a604:	fb14 f40a 	smulbb	r4, r4, sl
 801a608:	fb0e 4402 	mla	r4, lr, r2, r4
 801a60c:	b2f6      	uxtb	r6, r6
 801a60e:	fa1f fc8c 	uxth.w	ip, ip
 801a612:	fb16 f60a 	smulbb	r6, r6, sl
 801a616:	b2a4      	uxth	r4, r4
 801a618:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a61c:	fb07 6702 	mla	r7, r7, r2, r6
 801a620:	f10c 0201 	add.w	r2, ip, #1
 801a624:	1c66      	adds	r6, r4, #1
 801a626:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a62a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a62e:	b2bf      	uxth	r7, r7
 801a630:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a634:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a638:	ea46 0c0c 	orr.w	ip, r6, ip
 801a63c:	1c7e      	adds	r6, r7, #1
 801a63e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a642:	0976      	lsrs	r6, r6, #5
 801a644:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a648:	ea4c 0c06 	orr.w	ip, ip, r6
 801a64c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a650:	e7ba      	b.n	801a5c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a652:	b007      	add	sp, #28
 801a654:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a658 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a65c:	b085      	sub	sp, #20
 801a65e:	468b      	mov	fp, r1
 801a660:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a662:	9203      	str	r2, [sp, #12]
 801a664:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a668:	6841      	ldr	r1, [r0, #4]
 801a66a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a66e:	fb01 2404 	mla	r4, r1, r4, r2
 801a672:	6802      	ldr	r2, [r0, #0]
 801a674:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a678:	f8d8 2000 	ldr.w	r2, [r8]
 801a67c:	9201      	str	r2, [sp, #4]
 801a67e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a682:	f1bb 0f00 	cmp.w	fp, #0
 801a686:	dc03      	bgt.n	801a690 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a688:	9a03      	ldr	r2, [sp, #12]
 801a68a:	2a00      	cmp	r2, #0
 801a68c:	f340 814f 	ble.w	801a92e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a690:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a692:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a696:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a69a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a69e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a6a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a6a4:	2b00      	cmp	r3, #0
 801a6a6:	dd0e      	ble.n	801a6c6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a6a8:	1408      	asrs	r0, r1, #16
 801a6aa:	d405      	bmi.n	801a6b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6ac:	42b8      	cmp	r0, r7
 801a6ae:	da03      	bge.n	801a6b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6b0:	1410      	asrs	r0, r2, #16
 801a6b2:	d401      	bmi.n	801a6b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6b4:	42b0      	cmp	r0, r6
 801a6b6:	db07      	blt.n	801a6c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a6b8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a6ba:	4401      	add	r1, r0
 801a6bc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a6be:	3b01      	subs	r3, #1
 801a6c0:	4402      	add	r2, r0
 801a6c2:	3402      	adds	r4, #2
 801a6c4:	e7ee      	b.n	801a6a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a6c6:	d017      	beq.n	801a6f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a6c8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a6ca:	1e58      	subs	r0, r3, #1
 801a6cc:	fb05 1500 	mla	r5, r5, r0, r1
 801a6d0:	142d      	asrs	r5, r5, #16
 801a6d2:	d409      	bmi.n	801a6e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6d4:	42bd      	cmp	r5, r7
 801a6d6:	da07      	bge.n	801a6e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6d8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a6da:	fb05 2000 	mla	r0, r5, r0, r2
 801a6de:	1400      	asrs	r0, r0, #16
 801a6e0:	d402      	bmi.n	801a6e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6e2:	42b0      	cmp	r0, r6
 801a6e4:	f2c0 80ba 	blt.w	801a85c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a6e8:	2600      	movs	r6, #0
 801a6ea:	1998      	adds	r0, r3, r6
 801a6ec:	2800      	cmp	r0, #0
 801a6ee:	dc3e      	bgt.n	801a76e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a6f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a6f4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a6f8:	f1bb 0f00 	cmp.w	fp, #0
 801a6fc:	f340 8117 	ble.w	801a92e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a700:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a704:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a708:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a70c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a70e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a712:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a716:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a71a:	eeb0 6a62 	vmov.f32	s12, s5
 801a71e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a722:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a726:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a72a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a72e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a732:	eeb0 6a43 	vmov.f32	s12, s6
 801a736:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a73a:	ee12 2a90 	vmov	r2, s5
 801a73e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a742:	fb92 f3f3 	sdiv	r3, r2, r3
 801a746:	ee13 2a10 	vmov	r2, s6
 801a74a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a74e:	9311      	str	r3, [sp, #68]	; 0x44
 801a750:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a752:	fb92 f3f3 	sdiv	r3, r2, r3
 801a756:	9a03      	ldr	r2, [sp, #12]
 801a758:	9312      	str	r3, [sp, #72]	; 0x48
 801a75a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a75e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a760:	eeb0 3a67 	vmov.f32	s6, s15
 801a764:	bf08      	it	eq
 801a766:	4613      	moveq	r3, r2
 801a768:	eef0 2a47 	vmov.f32	s5, s14
 801a76c:	e789      	b.n	801a682 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a76e:	140f      	asrs	r7, r1, #16
 801a770:	d424      	bmi.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a772:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a776:	42bd      	cmp	r5, r7
 801a778:	dd20      	ble.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a77a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a77e:	d41d      	bmi.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a780:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a784:	4560      	cmp	r0, ip
 801a786:	dd19      	ble.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a788:	b22d      	sxth	r5, r5
 801a78a:	fb0c 7505 	mla	r5, ip, r5, r7
 801a78e:	9801      	ldr	r0, [sp, #4]
 801a790:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a794:	0e07      	lsrs	r7, r0, #24
 801a796:	2fff      	cmp	r7, #255	; 0xff
 801a798:	d116      	bne.n	801a7c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a79a:	f06f 0501 	mvn.w	r5, #1
 801a79e:	fb05 f706 	mul.w	r7, r5, r6
 801a7a2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a7a6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a7aa:	0945      	lsrs	r5, r0, #5
 801a7ac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a7b0:	ea4c 0505 	orr.w	r5, ip, r5
 801a7b4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a7b8:	4305      	orrs	r5, r0
 801a7ba:	53e5      	strh	r5, [r4, r7]
 801a7bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a7be:	4401      	add	r1, r0
 801a7c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a7c2:	3e01      	subs	r6, #1
 801a7c4:	4402      	add	r2, r0
 801a7c6:	e790      	b.n	801a6ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a7c8:	b2fd      	uxtb	r5, r7
 801a7ca:	2f00      	cmp	r7, #0
 801a7cc:	d0f6      	beq.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a7ce:	f06f 0701 	mvn.w	r7, #1
 801a7d2:	4377      	muls	r7, r6
 801a7d4:	fa1f f985 	uxth.w	r9, r5
 801a7d8:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a7dc:	9702      	str	r7, [sp, #8]
 801a7de:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a7e2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a7e6:	43ed      	mvns	r5, r5
 801a7e8:	b2ed      	uxtb	r5, r5
 801a7ea:	fb17 f709 	smulbb	r7, r7, r9
 801a7ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a7f2:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a7f6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a7fa:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a7fe:	b2c0      	uxtb	r0, r0
 801a800:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a804:	fa5f fe8e 	uxtb.w	lr, lr
 801a808:	fb10 f009 	smulbb	r0, r0, r9
 801a80c:	fb0e 0005 	mla	r0, lr, r5, r0
 801a810:	b280      	uxth	r0, r0
 801a812:	fa1f fc8c 	uxth.w	ip, ip
 801a816:	fb1a fa09 	smulbb	sl, sl, r9
 801a81a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a81e:	fb07 a705 	mla	r7, r7, r5, sl
 801a822:	f100 0a01 	add.w	sl, r0, #1
 801a826:	f10c 0501 	add.w	r5, ip, #1
 801a82a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a82e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a832:	b2bf      	uxth	r7, r7
 801a834:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a838:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a83c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a840:	f107 0a01 	add.w	sl, r7, #1
 801a844:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a848:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a84c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a850:	9802      	ldr	r0, [sp, #8]
 801a852:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a856:	f824 c000 	strh.w	ip, [r4, r0]
 801a85a:	e7af      	b.n	801a7bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a85c:	f04f 0e00 	mov.w	lr, #0
 801a860:	eba3 000e 	sub.w	r0, r3, lr
 801a864:	2800      	cmp	r0, #0
 801a866:	f77f af43 	ble.w	801a6f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a86a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a86e:	140d      	asrs	r5, r1, #16
 801a870:	1410      	asrs	r0, r2, #16
 801a872:	fb06 5000 	mla	r0, r6, r0, r5
 801a876:	9d01      	ldr	r5, [sp, #4]
 801a878:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a87c:	0e2e      	lsrs	r6, r5, #24
 801a87e:	2eff      	cmp	r6, #255	; 0xff
 801a880:	d112      	bne.n	801a8a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a882:	482c      	ldr	r0, [pc, #176]	; (801a934 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a884:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a888:	0968      	lsrs	r0, r5, #5
 801a88a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a88e:	4330      	orrs	r0, r6
 801a890:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a894:	4328      	orrs	r0, r5
 801a896:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a89a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a89c:	4401      	add	r1, r0
 801a89e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a8a0:	f10e 0e01 	add.w	lr, lr, #1
 801a8a4:	4402      	add	r2, r0
 801a8a6:	e7db      	b.n	801a860 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a8a8:	b2f0      	uxtb	r0, r6
 801a8aa:	2e00      	cmp	r6, #0
 801a8ac:	d0f5      	beq.n	801a89a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a8ae:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a8b2:	fa1f f980 	uxth.w	r9, r0
 801a8b6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a8ba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a8be:	43c0      	mvns	r0, r0
 801a8c0:	b2c0      	uxtb	r0, r0
 801a8c2:	fb16 f609 	smulbb	r6, r6, r9
 801a8c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a8ca:	fb07 6700 	mla	r7, r7, r0, r6
 801a8ce:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a8d2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a8d6:	b2ed      	uxtb	r5, r5
 801a8d8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a8dc:	fa5f fc8c 	uxtb.w	ip, ip
 801a8e0:	fb15 f509 	smulbb	r5, r5, r9
 801a8e4:	fb0c 5500 	mla	r5, ip, r0, r5
 801a8e8:	b2bf      	uxth	r7, r7
 801a8ea:	fb1a fa09 	smulbb	sl, sl, r9
 801a8ee:	b2ad      	uxth	r5, r5
 801a8f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a8f4:	fb06 a600 	mla	r6, r6, r0, sl
 801a8f8:	1c78      	adds	r0, r7, #1
 801a8fa:	f105 0a01 	add.w	sl, r5, #1
 801a8fe:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a902:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a906:	b2b6      	uxth	r6, r6
 801a908:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a90c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a910:	ea4a 0707 	orr.w	r7, sl, r7
 801a914:	f106 0a01 	add.w	sl, r6, #1
 801a918:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a91c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a920:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a924:	ea47 070a 	orr.w	r7, r7, sl
 801a928:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a92c:	e7b5      	b.n	801a89a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a92e:	b005      	add	sp, #20
 801a930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a934:	fffff800 	.word	0xfffff800

0801a938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a93c:	b087      	sub	sp, #28
 801a93e:	468b      	mov	fp, r1
 801a940:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a942:	9203      	str	r2, [sp, #12]
 801a944:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a948:	9204      	str	r2, [sp, #16]
 801a94a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a94e:	6841      	ldr	r1, [r0, #4]
 801a950:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a954:	fb01 2404 	mla	r4, r1, r4, r2
 801a958:	6802      	ldr	r2, [r0, #0]
 801a95a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a95e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a962:	3201      	adds	r2, #1
 801a964:	f022 0201 	bic.w	r2, r2, #1
 801a968:	9200      	str	r2, [sp, #0]
 801a96a:	f8d9 2000 	ldr.w	r2, [r9]
 801a96e:	9201      	str	r2, [sp, #4]
 801a970:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a974:	f1bb 0f00 	cmp.w	fp, #0
 801a978:	dc03      	bgt.n	801a982 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a97a:	9a03      	ldr	r2, [sp, #12]
 801a97c:	2a00      	cmp	r2, #0
 801a97e:	f340 8169 	ble.w	801ac54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a982:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a984:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a988:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a98c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a990:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a992:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a996:	2b00      	cmp	r3, #0
 801a998:	dd0e      	ble.n	801a9b8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a99a:	1402      	asrs	r2, r0, #16
 801a99c:	d405      	bmi.n	801a9aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a99e:	42ba      	cmp	r2, r7
 801a9a0:	da03      	bge.n	801a9aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a9a2:	140a      	asrs	r2, r1, #16
 801a9a4:	d401      	bmi.n	801a9aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a9a6:	42b2      	cmp	r2, r6
 801a9a8:	db07      	blt.n	801a9ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a9aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a9ac:	4410      	add	r0, r2
 801a9ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a9b0:	3b01      	subs	r3, #1
 801a9b2:	4411      	add	r1, r2
 801a9b4:	3402      	adds	r4, #2
 801a9b6:	e7ee      	b.n	801a996 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a9b8:	d017      	beq.n	801a9ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a9ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a9bc:	1e5a      	subs	r2, r3, #1
 801a9be:	fb05 0502 	mla	r5, r5, r2, r0
 801a9c2:	142d      	asrs	r5, r5, #16
 801a9c4:	d409      	bmi.n	801a9da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a9c6:	42bd      	cmp	r5, r7
 801a9c8:	da07      	bge.n	801a9da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a9ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a9cc:	fb05 1202 	mla	r2, r5, r2, r1
 801a9d0:	1412      	asrs	r2, r2, #16
 801a9d2:	d402      	bmi.n	801a9da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a9d4:	42b2      	cmp	r2, r6
 801a9d6:	f2c0 80c7 	blt.w	801ab68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a9da:	2700      	movs	r7, #0
 801a9dc:	19da      	adds	r2, r3, r7
 801a9de:	2a00      	cmp	r2, #0
 801a9e0:	dc3e      	bgt.n	801aa60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a9e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a9ea:	f1bb 0f00 	cmp.w	fp, #0
 801a9ee:	f340 8131 	ble.w	801ac54 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a9f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a9f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a9fa:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a9fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa00:	f1bb 0b01 	subs.w	fp, fp, #1
 801aa04:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa0c:	eeb0 6a62 	vmov.f32	s12, s5
 801aa10:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa18:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa1c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aa20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa24:	eeb0 6a43 	vmov.f32	s12, s6
 801aa28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa2c:	ee12 2a90 	vmov	r2, s5
 801aa30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa34:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa38:	ee13 2a10 	vmov	r2, s6
 801aa3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa40:	9313      	str	r3, [sp, #76]	; 0x4c
 801aa42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa44:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa48:	9a03      	ldr	r2, [sp, #12]
 801aa4a:	9314      	str	r3, [sp, #80]	; 0x50
 801aa4c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aa50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa52:	eeb0 3a67 	vmov.f32	s6, s15
 801aa56:	bf08      	it	eq
 801aa58:	4613      	moveq	r3, r2
 801aa5a:	eef0 2a47 	vmov.f32	s5, s14
 801aa5e:	e789      	b.n	801a974 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aa60:	1405      	asrs	r5, r0, #16
 801aa62:	d435      	bmi.n	801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa64:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801aa68:	42aa      	cmp	r2, r5
 801aa6a:	dd31      	ble.n	801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa6c:	140e      	asrs	r6, r1, #16
 801aa6e:	d42f      	bmi.n	801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa70:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801aa74:	42b2      	cmp	r2, r6
 801aa76:	dd2b      	ble.n	801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa78:	9a00      	ldr	r2, [sp, #0]
 801aa7a:	fb06 5502 	mla	r5, r6, r2, r5
 801aa7e:	086a      	lsrs	r2, r5, #1
 801aa80:	9e01      	ldr	r6, [sp, #4]
 801aa82:	5cb2      	ldrb	r2, [r6, r2]
 801aa84:	07ee      	lsls	r6, r5, #31
 801aa86:	bf54      	ite	pl
 801aa88:	f002 020f 	andpl.w	r2, r2, #15
 801aa8c:	1112      	asrmi	r2, r2, #4
 801aa8e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aa92:	b2d2      	uxtb	r2, r2
 801aa94:	b1e2      	cbz	r2, 801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa96:	9d04      	ldr	r5, [sp, #16]
 801aa98:	436a      	muls	r2, r5
 801aa9a:	1c55      	adds	r5, r2, #1
 801aa9c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801aaa0:	4d6e      	ldr	r5, [pc, #440]	; (801ac5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801aaa2:	682d      	ldr	r5, [r5, #0]
 801aaa4:	1212      	asrs	r2, r2, #8
 801aaa6:	0a2e      	lsrs	r6, r5, #8
 801aaa8:	2aff      	cmp	r2, #255	; 0xff
 801aaaa:	9605      	str	r6, [sp, #20]
 801aaac:	d116      	bne.n	801aadc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801aaae:	f06f 0201 	mvn.w	r2, #1
 801aab2:	fb02 fc07 	mul.w	ip, r2, r7
 801aab6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801aaba:	096a      	lsrs	r2, r5, #5
 801aabc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aac0:	f026 0607 	bic.w	r6, r6, #7
 801aac4:	4316      	orrs	r6, r2
 801aac6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aaca:	432e      	orrs	r6, r5
 801aacc:	f824 600c 	strh.w	r6, [r4, ip]
 801aad0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aad2:	4410      	add	r0, r2
 801aad4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aad6:	3f01      	subs	r7, #1
 801aad8:	4411      	add	r1, r2
 801aada:	e77f      	b.n	801a9dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801aadc:	f06f 0601 	mvn.w	r6, #1
 801aae0:	437e      	muls	r6, r7
 801aae2:	fa1f fa82 	uxth.w	sl, r2
 801aae6:	f834 8006 	ldrh.w	r8, [r4, r6]
 801aaea:	9602      	str	r6, [sp, #8]
 801aaec:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801aaf0:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801aaf4:	43d2      	mvns	r2, r2
 801aaf6:	b2d2      	uxtb	r2, r2
 801aaf8:	fb1c fc0a 	smulbb	ip, ip, sl
 801aafc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ab00:	fb0e ce02 	mla	lr, lr, r2, ip
 801ab04:	b2ed      	uxtb	r5, r5
 801ab06:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ab0a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ab0e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ab12:	fa5f f888 	uxtb.w	r8, r8
 801ab16:	fb15 f50a 	smulbb	r5, r5, sl
 801ab1a:	fb08 5502 	mla	r5, r8, r2, r5
 801ab1e:	fa1f fe8e 	uxth.w	lr, lr
 801ab22:	fb16 f60a 	smulbb	r6, r6, sl
 801ab26:	b2ad      	uxth	r5, r5
 801ab28:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ab2c:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ab30:	f10e 0201 	add.w	r2, lr, #1
 801ab34:	1c6e      	adds	r6, r5, #1
 801ab36:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801ab3a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801ab3e:	fa1f fc8c 	uxth.w	ip, ip
 801ab42:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ab46:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ab4a:	ea46 0e0e 	orr.w	lr, r6, lr
 801ab4e:	f10c 0601 	add.w	r6, ip, #1
 801ab52:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ab56:	0976      	lsrs	r6, r6, #5
 801ab58:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ab5c:	9a02      	ldr	r2, [sp, #8]
 801ab5e:	ea4e 0e06 	orr.w	lr, lr, r6
 801ab62:	f824 e002 	strh.w	lr, [r4, r2]
 801ab66:	e7b3      	b.n	801aad0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab68:	f04f 0800 	mov.w	r8, #0
 801ab6c:	eba3 0208 	sub.w	r2, r3, r8
 801ab70:	2a00      	cmp	r2, #0
 801ab72:	f77f af36 	ble.w	801a9e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ab76:	9e00      	ldr	r6, [sp, #0]
 801ab78:	1402      	asrs	r2, r0, #16
 801ab7a:	140d      	asrs	r5, r1, #16
 801ab7c:	fb06 2505 	mla	r5, r6, r5, r2
 801ab80:	086a      	lsrs	r2, r5, #1
 801ab82:	9e01      	ldr	r6, [sp, #4]
 801ab84:	5cb2      	ldrb	r2, [r6, r2]
 801ab86:	07ed      	lsls	r5, r5, #31
 801ab88:	bf54      	ite	pl
 801ab8a:	f002 020f 	andpl.w	r2, r2, #15
 801ab8e:	1112      	asrmi	r2, r2, #4
 801ab90:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ab94:	b2d2      	uxtb	r2, r2
 801ab96:	b1c2      	cbz	r2, 801abca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ab98:	9d04      	ldr	r5, [sp, #16]
 801ab9a:	436a      	muls	r2, r5
 801ab9c:	1c55      	adds	r5, r2, #1
 801ab9e:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801aba2:	4d2e      	ldr	r5, [pc, #184]	; (801ac5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801aba4:	1212      	asrs	r2, r2, #8
 801aba6:	682e      	ldr	r6, [r5, #0]
 801aba8:	2aff      	cmp	r2, #255	; 0xff
 801abaa:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801abae:	d113      	bne.n	801abd8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801abb0:	0972      	lsrs	r2, r6, #5
 801abb2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801abb6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801abba:	f025 0507 	bic.w	r5, r5, #7
 801abbe:	4315      	orrs	r5, r2
 801abc0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801abc4:	4335      	orrs	r5, r6
 801abc6:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801abca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801abcc:	4410      	add	r0, r2
 801abce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801abd0:	f108 0801 	add.w	r8, r8, #1
 801abd4:	4411      	add	r1, r2
 801abd6:	e7c9      	b.n	801ab6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801abd8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801abdc:	fa1f fa82 	uxth.w	sl, r2
 801abe0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801abe4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801abe8:	43d2      	mvns	r2, r2
 801abea:	b2d2      	uxtb	r2, r2
 801abec:	fb17 f70a 	smulbb	r7, r7, sl
 801abf0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801abf4:	fb0c 7c02 	mla	ip, ip, r2, r7
 801abf8:	b2f6      	uxtb	r6, r6
 801abfa:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801abfe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ac02:	fa5f fe8e 	uxtb.w	lr, lr
 801ac06:	fb16 f60a 	smulbb	r6, r6, sl
 801ac0a:	fb0e 6602 	mla	r6, lr, r2, r6
 801ac0e:	b2ed      	uxtb	r5, r5
 801ac10:	fa1f fc8c 	uxth.w	ip, ip
 801ac14:	fb15 f50a 	smulbb	r5, r5, sl
 801ac18:	b2b6      	uxth	r6, r6
 801ac1a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ac1e:	fb07 5702 	mla	r7, r7, r2, r5
 801ac22:	f10c 0201 	add.w	r2, ip, #1
 801ac26:	1c75      	adds	r5, r6, #1
 801ac28:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ac2c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ac30:	b2bf      	uxth	r7, r7
 801ac32:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ac36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac3a:	ea45 0c0c 	orr.w	ip, r5, ip
 801ac3e:	1c7d      	adds	r5, r7, #1
 801ac40:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801ac44:	096d      	lsrs	r5, r5, #5
 801ac46:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ac4a:	ea4c 0c05 	orr.w	ip, ip, r5
 801ac4e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801ac52:	e7ba      	b.n	801abca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ac54:	b007      	add	sp, #28
 801ac56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac5a:	bf00      	nop
 801ac5c:	20012e84 	.word	0x20012e84

0801ac60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac64:	b087      	sub	sp, #28
 801ac66:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801af74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801ac6a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ac6c:	9205      	str	r2, [sp, #20]
 801ac6e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ac72:	9101      	str	r1, [sp, #4]
 801ac74:	6841      	ldr	r1, [r0, #4]
 801ac76:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801ac7a:	fb01 2404 	mla	r4, r1, r4, r2
 801ac7e:	6802      	ldr	r2, [r0, #0]
 801ac80:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ac84:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ac88:	3201      	adds	r2, #1
 801ac8a:	f022 0201 	bic.w	r2, r2, #1
 801ac8e:	9202      	str	r2, [sp, #8]
 801ac90:	f8db 2000 	ldr.w	r2, [fp]
 801ac94:	9203      	str	r2, [sp, #12]
 801ac96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ac9a:	9a01      	ldr	r2, [sp, #4]
 801ac9c:	2a00      	cmp	r2, #0
 801ac9e:	dc03      	bgt.n	801aca8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801aca0:	9a05      	ldr	r2, [sp, #20]
 801aca2:	2a00      	cmp	r2, #0
 801aca4:	f340 8162 	ble.w	801af6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801aca8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801acaa:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801acae:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801acb2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801acb6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801acb8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801acbc:	2b00      	cmp	r3, #0
 801acbe:	dd0e      	ble.n	801acde <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801acc0:	1402      	asrs	r2, r0, #16
 801acc2:	d405      	bmi.n	801acd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801acc4:	42ba      	cmp	r2, r7
 801acc6:	da03      	bge.n	801acd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801acc8:	140a      	asrs	r2, r1, #16
 801acca:	d401      	bmi.n	801acd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801accc:	42b2      	cmp	r2, r6
 801acce:	db07      	blt.n	801ace0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801acd0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801acd2:	4410      	add	r0, r2
 801acd4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801acd6:	3b01      	subs	r3, #1
 801acd8:	4411      	add	r1, r2
 801acda:	3402      	adds	r4, #2
 801acdc:	e7ee      	b.n	801acbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801acde:	d017      	beq.n	801ad10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801ace0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ace2:	1e5a      	subs	r2, r3, #1
 801ace4:	fb05 0502 	mla	r5, r5, r2, r0
 801ace8:	142d      	asrs	r5, r5, #16
 801acea:	d409      	bmi.n	801ad00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801acec:	42bd      	cmp	r5, r7
 801acee:	da07      	bge.n	801ad00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801acf0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801acf2:	fb05 1202 	mla	r2, r5, r2, r1
 801acf6:	1412      	asrs	r2, r2, #16
 801acf8:	d402      	bmi.n	801ad00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801acfa:	42b2      	cmp	r2, r6
 801acfc:	f2c0 80c3 	blt.w	801ae86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801ad00:	2500      	movs	r5, #0
 801ad02:	195a      	adds	r2, r3, r5
 801ad04:	2a00      	cmp	r2, #0
 801ad06:	dc3f      	bgt.n	801ad88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ad08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad0c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ad10:	9b01      	ldr	r3, [sp, #4]
 801ad12:	2b00      	cmp	r3, #0
 801ad14:	f340 812a 	ble.w	801af6c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ad18:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad1c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad20:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad26:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad2e:	eeb0 6a62 	vmov.f32	s12, s5
 801ad32:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad3e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ad42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad46:	eeb0 6a43 	vmov.f32	s12, s6
 801ad4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad4e:	ee12 2a90 	vmov	r2, s5
 801ad52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad56:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad5a:	ee13 2a10 	vmov	r2, s6
 801ad5e:	9313      	str	r3, [sp, #76]	; 0x4c
 801ad60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad62:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad66:	9314      	str	r3, [sp, #80]	; 0x50
 801ad68:	9b01      	ldr	r3, [sp, #4]
 801ad6a:	9a05      	ldr	r2, [sp, #20]
 801ad6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad70:	3b01      	subs	r3, #1
 801ad72:	9301      	str	r3, [sp, #4]
 801ad74:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ad78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad7a:	eeb0 3a67 	vmov.f32	s6, s15
 801ad7e:	bf08      	it	eq
 801ad80:	4613      	moveq	r3, r2
 801ad82:	eef0 2a47 	vmov.f32	s5, s14
 801ad86:	e788      	b.n	801ac9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ad88:	1406      	asrs	r6, r0, #16
 801ad8a:	d42c      	bmi.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad8c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ad90:	42b2      	cmp	r2, r6
 801ad92:	dd28      	ble.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad94:	140f      	asrs	r7, r1, #16
 801ad96:	d426      	bmi.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad98:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ad9c:	42ba      	cmp	r2, r7
 801ad9e:	dd22      	ble.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ada0:	9a02      	ldr	r2, [sp, #8]
 801ada2:	fb07 6602 	mla	r6, r7, r2, r6
 801ada6:	0872      	lsrs	r2, r6, #1
 801ada8:	9f03      	ldr	r7, [sp, #12]
 801adaa:	5cba      	ldrb	r2, [r7, r2]
 801adac:	07f6      	lsls	r6, r6, #31
 801adae:	bf54      	ite	pl
 801adb0:	f002 020f 	andpl.w	r2, r2, #15
 801adb4:	1112      	asrmi	r2, r2, #4
 801adb6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801adba:	b2d2      	uxtb	r2, r2
 801adbc:	2aff      	cmp	r2, #255	; 0xff
 801adbe:	d118      	bne.n	801adf2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801adc0:	f8d8 2000 	ldr.w	r2, [r8]
 801adc4:	f06f 0601 	mvn.w	r6, #1
 801adc8:	fb06 f705 	mul.w	r7, r6, r5
 801adcc:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801add0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801add4:	0956      	lsrs	r6, r2, #5
 801add6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801adda:	ea4c 0606 	orr.w	r6, ip, r6
 801adde:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ade2:	4316      	orrs	r6, r2
 801ade4:	53e6      	strh	r6, [r4, r7]
 801ade6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ade8:	4410      	add	r0, r2
 801adea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801adec:	3d01      	subs	r5, #1
 801adee:	4411      	add	r1, r2
 801adf0:	e787      	b.n	801ad02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801adf2:	2a00      	cmp	r2, #0
 801adf4:	d0f7      	beq.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801adf6:	f06f 0601 	mvn.w	r6, #1
 801adfa:	436e      	muls	r6, r5
 801adfc:	f8d8 c000 	ldr.w	ip, [r8]
 801ae00:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ae04:	9604      	str	r6, [sp, #16]
 801ae06:	fa1f f982 	uxth.w	r9, r2
 801ae0a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ae0e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ae12:	43d2      	mvns	r2, r2
 801ae14:	b2d2      	uxtb	r2, r2
 801ae16:	fb16 f609 	smulbb	r6, r6, r9
 801ae1a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae1e:	fb07 6702 	mla	r7, r7, r2, r6
 801ae22:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ae26:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ae2a:	fa5f fc8c 	uxtb.w	ip, ip
 801ae2e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ae32:	fa5f fe8e 	uxtb.w	lr, lr
 801ae36:	fb1c fc09 	smulbb	ip, ip, r9
 801ae3a:	fb0e cc02 	mla	ip, lr, r2, ip
 801ae3e:	b2bf      	uxth	r7, r7
 801ae40:	fb1a fa09 	smulbb	sl, sl, r9
 801ae44:	fa1f fc8c 	uxth.w	ip, ip
 801ae48:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ae4c:	fb06 a602 	mla	r6, r6, r2, sl
 801ae50:	1c7a      	adds	r2, r7, #1
 801ae52:	f10c 0a01 	add.w	sl, ip, #1
 801ae56:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ae5a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801ae5e:	b2b6      	uxth	r6, r6
 801ae60:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae64:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ae68:	ea4a 0707 	orr.w	r7, sl, r7
 801ae6c:	f106 0a01 	add.w	sl, r6, #1
 801ae70:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ae74:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae78:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae7c:	9a04      	ldr	r2, [sp, #16]
 801ae7e:	ea47 070a 	orr.w	r7, r7, sl
 801ae82:	52a7      	strh	r7, [r4, r2]
 801ae84:	e7af      	b.n	801ade6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae86:	f04f 0e00 	mov.w	lr, #0
 801ae8a:	eba3 020e 	sub.w	r2, r3, lr
 801ae8e:	2a00      	cmp	r2, #0
 801ae90:	f77f af3a 	ble.w	801ad08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ae94:	9e02      	ldr	r6, [sp, #8]
 801ae96:	1402      	asrs	r2, r0, #16
 801ae98:	140d      	asrs	r5, r1, #16
 801ae9a:	fb06 2505 	mla	r5, r6, r5, r2
 801ae9e:	086a      	lsrs	r2, r5, #1
 801aea0:	9e03      	ldr	r6, [sp, #12]
 801aea2:	5cb2      	ldrb	r2, [r6, r2]
 801aea4:	07ed      	lsls	r5, r5, #31
 801aea6:	bf54      	ite	pl
 801aea8:	f002 020f 	andpl.w	r2, r2, #15
 801aeac:	1112      	asrmi	r2, r2, #4
 801aeae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aeb2:	b2d2      	uxtb	r2, r2
 801aeb4:	2aff      	cmp	r2, #255	; 0xff
 801aeb6:	d115      	bne.n	801aee4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801aeb8:	f8d8 5000 	ldr.w	r5, [r8]
 801aebc:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801aec0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801aec4:	096a      	lsrs	r2, r5, #5
 801aec6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aeca:	4332      	orrs	r2, r6
 801aecc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aed0:	432a      	orrs	r2, r5
 801aed2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801aed6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aed8:	4410      	add	r0, r2
 801aeda:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aedc:	f10e 0e01 	add.w	lr, lr, #1
 801aee0:	4411      	add	r1, r2
 801aee2:	e7d2      	b.n	801ae8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801aee4:	2a00      	cmp	r2, #0
 801aee6:	d0f6      	beq.n	801aed6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801aee8:	f8d8 7000 	ldr.w	r7, [r8]
 801aeec:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801aef0:	fa1f f982 	uxth.w	r9, r2
 801aef4:	ea4f 262c 	mov.w	r6, ip, asr #8
 801aef8:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801aefc:	43d2      	mvns	r2, r2
 801aefe:	b2d2      	uxtb	r2, r2
 801af00:	fb15 f509 	smulbb	r5, r5, r9
 801af04:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801af08:	fb06 5602 	mla	r6, r6, r2, r5
 801af0c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801af10:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801af14:	b2ff      	uxtb	r7, r7
 801af16:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801af1a:	fa5f fc8c 	uxtb.w	ip, ip
 801af1e:	fb17 f709 	smulbb	r7, r7, r9
 801af22:	fb0c 7702 	mla	r7, ip, r2, r7
 801af26:	b2b6      	uxth	r6, r6
 801af28:	fb1a fa09 	smulbb	sl, sl, r9
 801af2c:	b2bf      	uxth	r7, r7
 801af2e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801af32:	fb05 a502 	mla	r5, r5, r2, sl
 801af36:	1c72      	adds	r2, r6, #1
 801af38:	f107 0a01 	add.w	sl, r7, #1
 801af3c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801af40:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801af44:	b2ad      	uxth	r5, r5
 801af46:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af4a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801af4e:	ea4a 0606 	orr.w	r6, sl, r6
 801af52:	f105 0a01 	add.w	sl, r5, #1
 801af56:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801af5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af62:	ea46 060a 	orr.w	r6, r6, sl
 801af66:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801af6a:	e7b4      	b.n	801aed6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801af6c:	b007      	add	sp, #28
 801af6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af72:	bf00      	nop
 801af74:	20012e84 	.word	0x20012e84

0801af78 <_ZN8touchgfx8LCD16bppD1Ev>:
 801af78:	4770      	bx	lr

0801af7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801af7a:	4770      	bx	lr

0801af7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801af7c:	4770      	bx	lr

0801af7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801af7e:	4770      	bx	lr

0801af80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801af80:	4770      	bx	lr

0801af82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801af82:	4770      	bx	lr

0801af84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801af84:	4770      	bx	lr

0801af86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801af86:	4770      	bx	lr

0801af88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801af88:	4770      	bx	lr

0801af8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801af8a:	4770      	bx	lr

0801af8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801af8c:	4770      	bx	lr

0801af8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801af8e:	4770      	bx	lr

0801af90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801af90:	4770      	bx	lr

0801af92 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801af92:	4770      	bx	lr

0801af94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801af94:	4770      	bx	lr

0801af96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801af96:	4770      	bx	lr

0801af98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801af98:	4770      	bx	lr

0801af9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801af9a:	4770      	bx	lr

0801af9c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801af9c:	4770      	bx	lr

0801af9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801af9e:	4770      	bx	lr

0801afa0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801afa0:	4770      	bx	lr

0801afa2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801afa2:	4770      	bx	lr

0801afa4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801afa4:	4770      	bx	lr

0801afa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801afa6:	4770      	bx	lr

0801afa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801afa8:	4770      	bx	lr

0801afaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801afaa:	4770      	bx	lr

0801afac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801afac:	4770      	bx	lr

0801afae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801afae:	4770      	bx	lr

0801afb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801afb0:	4770      	bx	lr

0801afb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801afb2:	4770      	bx	lr

0801afb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801afb4:	4770      	bx	lr

0801afb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801afb6:	4770      	bx	lr

0801afb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801afb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801afbc:	b088      	sub	sp, #32
 801afbe:	ac08      	add	r4, sp, #32
 801afc0:	4606      	mov	r6, r0
 801afc2:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801afc6:	4620      	mov	r0, r4
 801afc8:	4688      	mov	r8, r1
 801afca:	4691      	mov	r9, r2
 801afcc:	f7fd fc62 	bl	8018894 <_ZNK8touchgfx6Bitmap7getDataEv>
 801afd0:	6833      	ldr	r3, [r6, #0]
 801afd2:	4605      	mov	r5, r0
 801afd4:	4620      	mov	r0, r4
 801afd6:	699f      	ldr	r7, [r3, #24]
 801afd8:	f7fd fb70 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801afdc:	4682      	mov	sl, r0
 801afde:	4620      	mov	r0, r4
 801afe0:	f7fd fba0 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801afe4:	9500      	str	r5, [sp, #0]
 801afe6:	e9cd a001 	strd	sl, r0, [sp, #4]
 801afea:	464b      	mov	r3, r9
 801afec:	a806      	add	r0, sp, #24
 801afee:	4642      	mov	r2, r8
 801aff0:	4631      	mov	r1, r6
 801aff2:	47b8      	blx	r7
 801aff4:	4628      	mov	r0, r5
 801aff6:	b008      	add	sp, #32
 801aff8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801affc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801affc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801b000:	2300      	movs	r3, #0
 801b002:	9300      	str	r3, [sp, #0]
 801b004:	4b3d      	ldr	r3, [pc, #244]	; (801b0fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801b006:	781b      	ldrb	r3, [r3, #0]
 801b008:	2b00      	cmp	r3, #0
 801b00a:	d137      	bne.n	801b07c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801b00c:	4a3c      	ldr	r2, [pc, #240]	; (801b100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b00e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801b012:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b016:	2b00      	cmp	r3, #0
 801b018:	d132      	bne.n	801b080 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801b01a:	4b3a      	ldr	r3, [pc, #232]	; (801b104 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b01c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b020:	6808      	ldr	r0, [r1, #0]
 801b022:	6849      	ldr	r1, [r1, #4]
 801b024:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b028:	ac02      	add	r4, sp, #8
 801b02a:	ab02      	add	r3, sp, #8
 801b02c:	c303      	stmia	r3!, {r0, r1}
 801b02e:	4669      	mov	r1, sp
 801b030:	4620      	mov	r0, r4
 801b032:	f7f9 ffb5 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b036:	4668      	mov	r0, sp
 801b038:	f7f9 ff6e 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b03c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801b040:	f8bd 2000 	ldrh.w	r2, [sp]
 801b044:	4d30      	ldr	r5, [pc, #192]	; (801b108 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801b046:	4413      	add	r3, r2
 801b048:	f8ad 3008 	strh.w	r3, [sp, #8]
 801b04c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b050:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801b054:	6828      	ldr	r0, [r5, #0]
 801b056:	4413      	add	r3, r2
 801b058:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b05c:	6803      	ldr	r3, [r0, #0]
 801b05e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b060:	4798      	blx	r3
 801b062:	f010 0f01 	tst.w	r0, #1
 801b066:	462f      	mov	r7, r5
 801b068:	d00c      	beq.n	801b084 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801b06a:	6828      	ldr	r0, [r5, #0]
 801b06c:	6803      	ldr	r3, [r0, #0]
 801b06e:	e894 0006 	ldmia.w	r4, {r1, r2}
 801b072:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b074:	4798      	blx	r3
 801b076:	b004      	add	sp, #16
 801b078:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b07c:	4a21      	ldr	r2, [pc, #132]	; (801b104 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b07e:	e7c6      	b.n	801b00e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801b080:	4b1f      	ldr	r3, [pc, #124]	; (801b100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b082:	e7cb      	b.n	801b01c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801b084:	6838      	ldr	r0, [r7, #0]
 801b086:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801b08a:	6803      	ldr	r3, [r0, #0]
 801b08c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801b090:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b092:	4798      	blx	r3
 801b094:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801b098:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b09c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801b0a0:	fb16 3602 	smlabb	r6, r6, r2, r3
 801b0a4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b0a8:	6838      	ldr	r0, [r7, #0]
 801b0aa:	6803      	ldr	r3, [r0, #0]
 801b0ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b0ae:	4798      	blx	r3
 801b0b0:	4a13      	ldr	r2, [pc, #76]	; (801b100 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b0b2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801b0b6:	8813      	ldrh	r3, [r2, #0]
 801b0b8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b0bc:	fb03 1404 	mla	r4, r3, r4, r1
 801b0c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b0c4:	435d      	muls	r5, r3
 801b0c6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b0ca:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801b0ce:	4691      	mov	r9, r2
 801b0d0:	6838      	ldr	r0, [r7, #0]
 801b0d2:	42ac      	cmp	r4, r5
 801b0d4:	6803      	ldr	r3, [r0, #0]
 801b0d6:	d20e      	bcs.n	801b0f6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801b0d8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801b0dc:	4632      	mov	r2, r6
 801b0de:	4643      	mov	r3, r8
 801b0e0:	4621      	mov	r1, r4
 801b0e2:	47d0      	blx	sl
 801b0e4:	f8b9 3000 	ldrh.w	r3, [r9]
 801b0e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b0ec:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b0f0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b0f4:	e7ec      	b.n	801b0d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801b0f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b0f8:	4798      	blx	r3
 801b0fa:	e7bc      	b.n	801b076 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801b0fc:	20012e6c 	.word	0x20012e6c
 801b100:	20012e6e 	.word	0x20012e6e
 801b104:	20012e70 	.word	0x20012e70
 801b108:	20012e74 	.word	0x20012e74

0801b10c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801b10c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b110:	b08b      	sub	sp, #44	; 0x2c
 801b112:	460f      	mov	r7, r1
 801b114:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801b118:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801b11c:	4616      	mov	r6, r2
 801b11e:	f1bb 0f00 	cmp.w	fp, #0
 801b122:	d04a      	beq.n	801b1ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b124:	6810      	ldr	r0, [r2, #0]
 801b126:	6851      	ldr	r1, [r2, #4]
 801b128:	ad06      	add	r5, sp, #24
 801b12a:	c503      	stmia	r5!, {r0, r1}
 801b12c:	6818      	ldr	r0, [r3, #0]
 801b12e:	6859      	ldr	r1, [r3, #4]
 801b130:	ad08      	add	r5, sp, #32
 801b132:	c503      	stmia	r5!, {r0, r1}
 801b134:	a806      	add	r0, sp, #24
 801b136:	f7f9 feef 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b13a:	4631      	mov	r1, r6
 801b13c:	a808      	add	r0, sp, #32
 801b13e:	f7f9 ff2f 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b142:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b146:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801b14a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b14e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801b152:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b156:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b15a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b15e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b162:	4f5f      	ldr	r7, [pc, #380]	; (801b2e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b164:	440a      	add	r2, r1
 801b166:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b16a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b16e:	6838      	ldr	r0, [r7, #0]
 801b170:	4413      	add	r3, r2
 801b172:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b176:	6803      	ldr	r3, [r0, #0]
 801b178:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b17a:	4798      	blx	r3
 801b17c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b180:	46b9      	mov	r9, r7
 801b182:	d11d      	bne.n	801b1c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801b184:	b9fc      	cbnz	r4, 801b1c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b186:	f010 0f01 	tst.w	r0, #1
 801b18a:	d01c      	beq.n	801b1c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b18c:	f8d9 0000 	ldr.w	r0, [r9]
 801b190:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b194:	6801      	ldr	r1, [r0, #0]
 801b196:	f8cd b00c 	str.w	fp, [sp, #12]
 801b19a:	2700      	movs	r7, #0
 801b19c:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801b1a0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801b1a4:	9402      	str	r4, [sp, #8]
 801b1a6:	b2ad      	uxth	r5, r5
 801b1a8:	fa1f f488 	uxth.w	r4, r8
 801b1ac:	9501      	str	r5, [sp, #4]
 801b1ae:	9400      	str	r4, [sp, #0]
 801b1b0:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801b1b2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b1b6:	4631      	mov	r1, r6
 801b1b8:	47a0      	blx	r4
 801b1ba:	b00b      	add	sp, #44	; 0x2c
 801b1bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b1c0:	f010 0f04 	tst.w	r0, #4
 801b1c4:	e7e1      	b.n	801b18a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801b1c6:	f8d9 0000 	ldr.w	r0, [r9]
 801b1ca:	6803      	ldr	r3, [r0, #0]
 801b1cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b1ce:	4798      	blx	r3
 801b1d0:	4b44      	ldr	r3, [pc, #272]	; (801b2e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801b1d2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801b1d6:	881a      	ldrh	r2, [r3, #0]
 801b1d8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b1dc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b1e0:	fb02 1404 	mla	r4, r2, r4, r1
 801b1e4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b1e8:	469a      	mov	sl, r3
 801b1ea:	fb05 f502 	mul.w	r5, r5, r2
 801b1ee:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801b1f2:	d059      	beq.n	801b2a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801b1f4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801b1f8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b1fc:	fa1f f28b 	uxth.w	r2, fp
 801b200:	fa1f f989 	uxth.w	r9, r9
 801b204:	469e      	mov	lr, r3
 801b206:	42ac      	cmp	r4, r5
 801b208:	d264      	bcs.n	801b2d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b20a:	eb04 0a07 	add.w	sl, r4, r7
 801b20e:	4554      	cmp	r4, sl
 801b210:	d23d      	bcs.n	801b28e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801b212:	8821      	ldrh	r1, [r4, #0]
 801b214:	f836 3b02 	ldrh.w	r3, [r6], #2
 801b218:	1208      	asrs	r0, r1, #8
 801b21a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b21e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b222:	fb10 f009 	smulbb	r0, r0, r9
 801b226:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801b22a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b22e:	00c9      	lsls	r1, r1, #3
 801b230:	fb0c 0c02 	mla	ip, ip, r2, r0
 801b234:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b238:	10d8      	asrs	r0, r3, #3
 801b23a:	b2c9      	uxtb	r1, r1
 801b23c:	00db      	lsls	r3, r3, #3
 801b23e:	fa1f fc8c 	uxth.w	ip, ip
 801b242:	fb1b fb09 	smulbb	fp, fp, r9
 801b246:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b24a:	b2db      	uxtb	r3, r3
 801b24c:	fb11 f109 	smulbb	r1, r1, r9
 801b250:	fb00 b002 	mla	r0, r0, r2, fp
 801b254:	fb03 1302 	mla	r3, r3, r2, r1
 801b258:	f10c 0b01 	add.w	fp, ip, #1
 801b25c:	b29b      	uxth	r3, r3
 801b25e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b262:	b280      	uxth	r0, r0
 801b264:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b268:	f103 0c01 	add.w	ip, r3, #1
 801b26c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b270:	1c43      	adds	r3, r0, #1
 801b272:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b276:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b27a:	0940      	lsrs	r0, r0, #5
 801b27c:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b280:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b284:	ea4c 0c00 	orr.w	ip, ip, r0
 801b288:	f824 cb02 	strh.w	ip, [r4], #2
 801b28c:	e7bf      	b.n	801b20e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b28e:	f8be 3000 	ldrh.w	r3, [lr]
 801b292:	eba3 0308 	sub.w	r3, r3, r8
 801b296:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b29a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b29e:	eba3 0308 	sub.w	r3, r3, r8
 801b2a2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b2a6:	e7ae      	b.n	801b206 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b2a8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b2ac:	f8d9 0000 	ldr.w	r0, [r9]
 801b2b0:	42ac      	cmp	r4, r5
 801b2b2:	6803      	ldr	r3, [r0, #0]
 801b2b4:	d20e      	bcs.n	801b2d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b2b6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b2ba:	4632      	mov	r2, r6
 801b2bc:	463b      	mov	r3, r7
 801b2be:	4621      	mov	r1, r4
 801b2c0:	47c0      	blx	r8
 801b2c2:	f8ba 3000 	ldrh.w	r3, [sl]
 801b2c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b2ca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b2ce:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b2d2:	e7eb      	b.n	801b2ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b2d4:	4b02      	ldr	r3, [pc, #8]	; (801b2e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b2d6:	6818      	ldr	r0, [r3, #0]
 801b2d8:	6803      	ldr	r3, [r0, #0]
 801b2da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b2dc:	4798      	blx	r3
 801b2de:	e76c      	b.n	801b1ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b2e0:	20012e74 	.word	0x20012e74
 801b2e4:	20012e6e 	.word	0x20012e6e

0801b2e8 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b2e8:	b510      	push	{r4, lr}
 801b2ea:	2184      	movs	r1, #132	; 0x84
 801b2ec:	4604      	mov	r4, r0
 801b2ee:	f00d fe4a 	bl	8028f86 <_ZdlPvj>
 801b2f2:	4620      	mov	r0, r4
 801b2f4:	bd10      	pop	{r4, pc}

0801b2f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b2f6:	b510      	push	{r4, lr}
 801b2f8:	2104      	movs	r1, #4
 801b2fa:	4604      	mov	r4, r0
 801b2fc:	f00d fe43 	bl	8028f86 <_ZdlPvj>
 801b300:	4620      	mov	r0, r4
 801b302:	bd10      	pop	{r4, pc}

0801b304 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b304:	b510      	push	{r4, lr}
 801b306:	2104      	movs	r1, #4
 801b308:	4604      	mov	r4, r0
 801b30a:	f00d fe3c 	bl	8028f86 <_ZdlPvj>
 801b30e:	4620      	mov	r0, r4
 801b310:	bd10      	pop	{r4, pc}

0801b312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b312:	b510      	push	{r4, lr}
 801b314:	f640 0144 	movw	r1, #2116	; 0x844
 801b318:	4604      	mov	r4, r0
 801b31a:	f00d fe34 	bl	8028f86 <_ZdlPvj>
 801b31e:	4620      	mov	r0, r4
 801b320:	bd10      	pop	{r4, pc}

0801b322 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b322:	b510      	push	{r4, lr}
 801b324:	2104      	movs	r1, #4
 801b326:	4604      	mov	r4, r0
 801b328:	f00d fe2d 	bl	8028f86 <_ZdlPvj>
 801b32c:	4620      	mov	r0, r4
 801b32e:	bd10      	pop	{r4, pc}

0801b330 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b330:	b510      	push	{r4, lr}
 801b332:	2104      	movs	r1, #4
 801b334:	4604      	mov	r4, r0
 801b336:	f00d fe26 	bl	8028f86 <_ZdlPvj>
 801b33a:	4620      	mov	r0, r4
 801b33c:	bd10      	pop	{r4, pc}

0801b33e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b33e:	b510      	push	{r4, lr}
 801b340:	2104      	movs	r1, #4
 801b342:	4604      	mov	r4, r0
 801b344:	f00d fe1f 	bl	8028f86 <_ZdlPvj>
 801b348:	4620      	mov	r0, r4
 801b34a:	bd10      	pop	{r4, pc}

0801b34c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b34c:	b510      	push	{r4, lr}
 801b34e:	2104      	movs	r1, #4
 801b350:	4604      	mov	r4, r0
 801b352:	f00d fe18 	bl	8028f86 <_ZdlPvj>
 801b356:	4620      	mov	r0, r4
 801b358:	bd10      	pop	{r4, pc}

0801b35a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b35a:	b510      	push	{r4, lr}
 801b35c:	2104      	movs	r1, #4
 801b35e:	4604      	mov	r4, r0
 801b360:	f00d fe11 	bl	8028f86 <_ZdlPvj>
 801b364:	4620      	mov	r0, r4
 801b366:	bd10      	pop	{r4, pc}

0801b368 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b368:	b510      	push	{r4, lr}
 801b36a:	2104      	movs	r1, #4
 801b36c:	4604      	mov	r4, r0
 801b36e:	f00d fe0a 	bl	8028f86 <_ZdlPvj>
 801b372:	4620      	mov	r0, r4
 801b374:	bd10      	pop	{r4, pc}

0801b376 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b376:	b510      	push	{r4, lr}
 801b378:	2104      	movs	r1, #4
 801b37a:	4604      	mov	r4, r0
 801b37c:	f00d fe03 	bl	8028f86 <_ZdlPvj>
 801b380:	4620      	mov	r0, r4
 801b382:	bd10      	pop	{r4, pc}

0801b384 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b384:	b510      	push	{r4, lr}
 801b386:	2104      	movs	r1, #4
 801b388:	4604      	mov	r4, r0
 801b38a:	f00d fdfc 	bl	8028f86 <_ZdlPvj>
 801b38e:	4620      	mov	r0, r4
 801b390:	bd10      	pop	{r4, pc}

0801b392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b392:	b510      	push	{r4, lr}
 801b394:	2104      	movs	r1, #4
 801b396:	4604      	mov	r4, r0
 801b398:	f00d fdf5 	bl	8028f86 <_ZdlPvj>
 801b39c:	4620      	mov	r0, r4
 801b39e:	bd10      	pop	{r4, pc}

0801b3a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b3a0:	b510      	push	{r4, lr}
 801b3a2:	2104      	movs	r1, #4
 801b3a4:	4604      	mov	r4, r0
 801b3a6:	f00d fdee 	bl	8028f86 <_ZdlPvj>
 801b3aa:	4620      	mov	r0, r4
 801b3ac:	bd10      	pop	{r4, pc}

0801b3ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b3ae:	b510      	push	{r4, lr}
 801b3b0:	2104      	movs	r1, #4
 801b3b2:	4604      	mov	r4, r0
 801b3b4:	f00d fde7 	bl	8028f86 <_ZdlPvj>
 801b3b8:	4620      	mov	r0, r4
 801b3ba:	bd10      	pop	{r4, pc}

0801b3bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b3bc:	b510      	push	{r4, lr}
 801b3be:	2104      	movs	r1, #4
 801b3c0:	4604      	mov	r4, r0
 801b3c2:	f00d fde0 	bl	8028f86 <_ZdlPvj>
 801b3c6:	4620      	mov	r0, r4
 801b3c8:	bd10      	pop	{r4, pc}

0801b3ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b3ca:	b510      	push	{r4, lr}
 801b3cc:	2104      	movs	r1, #4
 801b3ce:	4604      	mov	r4, r0
 801b3d0:	f00d fdd9 	bl	8028f86 <_ZdlPvj>
 801b3d4:	4620      	mov	r0, r4
 801b3d6:	bd10      	pop	{r4, pc}

0801b3d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b3d8:	b510      	push	{r4, lr}
 801b3da:	2104      	movs	r1, #4
 801b3dc:	4604      	mov	r4, r0
 801b3de:	f00d fdd2 	bl	8028f86 <_ZdlPvj>
 801b3e2:	4620      	mov	r0, r4
 801b3e4:	bd10      	pop	{r4, pc}

0801b3e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b3e6:	b510      	push	{r4, lr}
 801b3e8:	2104      	movs	r1, #4
 801b3ea:	4604      	mov	r4, r0
 801b3ec:	f00d fdcb 	bl	8028f86 <_ZdlPvj>
 801b3f0:	4620      	mov	r0, r4
 801b3f2:	bd10      	pop	{r4, pc}

0801b3f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b3f4:	b510      	push	{r4, lr}
 801b3f6:	2104      	movs	r1, #4
 801b3f8:	4604      	mov	r4, r0
 801b3fa:	f00d fdc4 	bl	8028f86 <_ZdlPvj>
 801b3fe:	4620      	mov	r0, r4
 801b400:	bd10      	pop	{r4, pc}

0801b402 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b402:	b510      	push	{r4, lr}
 801b404:	2104      	movs	r1, #4
 801b406:	4604      	mov	r4, r0
 801b408:	f00d fdbd 	bl	8028f86 <_ZdlPvj>
 801b40c:	4620      	mov	r0, r4
 801b40e:	bd10      	pop	{r4, pc}

0801b410 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b410:	b510      	push	{r4, lr}
 801b412:	2104      	movs	r1, #4
 801b414:	4604      	mov	r4, r0
 801b416:	f00d fdb6 	bl	8028f86 <_ZdlPvj>
 801b41a:	4620      	mov	r0, r4
 801b41c:	bd10      	pop	{r4, pc}

0801b41e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b41e:	b510      	push	{r4, lr}
 801b420:	2104      	movs	r1, #4
 801b422:	4604      	mov	r4, r0
 801b424:	f00d fdaf 	bl	8028f86 <_ZdlPvj>
 801b428:	4620      	mov	r0, r4
 801b42a:	bd10      	pop	{r4, pc}

0801b42c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b42c:	b510      	push	{r4, lr}
 801b42e:	2104      	movs	r1, #4
 801b430:	4604      	mov	r4, r0
 801b432:	f00d fda8 	bl	8028f86 <_ZdlPvj>
 801b436:	4620      	mov	r0, r4
 801b438:	bd10      	pop	{r4, pc}

0801b43a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b43a:	b510      	push	{r4, lr}
 801b43c:	2104      	movs	r1, #4
 801b43e:	4604      	mov	r4, r0
 801b440:	f00d fda1 	bl	8028f86 <_ZdlPvj>
 801b444:	4620      	mov	r0, r4
 801b446:	bd10      	pop	{r4, pc}

0801b448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b448:	b510      	push	{r4, lr}
 801b44a:	2104      	movs	r1, #4
 801b44c:	4604      	mov	r4, r0
 801b44e:	f00d fd9a 	bl	8028f86 <_ZdlPvj>
 801b452:	4620      	mov	r0, r4
 801b454:	bd10      	pop	{r4, pc}

0801b456 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b456:	b510      	push	{r4, lr}
 801b458:	2104      	movs	r1, #4
 801b45a:	4604      	mov	r4, r0
 801b45c:	f00d fd93 	bl	8028f86 <_ZdlPvj>
 801b460:	4620      	mov	r0, r4
 801b462:	bd10      	pop	{r4, pc}

0801b464 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b464:	b510      	push	{r4, lr}
 801b466:	2104      	movs	r1, #4
 801b468:	4604      	mov	r4, r0
 801b46a:	f00d fd8c 	bl	8028f86 <_ZdlPvj>
 801b46e:	4620      	mov	r0, r4
 801b470:	bd10      	pop	{r4, pc}

0801b472 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b472:	b510      	push	{r4, lr}
 801b474:	2104      	movs	r1, #4
 801b476:	4604      	mov	r4, r0
 801b478:	f00d fd85 	bl	8028f86 <_ZdlPvj>
 801b47c:	4620      	mov	r0, r4
 801b47e:	bd10      	pop	{r4, pc}

0801b480 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b480:	b510      	push	{r4, lr}
 801b482:	2104      	movs	r1, #4
 801b484:	4604      	mov	r4, r0
 801b486:	f00d fd7e 	bl	8028f86 <_ZdlPvj>
 801b48a:	4620      	mov	r0, r4
 801b48c:	bd10      	pop	{r4, pc}

0801b48e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b48e:	b510      	push	{r4, lr}
 801b490:	2104      	movs	r1, #4
 801b492:	4604      	mov	r4, r0
 801b494:	f00d fd77 	bl	8028f86 <_ZdlPvj>
 801b498:	4620      	mov	r0, r4
 801b49a:	bd10      	pop	{r4, pc}

0801b49c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b49c:	b510      	push	{r4, lr}
 801b49e:	2104      	movs	r1, #4
 801b4a0:	4604      	mov	r4, r0
 801b4a2:	f00d fd70 	bl	8028f86 <_ZdlPvj>
 801b4a6:	4620      	mov	r0, r4
 801b4a8:	bd10      	pop	{r4, pc}
	...

0801b4ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b4ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4b0:	b08f      	sub	sp, #60	; 0x3c
 801b4b2:	461c      	mov	r4, r3
 801b4b4:	9205      	str	r2, [sp, #20]
 801b4b6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b4ba:	9100      	str	r1, [sp, #0]
 801b4bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b4be:	9201      	str	r2, [sp, #4]
 801b4c0:	2a00      	cmp	r2, #0
 801b4c2:	f000 8115 	beq.w	801b6f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b4c6:	6820      	ldr	r0, [r4, #0]
 801b4c8:	6861      	ldr	r1, [r4, #4]
 801b4ca:	aa0a      	add	r2, sp, #40	; 0x28
 801b4cc:	c203      	stmia	r2!, {r0, r1}
 801b4ce:	6818      	ldr	r0, [r3, #0]
 801b4d0:	6859      	ldr	r1, [r3, #4]
 801b4d2:	aa0c      	add	r2, sp, #48	; 0x30
 801b4d4:	c203      	stmia	r2!, {r0, r1}
 801b4d6:	a80a      	add	r0, sp, #40	; 0x28
 801b4d8:	f7f9 fd1e 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b4dc:	4621      	mov	r1, r4
 801b4de:	a80c      	add	r0, sp, #48	; 0x30
 801b4e0:	f7f9 fd5e 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b4e4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b4e8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b4ec:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b4f0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b4f4:	bfde      	ittt	le
 801b4f6:	b2b3      	uxthle	r3, r6
 801b4f8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b4fc:	fb92 f3f3 	sdivle	r3, r2, r3
 801b500:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b504:	bfc8      	it	gt
 801b506:	2301      	movgt	r3, #1
 801b508:	fb92 f1f3 	sdiv	r1, r2, r3
 801b50c:	fa1f fc81 	uxth.w	ip, r1
 801b510:	fb0c 2413 	mls	r4, ip, r3, r2
 801b514:	fb14 f406 	smulbb	r4, r4, r6
 801b518:	441d      	add	r5, r3
 801b51a:	4404      	add	r4, r0
 801b51c:	4661      	mov	r1, ip
 801b51e:	3d01      	subs	r5, #1
 801b520:	b2a4      	uxth	r4, r4
 801b522:	fb95 f5f3 	sdiv	r5, r5, r3
 801b526:	b131      	cbz	r1, 801b536 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b528:	9b05      	ldr	r3, [sp, #20]
 801b52a:	9900      	ldr	r1, [sp, #0]
 801b52c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b530:	ba1b      	rev	r3, r3
 801b532:	4419      	add	r1, r3
 801b534:	9100      	str	r1, [sp, #0]
 801b536:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b53a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b53e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b542:	4418      	add	r0, r3
 801b544:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b548:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b54c:	441a      	add	r2, r3
 801b54e:	4b6a      	ldr	r3, [pc, #424]	; (801b6f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b550:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b554:	6818      	ldr	r0, [r3, #0]
 801b556:	6803      	ldr	r3, [r0, #0]
 801b558:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b55a:	4798      	blx	r3
 801b55c:	4967      	ldr	r1, [pc, #412]	; (801b6fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b55e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b562:	880b      	ldrh	r3, [r1, #0]
 801b564:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b568:	9109      	str	r1, [sp, #36]	; 0x24
 801b56a:	fb03 c202 	mla	r2, r3, r2, ip
 801b56e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b572:	4373      	muls	r3, r6
 801b574:	b2ad      	uxth	r5, r5
 801b576:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b57a:	00ad      	lsls	r5, r5, #2
 801b57c:	9306      	str	r3, [sp, #24]
 801b57e:	1d2b      	adds	r3, r5, #4
 801b580:	9307      	str	r3, [sp, #28]
 801b582:	9b01      	ldr	r3, [sp, #4]
 801b584:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b588:	9103      	str	r1, [sp, #12]
 801b58a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b58e:	2c00      	cmp	r4, #0
 801b590:	bf0c      	ite	eq
 801b592:	46c6      	moveq	lr, r8
 801b594:	f04f 0e00 	movne.w	lr, #0
 801b598:	2300      	movs	r3, #0
 801b59a:	b292      	uxth	r2, r2
 801b59c:	fa1f fe8e 	uxth.w	lr, lr
 801b5a0:	9302      	str	r3, [sp, #8]
 801b5a2:	9204      	str	r2, [sp, #16]
 801b5a4:	9a06      	ldr	r2, [sp, #24]
 801b5a6:	4282      	cmp	r2, r0
 801b5a8:	f240 809d 	bls.w	801b6e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b5ac:	b963      	cbnz	r3, 801b5c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b5ae:	9b00      	ldr	r3, [sp, #0]
 801b5b0:	781a      	ldrb	r2, [r3, #0]
 801b5b2:	0993      	lsrs	r3, r2, #6
 801b5b4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b5b8:	9202      	str	r2, [sp, #8]
 801b5ba:	1e5a      	subs	r2, r3, #1
 801b5bc:	2a02      	cmp	r2, #2
 801b5be:	d815      	bhi.n	801b5ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b5c0:	9a00      	ldr	r2, [sp, #0]
 801b5c2:	3201      	adds	r2, #1
 801b5c4:	9200      	str	r2, [sp, #0]
 801b5c6:	b29b      	uxth	r3, r3
 801b5c8:	b1b4      	cbz	r4, 801b5f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b5ca:	429c      	cmp	r4, r3
 801b5cc:	bf95      	itete	ls
 801b5ce:	1b1c      	subls	r4, r3, r4
 801b5d0:	1ae4      	subhi	r4, r4, r3
 801b5d2:	fa1f fa84 	uxthls.w	sl, r4
 801b5d6:	b2a4      	uxthhi	r4, r4
 801b5d8:	bf87      	ittee	hi
 801b5da:	4671      	movhi	r1, lr
 801b5dc:	f04f 0a00 	movhi.w	sl, #0
 801b5e0:	fa1f f188 	uxthls.w	r1, r8
 801b5e4:	2400      	movls	r4, #0
 801b5e6:	4653      	mov	r3, sl
 801b5e8:	468e      	mov	lr, r1
 801b5ea:	e7db      	b.n	801b5a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b5ec:	9a00      	ldr	r2, [sp, #0]
 801b5ee:	9b00      	ldr	r3, [sp, #0]
 801b5f0:	3202      	adds	r2, #2
 801b5f2:	785b      	ldrb	r3, [r3, #1]
 801b5f4:	9200      	str	r2, [sp, #0]
 801b5f6:	e7e7      	b.n	801b5c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b5f8:	2202      	movs	r2, #2
 801b5fa:	4615      	mov	r5, r2
 801b5fc:	9907      	ldr	r1, [sp, #28]
 801b5fe:	9a02      	ldr	r2, [sp, #8]
 801b600:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b604:	9905      	ldr	r1, [sp, #20]
 801b606:	4573      	cmp	r3, lr
 801b608:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b60c:	9a01      	ldr	r2, [sp, #4]
 801b60e:	bf2b      	itete	cs
 801b610:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b614:	ebae 0103 	subcc.w	r1, lr, r3
 801b618:	46f1      	movcs	r9, lr
 801b61a:	4699      	movcc	r9, r3
 801b61c:	bf27      	ittee	cs
 801b61e:	fa1f fa8a 	uxthcs.w	sl, sl
 801b622:	4621      	movcs	r1, r4
 801b624:	b289      	uxthcc	r1, r1
 801b626:	46a2      	movcc	sl, r4
 801b628:	2aff      	cmp	r2, #255	; 0xff
 801b62a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b62e:	d105      	bne.n	801b63c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b630:	4481      	add	r9, r0
 801b632:	4581      	cmp	r9, r0
 801b634:	d045      	beq.n	801b6c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b636:	f820 cb02 	strh.w	ip, [r0], #2
 801b63a:	e7fa      	b.n	801b632 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b63c:	9d03      	ldr	r5, [sp, #12]
 801b63e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b642:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b646:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b64a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b64e:	436a      	muls	r2, r5
 801b650:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b654:	fa5f fc8c 	uxtb.w	ip, ip
 801b658:	9208      	str	r2, [sp, #32]
 801b65a:	fb0b fb05 	mul.w	fp, fp, r5
 801b65e:	fb0c fc05 	mul.w	ip, ip, r5
 801b662:	4481      	add	r9, r0
 801b664:	4581      	cmp	r9, r0
 801b666:	d02c      	beq.n	801b6c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b668:	8802      	ldrh	r2, [r0, #0]
 801b66a:	9d04      	ldr	r5, [sp, #16]
 801b66c:	9f04      	ldr	r7, [sp, #16]
 801b66e:	1216      	asrs	r6, r2, #8
 801b670:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b674:	fb16 f605 	smulbb	r6, r6, r5
 801b678:	9d08      	ldr	r5, [sp, #32]
 801b67a:	442e      	add	r6, r5
 801b67c:	10d5      	asrs	r5, r2, #3
 801b67e:	00d2      	lsls	r2, r2, #3
 801b680:	b2d2      	uxtb	r2, r2
 801b682:	fb12 f207 	smulbb	r2, r2, r7
 801b686:	b2b6      	uxth	r6, r6
 801b688:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b68c:	4462      	add	r2, ip
 801b68e:	fb15 f507 	smulbb	r5, r5, r7
 801b692:	b292      	uxth	r2, r2
 801b694:	1c77      	adds	r7, r6, #1
 801b696:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b69a:	1c57      	adds	r7, r2, #1
 801b69c:	445d      	add	r5, fp
 801b69e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b6a2:	b2ad      	uxth	r5, r5
 801b6a4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b6a8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b6ac:	4316      	orrs	r6, r2
 801b6ae:	1c6a      	adds	r2, r5, #1
 801b6b0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b6b4:	096d      	lsrs	r5, r5, #5
 801b6b6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6ba:	432e      	orrs	r6, r5
 801b6bc:	f820 6b02 	strh.w	r6, [r0], #2
 801b6c0:	e7d0      	b.n	801b664 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b6c2:	4573      	cmp	r3, lr
 801b6c4:	d38f      	bcc.n	801b5e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b6c6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b6ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b6cc:	fa1f f188 	uxth.w	r1, r8
 801b6d0:	1a64      	subs	r4, r4, r1
 801b6d2:	881b      	ldrh	r3, [r3, #0]
 801b6d4:	b2a4      	uxth	r4, r4
 801b6d6:	2c00      	cmp	r4, #0
 801b6d8:	eba3 0308 	sub.w	r3, r3, r8
 801b6dc:	bf18      	it	ne
 801b6de:	2100      	movne	r1, #0
 801b6e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b6e4:	e77f      	b.n	801b5e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b6e6:	4b04      	ldr	r3, [pc, #16]	; (801b6f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b6e8:	6818      	ldr	r0, [r3, #0]
 801b6ea:	6803      	ldr	r3, [r0, #0]
 801b6ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b6ee:	4798      	blx	r3
 801b6f0:	b00f      	add	sp, #60	; 0x3c
 801b6f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6f6:	bf00      	nop
 801b6f8:	20012e74 	.word	0x20012e74
 801b6fc:	20012e6e 	.word	0x20012e6e

0801b700 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b704:	b09f      	sub	sp, #124	; 0x7c
 801b706:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b70a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b70e:	9209      	str	r2, [sp, #36]	; 0x24
 801b710:	461d      	mov	r5, r3
 801b712:	4604      	mov	r4, r0
 801b714:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b716:	2a00      	cmp	r2, #0
 801b718:	f000 81eb 	beq.w	801baf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b71c:	6828      	ldr	r0, [r5, #0]
 801b71e:	6869      	ldr	r1, [r5, #4]
 801b720:	aa1a      	add	r2, sp, #104	; 0x68
 801b722:	c203      	stmia	r2!, {r0, r1}
 801b724:	6818      	ldr	r0, [r3, #0]
 801b726:	6859      	ldr	r1, [r3, #4]
 801b728:	aa1c      	add	r2, sp, #112	; 0x70
 801b72a:	c203      	stmia	r2!, {r0, r1}
 801b72c:	a81a      	add	r0, sp, #104	; 0x68
 801b72e:	f7f9 fbf3 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b732:	4629      	mov	r1, r5
 801b734:	a81c      	add	r0, sp, #112	; 0x70
 801b736:	f7f9 fc33 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b73a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b73e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b742:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b746:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b74a:	bfd7      	itett	le
 801b74c:	b29a      	uxthle	r2, r3
 801b74e:	2201      	movgt	r2, #1
 801b750:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b754:	fb91 f2f2 	sdivle	r2, r1, r2
 801b758:	9202      	str	r2, [sp, #8]
 801b75a:	9802      	ldr	r0, [sp, #8]
 801b75c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b760:	fb92 f0f0 	sdiv	r0, r2, r0
 801b764:	b280      	uxth	r0, r0
 801b766:	9010      	str	r0, [sp, #64]	; 0x40
 801b768:	9902      	ldr	r1, [sp, #8]
 801b76a:	9802      	ldr	r0, [sp, #8]
 801b76c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b76e:	4488      	add	r8, r1
 801b770:	fb05 2510 	mls	r5, r5, r0, r2
 801b774:	fb15 f503 	smulbb	r5, r5, r3
 801b778:	f108 38ff 	add.w	r8, r8, #4294967295
 801b77c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b780:	fb98 f8f1 	sdiv	r8, r8, r1
 801b784:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b788:	440d      	add	r5, r1
 801b78a:	4419      	add	r1, r3
 801b78c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b790:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b794:	441a      	add	r2, r3
 801b796:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b79a:	9304      	str	r3, [sp, #16]
 801b79c:	4b95      	ldr	r3, [pc, #596]	; (801b9f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b79e:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b7a2:	6818      	ldr	r0, [r3, #0]
 801b7a4:	6803      	ldr	r3, [r0, #0]
 801b7a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b7a8:	4798      	blx	r3
 801b7aa:	4b93      	ldr	r3, [pc, #588]	; (801b9f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b7ac:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b7b0:	881a      	ldrh	r2, [r3, #0]
 801b7b2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b7b6:	9318      	str	r3, [sp, #96]	; 0x60
 801b7b8:	fb02 7101 	mla	r1, r2, r1, r7
 801b7bc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b7c0:	4356      	muls	r6, r2
 801b7c2:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b7c6:	f108 0801 	add.w	r8, r8, #1
 801b7ca:	920a      	str	r2, [sp, #40]	; 0x28
 801b7cc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b7ce:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b7d2:	930f      	str	r3, [sp, #60]	; 0x3c
 801b7d4:	fa1f f888 	uxth.w	r8, r8
 801b7d8:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b7dc:	f108 0204 	add.w	r2, r8, #4
 801b7e0:	9211      	str	r2, [sp, #68]	; 0x44
 801b7e2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b7e4:	4b85      	ldr	r3, [pc, #532]	; (801b9fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b7e6:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b7ea:	b2ad      	uxth	r5, r5
 801b7ec:	9215      	str	r2, [sp, #84]	; 0x54
 801b7ee:	2d00      	cmp	r5, #0
 801b7f0:	9a04      	ldr	r2, [sp, #16]
 801b7f2:	f04f 0100 	mov.w	r1, #0
 801b7f6:	bf18      	it	ne
 801b7f8:	2200      	movne	r2, #0
 801b7fa:	1b1b      	subs	r3, r3, r4
 801b7fc:	b292      	uxth	r2, r2
 801b7fe:	910d      	str	r1, [sp, #52]	; 0x34
 801b800:	9319      	str	r3, [sp, #100]	; 0x64
 801b802:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b804:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b806:	fa11 f383 	uxtah	r3, r1, r3
 801b80a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b80c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b810:	3304      	adds	r3, #4
 801b812:	9306      	str	r3, [sp, #24]
 801b814:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b816:	4283      	cmp	r3, r0
 801b818:	f240 8166 	bls.w	801bae8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b81c:	9902      	ldr	r1, [sp, #8]
 801b81e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b822:	fbb5 f3f3 	udiv	r3, r5, r3
 801b826:	1acb      	subs	r3, r1, r3
 801b828:	b29b      	uxth	r3, r3
 801b82a:	9316      	str	r3, [sp, #88]	; 0x58
 801b82c:	9b06      	ldr	r3, [sp, #24]
 801b82e:	9e06      	ldr	r6, [sp, #24]
 801b830:	7859      	ldrb	r1, [r3, #1]
 801b832:	789b      	ldrb	r3, [r3, #2]
 801b834:	7836      	ldrb	r6, [r6, #0]
 801b836:	9612      	str	r6, [sp, #72]	; 0x48
 801b838:	021b      	lsls	r3, r3, #8
 801b83a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b83e:	9906      	ldr	r1, [sp, #24]
 801b840:	78c9      	ldrb	r1, [r1, #3]
 801b842:	430b      	orrs	r3, r1
 801b844:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b846:	3601      	adds	r6, #1
 801b848:	4419      	add	r1, r3
 801b84a:	9605      	str	r6, [sp, #20]
 801b84c:	1c4e      	adds	r6, r1, #1
 801b84e:	9603      	str	r6, [sp, #12]
 801b850:	7849      	ldrb	r1, [r1, #1]
 801b852:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b854:	0209      	lsls	r1, r1, #8
 801b856:	5cf3      	ldrb	r3, [r6, r3]
 801b858:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b85c:	4319      	orrs	r1, r3
 801b85e:	b28b      	uxth	r3, r1
 801b860:	930c      	str	r3, [sp, #48]	; 0x30
 801b862:	2300      	movs	r3, #0
 801b864:	f04f 0a01 	mov.w	sl, #1
 801b868:	9307      	str	r3, [sp, #28]
 801b86a:	469c      	mov	ip, r3
 801b86c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b870:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b874:	46d3      	mov	fp, sl
 801b876:	4657      	mov	r7, sl
 801b878:	930e      	str	r3, [sp, #56]	; 0x38
 801b87a:	2d00      	cmp	r5, #0
 801b87c:	d07e      	beq.n	801b97c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b87e:	42af      	cmp	r7, r5
 801b880:	d26e      	bcs.n	801b960 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b882:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b884:	9201      	str	r2, [sp, #4]
 801b886:	1bed      	subs	r5, r5, r7
 801b888:	4283      	cmp	r3, r0
 801b88a:	b2ad      	uxth	r5, r5
 801b88c:	d802      	bhi.n	801b894 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b88e:	e073      	b.n	801b978 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b890:	2b00      	cmp	r3, #0
 801b892:	d15f      	bne.n	801b954 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b894:	9b03      	ldr	r3, [sp, #12]
 801b896:	785b      	ldrb	r3, [r3, #1]
 801b898:	f1cb 0207 	rsb	r2, fp, #7
 801b89c:	4093      	lsls	r3, r2
 801b89e:	005b      	lsls	r3, r3, #1
 801b8a0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b8a4:	9b03      	ldr	r3, [sp, #12]
 801b8a6:	781b      	ldrb	r3, [r3, #0]
 801b8a8:	fa43 f30b 	asr.w	r3, r3, fp
 801b8ac:	b2db      	uxtb	r3, r3
 801b8ae:	4313      	orrs	r3, r2
 801b8b0:	f10b 0201 	add.w	r2, fp, #1
 801b8b4:	fa5f fb82 	uxtb.w	fp, r2
 801b8b8:	9a03      	ldr	r2, [sp, #12]
 801b8ba:	f1bb 0f08 	cmp.w	fp, #8
 801b8be:	bf15      	itete	ne
 801b8c0:	3201      	addne	r2, #1
 801b8c2:	3202      	addeq	r2, #2
 801b8c4:	9203      	strne	r2, [sp, #12]
 801b8c6:	9203      	streq	r2, [sp, #12]
 801b8c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b8ca:	b29f      	uxth	r7, r3
 801b8cc:	bf08      	it	eq
 801b8ce:	f04f 0b00 	moveq.w	fp, #0
 801b8d2:	42ba      	cmp	r2, r7
 801b8d4:	d309      	bcc.n	801b8ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b8d6:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b8da:	2301      	movs	r3, #1
 801b8dc:	9a05      	ldr	r2, [sp, #20]
 801b8de:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b8e2:	d30e      	bcc.n	801b902 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b8e4:	469a      	mov	sl, r3
 801b8e6:	2600      	movs	r6, #0
 801b8e8:	e035      	b.n	801b956 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b8ea:	9b05      	ldr	r3, [sp, #20]
 801b8ec:	429f      	cmp	r7, r3
 801b8ee:	d318      	bcc.n	801b922 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b8f0:	eb04 030a 	add.w	r3, r4, sl
 801b8f4:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b8f8:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b8fc:	f10a 0301 	add.w	r3, sl, #1
 801b900:	b29b      	uxth	r3, r3
 801b902:	9a05      	ldr	r2, [sp, #20]
 801b904:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b908:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b90a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b90e:	7116      	strb	r6, [r2, #4]
 801b910:	f10a 0601 	add.w	r6, sl, #1
 801b914:	80d1      	strh	r1, [r2, #6]
 801b916:	7156      	strb	r6, [r2, #5]
 801b918:	9a05      	ldr	r2, [sp, #20]
 801b91a:	3201      	adds	r2, #1
 801b91c:	b292      	uxth	r2, r2
 801b91e:	9205      	str	r2, [sp, #20]
 801b920:	e7e0      	b.n	801b8e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b922:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b926:	463a      	mov	r2, r7
 801b928:	795b      	ldrb	r3, [r3, #5]
 801b92a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b92e:	4426      	add	r6, r4
 801b930:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b932:	eb01 0c06 	add.w	ip, r1, r6
 801b936:	f1bc 0f00 	cmp.w	ip, #0
 801b93a:	dd07      	ble.n	801b94c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b93c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b940:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b944:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b948:	88d2      	ldrh	r2, [r2, #6]
 801b94a:	e7f1      	b.n	801b930 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b94c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b950:	b29b      	uxth	r3, r3
 801b952:	e7c3      	b.n	801b8dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b954:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b956:	970c      	str	r7, [sp, #48]	; 0x30
 801b958:	9a01      	ldr	r2, [sp, #4]
 801b95a:	46b4      	mov	ip, r6
 801b95c:	461f      	mov	r7, r3
 801b95e:	e78c      	b.n	801b87a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b960:	1b7b      	subs	r3, r7, r5
 801b962:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b966:	9201      	str	r2, [sp, #4]
 801b968:	eb0c 0605 	add.w	r6, ip, r5
 801b96c:	b29b      	uxth	r3, r3
 801b96e:	b2b6      	uxth	r6, r6
 801b970:	2500      	movs	r5, #0
 801b972:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b974:	4282      	cmp	r2, r0
 801b976:	d88b      	bhi.n	801b890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b978:	9a01      	ldr	r2, [sp, #4]
 801b97a:	e74b      	b.n	801b814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b97c:	4297      	cmp	r7, r2
 801b97e:	d332      	bcc.n	801b9e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b980:	1abb      	subs	r3, r7, r2
 801b982:	b29b      	uxth	r3, r3
 801b984:	9208      	str	r2, [sp, #32]
 801b986:	9501      	str	r5, [sp, #4]
 801b988:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b98a:	29ff      	cmp	r1, #255	; 0xff
 801b98c:	9908      	ldr	r1, [sp, #32]
 801b98e:	eb0c 0601 	add.w	r6, ip, r1
 801b992:	d135      	bne.n	801ba00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b994:	f1a0 0e02 	sub.w	lr, r0, #2
 801b998:	b2b6      	uxth	r6, r6
 801b99a:	45b4      	cmp	ip, r6
 801b99c:	f040 808c 	bne.w	801bab8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b9a0:	9908      	ldr	r1, [sp, #32]
 801b9a2:	4297      	cmp	r7, r2
 801b9a4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b9a8:	d3e2      	bcc.n	801b970 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b9aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b9ac:	9904      	ldr	r1, [sp, #16]
 801b9ae:	8812      	ldrh	r2, [r2, #0]
 801b9b0:	1a52      	subs	r2, r2, r1
 801b9b2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b9b6:	9a07      	ldr	r2, [sp, #28]
 801b9b8:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b9ba:	3201      	adds	r2, #1
 801b9bc:	428a      	cmp	r2, r1
 801b9be:	9207      	str	r2, [sp, #28]
 801b9c0:	f040 8087 	bne.w	801bad2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b9c4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b9c8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b9cc:	9b04      	ldr	r3, [sp, #16]
 801b9ce:	1bed      	subs	r5, r5, r7
 801b9d0:	b2ad      	uxth	r5, r5
 801b9d2:	2d00      	cmp	r5, #0
 801b9d4:	bf08      	it	eq
 801b9d6:	461a      	moveq	r2, r3
 801b9d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b9da:	bf18      	it	ne
 801b9dc:	2200      	movne	r2, #0
 801b9de:	3301      	adds	r3, #1
 801b9e0:	930d      	str	r3, [sp, #52]	; 0x34
 801b9e2:	b292      	uxth	r2, r2
 801b9e4:	e70d      	b.n	801b802 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b9e6:	1bd1      	subs	r1, r2, r7
 801b9e8:	b28b      	uxth	r3, r1
 801b9ea:	9301      	str	r3, [sp, #4]
 801b9ec:	9708      	str	r7, [sp, #32]
 801b9ee:	462b      	mov	r3, r5
 801b9f0:	e7ca      	b.n	801b988 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b9f2:	bf00      	nop
 801b9f4:	20012e74 	.word	0x20012e74
 801b9f8:	20012e6e 	.word	0x20012e6e
 801b9fc:	fffff7fb 	.word	0xfffff7fb
 801ba00:	b2b6      	uxth	r6, r6
 801ba02:	900b      	str	r0, [sp, #44]	; 0x2c
 801ba04:	45b4      	cmp	ip, r6
 801ba06:	d0cb      	beq.n	801b9a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801ba08:	f10c 0101 	add.w	r1, ip, #1
 801ba0c:	44a4      	add	ip, r4
 801ba0e:	9117      	str	r1, [sp, #92]	; 0x5c
 801ba10:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801ba14:	9911      	ldr	r1, [sp, #68]	; 0x44
 801ba16:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801ba1a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801ba1c:	f8b1 c000 	ldrh.w	ip, [r1]
 801ba20:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba22:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801ba26:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ba2a:	fb1e fe01 	smulbb	lr, lr, r1
 801ba2e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801ba32:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ba34:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801ba38:	fb08 e801 	mla	r8, r8, r1, lr
 801ba3c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801ba40:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba42:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ba46:	fb19 f901 	smulbb	r9, r9, r1
 801ba4a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801ba4e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ba50:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ba54:	fb0e 9e01 	mla	lr, lr, r1, r9
 801ba58:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ba5c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba5e:	fa5f fc8c 	uxtb.w	ip, ip
 801ba62:	fb1c fc01 	smulbb	ip, ip, r1
 801ba66:	00ed      	lsls	r5, r5, #3
 801ba68:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ba6a:	b2ed      	uxtb	r5, r5
 801ba6c:	fb05 c501 	mla	r5, r5, r1, ip
 801ba70:	fa1f f888 	uxth.w	r8, r8
 801ba74:	fa1f fe8e 	uxth.w	lr, lr
 801ba78:	b2ad      	uxth	r5, r5
 801ba7a:	f108 0c01 	add.w	ip, r8, #1
 801ba7e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801ba82:	f10e 0901 	add.w	r9, lr, #1
 801ba86:	f105 0c01 	add.w	ip, r5, #1
 801ba8a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801ba8e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801ba92:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ba96:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ba9a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ba9e:	ea4c 0808 	orr.w	r8, ip, r8
 801baa2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801baa4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801baa8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801baac:	ea48 0809 	orr.w	r8, r8, r9
 801bab0:	f821 8b02 	strh.w	r8, [r1], #2
 801bab4:	910b      	str	r1, [sp, #44]	; 0x2c
 801bab6:	e7a5      	b.n	801ba04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801bab8:	f10c 0801 	add.w	r8, ip, #1
 801babc:	44a4      	add	ip, r4
 801babe:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bac0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bac4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801bac8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801bacc:	fa1f fc88 	uxth.w	ip, r8
 801bad0:	e763      	b.n	801b99a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801bad2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bad6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801bada:	1aad      	subs	r5, r5, r2
 801badc:	b2ad      	uxth	r5, r5
 801bade:	2d00      	cmp	r5, #0
 801bae0:	bf18      	it	ne
 801bae2:	2200      	movne	r2, #0
 801bae4:	9201      	str	r2, [sp, #4]
 801bae6:	e744      	b.n	801b972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801bae8:	4b03      	ldr	r3, [pc, #12]	; (801baf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801baea:	6818      	ldr	r0, [r3, #0]
 801baec:	6803      	ldr	r3, [r0, #0]
 801baee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801baf0:	4798      	blx	r3
 801baf2:	b01f      	add	sp, #124	; 0x7c
 801baf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801baf8:	20012e74 	.word	0x20012e74

0801bafc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bafc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb00:	b08f      	sub	sp, #60	; 0x3c
 801bb02:	461c      	mov	r4, r3
 801bb04:	9203      	str	r2, [sp, #12]
 801bb06:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bb0a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bb0c:	9202      	str	r2, [sp, #8]
 801bb0e:	460f      	mov	r7, r1
 801bb10:	2a00      	cmp	r2, #0
 801bb12:	f000 8128 	beq.w	801bd66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801bb16:	6820      	ldr	r0, [r4, #0]
 801bb18:	6861      	ldr	r1, [r4, #4]
 801bb1a:	aa0a      	add	r2, sp, #40	; 0x28
 801bb1c:	c203      	stmia	r2!, {r0, r1}
 801bb1e:	6818      	ldr	r0, [r3, #0]
 801bb20:	6859      	ldr	r1, [r3, #4]
 801bb22:	aa0c      	add	r2, sp, #48	; 0x30
 801bb24:	c203      	stmia	r2!, {r0, r1}
 801bb26:	a80a      	add	r0, sp, #40	; 0x28
 801bb28:	f7f9 f9f6 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bb2c:	4621      	mov	r1, r4
 801bb2e:	a80c      	add	r0, sp, #48	; 0x30
 801bb30:	f7f9 fa36 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bb34:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801bb38:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801bb3c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801bb40:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bb44:	bfde      	ittt	le
 801bb46:	b2b3      	uxthle	r3, r6
 801bb48:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bb4c:	fb92 f3f3 	sdivle	r3, r2, r3
 801bb50:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801bb54:	bfc8      	it	gt
 801bb56:	2301      	movgt	r3, #1
 801bb58:	fb92 f1f3 	sdiv	r1, r2, r3
 801bb5c:	fa1f fc81 	uxth.w	ip, r1
 801bb60:	fb0c 2413 	mls	r4, ip, r3, r2
 801bb64:	fb14 f406 	smulbb	r4, r4, r6
 801bb68:	441d      	add	r5, r3
 801bb6a:	4404      	add	r4, r0
 801bb6c:	4661      	mov	r1, ip
 801bb6e:	3d01      	subs	r5, #1
 801bb70:	b2a4      	uxth	r4, r4
 801bb72:	fb95 f5f3 	sdiv	r5, r5, r3
 801bb76:	b121      	cbz	r1, 801bb82 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801bb78:	9b03      	ldr	r3, [sp, #12]
 801bb7a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bb7e:	ba1b      	rev	r3, r3
 801bb80:	441f      	add	r7, r3
 801bb82:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801bb86:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801bb8a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801bb8e:	4418      	add	r0, r3
 801bb90:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801bb94:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801bb98:	441a      	add	r2, r3
 801bb9a:	4b74      	ldr	r3, [pc, #464]	; (801bd6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801bb9c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801bba0:	6818      	ldr	r0, [r3, #0]
 801bba2:	6803      	ldr	r3, [r0, #0]
 801bba4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bba6:	4798      	blx	r3
 801bba8:	4a71      	ldr	r2, [pc, #452]	; (801bd70 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801bbaa:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801bbae:	8813      	ldrh	r3, [r2, #0]
 801bbb0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801bbb4:	9209      	str	r2, [sp, #36]	; 0x24
 801bbb6:	fb03 c101 	mla	r1, r3, r1, ip
 801bbba:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bbbe:	4373      	muls	r3, r6
 801bbc0:	b2ad      	uxth	r5, r5
 801bbc2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bbc6:	00ad      	lsls	r5, r5, #2
 801bbc8:	2c00      	cmp	r4, #0
 801bbca:	9304      	str	r3, [sp, #16]
 801bbcc:	f105 0304 	add.w	r3, r5, #4
 801bbd0:	9305      	str	r3, [sp, #20]
 801bbd2:	bf0c      	ite	eq
 801bbd4:	46c8      	moveq	r8, r9
 801bbd6:	f04f 0800 	movne.w	r8, #0
 801bbda:	2300      	movs	r3, #0
 801bbdc:	fa1f f888 	uxth.w	r8, r8
 801bbe0:	9301      	str	r3, [sp, #4]
 801bbe2:	9a04      	ldr	r2, [sp, #16]
 801bbe4:	4282      	cmp	r2, r0
 801bbe6:	f240 80b9 	bls.w	801bd5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801bbea:	b95b      	cbnz	r3, 801bc04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801bbec:	783a      	ldrb	r2, [r7, #0]
 801bbee:	0993      	lsrs	r3, r2, #6
 801bbf0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bbf4:	9201      	str	r2, [sp, #4]
 801bbf6:	1e5a      	subs	r2, r3, #1
 801bbf8:	2a02      	cmp	r2, #2
 801bbfa:	bf8d      	iteet	hi
 801bbfc:	787b      	ldrbhi	r3, [r7, #1]
 801bbfe:	3701      	addls	r7, #1
 801bc00:	b29b      	uxthls	r3, r3
 801bc02:	3702      	addhi	r7, #2
 801bc04:	b184      	cbz	r4, 801bc28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801bc06:	429c      	cmp	r4, r3
 801bc08:	bf95      	itete	ls
 801bc0a:	1b1c      	subls	r4, r3, r4
 801bc0c:	1ae4      	subhi	r4, r4, r3
 801bc0e:	fa1f fa84 	uxthls.w	sl, r4
 801bc12:	b2a4      	uxthhi	r4, r4
 801bc14:	bf87      	ittee	hi
 801bc16:	46c4      	movhi	ip, r8
 801bc18:	f04f 0a00 	movhi.w	sl, #0
 801bc1c:	fa1f fc89 	uxthls.w	ip, r9
 801bc20:	2400      	movls	r4, #0
 801bc22:	4653      	mov	r3, sl
 801bc24:	46e0      	mov	r8, ip
 801bc26:	e7dc      	b.n	801bbe2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801bc28:	2204      	movs	r2, #4
 801bc2a:	4615      	mov	r5, r2
 801bc2c:	9905      	ldr	r1, [sp, #20]
 801bc2e:	9a01      	ldr	r2, [sp, #4]
 801bc30:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bc34:	9903      	ldr	r1, [sp, #12]
 801bc36:	588a      	ldr	r2, [r1, r2]
 801bc38:	4543      	cmp	r3, r8
 801bc3a:	bf27      	ittee	cs
 801bc3c:	eba3 0a08 	subcs.w	sl, r3, r8
 801bc40:	46c6      	movcs	lr, r8
 801bc42:	eba8 0c03 	subcc.w	ip, r8, r3
 801bc46:	469e      	movcc	lr, r3
 801bc48:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801bc4c:	bf27      	ittee	cs
 801bc4e:	fa1f fa8a 	uxthcs.w	sl, sl
 801bc52:	46a4      	movcs	ip, r4
 801bc54:	fa1f fc8c 	uxthcc.w	ip, ip
 801bc58:	46a2      	movcc	sl, r4
 801bc5a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801bc5e:	2900      	cmp	r1, #0
 801bc60:	d066      	beq.n	801bd30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801bc62:	29ff      	cmp	r1, #255	; 0xff
 801bc64:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bc68:	d114      	bne.n	801bc94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bc6a:	9d02      	ldr	r5, [sp, #8]
 801bc6c:	2dff      	cmp	r5, #255	; 0xff
 801bc6e:	d111      	bne.n	801bc94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bc70:	0951      	lsrs	r1, r2, #5
 801bc72:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bc76:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bc7a:	f026 0607 	bic.w	r6, r6, #7
 801bc7e:	430e      	orrs	r6, r1
 801bc80:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bc84:	4316      	orrs	r6, r2
 801bc86:	b2b6      	uxth	r6, r6
 801bc88:	4486      	add	lr, r0
 801bc8a:	4586      	cmp	lr, r0
 801bc8c:	d051      	beq.n	801bd32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bc8e:	f820 6b02 	strh.w	r6, [r0], #2
 801bc92:	e7fa      	b.n	801bc8a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801bc94:	9d02      	ldr	r5, [sp, #8]
 801bc96:	4369      	muls	r1, r5
 801bc98:	1c4d      	adds	r5, r1, #1
 801bc9a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801bc9e:	122d      	asrs	r5, r5, #8
 801bca0:	ea6f 0b05 	mvn.w	fp, r5
 801bca4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801bca8:	b2ad      	uxth	r5, r5
 801bcaa:	b2f6      	uxtb	r6, r6
 801bcac:	b2d2      	uxtb	r2, r2
 801bcae:	fb11 f105 	smulbb	r1, r1, r5
 801bcb2:	fb16 f605 	smulbb	r6, r6, r5
 801bcb6:	fb12 f205 	smulbb	r2, r2, r5
 801bcba:	b289      	uxth	r1, r1
 801bcbc:	b2b6      	uxth	r6, r6
 801bcbe:	b292      	uxth	r2, r2
 801bcc0:	9106      	str	r1, [sp, #24]
 801bcc2:	9607      	str	r6, [sp, #28]
 801bcc4:	9208      	str	r2, [sp, #32]
 801bcc6:	4486      	add	lr, r0
 801bcc8:	fa5f fb8b 	uxtb.w	fp, fp
 801bccc:	4586      	cmp	lr, r0
 801bcce:	d030      	beq.n	801bd32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bcd0:	8802      	ldrh	r2, [r0, #0]
 801bcd2:	9906      	ldr	r1, [sp, #24]
 801bcd4:	1216      	asrs	r6, r2, #8
 801bcd6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bcda:	10d5      	asrs	r5, r2, #3
 801bcdc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bce0:	fb06 160b 	mla	r6, r6, fp, r1
 801bce4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bce8:	9907      	ldr	r1, [sp, #28]
 801bcea:	00d2      	lsls	r2, r2, #3
 801bcec:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bcf0:	fb05 150b 	mla	r5, r5, fp, r1
 801bcf4:	b2d2      	uxtb	r2, r2
 801bcf6:	9908      	ldr	r1, [sp, #32]
 801bcf8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bcfc:	b2b6      	uxth	r6, r6
 801bcfe:	fb02 120b 	mla	r2, r2, fp, r1
 801bd02:	b292      	uxth	r2, r2
 801bd04:	1c71      	adds	r1, r6, #1
 801bd06:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801bd0a:	1c51      	adds	r1, r2, #1
 801bd0c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bd10:	b2ad      	uxth	r5, r5
 801bd12:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bd16:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bd1a:	4316      	orrs	r6, r2
 801bd1c:	1c6a      	adds	r2, r5, #1
 801bd1e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801bd22:	096d      	lsrs	r5, r5, #5
 801bd24:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bd28:	432e      	orrs	r6, r5
 801bd2a:	f820 6b02 	strh.w	r6, [r0], #2
 801bd2e:	e7cd      	b.n	801bccc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801bd30:	4470      	add	r0, lr
 801bd32:	4543      	cmp	r3, r8
 801bd34:	f4ff af75 	bcc.w	801bc22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801bd38:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801bd3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd3e:	fa1f fc89 	uxth.w	ip, r9
 801bd42:	eba4 040c 	sub.w	r4, r4, ip
 801bd46:	881b      	ldrh	r3, [r3, #0]
 801bd48:	b2a4      	uxth	r4, r4
 801bd4a:	2c00      	cmp	r4, #0
 801bd4c:	eba3 0309 	sub.w	r3, r3, r9
 801bd50:	bf18      	it	ne
 801bd52:	f04f 0c00 	movne.w	ip, #0
 801bd56:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bd5a:	e762      	b.n	801bc22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801bd5c:	4b03      	ldr	r3, [pc, #12]	; (801bd6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801bd5e:	6818      	ldr	r0, [r3, #0]
 801bd60:	6803      	ldr	r3, [r0, #0]
 801bd62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd64:	4798      	blx	r3
 801bd66:	b00f      	add	sp, #60	; 0x3c
 801bd68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd6c:	20012e74 	.word	0x20012e74
 801bd70:	20012e6e 	.word	0x20012e6e

0801bd74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bd74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd78:	b093      	sub	sp, #76	; 0x4c
 801bd7a:	461c      	mov	r4, r3
 801bd7c:	9205      	str	r2, [sp, #20]
 801bd7e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801bd82:	9101      	str	r1, [sp, #4]
 801bd84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bd86:	9202      	str	r2, [sp, #8]
 801bd88:	2a00      	cmp	r2, #0
 801bd8a:	f000 812c 	beq.w	801bfe6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801bd8e:	6820      	ldr	r0, [r4, #0]
 801bd90:	6861      	ldr	r1, [r4, #4]
 801bd92:	aa0e      	add	r2, sp, #56	; 0x38
 801bd94:	c203      	stmia	r2!, {r0, r1}
 801bd96:	6818      	ldr	r0, [r3, #0]
 801bd98:	6859      	ldr	r1, [r3, #4]
 801bd9a:	aa10      	add	r2, sp, #64	; 0x40
 801bd9c:	c203      	stmia	r2!, {r0, r1}
 801bd9e:	a80e      	add	r0, sp, #56	; 0x38
 801bda0:	f7f9 f8ba 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bda4:	4621      	mov	r1, r4
 801bda6:	a810      	add	r0, sp, #64	; 0x40
 801bda8:	f7f9 f8fa 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bdac:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801bdb0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801bdb4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801bdb8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bdbc:	bfde      	ittt	le
 801bdbe:	b2b3      	uxthle	r3, r6
 801bdc0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bdc4:	fb92 f3f3 	sdivle	r3, r2, r3
 801bdc8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bdcc:	bfc8      	it	gt
 801bdce:	2301      	movgt	r3, #1
 801bdd0:	fb92 f1f3 	sdiv	r1, r2, r3
 801bdd4:	fa1f fc81 	uxth.w	ip, r1
 801bdd8:	fb0c 2413 	mls	r4, ip, r3, r2
 801bddc:	fb14 f406 	smulbb	r4, r4, r6
 801bde0:	441d      	add	r5, r3
 801bde2:	4404      	add	r4, r0
 801bde4:	4661      	mov	r1, ip
 801bde6:	3d01      	subs	r5, #1
 801bde8:	b2a4      	uxth	r4, r4
 801bdea:	fb95 f5f3 	sdiv	r5, r5, r3
 801bdee:	b131      	cbz	r1, 801bdfe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801bdf0:	9b05      	ldr	r3, [sp, #20]
 801bdf2:	9901      	ldr	r1, [sp, #4]
 801bdf4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bdf8:	ba1b      	rev	r3, r3
 801bdfa:	4419      	add	r1, r3
 801bdfc:	9101      	str	r1, [sp, #4]
 801bdfe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801be02:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801be06:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801be0a:	4418      	add	r0, r3
 801be0c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801be10:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801be14:	441a      	add	r2, r3
 801be16:	4b75      	ldr	r3, [pc, #468]	; (801bfec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801be18:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801be1c:	6818      	ldr	r0, [r3, #0]
 801be1e:	6803      	ldr	r3, [r0, #0]
 801be20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be22:	4798      	blx	r3
 801be24:	4972      	ldr	r1, [pc, #456]	; (801bff0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801be26:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801be2a:	880b      	ldrh	r3, [r1, #0]
 801be2c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801be30:	910d      	str	r1, [sp, #52]	; 0x34
 801be32:	fb03 c202 	mla	r2, r3, r2, ip
 801be36:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801be3a:	4373      	muls	r3, r6
 801be3c:	b2ad      	uxth	r5, r5
 801be3e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801be42:	00ad      	lsls	r5, r5, #2
 801be44:	9308      	str	r3, [sp, #32]
 801be46:	1d2b      	adds	r3, r5, #4
 801be48:	9309      	str	r3, [sp, #36]	; 0x24
 801be4a:	9b02      	ldr	r3, [sp, #8]
 801be4c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801be50:	9106      	str	r1, [sp, #24]
 801be52:	43da      	mvns	r2, r3
 801be54:	2c00      	cmp	r4, #0
 801be56:	bf0c      	ite	eq
 801be58:	46dc      	moveq	ip, fp
 801be5a:	f04f 0c00 	movne.w	ip, #0
 801be5e:	2300      	movs	r3, #0
 801be60:	b2d2      	uxtb	r2, r2
 801be62:	fa1f fc8c 	uxth.w	ip, ip
 801be66:	9303      	str	r3, [sp, #12]
 801be68:	9207      	str	r2, [sp, #28]
 801be6a:	9a08      	ldr	r2, [sp, #32]
 801be6c:	4282      	cmp	r2, r0
 801be6e:	f240 80b5 	bls.w	801bfdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801be72:	b963      	cbnz	r3, 801be8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801be74:	9b01      	ldr	r3, [sp, #4]
 801be76:	781a      	ldrb	r2, [r3, #0]
 801be78:	0993      	lsrs	r3, r2, #6
 801be7a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801be7e:	9203      	str	r2, [sp, #12]
 801be80:	1e5a      	subs	r2, r3, #1
 801be82:	2a02      	cmp	r2, #2
 801be84:	d815      	bhi.n	801beb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801be86:	9a01      	ldr	r2, [sp, #4]
 801be88:	3201      	adds	r2, #1
 801be8a:	9201      	str	r2, [sp, #4]
 801be8c:	b29b      	uxth	r3, r3
 801be8e:	b1b4      	cbz	r4, 801bebe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801be90:	429c      	cmp	r4, r3
 801be92:	bf95      	itete	ls
 801be94:	1b1c      	subls	r4, r3, r4
 801be96:	1ae4      	subhi	r4, r4, r3
 801be98:	fa1f f884 	uxthls.w	r8, r4
 801be9c:	b2a4      	uxthhi	r4, r4
 801be9e:	bf87      	ittee	hi
 801bea0:	4666      	movhi	r6, ip
 801bea2:	f04f 0800 	movhi.w	r8, #0
 801bea6:	fa1f f68b 	uxthls.w	r6, fp
 801beaa:	2400      	movls	r4, #0
 801beac:	4643      	mov	r3, r8
 801beae:	46b4      	mov	ip, r6
 801beb0:	e7db      	b.n	801be6a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801beb2:	9a01      	ldr	r2, [sp, #4]
 801beb4:	9b01      	ldr	r3, [sp, #4]
 801beb6:	3202      	adds	r2, #2
 801beb8:	785b      	ldrb	r3, [r3, #1]
 801beba:	9201      	str	r2, [sp, #4]
 801bebc:	e7e7      	b.n	801be8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bebe:	2203      	movs	r2, #3
 801bec0:	4615      	mov	r5, r2
 801bec2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bec4:	9a03      	ldr	r2, [sp, #12]
 801bec6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801beca:	9905      	ldr	r1, [sp, #20]
 801becc:	4563      	cmp	r3, ip
 801bece:	eb01 0502 	add.w	r5, r1, r2
 801bed2:	9902      	ldr	r1, [sp, #8]
 801bed4:	bf29      	itett	cs
 801bed6:	eba3 080c 	subcs.w	r8, r3, ip
 801beda:	ebac 0603 	subcc.w	r6, ip, r3
 801bede:	fa1f f888 	uxthcs.w	r8, r8
 801bee2:	46e1      	movcs	r9, ip
 801bee4:	bf2f      	iteee	cs
 801bee6:	4626      	movcs	r6, r4
 801bee8:	b2b6      	uxthcc	r6, r6
 801beea:	4699      	movcc	r9, r3
 801beec:	46a0      	movcc	r8, r4
 801beee:	29ff      	cmp	r1, #255	; 0xff
 801bef0:	d04a      	beq.n	801bf88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801bef2:	9f06      	ldr	r7, [sp, #24]
 801bef4:	78a9      	ldrb	r1, [r5, #2]
 801bef6:	9004      	str	r0, [sp, #16]
 801bef8:	4379      	muls	r1, r7
 801befa:	910a      	str	r1, [sp, #40]	; 0x28
 801befc:	7869      	ldrb	r1, [r5, #1]
 801befe:	4379      	muls	r1, r7
 801bf00:	910b      	str	r1, [sp, #44]	; 0x2c
 801bf02:	9905      	ldr	r1, [sp, #20]
 801bf04:	5c8a      	ldrb	r2, [r1, r2]
 801bf06:	437a      	muls	r2, r7
 801bf08:	920c      	str	r2, [sp, #48]	; 0x30
 801bf0a:	46ca      	mov	sl, r9
 801bf0c:	f1ba 0f00 	cmp.w	sl, #0
 801bf10:	d03d      	beq.n	801bf8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801bf12:	9a04      	ldr	r2, [sp, #16]
 801bf14:	9f07      	ldr	r7, [sp, #28]
 801bf16:	8812      	ldrh	r2, [r2, #0]
 801bf18:	1215      	asrs	r5, r2, #8
 801bf1a:	46be      	mov	lr, r7
 801bf1c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bf20:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bf22:	10d1      	asrs	r1, r2, #3
 801bf24:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bf28:	fb05 750e 	mla	r5, r5, lr, r7
 801bf2c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bf30:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801bf32:	00d2      	lsls	r2, r2, #3
 801bf34:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bf38:	fb01 710e 	mla	r1, r1, lr, r7
 801bf3c:	b2d2      	uxtb	r2, r2
 801bf3e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bf40:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bf44:	b2ad      	uxth	r5, r5
 801bf46:	fb02 720e 	mla	r2, r2, lr, r7
 801bf4a:	b292      	uxth	r2, r2
 801bf4c:	f105 0e01 	add.w	lr, r5, #1
 801bf50:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801bf54:	f102 0e01 	add.w	lr, r2, #1
 801bf58:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bf5c:	b289      	uxth	r1, r1
 801bf5e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bf62:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bf66:	4315      	orrs	r5, r2
 801bf68:	1c4a      	adds	r2, r1, #1
 801bf6a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bf6e:	0949      	lsrs	r1, r1, #5
 801bf70:	9a04      	ldr	r2, [sp, #16]
 801bf72:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bf76:	430d      	orrs	r5, r1
 801bf78:	f822 5b02 	strh.w	r5, [r2], #2
 801bf7c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bf80:	9204      	str	r2, [sp, #16]
 801bf82:	fa1f fa8a 	uxth.w	sl, sl
 801bf86:	e7c1      	b.n	801bf0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801bf88:	4649      	mov	r1, r9
 801bf8a:	4686      	mov	lr, r0
 801bf8c:	b999      	cbnz	r1, 801bfb6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801bf8e:	4563      	cmp	r3, ip
 801bf90:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801bf94:	d38a      	bcc.n	801beac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bf96:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801bf9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf9c:	fa1f f68b 	uxth.w	r6, fp
 801bfa0:	1ba4      	subs	r4, r4, r6
 801bfa2:	881b      	ldrh	r3, [r3, #0]
 801bfa4:	b2a4      	uxth	r4, r4
 801bfa6:	2c00      	cmp	r4, #0
 801bfa8:	eba3 030b 	sub.w	r3, r3, fp
 801bfac:	bf18      	it	ne
 801bfae:	2600      	movne	r6, #0
 801bfb0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bfb4:	e77a      	b.n	801beac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bfb6:	78aa      	ldrb	r2, [r5, #2]
 801bfb8:	4f0e      	ldr	r7, [pc, #56]	; (801bff4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801bfba:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801bfbe:	786a      	ldrb	r2, [r5, #1]
 801bfc0:	00d2      	lsls	r2, r2, #3
 801bfc2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfc6:	ea4a 0202 	orr.w	r2, sl, r2
 801bfca:	f895 a000 	ldrb.w	sl, [r5]
 801bfce:	3901      	subs	r1, #1
 801bfd0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801bfd4:	f82e 2b02 	strh.w	r2, [lr], #2
 801bfd8:	b289      	uxth	r1, r1
 801bfda:	e7d7      	b.n	801bf8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801bfdc:	4b03      	ldr	r3, [pc, #12]	; (801bfec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bfde:	6818      	ldr	r0, [r3, #0]
 801bfe0:	6803      	ldr	r3, [r0, #0]
 801bfe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bfe4:	4798      	blx	r3
 801bfe6:	b013      	add	sp, #76	; 0x4c
 801bfe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfec:	20012e74 	.word	0x20012e74
 801bff0:	20012e6e 	.word	0x20012e6e
 801bff4:	fffff800 	.word	0xfffff800

0801bff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bffc:	b09d      	sub	sp, #116	; 0x74
 801bffe:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801c002:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801c006:	920e      	str	r2, [sp, #56]	; 0x38
 801c008:	461c      	mov	r4, r3
 801c00a:	4683      	mov	fp, r0
 801c00c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c00e:	2a00      	cmp	r2, #0
 801c010:	f000 81e0 	beq.w	801c3d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801c014:	6820      	ldr	r0, [r4, #0]
 801c016:	6861      	ldr	r1, [r4, #4]
 801c018:	aa18      	add	r2, sp, #96	; 0x60
 801c01a:	c203      	stmia	r2!, {r0, r1}
 801c01c:	6818      	ldr	r0, [r3, #0]
 801c01e:	6859      	ldr	r1, [r3, #4]
 801c020:	aa1a      	add	r2, sp, #104	; 0x68
 801c022:	c203      	stmia	r2!, {r0, r1}
 801c024:	a818      	add	r0, sp, #96	; 0x60
 801c026:	f7f8 ff77 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c02a:	4621      	mov	r1, r4
 801c02c:	a81a      	add	r0, sp, #104	; 0x68
 801c02e:	f7f8 ffb7 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c032:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801c036:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801c03a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c03e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c042:	bfd7      	itett	le
 801c044:	b29a      	uxthle	r2, r3
 801c046:	2201      	movgt	r2, #1
 801c048:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c04c:	fb91 f2f2 	sdivle	r2, r1, r2
 801c050:	9202      	str	r2, [sp, #8]
 801c052:	9802      	ldr	r0, [sp, #8]
 801c054:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801c058:	fb92 f0f0 	sdiv	r0, r2, r0
 801c05c:	b280      	uxth	r0, r0
 801c05e:	900f      	str	r0, [sp, #60]	; 0x3c
 801c060:	9902      	ldr	r1, [sp, #8]
 801c062:	9802      	ldr	r0, [sp, #8]
 801c064:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c066:	440c      	add	r4, r1
 801c068:	fb05 2510 	mls	r5, r5, r0, r2
 801c06c:	fb15 f503 	smulbb	r5, r5, r3
 801c070:	3c01      	subs	r4, #1
 801c072:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801c076:	fb94 f4f1 	sdiv	r4, r4, r1
 801c07a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801c07e:	440d      	add	r5, r1
 801c080:	4419      	add	r1, r3
 801c082:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801c086:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801c08a:	441a      	add	r2, r3
 801c08c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c090:	9306      	str	r3, [sp, #24]
 801c092:	4bb3      	ldr	r3, [pc, #716]	; (801c360 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801c094:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801c098:	6818      	ldr	r0, [r3, #0]
 801c09a:	6803      	ldr	r3, [r0, #0]
 801c09c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c09e:	4798      	blx	r3
 801c0a0:	4bb0      	ldr	r3, [pc, #704]	; (801c364 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801c0a2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801c0a6:	881a      	ldrh	r2, [r3, #0]
 801c0a8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801c0ac:	9316      	str	r3, [sp, #88]	; 0x58
 801c0ae:	fb02 7101 	mla	r1, r2, r1, r7
 801c0b2:	3401      	adds	r4, #1
 801c0b4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801c0b8:	b2a4      	uxth	r4, r4
 801c0ba:	4356      	muls	r6, r2
 801c0bc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801c0c0:	00a4      	lsls	r4, r4, #2
 801c0c2:	920a      	str	r2, [sp, #40]	; 0x28
 801c0c4:	1d22      	adds	r2, r4, #4
 801c0c6:	b2ad      	uxth	r5, r5
 801c0c8:	9213      	str	r2, [sp, #76]	; 0x4c
 801c0ca:	4ba7      	ldr	r3, [pc, #668]	; (801c368 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801c0cc:	9a06      	ldr	r2, [sp, #24]
 801c0ce:	2d00      	cmp	r5, #0
 801c0d0:	bf0c      	ite	eq
 801c0d2:	4611      	moveq	r1, r2
 801c0d4:	2100      	movne	r1, #0
 801c0d6:	2200      	movs	r2, #0
 801c0d8:	eba3 030b 	sub.w	r3, r3, fp
 801c0dc:	b289      	uxth	r1, r1
 801c0de:	920d      	str	r2, [sp, #52]	; 0x34
 801c0e0:	9317      	str	r3, [sp, #92]	; 0x5c
 801c0e2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c0e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c0e6:	fa12 f383 	uxtah	r3, r2, r3
 801c0ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c0ec:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c0f0:	3304      	adds	r3, #4
 801c0f2:	9308      	str	r3, [sp, #32]
 801c0f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c0f6:	4543      	cmp	r3, r8
 801c0f8:	f240 8167 	bls.w	801c3ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c0fc:	9a02      	ldr	r2, [sp, #8]
 801c0fe:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801c102:	fbb5 f3f3 	udiv	r3, r5, r3
 801c106:	1ad3      	subs	r3, r2, r3
 801c108:	b29b      	uxth	r3, r3
 801c10a:	9314      	str	r3, [sp, #80]	; 0x50
 801c10c:	9b08      	ldr	r3, [sp, #32]
 801c10e:	9808      	ldr	r0, [sp, #32]
 801c110:	785a      	ldrb	r2, [r3, #1]
 801c112:	789b      	ldrb	r3, [r3, #2]
 801c114:	7800      	ldrb	r0, [r0, #0]
 801c116:	9010      	str	r0, [sp, #64]	; 0x40
 801c118:	021b      	lsls	r3, r3, #8
 801c11a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c11e:	9a08      	ldr	r2, [sp, #32]
 801c120:	78d2      	ldrb	r2, [r2, #3]
 801c122:	4313      	orrs	r3, r2
 801c124:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c126:	3001      	adds	r0, #1
 801c128:	441a      	add	r2, r3
 801c12a:	9007      	str	r0, [sp, #28]
 801c12c:	1c50      	adds	r0, r2, #1
 801c12e:	9005      	str	r0, [sp, #20]
 801c130:	7852      	ldrb	r2, [r2, #1]
 801c132:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c134:	0212      	lsls	r2, r2, #8
 801c136:	5cc3      	ldrb	r3, [r0, r3]
 801c138:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c13c:	431a      	orrs	r2, r3
 801c13e:	b293      	uxth	r3, r2
 801c140:	930b      	str	r3, [sp, #44]	; 0x2c
 801c142:	2300      	movs	r3, #0
 801c144:	9309      	str	r3, [sp, #36]	; 0x24
 801c146:	2301      	movs	r3, #1
 801c148:	9301      	str	r3, [sp, #4]
 801c14a:	9304      	str	r3, [sp, #16]
 801c14c:	2300      	movs	r3, #0
 801c14e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801c152:	9303      	str	r3, [sp, #12]
 801c154:	f04f 0e01 	mov.w	lr, #1
 801c158:	2d00      	cmp	r5, #0
 801c15a:	d07c      	beq.n	801c256 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801c15c:	45ae      	cmp	lr, r5
 801c15e:	d26b      	bcs.n	801c238 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c160:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c162:	eba5 050e 	sub.w	r5, r5, lr
 801c166:	4543      	cmp	r3, r8
 801c168:	b2ad      	uxth	r5, r5
 801c16a:	460c      	mov	r4, r1
 801c16c:	d802      	bhi.n	801c174 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801c16e:	e070      	b.n	801c252 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c170:	2b00      	cmp	r3, #0
 801c172:	d15c      	bne.n	801c22e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c174:	9b05      	ldr	r3, [sp, #20]
 801c176:	9a04      	ldr	r2, [sp, #16]
 801c178:	785b      	ldrb	r3, [r3, #1]
 801c17a:	9904      	ldr	r1, [sp, #16]
 801c17c:	f1c2 0207 	rsb	r2, r2, #7
 801c180:	4093      	lsls	r3, r2
 801c182:	005b      	lsls	r3, r3, #1
 801c184:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c188:	9b05      	ldr	r3, [sp, #20]
 801c18a:	781b      	ldrb	r3, [r3, #0]
 801c18c:	410b      	asrs	r3, r1
 801c18e:	3101      	adds	r1, #1
 801c190:	b2c9      	uxtb	r1, r1
 801c192:	2908      	cmp	r1, #8
 801c194:	9104      	str	r1, [sp, #16]
 801c196:	9905      	ldr	r1, [sp, #20]
 801c198:	bf0a      	itet	eq
 801c19a:	3102      	addeq	r1, #2
 801c19c:	3101      	addne	r1, #1
 801c19e:	9105      	streq	r1, [sp, #20]
 801c1a0:	b2db      	uxtb	r3, r3
 801c1a2:	bf0a      	itet	eq
 801c1a4:	2100      	moveq	r1, #0
 801c1a6:	9105      	strne	r1, [sp, #20]
 801c1a8:	9104      	streq	r1, [sp, #16]
 801c1aa:	4313      	orrs	r3, r2
 801c1ac:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c1ae:	b29a      	uxth	r2, r3
 801c1b0:	4291      	cmp	r1, r2
 801c1b2:	d30a      	bcc.n	801c1ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c1b4:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801c1b8:	2301      	movs	r3, #1
 801c1ba:	9907      	ldr	r1, [sp, #28]
 801c1bc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c1c0:	d30f      	bcc.n	801c1e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c1c2:	2100      	movs	r1, #0
 801c1c4:	9301      	str	r3, [sp, #4]
 801c1c6:	9103      	str	r1, [sp, #12]
 801c1c8:	e032      	b.n	801c230 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801c1ca:	9b07      	ldr	r3, [sp, #28]
 801c1cc:	429a      	cmp	r2, r3
 801c1ce:	d318      	bcc.n	801c202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c1d0:	9b01      	ldr	r3, [sp, #4]
 801c1d2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801c1d6:	445b      	add	r3, fp
 801c1d8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c1dc:	9b01      	ldr	r3, [sp, #4]
 801c1de:	3301      	adds	r3, #1
 801c1e0:	b29b      	uxth	r3, r3
 801c1e2:	9907      	ldr	r1, [sp, #28]
 801c1e4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801c1e8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c1ec:	7108      	strb	r0, [r1, #4]
 801c1ee:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c1f0:	80c8      	strh	r0, [r1, #6]
 801c1f2:	9801      	ldr	r0, [sp, #4]
 801c1f4:	3001      	adds	r0, #1
 801c1f6:	7148      	strb	r0, [r1, #5]
 801c1f8:	9907      	ldr	r1, [sp, #28]
 801c1fa:	3101      	adds	r1, #1
 801c1fc:	b289      	uxth	r1, r1
 801c1fe:	9107      	str	r1, [sp, #28]
 801c200:	e7df      	b.n	801c1c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c202:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c206:	4611      	mov	r1, r2
 801c208:	795b      	ldrb	r3, [r3, #5]
 801c20a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801c20e:	4458      	add	r0, fp
 801c210:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801c212:	4406      	add	r6, r0
 801c214:	2e00      	cmp	r6, #0
 801c216:	dd06      	ble.n	801c226 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801c218:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c21c:	790e      	ldrb	r6, [r1, #4]
 801c21e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c222:	88c9      	ldrh	r1, [r1, #6]
 801c224:	e7f4      	b.n	801c210 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801c226:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801c22a:	b29b      	uxth	r3, r3
 801c22c:	e7c5      	b.n	801c1ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801c22e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c230:	920b      	str	r2, [sp, #44]	; 0x2c
 801c232:	4621      	mov	r1, r4
 801c234:	469e      	mov	lr, r3
 801c236:	e78f      	b.n	801c158 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801c238:	9a03      	ldr	r2, [sp, #12]
 801c23a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c23e:	442a      	add	r2, r5
 801c240:	ebae 0305 	sub.w	r3, lr, r5
 801c244:	b292      	uxth	r2, r2
 801c246:	b29b      	uxth	r3, r3
 801c248:	9203      	str	r2, [sp, #12]
 801c24a:	2500      	movs	r5, #0
 801c24c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c24e:	4542      	cmp	r2, r8
 801c250:	d88e      	bhi.n	801c170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801c252:	4621      	mov	r1, r4
 801c254:	e74e      	b.n	801c0f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801c256:	458e      	cmp	lr, r1
 801c258:	bf29      	itett	cs
 801c25a:	ebae 0301 	subcs.w	r3, lr, r1
 801c25e:	eba1 040e 	subcc.w	r4, r1, lr
 801c262:	b29b      	uxthcs	r3, r3
 801c264:	910c      	strcs	r1, [sp, #48]	; 0x30
 801c266:	bf2f      	iteee	cs
 801c268:	462c      	movcs	r4, r5
 801c26a:	b2a4      	uxthcc	r4, r4
 801c26c:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801c270:	462b      	movcc	r3, r5
 801c272:	f04f 0900 	mov.w	r9, #0
 801c276:	9a03      	ldr	r2, [sp, #12]
 801c278:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c27a:	444a      	add	r2, r9
 801c27c:	4548      	cmp	r0, r9
 801c27e:	b292      	uxth	r2, r2
 801c280:	d074      	beq.n	801c36c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c282:	445a      	add	r2, fp
 801c284:	2004      	movs	r0, #4
 801c286:	4605      	mov	r5, r0
 801c288:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801c28c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c28e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c292:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c294:	5880      	ldr	r0, [r0, r2]
 801c296:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c29a:	d014      	beq.n	801c2c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c29c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c2a0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c2a4:	d112      	bne.n	801c2cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c2a6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c2a8:	2aff      	cmp	r2, #255	; 0xff
 801c2aa:	d10f      	bne.n	801c2cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c2ac:	0942      	lsrs	r2, r0, #5
 801c2ae:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c2b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c2b6:	f025 0507 	bic.w	r5, r5, #7
 801c2ba:	4315      	orrs	r5, r2
 801c2bc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c2c0:	4305      	orrs	r5, r0
 801c2c2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c2c6:	f109 0901 	add.w	r9, r9, #1
 801c2ca:	e7d4      	b.n	801c276 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c2cc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c2d0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c2d4:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c2d8:	9215      	str	r2, [sp, #84]	; 0x54
 801c2da:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c2dc:	fb02 fa0a 	mul.w	sl, r2, sl
 801c2e0:	f10a 0201 	add.w	r2, sl, #1
 801c2e4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c2e8:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c2ec:	1212      	asrs	r2, r2, #8
 801c2ee:	fa1f fa82 	uxth.w	sl, r2
 801c2f2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c2f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c2fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c2fe:	43d2      	mvns	r2, r2
 801c300:	b2d2      	uxtb	r2, r2
 801c302:	fb16 f60a 	smulbb	r6, r6, sl
 801c306:	fa5f fc8c 	uxtb.w	ip, ip
 801c30a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c30e:	b2c0      	uxtb	r0, r0
 801c310:	fb07 6702 	mla	r7, r7, r2, r6
 801c314:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c318:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c31a:	fb10 f00a 	smulbb	r0, r0, sl
 801c31e:	fb0c 0002 	mla	r0, ip, r2, r0
 801c322:	b2ed      	uxtb	r5, r5
 801c324:	b2bf      	uxth	r7, r7
 801c326:	fb15 f50a 	smulbb	r5, r5, sl
 801c32a:	b280      	uxth	r0, r0
 801c32c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c330:	fb06 5602 	mla	r6, r6, r2, r5
 801c334:	1c7a      	adds	r2, r7, #1
 801c336:	1c45      	adds	r5, r0, #1
 801c338:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c33c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c340:	b2b6      	uxth	r6, r6
 801c342:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c346:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c34a:	432f      	orrs	r7, r5
 801c34c:	1c75      	adds	r5, r6, #1
 801c34e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c352:	096d      	lsrs	r5, r5, #5
 801c354:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c358:	432f      	orrs	r7, r5
 801c35a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c35e:	e7b2      	b.n	801c2c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c360:	20012e74 	.word	0x20012e74
 801c364:	20012e6e 	.word	0x20012e6e
 801c368:	fffff7fb 	.word	0xfffff7fb
 801c36c:	9203      	str	r2, [sp, #12]
 801c36e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c370:	458e      	cmp	lr, r1
 801c372:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c376:	f4ff af68 	bcc.w	801c24a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c37a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c37c:	9906      	ldr	r1, [sp, #24]
 801c37e:	8812      	ldrh	r2, [r2, #0]
 801c380:	1a52      	subs	r2, r2, r1
 801c382:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c386:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c388:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c38a:	3201      	adds	r2, #1
 801c38c:	428a      	cmp	r2, r1
 801c38e:	9209      	str	r2, [sp, #36]	; 0x24
 801c390:	d111      	bne.n	801c3b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c392:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c396:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c39a:	9b06      	ldr	r3, [sp, #24]
 801c39c:	eba5 0509 	sub.w	r5, r5, r9
 801c3a0:	b2ad      	uxth	r5, r5
 801c3a2:	2d00      	cmp	r5, #0
 801c3a4:	bf08      	it	eq
 801c3a6:	4619      	moveq	r1, r3
 801c3a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c3aa:	bf18      	it	ne
 801c3ac:	2100      	movne	r1, #0
 801c3ae:	3301      	adds	r3, #1
 801c3b0:	930d      	str	r3, [sp, #52]	; 0x34
 801c3b2:	b289      	uxth	r1, r1
 801c3b4:	e695      	b.n	801c0e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c3b6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c3ba:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c3be:	1b2d      	subs	r5, r5, r4
 801c3c0:	b2ad      	uxth	r5, r5
 801c3c2:	2d00      	cmp	r5, #0
 801c3c4:	bf18      	it	ne
 801c3c6:	2400      	movne	r4, #0
 801c3c8:	e740      	b.n	801c24c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c3ca:	4b04      	ldr	r3, [pc, #16]	; (801c3dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c3cc:	6818      	ldr	r0, [r3, #0]
 801c3ce:	6803      	ldr	r3, [r0, #0]
 801c3d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3d2:	4798      	blx	r3
 801c3d4:	b01d      	add	sp, #116	; 0x74
 801c3d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c3da:	bf00      	nop
 801c3dc:	20012e74 	.word	0x20012e74

0801c3e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c3e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3e4:	b09f      	sub	sp, #124	; 0x7c
 801c3e6:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c3ea:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c3ee:	920a      	str	r2, [sp, #40]	; 0x28
 801c3f0:	461d      	mov	r5, r3
 801c3f2:	4604      	mov	r4, r0
 801c3f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c3f6:	2a00      	cmp	r2, #0
 801c3f8:	f000 81fa 	beq.w	801c7f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c3fc:	6828      	ldr	r0, [r5, #0]
 801c3fe:	6869      	ldr	r1, [r5, #4]
 801c400:	aa1a      	add	r2, sp, #104	; 0x68
 801c402:	c203      	stmia	r2!, {r0, r1}
 801c404:	6818      	ldr	r0, [r3, #0]
 801c406:	6859      	ldr	r1, [r3, #4]
 801c408:	aa1c      	add	r2, sp, #112	; 0x70
 801c40a:	c203      	stmia	r2!, {r0, r1}
 801c40c:	a81a      	add	r0, sp, #104	; 0x68
 801c40e:	f7f8 fd83 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c412:	4629      	mov	r1, r5
 801c414:	a81c      	add	r0, sp, #112	; 0x70
 801c416:	f7f8 fdc3 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c41a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c41e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c422:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c426:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c42a:	bfd7      	itett	le
 801c42c:	b29a      	uxthle	r2, r3
 801c42e:	2201      	movgt	r2, #1
 801c430:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c434:	fb91 f2f2 	sdivle	r2, r1, r2
 801c438:	9201      	str	r2, [sp, #4]
 801c43a:	9801      	ldr	r0, [sp, #4]
 801c43c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c440:	fb92 f0f0 	sdiv	r0, r2, r0
 801c444:	b280      	uxth	r0, r0
 801c446:	9010      	str	r0, [sp, #64]	; 0x40
 801c448:	9901      	ldr	r1, [sp, #4]
 801c44a:	9801      	ldr	r0, [sp, #4]
 801c44c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c44e:	440e      	add	r6, r1
 801c450:	fb05 2510 	mls	r5, r5, r0, r2
 801c454:	fb15 f503 	smulbb	r5, r5, r3
 801c458:	3e01      	subs	r6, #1
 801c45a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c45e:	fb96 f6f1 	sdiv	r6, r6, r1
 801c462:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c466:	440d      	add	r5, r1
 801c468:	4419      	add	r1, r3
 801c46a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c46e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c472:	441a      	add	r2, r3
 801c474:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c478:	9304      	str	r3, [sp, #16]
 801c47a:	4b96      	ldr	r3, [pc, #600]	; (801c6d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c47c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c480:	6818      	ldr	r0, [r3, #0]
 801c482:	6803      	ldr	r3, [r0, #0]
 801c484:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c486:	4798      	blx	r3
 801c488:	4b93      	ldr	r3, [pc, #588]	; (801c6d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c48a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c48e:	881a      	ldrh	r2, [r3, #0]
 801c490:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c494:	9318      	str	r3, [sp, #96]	; 0x60
 801c496:	fb02 c101 	mla	r1, r2, r1, ip
 801c49a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c49e:	4357      	muls	r7, r2
 801c4a0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c4a4:	3601      	adds	r6, #1
 801c4a6:	920b      	str	r2, [sp, #44]	; 0x2c
 801c4a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4aa:	4b8c      	ldr	r3, [pc, #560]	; (801c6dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c4ac:	b2b6      	uxth	r6, r6
 801c4ae:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c4b2:	1d32      	adds	r2, r6, #4
 801c4b4:	9206      	str	r2, [sp, #24]
 801c4b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c4b8:	43d2      	mvns	r2, r2
 801c4ba:	b2d2      	uxtb	r2, r2
 801c4bc:	b2ad      	uxth	r5, r5
 801c4be:	9215      	str	r2, [sp, #84]	; 0x54
 801c4c0:	9a04      	ldr	r2, [sp, #16]
 801c4c2:	2d00      	cmp	r5, #0
 801c4c4:	bf0c      	ite	eq
 801c4c6:	4611      	moveq	r1, r2
 801c4c8:	2100      	movne	r1, #0
 801c4ca:	2200      	movs	r2, #0
 801c4cc:	1b1b      	subs	r3, r3, r4
 801c4ce:	b289      	uxth	r1, r1
 801c4d0:	920d      	str	r2, [sp, #52]	; 0x34
 801c4d2:	9319      	str	r3, [sp, #100]	; 0x64
 801c4d4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c4d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c4d8:	fa12 f383 	uxtah	r3, r2, r3
 801c4dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4de:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c4e2:	3304      	adds	r3, #4
 801c4e4:	9307      	str	r3, [sp, #28]
 801c4e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c4e8:	455b      	cmp	r3, fp
 801c4ea:	f240 817c 	bls.w	801c7e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c4ee:	9a01      	ldr	r2, [sp, #4]
 801c4f0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c4f4:	fbb5 f3f3 	udiv	r3, r5, r3
 801c4f8:	1ad3      	subs	r3, r2, r3
 801c4fa:	b29b      	uxth	r3, r3
 801c4fc:	9316      	str	r3, [sp, #88]	; 0x58
 801c4fe:	9b07      	ldr	r3, [sp, #28]
 801c500:	9807      	ldr	r0, [sp, #28]
 801c502:	785a      	ldrb	r2, [r3, #1]
 801c504:	789b      	ldrb	r3, [r3, #2]
 801c506:	7800      	ldrb	r0, [r0, #0]
 801c508:	9011      	str	r0, [sp, #68]	; 0x44
 801c50a:	021b      	lsls	r3, r3, #8
 801c50c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c510:	9a07      	ldr	r2, [sp, #28]
 801c512:	78d2      	ldrb	r2, [r2, #3]
 801c514:	4313      	orrs	r3, r2
 801c516:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c518:	3001      	adds	r0, #1
 801c51a:	441a      	add	r2, r3
 801c51c:	9005      	str	r0, [sp, #20]
 801c51e:	1c50      	adds	r0, r2, #1
 801c520:	9003      	str	r0, [sp, #12]
 801c522:	7852      	ldrb	r2, [r2, #1]
 801c524:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c526:	0212      	lsls	r2, r2, #8
 801c528:	5cc3      	ldrb	r3, [r0, r3]
 801c52a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c52e:	431a      	orrs	r2, r3
 801c530:	b293      	uxth	r3, r2
 801c532:	930c      	str	r3, [sp, #48]	; 0x30
 801c534:	2300      	movs	r3, #0
 801c536:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c53a:	9308      	str	r3, [sp, #32]
 801c53c:	461a      	mov	r2, r3
 801c53e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c542:	930e      	str	r3, [sp, #56]	; 0x38
 801c544:	f04f 0801 	mov.w	r8, #1
 801c548:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c54c:	f8cd 8008 	str.w	r8, [sp, #8]
 801c550:	46c4      	mov	ip, r8
 801c552:	930f      	str	r3, [sp, #60]	; 0x3c
 801c554:	2d00      	cmp	r5, #0
 801c556:	d07c      	beq.n	801c652 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c558:	45ac      	cmp	ip, r5
 801c55a:	d26c      	bcs.n	801c636 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c55c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c55e:	eba5 050c 	sub.w	r5, r5, ip
 801c562:	455b      	cmp	r3, fp
 801c564:	b2ad      	uxth	r5, r5
 801c566:	4608      	mov	r0, r1
 801c568:	d802      	bhi.n	801c570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c56a:	e070      	b.n	801c64e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c56c:	2b00      	cmp	r3, #0
 801c56e:	d15c      	bne.n	801c62a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c570:	9b03      	ldr	r3, [sp, #12]
 801c572:	9a02      	ldr	r2, [sp, #8]
 801c574:	785b      	ldrb	r3, [r3, #1]
 801c576:	9902      	ldr	r1, [sp, #8]
 801c578:	f1c2 0207 	rsb	r2, r2, #7
 801c57c:	4093      	lsls	r3, r2
 801c57e:	005b      	lsls	r3, r3, #1
 801c580:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c584:	9b03      	ldr	r3, [sp, #12]
 801c586:	781b      	ldrb	r3, [r3, #0]
 801c588:	410b      	asrs	r3, r1
 801c58a:	3101      	adds	r1, #1
 801c58c:	b2c9      	uxtb	r1, r1
 801c58e:	2908      	cmp	r1, #8
 801c590:	9102      	str	r1, [sp, #8]
 801c592:	9903      	ldr	r1, [sp, #12]
 801c594:	bf0a      	itet	eq
 801c596:	3102      	addeq	r1, #2
 801c598:	3101      	addne	r1, #1
 801c59a:	9103      	streq	r1, [sp, #12]
 801c59c:	b2db      	uxtb	r3, r3
 801c59e:	bf0a      	itet	eq
 801c5a0:	2100      	moveq	r1, #0
 801c5a2:	9103      	strne	r1, [sp, #12]
 801c5a4:	9102      	streq	r1, [sp, #8]
 801c5a6:	4313      	orrs	r3, r2
 801c5a8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c5aa:	b29a      	uxth	r2, r3
 801c5ac:	4291      	cmp	r1, r2
 801c5ae:	d30a      	bcc.n	801c5c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c5b0:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c5b4:	2301      	movs	r3, #1
 801c5b6:	9905      	ldr	r1, [sp, #20]
 801c5b8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c5bc:	d30f      	bcc.n	801c5de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c5be:	2100      	movs	r1, #0
 801c5c0:	4698      	mov	r8, r3
 801c5c2:	9100      	str	r1, [sp, #0]
 801c5c4:	e032      	b.n	801c62c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c5c6:	9b05      	ldr	r3, [sp, #20]
 801c5c8:	429a      	cmp	r2, r3
 801c5ca:	d318      	bcc.n	801c5fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c5cc:	eb04 0308 	add.w	r3, r4, r8
 801c5d0:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c5d4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c5d8:	f108 0301 	add.w	r3, r8, #1
 801c5dc:	b29b      	uxth	r3, r3
 801c5de:	9905      	ldr	r1, [sp, #20]
 801c5e0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c5e4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c5e8:	710e      	strb	r6, [r1, #4]
 801c5ea:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c5ec:	80ce      	strh	r6, [r1, #6]
 801c5ee:	f108 0601 	add.w	r6, r8, #1
 801c5f2:	714e      	strb	r6, [r1, #5]
 801c5f4:	9905      	ldr	r1, [sp, #20]
 801c5f6:	3101      	adds	r1, #1
 801c5f8:	b289      	uxth	r1, r1
 801c5fa:	9105      	str	r1, [sp, #20]
 801c5fc:	e7df      	b.n	801c5be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c5fe:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c602:	4611      	mov	r1, r2
 801c604:	795b      	ldrb	r3, [r3, #5]
 801c606:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c60a:	4426      	add	r6, r4
 801c60c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c60e:	4437      	add	r7, r6
 801c610:	2f00      	cmp	r7, #0
 801c612:	dd06      	ble.n	801c622 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c614:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c618:	790f      	ldrb	r7, [r1, #4]
 801c61a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c61e:	88c9      	ldrh	r1, [r1, #6]
 801c620:	e7f4      	b.n	801c60c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c622:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c626:	b29b      	uxth	r3, r3
 801c628:	e7c5      	b.n	801c5b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c62a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c62c:	920c      	str	r2, [sp, #48]	; 0x30
 801c62e:	4601      	mov	r1, r0
 801c630:	9a00      	ldr	r2, [sp, #0]
 801c632:	469c      	mov	ip, r3
 801c634:	e78e      	b.n	801c554 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c636:	1957      	adds	r7, r2, r5
 801c638:	ebac 0305 	sub.w	r3, ip, r5
 801c63c:	b2ba      	uxth	r2, r7
 801c63e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c642:	9200      	str	r2, [sp, #0]
 801c644:	b29b      	uxth	r3, r3
 801c646:	2500      	movs	r5, #0
 801c648:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c64a:	455a      	cmp	r2, fp
 801c64c:	d88e      	bhi.n	801c56c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c64e:	4601      	mov	r1, r0
 801c650:	e749      	b.n	801c4e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c652:	458c      	cmp	ip, r1
 801c654:	bf2c      	ite	cs
 801c656:	4628      	movcs	r0, r5
 801c658:	462b      	movcc	r3, r5
 801c65a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c65c:	bf27      	ittee	cs
 801c65e:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c660:	ebac 0301 	subcs.w	r3, ip, r1
 801c664:	eba1 000c 	subcc.w	r0, r1, ip
 801c668:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c66c:	bf2c      	ite	cs
 801c66e:	b29b      	uxthcs	r3, r3
 801c670:	b280      	uxthcc	r0, r0
 801c672:	2dff      	cmp	r5, #255	; 0xff
 801c674:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c676:	eb02 0705 	add.w	r7, r2, r5
 801c67a:	b2bd      	uxth	r5, r7
 801c67c:	9500      	str	r5, [sp, #0]
 801c67e:	d12f      	bne.n	801c6e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c680:	465e      	mov	r6, fp
 801c682:	9d00      	ldr	r5, [sp, #0]
 801c684:	42aa      	cmp	r2, r5
 801c686:	f040 8084 	bne.w	801c792 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c68a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c68c:	458c      	cmp	ip, r1
 801c68e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c692:	d3d8      	bcc.n	801c646 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c694:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c696:	9904      	ldr	r1, [sp, #16]
 801c698:	8812      	ldrh	r2, [r2, #0]
 801c69a:	1a52      	subs	r2, r2, r1
 801c69c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c6a0:	9a08      	ldr	r2, [sp, #32]
 801c6a2:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c6a4:	3201      	adds	r2, #1
 801c6a6:	428a      	cmp	r2, r1
 801c6a8:	9208      	str	r2, [sp, #32]
 801c6aa:	f040 8092 	bne.w	801c7d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c6ae:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c6b2:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c6b6:	9b04      	ldr	r3, [sp, #16]
 801c6b8:	eba5 050c 	sub.w	r5, r5, ip
 801c6bc:	b2ad      	uxth	r5, r5
 801c6be:	2d00      	cmp	r5, #0
 801c6c0:	bf08      	it	eq
 801c6c2:	4619      	moveq	r1, r3
 801c6c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c6c6:	bf18      	it	ne
 801c6c8:	2100      	movne	r1, #0
 801c6ca:	3301      	adds	r3, #1
 801c6cc:	930d      	str	r3, [sp, #52]	; 0x34
 801c6ce:	b289      	uxth	r1, r1
 801c6d0:	e700      	b.n	801c4d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c6d2:	bf00      	nop
 801c6d4:	20012e74 	.word	0x20012e74
 801c6d8:	20012e6e 	.word	0x20012e6e
 801c6dc:	fffff7fb 	.word	0xfffff7fb
 801c6e0:	46d9      	mov	r9, fp
 801c6e2:	9d00      	ldr	r5, [sp, #0]
 801c6e4:	42aa      	cmp	r2, r5
 801c6e6:	d0d0      	beq.n	801c68a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c6e8:	1c55      	adds	r5, r2, #1
 801c6ea:	4422      	add	r2, r4
 801c6ec:	9517      	str	r5, [sp, #92]	; 0x5c
 801c6ee:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c6f2:	9a06      	ldr	r2, [sp, #24]
 801c6f4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c6f8:	4472      	add	r2, lr
 801c6fa:	9212      	str	r2, [sp, #72]	; 0x48
 801c6fc:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c6fe:	f8b9 2000 	ldrh.w	r2, [r9]
 801c702:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c706:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c708:	1216      	asrs	r6, r2, #8
 801c70a:	fb1a fa07 	smulbb	sl, sl, r7
 801c70e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c712:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c714:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c718:	fb06 a607 	mla	r6, r6, r7, sl
 801c71c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c71e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c722:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c724:	10d5      	asrs	r5, r2, #3
 801c726:	fb1a fa07 	smulbb	sl, sl, r7
 801c72a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c72e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c730:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c734:	fb05 a507 	mla	r5, r5, r7, sl
 801c738:	9f06      	ldr	r7, [sp, #24]
 801c73a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c73e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c740:	00d2      	lsls	r2, r2, #3
 801c742:	fb1e fe07 	smulbb	lr, lr, r7
 801c746:	b2d2      	uxtb	r2, r2
 801c748:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c74a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c74e:	b2b6      	uxth	r6, r6
 801c750:	fb02 e207 	mla	r2, r2, r7, lr
 801c754:	b292      	uxth	r2, r2
 801c756:	b2ad      	uxth	r5, r5
 801c758:	f106 0a01 	add.w	sl, r6, #1
 801c75c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c760:	f102 0e01 	add.w	lr, r2, #1
 801c764:	f105 0a01 	add.w	sl, r5, #1
 801c768:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c76c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c770:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c774:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c778:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c77c:	ea4e 0606 	orr.w	r6, lr, r6
 801c780:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c784:	ea46 060a 	orr.w	r6, r6, sl
 801c788:	f829 6b02 	strh.w	r6, [r9], #2
 801c78c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c790:	e7a7      	b.n	801c6e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c792:	f102 0e01 	add.w	lr, r2, #1
 801c796:	4422      	add	r2, r4
 801c798:	9f06      	ldr	r7, [sp, #24]
 801c79a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c79e:	9a06      	ldr	r2, [sp, #24]
 801c7a0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c7a4:	eb02 0a05 	add.w	sl, r2, r5
 801c7a8:	4a13      	ldr	r2, [pc, #76]	; (801c7f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c7aa:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c7ae:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c7b2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c7b6:	00d2      	lsls	r2, r2, #3
 801c7b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c7bc:	ea49 0202 	orr.w	r2, r9, r2
 801c7c0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c7c4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c7c8:	f826 2b02 	strh.w	r2, [r6], #2
 801c7cc:	fa1f f28e 	uxth.w	r2, lr
 801c7d0:	e757      	b.n	801c682 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c7d2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c7d6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c7da:	1a2d      	subs	r5, r5, r0
 801c7dc:	b2ad      	uxth	r5, r5
 801c7de:	2d00      	cmp	r5, #0
 801c7e0:	bf18      	it	ne
 801c7e2:	2000      	movne	r0, #0
 801c7e4:	e730      	b.n	801c648 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c7e6:	4b05      	ldr	r3, [pc, #20]	; (801c7fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c7e8:	6818      	ldr	r0, [r3, #0]
 801c7ea:	6803      	ldr	r3, [r0, #0]
 801c7ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c7ee:	4798      	blx	r3
 801c7f0:	b01f      	add	sp, #124	; 0x7c
 801c7f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7f6:	bf00      	nop
 801c7f8:	fffff800 	.word	0xfffff800
 801c7fc:	20012e74 	.word	0x20012e74

0801c800 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c804:	b091      	sub	sp, #68	; 0x44
 801c806:	469b      	mov	fp, r3
 801c808:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c80c:	4616      	mov	r6, r2
 801c80e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c812:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c816:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c81a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c81e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c822:	4604      	mov	r4, r0
 801c824:	460d      	mov	r5, r1
 801c826:	4640      	mov	r0, r8
 801c828:	4659      	mov	r1, fp
 801c82a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c82e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c832:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c836:	f7f3 fc11 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 801c83a:	4631      	mov	r1, r6
 801c83c:	4640      	mov	r0, r8
 801c83e:	f7f3 fc0d 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 801c842:	4b74      	ldr	r3, [pc, #464]	; (801ca14 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c844:	8818      	ldrh	r0, [r3, #0]
 801c846:	4b74      	ldr	r3, [pc, #464]	; (801ca18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c848:	8819      	ldrh	r1, [r3, #0]
 801c84a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c84e:	2b00      	cmp	r3, #0
 801c850:	b202      	sxth	r2, r0
 801c852:	b20e      	sxth	r6, r1
 801c854:	da07      	bge.n	801c866 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c856:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c85a:	4463      	add	r3, ip
 801c85c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c860:	2300      	movs	r3, #0
 801c862:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c866:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c86a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c86e:	1ad2      	subs	r2, r2, r3
 801c870:	4594      	cmp	ip, r2
 801c872:	bfc4      	itt	gt
 801c874:	1ac2      	subgt	r2, r0, r3
 801c876:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c87a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c87e:	2a00      	cmp	r2, #0
 801c880:	da07      	bge.n	801c892 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c882:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c886:	4462      	add	r2, ip
 801c888:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c88c:	2200      	movs	r2, #0
 801c88e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c892:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c896:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c89a:	eba6 060a 	sub.w	r6, r6, sl
 801c89e:	42b2      	cmp	r2, r6
 801c8a0:	bfc4      	itt	gt
 801c8a2:	eba1 020a 	subgt.w	r2, r1, sl
 801c8a6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c8aa:	4a5c      	ldr	r2, [pc, #368]	; (801ca1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c8ac:	7812      	ldrb	r2, [r2, #0]
 801c8ae:	b9a2      	cbnz	r2, 801c8da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c8b0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c8b4:	4286      	cmp	r6, r0
 801c8b6:	4640      	mov	r0, r8
 801c8b8:	9303      	str	r3, [sp, #12]
 801c8ba:	bf14      	ite	ne
 801c8bc:	2600      	movne	r6, #0
 801c8be:	2601      	moveq	r6, #1
 801c8c0:	f7f3 fc0f 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c8c4:	9b03      	ldr	r3, [sp, #12]
 801c8c6:	b160      	cbz	r0, 801c8e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c8c8:	2300      	movs	r3, #0
 801c8ca:	8023      	strh	r3, [r4, #0]
 801c8cc:	8063      	strh	r3, [r4, #2]
 801c8ce:	80a3      	strh	r3, [r4, #4]
 801c8d0:	4620      	mov	r0, r4
 801c8d2:	80e3      	strh	r3, [r4, #6]
 801c8d4:	b011      	add	sp, #68	; 0x44
 801c8d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c8da:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c8de:	428e      	cmp	r6, r1
 801c8e0:	e7e9      	b.n	801c8b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c8e2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c8e6:	9205      	str	r2, [sp, #20]
 801c8e8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c8ec:	9206      	str	r2, [sp, #24]
 801c8ee:	f8bb 2000 	ldrh.w	r2, [fp]
 801c8f2:	900e      	str	r0, [sp, #56]	; 0x38
 801c8f4:	1a9b      	subs	r3, r3, r2
 801c8f6:	b21b      	sxth	r3, r3
 801c8f8:	9303      	str	r3, [sp, #12]
 801c8fa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c8fe:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c902:	ebaa 0a03 	sub.w	sl, sl, r3
 801c906:	fa0f f38a 	sxth.w	r3, sl
 801c90a:	9304      	str	r3, [sp, #16]
 801c90c:	9b03      	ldr	r3, [sp, #12]
 801c90e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c912:	9b04      	ldr	r3, [sp, #16]
 801c914:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c918:	9b05      	ldr	r3, [sp, #20]
 801c91a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c91e:	a90e      	add	r1, sp, #56	; 0x38
 801c920:	9b06      	ldr	r3, [sp, #24]
 801c922:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c926:	a80c      	add	r0, sp, #48	; 0x30
 801c928:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c92c:	f7f8 fb38 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c930:	4640      	mov	r0, r8
 801c932:	f7f8 faf1 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c936:	a80e      	add	r0, sp, #56	; 0x38
 801c938:	f7f8 faee 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c93c:	4b38      	ldr	r3, [pc, #224]	; (801ca20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c93e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c942:	881b      	ldrh	r3, [r3, #0]
 801c944:	9307      	str	r3, [sp, #28]
 801c946:	682b      	ldr	r3, [r5, #0]
 801c948:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801ca24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c94c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c94e:	4628      	mov	r0, r5
 801c950:	4798      	blx	r3
 801c952:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c956:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c95a:	4681      	mov	r9, r0
 801c95c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c960:	f8db 0000 	ldr.w	r0, [fp]
 801c964:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c966:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c96a:	6803      	ldr	r3, [r0, #0]
 801c96c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c96e:	4798      	blx	r3
 801c970:	4607      	mov	r7, r0
 801c972:	f8db 0000 	ldr.w	r0, [fp]
 801c976:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c97a:	6803      	ldr	r3, [r0, #0]
 801c97c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c980:	9109      	str	r1, [sp, #36]	; 0x24
 801c982:	9208      	str	r2, [sp, #32]
 801c984:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c986:	4798      	blx	r3
 801c988:	f010 0f01 	tst.w	r0, #1
 801c98c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c990:	d012      	beq.n	801c9b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c992:	f8db 0000 	ldr.w	r0, [fp]
 801c996:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c99a:	6803      	ldr	r3, [r0, #0]
 801c99c:	9200      	str	r2, [sp, #0]
 801c99e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c9a0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c9a4:	462b      	mov	r3, r5
 801c9a6:	47b0      	blx	r6
 801c9a8:	9b03      	ldr	r3, [sp, #12]
 801c9aa:	8023      	strh	r3, [r4, #0]
 801c9ac:	9b04      	ldr	r3, [sp, #16]
 801c9ae:	8063      	strh	r3, [r4, #2]
 801c9b0:	9b05      	ldr	r3, [sp, #20]
 801c9b2:	80a3      	strh	r3, [r4, #4]
 801c9b4:	9b06      	ldr	r3, [sp, #24]
 801c9b6:	e78b      	b.n	801c8d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c9b8:	fb09 f202 	mul.w	r2, r9, r2
 801c9bc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c9c0:	440f      	add	r7, r1
 801c9c2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c9c6:	b166      	cbz	r6, 801c9e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c9c8:	9a07      	ldr	r2, [sp, #28]
 801c9ca:	4592      	cmp	sl, r2
 801c9cc:	d109      	bne.n	801c9e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c9ce:	f8db 0000 	ldr.w	r0, [fp]
 801c9d2:	6802      	ldr	r2, [r0, #0]
 801c9d4:	fb09 f303 	mul.w	r3, r9, r3
 801c9d8:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c9da:	4629      	mov	r1, r5
 801c9dc:	463a      	mov	r2, r7
 801c9de:	47b0      	blx	r6
 801c9e0:	e7e2      	b.n	801c9a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c9e2:	fb0a f303 	mul.w	r3, sl, r3
 801c9e6:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801ca24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c9ea:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c9ee:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c9f2:	4545      	cmp	r5, r8
 801c9f4:	d2d8      	bcs.n	801c9a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c9f6:	f8db 0000 	ldr.w	r0, [fp]
 801c9fa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c9fe:	6802      	ldr	r2, [r0, #0]
 801ca00:	4629      	mov	r1, r5
 801ca02:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801ca06:	005b      	lsls	r3, r3, #1
 801ca08:	463a      	mov	r2, r7
 801ca0a:	47d0      	blx	sl
 801ca0c:	444f      	add	r7, r9
 801ca0e:	4435      	add	r5, r6
 801ca10:	e7ef      	b.n	801c9f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801ca12:	bf00      	nop
 801ca14:	20012e68 	.word	0x20012e68
 801ca18:	20012e6a 	.word	0x20012e6a
 801ca1c:	20012e6c 	.word	0x20012e6c
 801ca20:	20012e6e 	.word	0x20012e6e
 801ca24:	20012e74 	.word	0x20012e74

0801ca28 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801ca28:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ca2a:	4606      	mov	r6, r0
 801ca2c:	b087      	sub	sp, #28
 801ca2e:	460c      	mov	r4, r1
 801ca30:	4617      	mov	r7, r2
 801ca32:	461d      	mov	r5, r3
 801ca34:	b333      	cbz	r3, 801ca84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ca36:	4608      	mov	r0, r1
 801ca38:	f7f3 fb53 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ca3c:	bb10      	cbnz	r0, 801ca84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ca3e:	6820      	ldr	r0, [r4, #0]
 801ca40:	6861      	ldr	r1, [r4, #4]
 801ca42:	4c1c      	ldr	r4, [pc, #112]	; (801cab4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801ca44:	ab04      	add	r3, sp, #16
 801ca46:	c303      	stmia	r3!, {r0, r1}
 801ca48:	a804      	add	r0, sp, #16
 801ca4a:	f7f8 fa65 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca4e:	6820      	ldr	r0, [r4, #0]
 801ca50:	6803      	ldr	r3, [r0, #0]
 801ca52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ca54:	4798      	blx	r3
 801ca56:	2dff      	cmp	r5, #255	; 0xff
 801ca58:	d016      	beq.n	801ca88 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801ca5a:	f010 0f08 	tst.w	r0, #8
 801ca5e:	6820      	ldr	r0, [r4, #0]
 801ca60:	d015      	beq.n	801ca8e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801ca62:	2400      	movs	r4, #0
 801ca64:	6801      	ldr	r1, [r0, #0]
 801ca66:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801ca6a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ca6e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801ca72:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801ca76:	9401      	str	r4, [sp, #4]
 801ca78:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801ca7c:	9400      	str	r4, [sp, #0]
 801ca7e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801ca80:	4639      	mov	r1, r7
 801ca82:	47a0      	blx	r4
 801ca84:	b007      	add	sp, #28
 801ca86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ca88:	f010 0f02 	tst.w	r0, #2
 801ca8c:	e7e7      	b.n	801ca5e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801ca8e:	6803      	ldr	r3, [r0, #0]
 801ca90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca92:	4798      	blx	r3
 801ca94:	4b08      	ldr	r3, [pc, #32]	; (801cab8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801ca96:	881a      	ldrh	r2, [r3, #0]
 801ca98:	6833      	ldr	r3, [r6, #0]
 801ca9a:	e9cd 7500 	strd	r7, r5, [sp]
 801ca9e:	4601      	mov	r1, r0
 801caa0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801caa2:	4630      	mov	r0, r6
 801caa4:	ab04      	add	r3, sp, #16
 801caa6:	47a8      	blx	r5
 801caa8:	6820      	ldr	r0, [r4, #0]
 801caaa:	6803      	ldr	r3, [r0, #0]
 801caac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801caae:	4798      	blx	r3
 801cab0:	e7e8      	b.n	801ca84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cab2:	bf00      	nop
 801cab4:	20012e74 	.word	0x20012e74
 801cab8:	20012e6e 	.word	0x20012e6e

0801cabc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801cabc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cac0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801cac4:	9e08      	ldr	r6, [sp, #32]
 801cac6:	4688      	mov	r8, r1
 801cac8:	4614      	mov	r4, r2
 801caca:	461d      	mov	r5, r3
 801cacc:	2f00      	cmp	r7, #0
 801cace:	f000 80a9 	beq.w	801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cad2:	4618      	mov	r0, r3
 801cad4:	f7f3 fb05 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cad8:	2800      	cmp	r0, #0
 801cada:	f040 80a3 	bne.w	801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cade:	f9b5 1000 	ldrsh.w	r1, [r5]
 801cae2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801cae6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801caea:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801caee:	fb04 1303 	mla	r3, r4, r3, r1
 801caf2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801caf6:	4365      	muls	r5, r4
 801caf8:	2fff      	cmp	r7, #255	; 0xff
 801cafa:	eba4 0200 	sub.w	r2, r4, r0
 801cafe:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801cb02:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801cb06:	d04a      	beq.n	801cb9e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801cb08:	b2bc      	uxth	r4, r7
 801cb0a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801cb0e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801cb12:	fa5f f788 	uxtb.w	r7, r8
 801cb16:	b2f3      	uxtb	r3, r6
 801cb18:	0040      	lsls	r0, r0, #1
 801cb1a:	fb0e fe04 	mul.w	lr, lr, r4
 801cb1e:	4367      	muls	r7, r4
 801cb20:	4363      	muls	r3, r4
 801cb22:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801cb26:	fa1f fc8c 	uxth.w	ip, ip
 801cb2a:	42a9      	cmp	r1, r5
 801cb2c:	d27a      	bcs.n	801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cb2e:	eb01 0900 	add.w	r9, r1, r0
 801cb32:	4549      	cmp	r1, r9
 801cb34:	d231      	bcs.n	801cb9a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801cb36:	880a      	ldrh	r2, [r1, #0]
 801cb38:	1214      	asrs	r4, r2, #8
 801cb3a:	10d6      	asrs	r6, r2, #3
 801cb3c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801cb40:	00d2      	lsls	r2, r2, #3
 801cb42:	b2d2      	uxtb	r2, r2
 801cb44:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801cb48:	fb14 f40c 	smulbb	r4, r4, ip
 801cb4c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cb50:	4474      	add	r4, lr
 801cb52:	fb12 f20c 	smulbb	r2, r2, ip
 801cb56:	b2a4      	uxth	r4, r4
 801cb58:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cb5c:	441a      	add	r2, r3
 801cb5e:	b292      	uxth	r2, r2
 801cb60:	f104 0a01 	add.w	sl, r4, #1
 801cb64:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801cb68:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801cb6c:	fb16 f60c 	smulbb	r6, r6, ip
 801cb70:	f102 0a01 	add.w	sl, r2, #1
 801cb74:	443e      	add	r6, r7
 801cb76:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801cb7a:	b2b6      	uxth	r6, r6
 801cb7c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801cb80:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cb84:	4322      	orrs	r2, r4
 801cb86:	1c74      	adds	r4, r6, #1
 801cb88:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801cb8c:	0976      	lsrs	r6, r6, #5
 801cb8e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cb92:	4332      	orrs	r2, r6
 801cb94:	f821 2b02 	strh.w	r2, [r1], #2
 801cb98:	e7cb      	b.n	801cb32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801cb9a:	4441      	add	r1, r8
 801cb9c:	e7c5      	b.n	801cb2a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801cb9e:	4f22      	ldr	r7, [pc, #136]	; (801cc28 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801cba0:	0973      	lsrs	r3, r6, #5
 801cba2:	ea08 0707 	and.w	r7, r8, r7
 801cba6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cbaa:	433b      	orrs	r3, r7
 801cbac:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801cbb0:	4333      	orrs	r3, r6
 801cbb2:	07e7      	lsls	r7, r4, #31
 801cbb4:	b29b      	uxth	r3, r3
 801cbb6:	d50b      	bpl.n	801cbd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801cbb8:	0040      	lsls	r0, r0, #1
 801cbba:	0052      	lsls	r2, r2, #1
 801cbbc:	42a9      	cmp	r1, r5
 801cbbe:	d231      	bcs.n	801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cbc0:	180c      	adds	r4, r1, r0
 801cbc2:	42a1      	cmp	r1, r4
 801cbc4:	d202      	bcs.n	801cbcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801cbc6:	f821 3b02 	strh.w	r3, [r1], #2
 801cbca:	e7fa      	b.n	801cbc2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801cbcc:	4411      	add	r1, r2
 801cbce:	e7f5      	b.n	801cbbc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801cbd0:	078e      	lsls	r6, r1, #30
 801cbd2:	d008      	beq.n	801cbe6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801cbd4:	0066      	lsls	r6, r4, #1
 801cbd6:	460a      	mov	r2, r1
 801cbd8:	42aa      	cmp	r2, r5
 801cbda:	d202      	bcs.n	801cbe2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801cbdc:	8013      	strh	r3, [r2, #0]
 801cbde:	4432      	add	r2, r6
 801cbe0:	e7fa      	b.n	801cbd8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801cbe2:	3102      	adds	r1, #2
 801cbe4:	3801      	subs	r0, #1
 801cbe6:	07c2      	lsls	r2, r0, #31
 801cbe8:	d50b      	bpl.n	801cc02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801cbea:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801cbee:	3a01      	subs	r2, #1
 801cbf0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801cbf4:	0066      	lsls	r6, r4, #1
 801cbf6:	42aa      	cmp	r2, r5
 801cbf8:	d202      	bcs.n	801cc00 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801cbfa:	8013      	strh	r3, [r2, #0]
 801cbfc:	4432      	add	r2, r6
 801cbfe:	e7fa      	b.n	801cbf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801cc00:	3801      	subs	r0, #1
 801cc02:	b178      	cbz	r0, 801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cc04:	1040      	asrs	r0, r0, #1
 801cc06:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801cc0a:	0080      	lsls	r0, r0, #2
 801cc0c:	0064      	lsls	r4, r4, #1
 801cc0e:	42a9      	cmp	r1, r5
 801cc10:	d208      	bcs.n	801cc24 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cc12:	180e      	adds	r6, r1, r0
 801cc14:	460a      	mov	r2, r1
 801cc16:	42b2      	cmp	r2, r6
 801cc18:	d202      	bcs.n	801cc20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801cc1a:	f842 3b04 	str.w	r3, [r2], #4
 801cc1e:	e7fa      	b.n	801cc16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801cc20:	4421      	add	r1, r4
 801cc22:	e7f4      	b.n	801cc0e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801cc24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cc28:	00fff800 	.word	0x00fff800

0801cc2c <_ZN8touchgfx8LCD16bppC1Ev>:
 801cc2c:	2200      	movs	r2, #0
 801cc2e:	4912      	ldr	r1, [pc, #72]	; (801cc78 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801cc30:	6042      	str	r2, [r0, #4]
 801cc32:	6001      	str	r1, [r0, #0]
 801cc34:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801cc38:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801cc3c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801cc40:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801cc44:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801cc48:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801cc4c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801cc50:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801cc54:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801cc58:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801cc5c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801cc60:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801cc64:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801cc68:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801cc6c:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801cc70:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801cc74:	4770      	bx	lr
 801cc76:	bf00      	nop
 801cc78:	0802e760 	.word	0x0802e760

0801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801cc7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc80:	460d      	mov	r5, r1
 801cc82:	b08d      	sub	sp, #52	; 0x34
 801cc84:	4604      	mov	r4, r0
 801cc86:	6808      	ldr	r0, [r1, #0]
 801cc88:	6849      	ldr	r1, [r1, #4]
 801cc8a:	4699      	mov	r9, r3
 801cc8c:	ab08      	add	r3, sp, #32
 801cc8e:	c303      	stmia	r3!, {r0, r1}
 801cc90:	6810      	ldr	r0, [r2, #0]
 801cc92:	6851      	ldr	r1, [r2, #4]
 801cc94:	ab0a      	add	r3, sp, #40	; 0x28
 801cc96:	c303      	stmia	r3!, {r0, r1}
 801cc98:	a808      	add	r0, sp, #32
 801cc9a:	f7f8 f93d 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc9e:	4629      	mov	r1, r5
 801cca0:	a80a      	add	r0, sp, #40	; 0x28
 801cca2:	f7f8 f97d 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cca6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801ccaa:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801ccae:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801ccb2:	4d63      	ldr	r5, [pc, #396]	; (801ce40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ccb4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801ccb8:	6828      	ldr	r0, [r5, #0]
 801ccba:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801ccbe:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ccc2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ccc6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801ccca:	440a      	add	r2, r1
 801cccc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801ccd0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801ccd4:	4413      	add	r3, r2
 801ccd6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ccda:	6803      	ldr	r3, [r0, #0]
 801ccdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ccde:	4798      	blx	r3
 801cce0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cce4:	d119      	bne.n	801cd1a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801cce6:	f010 0f20 	tst.w	r0, #32
 801ccea:	6828      	ldr	r0, [r5, #0]
 801ccec:	d018      	beq.n	801cd20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801ccee:	2500      	movs	r5, #0
 801ccf0:	6801      	ldr	r1, [r0, #0]
 801ccf2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ccf6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801ccfa:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ccfe:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801cd02:	9502      	str	r5, [sp, #8]
 801cd04:	b2b6      	uxth	r6, r6
 801cd06:	fa1f f588 	uxth.w	r5, r8
 801cd0a:	9601      	str	r6, [sp, #4]
 801cd0c:	9500      	str	r5, [sp, #0]
 801cd0e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801cd10:	4621      	mov	r1, r4
 801cd12:	47a8      	blx	r5
 801cd14:	b00d      	add	sp, #52	; 0x34
 801cd16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd1a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801cd1e:	e7e4      	b.n	801ccea <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801cd20:	6803      	ldr	r3, [r0, #0]
 801cd22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd24:	4798      	blx	r3
 801cd26:	4947      	ldr	r1, [pc, #284]	; (801ce44 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801cd28:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cd2c:	880b      	ldrh	r3, [r1, #0]
 801cd2e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801cd32:	fb03 5202 	mla	r2, r3, r2, r5
 801cd36:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cd3a:	4373      	muls	r3, r6
 801cd3c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cd40:	9307      	str	r3, [sp, #28]
 801cd42:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801cd46:	9306      	str	r3, [sp, #24]
 801cd48:	468a      	mov	sl, r1
 801cd4a:	9b07      	ldr	r3, [sp, #28]
 801cd4c:	4298      	cmp	r0, r3
 801cd4e:	d270      	bcs.n	801ce32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801cd50:	9b06      	ldr	r3, [sp, #24]
 801cd52:	4621      	mov	r1, r4
 801cd54:	eb00 0b03 	add.w	fp, r0, r3
 801cd58:	4558      	cmp	r0, fp
 801cd5a:	d25d      	bcs.n	801ce18 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801cd5c:	f851 4b04 	ldr.w	r4, [r1], #4
 801cd60:	0e23      	lsrs	r3, r4, #24
 801cd62:	d014      	beq.n	801cd8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cd64:	2bff      	cmp	r3, #255	; 0xff
 801cd66:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801cd6a:	d112      	bne.n	801cd92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cd6c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cd70:	d10f      	bne.n	801cd92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cd72:	0963      	lsrs	r3, r4, #5
 801cd74:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801cd78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cd7c:	f02c 0c07 	bic.w	ip, ip, #7
 801cd80:	ea43 0c0c 	orr.w	ip, r3, ip
 801cd84:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801cd88:	ea4c 0404 	orr.w	r4, ip, r4
 801cd8c:	8004      	strh	r4, [r0, #0]
 801cd8e:	3002      	adds	r0, #2
 801cd90:	e7e2      	b.n	801cd58 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801cd92:	fb09 f303 	mul.w	r3, r9, r3
 801cd96:	8807      	ldrh	r7, [r0, #0]
 801cd98:	1c5a      	adds	r2, r3, #1
 801cd9a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801cd9e:	1212      	asrs	r2, r2, #8
 801cda0:	123e      	asrs	r6, r7, #8
 801cda2:	b293      	uxth	r3, r2
 801cda4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801cda8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cdac:	43d2      	mvns	r2, r2
 801cdae:	b2d2      	uxtb	r2, r2
 801cdb0:	10fd      	asrs	r5, r7, #3
 801cdb2:	fb1e fe03 	smulbb	lr, lr, r3
 801cdb6:	00ff      	lsls	r7, r7, #3
 801cdb8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cdbc:	fb06 e602 	mla	r6, r6, r2, lr
 801cdc0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cdc4:	b2ff      	uxtb	r7, r7
 801cdc6:	fa5f fc8c 	uxtb.w	ip, ip
 801cdca:	b2e4      	uxtb	r4, r4
 801cdcc:	b2b6      	uxth	r6, r6
 801cdce:	fb1c fc03 	smulbb	ip, ip, r3
 801cdd2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cdd6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801cdda:	fb14 f403 	smulbb	r4, r4, r3
 801cdde:	fb05 c502 	mla	r5, r5, r2, ip
 801cde2:	f106 0e01 	add.w	lr, r6, #1
 801cde6:	fb07 4702 	mla	r7, r7, r2, r4
 801cdea:	b2ad      	uxth	r5, r5
 801cdec:	b2bf      	uxth	r7, r7
 801cdee:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801cdf2:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801cdf6:	f105 0c01 	add.w	ip, r5, #1
 801cdfa:	1c7e      	adds	r6, r7, #1
 801cdfc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ce00:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ce04:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ce08:	096d      	lsrs	r5, r5, #5
 801ce0a:	ea46 060e 	orr.w	r6, r6, lr
 801ce0e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce12:	432e      	orrs	r6, r5
 801ce14:	8006      	strh	r6, [r0, #0]
 801ce16:	e7ba      	b.n	801cd8e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ce18:	f8ba 3000 	ldrh.w	r3, [sl]
 801ce1c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ce20:	eba3 0308 	sub.w	r3, r3, r8
 801ce24:	eba4 0408 	sub.w	r4, r4, r8
 801ce28:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce2c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ce30:	e78b      	b.n	801cd4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ce32:	4b03      	ldr	r3, [pc, #12]	; (801ce40 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ce34:	6818      	ldr	r0, [r3, #0]
 801ce36:	6803      	ldr	r3, [r0, #0]
 801ce38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce3a:	4798      	blx	r3
 801ce3c:	e76a      	b.n	801cd14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ce3e:	bf00      	nop
 801ce40:	20012e74 	.word	0x20012e74
 801ce44:	20012e6e 	.word	0x20012e6e

0801ce48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ce48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ce4c:	460c      	mov	r4, r1
 801ce4e:	b085      	sub	sp, #20
 801ce50:	6810      	ldr	r0, [r2, #0]
 801ce52:	6851      	ldr	r1, [r2, #4]
 801ce54:	466d      	mov	r5, sp
 801ce56:	c503      	stmia	r5!, {r0, r1}
 801ce58:	6818      	ldr	r0, [r3, #0]
 801ce5a:	6859      	ldr	r1, [r3, #4]
 801ce5c:	4616      	mov	r6, r2
 801ce5e:	c503      	stmia	r5!, {r0, r1}
 801ce60:	4668      	mov	r0, sp
 801ce62:	f7f8 f859 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce66:	4631      	mov	r1, r6
 801ce68:	a802      	add	r0, sp, #8
 801ce6a:	f7f8 f899 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce6e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ce72:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ce76:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ce7a:	4d28      	ldr	r5, [pc, #160]	; (801cf1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ce7c:	4e28      	ldr	r6, [pc, #160]	; (801cf20 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ce7e:	6828      	ldr	r0, [r5, #0]
 801ce80:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ce84:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ce88:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ce8c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ce90:	f8bd 1000 	ldrh.w	r1, [sp]
 801ce94:	440a      	add	r2, r1
 801ce96:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ce9a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ce9e:	4413      	add	r3, r2
 801cea0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cea4:	6803      	ldr	r3, [r0, #0]
 801cea6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cea8:	4798      	blx	r3
 801ceaa:	8833      	ldrh	r3, [r6, #0]
 801ceac:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801ceb0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ceb4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cf24 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801ceb8:	fb03 1202 	mla	r2, r3, r2, r1
 801cebc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cec0:	fb08 f303 	mul.w	r3, r8, r3
 801cec4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cec8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cecc:	4298      	cmp	r0, r3
 801cece:	d21d      	bcs.n	801cf0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801ced0:	eb00 080c 	add.w	r8, r0, ip
 801ced4:	4540      	cmp	r0, r8
 801ced6:	d20f      	bcs.n	801cef8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801ced8:	f854 1b04 	ldr.w	r1, [r4], #4
 801cedc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cee0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cee4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cee8:	ea42 0209 	orr.w	r2, r2, r9
 801ceec:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cef0:	430a      	orrs	r2, r1
 801cef2:	f820 2b02 	strh.w	r2, [r0], #2
 801cef6:	e7ed      	b.n	801ced4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cef8:	8832      	ldrh	r2, [r6, #0]
 801cefa:	1bd2      	subs	r2, r2, r7
 801cefc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf00:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cf04:	1bd2      	subs	r2, r2, r7
 801cf06:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cf0a:	e7df      	b.n	801cecc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cf0c:	6828      	ldr	r0, [r5, #0]
 801cf0e:	6803      	ldr	r3, [r0, #0]
 801cf10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf12:	4798      	blx	r3
 801cf14:	b005      	add	sp, #20
 801cf16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cf1a:	bf00      	nop
 801cf1c:	20012e74 	.word	0x20012e74
 801cf20:	20012e6e 	.word	0x20012e6e
 801cf24:	fffff800 	.word	0xfffff800

0801cf28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cf28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cf2c:	460e      	mov	r6, r1
 801cf2e:	b08e      	sub	sp, #56	; 0x38
 801cf30:	4604      	mov	r4, r0
 801cf32:	6808      	ldr	r0, [r1, #0]
 801cf34:	6849      	ldr	r1, [r1, #4]
 801cf36:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d110 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cf3a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801d114 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cf3e:	461d      	mov	r5, r3
 801cf40:	ab0a      	add	r3, sp, #40	; 0x28
 801cf42:	c303      	stmia	r3!, {r0, r1}
 801cf44:	6810      	ldr	r0, [r2, #0]
 801cf46:	6851      	ldr	r1, [r2, #4]
 801cf48:	ab0c      	add	r3, sp, #48	; 0x30
 801cf4a:	c303      	stmia	r3!, {r0, r1}
 801cf4c:	a80a      	add	r0, sp, #40	; 0x28
 801cf4e:	f7f7 ffe3 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf52:	4631      	mov	r1, r6
 801cf54:	a80c      	add	r0, sp, #48	; 0x30
 801cf56:	f7f8 f823 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf5a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801cf5e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801cf62:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cf66:	f8d8 0000 	ldr.w	r0, [r8]
 801cf6a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801cf6e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cf72:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cf76:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cf7a:	440c      	add	r4, r1
 801cf7c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801cf80:	440a      	add	r2, r1
 801cf82:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cf86:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801cf8a:	4413      	add	r3, r2
 801cf8c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cf90:	6803      	ldr	r3, [r0, #0]
 801cf92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cf94:	4798      	blx	r3
 801cf96:	2dff      	cmp	r5, #255	; 0xff
 801cf98:	d124      	bne.n	801cfe4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801cf9a:	f010 0f01 	tst.w	r0, #1
 801cf9e:	f8d8 0000 	ldr.w	r0, [r8]
 801cfa2:	d022      	beq.n	801cfea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801cfa4:	2100      	movs	r1, #0
 801cfa6:	f8d0 c000 	ldr.w	ip, [r0]
 801cfaa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801cfae:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801cfb2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801cfb6:	f04f 0e01 	mov.w	lr, #1
 801cfba:	f8cd e018 	str.w	lr, [sp, #24]
 801cfbe:	f8b9 e000 	ldrh.w	lr, [r9]
 801cfc2:	9503      	str	r5, [sp, #12]
 801cfc4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801cfc8:	b2b6      	uxth	r6, r6
 801cfca:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cfce:	9102      	str	r1, [sp, #8]
 801cfd0:	b2bf      	uxth	r7, r7
 801cfd2:	9601      	str	r6, [sp, #4]
 801cfd4:	9700      	str	r7, [sp, #0]
 801cfd6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801cfda:	4621      	mov	r1, r4
 801cfdc:	47a8      	blx	r5
 801cfde:	b00e      	add	sp, #56	; 0x38
 801cfe0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cfe4:	f010 0f04 	tst.w	r0, #4
 801cfe8:	e7d9      	b.n	801cf9e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801cfea:	6803      	ldr	r3, [r0, #0]
 801cfec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cfee:	4798      	blx	r3
 801cff0:	f8b9 3000 	ldrh.w	r3, [r9]
 801cff4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cff8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801cffc:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d000:	fb03 1202 	mla	r2, r3, r2, r1
 801d004:	ebac 0c07 	sub.w	ip, ip, r7
 801d008:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d00c:	435e      	muls	r6, r3
 801d00e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d012:	2dff      	cmp	r5, #255	; 0xff
 801d014:	eba3 0707 	sub.w	r7, r3, r7
 801d018:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d01c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d020:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d024:	d049      	beq.n	801d0ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d026:	43eb      	mvns	r3, r5
 801d028:	fa1f f985 	uxth.w	r9, r5
 801d02c:	b2db      	uxtb	r3, r3
 801d02e:	42b0      	cmp	r0, r6
 801d030:	d266      	bcs.n	801d100 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d032:	eb00 0a0e 	add.w	sl, r0, lr
 801d036:	4550      	cmp	r0, sl
 801d038:	4621      	mov	r1, r4
 801d03a:	f104 0403 	add.w	r4, r4, #3
 801d03e:	d25b      	bcs.n	801d0f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d040:	8802      	ldrh	r2, [r0, #0]
 801d042:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d046:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d04a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d04e:	fb11 f109 	smulbb	r1, r1, r9
 801d052:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d056:	10d5      	asrs	r5, r2, #3
 801d058:	fb08 1803 	mla	r8, r8, r3, r1
 801d05c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d060:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d064:	fb11 f109 	smulbb	r1, r1, r9
 801d068:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d06c:	fb05 1503 	mla	r5, r5, r3, r1
 801d070:	00d2      	lsls	r2, r2, #3
 801d072:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d076:	b2d2      	uxtb	r2, r2
 801d078:	fb11 f109 	smulbb	r1, r1, r9
 801d07c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d080:	fa1f f888 	uxth.w	r8, r8
 801d084:	fb02 1203 	mla	r2, r2, r3, r1
 801d088:	b292      	uxth	r2, r2
 801d08a:	f108 0101 	add.w	r1, r8, #1
 801d08e:	b2ad      	uxth	r5, r5
 801d090:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d094:	1c51      	adds	r1, r2, #1
 801d096:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d09a:	1c69      	adds	r1, r5, #1
 801d09c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d0a0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d0a4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d0a8:	096d      	lsrs	r5, r5, #5
 801d0aa:	ea42 0208 	orr.w	r2, r2, r8
 801d0ae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d0b2:	432a      	orrs	r2, r5
 801d0b4:	f820 2b02 	strh.w	r2, [r0], #2
 801d0b8:	e7bd      	b.n	801d036 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d0ba:	4a14      	ldr	r2, [pc, #80]	; (801d10c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d0bc:	42b0      	cmp	r0, r6
 801d0be:	d21f      	bcs.n	801d100 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d0c0:	eb00 050e 	add.w	r5, r0, lr
 801d0c4:	42a8      	cmp	r0, r5
 801d0c6:	4621      	mov	r1, r4
 801d0c8:	f104 0403 	add.w	r4, r4, #3
 801d0cc:	d210      	bcs.n	801d0f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d0ce:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d0d2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d0d6:	00db      	lsls	r3, r3, #3
 801d0d8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d0dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d0e0:	430b      	orrs	r3, r1
 801d0e2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d0e6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d0ea:	f820 3b02 	strh.w	r3, [r0], #2
 801d0ee:	e7e9      	b.n	801d0c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d0f0:	4438      	add	r0, r7
 801d0f2:	eb01 040c 	add.w	r4, r1, ip
 801d0f6:	e7e1      	b.n	801d0bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d0f8:	4438      	add	r0, r7
 801d0fa:	eb01 040c 	add.w	r4, r1, ip
 801d0fe:	e796      	b.n	801d02e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d100:	4b03      	ldr	r3, [pc, #12]	; (801d110 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d102:	6818      	ldr	r0, [r3, #0]
 801d104:	6803      	ldr	r3, [r0, #0]
 801d106:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d108:	4798      	blx	r3
 801d10a:	e768      	b.n	801cfde <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d10c:	fffff800 	.word	0xfffff800
 801d110:	20012e74 	.word	0x20012e74
 801d114:	20012e6e 	.word	0x20012e6e

0801d118 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d118:	b4f0      	push	{r4, r5, r6, r7}
 801d11a:	4616      	mov	r6, r2
 801d11c:	2e01      	cmp	r6, #1
 801d11e:	461c      	mov	r4, r3
 801d120:	460d      	mov	r5, r1
 801d122:	9a04      	ldr	r2, [sp, #16]
 801d124:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d128:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801d12c:	d012      	beq.n	801d154 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801d12e:	d303      	bcc.n	801d138 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801d130:	2e02      	cmp	r6, #2
 801d132:	d00a      	beq.n	801d14a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801d134:	bcf0      	pop	{r4, r5, r6, r7}
 801d136:	4770      	bx	lr
 801d138:	6805      	ldr	r5, [r0, #0]
 801d13a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d13e:	68ed      	ldr	r5, [r5, #12]
 801d140:	4613      	mov	r3, r2
 801d142:	46ac      	mov	ip, r5
 801d144:	4622      	mov	r2, r4
 801d146:	bcf0      	pop	{r4, r5, r6, r7}
 801d148:	4760      	bx	ip
 801d14a:	4621      	mov	r1, r4
 801d14c:	4628      	mov	r0, r5
 801d14e:	bcf0      	pop	{r4, r5, r6, r7}
 801d150:	f7ff bd94 	b.w	801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d154:	4621      	mov	r1, r4
 801d156:	4628      	mov	r0, r5
 801d158:	bcf0      	pop	{r4, r5, r6, r7}
 801d15a:	f7ff bee5 	b.w	801cf28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d160 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d164:	4681      	mov	r9, r0
 801d166:	b093      	sub	sp, #76	; 0x4c
 801d168:	6810      	ldr	r0, [r2, #0]
 801d16a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801d16e:	4f6d      	ldr	r7, [pc, #436]	; (801d324 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d170:	4688      	mov	r8, r1
 801d172:	6851      	ldr	r1, [r2, #4]
 801d174:	ac0e      	add	r4, sp, #56	; 0x38
 801d176:	c403      	stmia	r4!, {r0, r1}
 801d178:	6818      	ldr	r0, [r3, #0]
 801d17a:	6859      	ldr	r1, [r3, #4]
 801d17c:	ac10      	add	r4, sp, #64	; 0x40
 801d17e:	4616      	mov	r6, r2
 801d180:	c403      	stmia	r4!, {r0, r1}
 801d182:	a80e      	add	r0, sp, #56	; 0x38
 801d184:	f7f7 fec8 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d188:	4631      	mov	r1, r6
 801d18a:	a810      	add	r0, sp, #64	; 0x40
 801d18c:	f7f7 ff08 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d190:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801d194:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801d198:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d19c:	4e62      	ldr	r6, [pc, #392]	; (801d328 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d19e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801d1a2:	6830      	ldr	r0, [r6, #0]
 801d1a4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801d1a8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d1ac:	4489      	add	r9, r1
 801d1ae:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801d1b2:	440a      	add	r2, r1
 801d1b4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801d1b8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d1bc:	4413      	add	r3, r2
 801d1be:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801d1c2:	6803      	ldr	r3, [r0, #0]
 801d1c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d1c6:	4798      	blx	r3
 801d1c8:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d1cc:	6830      	ldr	r0, [r6, #0]
 801d1ce:	d01d      	beq.n	801d20c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d1d0:	2200      	movs	r2, #0
 801d1d2:	6801      	ldr	r1, [r0, #0]
 801d1d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801d1d8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d1dc:	220b      	movs	r2, #11
 801d1de:	9207      	str	r2, [sp, #28]
 801d1e0:	883a      	ldrh	r2, [r7, #0]
 801d1e2:	9206      	str	r2, [sp, #24]
 801d1e4:	2201      	movs	r2, #1
 801d1e6:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d1ea:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801d1ee:	9203      	str	r2, [sp, #12]
 801d1f0:	b2a4      	uxth	r4, r4
 801d1f2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801d1f6:	9200      	str	r2, [sp, #0]
 801d1f8:	b2ad      	uxth	r5, r5
 801d1fa:	9502      	str	r5, [sp, #8]
 801d1fc:	9401      	str	r4, [sp, #4]
 801d1fe:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801d200:	4642      	mov	r2, r8
 801d202:	4649      	mov	r1, r9
 801d204:	47a0      	blx	r4
 801d206:	b013      	add	sp, #76	; 0x4c
 801d208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d20c:	6803      	ldr	r3, [r0, #0]
 801d20e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d210:	4798      	blx	r3
 801d212:	883b      	ldrh	r3, [r7, #0]
 801d214:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d218:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801d21c:	fb03 1202 	mla	r2, r3, r2, r1
 801d220:	435d      	muls	r5, r3
 801d222:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d226:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d22a:	920c      	str	r2, [sp, #48]	; 0x30
 801d22c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801d230:	1b12      	subs	r2, r2, r4
 801d232:	920d      	str	r2, [sp, #52]	; 0x34
 801d234:	0062      	lsls	r2, r4, #1
 801d236:	1b1c      	subs	r4, r3, r4
 801d238:	0063      	lsls	r3, r4, #1
 801d23a:	920a      	str	r2, [sp, #40]	; 0x28
 801d23c:	930b      	str	r3, [sp, #44]	; 0x2c
 801d23e:	f04f 0e04 	mov.w	lr, #4
 801d242:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d244:	4298      	cmp	r0, r3
 801d246:	d266      	bcs.n	801d316 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d248:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d24a:	eb00 0b03 	add.w	fp, r0, r3
 801d24e:	4558      	cmp	r0, fp
 801d250:	d25c      	bcs.n	801d30c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d252:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d256:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d25a:	f858 2003 	ldr.w	r2, [r8, r3]
 801d25e:	0e11      	lsrs	r1, r2, #24
 801d260:	d012      	beq.n	801d288 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d262:	29ff      	cmp	r1, #255	; 0xff
 801d264:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d268:	d110      	bne.n	801d28c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d26a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d26e:	d10d      	bne.n	801d28c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d270:	0953      	lsrs	r3, r2, #5
 801d272:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d276:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d27a:	f027 0707 	bic.w	r7, r7, #7
 801d27e:	431f      	orrs	r7, r3
 801d280:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d284:	433a      	orrs	r2, r7
 801d286:	8002      	strh	r2, [r0, #0]
 801d288:	3002      	adds	r0, #2
 801d28a:	e7e0      	b.n	801d24e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d28c:	fb0a f101 	mul.w	r1, sl, r1
 801d290:	8806      	ldrh	r6, [r0, #0]
 801d292:	1c4b      	adds	r3, r1, #1
 801d294:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d298:	1235      	asrs	r5, r6, #8
 801d29a:	10f4      	asrs	r4, r6, #3
 801d29c:	121b      	asrs	r3, r3, #8
 801d29e:	00f6      	lsls	r6, r6, #3
 801d2a0:	b299      	uxth	r1, r3
 801d2a2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d2a6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d2aa:	b2f6      	uxtb	r6, r6
 801d2ac:	43db      	mvns	r3, r3
 801d2ae:	b2d2      	uxtb	r2, r2
 801d2b0:	b2db      	uxtb	r3, r3
 801d2b2:	fb1c fc01 	smulbb	ip, ip, r1
 801d2b6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d2ba:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d2be:	fb12 f201 	smulbb	r2, r2, r1
 801d2c2:	fb05 c503 	mla	r5, r5, r3, ip
 801d2c6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d2ca:	b2ff      	uxtb	r7, r7
 801d2cc:	fb06 2203 	mla	r2, r6, r3, r2
 801d2d0:	b2ad      	uxth	r5, r5
 801d2d2:	fb17 f701 	smulbb	r7, r7, r1
 801d2d6:	b292      	uxth	r2, r2
 801d2d8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d2dc:	fb04 7403 	mla	r4, r4, r3, r7
 801d2e0:	f105 0c01 	add.w	ip, r5, #1
 801d2e4:	1c57      	adds	r7, r2, #1
 801d2e6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d2ea:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d2ee:	b2a4      	uxth	r4, r4
 801d2f0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d2f4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d2f8:	433d      	orrs	r5, r7
 801d2fa:	1c67      	adds	r7, r4, #1
 801d2fc:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d300:	0964      	lsrs	r4, r4, #5
 801d302:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d306:	4325      	orrs	r5, r4
 801d308:	8005      	strh	r5, [r0, #0]
 801d30a:	e7bd      	b.n	801d288 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d30c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d30e:	4418      	add	r0, r3
 801d310:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d312:	4499      	add	r9, r3
 801d314:	e795      	b.n	801d242 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d316:	4b04      	ldr	r3, [pc, #16]	; (801d328 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d318:	6818      	ldr	r0, [r3, #0]
 801d31a:	6803      	ldr	r3, [r0, #0]
 801d31c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d31e:	4798      	blx	r3
 801d320:	e771      	b.n	801d206 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d322:	bf00      	nop
 801d324:	20012e6e 	.word	0x20012e6e
 801d328:	20012e74 	.word	0x20012e74

0801d32c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d32c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d330:	b087      	sub	sp, #28
 801d332:	4680      	mov	r8, r0
 801d334:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d338:	460d      	mov	r5, r1
 801d33a:	4614      	mov	r4, r2
 801d33c:	2e00      	cmp	r6, #0
 801d33e:	f000 80b9 	beq.w	801d4b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d342:	6810      	ldr	r0, [r2, #0]
 801d344:	6851      	ldr	r1, [r2, #4]
 801d346:	af02      	add	r7, sp, #8
 801d348:	c703      	stmia	r7!, {r0, r1}
 801d34a:	6818      	ldr	r0, [r3, #0]
 801d34c:	6859      	ldr	r1, [r3, #4]
 801d34e:	af04      	add	r7, sp, #16
 801d350:	c703      	stmia	r7!, {r0, r1}
 801d352:	a802      	add	r0, sp, #8
 801d354:	f7f7 fde0 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d358:	4621      	mov	r1, r4
 801d35a:	a804      	add	r0, sp, #16
 801d35c:	f7f7 fe20 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d360:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d364:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d368:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d36c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d370:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d374:	eb08 0401 	add.w	r4, r8, r1
 801d378:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d37c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d380:	440a      	add	r2, r1
 801d382:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d386:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d38a:	4413      	add	r3, r2
 801d38c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d390:	4b4a      	ldr	r3, [pc, #296]	; (801d4bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d392:	6818      	ldr	r0, [r3, #0]
 801d394:	6803      	ldr	r3, [r0, #0]
 801d396:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d398:	4798      	blx	r3
 801d39a:	4b49      	ldr	r3, [pc, #292]	; (801d4c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d39c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d3a0:	881a      	ldrh	r2, [r3, #0]
 801d3a2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d3a6:	2eff      	cmp	r6, #255	; 0xff
 801d3a8:	fb02 c101 	mla	r1, r2, r1, ip
 801d3ac:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d3b0:	fb02 f207 	mul.w	r2, r2, r7
 801d3b4:	f105 0104 	add.w	r1, r5, #4
 801d3b8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d3bc:	461d      	mov	r5, r3
 801d3be:	d05a      	beq.n	801d476 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d3c0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d3c4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d3c8:	b2b6      	uxth	r6, r6
 801d3ca:	fa1f fe8e 	uxth.w	lr, lr
 801d3ce:	9301      	str	r3, [sp, #4]
 801d3d0:	4282      	cmp	r2, r0
 801d3d2:	d96a      	bls.n	801d4aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d3d4:	eb00 0b0a 	add.w	fp, r0, sl
 801d3d8:	4583      	cmp	fp, r0
 801d3da:	d940      	bls.n	801d45e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d3dc:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d3e0:	8805      	ldrh	r5, [r0, #0]
 801d3e2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d3e6:	122f      	asrs	r7, r5, #8
 801d3e8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d3ec:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d3f0:	fb17 f70e 	smulbb	r7, r7, lr
 801d3f4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d3f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d3fc:	00ed      	lsls	r5, r5, #3
 801d3fe:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d402:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d406:	10df      	asrs	r7, r3, #3
 801d408:	b2ed      	uxtb	r5, r5
 801d40a:	00db      	lsls	r3, r3, #3
 801d40c:	fa1f fc8c 	uxth.w	ip, ip
 801d410:	fb19 f90e 	smulbb	r9, r9, lr
 801d414:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d418:	b2db      	uxtb	r3, r3
 801d41a:	fb15 f50e 	smulbb	r5, r5, lr
 801d41e:	fb07 9706 	mla	r7, r7, r6, r9
 801d422:	fb03 5306 	mla	r3, r3, r6, r5
 801d426:	f10c 0901 	add.w	r9, ip, #1
 801d42a:	b29b      	uxth	r3, r3
 801d42c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d430:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d434:	f103 0c01 	add.w	ip, r3, #1
 801d438:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d43c:	b2bf      	uxth	r7, r7
 801d43e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d442:	ea4c 0c09 	orr.w	ip, ip, r9
 801d446:	f107 0901 	add.w	r9, r7, #1
 801d44a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d44e:	097f      	lsrs	r7, r7, #5
 801d450:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d454:	ea4c 0c07 	orr.w	ip, ip, r7
 801d458:	f820 cb02 	strh.w	ip, [r0], #2
 801d45c:	e7bc      	b.n	801d3d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d45e:	9b01      	ldr	r3, [sp, #4]
 801d460:	881b      	ldrh	r3, [r3, #0]
 801d462:	eba3 0308 	sub.w	r3, r3, r8
 801d466:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d46a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d46e:	eba3 0308 	sub.w	r3, r3, r8
 801d472:	441c      	add	r4, r3
 801d474:	e7ac      	b.n	801d3d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d476:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d47a:	4282      	cmp	r2, r0
 801d47c:	d915      	bls.n	801d4aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d47e:	eb00 060a 	add.w	r6, r0, sl
 801d482:	4286      	cmp	r6, r0
 801d484:	d906      	bls.n	801d494 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d486:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d48a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d48e:	f820 3b02 	strh.w	r3, [r0], #2
 801d492:	e7f6      	b.n	801d482 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d494:	882b      	ldrh	r3, [r5, #0]
 801d496:	eba3 0308 	sub.w	r3, r3, r8
 801d49a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d49e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d4a2:	eba3 0308 	sub.w	r3, r3, r8
 801d4a6:	441c      	add	r4, r3
 801d4a8:	e7e7      	b.n	801d47a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d4aa:	4b04      	ldr	r3, [pc, #16]	; (801d4bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d4ac:	6818      	ldr	r0, [r3, #0]
 801d4ae:	6803      	ldr	r3, [r0, #0]
 801d4b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d4b2:	4798      	blx	r3
 801d4b4:	b007      	add	sp, #28
 801d4b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d4ba:	bf00      	nop
 801d4bc:	20012e74 	.word	0x20012e74
 801d4c0:	20012e6e 	.word	0x20012e6e

0801d4c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d4c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4c8:	b091      	sub	sp, #68	; 0x44
 801d4ca:	4680      	mov	r8, r0
 801d4cc:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d4d0:	460f      	mov	r7, r1
 801d4d2:	4614      	mov	r4, r2
 801d4d4:	2d00      	cmp	r5, #0
 801d4d6:	d051      	beq.n	801d57c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d4d8:	6810      	ldr	r0, [r2, #0]
 801d4da:	6851      	ldr	r1, [r2, #4]
 801d4dc:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d6e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d4e0:	ae0c      	add	r6, sp, #48	; 0x30
 801d4e2:	c603      	stmia	r6!, {r0, r1}
 801d4e4:	6818      	ldr	r0, [r3, #0]
 801d4e6:	6859      	ldr	r1, [r3, #4]
 801d4e8:	ae0e      	add	r6, sp, #56	; 0x38
 801d4ea:	c603      	stmia	r6!, {r0, r1}
 801d4ec:	a80c      	add	r0, sp, #48	; 0x30
 801d4ee:	f7f7 fd13 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d4f2:	4621      	mov	r1, r4
 801d4f4:	a80e      	add	r0, sp, #56	; 0x38
 801d4f6:	f7f7 fd53 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d4fa:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d4fe:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d502:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d506:	f8d9 0000 	ldr.w	r0, [r9]
 801d50a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d50e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d512:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d516:	eb08 0401 	add.w	r4, r8, r1
 801d51a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d51e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d6e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d522:	440a      	add	r2, r1
 801d524:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d528:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d52c:	4413      	add	r3, r2
 801d52e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d532:	6803      	ldr	r3, [r0, #0]
 801d534:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d536:	4798      	blx	r3
 801d538:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d53c:	f8d9 0000 	ldr.w	r0, [r9]
 801d540:	d01f      	beq.n	801d582 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d542:	2200      	movs	r2, #0
 801d544:	6801      	ldr	r1, [r0, #0]
 801d546:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d54a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d54e:	220b      	movs	r2, #11
 801d550:	9207      	str	r2, [sp, #28]
 801d552:	f8b8 2000 	ldrh.w	r2, [r8]
 801d556:	9206      	str	r2, [sp, #24]
 801d558:	2201      	movs	r2, #1
 801d55a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d55e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d562:	9203      	str	r2, [sp, #12]
 801d564:	fa1f f28a 	uxth.w	r2, sl
 801d568:	9202      	str	r2, [sp, #8]
 801d56a:	b2b6      	uxth	r6, r6
 801d56c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d570:	9200      	str	r2, [sp, #0]
 801d572:	9601      	str	r6, [sp, #4]
 801d574:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d576:	463a      	mov	r2, r7
 801d578:	4621      	mov	r1, r4
 801d57a:	47a8      	blx	r5
 801d57c:	b011      	add	sp, #68	; 0x44
 801d57e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d582:	6803      	ldr	r3, [r0, #0]
 801d584:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d586:	4798      	blx	r3
 801d588:	f8b8 2000 	ldrh.w	r2, [r8]
 801d58c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d590:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d594:	2dff      	cmp	r5, #255	; 0xff
 801d596:	fb02 1303 	mla	r3, r2, r3, r1
 801d59a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d59e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d5a2:	fb0a fa02 	mul.w	sl, sl, r2
 801d5a6:	d062      	beq.n	801d66e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d5a8:	ea6f 0c05 	mvn.w	ip, r5
 801d5ac:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d5b0:	930a      	str	r3, [sp, #40]	; 0x28
 801d5b2:	b2ad      	uxth	r5, r5
 801d5b4:	fa5f fc8c 	uxtb.w	ip, ip
 801d5b8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d5bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d5be:	4298      	cmp	r0, r3
 801d5c0:	f080 8085 	bcs.w	801d6ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d5c4:	eb00 0b09 	add.w	fp, r0, r9
 801d5c8:	4558      	cmp	r0, fp
 801d5ca:	d246      	bcs.n	801d65a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d5cc:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d5d0:	2303      	movs	r3, #3
 801d5d2:	2204      	movs	r2, #4
 801d5d4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d5d8:	eb07 0a0e 	add.w	sl, r7, lr
 801d5dc:	8803      	ldrh	r3, [r0, #0]
 801d5de:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d5e2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d5e6:	1219      	asrs	r1, r3, #8
 801d5e8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d5ec:	fb18 f805 	smulbb	r8, r8, r5
 801d5f0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d5f4:	10da      	asrs	r2, r3, #3
 801d5f6:	fb01 810c 	mla	r1, r1, ip, r8
 801d5fa:	00db      	lsls	r3, r3, #3
 801d5fc:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d600:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d604:	b2db      	uxtb	r3, r3
 801d606:	fb18 f805 	smulbb	r8, r8, r5
 801d60a:	fb1e fe05 	smulbb	lr, lr, r5
 801d60e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d612:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d616:	b289      	uxth	r1, r1
 801d618:	fb02 820c 	mla	r2, r2, ip, r8
 801d61c:	fb03 e30c 	mla	r3, r3, ip, lr
 801d620:	b292      	uxth	r2, r2
 801d622:	b29b      	uxth	r3, r3
 801d624:	f101 0801 	add.w	r8, r1, #1
 801d628:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d62c:	f103 0e01 	add.w	lr, r3, #1
 801d630:	f102 0801 	add.w	r8, r2, #1
 801d634:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d638:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d63c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d640:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d644:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d648:	ea4e 0101 	orr.w	r1, lr, r1
 801d64c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d650:	ea41 0108 	orr.w	r1, r1, r8
 801d654:	f820 1b02 	strh.w	r1, [r0], #2
 801d658:	e7b6      	b.n	801d5c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d65a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d65c:	881b      	ldrh	r3, [r3, #0]
 801d65e:	1b9b      	subs	r3, r3, r6
 801d660:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d664:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d668:	1b9b      	subs	r3, r3, r6
 801d66a:	441c      	add	r4, r3
 801d66c:	e7a6      	b.n	801d5bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d66e:	491b      	ldr	r1, [pc, #108]	; (801d6dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d670:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d674:	2203      	movs	r2, #3
 801d676:	2504      	movs	r5, #4
 801d678:	4550      	cmp	r0, sl
 801d67a:	d228      	bcs.n	801d6ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d67c:	eb00 0c09 	add.w	ip, r0, r9
 801d680:	4560      	cmp	r0, ip
 801d682:	4623      	mov	r3, r4
 801d684:	d219      	bcs.n	801d6ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d686:	f893 e000 	ldrb.w	lr, [r3]
 801d68a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d68e:	eb07 0b0e 	add.w	fp, r7, lr
 801d692:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d696:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d69a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d69e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d6a2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d6a6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d6aa:	ea43 030b 	orr.w	r3, r3, fp
 801d6ae:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d6b2:	3401      	adds	r4, #1
 801d6b4:	f820 3b02 	strh.w	r3, [r0], #2
 801d6b8:	e7e2      	b.n	801d680 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d6ba:	f8b8 3000 	ldrh.w	r3, [r8]
 801d6be:	1b9b      	subs	r3, r3, r6
 801d6c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d6c4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d6c8:	1b9b      	subs	r3, r3, r6
 801d6ca:	441c      	add	r4, r3
 801d6cc:	e7d4      	b.n	801d678 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d6ce:	4b04      	ldr	r3, [pc, #16]	; (801d6e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d6d0:	6818      	ldr	r0, [r3, #0]
 801d6d2:	6803      	ldr	r3, [r0, #0]
 801d6d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d6d6:	4798      	blx	r3
 801d6d8:	e750      	b.n	801d57c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d6da:	bf00      	nop
 801d6dc:	fffff800 	.word	0xfffff800
 801d6e0:	20012e74 	.word	0x20012e74
 801d6e4:	20012e6e 	.word	0x20012e6e

0801d6e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d6e8:	b4f0      	push	{r4, r5, r6, r7}
 801d6ea:	460c      	mov	r4, r1
 801d6ec:	4611      	mov	r1, r2
 801d6ee:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d6f2:	780f      	ldrb	r7, [r1, #0]
 801d6f4:	784e      	ldrb	r6, [r1, #1]
 801d6f6:	2f01      	cmp	r7, #1
 801d6f8:	461a      	mov	r2, r3
 801d6fa:	9b04      	ldr	r3, [sp, #16]
 801d6fc:	d036      	beq.n	801d76c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d6fe:	d31e      	bcc.n	801d73e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d700:	2f02      	cmp	r7, #2
 801d702:	d14a      	bne.n	801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d704:	2e03      	cmp	r6, #3
 801d706:	d848      	bhi.n	801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d708:	e8df f006 	tbb	[pc, r6]
 801d70c:	16140702 	.word	0x16140702
 801d710:	9504      	str	r5, [sp, #16]
 801d712:	4620      	mov	r0, r4
 801d714:	bcf0      	pop	{r4, r5, r6, r7}
 801d716:	f7ff be09 	b.w	801d32c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d71a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d71c:	2800      	cmp	r0, #0
 801d71e:	d03c      	beq.n	801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d720:	6806      	ldr	r6, [r0, #0]
 801d722:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d726:	68b5      	ldr	r5, [r6, #8]
 801d728:	4613      	mov	r3, r2
 801d72a:	46ac      	mov	ip, r5
 801d72c:	460a      	mov	r2, r1
 801d72e:	4621      	mov	r1, r4
 801d730:	bcf0      	pop	{r4, r5, r6, r7}
 801d732:	4760      	bx	ip
 801d734:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d736:	e7f1      	b.n	801d71c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d738:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d73c:	e7ee      	b.n	801d71c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d73e:	2e03      	cmp	r6, #3
 801d740:	d82b      	bhi.n	801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d742:	e8df f006 	tbb	[pc, r6]
 801d746:	0702      	.short	0x0702
 801d748:	100e      	.short	0x100e
 801d74a:	9504      	str	r5, [sp, #16]
 801d74c:	4620      	mov	r0, r4
 801d74e:	bcf0      	pop	{r4, r5, r6, r7}
 801d750:	f7ff bd06 	b.w	801d160 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d754:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d756:	b300      	cbz	r0, 801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d758:	6806      	ldr	r6, [r0, #0]
 801d75a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d75e:	68f5      	ldr	r5, [r6, #12]
 801d760:	e7e2      	b.n	801d728 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d762:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d764:	e7f7      	b.n	801d756 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d766:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d76a:	e7f4      	b.n	801d756 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d76c:	2e03      	cmp	r6, #3
 801d76e:	d814      	bhi.n	801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d770:	e8df f006 	tbb	[pc, r6]
 801d774:	100e0702 	.word	0x100e0702
 801d778:	9504      	str	r5, [sp, #16]
 801d77a:	4620      	mov	r0, r4
 801d77c:	bcf0      	pop	{r4, r5, r6, r7}
 801d77e:	f7ff bea1 	b.w	801d4c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d782:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d784:	b148      	cbz	r0, 801d79a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d786:	6806      	ldr	r6, [r0, #0]
 801d788:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d78c:	6935      	ldr	r5, [r6, #16]
 801d78e:	e7cb      	b.n	801d728 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d790:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d792:	e7f7      	b.n	801d784 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d794:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d798:	e7f4      	b.n	801d784 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d79a:	bcf0      	pop	{r4, r5, r6, r7}
 801d79c:	4770      	bx	lr
	...

0801d7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d7a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7a4:	4604      	mov	r4, r0
 801d7a6:	b087      	sub	sp, #28
 801d7a8:	6810      	ldr	r0, [r2, #0]
 801d7aa:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d7ae:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d9e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d7b2:	460e      	mov	r6, r1
 801d7b4:	6851      	ldr	r1, [r2, #4]
 801d7b6:	ad02      	add	r5, sp, #8
 801d7b8:	c503      	stmia	r5!, {r0, r1}
 801d7ba:	6818      	ldr	r0, [r3, #0]
 801d7bc:	6859      	ldr	r1, [r3, #4]
 801d7be:	ad04      	add	r5, sp, #16
 801d7c0:	4617      	mov	r7, r2
 801d7c2:	c503      	stmia	r5!, {r0, r1}
 801d7c4:	a802      	add	r0, sp, #8
 801d7c6:	f7f7 fba7 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7ca:	4639      	mov	r1, r7
 801d7cc:	a804      	add	r0, sp, #16
 801d7ce:	f7f7 fbe7 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d7d2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d7d6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d7da:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d7de:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d7e2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d7e6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d7ea:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d7ee:	440e      	add	r6, r1
 801d7f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d7f4:	440a      	add	r2, r1
 801d7f6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d7fa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d7fe:	4413      	add	r3, r2
 801d800:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d804:	4b77      	ldr	r3, [pc, #476]	; (801d9e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d806:	6818      	ldr	r0, [r3, #0]
 801d808:	6803      	ldr	r3, [r0, #0]
 801d80a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d80c:	4798      	blx	r3
 801d80e:	f8b9 b000 	ldrh.w	fp, [r9]
 801d812:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d816:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d81a:	fb0b 2303 	mla	r3, fp, r3, r2
 801d81e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d822:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d826:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d82a:	fb05 f50b 	mul.w	r5, r5, fp
 801d82e:	9300      	str	r3, [sp, #0]
 801d830:	d069      	beq.n	801d906 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d832:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d836:	4558      	cmp	r0, fp
 801d838:	f080 80cc 	bcs.w	801d9d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d83c:	9b00      	ldr	r3, [sp, #0]
 801d83e:	18c3      	adds	r3, r0, r3
 801d840:	9301      	str	r3, [sp, #4]
 801d842:	4631      	mov	r1, r6
 801d844:	9b01      	ldr	r3, [sp, #4]
 801d846:	4298      	cmp	r0, r3
 801d848:	d24f      	bcs.n	801d8ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d84a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d84e:	2a00      	cmp	r2, #0
 801d850:	d048      	beq.n	801d8e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d852:	fb0a f202 	mul.w	r2, sl, r2
 801d856:	1c53      	adds	r3, r2, #1
 801d858:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d85c:	121b      	asrs	r3, r3, #8
 801d85e:	d041      	beq.n	801d8e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d860:	8802      	ldrh	r2, [r0, #0]
 801d862:	f8b4 c000 	ldrh.w	ip, [r4]
 801d866:	b29e      	uxth	r6, r3
 801d868:	1215      	asrs	r5, r2, #8
 801d86a:	43db      	mvns	r3, r3
 801d86c:	b2db      	uxtb	r3, r3
 801d86e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d872:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d876:	fb15 f503 	smulbb	r5, r5, r3
 801d87a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d87e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d882:	00d2      	lsls	r2, r2, #3
 801d884:	fb07 5706 	mla	r7, r7, r6, r5
 801d888:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d88c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d890:	b2d2      	uxtb	r2, r2
 801d892:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d896:	b2bf      	uxth	r7, r7
 801d898:	fb1e fe03 	smulbb	lr, lr, r3
 801d89c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d8a0:	fa5f fc8c 	uxtb.w	ip, ip
 801d8a4:	fb12 f203 	smulbb	r2, r2, r3
 801d8a8:	fb05 e506 	mla	r5, r5, r6, lr
 801d8ac:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d8b0:	f107 0e01 	add.w	lr, r7, #1
 801d8b4:	fa1f fc8c 	uxth.w	ip, ip
 801d8b8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d8bc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d8c0:	f10c 0701 	add.w	r7, ip, #1
 801d8c4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d8c8:	b2ad      	uxth	r5, r5
 801d8ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d8ce:	ea47 070e 	orr.w	r7, r7, lr
 801d8d2:	f105 0e01 	add.w	lr, r5, #1
 801d8d6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d8da:	096d      	lsrs	r5, r5, #5
 801d8dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d8e0:	432f      	orrs	r7, r5
 801d8e2:	8007      	strh	r7, [r0, #0]
 801d8e4:	3002      	adds	r0, #2
 801d8e6:	3402      	adds	r4, #2
 801d8e8:	e7ac      	b.n	801d844 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d8ea:	f8b9 3000 	ldrh.w	r3, [r9]
 801d8ee:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d8f2:	eba3 0308 	sub.w	r3, r3, r8
 801d8f6:	eba6 0608 	sub.w	r6, r6, r8
 801d8fa:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d8fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d902:	440e      	add	r6, r1
 801d904:	e797      	b.n	801d836 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d906:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d90a:	42a8      	cmp	r0, r5
 801d90c:	d262      	bcs.n	801d9d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d90e:	9b00      	ldr	r3, [sp, #0]
 801d910:	4631      	mov	r1, r6
 801d912:	eb00 0b03 	add.w	fp, r0, r3
 801d916:	4558      	cmp	r0, fp
 801d918:	d24e      	bcs.n	801d9b8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d91a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d91e:	b12b      	cbz	r3, 801d92c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d920:	2bff      	cmp	r3, #255	; 0xff
 801d922:	f8b4 e000 	ldrh.w	lr, [r4]
 801d926:	d104      	bne.n	801d932 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d928:	f8a0 e000 	strh.w	lr, [r0]
 801d92c:	3002      	adds	r0, #2
 801d92e:	3402      	adds	r4, #2
 801d930:	e7f1      	b.n	801d916 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d932:	8802      	ldrh	r2, [r0, #0]
 801d934:	b29f      	uxth	r7, r3
 801d936:	1216      	asrs	r6, r2, #8
 801d938:	43db      	mvns	r3, r3
 801d93a:	b2db      	uxtb	r3, r3
 801d93c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d940:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d944:	fb16 f603 	smulbb	r6, r6, r3
 801d948:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d94c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d950:	00d2      	lsls	r2, r2, #3
 801d952:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d956:	b2d2      	uxtb	r2, r2
 801d958:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d95c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d960:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d964:	fb1a fa03 	smulbb	sl, sl, r3
 801d968:	fa1f fc8c 	uxth.w	ip, ip
 801d96c:	fb12 f303 	smulbb	r3, r2, r3
 801d970:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d974:	fa5f fe8e 	uxtb.w	lr, lr
 801d978:	fb06 a607 	mla	r6, r6, r7, sl
 801d97c:	f10c 0201 	add.w	r2, ip, #1
 801d980:	fb0e 3307 	mla	r3, lr, r7, r3
 801d984:	b2b6      	uxth	r6, r6
 801d986:	b29b      	uxth	r3, r3
 801d988:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d98c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d990:	f106 0a01 	add.w	sl, r6, #1
 801d994:	f103 0c01 	add.w	ip, r3, #1
 801d998:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d99c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d9a0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d9a4:	0976      	lsrs	r6, r6, #5
 801d9a6:	ea4c 0c02 	orr.w	ip, ip, r2
 801d9aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d9ae:	ea4c 0c06 	orr.w	ip, ip, r6
 801d9b2:	f8a0 c000 	strh.w	ip, [r0]
 801d9b6:	e7b9      	b.n	801d92c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d9b8:	f8b9 3000 	ldrh.w	r3, [r9]
 801d9bc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d9c0:	eba3 0308 	sub.w	r3, r3, r8
 801d9c4:	eba6 0608 	sub.w	r6, r6, r8
 801d9c8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d9cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d9d0:	440e      	add	r6, r1
 801d9d2:	e79a      	b.n	801d90a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d9d4:	4b03      	ldr	r3, [pc, #12]	; (801d9e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d9d6:	6818      	ldr	r0, [r3, #0]
 801d9d8:	6803      	ldr	r3, [r0, #0]
 801d9da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d9dc:	4798      	blx	r3
 801d9de:	b007      	add	sp, #28
 801d9e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9e4:	20012e74 	.word	0x20012e74
 801d9e8:	20012e6e 	.word	0x20012e6e

0801d9ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d9ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9f0:	b089      	sub	sp, #36	; 0x24
 801d9f2:	4682      	mov	sl, r0
 801d9f4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d9f8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d9fa:	460f      	mov	r7, r1
 801d9fc:	4691      	mov	r9, r2
 801d9fe:	4698      	mov	r8, r3
 801da00:	2e00      	cmp	r6, #0
 801da02:	d03d      	beq.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da04:	4608      	mov	r0, r1
 801da06:	f7fa fe59 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801da0a:	4605      	mov	r5, r0
 801da0c:	4638      	mov	r0, r7
 801da0e:	f7fa fe89 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801da12:	f8ad 000e 	strh.w	r0, [sp, #14]
 801da16:	4638      	mov	r0, r7
 801da18:	f8ad 9008 	strh.w	r9, [sp, #8]
 801da1c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801da20:	f8ad 800a 	strh.w	r8, [sp, #10]
 801da24:	f7fa ff36 	bl	8018894 <_ZNK8touchgfx6Bitmap7getDataEv>
 801da28:	4605      	mov	r5, r0
 801da2a:	4638      	mov	r0, r7
 801da2c:	f7fa ff62 	bl	80188f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801da30:	4681      	mov	r9, r0
 801da32:	4638      	mov	r0, r7
 801da34:	f7fa ffb2 	bl	801899c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801da38:	280b      	cmp	r0, #11
 801da3a:	d821      	bhi.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da3c:	e8df f000 	tbb	[pc, r0]
 801da40:	2006aebe 	.word	0x2006aebe
 801da44:	20202020 	.word	0x20202020
 801da48:	b5202020 	.word	0xb5202020
 801da4c:	4bb0      	ldr	r3, [pc, #704]	; (801dd10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801da4e:	6818      	ldr	r0, [r3, #0]
 801da50:	6803      	ldr	r3, [r0, #0]
 801da52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801da54:	4798      	blx	r3
 801da56:	2eff      	cmp	r6, #255	; 0xff
 801da58:	d101      	bne.n	801da5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801da5a:	0683      	lsls	r3, r0, #26
 801da5c:	d506      	bpl.n	801da6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801da5e:	4633      	mov	r3, r6
 801da60:	4622      	mov	r2, r4
 801da62:	a902      	add	r1, sp, #8
 801da64:	4628      	mov	r0, r5
 801da66:	f7ff f909 	bl	801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801da6a:	e009      	b.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da6c:	4638      	mov	r0, r7
 801da6e:	f7fa fed9 	bl	8018824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801da72:	b940      	cbnz	r0, 801da86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801da74:	4623      	mov	r3, r4
 801da76:	aa02      	add	r2, sp, #8
 801da78:	4629      	mov	r1, r5
 801da7a:	4650      	mov	r0, sl
 801da7c:	f7ff f9e4 	bl	801ce48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801da80:	b009      	add	sp, #36	; 0x24
 801da82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da86:	f10d 0818 	add.w	r8, sp, #24
 801da8a:	4639      	mov	r1, r7
 801da8c:	4640      	mov	r0, r8
 801da8e:	f7fa fe7d 	bl	801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801da92:	e898 0003 	ldmia.w	r8, {r0, r1}
 801da96:	af04      	add	r7, sp, #16
 801da98:	e887 0003 	stmia.w	r7, {r0, r1}
 801da9c:	4638      	mov	r0, r7
 801da9e:	4621      	mov	r1, r4
 801daa0:	f7f2 fadc 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 801daa4:	4638      	mov	r0, r7
 801daa6:	f7f2 fb1c 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801daaa:	2800      	cmp	r0, #0
 801daac:	d1d7      	bne.n	801da5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801daae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dab2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dab6:	4293      	cmp	r3, r2
 801dab8:	dd12      	ble.n	801dae0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801daba:	1a9b      	subs	r3, r3, r2
 801dabc:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dac0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dac4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dac8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dacc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dad0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dad4:	4642      	mov	r2, r8
 801dad6:	4633      	mov	r3, r6
 801dad8:	a902      	add	r1, sp, #8
 801dada:	4628      	mov	r0, r5
 801dadc:	f7ff f8ce 	bl	801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801dae0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801dae4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801dae8:	4293      	cmp	r3, r2
 801daea:	dd12      	ble.n	801db12 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801daec:	1a9b      	subs	r3, r3, r2
 801daee:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801daf2:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801daf6:	f8ad 2018 	strh.w	r2, [sp, #24]
 801dafa:	f8ad 001a 	strh.w	r0, [sp, #26]
 801dafe:	f8ad 301c 	strh.w	r3, [sp, #28]
 801db02:	f8ad 101e 	strh.w	r1, [sp, #30]
 801db06:	23ff      	movs	r3, #255	; 0xff
 801db08:	4642      	mov	r2, r8
 801db0a:	a902      	add	r1, sp, #8
 801db0c:	4628      	mov	r0, r5
 801db0e:	f7ff f8b5 	bl	801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801db12:	463b      	mov	r3, r7
 801db14:	aa02      	add	r2, sp, #8
 801db16:	4629      	mov	r1, r5
 801db18:	4650      	mov	r0, sl
 801db1a:	f7ff f995 	bl	801ce48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801db1e:	88a2      	ldrh	r2, [r4, #4]
 801db20:	8823      	ldrh	r3, [r4, #0]
 801db22:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801db26:	4413      	add	r3, r2
 801db28:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801db2c:	440a      	add	r2, r1
 801db2e:	b29b      	uxth	r3, r3
 801db30:	b292      	uxth	r2, r2
 801db32:	b211      	sxth	r1, r2
 801db34:	b218      	sxth	r0, r3
 801db36:	4288      	cmp	r0, r1
 801db38:	dd12      	ble.n	801db60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801db3a:	1a9b      	subs	r3, r3, r2
 801db3c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801db40:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801db44:	f8ad 1018 	strh.w	r1, [sp, #24]
 801db48:	f8ad 301c 	strh.w	r3, [sp, #28]
 801db4c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801db50:	23ff      	movs	r3, #255	; 0xff
 801db52:	4642      	mov	r2, r8
 801db54:	a902      	add	r1, sp, #8
 801db56:	4628      	mov	r0, r5
 801db58:	f8ad 601a 	strh.w	r6, [sp, #26]
 801db5c:	f7ff f88e 	bl	801cc7c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801db60:	88e2      	ldrh	r2, [r4, #6]
 801db62:	8863      	ldrh	r3, [r4, #2]
 801db64:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801db68:	4413      	add	r3, r2
 801db6a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801db6e:	440a      	add	r2, r1
 801db70:	b29b      	uxth	r3, r3
 801db72:	b292      	uxth	r2, r2
 801db74:	b211      	sxth	r1, r2
 801db76:	b218      	sxth	r0, r3
 801db78:	4288      	cmp	r0, r1
 801db7a:	dd81      	ble.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801db7c:	1a9b      	subs	r3, r3, r2
 801db7e:	f9b4 6000 	ldrsh.w	r6, [r4]
 801db82:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801db86:	f8ad 301e 	strh.w	r3, [sp, #30]
 801db8a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801db8e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801db92:	f8ad 001c 	strh.w	r0, [sp, #28]
 801db96:	23ff      	movs	r3, #255	; 0xff
 801db98:	4642      	mov	r2, r8
 801db9a:	e762      	b.n	801da62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801db9c:	4633      	mov	r3, r6
 801db9e:	4622      	mov	r2, r4
 801dba0:	a902      	add	r1, sp, #8
 801dba2:	4628      	mov	r0, r5
 801dba4:	f7ff f9c0 	bl	801cf28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801dba8:	e76a      	b.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dbaa:	e9cd 4600 	strd	r4, r6, [sp]
 801dbae:	ab02      	add	r3, sp, #8
 801dbb0:	464a      	mov	r2, r9
 801dbb2:	4629      	mov	r1, r5
 801dbb4:	4650      	mov	r0, sl
 801dbb6:	f7ff fd97 	bl	801d6e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801dbba:	e761      	b.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dbbc:	4638      	mov	r0, r7
 801dbbe:	f7fa fe31 	bl	8018824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801dbc2:	b950      	cbnz	r0, 801dbda <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801dbc4:	e9cd 6000 	strd	r6, r0, [sp]
 801dbc8:	f8da 3000 	ldr.w	r3, [sl]
 801dbcc:	aa02      	add	r2, sp, #8
 801dbce:	68de      	ldr	r6, [r3, #12]
 801dbd0:	4629      	mov	r1, r5
 801dbd2:	4623      	mov	r3, r4
 801dbd4:	4650      	mov	r0, sl
 801dbd6:	47b0      	blx	r6
 801dbd8:	e752      	b.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dbda:	f10d 0818 	add.w	r8, sp, #24
 801dbde:	4639      	mov	r1, r7
 801dbe0:	4640      	mov	r0, r8
 801dbe2:	f7fa fdd3 	bl	801878c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801dbe6:	e898 0003 	ldmia.w	r8, {r0, r1}
 801dbea:	af04      	add	r7, sp, #16
 801dbec:	e887 0003 	stmia.w	r7, {r0, r1}
 801dbf0:	4638      	mov	r0, r7
 801dbf2:	4621      	mov	r1, r4
 801dbf4:	f7f2 fa32 	bl	801005c <_ZN8touchgfx4RectaNERKS0_>
 801dbf8:	4638      	mov	r0, r7
 801dbfa:	f7f2 fa72 	bl	80100e2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801dbfe:	b138      	cbz	r0, 801dc10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801dc00:	9600      	str	r6, [sp, #0]
 801dc02:	4623      	mov	r3, r4
 801dc04:	aa02      	add	r2, sp, #8
 801dc06:	4649      	mov	r1, r9
 801dc08:	4628      	mov	r0, r5
 801dc0a:	f7ff fdc9 	bl	801d7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dc0e:	e737      	b.n	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dc10:	e9cd 6000 	strd	r6, r0, [sp]
 801dc14:	f8da 3000 	ldr.w	r3, [sl]
 801dc18:	aa02      	add	r2, sp, #8
 801dc1a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801dc1e:	4629      	mov	r1, r5
 801dc20:	463b      	mov	r3, r7
 801dc22:	4650      	mov	r0, sl
 801dc24:	47d8      	blx	fp
 801dc26:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dc2a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dc2e:	4293      	cmp	r3, r2
 801dc30:	dd13      	ble.n	801dc5a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801dc32:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dc36:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dc3a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dc3e:	1a9b      	subs	r3, r3, r2
 801dc40:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dc44:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dc48:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dc4c:	9600      	str	r6, [sp, #0]
 801dc4e:	4643      	mov	r3, r8
 801dc50:	aa02      	add	r2, sp, #8
 801dc52:	4649      	mov	r1, r9
 801dc54:	4628      	mov	r0, r5
 801dc56:	f7ff fda3 	bl	801d7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dc5a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801dc5e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801dc62:	4293      	cmp	r3, r2
 801dc64:	dd13      	ble.n	801dc8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801dc66:	1a9b      	subs	r3, r3, r2
 801dc68:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801dc6c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801dc70:	f8ad 2018 	strh.w	r2, [sp, #24]
 801dc74:	f8ad 001a 	strh.w	r0, [sp, #26]
 801dc78:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dc7c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801dc80:	9600      	str	r6, [sp, #0]
 801dc82:	4643      	mov	r3, r8
 801dc84:	aa02      	add	r2, sp, #8
 801dc86:	4649      	mov	r1, r9
 801dc88:	4628      	mov	r0, r5
 801dc8a:	f7ff fd89 	bl	801d7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dc8e:	88a2      	ldrh	r2, [r4, #4]
 801dc90:	8823      	ldrh	r3, [r4, #0]
 801dc92:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801dc96:	4413      	add	r3, r2
 801dc98:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dc9c:	440a      	add	r2, r1
 801dc9e:	b29b      	uxth	r3, r3
 801dca0:	b292      	uxth	r2, r2
 801dca2:	b211      	sxth	r1, r2
 801dca4:	b218      	sxth	r0, r3
 801dca6:	4288      	cmp	r0, r1
 801dca8:	dd13      	ble.n	801dcd2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801dcaa:	1a9b      	subs	r3, r3, r2
 801dcac:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801dcb0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801dcb4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801dcb8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dcbc:	f8ad 001e 	strh.w	r0, [sp, #30]
 801dcc0:	9600      	str	r6, [sp, #0]
 801dcc2:	4643      	mov	r3, r8
 801dcc4:	aa02      	add	r2, sp, #8
 801dcc6:	4649      	mov	r1, r9
 801dcc8:	4628      	mov	r0, r5
 801dcca:	f8ad 701a 	strh.w	r7, [sp, #26]
 801dcce:	f7ff fd67 	bl	801d7a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dcd2:	88e2      	ldrh	r2, [r4, #6]
 801dcd4:	8863      	ldrh	r3, [r4, #2]
 801dcd6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801dcda:	4413      	add	r3, r2
 801dcdc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801dce0:	440a      	add	r2, r1
 801dce2:	b29b      	uxth	r3, r3
 801dce4:	b292      	uxth	r2, r2
 801dce6:	b211      	sxth	r1, r2
 801dce8:	b218      	sxth	r0, r3
 801dcea:	4288      	cmp	r0, r1
 801dcec:	f77f aec8 	ble.w	801da80 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dcf0:	f9b4 7000 	ldrsh.w	r7, [r4]
 801dcf4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801dcf8:	f8ad 7018 	strh.w	r7, [sp, #24]
 801dcfc:	1a9b      	subs	r3, r3, r2
 801dcfe:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dd02:	f8ad 101a 	strh.w	r1, [sp, #26]
 801dd06:	f8ad 001c 	strh.w	r0, [sp, #28]
 801dd0a:	9600      	str	r6, [sp, #0]
 801dd0c:	4643      	mov	r3, r8
 801dd0e:	e779      	b.n	801dc04 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801dd10:	20012e74 	.word	0x20012e74

0801dd14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801dd14:	b180      	cbz	r0, 801dd38 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801dd16:	2903      	cmp	r1, #3
 801dd18:	d81c      	bhi.n	801dd54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dd1a:	e8df f001 	tbb	[pc, r1]
 801dd1e:	1d02      	.short	0x1d02
 801dd20:	1f08      	.short	0x1f08
 801dd22:	4b10      	ldr	r3, [pc, #64]	; (801dd64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dd24:	8818      	ldrh	r0, [r3, #0]
 801dd26:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd2a:	4240      	negs	r0, r0
 801dd2c:	4770      	bx	lr
 801dd2e:	4b0d      	ldr	r3, [pc, #52]	; (801dd64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dd30:	8818      	ldrh	r0, [r3, #0]
 801dd32:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd36:	4770      	bx	lr
 801dd38:	2903      	cmp	r1, #3
 801dd3a:	d80b      	bhi.n	801dd54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dd3c:	a301      	add	r3, pc, #4	; (adr r3, 801dd44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801dd3e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801dd42:	bf00      	nop
 801dd44:	0801dd59 	.word	0x0801dd59
 801dd48:	0801dd2f 	.word	0x0801dd2f
 801dd4c:	0801dd5d 	.word	0x0801dd5d
 801dd50:	0801dd23 	.word	0x0801dd23
 801dd54:	2000      	movs	r0, #0
 801dd56:	4770      	bx	lr
 801dd58:	2001      	movs	r0, #1
 801dd5a:	4770      	bx	lr
 801dd5c:	f04f 30ff 	mov.w	r0, #4294967295
 801dd60:	4770      	bx	lr
 801dd62:	bf00      	nop
 801dd64:	20012e6e 	.word	0x20012e6e

0801dd68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801dd68:	b180      	cbz	r0, 801dd8c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801dd6a:	2903      	cmp	r1, #3
 801dd6c:	d81c      	bhi.n	801dda8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801dd6e:	e8df f001 	tbb	[pc, r1]
 801dd72:	021d      	.short	0x021d
 801dd74:	071f      	.short	0x071f
 801dd76:	4b10      	ldr	r3, [pc, #64]	; (801ddb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dd78:	8818      	ldrh	r0, [r3, #0]
 801dd7a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd7e:	4770      	bx	lr
 801dd80:	4b0d      	ldr	r3, [pc, #52]	; (801ddb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dd82:	8818      	ldrh	r0, [r3, #0]
 801dd84:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd88:	4240      	negs	r0, r0
 801dd8a:	4770      	bx	lr
 801dd8c:	2903      	cmp	r1, #3
 801dd8e:	d80b      	bhi.n	801dda8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801dd90:	a301      	add	r3, pc, #4	; (adr r3, 801dd98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801dd92:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801dd96:	bf00      	nop
 801dd98:	0801dd77 	.word	0x0801dd77
 801dd9c:	0801ddb1 	.word	0x0801ddb1
 801dda0:	0801dd81 	.word	0x0801dd81
 801dda4:	0801ddad 	.word	0x0801ddad
 801dda8:	2000      	movs	r0, #0
 801ddaa:	4770      	bx	lr
 801ddac:	2001      	movs	r0, #1
 801ddae:	4770      	bx	lr
 801ddb0:	f04f 30ff 	mov.w	r0, #4294967295
 801ddb4:	4770      	bx	lr
 801ddb6:	bf00      	nop
 801ddb8:	20012e6e 	.word	0x20012e6e

0801ddbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ddbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ddc0:	b099      	sub	sp, #100	; 0x64
 801ddc2:	910b      	str	r1, [sp, #44]	; 0x2c
 801ddc4:	a914      	add	r1, sp, #80	; 0x50
 801ddc6:	e881 000c 	stmia.w	r1, {r2, r3}
 801ddca:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ddce:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801ddd2:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ddd6:	9309      	str	r3, [sp, #36]	; 0x24
 801ddd8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801dddc:	9310      	str	r3, [sp, #64]	; 0x40
 801ddde:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801dde2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801dde6:	930c      	str	r3, [sp, #48]	; 0x30
 801dde8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ddec:	798f      	ldrb	r7, [r1, #6]
 801ddee:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801ddf2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801ddf6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801ddfa:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801ddfe:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801de02:	431f      	orrs	r7, r3
 801de04:	f000 8195 	beq.w	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801de08:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801de0c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801de10:	f891 9007 	ldrb.w	r9, [r1, #7]
 801de14:	ea59 0903 	orrs.w	r9, r9, r3
 801de18:	f000 818b 	beq.w	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801de1c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801de20:	b29b      	uxth	r3, r3
 801de22:	2d00      	cmp	r5, #0
 801de24:	f000 812e 	beq.w	801e084 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801de28:	1aed      	subs	r5, r5, r3
 801de2a:	b2ad      	uxth	r5, r5
 801de2c:	042b      	lsls	r3, r5, #16
 801de2e:	d502      	bpl.n	801de36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801de30:	1b64      	subs	r4, r4, r5
 801de32:	b224      	sxth	r4, r4
 801de34:	2500      	movs	r5, #0
 801de36:	f9b2 1000 	ldrsh.w	r1, [r2]
 801de3a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801de3e:	428c      	cmp	r4, r1
 801de40:	b28b      	uxth	r3, r1
 801de42:	bfbf      	itttt	lt
 801de44:	18ed      	addlt	r5, r5, r3
 801de46:	1b2c      	sublt	r4, r5, r4
 801de48:	b2a5      	uxthlt	r5, r4
 801de4a:	460c      	movlt	r4, r1
 801de4c:	8891      	ldrh	r1, [r2, #4]
 801de4e:	440b      	add	r3, r1
 801de50:	b21b      	sxth	r3, r3
 801de52:	930f      	str	r3, [sp, #60]	; 0x3c
 801de54:	88d3      	ldrh	r3, [r2, #6]
 801de56:	8852      	ldrh	r2, [r2, #2]
 801de58:	4413      	add	r3, r2
 801de5a:	b21b      	sxth	r3, r3
 801de5c:	930d      	str	r3, [sp, #52]	; 0x34
 801de5e:	4bbe      	ldr	r3, [pc, #760]	; (801e158 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801de60:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801de62:	f893 b000 	ldrb.w	fp, [r3]
 801de66:	f10b 3cff 	add.w	ip, fp, #4294967295
 801de6a:	f1dc 0300 	rsbs	r3, ip, #0
 801de6e:	eb43 030c 	adc.w	r3, r3, ip
 801de72:	930e      	str	r3, [sp, #56]	; 0x38
 801de74:	4621      	mov	r1, r4
 801de76:	4653      	mov	r3, sl
 801de78:	a814      	add	r0, sp, #80	; 0x50
 801de7a:	f7f6 fec2 	bl	8014c02 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801de7e:	4621      	mov	r1, r4
 801de80:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801de84:	4653      	mov	r3, sl
 801de86:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801de88:	a814      	add	r0, sp, #80	; 0x50
 801de8a:	f7f6 fed7 	bl	8014c3c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801de8e:	a918      	add	r1, sp, #96	; 0x60
 801de90:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801de94:	a817      	add	r0, sp, #92	; 0x5c
 801de96:	f7f6 fffd 	bl	8014e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801de9a:	f1ba 0f00 	cmp.w	sl, #0
 801de9e:	f040 80f4 	bne.w	801e08a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801dea2:	f1bb 0f01 	cmp.w	fp, #1
 801dea6:	f040 80f8 	bne.w	801e09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801deaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801deac:	2b00      	cmp	r3, #0
 801deae:	f040 8145 	bne.w	801e13c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801deb2:	b2ba      	uxth	r2, r7
 801deb4:	b905      	cbnz	r5, 801deb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801deb6:	b16e      	cbz	r6, 801ded4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801deb8:	fb06 5302 	mla	r3, r6, r2, r5
 801debc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801debe:	fb08 f303 	mul.w	r3, r8, r3
 801dec2:	4631      	mov	r1, r6
 801dec4:	f003 0607 	and.w	r6, r3, #7
 801dec8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801decc:	9328      	str	r3, [sp, #160]	; 0xa0
 801dece:	eba9 0301 	sub.w	r3, r9, r1
 801ded2:	930a      	str	r3, [sp, #40]	; 0x28
 801ded4:	4651      	mov	r1, sl
 801ded6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801ded8:	f7ff ff1c 	bl	801dd14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801dedc:	4681      	mov	r9, r0
 801dede:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dee0:	f7ff ff42 	bl	801dd68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801dee4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dee6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dee8:	eba3 0a01 	sub.w	sl, r3, r1
 801deec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801deee:	459a      	cmp	sl, r3
 801def0:	bfa8      	it	ge
 801def2:	469a      	movge	sl, r3
 801def4:	f1ba 0f00 	cmp.w	sl, #0
 801def8:	4683      	mov	fp, r0
 801defa:	f340 811a 	ble.w	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801defe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801df00:	1b64      	subs	r4, r4, r5
 801df02:	1b1c      	subs	r4, r3, r4
 801df04:	42bc      	cmp	r4, r7
 801df06:	bfd4      	ite	le
 801df08:	ebc5 0504 	rsble	r5, r5, r4
 801df0c:	ebc5 0507 	rsbgt	r5, r5, r7
 801df10:	2d00      	cmp	r5, #0
 801df12:	f340 810e 	ble.w	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801df16:	1b52      	subs	r2, r2, r5
 801df18:	fb08 f302 	mul.w	r3, r8, r2
 801df1c:	930f      	str	r3, [sp, #60]	; 0x3c
 801df1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df20:	2b00      	cmp	r3, #0
 801df22:	f040 8116 	bne.w	801e152 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801df26:	4b8d      	ldr	r3, [pc, #564]	; (801e15c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801df28:	6818      	ldr	r0, [r3, #0]
 801df2a:	6803      	ldr	r3, [r0, #0]
 801df2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df2e:	4798      	blx	r3
 801df30:	2301      	movs	r3, #1
 801df32:	fa03 f308 	lsl.w	r3, r3, r8
 801df36:	4a8a      	ldr	r2, [pc, #552]	; (801e160 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801df38:	3b01      	subs	r3, #1
 801df3a:	b2db      	uxtb	r3, r3
 801df3c:	8811      	ldrh	r1, [r2, #0]
 801df3e:	930e      	str	r3, [sp, #56]	; 0x38
 801df40:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801df44:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801df48:	fb01 2303 	mla	r3, r1, r3, r2
 801df4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801df50:	930a      	str	r3, [sp, #40]	; 0x28
 801df52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df54:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801df58:	9313      	str	r3, [sp, #76]	; 0x4c
 801df5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df5c:	0a19      	lsrs	r1, r3, #8
 801df5e:	b2cb      	uxtb	r3, r1
 801df60:	9312      	str	r3, [sp, #72]	; 0x48
 801df62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df64:	b2db      	uxtb	r3, r3
 801df66:	9311      	str	r3, [sp, #68]	; 0x44
 801df68:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df6a:	095a      	lsrs	r2, r3, #5
 801df6c:	4b7d      	ldr	r3, [pc, #500]	; (801e164 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801df6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df72:	400b      	ands	r3, r1
 801df74:	4313      	orrs	r3, r2
 801df76:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801df78:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801df7c:	4313      	orrs	r3, r2
 801df7e:	b29b      	uxth	r3, r3
 801df80:	9310      	str	r3, [sp, #64]	; 0x40
 801df82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801df84:	781a      	ldrb	r2, [r3, #0]
 801df86:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801df8a:	4132      	asrs	r2, r6
 801df8c:	fb05 b919 	mls	r9, r5, r9, fp
 801df90:	fb03 fb05 	mul.w	fp, r3, r5
 801df94:	b2d2      	uxtb	r2, r2
 801df96:	930d      	str	r3, [sp, #52]	; 0x34
 801df98:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801df9c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dfa0:	f0c0 80f5 	bcc.w	801e18e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801dfa4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801dfa8:	46ae      	mov	lr, r5
 801dfaa:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dfae:	f0c0 80dd 	bcc.w	801e16c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dfb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dfb4:	4013      	ands	r3, r2
 801dfb6:	d055      	beq.n	801e064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801dfb8:	20ff      	movs	r0, #255	; 0xff
 801dfba:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dfbc:	fb90 f1f1 	sdiv	r1, r0, r1
 801dfc0:	434b      	muls	r3, r1
 801dfc2:	2bfe      	cmp	r3, #254	; 0xfe
 801dfc4:	dd03      	ble.n	801dfce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801dfc6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dfc8:	4281      	cmp	r1, r0
 801dfca:	f000 80cd 	beq.w	801e168 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801dfce:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dfd0:	f8bc 4000 	ldrh.w	r4, [ip]
 801dfd4:	fb11 f303 	smulbb	r3, r1, r3
 801dfd8:	b29b      	uxth	r3, r3
 801dfda:	1c59      	adds	r1, r3, #1
 801dfdc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dfe0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dfe4:	b29f      	uxth	r7, r3
 801dfe6:	43db      	mvns	r3, r3
 801dfe8:	b2db      	uxtb	r3, r3
 801dfea:	9309      	str	r3, [sp, #36]	; 0x24
 801dfec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dfee:	1220      	asrs	r0, r4, #8
 801dff0:	fb13 f907 	smulbb	r9, r3, r7
 801dff4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dff8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dffa:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dffe:	fb00 9003 	mla	r0, r0, r3, r9
 801e002:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e004:	10e1      	asrs	r1, r4, #3
 801e006:	fb13 f907 	smulbb	r9, r3, r7
 801e00a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e00e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e010:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e014:	fb01 9103 	mla	r1, r1, r3, r9
 801e018:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e01a:	00e4      	lsls	r4, r4, #3
 801e01c:	fb13 f707 	smulbb	r7, r3, r7
 801e020:	b2e4      	uxtb	r4, r4
 801e022:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e024:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e028:	fb04 7403 	mla	r4, r4, r3, r7
 801e02c:	b280      	uxth	r0, r0
 801e02e:	b2a4      	uxth	r4, r4
 801e030:	1c43      	adds	r3, r0, #1
 801e032:	f104 0901 	add.w	r9, r4, #1
 801e036:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e03a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e03e:	b289      	uxth	r1, r1
 801e040:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e044:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e048:	ea49 0000 	orr.w	r0, r9, r0
 801e04c:	f101 0901 	add.w	r9, r1, #1
 801e050:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e054:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e058:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e05c:	ea40 0009 	orr.w	r0, r0, r9
 801e060:	f8ac 0000 	strh.w	r0, [ip]
 801e064:	4446      	add	r6, r8
 801e066:	b2b6      	uxth	r6, r6
 801e068:	2e07      	cmp	r6, #7
 801e06a:	bf81      	itttt	hi
 801e06c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801e06e:	785a      	ldrbhi	r2, [r3, #1]
 801e070:	3301      	addhi	r3, #1
 801e072:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801e074:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e076:	bf9a      	itte	ls
 801e078:	fa42 f208 	asrls.w	r2, r2, r8
 801e07c:	b2d2      	uxtbls	r2, r2
 801e07e:	2600      	movhi	r6, #0
 801e080:	449c      	add	ip, r3
 801e082:	e792      	b.n	801dfaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801e084:	441c      	add	r4, r3
 801e086:	b224      	sxth	r4, r4
 801e088:	e6d5      	b.n	801de36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e08a:	f1ba 0f01 	cmp.w	sl, #1
 801e08e:	f47f af0c 	bne.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e092:	f1bb 0f01 	cmp.w	fp, #1
 801e096:	f47f af08 	bne.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e09a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801e15c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e09e:	f8db 0000 	ldr.w	r0, [fp]
 801e0a2:	6803      	ldr	r3, [r0, #0]
 801e0a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e0a6:	4798      	blx	r3
 801e0a8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801e0ac:	465a      	mov	r2, fp
 801e0ae:	d006      	beq.n	801e0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e0b0:	f1b8 0f04 	cmp.w	r8, #4
 801e0b4:	d140      	bne.n	801e138 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801e0b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e0b8:	3300      	adds	r3, #0
 801e0ba:	bf18      	it	ne
 801e0bc:	2301      	movne	r3, #1
 801e0be:	0580      	lsls	r0, r0, #22
 801e0c0:	d56e      	bpl.n	801e1a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e0c2:	f1b8 0f08 	cmp.w	r8, #8
 801e0c6:	d16b      	bne.n	801e1a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e0c8:	2b00      	cmp	r3, #0
 801e0ca:	bf0c      	ite	eq
 801e0cc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801e0d0:	f44f 7180 	movne.w	r1, #256	; 0x100
 801e0d4:	2d00      	cmp	r5, #0
 801e0d6:	f47f aee8 	bne.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0da:	2e00      	cmp	r6, #0
 801e0dc:	f47f aee5 	bne.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0e0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e0e2:	19e3      	adds	r3, r4, r7
 801e0e4:	4283      	cmp	r3, r0
 801e0e6:	f73f aee0 	bgt.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e0ec:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e0ee:	444b      	add	r3, r9
 801e0f0:	4283      	cmp	r3, r0
 801e0f2:	f73f aeda 	bgt.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0f6:	6810      	ldr	r0, [r2, #0]
 801e0f8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801e0fc:	6804      	ldr	r4, [r0, #0]
 801e0fe:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e102:	b2bf      	uxth	r7, r7
 801e104:	f1b8 0f08 	cmp.w	r8, #8
 801e108:	f04f 0500 	mov.w	r5, #0
 801e10c:	bf18      	it	ne
 801e10e:	3701      	addne	r7, #1
 801e110:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e114:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e116:	9104      	str	r1, [sp, #16]
 801e118:	bf18      	it	ne
 801e11a:	f027 0701 	bicne.w	r7, r7, #1
 801e11e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e120:	bf18      	it	ne
 801e122:	b2bf      	uxthne	r7, r7
 801e124:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801e128:	e9cd 7900 	strd	r7, r9, [sp]
 801e12c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e12e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801e130:	47a0      	blx	r4
 801e132:	b019      	add	sp, #100	; 0x64
 801e134:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e138:	2300      	movs	r3, #0
 801e13a:	e7c0      	b.n	801e0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e13c:	2208      	movs	r2, #8
 801e13e:	fb92 f3f8 	sdiv	r3, r2, r8
 801e142:	1e5a      	subs	r2, r3, #1
 801e144:	443a      	add	r2, r7
 801e146:	fb92 f2f3 	sdiv	r2, r2, r3
 801e14a:	fb12 f203 	smulbb	r2, r2, r3
 801e14e:	b292      	uxth	r2, r2
 801e150:	e6b0      	b.n	801deb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e152:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e154:	e6ec      	b.n	801df30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e156:	bf00      	nop
 801e158:	20012e6c 	.word	0x20012e6c
 801e15c:	20012e74 	.word	0x20012e74
 801e160:	20012e6e 	.word	0x20012e6e
 801e164:	00fff800 	.word	0x00fff800
 801e168:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e16a:	e779      	b.n	801e060 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e16c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e16e:	b153      	cbz	r3, 801e186 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e170:	441e      	add	r6, r3
 801e172:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e174:	b2b6      	uxth	r6, r6
 801e176:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e17a:	f006 0607 	and.w	r6, r6, #7
 801e17e:	781a      	ldrb	r2, [r3, #0]
 801e180:	9328      	str	r3, [sp, #160]	; 0xa0
 801e182:	4132      	asrs	r2, r6
 801e184:	b2d2      	uxtb	r2, r2
 801e186:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e188:	445b      	add	r3, fp
 801e18a:	930a      	str	r3, [sp, #40]	; 0x28
 801e18c:	e706      	b.n	801df9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e18e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e190:	2b00      	cmp	r3, #0
 801e192:	d1ce      	bne.n	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e194:	4b05      	ldr	r3, [pc, #20]	; (801e1ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e196:	6818      	ldr	r0, [r3, #0]
 801e198:	6803      	ldr	r3, [r0, #0]
 801e19a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e19c:	4798      	blx	r3
 801e19e:	e7c8      	b.n	801e132 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e1a0:	2b00      	cmp	r3, #0
 801e1a2:	f43f ae82 	beq.w	801deaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e1a6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801e1aa:	e793      	b.n	801e0d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e1ac:	20012e74 	.word	0x20012e74

0801e1b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e1b0:	b538      	push	{r3, r4, r5, lr}
 801e1b2:	4c15      	ldr	r4, [pc, #84]	; (801e208 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e1b4:	7823      	ldrb	r3, [r4, #0]
 801e1b6:	f3bf 8f5b 	dmb	ish
 801e1ba:	07da      	lsls	r2, r3, #31
 801e1bc:	4605      	mov	r5, r0
 801e1be:	d40b      	bmi.n	801e1d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e1c0:	4620      	mov	r0, r4
 801e1c2:	f00a fee2 	bl	8028f8a <__cxa_guard_acquire>
 801e1c6:	b138      	cbz	r0, 801e1d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e1c8:	4620      	mov	r0, r4
 801e1ca:	f00a feea 	bl	8028fa2 <__cxa_guard_release>
 801e1ce:	4a0f      	ldr	r2, [pc, #60]	; (801e20c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e1d0:	490f      	ldr	r1, [pc, #60]	; (801e210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e1d2:	4810      	ldr	r0, [pc, #64]	; (801e214 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e1d4:	f00a fed2 	bl	8028f7c <__aeabi_atexit>
 801e1d8:	4c0f      	ldr	r4, [pc, #60]	; (801e218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e1da:	7823      	ldrb	r3, [r4, #0]
 801e1dc:	f3bf 8f5b 	dmb	ish
 801e1e0:	07db      	lsls	r3, r3, #31
 801e1e2:	d40b      	bmi.n	801e1fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e1e4:	4620      	mov	r0, r4
 801e1e6:	f00a fed0 	bl	8028f8a <__cxa_guard_acquire>
 801e1ea:	b138      	cbz	r0, 801e1fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e1ec:	4620      	mov	r0, r4
 801e1ee:	f00a fed8 	bl	8028fa2 <__cxa_guard_release>
 801e1f2:	4a06      	ldr	r2, [pc, #24]	; (801e20c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e1f4:	4909      	ldr	r1, [pc, #36]	; (801e21c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e1f6:	480a      	ldr	r0, [pc, #40]	; (801e220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e1f8:	f00a fec0 	bl	8028f7c <__aeabi_atexit>
 801e1fc:	4b05      	ldr	r3, [pc, #20]	; (801e214 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e1fe:	612b      	str	r3, [r5, #16]
 801e200:	4b07      	ldr	r3, [pc, #28]	; (801e220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e202:	616b      	str	r3, [r5, #20]
 801e204:	bd38      	pop	{r3, r4, r5, pc}
 801e206:	bf00      	nop
 801e208:	20012f54 	.word	0x20012f54
 801e20c:	20000000 	.word	0x20000000
 801e210:	0801afb3 	.word	0x0801afb3
 801e214:	200000d4 	.word	0x200000d4
 801e218:	20012f58 	.word	0x20012f58
 801e21c:	0801afb1 	.word	0x0801afb1
 801e220:	200000d8 	.word	0x200000d8

0801e224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e224:	b538      	push	{r3, r4, r5, lr}
 801e226:	4c15      	ldr	r4, [pc, #84]	; (801e27c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e228:	7823      	ldrb	r3, [r4, #0]
 801e22a:	f3bf 8f5b 	dmb	ish
 801e22e:	07da      	lsls	r2, r3, #31
 801e230:	4605      	mov	r5, r0
 801e232:	d40b      	bmi.n	801e24c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e234:	4620      	mov	r0, r4
 801e236:	f00a fea8 	bl	8028f8a <__cxa_guard_acquire>
 801e23a:	b138      	cbz	r0, 801e24c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e23c:	4620      	mov	r0, r4
 801e23e:	f00a feb0 	bl	8028fa2 <__cxa_guard_release>
 801e242:	4a0f      	ldr	r2, [pc, #60]	; (801e280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e244:	490f      	ldr	r1, [pc, #60]	; (801e284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e246:	4810      	ldr	r0, [pc, #64]	; (801e288 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e248:	f00a fe98 	bl	8028f7c <__aeabi_atexit>
 801e24c:	4c0f      	ldr	r4, [pc, #60]	; (801e28c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e24e:	7823      	ldrb	r3, [r4, #0]
 801e250:	f3bf 8f5b 	dmb	ish
 801e254:	07db      	lsls	r3, r3, #31
 801e256:	d40b      	bmi.n	801e270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e258:	4620      	mov	r0, r4
 801e25a:	f00a fe96 	bl	8028f8a <__cxa_guard_acquire>
 801e25e:	b138      	cbz	r0, 801e270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e260:	4620      	mov	r0, r4
 801e262:	f00a fe9e 	bl	8028fa2 <__cxa_guard_release>
 801e266:	4a06      	ldr	r2, [pc, #24]	; (801e280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e268:	4909      	ldr	r1, [pc, #36]	; (801e290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e26a:	480a      	ldr	r0, [pc, #40]	; (801e294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e26c:	f00a fe86 	bl	8028f7c <__aeabi_atexit>
 801e270:	4b05      	ldr	r3, [pc, #20]	; (801e288 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e272:	60ab      	str	r3, [r5, #8]
 801e274:	4b07      	ldr	r3, [pc, #28]	; (801e294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e276:	60eb      	str	r3, [r5, #12]
 801e278:	bd38      	pop	{r3, r4, r5, pc}
 801e27a:	bf00      	nop
 801e27c:	20012f2c 	.word	0x20012f2c
 801e280:	20000000 	.word	0x20000000
 801e284:	0801afb7 	.word	0x0801afb7
 801e288:	200000ac 	.word	0x200000ac
 801e28c:	20012f30 	.word	0x20012f30
 801e290:	0801afb5 	.word	0x0801afb5
 801e294:	200000b0 	.word	0x200000b0

0801e298 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e298:	b510      	push	{r4, lr}
 801e29a:	4604      	mov	r4, r0
 801e29c:	f7ff ff88 	bl	801e1b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e2a0:	4620      	mov	r0, r4
 801e2a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e2a6:	f7ff bfbd 	b.w	801e224 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e2ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e2ac:	b538      	push	{r3, r4, r5, lr}
 801e2ae:	4c15      	ldr	r4, [pc, #84]	; (801e304 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e2b0:	7823      	ldrb	r3, [r4, #0]
 801e2b2:	f3bf 8f5b 	dmb	ish
 801e2b6:	07da      	lsls	r2, r3, #31
 801e2b8:	4605      	mov	r5, r0
 801e2ba:	d40b      	bmi.n	801e2d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e2bc:	4620      	mov	r0, r4
 801e2be:	f00a fe64 	bl	8028f8a <__cxa_guard_acquire>
 801e2c2:	b138      	cbz	r0, 801e2d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e2c4:	4620      	mov	r0, r4
 801e2c6:	f00a fe6c 	bl	8028fa2 <__cxa_guard_release>
 801e2ca:	4a0f      	ldr	r2, [pc, #60]	; (801e308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e2cc:	490f      	ldr	r1, [pc, #60]	; (801e30c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e2ce:	4810      	ldr	r0, [pc, #64]	; (801e310 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e2d0:	f00a fe54 	bl	8028f7c <__aeabi_atexit>
 801e2d4:	4c0f      	ldr	r4, [pc, #60]	; (801e314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e2d6:	7823      	ldrb	r3, [r4, #0]
 801e2d8:	f3bf 8f5b 	dmb	ish
 801e2dc:	07db      	lsls	r3, r3, #31
 801e2de:	d40b      	bmi.n	801e2f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e2e0:	4620      	mov	r0, r4
 801e2e2:	f00a fe52 	bl	8028f8a <__cxa_guard_acquire>
 801e2e6:	b138      	cbz	r0, 801e2f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e2e8:	4620      	mov	r0, r4
 801e2ea:	f00a fe5a 	bl	8028fa2 <__cxa_guard_release>
 801e2ee:	4a06      	ldr	r2, [pc, #24]	; (801e308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e2f0:	4909      	ldr	r1, [pc, #36]	; (801e318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e2f2:	480a      	ldr	r0, [pc, #40]	; (801e31c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e2f4:	f00a fe42 	bl	8028f7c <__aeabi_atexit>
 801e2f8:	4b05      	ldr	r3, [pc, #20]	; (801e310 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e2fa:	622b      	str	r3, [r5, #32]
 801e2fc:	4b07      	ldr	r3, [pc, #28]	; (801e31c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e2fe:	626b      	str	r3, [r5, #36]	; 0x24
 801e300:	bd38      	pop	{r3, r4, r5, pc}
 801e302:	bf00      	nop
 801e304:	20012f5c 	.word	0x20012f5c
 801e308:	20000000 	.word	0x20000000
 801e30c:	0801afab 	.word	0x0801afab
 801e310:	200000dc 	.word	0x200000dc
 801e314:	20012f60 	.word	0x20012f60
 801e318:	0801afa9 	.word	0x0801afa9
 801e31c:	200000e0 	.word	0x200000e0

0801e320 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e320:	b538      	push	{r3, r4, r5, lr}
 801e322:	4c15      	ldr	r4, [pc, #84]	; (801e378 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e324:	7823      	ldrb	r3, [r4, #0]
 801e326:	f3bf 8f5b 	dmb	ish
 801e32a:	07da      	lsls	r2, r3, #31
 801e32c:	4605      	mov	r5, r0
 801e32e:	d40b      	bmi.n	801e348 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e330:	4620      	mov	r0, r4
 801e332:	f00a fe2a 	bl	8028f8a <__cxa_guard_acquire>
 801e336:	b138      	cbz	r0, 801e348 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e338:	4620      	mov	r0, r4
 801e33a:	f00a fe32 	bl	8028fa2 <__cxa_guard_release>
 801e33e:	4a0f      	ldr	r2, [pc, #60]	; (801e37c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e340:	490f      	ldr	r1, [pc, #60]	; (801e380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e342:	4810      	ldr	r0, [pc, #64]	; (801e384 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e344:	f00a fe1a 	bl	8028f7c <__aeabi_atexit>
 801e348:	4c0f      	ldr	r4, [pc, #60]	; (801e388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e34a:	7823      	ldrb	r3, [r4, #0]
 801e34c:	f3bf 8f5b 	dmb	ish
 801e350:	07db      	lsls	r3, r3, #31
 801e352:	d40b      	bmi.n	801e36c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e354:	4620      	mov	r0, r4
 801e356:	f00a fe18 	bl	8028f8a <__cxa_guard_acquire>
 801e35a:	b138      	cbz	r0, 801e36c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e35c:	4620      	mov	r0, r4
 801e35e:	f00a fe20 	bl	8028fa2 <__cxa_guard_release>
 801e362:	4a06      	ldr	r2, [pc, #24]	; (801e37c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e364:	4909      	ldr	r1, [pc, #36]	; (801e38c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e366:	480a      	ldr	r0, [pc, #40]	; (801e390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e368:	f00a fe08 	bl	8028f7c <__aeabi_atexit>
 801e36c:	4b05      	ldr	r3, [pc, #20]	; (801e384 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e36e:	61ab      	str	r3, [r5, #24]
 801e370:	4b07      	ldr	r3, [pc, #28]	; (801e390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e372:	61eb      	str	r3, [r5, #28]
 801e374:	bd38      	pop	{r3, r4, r5, pc}
 801e376:	bf00      	nop
 801e378:	20012f34 	.word	0x20012f34
 801e37c:	20000000 	.word	0x20000000
 801e380:	0801afaf 	.word	0x0801afaf
 801e384:	200000b4 	.word	0x200000b4
 801e388:	20012f38 	.word	0x20012f38
 801e38c:	0801afad 	.word	0x0801afad
 801e390:	200000b8 	.word	0x200000b8

0801e394 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e394:	b510      	push	{r4, lr}
 801e396:	4604      	mov	r4, r0
 801e398:	f7ff ff88 	bl	801e2ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e39c:	4620      	mov	r0, r4
 801e39e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e3a2:	f7ff bfbd 	b.w	801e320 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e3a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e3a8:	b538      	push	{r3, r4, r5, lr}
 801e3aa:	4c15      	ldr	r4, [pc, #84]	; (801e400 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e3ac:	7823      	ldrb	r3, [r4, #0]
 801e3ae:	f3bf 8f5b 	dmb	ish
 801e3b2:	07da      	lsls	r2, r3, #31
 801e3b4:	4605      	mov	r5, r0
 801e3b6:	d40b      	bmi.n	801e3d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e3b8:	4620      	mov	r0, r4
 801e3ba:	f00a fde6 	bl	8028f8a <__cxa_guard_acquire>
 801e3be:	b138      	cbz	r0, 801e3d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e3c0:	4620      	mov	r0, r4
 801e3c2:	f00a fdee 	bl	8028fa2 <__cxa_guard_release>
 801e3c6:	4a0f      	ldr	r2, [pc, #60]	; (801e404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e3c8:	490f      	ldr	r1, [pc, #60]	; (801e408 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e3ca:	4810      	ldr	r0, [pc, #64]	; (801e40c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e3cc:	f00a fdd6 	bl	8028f7c <__aeabi_atexit>
 801e3d0:	4c0f      	ldr	r4, [pc, #60]	; (801e410 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e3d2:	7823      	ldrb	r3, [r4, #0]
 801e3d4:	f3bf 8f5b 	dmb	ish
 801e3d8:	07db      	lsls	r3, r3, #31
 801e3da:	d40b      	bmi.n	801e3f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	f00a fdd4 	bl	8028f8a <__cxa_guard_acquire>
 801e3e2:	b138      	cbz	r0, 801e3f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e3e4:	4620      	mov	r0, r4
 801e3e6:	f00a fddc 	bl	8028fa2 <__cxa_guard_release>
 801e3ea:	4a06      	ldr	r2, [pc, #24]	; (801e404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e3ec:	4909      	ldr	r1, [pc, #36]	; (801e414 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e3ee:	480a      	ldr	r0, [pc, #40]	; (801e418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e3f0:	f00a fdc4 	bl	8028f7c <__aeabi_atexit>
 801e3f4:	4b05      	ldr	r3, [pc, #20]	; (801e40c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e3f6:	632b      	str	r3, [r5, #48]	; 0x30
 801e3f8:	4b07      	ldr	r3, [pc, #28]	; (801e418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e3fa:	636b      	str	r3, [r5, #52]	; 0x34
 801e3fc:	bd38      	pop	{r3, r4, r5, pc}
 801e3fe:	bf00      	nop
 801e400:	20012f6c 	.word	0x20012f6c
 801e404:	20000000 	.word	0x20000000
 801e408:	0801afa3 	.word	0x0801afa3
 801e40c:	200000ec 	.word	0x200000ec
 801e410:	20012f70 	.word	0x20012f70
 801e414:	0801afa1 	.word	0x0801afa1
 801e418:	200000f0 	.word	0x200000f0

0801e41c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e41c:	b538      	push	{r3, r4, r5, lr}
 801e41e:	4c15      	ldr	r4, [pc, #84]	; (801e474 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e420:	7823      	ldrb	r3, [r4, #0]
 801e422:	f3bf 8f5b 	dmb	ish
 801e426:	07da      	lsls	r2, r3, #31
 801e428:	4605      	mov	r5, r0
 801e42a:	d40b      	bmi.n	801e444 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e42c:	4620      	mov	r0, r4
 801e42e:	f00a fdac 	bl	8028f8a <__cxa_guard_acquire>
 801e432:	b138      	cbz	r0, 801e444 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e434:	4620      	mov	r0, r4
 801e436:	f00a fdb4 	bl	8028fa2 <__cxa_guard_release>
 801e43a:	4a0f      	ldr	r2, [pc, #60]	; (801e478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e43c:	490f      	ldr	r1, [pc, #60]	; (801e47c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e43e:	4810      	ldr	r0, [pc, #64]	; (801e480 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e440:	f00a fd9c 	bl	8028f7c <__aeabi_atexit>
 801e444:	4c0f      	ldr	r4, [pc, #60]	; (801e484 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e446:	7823      	ldrb	r3, [r4, #0]
 801e448:	f3bf 8f5b 	dmb	ish
 801e44c:	07db      	lsls	r3, r3, #31
 801e44e:	d40b      	bmi.n	801e468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e450:	4620      	mov	r0, r4
 801e452:	f00a fd9a 	bl	8028f8a <__cxa_guard_acquire>
 801e456:	b138      	cbz	r0, 801e468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e458:	4620      	mov	r0, r4
 801e45a:	f00a fda2 	bl	8028fa2 <__cxa_guard_release>
 801e45e:	4a06      	ldr	r2, [pc, #24]	; (801e478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e460:	4909      	ldr	r1, [pc, #36]	; (801e488 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e462:	480a      	ldr	r0, [pc, #40]	; (801e48c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e464:	f00a fd8a 	bl	8028f7c <__aeabi_atexit>
 801e468:	4b05      	ldr	r3, [pc, #20]	; (801e480 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e46a:	62ab      	str	r3, [r5, #40]	; 0x28
 801e46c:	4b07      	ldr	r3, [pc, #28]	; (801e48c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e46e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e470:	bd38      	pop	{r3, r4, r5, pc}
 801e472:	bf00      	nop
 801e474:	20012f3c 	.word	0x20012f3c
 801e478:	20000000 	.word	0x20000000
 801e47c:	0801afa7 	.word	0x0801afa7
 801e480:	200000bc 	.word	0x200000bc
 801e484:	20012f40 	.word	0x20012f40
 801e488:	0801afa5 	.word	0x0801afa5
 801e48c:	200000c0 	.word	0x200000c0

0801e490 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e490:	b510      	push	{r4, lr}
 801e492:	4604      	mov	r4, r0
 801e494:	f7ff ff88 	bl	801e3a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e498:	4620      	mov	r0, r4
 801e49a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e49e:	f7ff bfbd 	b.w	801e41c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e4a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e4a4:	b538      	push	{r3, r4, r5, lr}
 801e4a6:	4c15      	ldr	r4, [pc, #84]	; (801e4fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e4a8:	7823      	ldrb	r3, [r4, #0]
 801e4aa:	f3bf 8f5b 	dmb	ish
 801e4ae:	07da      	lsls	r2, r3, #31
 801e4b0:	4605      	mov	r5, r0
 801e4b2:	d40b      	bmi.n	801e4cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e4b4:	4620      	mov	r0, r4
 801e4b6:	f00a fd68 	bl	8028f8a <__cxa_guard_acquire>
 801e4ba:	b138      	cbz	r0, 801e4cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e4bc:	4620      	mov	r0, r4
 801e4be:	f00a fd70 	bl	8028fa2 <__cxa_guard_release>
 801e4c2:	4a0f      	ldr	r2, [pc, #60]	; (801e500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e4c4:	490f      	ldr	r1, [pc, #60]	; (801e504 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e4c6:	4810      	ldr	r0, [pc, #64]	; (801e508 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e4c8:	f00a fd58 	bl	8028f7c <__aeabi_atexit>
 801e4cc:	4c0f      	ldr	r4, [pc, #60]	; (801e50c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e4ce:	7823      	ldrb	r3, [r4, #0]
 801e4d0:	f3bf 8f5b 	dmb	ish
 801e4d4:	07db      	lsls	r3, r3, #31
 801e4d6:	d40b      	bmi.n	801e4f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e4d8:	4620      	mov	r0, r4
 801e4da:	f00a fd56 	bl	8028f8a <__cxa_guard_acquire>
 801e4de:	b138      	cbz	r0, 801e4f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e4e0:	4620      	mov	r0, r4
 801e4e2:	f00a fd5e 	bl	8028fa2 <__cxa_guard_release>
 801e4e6:	4a06      	ldr	r2, [pc, #24]	; (801e500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e4e8:	4909      	ldr	r1, [pc, #36]	; (801e510 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e4ea:	480a      	ldr	r0, [pc, #40]	; (801e514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e4ec:	f00a fd46 	bl	8028f7c <__aeabi_atexit>
 801e4f0:	4b05      	ldr	r3, [pc, #20]	; (801e508 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e4f2:	652b      	str	r3, [r5, #80]	; 0x50
 801e4f4:	4b07      	ldr	r3, [pc, #28]	; (801e514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e4f6:	656b      	str	r3, [r5, #84]	; 0x54
 801e4f8:	bd38      	pop	{r3, r4, r5, pc}
 801e4fa:	bf00      	nop
 801e4fc:	20012f74 	.word	0x20012f74
 801e500:	20000000 	.word	0x20000000
 801e504:	0801af93 	.word	0x0801af93
 801e508:	200000f4 	.word	0x200000f4
 801e50c:	20012f78 	.word	0x20012f78
 801e510:	0801af91 	.word	0x0801af91
 801e514:	200000f8 	.word	0x200000f8

0801e518 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e518:	b538      	push	{r3, r4, r5, lr}
 801e51a:	4c15      	ldr	r4, [pc, #84]	; (801e570 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e51c:	7823      	ldrb	r3, [r4, #0]
 801e51e:	f3bf 8f5b 	dmb	ish
 801e522:	07da      	lsls	r2, r3, #31
 801e524:	4605      	mov	r5, r0
 801e526:	d40b      	bmi.n	801e540 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e528:	4620      	mov	r0, r4
 801e52a:	f00a fd2e 	bl	8028f8a <__cxa_guard_acquire>
 801e52e:	b138      	cbz	r0, 801e540 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e530:	4620      	mov	r0, r4
 801e532:	f00a fd36 	bl	8028fa2 <__cxa_guard_release>
 801e536:	4a0f      	ldr	r2, [pc, #60]	; (801e574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e538:	490f      	ldr	r1, [pc, #60]	; (801e578 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e53a:	4810      	ldr	r0, [pc, #64]	; (801e57c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e53c:	f00a fd1e 	bl	8028f7c <__aeabi_atexit>
 801e540:	4c0f      	ldr	r4, [pc, #60]	; (801e580 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e542:	7823      	ldrb	r3, [r4, #0]
 801e544:	f3bf 8f5b 	dmb	ish
 801e548:	07db      	lsls	r3, r3, #31
 801e54a:	d40b      	bmi.n	801e564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e54c:	4620      	mov	r0, r4
 801e54e:	f00a fd1c 	bl	8028f8a <__cxa_guard_acquire>
 801e552:	b138      	cbz	r0, 801e564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e554:	4620      	mov	r0, r4
 801e556:	f00a fd24 	bl	8028fa2 <__cxa_guard_release>
 801e55a:	4a06      	ldr	r2, [pc, #24]	; (801e574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e55c:	4909      	ldr	r1, [pc, #36]	; (801e584 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e55e:	480a      	ldr	r0, [pc, #40]	; (801e588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e560:	f00a fd0c 	bl	8028f7c <__aeabi_atexit>
 801e564:	4b05      	ldr	r3, [pc, #20]	; (801e57c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e566:	64ab      	str	r3, [r5, #72]	; 0x48
 801e568:	4b07      	ldr	r3, [pc, #28]	; (801e588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e56a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e56c:	bd38      	pop	{r3, r4, r5, pc}
 801e56e:	bf00      	nop
 801e570:	20012f7c 	.word	0x20012f7c
 801e574:	20000000 	.word	0x20000000
 801e578:	0801af97 	.word	0x0801af97
 801e57c:	200000fc 	.word	0x200000fc
 801e580:	20012f80 	.word	0x20012f80
 801e584:	0801af95 	.word	0x0801af95
 801e588:	20000100 	.word	0x20000100

0801e58c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e58c:	b538      	push	{r3, r4, r5, lr}
 801e58e:	4c15      	ldr	r4, [pc, #84]	; (801e5e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e590:	7823      	ldrb	r3, [r4, #0]
 801e592:	f3bf 8f5b 	dmb	ish
 801e596:	07da      	lsls	r2, r3, #31
 801e598:	4605      	mov	r5, r0
 801e59a:	d40b      	bmi.n	801e5b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e59c:	4620      	mov	r0, r4
 801e59e:	f00a fcf4 	bl	8028f8a <__cxa_guard_acquire>
 801e5a2:	b138      	cbz	r0, 801e5b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e5a4:	4620      	mov	r0, r4
 801e5a6:	f00a fcfc 	bl	8028fa2 <__cxa_guard_release>
 801e5aa:	4a0f      	ldr	r2, [pc, #60]	; (801e5e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e5ac:	490f      	ldr	r1, [pc, #60]	; (801e5ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e5ae:	4810      	ldr	r0, [pc, #64]	; (801e5f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e5b0:	f00a fce4 	bl	8028f7c <__aeabi_atexit>
 801e5b4:	4c0f      	ldr	r4, [pc, #60]	; (801e5f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e5b6:	7823      	ldrb	r3, [r4, #0]
 801e5b8:	f3bf 8f5b 	dmb	ish
 801e5bc:	07db      	lsls	r3, r3, #31
 801e5be:	d40b      	bmi.n	801e5d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e5c0:	4620      	mov	r0, r4
 801e5c2:	f00a fce2 	bl	8028f8a <__cxa_guard_acquire>
 801e5c6:	b138      	cbz	r0, 801e5d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e5c8:	4620      	mov	r0, r4
 801e5ca:	f00a fcea 	bl	8028fa2 <__cxa_guard_release>
 801e5ce:	4a06      	ldr	r2, [pc, #24]	; (801e5e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e5d0:	4909      	ldr	r1, [pc, #36]	; (801e5f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e5d2:	480a      	ldr	r0, [pc, #40]	; (801e5fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e5d4:	f00a fcd2 	bl	8028f7c <__aeabi_atexit>
 801e5d8:	4b05      	ldr	r3, [pc, #20]	; (801e5f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e5da:	642b      	str	r3, [r5, #64]	; 0x40
 801e5dc:	4b07      	ldr	r3, [pc, #28]	; (801e5fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e5de:	646b      	str	r3, [r5, #68]	; 0x44
 801e5e0:	bd38      	pop	{r3, r4, r5, pc}
 801e5e2:	bf00      	nop
 801e5e4:	20012f44 	.word	0x20012f44
 801e5e8:	20000000 	.word	0x20000000
 801e5ec:	0801af9b 	.word	0x0801af9b
 801e5f0:	200000c4 	.word	0x200000c4
 801e5f4:	20012f48 	.word	0x20012f48
 801e5f8:	0801af99 	.word	0x0801af99
 801e5fc:	200000c8 	.word	0x200000c8

0801e600 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e600:	b538      	push	{r3, r4, r5, lr}
 801e602:	4c15      	ldr	r4, [pc, #84]	; (801e658 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e604:	7823      	ldrb	r3, [r4, #0]
 801e606:	f3bf 8f5b 	dmb	ish
 801e60a:	07da      	lsls	r2, r3, #31
 801e60c:	4605      	mov	r5, r0
 801e60e:	d40b      	bmi.n	801e628 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e610:	4620      	mov	r0, r4
 801e612:	f00a fcba 	bl	8028f8a <__cxa_guard_acquire>
 801e616:	b138      	cbz	r0, 801e628 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e618:	4620      	mov	r0, r4
 801e61a:	f00a fcc2 	bl	8028fa2 <__cxa_guard_release>
 801e61e:	4a0f      	ldr	r2, [pc, #60]	; (801e65c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e620:	490f      	ldr	r1, [pc, #60]	; (801e660 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e622:	4810      	ldr	r0, [pc, #64]	; (801e664 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e624:	f00a fcaa 	bl	8028f7c <__aeabi_atexit>
 801e628:	4c0f      	ldr	r4, [pc, #60]	; (801e668 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e62a:	7823      	ldrb	r3, [r4, #0]
 801e62c:	f3bf 8f5b 	dmb	ish
 801e630:	07db      	lsls	r3, r3, #31
 801e632:	d40b      	bmi.n	801e64c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e634:	4620      	mov	r0, r4
 801e636:	f00a fca8 	bl	8028f8a <__cxa_guard_acquire>
 801e63a:	b138      	cbz	r0, 801e64c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e63c:	4620      	mov	r0, r4
 801e63e:	f00a fcb0 	bl	8028fa2 <__cxa_guard_release>
 801e642:	4a06      	ldr	r2, [pc, #24]	; (801e65c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e644:	4909      	ldr	r1, [pc, #36]	; (801e66c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e646:	480a      	ldr	r0, [pc, #40]	; (801e670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e648:	f00a fc98 	bl	8028f7c <__aeabi_atexit>
 801e64c:	4b05      	ldr	r3, [pc, #20]	; (801e664 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e64e:	63ab      	str	r3, [r5, #56]	; 0x38
 801e650:	4b07      	ldr	r3, [pc, #28]	; (801e670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e652:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e654:	bd38      	pop	{r3, r4, r5, pc}
 801e656:	bf00      	nop
 801e658:	20012f64 	.word	0x20012f64
 801e65c:	20000000 	.word	0x20000000
 801e660:	0801af9f 	.word	0x0801af9f
 801e664:	200000e4 	.word	0x200000e4
 801e668:	20012f68 	.word	0x20012f68
 801e66c:	0801af9d 	.word	0x0801af9d
 801e670:	200000e8 	.word	0x200000e8

0801e674 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e674:	b510      	push	{r4, lr}
 801e676:	4604      	mov	r4, r0
 801e678:	f7ff ff14 	bl	801e4a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e67c:	4620      	mov	r0, r4
 801e67e:	f7ff ff85 	bl	801e58c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e682:	4620      	mov	r0, r4
 801e684:	f7ff ff48 	bl	801e518 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e688:	4620      	mov	r0, r4
 801e68a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e68e:	f7ff bfb7 	b.w	801e600 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e694 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e694:	b538      	push	{r3, r4, r5, lr}
 801e696:	4c15      	ldr	r4, [pc, #84]	; (801e6ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e698:	7823      	ldrb	r3, [r4, #0]
 801e69a:	f3bf 8f5b 	dmb	ish
 801e69e:	07da      	lsls	r2, r3, #31
 801e6a0:	4605      	mov	r5, r0
 801e6a2:	d40b      	bmi.n	801e6bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e6a4:	4620      	mov	r0, r4
 801e6a6:	f00a fc70 	bl	8028f8a <__cxa_guard_acquire>
 801e6aa:	b138      	cbz	r0, 801e6bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e6ac:	4620      	mov	r0, r4
 801e6ae:	f00a fc78 	bl	8028fa2 <__cxa_guard_release>
 801e6b2:	4a0f      	ldr	r2, [pc, #60]	; (801e6f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e6b4:	490f      	ldr	r1, [pc, #60]	; (801e6f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e6b6:	4810      	ldr	r0, [pc, #64]	; (801e6f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e6b8:	f00a fc60 	bl	8028f7c <__aeabi_atexit>
 801e6bc:	4c0f      	ldr	r4, [pc, #60]	; (801e6fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e6be:	7823      	ldrb	r3, [r4, #0]
 801e6c0:	f3bf 8f5b 	dmb	ish
 801e6c4:	07db      	lsls	r3, r3, #31
 801e6c6:	d40b      	bmi.n	801e6e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e6c8:	4620      	mov	r0, r4
 801e6ca:	f00a fc5e 	bl	8028f8a <__cxa_guard_acquire>
 801e6ce:	b138      	cbz	r0, 801e6e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e6d0:	4620      	mov	r0, r4
 801e6d2:	f00a fc66 	bl	8028fa2 <__cxa_guard_release>
 801e6d6:	4a06      	ldr	r2, [pc, #24]	; (801e6f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e6d8:	4909      	ldr	r1, [pc, #36]	; (801e700 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e6da:	480a      	ldr	r0, [pc, #40]	; (801e704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e6dc:	f00a fc4e 	bl	8028f7c <__aeabi_atexit>
 801e6e0:	4b05      	ldr	r3, [pc, #20]	; (801e6f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e6e2:	662b      	str	r3, [r5, #96]	; 0x60
 801e6e4:	4b07      	ldr	r3, [pc, #28]	; (801e704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e6e6:	666b      	str	r3, [r5, #100]	; 0x64
 801e6e8:	bd38      	pop	{r3, r4, r5, pc}
 801e6ea:	bf00      	nop
 801e6ec:	20012f4c 	.word	0x20012f4c
 801e6f0:	20000000 	.word	0x20000000
 801e6f4:	0801af8b 	.word	0x0801af8b
 801e6f8:	200000cc 	.word	0x200000cc
 801e6fc:	20012f50 	.word	0x20012f50
 801e700:	0801af89 	.word	0x0801af89
 801e704:	200000d0 	.word	0x200000d0

0801e708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e708:	b538      	push	{r3, r4, r5, lr}
 801e70a:	4c15      	ldr	r4, [pc, #84]	; (801e760 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e70c:	7823      	ldrb	r3, [r4, #0]
 801e70e:	f3bf 8f5b 	dmb	ish
 801e712:	07da      	lsls	r2, r3, #31
 801e714:	4605      	mov	r5, r0
 801e716:	d40b      	bmi.n	801e730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e718:	4620      	mov	r0, r4
 801e71a:	f00a fc36 	bl	8028f8a <__cxa_guard_acquire>
 801e71e:	b138      	cbz	r0, 801e730 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e720:	4620      	mov	r0, r4
 801e722:	f00a fc3e 	bl	8028fa2 <__cxa_guard_release>
 801e726:	4a0f      	ldr	r2, [pc, #60]	; (801e764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e728:	490f      	ldr	r1, [pc, #60]	; (801e768 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e72a:	4810      	ldr	r0, [pc, #64]	; (801e76c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e72c:	f00a fc26 	bl	8028f7c <__aeabi_atexit>
 801e730:	4c0f      	ldr	r4, [pc, #60]	; (801e770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e732:	7823      	ldrb	r3, [r4, #0]
 801e734:	f3bf 8f5b 	dmb	ish
 801e738:	07db      	lsls	r3, r3, #31
 801e73a:	d40b      	bmi.n	801e754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e73c:	4620      	mov	r0, r4
 801e73e:	f00a fc24 	bl	8028f8a <__cxa_guard_acquire>
 801e742:	b138      	cbz	r0, 801e754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e744:	4620      	mov	r0, r4
 801e746:	f00a fc2c 	bl	8028fa2 <__cxa_guard_release>
 801e74a:	4a06      	ldr	r2, [pc, #24]	; (801e764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e74c:	4909      	ldr	r1, [pc, #36]	; (801e774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e74e:	480a      	ldr	r0, [pc, #40]	; (801e778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e750:	f00a fc14 	bl	8028f7c <__aeabi_atexit>
 801e754:	4b05      	ldr	r3, [pc, #20]	; (801e76c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e756:	65ab      	str	r3, [r5, #88]	; 0x58
 801e758:	4b07      	ldr	r3, [pc, #28]	; (801e778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e75a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e75c:	bd38      	pop	{r3, r4, r5, pc}
 801e75e:	bf00      	nop
 801e760:	20012f24 	.word	0x20012f24
 801e764:	20000000 	.word	0x20000000
 801e768:	0801af8f 	.word	0x0801af8f
 801e76c:	200000a4 	.word	0x200000a4
 801e770:	20012f28 	.word	0x20012f28
 801e774:	0801af8d 	.word	0x0801af8d
 801e778:	200000a8 	.word	0x200000a8

0801e77c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e77c:	b510      	push	{r4, lr}
 801e77e:	4604      	mov	r4, r0
 801e780:	f7ff ff88 	bl	801e694 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e784:	4620      	mov	r0, r4
 801e786:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e78a:	f7ff bfbd 	b.w	801e708 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e790:	b538      	push	{r3, r4, r5, lr}
 801e792:	4c15      	ldr	r4, [pc, #84]	; (801e7e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e794:	7823      	ldrb	r3, [r4, #0]
 801e796:	f3bf 8f5b 	dmb	ish
 801e79a:	07da      	lsls	r2, r3, #31
 801e79c:	4605      	mov	r5, r0
 801e79e:	d40b      	bmi.n	801e7b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e7a0:	4620      	mov	r0, r4
 801e7a2:	f00a fbf2 	bl	8028f8a <__cxa_guard_acquire>
 801e7a6:	b138      	cbz	r0, 801e7b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e7a8:	4620      	mov	r0, r4
 801e7aa:	f00a fbfa 	bl	8028fa2 <__cxa_guard_release>
 801e7ae:	4a0f      	ldr	r2, [pc, #60]	; (801e7ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e7b0:	490f      	ldr	r1, [pc, #60]	; (801e7f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e7b2:	4810      	ldr	r0, [pc, #64]	; (801e7f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e7b4:	f00a fbe2 	bl	8028f7c <__aeabi_atexit>
 801e7b8:	4c0f      	ldr	r4, [pc, #60]	; (801e7f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e7ba:	7823      	ldrb	r3, [r4, #0]
 801e7bc:	f3bf 8f5b 	dmb	ish
 801e7c0:	07db      	lsls	r3, r3, #31
 801e7c2:	d40b      	bmi.n	801e7dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e7c4:	4620      	mov	r0, r4
 801e7c6:	f00a fbe0 	bl	8028f8a <__cxa_guard_acquire>
 801e7ca:	b138      	cbz	r0, 801e7dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e7cc:	4620      	mov	r0, r4
 801e7ce:	f00a fbe8 	bl	8028fa2 <__cxa_guard_release>
 801e7d2:	4a06      	ldr	r2, [pc, #24]	; (801e7ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e7d4:	4909      	ldr	r1, [pc, #36]	; (801e7fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e7d6:	480a      	ldr	r0, [pc, #40]	; (801e800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e7d8:	f00a fbd0 	bl	8028f7c <__aeabi_atexit>
 801e7dc:	4b05      	ldr	r3, [pc, #20]	; (801e7f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e7de:	672b      	str	r3, [r5, #112]	; 0x70
 801e7e0:	4b07      	ldr	r3, [pc, #28]	; (801e800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e7e2:	676b      	str	r3, [r5, #116]	; 0x74
 801e7e4:	bd38      	pop	{r3, r4, r5, pc}
 801e7e6:	bf00      	nop
 801e7e8:	20012f1c 	.word	0x20012f1c
 801e7ec:	20000000 	.word	0x20000000
 801e7f0:	0801af83 	.word	0x0801af83
 801e7f4:	2000009c 	.word	0x2000009c
 801e7f8:	20012f20 	.word	0x20012f20
 801e7fc:	0801af81 	.word	0x0801af81
 801e800:	200000a0 	.word	0x200000a0

0801e804 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e804:	b538      	push	{r3, r4, r5, lr}
 801e806:	4c15      	ldr	r4, [pc, #84]	; (801e85c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e808:	7823      	ldrb	r3, [r4, #0]
 801e80a:	f3bf 8f5b 	dmb	ish
 801e80e:	07da      	lsls	r2, r3, #31
 801e810:	4605      	mov	r5, r0
 801e812:	d40b      	bmi.n	801e82c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e814:	4620      	mov	r0, r4
 801e816:	f00a fbb8 	bl	8028f8a <__cxa_guard_acquire>
 801e81a:	b138      	cbz	r0, 801e82c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e81c:	4620      	mov	r0, r4
 801e81e:	f00a fbc0 	bl	8028fa2 <__cxa_guard_release>
 801e822:	4a0f      	ldr	r2, [pc, #60]	; (801e860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e824:	490f      	ldr	r1, [pc, #60]	; (801e864 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e826:	4810      	ldr	r0, [pc, #64]	; (801e868 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e828:	f00a fba8 	bl	8028f7c <__aeabi_atexit>
 801e82c:	4c0f      	ldr	r4, [pc, #60]	; (801e86c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e82e:	7823      	ldrb	r3, [r4, #0]
 801e830:	f3bf 8f5b 	dmb	ish
 801e834:	07db      	lsls	r3, r3, #31
 801e836:	d40b      	bmi.n	801e850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e838:	4620      	mov	r0, r4
 801e83a:	f00a fba6 	bl	8028f8a <__cxa_guard_acquire>
 801e83e:	b138      	cbz	r0, 801e850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e840:	4620      	mov	r0, r4
 801e842:	f00a fbae 	bl	8028fa2 <__cxa_guard_release>
 801e846:	4a06      	ldr	r2, [pc, #24]	; (801e860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e848:	4909      	ldr	r1, [pc, #36]	; (801e870 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e84a:	480a      	ldr	r0, [pc, #40]	; (801e874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e84c:	f00a fb96 	bl	8028f7c <__aeabi_atexit>
 801e850:	4b05      	ldr	r3, [pc, #20]	; (801e868 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e852:	66ab      	str	r3, [r5, #104]	; 0x68
 801e854:	4b07      	ldr	r3, [pc, #28]	; (801e874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e856:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e858:	bd38      	pop	{r3, r4, r5, pc}
 801e85a:	bf00      	nop
 801e85c:	20012f14 	.word	0x20012f14
 801e860:	20000000 	.word	0x20000000
 801e864:	0801af87 	.word	0x0801af87
 801e868:	20000094 	.word	0x20000094
 801e86c:	20012f18 	.word	0x20012f18
 801e870:	0801af85 	.word	0x0801af85
 801e874:	20000098 	.word	0x20000098

0801e878 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e878:	b510      	push	{r4, lr}
 801e87a:	4604      	mov	r4, r0
 801e87c:	f7ff ff88 	bl	801e790 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e880:	4620      	mov	r0, r4
 801e882:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e886:	f7ff bfbd 	b.w	801e804 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e88a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e88a:	b510      	push	{r4, lr}
 801e88c:	4604      	mov	r4, r0
 801e88e:	f7ff fff3 	bl	801e878 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e892:	4620      	mov	r0, r4
 801e894:	f7ff ff72 	bl	801e77c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e898:	4620      	mov	r0, r4
 801e89a:	f7ff fdf9 	bl	801e490 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e89e:	4620      	mov	r0, r4
 801e8a0:	f7ff fcfa 	bl	801e298 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e8a4:	4620      	mov	r0, r4
 801e8a6:	f7ff fd75 	bl	801e394 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e8aa:	4620      	mov	r0, r4
 801e8ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e8b0:	f7ff bee0 	b.w	801e674 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e8b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e8b4:	b538      	push	{r3, r4, r5, lr}
 801e8b6:	4c0b      	ldr	r4, [pc, #44]	; (801e8e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e8b8:	7823      	ldrb	r3, [r4, #0]
 801e8ba:	f3bf 8f5b 	dmb	ish
 801e8be:	07db      	lsls	r3, r3, #31
 801e8c0:	4605      	mov	r5, r0
 801e8c2:	d40b      	bmi.n	801e8dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e8c4:	4620      	mov	r0, r4
 801e8c6:	f00a fb60 	bl	8028f8a <__cxa_guard_acquire>
 801e8ca:	b138      	cbz	r0, 801e8dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e8cc:	4620      	mov	r0, r4
 801e8ce:	f00a fb68 	bl	8028fa2 <__cxa_guard_release>
 801e8d2:	4a05      	ldr	r2, [pc, #20]	; (801e8e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e8d4:	4905      	ldr	r1, [pc, #20]	; (801e8ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e8d6:	4806      	ldr	r0, [pc, #24]	; (801e8f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e8d8:	f00a fb50 	bl	8028f7c <__aeabi_atexit>
 801e8dc:	4b04      	ldr	r3, [pc, #16]	; (801e8f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e8de:	67ab      	str	r3, [r5, #120]	; 0x78
 801e8e0:	bd38      	pop	{r3, r4, r5, pc}
 801e8e2:	bf00      	nop
 801e8e4:	20012f08 	.word	0x20012f08
 801e8e8:	20000000 	.word	0x20000000
 801e8ec:	0801af7f 	.word	0x0801af7f
 801e8f0:	2000008c 	.word	0x2000008c

0801e8f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e8f4:	b538      	push	{r3, r4, r5, lr}
 801e8f6:	4c0b      	ldr	r4, [pc, #44]	; (801e924 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e8f8:	7823      	ldrb	r3, [r4, #0]
 801e8fa:	f3bf 8f5b 	dmb	ish
 801e8fe:	07db      	lsls	r3, r3, #31
 801e900:	4605      	mov	r5, r0
 801e902:	d40b      	bmi.n	801e91c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e904:	4620      	mov	r0, r4
 801e906:	f00a fb40 	bl	8028f8a <__cxa_guard_acquire>
 801e90a:	b138      	cbz	r0, 801e91c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e90c:	4620      	mov	r0, r4
 801e90e:	f00a fb48 	bl	8028fa2 <__cxa_guard_release>
 801e912:	4a05      	ldr	r2, [pc, #20]	; (801e928 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e914:	4905      	ldr	r1, [pc, #20]	; (801e92c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e916:	4806      	ldr	r0, [pc, #24]	; (801e930 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e918:	f00a fb30 	bl	8028f7c <__aeabi_atexit>
 801e91c:	4b04      	ldr	r3, [pc, #16]	; (801e930 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e91e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e920:	bd38      	pop	{r3, r4, r5, pc}
 801e922:	bf00      	nop
 801e924:	20012f0c 	.word	0x20012f0c
 801e928:	20000000 	.word	0x20000000
 801e92c:	0801af7d 	.word	0x0801af7d
 801e930:	20000090 	.word	0x20000090

0801e934 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e934:	b570      	push	{r4, r5, r6, lr}
 801e936:	4d0d      	ldr	r5, [pc, #52]	; (801e96c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e938:	4c0d      	ldr	r4, [pc, #52]	; (801e970 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e93a:	782b      	ldrb	r3, [r5, #0]
 801e93c:	f3bf 8f5b 	dmb	ish
 801e940:	f013 0f01 	tst.w	r3, #1
 801e944:	4606      	mov	r6, r0
 801e946:	d10d      	bne.n	801e964 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e948:	4628      	mov	r0, r5
 801e94a:	f00a fb1e 	bl	8028f8a <__cxa_guard_acquire>
 801e94e:	b148      	cbz	r0, 801e964 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e950:	4b08      	ldr	r3, [pc, #32]	; (801e974 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e952:	6023      	str	r3, [r4, #0]
 801e954:	4628      	mov	r0, r5
 801e956:	f00a fb24 	bl	8028fa2 <__cxa_guard_release>
 801e95a:	4a07      	ldr	r2, [pc, #28]	; (801e978 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e95c:	4907      	ldr	r1, [pc, #28]	; (801e97c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e95e:	4620      	mov	r0, r4
 801e960:	f00a fb0c 	bl	8028f7c <__aeabi_atexit>
 801e964:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e968:	bd70      	pop	{r4, r5, r6, pc}
 801e96a:	bf00      	nop
 801e96c:	20012f10 	.word	0x20012f10
 801e970:	20012f84 	.word	0x20012f84
 801e974:	0802e514 	.word	0x0802e514
 801e978:	20000000 	.word	0x20000000
 801e97c:	0801af7b 	.word	0x0801af7b

0801e980 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e980:	b510      	push	{r4, lr}
 801e982:	4604      	mov	r4, r0
 801e984:	f7ff ff96 	bl	801e8b4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e988:	4620      	mov	r0, r4
 801e98a:	f7ff ffb3 	bl	801e8f4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e98e:	4620      	mov	r0, r4
 801e990:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e994:	f7ff bfce 	b.w	801e934 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e99c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e9a0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e9a4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e9a8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e9ac:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e9b0:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e9b4:	8808      	ldrh	r0, [r1, #0]
 801e9b6:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e9ba:	2d00      	cmp	r5, #0
 801e9bc:	eb02 0a0c 	add.w	sl, r2, ip
 801e9c0:	f2c0 80b0 	blt.w	801eb24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e9c4:	45ab      	cmp	fp, r5
 801e9c6:	f340 80ad 	ble.w	801eb24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e9ca:	2c00      	cmp	r4, #0
 801e9cc:	f2c0 80a8 	blt.w	801eb20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e9d0:	45a6      	cmp	lr, r4
 801e9d2:	f340 80a5 	ble.w	801eb20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e9d6:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e9da:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e9de:	1c62      	adds	r2, r4, #1
 801e9e0:	f100 80a3 	bmi.w	801eb2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e9e4:	4596      	cmp	lr, r2
 801e9e6:	f340 80a0 	ble.w	801eb2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e9ea:	f1b9 0f00 	cmp.w	r9, #0
 801e9ee:	f000 809c 	beq.w	801eb2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e9f2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e9f6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e9fa:	3501      	adds	r5, #1
 801e9fc:	f100 8099 	bmi.w	801eb32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ea00:	45ab      	cmp	fp, r5
 801ea02:	f340 8096 	ble.w	801eb32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ea06:	2f00      	cmp	r7, #0
 801ea08:	f000 8093 	beq.w	801eb32 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ea0c:	2c00      	cmp	r4, #0
 801ea0e:	f2c0 808e 	blt.w	801eb2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ea12:	45a6      	cmp	lr, r4
 801ea14:	f340 808b 	ble.w	801eb2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ea18:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801ea1c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801ea20:	3401      	adds	r4, #1
 801ea22:	f100 8089 	bmi.w	801eb38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ea26:	45a6      	cmp	lr, r4
 801ea28:	f340 8086 	ble.w	801eb38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ea2c:	f1b9 0f00 	cmp.w	r9, #0
 801ea30:	f000 8082 	beq.w	801eb38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ea34:	44d6      	add	lr, sl
 801ea36:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ea3a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801ea3e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801ea42:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ea46:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801ea4a:	fb19 fe07 	smulbb	lr, r9, r7
 801ea4e:	ea44 0808 	orr.w	r8, r4, r8
 801ea52:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ea56:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ea5a:	f1c7 0210 	rsb	r2, r7, #16
 801ea5e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ea62:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ea66:	ea44 0c0c 	orr.w	ip, r4, ip
 801ea6a:	eba2 0209 	sub.w	r2, r2, r9
 801ea6e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ea72:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ea76:	fb04 f40c 	mul.w	r4, r4, ip
 801ea7a:	fb02 4808 	mla	r8, r2, r8, r4
 801ea7e:	041a      	lsls	r2, r3, #16
 801ea80:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ea84:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea88:	4313      	orrs	r3, r2
 801ea8a:	042a      	lsls	r2, r5, #16
 801ea8c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ea90:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ea94:	fb0e 8303 	mla	r3, lr, r3, r8
 801ea98:	432a      	orrs	r2, r5
 801ea9a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ea9e:	fb07 3202 	mla	r2, r7, r2, r3
 801eaa2:	0d53      	lsrs	r3, r2, #21
 801eaa4:	0952      	lsrs	r2, r2, #5
 801eaa6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eaaa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801eaae:	431a      	orrs	r2, r3
 801eab0:	b293      	uxth	r3, r2
 801eab2:	b2b4      	uxth	r4, r6
 801eab4:	1202      	asrs	r2, r0, #8
 801eab6:	43f6      	mvns	r6, r6
 801eab8:	b2f6      	uxtb	r6, r6
 801eaba:	121d      	asrs	r5, r3, #8
 801eabc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801eac0:	fb12 f206 	smulbb	r2, r2, r6
 801eac4:	10c7      	asrs	r7, r0, #3
 801eac6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eaca:	00c0      	lsls	r0, r0, #3
 801eacc:	fb05 2504 	mla	r5, r5, r4, r2
 801ead0:	b2c0      	uxtb	r0, r0
 801ead2:	10da      	asrs	r2, r3, #3
 801ead4:	00db      	lsls	r3, r3, #3
 801ead6:	b2db      	uxtb	r3, r3
 801ead8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801eadc:	fb10 f006 	smulbb	r0, r0, r6
 801eae0:	b2ad      	uxth	r5, r5
 801eae2:	fb03 0004 	mla	r0, r3, r4, r0
 801eae6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801eaea:	fb17 f706 	smulbb	r7, r7, r6
 801eaee:	b280      	uxth	r0, r0
 801eaf0:	1c6b      	adds	r3, r5, #1
 801eaf2:	fb02 7204 	mla	r2, r2, r4, r7
 801eaf6:	b292      	uxth	r2, r2
 801eaf8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801eafc:	1c43      	adds	r3, r0, #1
 801eafe:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801eb02:	1c50      	adds	r0, r2, #1
 801eb04:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801eb08:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801eb0c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801eb10:	0952      	lsrs	r2, r2, #5
 801eb12:	432b      	orrs	r3, r5
 801eb14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb18:	4313      	orrs	r3, r2
 801eb1a:	800b      	strh	r3, [r1, #0]
 801eb1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb20:	4680      	mov	r8, r0
 801eb22:	e75c      	b.n	801e9de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801eb24:	4684      	mov	ip, r0
 801eb26:	4680      	mov	r8, r0
 801eb28:	e767      	b.n	801e9fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801eb2a:	4684      	mov	ip, r0
 801eb2c:	e765      	b.n	801e9fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801eb2e:	4605      	mov	r5, r0
 801eb30:	e776      	b.n	801ea20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801eb32:	4603      	mov	r3, r0
 801eb34:	4605      	mov	r5, r0
 801eb36:	e782      	b.n	801ea3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801eb38:	4603      	mov	r3, r0
 801eb3a:	e780      	b.n	801ea3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801eb3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eb3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb40:	b099      	sub	sp, #100	; 0x64
 801eb42:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801eb46:	9215      	str	r2, [sp, #84]	; 0x54
 801eb48:	9309      	str	r3, [sp, #36]	; 0x24
 801eb4a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801eb4c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801eb50:	930d      	str	r3, [sp, #52]	; 0x34
 801eb52:	910c      	str	r1, [sp, #48]	; 0x30
 801eb54:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801eb58:	9016      	str	r0, [sp, #88]	; 0x58
 801eb5a:	6850      	ldr	r0, [r2, #4]
 801eb5c:	6812      	ldr	r2, [r2, #0]
 801eb5e:	fb00 1303 	mla	r3, r0, r3, r1
 801eb62:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801eb66:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb68:	681b      	ldr	r3, [r3, #0]
 801eb6a:	930b      	str	r3, [sp, #44]	; 0x2c
 801eb6c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb6e:	685e      	ldr	r6, [r3, #4]
 801eb70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eb72:	43db      	mvns	r3, r3
 801eb74:	b2db      	uxtb	r3, r3
 801eb76:	3604      	adds	r6, #4
 801eb78:	930a      	str	r3, [sp, #40]	; 0x28
 801eb7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eb7c:	2b00      	cmp	r3, #0
 801eb7e:	dc03      	bgt.n	801eb88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801eb80:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801eb82:	2b00      	cmp	r3, #0
 801eb84:	f340 8225 	ble.w	801efd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801eb88:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb8a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eb8e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eb92:	1e48      	subs	r0, r1, #1
 801eb94:	1e57      	subs	r7, r2, #1
 801eb96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb98:	2b00      	cmp	r3, #0
 801eb9a:	f340 80e3 	ble.w	801ed64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801eb9e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801eba2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801eba6:	d406      	bmi.n	801ebb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801eba8:	4584      	cmp	ip, r0
 801ebaa:	da04      	bge.n	801ebb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ebac:	2b00      	cmp	r3, #0
 801ebae:	db02      	blt.n	801ebb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ebb0:	42bb      	cmp	r3, r7
 801ebb2:	f2c0 80d8 	blt.w	801ed66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ebb6:	f11c 0c01 	adds.w	ip, ip, #1
 801ebba:	f100 80c9 	bmi.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebbe:	4561      	cmp	r1, ip
 801ebc0:	f2c0 80c6 	blt.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebc4:	3301      	adds	r3, #1
 801ebc6:	f100 80c3 	bmi.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebca:	429a      	cmp	r2, r3
 801ebcc:	f2c0 80c0 	blt.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebd0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ebd4:	4647      	mov	r7, r8
 801ebd6:	f1bb 0f00 	cmp.w	fp, #0
 801ebda:	f340 80e3 	ble.w	801eda4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801ebde:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ebe0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ebe2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ebe6:	689b      	ldr	r3, [r3, #8]
 801ebe8:	ea5f 422a 	movs.w	r2, sl, asr #16
 801ebec:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ebf0:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801ebf4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ebf8:	f100 8121 	bmi.w	801ee3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ebfc:	f103 39ff 	add.w	r9, r3, #4294967295
 801ec00:	454a      	cmp	r2, r9
 801ec02:	f280 811c 	bge.w	801ee3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ec06:	f1bc 0f00 	cmp.w	ip, #0
 801ec0a:	f2c0 8118 	blt.w	801ee3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ec0e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801ec12:	45cc      	cmp	ip, r9
 801ec14:	f280 8113 	bge.w	801ee3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ec18:	b21b      	sxth	r3, r3
 801ec1a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ec1e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ec20:	eb04 0902 	add.w	r9, r4, r2
 801ec24:	5ca2      	ldrb	r2, [r4, r2]
 801ec26:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801ec2a:	2800      	cmp	r0, #0
 801ec2c:	f000 80fe 	beq.w	801ee2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ec30:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ec34:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801ec38:	9211      	str	r2, [sp, #68]	; 0x44
 801ec3a:	b151      	cbz	r1, 801ec52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ec3c:	eb09 0203 	add.w	r2, r9, r3
 801ec40:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ec44:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec48:	930f      	str	r3, [sp, #60]	; 0x3c
 801ec4a:	7853      	ldrb	r3, [r2, #1]
 801ec4c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec50:	9312      	str	r3, [sp, #72]	; 0x48
 801ec52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ec54:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ec56:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ec5a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ec5e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ec62:	ea4c 0c03 	orr.w	ip, ip, r3
 801ec66:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ec68:	041b      	lsls	r3, r3, #16
 801ec6a:	fb10 f201 	smulbb	r2, r0, r1
 801ec6e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ec72:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ec76:	10d2      	asrs	r2, r2, #3
 801ec78:	4323      	orrs	r3, r4
 801ec7a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801ec7e:	4353      	muls	r3, r2
 801ec80:	fb09 330c 	mla	r3, r9, ip, r3
 801ec84:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ec88:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ec8c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ec90:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ec94:	f1c1 0c10 	rsb	ip, r1, #16
 801ec98:	ebac 0c00 	sub.w	ip, ip, r0
 801ec9c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801eca0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801eca4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eca6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801eca8:	0418      	lsls	r0, r3, #16
 801ecaa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ecae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ecb2:	4318      	orrs	r0, r3
 801ecb4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ecb8:	fb02 c200 	mla	r2, r2, r0, ip
 801ecbc:	0d53      	lsrs	r3, r2, #21
 801ecbe:	0952      	lsrs	r2, r2, #5
 801ecc0:	8838      	ldrh	r0, [r7, #0]
 801ecc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ecc6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ecca:	431a      	orrs	r2, r3
 801eccc:	b292      	uxth	r2, r2
 801ecce:	1201      	asrs	r1, r0, #8
 801ecd0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801ecd4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ecd8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ecdc:	fb11 f104 	smulbb	r1, r1, r4
 801ece0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ece4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ece8:	00c0      	lsls	r0, r0, #3
 801ecea:	fb0c 1c03 	mla	ip, ip, r3, r1
 801ecee:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ecf2:	10d1      	asrs	r1, r2, #3
 801ecf4:	b2c0      	uxtb	r0, r0
 801ecf6:	00d2      	lsls	r2, r2, #3
 801ecf8:	b2d2      	uxtb	r2, r2
 801ecfa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ecfe:	fb1e fe04 	smulbb	lr, lr, r4
 801ed02:	fb10 f004 	smulbb	r0, r0, r4
 801ed06:	fa1f fc8c 	uxth.w	ip, ip
 801ed0a:	fb01 e103 	mla	r1, r1, r3, lr
 801ed0e:	fb02 0303 	mla	r3, r2, r3, r0
 801ed12:	b29a      	uxth	r2, r3
 801ed14:	f10c 0301 	add.w	r3, ip, #1
 801ed18:	b289      	uxth	r1, r1
 801ed1a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ed1e:	1c53      	adds	r3, r2, #1
 801ed20:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ed24:	1c4a      	adds	r2, r1, #1
 801ed26:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ed2a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ed2e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ed32:	0949      	lsrs	r1, r1, #5
 801ed34:	ea43 030c 	orr.w	r3, r3, ip
 801ed38:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ed3c:	430b      	orrs	r3, r1
 801ed3e:	803b      	strh	r3, [r7, #0]
 801ed40:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ed42:	449a      	add	sl, r3
 801ed44:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ed46:	3702      	adds	r7, #2
 801ed48:	441d      	add	r5, r3
 801ed4a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ed4e:	e742      	b.n	801ebd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ed50:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ed52:	449a      	add	sl, r3
 801ed54:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ed56:	441d      	add	r5, r3
 801ed58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed5a:	3b01      	subs	r3, #1
 801ed5c:	9309      	str	r3, [sp, #36]	; 0x24
 801ed5e:	f108 0802 	add.w	r8, r8, #2
 801ed62:	e718      	b.n	801eb96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ed64:	d023      	beq.n	801edae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ed66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed68:	9825      	ldr	r0, [sp, #148]	; 0x94
 801ed6a:	3b01      	subs	r3, #1
 801ed6c:	fb00 a003 	mla	r0, r0, r3, sl
 801ed70:	1400      	asrs	r0, r0, #16
 801ed72:	f53f af2d 	bmi.w	801ebd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed76:	3901      	subs	r1, #1
 801ed78:	4288      	cmp	r0, r1
 801ed7a:	f6bf af29 	bge.w	801ebd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed7e:	9926      	ldr	r1, [sp, #152]	; 0x98
 801ed80:	fb01 5303 	mla	r3, r1, r3, r5
 801ed84:	141b      	asrs	r3, r3, #16
 801ed86:	f53f af23 	bmi.w	801ebd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed8a:	3a01      	subs	r2, #1
 801ed8c:	4293      	cmp	r3, r2
 801ed8e:	f6bf af1f 	bge.w	801ebd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed92:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801ed96:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801ed9a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801ed9e:	f1be 0f00 	cmp.w	lr, #0
 801eda2:	dc6c      	bgt.n	801ee7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801eda4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eda6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801edaa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801edae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801edb0:	2b00      	cmp	r3, #0
 801edb2:	f340 810e 	ble.w	801efd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801edb6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801edba:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801edbe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801edc2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801edc4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801edc8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801edcc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801edd0:	eef0 6a62 	vmov.f32	s13, s5
 801edd4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801edd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eddc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ede0:	ee16 aa90 	vmov	sl, s13
 801ede4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ede8:	eef0 6a43 	vmov.f32	s13, s6
 801edec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801edf0:	ee12 2a90 	vmov	r2, s5
 801edf4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801edf8:	fb92 f3f3 	sdiv	r3, r2, r3
 801edfc:	ee13 2a10 	vmov	r2, s6
 801ee00:	9325      	str	r3, [sp, #148]	; 0x94
 801ee02:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ee04:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee08:	9326      	str	r3, [sp, #152]	; 0x98
 801ee0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee0c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801ee0e:	3b01      	subs	r3, #1
 801ee10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee14:	930c      	str	r3, [sp, #48]	; 0x30
 801ee16:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ee18:	bf08      	it	eq
 801ee1a:	4613      	moveq	r3, r2
 801ee1c:	ee16 5a90 	vmov	r5, s13
 801ee20:	9309      	str	r3, [sp, #36]	; 0x24
 801ee22:	eeb0 3a67 	vmov.f32	s6, s15
 801ee26:	eef0 2a47 	vmov.f32	s5, s14
 801ee2a:	e6a6      	b.n	801eb7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ee2c:	2900      	cmp	r1, #0
 801ee2e:	f43f af10 	beq.w	801ec52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ee32:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ee36:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ee3a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee3c:	e709      	b.n	801ec52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ee3e:	f112 0901 	adds.w	r9, r2, #1
 801ee42:	f53f af7d 	bmi.w	801ed40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee46:	454b      	cmp	r3, r9
 801ee48:	f6ff af7a 	blt.w	801ed40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee4c:	f11c 0901 	adds.w	r9, ip, #1
 801ee50:	f53f af76 	bmi.w	801ed40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee54:	45ce      	cmp	lr, r9
 801ee56:	f6ff af73 	blt.w	801ed40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee5a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ee5c:	9202      	str	r2, [sp, #8]
 801ee5e:	b21b      	sxth	r3, r3
 801ee60:	fa0f f28e 	sxth.w	r2, lr
 801ee64:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ee68:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ee6c:	9201      	str	r2, [sp, #4]
 801ee6e:	9300      	str	r3, [sp, #0]
 801ee70:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ee72:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ee74:	4633      	mov	r3, r6
 801ee76:	4639      	mov	r1, r7
 801ee78:	f7ff fd8e 	bl	801e998 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ee7c:	e760      	b.n	801ed40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee7e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee80:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ee82:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ee86:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ee8a:	1429      	asrs	r1, r5, #16
 801ee8c:	fb03 2101 	mla	r1, r3, r1, r2
 801ee90:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ee92:	440a      	add	r2, r1
 801ee94:	5c61      	ldrb	r1, [r4, r1]
 801ee96:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ee9a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ee9e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801eea2:	f1bc 0f00 	cmp.w	ip, #0
 801eea6:	f000 808c 	beq.w	801efc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801eeaa:	7857      	ldrb	r7, [r2, #1]
 801eeac:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801eeb0:	9413      	str	r4, [sp, #76]	; 0x4c
 801eeb2:	b140      	cbz	r0, 801eec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801eeb4:	18d7      	adds	r7, r2, r3
 801eeb6:	5cd3      	ldrb	r3, [r2, r3]
 801eeb8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eebc:	9310      	str	r3, [sp, #64]	; 0x40
 801eebe:	787b      	ldrb	r3, [r7, #1]
 801eec0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eec4:	9314      	str	r3, [sp, #80]	; 0x50
 801eec6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801eec8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801eeca:	fb1c f200 	smulbb	r2, ip, r0
 801eece:	041f      	lsls	r7, r3, #16
 801eed0:	10d2      	asrs	r2, r2, #3
 801eed2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eed6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801eeda:	431f      	orrs	r7, r3
 801eedc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801eee0:	9317      	str	r3, [sp, #92]	; 0x5c
 801eee2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801eee4:	041b      	lsls	r3, r3, #16
 801eee6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801eeea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801eeee:	ea43 030b 	orr.w	r3, r3, fp
 801eef2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801eef4:	4353      	muls	r3, r2
 801eef6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801eefa:	fb04 3707 	mla	r7, r4, r7, r3
 801eefe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ef02:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ef06:	ea43 0b01 	orr.w	fp, r3, r1
 801ef0a:	f1c0 0110 	rsb	r1, r0, #16
 801ef0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ef10:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ef12:	eba1 0c0c 	sub.w	ip, r1, ip
 801ef16:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ef1a:	fb0c 770b 	mla	r7, ip, fp, r7
 801ef1e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ef22:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ef26:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ef2a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ef2e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ef32:	fb02 770c 	mla	r7, r2, ip, r7
 801ef36:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ef38:	0d79      	lsrs	r1, r7, #21
 801ef3a:	097f      	lsrs	r7, r7, #5
 801ef3c:	8812      	ldrh	r2, [r2, #0]
 801ef3e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ef42:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ef46:	430f      	orrs	r7, r1
 801ef48:	b2bb      	uxth	r3, r7
 801ef4a:	1211      	asrs	r1, r2, #8
 801ef4c:	1218      	asrs	r0, r3, #8
 801ef4e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ef52:	fb11 f104 	smulbb	r1, r1, r4
 801ef56:	10d7      	asrs	r7, r2, #3
 801ef58:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ef5c:	00d2      	lsls	r2, r2, #3
 801ef5e:	fb00 1009 	mla	r0, r0, r9, r1
 801ef62:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ef66:	10d9      	asrs	r1, r3, #3
 801ef68:	b2d2      	uxtb	r2, r2
 801ef6a:	00db      	lsls	r3, r3, #3
 801ef6c:	fb17 f704 	smulbb	r7, r7, r4
 801ef70:	fb12 f204 	smulbb	r2, r2, r4
 801ef74:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ef78:	b2db      	uxtb	r3, r3
 801ef7a:	b280      	uxth	r0, r0
 801ef7c:	fb01 7109 	mla	r1, r1, r9, r7
 801ef80:	fb03 2309 	mla	r3, r3, r9, r2
 801ef84:	b29b      	uxth	r3, r3
 801ef86:	b289      	uxth	r1, r1
 801ef88:	1c42      	adds	r2, r0, #1
 801ef8a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ef8e:	1c4f      	adds	r7, r1, #1
 801ef90:	1c5a      	adds	r2, r3, #1
 801ef92:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ef96:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ef9a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ef9e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801efa2:	0949      	lsrs	r1, r1, #5
 801efa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801efa6:	4310      	orrs	r0, r2
 801efa8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801efac:	4308      	orrs	r0, r1
 801efae:	f823 0b02 	strh.w	r0, [r3], #2
 801efb2:	930e      	str	r3, [sp, #56]	; 0x38
 801efb4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801efb6:	449a      	add	sl, r3
 801efb8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801efba:	f10e 3eff 	add.w	lr, lr, #4294967295
 801efbe:	441d      	add	r5, r3
 801efc0:	e6ed      	b.n	801ed9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801efc2:	2800      	cmp	r0, #0
 801efc4:	f43f af7f 	beq.w	801eec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801efc8:	5cd3      	ldrb	r3, [r2, r3]
 801efca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801efce:	9310      	str	r3, [sp, #64]	; 0x40
 801efd0:	e779      	b.n	801eec6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801efd2:	b019      	add	sp, #100	; 0x64
 801efd4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801efd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801efd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801efdc:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801efe0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801efe4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801efe8:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801efec:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801eff0:	8808      	ldrh	r0, [r1, #0]
 801eff2:	fb08 470e 	mla	r7, r8, lr, r4
 801eff6:	f1b8 0f00 	cmp.w	r8, #0
 801effa:	eb02 0907 	add.w	r9, r2, r7
 801effe:	db67      	blt.n	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f000:	45c2      	cmp	sl, r8
 801f002:	dd65      	ble.n	801f0d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f004:	2c00      	cmp	r4, #0
 801f006:	db61      	blt.n	801f0cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f008:	45a6      	cmp	lr, r4
 801f00a:	dd5f      	ble.n	801f0cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f00c:	5dd2      	ldrb	r2, [r2, r7]
 801f00e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f012:	1c62      	adds	r2, r4, #1
 801f014:	d45f      	bmi.n	801f0d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f016:	4596      	cmp	lr, r2
 801f018:	dd5d      	ble.n	801f0d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f01a:	2d00      	cmp	r5, #0
 801f01c:	d05b      	beq.n	801f0d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f01e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f022:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f026:	f118 0801 	adds.w	r8, r8, #1
 801f02a:	d458      	bmi.n	801f0de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f02c:	45c2      	cmp	sl, r8
 801f02e:	dd56      	ble.n	801f0de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f030:	2e00      	cmp	r6, #0
 801f032:	d054      	beq.n	801f0de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f034:	2c00      	cmp	r4, #0
 801f036:	db50      	blt.n	801f0da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f038:	45a6      	cmp	lr, r4
 801f03a:	dd4e      	ble.n	801f0da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f03c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801f040:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f044:	3401      	adds	r4, #1
 801f046:	d407      	bmi.n	801f058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f048:	45a6      	cmp	lr, r4
 801f04a:	dd05      	ble.n	801f058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f04c:	b125      	cbz	r5, 801f058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f04e:	44ce      	add	lr, r9
 801f050:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f054:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f058:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f05c:	fb15 f406 	smulbb	r4, r5, r6
 801f060:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f064:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f068:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f06c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f070:	ea43 0c0c 	orr.w	ip, r3, ip
 801f074:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f078:	f1c6 0310 	rsb	r3, r6, #16
 801f07c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f080:	1b5b      	subs	r3, r3, r5
 801f082:	ea4e 0707 	orr.w	r7, lr, r7
 801f086:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f08a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f08e:	437d      	muls	r5, r7
 801f090:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f094:	0403      	lsls	r3, r0, #16
 801f096:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f09a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f09e:	4318      	orrs	r0, r3
 801f0a0:	0413      	lsls	r3, r2, #16
 801f0a2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f0a6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f0aa:	4313      	orrs	r3, r2
 801f0ac:	fb04 c000 	mla	r0, r4, r0, ip
 801f0b0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f0b4:	fb06 0003 	mla	r0, r6, r3, r0
 801f0b8:	0d43      	lsrs	r3, r0, #21
 801f0ba:	0940      	lsrs	r0, r0, #5
 801f0bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f0c0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f0c4:	4318      	orrs	r0, r3
 801f0c6:	8008      	strh	r0, [r1, #0]
 801f0c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f0cc:	4684      	mov	ip, r0
 801f0ce:	e7a0      	b.n	801f012 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801f0d0:	4607      	mov	r7, r0
 801f0d2:	4684      	mov	ip, r0
 801f0d4:	e7a7      	b.n	801f026 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f0d6:	4607      	mov	r7, r0
 801f0d8:	e7a5      	b.n	801f026 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f0da:	4602      	mov	r2, r0
 801f0dc:	e7b2      	b.n	801f044 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801f0de:	4602      	mov	r2, r0
 801f0e0:	e7ba      	b.n	801f058 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801f0e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f0e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0e6:	b093      	sub	sp, #76	; 0x4c
 801f0e8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f0ec:	920f      	str	r2, [sp, #60]	; 0x3c
 801f0ee:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f0f0:	9108      	str	r1, [sp, #32]
 801f0f2:	9306      	str	r3, [sp, #24]
 801f0f4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f0f8:	9010      	str	r0, [sp, #64]	; 0x40
 801f0fa:	6850      	ldr	r0, [r2, #4]
 801f0fc:	6812      	ldr	r2, [r2, #0]
 801f0fe:	fb00 1303 	mla	r3, r0, r3, r1
 801f102:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f106:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f108:	681b      	ldr	r3, [r3, #0]
 801f10a:	9307      	str	r3, [sp, #28]
 801f10c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f10e:	685f      	ldr	r7, [r3, #4]
 801f110:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f114:	3704      	adds	r7, #4
 801f116:	9b08      	ldr	r3, [sp, #32]
 801f118:	2b00      	cmp	r3, #0
 801f11a:	dc03      	bgt.n	801f124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f11c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f11e:	2b00      	cmp	r3, #0
 801f120:	f340 81b2 	ble.w	801f488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f124:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f126:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f12a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f12e:	1e48      	subs	r0, r1, #1
 801f130:	f102 3cff 	add.w	ip, r2, #4294967295
 801f134:	9b06      	ldr	r3, [sp, #24]
 801f136:	2b00      	cmp	r3, #0
 801f138:	f340 80a9 	ble.w	801f28e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f13c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f140:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f144:	d406      	bmi.n	801f154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f146:	4586      	cmp	lr, r0
 801f148:	da04      	bge.n	801f154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f14a:	2b00      	cmp	r3, #0
 801f14c:	db02      	blt.n	801f154 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f14e:	4563      	cmp	r3, ip
 801f150:	f2c0 809e 	blt.w	801f290 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f154:	f11e 0e01 	adds.w	lr, lr, #1
 801f158:	f100 808f 	bmi.w	801f27a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f15c:	4571      	cmp	r1, lr
 801f15e:	f2c0 808c 	blt.w	801f27a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f162:	3301      	adds	r3, #1
 801f164:	f100 8089 	bmi.w	801f27a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f168:	429a      	cmp	r2, r3
 801f16a:	f2c0 8086 	blt.w	801f27a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f16e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f172:	46c8      	mov	r8, r9
 801f174:	f1bb 0f00 	cmp.w	fp, #0
 801f178:	f340 80a6 	ble.w	801f2c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f17c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801f17e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f180:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f184:	689b      	ldr	r3, [r3, #8]
 801f186:	1422      	asrs	r2, r4, #16
 801f188:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f18c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f190:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f194:	f100 80e3 	bmi.w	801f35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f198:	f103 3aff 	add.w	sl, r3, #4294967295
 801f19c:	4552      	cmp	r2, sl
 801f19e:	f280 80de 	bge.w	801f35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f1a2:	f1bc 0f00 	cmp.w	ip, #0
 801f1a6:	f2c0 80da 	blt.w	801f35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f1aa:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f1ae:	45d4      	cmp	ip, sl
 801f1b0:	f280 80d5 	bge.w	801f35e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f1b4:	b21b      	sxth	r3, r3
 801f1b6:	fb0c 2203 	mla	r2, ip, r3, r2
 801f1ba:	9d07      	ldr	r5, [sp, #28]
 801f1bc:	eb05 0a02 	add.w	sl, r5, r2
 801f1c0:	5caa      	ldrb	r2, [r5, r2]
 801f1c2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f1c6:	2800      	cmp	r0, #0
 801f1c8:	f000 80c0 	beq.w	801f34c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f1cc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f1d0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f1d4:	920b      	str	r2, [sp, #44]	; 0x2c
 801f1d6:	b151      	cbz	r1, 801f1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f1d8:	eb0a 0203 	add.w	r2, sl, r3
 801f1dc:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f1e0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f1e4:	9309      	str	r3, [sp, #36]	; 0x24
 801f1e6:	7853      	ldrb	r3, [r2, #1]
 801f1e8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f1ec:	930c      	str	r3, [sp, #48]	; 0x30
 801f1ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f1f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f1f2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f1f6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f1fa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f1fe:	ea4c 0c03 	orr.w	ip, ip, r3
 801f202:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f204:	041b      	lsls	r3, r3, #16
 801f206:	fb10 f201 	smulbb	r2, r0, r1
 801f20a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f20e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f212:	10d2      	asrs	r2, r2, #3
 801f214:	432b      	orrs	r3, r5
 801f216:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f21a:	4353      	muls	r3, r2
 801f21c:	fb0a 330c 	mla	r3, sl, ip, r3
 801f220:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f224:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f228:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f22c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f230:	f1c1 0c10 	rsb	ip, r1, #16
 801f234:	ebac 0c00 	sub.w	ip, ip, r0
 801f238:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f23c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f240:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f242:	0418      	lsls	r0, r3, #16
 801f244:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f248:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f24c:	4318      	orrs	r0, r3
 801f24e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f252:	fb02 c200 	mla	r2, r2, r0, ip
 801f256:	0d53      	lsrs	r3, r2, #21
 801f258:	0952      	lsrs	r2, r2, #5
 801f25a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f25e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f262:	431a      	orrs	r2, r3
 801f264:	f8a8 2000 	strh.w	r2, [r8]
 801f268:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f26a:	441c      	add	r4, r3
 801f26c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f26e:	f108 0802 	add.w	r8, r8, #2
 801f272:	441e      	add	r6, r3
 801f274:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f278:	e77c      	b.n	801f174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f27a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f27c:	441c      	add	r4, r3
 801f27e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f280:	441e      	add	r6, r3
 801f282:	9b06      	ldr	r3, [sp, #24]
 801f284:	3b01      	subs	r3, #1
 801f286:	9306      	str	r3, [sp, #24]
 801f288:	f109 0902 	add.w	r9, r9, #2
 801f28c:	e752      	b.n	801f134 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f28e:	d020      	beq.n	801f2d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f290:	9b06      	ldr	r3, [sp, #24]
 801f292:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f294:	3b01      	subs	r3, #1
 801f296:	fb00 4003 	mla	r0, r0, r3, r4
 801f29a:	1400      	asrs	r0, r0, #16
 801f29c:	f53f af67 	bmi.w	801f16e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2a0:	3901      	subs	r1, #1
 801f2a2:	4288      	cmp	r0, r1
 801f2a4:	f6bf af63 	bge.w	801f16e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2a8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f2aa:	fb01 6303 	mla	r3, r1, r3, r6
 801f2ae:	141b      	asrs	r3, r3, #16
 801f2b0:	f53f af5d 	bmi.w	801f16e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2b4:	3a01      	subs	r2, #1
 801f2b6:	4293      	cmp	r3, r2
 801f2b8:	f6bf af59 	bge.w	801f16e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2bc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f2c0:	46ca      	mov	sl, r9
 801f2c2:	f1b8 0f00 	cmp.w	r8, #0
 801f2c6:	dc67      	bgt.n	801f398 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f2c8:	9b06      	ldr	r3, [sp, #24]
 801f2ca:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f2ce:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f2d2:	9b08      	ldr	r3, [sp, #32]
 801f2d4:	2b00      	cmp	r3, #0
 801f2d6:	f340 80d7 	ble.w	801f488 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f2da:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f2de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f2e2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f2e6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f2e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f2ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f2f0:	eeb0 6a62 	vmov.f32	s12, s5
 801f2f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f2f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f2fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f300:	ee16 4a10 	vmov	r4, s12
 801f304:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f308:	eeb0 6a43 	vmov.f32	s12, s6
 801f30c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f310:	ee12 2a90 	vmov	r2, s5
 801f314:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f318:	fb92 f3f3 	sdiv	r3, r2, r3
 801f31c:	ee13 2a10 	vmov	r2, s6
 801f320:	931f      	str	r3, [sp, #124]	; 0x7c
 801f322:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f324:	fb92 f3f3 	sdiv	r3, r2, r3
 801f328:	9320      	str	r3, [sp, #128]	; 0x80
 801f32a:	9b08      	ldr	r3, [sp, #32]
 801f32c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f32e:	3b01      	subs	r3, #1
 801f330:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f334:	9308      	str	r3, [sp, #32]
 801f336:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f338:	bf08      	it	eq
 801f33a:	4613      	moveq	r3, r2
 801f33c:	ee16 6a10 	vmov	r6, s12
 801f340:	9306      	str	r3, [sp, #24]
 801f342:	eeb0 3a67 	vmov.f32	s6, s15
 801f346:	eef0 2a47 	vmov.f32	s5, s14
 801f34a:	e6e4      	b.n	801f116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f34c:	2900      	cmp	r1, #0
 801f34e:	f43f af4e 	beq.w	801f1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f352:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f356:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f35a:	9309      	str	r3, [sp, #36]	; 0x24
 801f35c:	e747      	b.n	801f1ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f35e:	f112 0a01 	adds.w	sl, r2, #1
 801f362:	d481      	bmi.n	801f268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f364:	4553      	cmp	r3, sl
 801f366:	f6ff af7f 	blt.w	801f268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f36a:	f11c 0a01 	adds.w	sl, ip, #1
 801f36e:	f53f af7b 	bmi.w	801f268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f372:	45d6      	cmp	lr, sl
 801f374:	f6ff af78 	blt.w	801f268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f378:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f37c:	b21b      	sxth	r3, r3
 801f37e:	fa0f f28e 	sxth.w	r2, lr
 801f382:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f386:	9201      	str	r2, [sp, #4]
 801f388:	9300      	str	r3, [sp, #0]
 801f38a:	9a07      	ldr	r2, [sp, #28]
 801f38c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f38e:	463b      	mov	r3, r7
 801f390:	4641      	mov	r1, r8
 801f392:	f7ff fe21 	bl	801efd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f396:	e767      	b.n	801f268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f398:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f39a:	9d07      	ldr	r5, [sp, #28]
 801f39c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f3a0:	1422      	asrs	r2, r4, #16
 801f3a2:	1431      	asrs	r1, r6, #16
 801f3a4:	fb03 2101 	mla	r1, r3, r1, r2
 801f3a8:	9a07      	ldr	r2, [sp, #28]
 801f3aa:	440a      	add	r2, r1
 801f3ac:	5c69      	ldrb	r1, [r5, r1]
 801f3ae:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f3b2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f3b6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f3ba:	f1be 0f00 	cmp.w	lr, #0
 801f3be:	d05c      	beq.n	801f47a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f3c0:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f3c4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f3c8:	950d      	str	r5, [sp, #52]	; 0x34
 801f3ca:	b150      	cbz	r0, 801f3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f3cc:	eb02 0c03 	add.w	ip, r2, r3
 801f3d0:	5cd3      	ldrb	r3, [r2, r3]
 801f3d2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f3d6:	930a      	str	r3, [sp, #40]	; 0x28
 801f3d8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f3dc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f3e0:	930e      	str	r3, [sp, #56]	; 0x38
 801f3e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f3e4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f3e6:	fb1e f200 	smulbb	r2, lr, r0
 801f3ea:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f3ee:	10d2      	asrs	r2, r2, #3
 801f3f0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f3f4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f3f8:	ea4c 0c03 	orr.w	ip, ip, r3
 801f3fc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f400:	9311      	str	r3, [sp, #68]	; 0x44
 801f402:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f404:	041b      	lsls	r3, r3, #16
 801f406:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f40a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f40e:	ea43 030b 	orr.w	r3, r3, fp
 801f412:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f414:	4353      	muls	r3, r2
 801f416:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f41a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f41e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f422:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f426:	ea43 0b01 	orr.w	fp, r3, r1
 801f42a:	f1c0 0110 	rsb	r1, r0, #16
 801f42e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f430:	eba1 0e0e 	sub.w	lr, r1, lr
 801f434:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f438:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f43c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f440:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f444:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f448:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f44c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f450:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f454:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f458:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f45c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f460:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f464:	ea43 0c0c 	orr.w	ip, r3, ip
 801f468:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f46a:	f82a cb02 	strh.w	ip, [sl], #2
 801f46e:	441c      	add	r4, r3
 801f470:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f472:	f108 38ff 	add.w	r8, r8, #4294967295
 801f476:	441e      	add	r6, r3
 801f478:	e723      	b.n	801f2c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f47a:	2800      	cmp	r0, #0
 801f47c:	d0b1      	beq.n	801f3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f47e:	5cd3      	ldrb	r3, [r2, r3]
 801f480:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f484:	930a      	str	r3, [sp, #40]	; 0x28
 801f486:	e7ac      	b.n	801f3e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f488:	b013      	add	sp, #76	; 0x4c
 801f48a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f48e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f48e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f492:	880d      	ldrh	r5, [r1, #0]
 801f494:	b087      	sub	sp, #28
 801f496:	10ef      	asrs	r7, r5, #3
 801f498:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f49c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f4a0:	00ed      	lsls	r5, r5, #3
 801f4a2:	9701      	str	r7, [sp, #4]
 801f4a4:	b2ed      	uxtb	r5, r5
 801f4a6:	9502      	str	r5, [sp, #8]
 801f4a8:	9d01      	ldr	r5, [sp, #4]
 801f4aa:	9103      	str	r1, [sp, #12]
 801f4ac:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f4b0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f4b4:	9902      	ldr	r1, [sp, #8]
 801f4b6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f4ba:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f4be:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f4c2:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f4c6:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f4ca:	022d      	lsls	r5, r5, #8
 801f4cc:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f4d0:	fb06 0709 	mla	r7, r6, r9, r0
 801f4d4:	430d      	orrs	r5, r1
 801f4d6:	2e00      	cmp	r6, #0
 801f4d8:	eb02 0c07 	add.w	ip, r2, r7
 801f4dc:	9505      	str	r5, [sp, #20]
 801f4de:	f2c0 80b6 	blt.w	801f64e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f4e2:	45b3      	cmp	fp, r6
 801f4e4:	f340 80b3 	ble.w	801f64e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f4e8:	2800      	cmp	r0, #0
 801f4ea:	f2c0 80ae 	blt.w	801f64a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f4ee:	4581      	cmp	r9, r0
 801f4f0:	f340 80ab 	ble.w	801f64a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f4f4:	5dd7      	ldrb	r7, [r2, r7]
 801f4f6:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f4fa:	441f      	add	r7, r3
 801f4fc:	1c42      	adds	r2, r0, #1
 801f4fe:	f100 80a9 	bmi.w	801f654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f502:	4591      	cmp	r9, r2
 801f504:	f340 80a6 	ble.w	801f654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f508:	2c00      	cmp	r4, #0
 801f50a:	f000 80a3 	beq.w	801f654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f50e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f512:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f516:	441d      	add	r5, r3
 801f518:	3601      	adds	r6, #1
 801f51a:	f100 809f 	bmi.w	801f65c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f51e:	45b3      	cmp	fp, r6
 801f520:	f340 809c 	ble.w	801f65c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f524:	f1be 0f00 	cmp.w	lr, #0
 801f528:	f000 8098 	beq.w	801f65c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f52c:	2800      	cmp	r0, #0
 801f52e:	f2c0 8093 	blt.w	801f658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f532:	4581      	cmp	r9, r0
 801f534:	f340 8090 	ble.w	801f658 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f538:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f53c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f540:	441e      	add	r6, r3
 801f542:	3001      	adds	r0, #1
 801f544:	f100 808d 	bmi.w	801f662 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f548:	4581      	cmp	r9, r0
 801f54a:	f340 808a 	ble.w	801f662 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f54e:	2c00      	cmp	r4, #0
 801f550:	f000 8087 	beq.w	801f662 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f554:	44e1      	add	r9, ip
 801f556:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f55a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f55e:	4413      	add	r3, r2
 801f560:	b2a4      	uxth	r4, r4
 801f562:	fa1f fe8e 	uxth.w	lr, lr
 801f566:	fb04 fb0e 	mul.w	fp, r4, lr
 801f56a:	0124      	lsls	r4, r4, #4
 801f56c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f570:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f574:	eba4 040b 	sub.w	r4, r4, fp
 801f578:	fa1f f08e 	uxth.w	r0, lr
 801f57c:	b2a2      	uxth	r2, r4
 801f57e:	78ac      	ldrb	r4, [r5, #2]
 801f580:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f584:	9901      	ldr	r1, [sp, #4]
 801f586:	eba9 0900 	sub.w	r9, r9, r0
 801f58a:	fa1f f989 	uxth.w	r9, r9
 801f58e:	4354      	muls	r4, r2
 801f590:	fb09 440c 	mla	r4, r9, ip, r4
 801f594:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f598:	fb00 440c 	mla	r4, r0, ip, r4
 801f59c:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f5a0:	fa1f fe88 	uxth.w	lr, r8
 801f5a4:	ea6f 0808 	mvn.w	r8, r8
 801f5a8:	fa5f f888 	uxtb.w	r8, r8
 801f5ac:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f5b0:	fb1a fa08 	smulbb	sl, sl, r8
 801f5b4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f5b8:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f5bc:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f5c0:	787c      	ldrb	r4, [r7, #1]
 801f5c2:	782d      	ldrb	r5, [r5, #0]
 801f5c4:	783f      	ldrb	r7, [r7, #0]
 801f5c6:	fb02 fa0a 	mul.w	sl, r2, sl
 801f5ca:	fb09 aa04 	mla	sl, r9, r4, sl
 801f5ce:	7874      	ldrb	r4, [r6, #1]
 801f5d0:	436a      	muls	r2, r5
 801f5d2:	7835      	ldrb	r5, [r6, #0]
 801f5d4:	fb00 aa04 	mla	sl, r0, r4, sl
 801f5d8:	fb09 2207 	mla	r2, r9, r7, r2
 801f5dc:	785c      	ldrb	r4, [r3, #1]
 801f5de:	781b      	ldrb	r3, [r3, #0]
 801f5e0:	fb00 2005 	mla	r0, r0, r5, r2
 801f5e4:	fb0b a404 	mla	r4, fp, r4, sl
 801f5e8:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f5ec:	9b02      	ldr	r3, [sp, #8]
 801f5ee:	fb11 fa08 	smulbb	sl, r1, r8
 801f5f2:	fa1f fc8c 	uxth.w	ip, ip
 801f5f6:	fb13 f808 	smulbb	r8, r3, r8
 801f5fa:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f5fe:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f602:	fb04 a40e 	mla	r4, r4, lr, sl
 801f606:	f10c 0301 	add.w	r3, ip, #1
 801f60a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f60e:	fa1f fe8e 	uxth.w	lr, lr
 801f612:	b2a4      	uxth	r4, r4
 801f614:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f618:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f61c:	f104 0a01 	add.w	sl, r4, #1
 801f620:	f10e 0c01 	add.w	ip, lr, #1
 801f624:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f628:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f62c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f630:	0964      	lsrs	r4, r4, #5
 801f632:	ea4c 0c03 	orr.w	ip, ip, r3
 801f636:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f63a:	9b03      	ldr	r3, [sp, #12]
 801f63c:	ea4c 0c04 	orr.w	ip, ip, r4
 801f640:	f8a3 c000 	strh.w	ip, [r3]
 801f644:	b007      	add	sp, #28
 801f646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f64a:	af05      	add	r7, sp, #20
 801f64c:	e756      	b.n	801f4fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f64e:	ad05      	add	r5, sp, #20
 801f650:	462f      	mov	r7, r5
 801f652:	e761      	b.n	801f518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f654:	ad05      	add	r5, sp, #20
 801f656:	e75f      	b.n	801f518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f658:	ae05      	add	r6, sp, #20
 801f65a:	e772      	b.n	801f542 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f65c:	ab05      	add	r3, sp, #20
 801f65e:	461e      	mov	r6, r3
 801f660:	e77e      	b.n	801f560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f662:	ab05      	add	r3, sp, #20
 801f664:	e77c      	b.n	801f560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f666:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f66a:	b095      	sub	sp, #84	; 0x54
 801f66c:	9212      	str	r2, [sp, #72]	; 0x48
 801f66e:	9309      	str	r3, [sp, #36]	; 0x24
 801f670:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f672:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f676:	930f      	str	r3, [sp, #60]	; 0x3c
 801f678:	910e      	str	r1, [sp, #56]	; 0x38
 801f67a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f67e:	9013      	str	r0, [sp, #76]	; 0x4c
 801f680:	6850      	ldr	r0, [r2, #4]
 801f682:	6812      	ldr	r2, [r2, #0]
 801f684:	fb00 1303 	mla	r3, r0, r3, r1
 801f688:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f68c:	930a      	str	r3, [sp, #40]	; 0x28
 801f68e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f690:	681b      	ldr	r3, [r3, #0]
 801f692:	930d      	str	r3, [sp, #52]	; 0x34
 801f694:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f696:	685c      	ldr	r4, [r3, #4]
 801f698:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f69a:	43db      	mvns	r3, r3
 801f69c:	b2db      	uxtb	r3, r3
 801f69e:	3404      	adds	r4, #4
 801f6a0:	930b      	str	r3, [sp, #44]	; 0x2c
 801f6a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f6a4:	2b00      	cmp	r3, #0
 801f6a6:	dc03      	bgt.n	801f6b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f6a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f6aa:	2b00      	cmp	r3, #0
 801f6ac:	f340 8255 	ble.w	801fb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f6b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f6b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f6b6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f6ba:	1e48      	subs	r0, r1, #1
 801f6bc:	1e55      	subs	r5, r2, #1
 801f6be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6c0:	2b00      	cmp	r3, #0
 801f6c2:	f340 80f9 	ble.w	801f8b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f6c6:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f6c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f6ca:	1436      	asrs	r6, r6, #16
 801f6cc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f6d0:	d406      	bmi.n	801f6e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f6d2:	4286      	cmp	r6, r0
 801f6d4:	da04      	bge.n	801f6e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f6d6:	2b00      	cmp	r3, #0
 801f6d8:	db02      	blt.n	801f6e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f6da:	42ab      	cmp	r3, r5
 801f6dc:	f2c0 80ed 	blt.w	801f8ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f6e0:	3601      	adds	r6, #1
 801f6e2:	f100 80da 	bmi.w	801f89a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f6e6:	42b1      	cmp	r1, r6
 801f6e8:	f2c0 80d7 	blt.w	801f89a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f6ec:	3301      	adds	r3, #1
 801f6ee:	f100 80d4 	bmi.w	801f89a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f6f2:	429a      	cmp	r2, r3
 801f6f4:	f2c0 80d1 	blt.w	801f89a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f6f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6fa:	9311      	str	r3, [sp, #68]	; 0x44
 801f6fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f6fe:	930c      	str	r3, [sp, #48]	; 0x30
 801f700:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f702:	2b00      	cmp	r3, #0
 801f704:	f340 80fa 	ble.w	801f8fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f708:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f70a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f70c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f70e:	68c6      	ldr	r6, [r0, #12]
 801f710:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f712:	141d      	asrs	r5, r3, #16
 801f714:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f718:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f71a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f71c:	1400      	asrs	r0, r0, #16
 801f71e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f722:	6892      	ldr	r2, [r2, #8]
 801f724:	f100 813e 	bmi.w	801f9a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f728:	1e57      	subs	r7, r2, #1
 801f72a:	42b8      	cmp	r0, r7
 801f72c:	f280 813a 	bge.w	801f9a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f730:	2d00      	cmp	r5, #0
 801f732:	f2c0 8137 	blt.w	801f9a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f736:	1e77      	subs	r7, r6, #1
 801f738:	42bd      	cmp	r5, r7
 801f73a:	f280 8133 	bge.w	801f9a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f73e:	b212      	sxth	r2, r2
 801f740:	fb05 0002 	mla	r0, r5, r2, r0
 801f744:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f746:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f74a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f74e:	182e      	adds	r6, r5, r0
 801f750:	eb04 050a 	add.w	r5, r4, sl
 801f754:	2b00      	cmp	r3, #0
 801f756:	f000 8117 	beq.w	801f988 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f75a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f75e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f762:	44a4      	add	ip, r4
 801f764:	2900      	cmp	r1, #0
 801f766:	f000 8117 	beq.w	801f998 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f76a:	18b0      	adds	r0, r6, r2
 801f76c:	5cb2      	ldrb	r2, [r6, r2]
 801f76e:	7840      	ldrb	r0, [r0, #1]
 801f770:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f774:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f778:	4422      	add	r2, r4
 801f77a:	4420      	add	r0, r4
 801f77c:	b29b      	uxth	r3, r3
 801f77e:	b289      	uxth	r1, r1
 801f780:	fb03 f901 	mul.w	r9, r3, r1
 801f784:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f788:	011b      	lsls	r3, r3, #4
 801f78a:	b289      	uxth	r1, r1
 801f78c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f790:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f794:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f796:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f79a:	f8b6 e000 	ldrh.w	lr, [r6]
 801f79e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f7a2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f7a6:	eba3 0309 	sub.w	r3, r3, r9
 801f7aa:	b29b      	uxth	r3, r3
 801f7ac:	eba8 0801 	sub.w	r8, r8, r1
 801f7b0:	fa1f f888 	uxth.w	r8, r8
 801f7b4:	435f      	muls	r7, r3
 801f7b6:	fb08 770b 	mla	r7, r8, fp, r7
 801f7ba:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f7be:	9310      	str	r3, [sp, #64]	; 0x40
 801f7c0:	fb01 770b 	mla	r7, r1, fp, r7
 801f7c4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f7c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7ca:	fb09 770b 	mla	r7, r9, fp, r7
 801f7ce:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f7d2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f7d6:	fb1b fb03 	smulbb	fp, fp, r3
 801f7da:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f7de:	fb07 b706 	mla	r7, r7, r6, fp
 801f7e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f7e4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f7e8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f7ec:	f89c c000 	ldrb.w	ip, [ip]
 801f7f0:	435d      	muls	r5, r3
 801f7f2:	fb08 550b 	mla	r5, r8, fp, r5
 801f7f6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f7fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7fc:	fb01 550b 	mla	r5, r1, fp, r5
 801f800:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f804:	fb09 550b 	mla	r5, r9, fp, r5
 801f808:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f80c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f810:	fb1b fb03 	smulbb	fp, fp, r3
 801f814:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f816:	fb03 f30c 	mul.w	r3, r3, ip
 801f81a:	f892 c000 	ldrb.w	ip, [r2]
 801f81e:	fb08 330a 	mla	r3, r8, sl, r3
 801f822:	fb01 330c 	mla	r3, r1, ip, r3
 801f826:	f890 c000 	ldrb.w	ip, [r0]
 801f82a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f82e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f832:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f834:	fa5f fe8e 	uxtb.w	lr, lr
 801f838:	b2bf      	uxth	r7, r7
 801f83a:	fb1e fe03 	smulbb	lr, lr, r3
 801f83e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f842:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f846:	fb05 b506 	mla	r5, r5, r6, fp
 801f84a:	1c7b      	adds	r3, r7, #1
 801f84c:	fb0c e606 	mla	r6, ip, r6, lr
 801f850:	b2ad      	uxth	r5, r5
 801f852:	b2b6      	uxth	r6, r6
 801f854:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f858:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f85c:	f105 0b01 	add.w	fp, r5, #1
 801f860:	1c77      	adds	r7, r6, #1
 801f862:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f866:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f86a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f86e:	096d      	lsrs	r5, r5, #5
 801f870:	431f      	orrs	r7, r3
 801f872:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f876:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f878:	433d      	orrs	r5, r7
 801f87a:	801d      	strh	r5, [r3, #0]
 801f87c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f87e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f880:	3302      	adds	r3, #2
 801f882:	930c      	str	r3, [sp, #48]	; 0x30
 801f884:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f886:	4413      	add	r3, r2
 801f888:	931f      	str	r3, [sp, #124]	; 0x7c
 801f88a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f88c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f88e:	4413      	add	r3, r2
 801f890:	9320      	str	r3, [sp, #128]	; 0x80
 801f892:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f894:	3b01      	subs	r3, #1
 801f896:	9311      	str	r3, [sp, #68]	; 0x44
 801f898:	e732      	b.n	801f700 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f89a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f89c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f89e:	4433      	add	r3, r6
 801f8a0:	931f      	str	r3, [sp, #124]	; 0x7c
 801f8a2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f8a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8a6:	4433      	add	r3, r6
 801f8a8:	9320      	str	r3, [sp, #128]	; 0x80
 801f8aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8ac:	3b01      	subs	r3, #1
 801f8ae:	9309      	str	r3, [sp, #36]	; 0x24
 801f8b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8b2:	3302      	adds	r3, #2
 801f8b4:	930a      	str	r3, [sp, #40]	; 0x28
 801f8b6:	e702      	b.n	801f6be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f8b8:	d027      	beq.n	801f90a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f8ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8bc:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f8be:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f8c0:	3b01      	subs	r3, #1
 801f8c2:	fb00 5003 	mla	r0, r0, r3, r5
 801f8c6:	1400      	asrs	r0, r0, #16
 801f8c8:	f53f af16 	bmi.w	801f6f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8cc:	3901      	subs	r1, #1
 801f8ce:	4288      	cmp	r0, r1
 801f8d0:	f6bf af12 	bge.w	801f6f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8d4:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f8d6:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f8d8:	fb01 0303 	mla	r3, r1, r3, r0
 801f8dc:	141b      	asrs	r3, r3, #16
 801f8de:	f53f af0b 	bmi.w	801f6f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8e2:	3a01      	subs	r2, #1
 801f8e4:	4293      	cmp	r3, r2
 801f8e6:	f6bf af07 	bge.w	801f6f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8ec:	9311      	str	r3, [sp, #68]	; 0x44
 801f8ee:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f8f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8f4:	930c      	str	r3, [sp, #48]	; 0x30
 801f8f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f8f8:	2b00      	cmp	r3, #0
 801f8fa:	dc70      	bgt.n	801f9de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f8fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f900:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f904:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f908:	930a      	str	r3, [sp, #40]	; 0x28
 801f90a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f90c:	2b00      	cmp	r3, #0
 801f90e:	f340 8124 	ble.w	801fb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f912:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f916:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f91a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f91e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f920:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f924:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f928:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f92c:	eef0 6a62 	vmov.f32	s13, s5
 801f930:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f934:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f938:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f93c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f940:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f944:	eef0 6a43 	vmov.f32	s13, s6
 801f948:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f94c:	ee12 2a90 	vmov	r2, s5
 801f950:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f954:	fb92 f3f3 	sdiv	r3, r2, r3
 801f958:	ee13 2a10 	vmov	r2, s6
 801f95c:	9321      	str	r3, [sp, #132]	; 0x84
 801f95e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f960:	fb92 f3f3 	sdiv	r3, r2, r3
 801f964:	9322      	str	r3, [sp, #136]	; 0x88
 801f966:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f968:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f96a:	3b01      	subs	r3, #1
 801f96c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f970:	930e      	str	r3, [sp, #56]	; 0x38
 801f972:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f974:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f978:	bf08      	it	eq
 801f97a:	4613      	moveq	r3, r2
 801f97c:	9309      	str	r3, [sp, #36]	; 0x24
 801f97e:	eeb0 3a67 	vmov.f32	s6, s15
 801f982:	eef0 2a47 	vmov.f32	s5, s14
 801f986:	e68c      	b.n	801f6a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f988:	b149      	cbz	r1, 801f99e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f98a:	5cb2      	ldrb	r2, [r6, r2]
 801f98c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f990:	4422      	add	r2, r4
 801f992:	4628      	mov	r0, r5
 801f994:	46ac      	mov	ip, r5
 801f996:	e6f1      	b.n	801f77c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f998:	4628      	mov	r0, r5
 801f99a:	462a      	mov	r2, r5
 801f99c:	e6ee      	b.n	801f77c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f99e:	4628      	mov	r0, r5
 801f9a0:	462a      	mov	r2, r5
 801f9a2:	e7f7      	b.n	801f994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f9a4:	1c47      	adds	r7, r0, #1
 801f9a6:	f53f af69 	bmi.w	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9aa:	42ba      	cmp	r2, r7
 801f9ac:	f6ff af66 	blt.w	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9b0:	1c6f      	adds	r7, r5, #1
 801f9b2:	f53f af63 	bmi.w	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9b6:	42be      	cmp	r6, r7
 801f9b8:	f6ff af60 	blt.w	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9bc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f9be:	9002      	str	r0, [sp, #8]
 801f9c0:	b236      	sxth	r6, r6
 801f9c2:	b212      	sxth	r2, r2
 801f9c4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f9c8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f9cc:	9200      	str	r2, [sp, #0]
 801f9ce:	9601      	str	r6, [sp, #4]
 801f9d0:	4623      	mov	r3, r4
 801f9d2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f9d6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f9d8:	f7ff fd59 	bl	801f48e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f9dc:	e74e      	b.n	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9de:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f9e0:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f9e2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f9e4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f9e6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f9ea:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f9ec:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f9f0:	142d      	asrs	r5, r5, #16
 801f9f2:	1400      	asrs	r0, r0, #16
 801f9f4:	fb02 5000 	mla	r0, r2, r0, r5
 801f9f8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f9fa:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f9fe:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fa02:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801fa06:	182e      	adds	r6, r5, r0
 801fa08:	eb04 0509 	add.w	r5, r4, r9
 801fa0c:	2b00      	cmp	r3, #0
 801fa0e:	f000 8096 	beq.w	801fb3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fa12:	7877      	ldrb	r7, [r6, #1]
 801fa14:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fa18:	4427      	add	r7, r4
 801fa1a:	2900      	cmp	r1, #0
 801fa1c:	f000 8097 	beq.w	801fb4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801fa20:	18b0      	adds	r0, r6, r2
 801fa22:	5cb2      	ldrb	r2, [r6, r2]
 801fa24:	7840      	ldrb	r0, [r0, #1]
 801fa26:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa2a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fa2e:	4422      	add	r2, r4
 801fa30:	4420      	add	r0, r4
 801fa32:	b29b      	uxth	r3, r3
 801fa34:	b289      	uxth	r1, r1
 801fa36:	fb03 f801 	mul.w	r8, r3, r1
 801fa3a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fa3c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fa40:	f8b6 c000 	ldrh.w	ip, [r6]
 801fa44:	78be      	ldrb	r6, [r7, #2]
 801fa46:	f814 9009 	ldrb.w	r9, [r4, r9]
 801fa4a:	011b      	lsls	r3, r3, #4
 801fa4c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801fa50:	b289      	uxth	r1, r1
 801fa52:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fa56:	eba3 0308 	sub.w	r3, r3, r8
 801fa5a:	b29b      	uxth	r3, r3
 801fa5c:	ebae 0e01 	sub.w	lr, lr, r1
 801fa60:	fa1f fe8e 	uxth.w	lr, lr
 801fa64:	435e      	muls	r6, r3
 801fa66:	fb0e 660b 	mla	r6, lr, fp, r6
 801fa6a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fa6e:	9310      	str	r3, [sp, #64]	; 0x40
 801fa70:	fb01 660b 	mla	r6, r1, fp, r6
 801fa74:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fa78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fa7a:	fb08 660b 	mla	r6, r8, fp, r6
 801fa7e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801fa82:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801fa86:	fb1b fb03 	smulbb	fp, fp, r3
 801fa8a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fa8e:	fb06 b60a 	mla	r6, r6, sl, fp
 801fa92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fa94:	f895 b001 	ldrb.w	fp, [r5, #1]
 801fa98:	787d      	ldrb	r5, [r7, #1]
 801fa9a:	783f      	ldrb	r7, [r7, #0]
 801fa9c:	435d      	muls	r5, r3
 801fa9e:	fb0e 550b 	mla	r5, lr, fp, r5
 801faa2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801faa6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801faa8:	fb01 550b 	mla	r5, r1, fp, r5
 801faac:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fab0:	fb08 550b 	mla	r5, r8, fp, r5
 801fab4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801fab8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801fabc:	fb1b fb03 	smulbb	fp, fp, r3
 801fac0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fac2:	437b      	muls	r3, r7
 801fac4:	7817      	ldrb	r7, [r2, #0]
 801fac6:	fb0e 3309 	mla	r3, lr, r9, r3
 801faca:	fb01 3307 	mla	r3, r1, r7, r3
 801face:	7807      	ldrb	r7, [r0, #0]
 801fad0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fad4:	fb08 3707 	mla	r7, r8, r7, r3
 801fad8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fada:	fa5f fc8c 	uxtb.w	ip, ip
 801fade:	fb1c fc03 	smulbb	ip, ip, r3
 801fae2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801fae6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801faea:	fb05 b50a 	mla	r5, r5, sl, fp
 801faee:	fb07 c70a 	mla	r7, r7, sl, ip
 801faf2:	b2b6      	uxth	r6, r6
 801faf4:	b2ad      	uxth	r5, r5
 801faf6:	b2bf      	uxth	r7, r7
 801faf8:	1c73      	adds	r3, r6, #1
 801fafa:	1c7a      	adds	r2, r7, #1
 801fafc:	f105 0b01 	add.w	fp, r5, #1
 801fb00:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801fb04:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801fb08:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fb0c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fb10:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801fb14:	096d      	lsrs	r5, r5, #5
 801fb16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fb18:	4316      	orrs	r6, r2
 801fb1a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fb1e:	432e      	orrs	r6, r5
 801fb20:	f823 6b02 	strh.w	r6, [r3], #2
 801fb24:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fb26:	930c      	str	r3, [sp, #48]	; 0x30
 801fb28:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fb2a:	4413      	add	r3, r2
 801fb2c:	931f      	str	r3, [sp, #124]	; 0x7c
 801fb2e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801fb30:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb32:	4413      	add	r3, r2
 801fb34:	9320      	str	r3, [sp, #128]	; 0x80
 801fb36:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fb38:	3b01      	subs	r3, #1
 801fb3a:	9311      	str	r3, [sp, #68]	; 0x44
 801fb3c:	e6db      	b.n	801f8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801fb3e:	b149      	cbz	r1, 801fb54 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801fb40:	5cb2      	ldrb	r2, [r6, r2]
 801fb42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb46:	4422      	add	r2, r4
 801fb48:	4628      	mov	r0, r5
 801fb4a:	462f      	mov	r7, r5
 801fb4c:	e771      	b.n	801fa32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fb4e:	4628      	mov	r0, r5
 801fb50:	462a      	mov	r2, r5
 801fb52:	e76e      	b.n	801fa32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fb54:	4628      	mov	r0, r5
 801fb56:	462a      	mov	r2, r5
 801fb58:	e7f7      	b.n	801fb4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fb5a:	b015      	add	sp, #84	; 0x54
 801fb5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fb60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801fb60:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb64:	880f      	ldrh	r7, [r1, #0]
 801fb66:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801fb6a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801fb6e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801fb72:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801fb76:	023c      	lsls	r4, r7, #8
 801fb78:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801fb7c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801fb80:	017c      	lsls	r4, r7, #5
 801fb82:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801fb86:	00ff      	lsls	r7, r7, #3
 801fb88:	ea4b 0404 	orr.w	r4, fp, r4
 801fb8c:	b2ff      	uxtb	r7, r7
 801fb8e:	fb05 ca0e 	mla	sl, r5, lr, ip
 801fb92:	4327      	orrs	r7, r4
 801fb94:	2d00      	cmp	r5, #0
 801fb96:	eb02 080a 	add.w	r8, r2, sl
 801fb9a:	9701      	str	r7, [sp, #4]
 801fb9c:	db7e      	blt.n	801fc9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fb9e:	45a9      	cmp	r9, r5
 801fba0:	dd7c      	ble.n	801fc9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fba2:	f1bc 0f00 	cmp.w	ip, #0
 801fba6:	db77      	blt.n	801fc98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fba8:	45e6      	cmp	lr, ip
 801fbaa:	dd75      	ble.n	801fc98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fbac:	f812 700a 	ldrb.w	r7, [r2, sl]
 801fbb0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fbb4:	441f      	add	r7, r3
 801fbb6:	f11c 0201 	adds.w	r2, ip, #1
 801fbba:	d472      	bmi.n	801fca2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fbbc:	4596      	cmp	lr, r2
 801fbbe:	dd70      	ble.n	801fca2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fbc0:	2800      	cmp	r0, #0
 801fbc2:	d06e      	beq.n	801fca2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fbc4:	f898 4001 	ldrb.w	r4, [r8, #1]
 801fbc8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801fbcc:	441c      	add	r4, r3
 801fbce:	3501      	adds	r5, #1
 801fbd0:	d46b      	bmi.n	801fcaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fbd2:	45a9      	cmp	r9, r5
 801fbd4:	dd69      	ble.n	801fcaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fbd6:	2e00      	cmp	r6, #0
 801fbd8:	d067      	beq.n	801fcaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fbda:	f1bc 0f00 	cmp.w	ip, #0
 801fbde:	db62      	blt.n	801fca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801fbe0:	45e6      	cmp	lr, ip
 801fbe2:	dd60      	ble.n	801fca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801fbe4:	f818 500e 	ldrb.w	r5, [r8, lr]
 801fbe8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801fbec:	441d      	add	r5, r3
 801fbee:	f11c 0201 	adds.w	r2, ip, #1
 801fbf2:	d45d      	bmi.n	801fcb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fbf4:	4596      	cmp	lr, r2
 801fbf6:	dd5b      	ble.n	801fcb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fbf8:	2800      	cmp	r0, #0
 801fbfa:	d059      	beq.n	801fcb0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fbfc:	44c6      	add	lr, r8
 801fbfe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fc02:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc06:	4413      	add	r3, r2
 801fc08:	b280      	uxth	r0, r0
 801fc0a:	b2b2      	uxth	r2, r6
 801fc0c:	fb00 f602 	mul.w	r6, r0, r2
 801fc10:	0100      	lsls	r0, r0, #4
 801fc12:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801fc16:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801fc1a:	1b80      	subs	r0, r0, r6
 801fc1c:	fa1f fc82 	uxth.w	ip, r2
 801fc20:	b282      	uxth	r2, r0
 801fc22:	78a0      	ldrb	r0, [r4, #2]
 801fc24:	f897 e002 	ldrb.w	lr, [r7, #2]
 801fc28:	f897 9000 	ldrb.w	r9, [r7]
 801fc2c:	787f      	ldrb	r7, [r7, #1]
 801fc2e:	eba8 080c 	sub.w	r8, r8, ip
 801fc32:	fa1f f888 	uxth.w	r8, r8
 801fc36:	4350      	muls	r0, r2
 801fc38:	fb08 0e0e 	mla	lr, r8, lr, r0
 801fc3c:	78a8      	ldrb	r0, [r5, #2]
 801fc3e:	fb0c e000 	mla	r0, ip, r0, lr
 801fc42:	f893 e002 	ldrb.w	lr, [r3, #2]
 801fc46:	fb06 0e0e 	mla	lr, r6, lr, r0
 801fc4a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801fc4e:	f894 e000 	ldrb.w	lr, [r4]
 801fc52:	fb02 fe0e 	mul.w	lr, r2, lr
 801fc56:	fb08 e909 	mla	r9, r8, r9, lr
 801fc5a:	f895 e000 	ldrb.w	lr, [r5]
 801fc5e:	fb0c 990e 	mla	r9, ip, lr, r9
 801fc62:	f893 e000 	ldrb.w	lr, [r3]
 801fc66:	785b      	ldrb	r3, [r3, #1]
 801fc68:	fb06 9e0e 	mla	lr, r6, lr, r9
 801fc6c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801fc70:	ea4e 0e00 	orr.w	lr, lr, r0
 801fc74:	7860      	ldrb	r0, [r4, #1]
 801fc76:	4350      	muls	r0, r2
 801fc78:	786a      	ldrb	r2, [r5, #1]
 801fc7a:	fb08 0007 	mla	r0, r8, r7, r0
 801fc7e:	fb0c 0202 	mla	r2, ip, r2, r0
 801fc82:	fb06 2303 	mla	r3, r6, r3, r2
 801fc86:	095b      	lsrs	r3, r3, #5
 801fc88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fc8c:	ea4e 0303 	orr.w	r3, lr, r3
 801fc90:	800b      	strh	r3, [r1, #0]
 801fc92:	b003      	add	sp, #12
 801fc94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fc98:	af01      	add	r7, sp, #4
 801fc9a:	e78c      	b.n	801fbb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801fc9c:	ac01      	add	r4, sp, #4
 801fc9e:	4627      	mov	r7, r4
 801fca0:	e795      	b.n	801fbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fca2:	ac01      	add	r4, sp, #4
 801fca4:	e793      	b.n	801fbce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fca6:	ad01      	add	r5, sp, #4
 801fca8:	e7a1      	b.n	801fbee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801fcaa:	ab01      	add	r3, sp, #4
 801fcac:	461d      	mov	r5, r3
 801fcae:	e7ab      	b.n	801fc08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801fcb0:	ab01      	add	r3, sp, #4
 801fcb2:	e7a9      	b.n	801fc08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801fcb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fcb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fcb8:	b08f      	sub	sp, #60	; 0x3c
 801fcba:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801fcbe:	920c      	str	r2, [sp, #48]	; 0x30
 801fcc0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801fcc2:	910a      	str	r1, [sp, #40]	; 0x28
 801fcc4:	9306      	str	r3, [sp, #24]
 801fcc6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801fcca:	900d      	str	r0, [sp, #52]	; 0x34
 801fccc:	6850      	ldr	r0, [r2, #4]
 801fcce:	6812      	ldr	r2, [r2, #0]
 801fcd0:	fb00 1303 	mla	r3, r0, r3, r1
 801fcd4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fcd8:	9307      	str	r3, [sp, #28]
 801fcda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fcdc:	681b      	ldr	r3, [r3, #0]
 801fcde:	9308      	str	r3, [sp, #32]
 801fce0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fce2:	685c      	ldr	r4, [r3, #4]
 801fce4:	3404      	adds	r4, #4
 801fce6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fce8:	2b00      	cmp	r3, #0
 801fcea:	dc03      	bgt.n	801fcf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801fcec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fcee:	2b00      	cmp	r3, #0
 801fcf0:	f340 81d6 	ble.w	80200a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fcf4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fcf6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fcfa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fcfe:	1e48      	subs	r0, r1, #1
 801fd00:	1e56      	subs	r6, r2, #1
 801fd02:	9b06      	ldr	r3, [sp, #24]
 801fd04:	2b00      	cmp	r3, #0
 801fd06:	f340 80b7 	ble.w	801fe78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801fd0a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801fd0e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fd12:	d406      	bmi.n	801fd22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fd14:	4287      	cmp	r7, r0
 801fd16:	da04      	bge.n	801fd22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fd18:	2b00      	cmp	r3, #0
 801fd1a:	db02      	blt.n	801fd22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fd1c:	42b3      	cmp	r3, r6
 801fd1e:	f2c0 80ac 	blt.w	801fe7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fd22:	3701      	adds	r7, #1
 801fd24:	f100 809d 	bmi.w	801fe62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd28:	42b9      	cmp	r1, r7
 801fd2a:	f2c0 809a 	blt.w	801fe62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd2e:	3301      	adds	r3, #1
 801fd30:	f100 8097 	bmi.w	801fe62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd34:	429a      	cmp	r2, r3
 801fd36:	f2c0 8094 	blt.w	801fe62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd3a:	9b06      	ldr	r3, [sp, #24]
 801fd3c:	930b      	str	r3, [sp, #44]	; 0x2c
 801fd3e:	9b07      	ldr	r3, [sp, #28]
 801fd40:	9309      	str	r3, [sp, #36]	; 0x24
 801fd42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd44:	2b00      	cmp	r3, #0
 801fd46:	f340 80b5 	ble.w	801feb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801fd4a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fd4c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fd4e:	68c7      	ldr	r7, [r0, #12]
 801fd50:	6892      	ldr	r2, [r2, #8]
 801fd52:	ea5f 402b 	movs.w	r0, fp, asr #16
 801fd56:	ea4f 4625 	mov.w	r6, r5, asr #16
 801fd5a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fd5e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fd62:	f100 80fb 	bmi.w	801ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd66:	f102 3cff 	add.w	ip, r2, #4294967295
 801fd6a:	4560      	cmp	r0, ip
 801fd6c:	f280 80f6 	bge.w	801ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd70:	2e00      	cmp	r6, #0
 801fd72:	f2c0 80f3 	blt.w	801ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd76:	f107 3cff 	add.w	ip, r7, #4294967295
 801fd7a:	4566      	cmp	r6, ip
 801fd7c:	f280 80ee 	bge.w	801ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd80:	b212      	sxth	r2, r2
 801fd82:	fb06 0002 	mla	r0, r6, r2, r0
 801fd86:	9e08      	ldr	r6, [sp, #32]
 801fd88:	1837      	adds	r7, r6, r0
 801fd8a:	5c30      	ldrb	r0, [r6, r0]
 801fd8c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801fd90:	eb04 0c08 	add.w	ip, r4, r8
 801fd94:	2b00      	cmp	r3, #0
 801fd96:	f000 80d3 	beq.w	801ff40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fd9a:	787e      	ldrb	r6, [r7, #1]
 801fd9c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fda0:	4426      	add	r6, r4
 801fda2:	2900      	cmp	r1, #0
 801fda4:	f000 80d4 	beq.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801fda8:	18b8      	adds	r0, r7, r2
 801fdaa:	5cba      	ldrb	r2, [r7, r2]
 801fdac:	7840      	ldrb	r0, [r0, #1]
 801fdae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fdb2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fdb6:	4422      	add	r2, r4
 801fdb8:	4420      	add	r0, r4
 801fdba:	b29b      	uxth	r3, r3
 801fdbc:	b289      	uxth	r1, r1
 801fdbe:	fb03 f901 	mul.w	r9, r3, r1
 801fdc2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fdc6:	011b      	lsls	r3, r3, #4
 801fdc8:	b289      	uxth	r1, r1
 801fdca:	78b7      	ldrb	r7, [r6, #2]
 801fdcc:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fdd0:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fdd4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fdd8:	eba3 0309 	sub.w	r3, r3, r9
 801fddc:	b29b      	uxth	r3, r3
 801fdde:	ebae 0e01 	sub.w	lr, lr, r1
 801fde2:	fa1f fe8e 	uxth.w	lr, lr
 801fde6:	435f      	muls	r7, r3
 801fde8:	fb0e 770a 	mla	r7, lr, sl, r7
 801fdec:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fdf0:	fb01 770a 	mla	r7, r1, sl, r7
 801fdf4:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fdf8:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fdfc:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fe00:	f896 8000 	ldrb.w	r8, [r6]
 801fe04:	7876      	ldrb	r6, [r6, #1]
 801fe06:	fb03 f808 	mul.w	r8, r3, r8
 801fe0a:	fb0e 8807 	mla	r8, lr, r7, r8
 801fe0e:	7817      	ldrb	r7, [r2, #0]
 801fe10:	fb01 8807 	mla	r8, r1, r7, r8
 801fe14:	7807      	ldrb	r7, [r0, #0]
 801fe16:	fb09 8707 	mla	r7, r9, r7, r8
 801fe1a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fe1e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fe22:	ea47 070a 	orr.w	r7, r7, sl
 801fe26:	4373      	muls	r3, r6
 801fe28:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fe2c:	fb0e 330c 	mla	r3, lr, ip, r3
 801fe30:	fb01 310a 	mla	r1, r1, sl, r3
 801fe34:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fe38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe3a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fe3e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fe42:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fe46:	ea47 070a 	orr.w	r7, r7, sl
 801fe4a:	801f      	strh	r7, [r3, #0]
 801fe4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe4e:	3302      	adds	r3, #2
 801fe50:	9309      	str	r3, [sp, #36]	; 0x24
 801fe52:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fe54:	449b      	add	fp, r3
 801fe56:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fe58:	441d      	add	r5, r3
 801fe5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fe5c:	3b01      	subs	r3, #1
 801fe5e:	930b      	str	r3, [sp, #44]	; 0x2c
 801fe60:	e76f      	b.n	801fd42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fe62:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fe64:	449b      	add	fp, r3
 801fe66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fe68:	441d      	add	r5, r3
 801fe6a:	9b06      	ldr	r3, [sp, #24]
 801fe6c:	3b01      	subs	r3, #1
 801fe6e:	9306      	str	r3, [sp, #24]
 801fe70:	9b07      	ldr	r3, [sp, #28]
 801fe72:	3302      	adds	r3, #2
 801fe74:	9307      	str	r3, [sp, #28]
 801fe76:	e744      	b.n	801fd02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801fe78:	d023      	beq.n	801fec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fe7a:	9b06      	ldr	r3, [sp, #24]
 801fe7c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fe7e:	3b01      	subs	r3, #1
 801fe80:	fb00 b003 	mla	r0, r0, r3, fp
 801fe84:	1400      	asrs	r0, r0, #16
 801fe86:	f53f af58 	bmi.w	801fd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fe8a:	3901      	subs	r1, #1
 801fe8c:	4288      	cmp	r0, r1
 801fe8e:	f6bf af54 	bge.w	801fd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fe92:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fe94:	fb01 5303 	mla	r3, r1, r3, r5
 801fe98:	141b      	asrs	r3, r3, #16
 801fe9a:	f53f af4e 	bmi.w	801fd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fe9e:	3a01      	subs	r2, #1
 801fea0:	4293      	cmp	r3, r2
 801fea2:	f6bf af4a 	bge.w	801fd3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fea6:	9b06      	ldr	r3, [sp, #24]
 801fea8:	9309      	str	r3, [sp, #36]	; 0x24
 801feaa:	9b07      	ldr	r3, [sp, #28]
 801feac:	930b      	str	r3, [sp, #44]	; 0x2c
 801feae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801feb0:	2b00      	cmp	r3, #0
 801feb2:	dc70      	bgt.n	801ff96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801feb4:	9b06      	ldr	r3, [sp, #24]
 801feb6:	9a07      	ldr	r2, [sp, #28]
 801feb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801febc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fec0:	9307      	str	r3, [sp, #28]
 801fec2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fec4:	2b00      	cmp	r3, #0
 801fec6:	f340 80eb 	ble.w	80200a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801feca:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fece:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fed2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fed6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fed8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fedc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fee0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fee4:	eef0 6a62 	vmov.f32	s13, s5
 801fee8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801feec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fef0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fef4:	ee16 ba90 	vmov	fp, s13
 801fef8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fefc:	eef0 6a43 	vmov.f32	s13, s6
 801ff00:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff04:	ee12 2a90 	vmov	r2, s5
 801ff08:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff0c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff10:	ee13 2a10 	vmov	r2, s6
 801ff14:	931b      	str	r3, [sp, #108]	; 0x6c
 801ff16:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ff18:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff1c:	931c      	str	r3, [sp, #112]	; 0x70
 801ff1e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ff20:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ff22:	3b01      	subs	r3, #1
 801ff24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff28:	930a      	str	r3, [sp, #40]	; 0x28
 801ff2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ff2c:	bf08      	it	eq
 801ff2e:	4613      	moveq	r3, r2
 801ff30:	ee16 5a90 	vmov	r5, s13
 801ff34:	9306      	str	r3, [sp, #24]
 801ff36:	eeb0 3a67 	vmov.f32	s6, s15
 801ff3a:	eef0 2a47 	vmov.f32	s5, s14
 801ff3e:	e6d2      	b.n	801fce6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ff40:	b149      	cbz	r1, 801ff56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ff42:	5cba      	ldrb	r2, [r7, r2]
 801ff44:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ff48:	4422      	add	r2, r4
 801ff4a:	4660      	mov	r0, ip
 801ff4c:	4666      	mov	r6, ip
 801ff4e:	e734      	b.n	801fdba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ff50:	4660      	mov	r0, ip
 801ff52:	4662      	mov	r2, ip
 801ff54:	e731      	b.n	801fdba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ff56:	4660      	mov	r0, ip
 801ff58:	4662      	mov	r2, ip
 801ff5a:	e7f7      	b.n	801ff4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801ff5c:	f110 0c01 	adds.w	ip, r0, #1
 801ff60:	f53f af74 	bmi.w	801fe4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff64:	4562      	cmp	r2, ip
 801ff66:	f6ff af71 	blt.w	801fe4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff6a:	f116 0c01 	adds.w	ip, r6, #1
 801ff6e:	f53f af6d 	bmi.w	801fe4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff72:	4567      	cmp	r7, ip
 801ff74:	f6ff af6a 	blt.w	801fe4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff78:	b23f      	sxth	r7, r7
 801ff7a:	b212      	sxth	r2, r2
 801ff7c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801ff80:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801ff84:	9200      	str	r2, [sp, #0]
 801ff86:	9701      	str	r7, [sp, #4]
 801ff88:	4623      	mov	r3, r4
 801ff8a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ff8e:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ff90:	f7ff fde6 	bl	801fb60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801ff94:	e75a      	b.n	801fe4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff96:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ff98:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ff9c:	ea4f 462b 	mov.w	r6, fp, asr #16
 801ffa0:	1428      	asrs	r0, r5, #16
 801ffa2:	fb02 6000 	mla	r0, r2, r0, r6
 801ffa6:	9e08      	ldr	r6, [sp, #32]
 801ffa8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801ffac:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ffb0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ffb4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ffb8:	1837      	adds	r7, r6, r0
 801ffba:	eb04 0c08 	add.w	ip, r4, r8
 801ffbe:	2b00      	cmp	r3, #0
 801ffc0:	d060      	beq.n	8020084 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801ffc2:	787e      	ldrb	r6, [r7, #1]
 801ffc4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ffc8:	4426      	add	r6, r4
 801ffca:	2900      	cmp	r1, #0
 801ffcc:	d062      	beq.n	8020094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801ffce:	18b8      	adds	r0, r7, r2
 801ffd0:	5cba      	ldrb	r2, [r7, r2]
 801ffd2:	7840      	ldrb	r0, [r0, #1]
 801ffd4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ffd8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ffdc:	4422      	add	r2, r4
 801ffde:	4420      	add	r0, r4
 801ffe0:	b29b      	uxth	r3, r3
 801ffe2:	b289      	uxth	r1, r1
 801ffe4:	fb03 f901 	mul.w	r9, r3, r1
 801ffe8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ffec:	011b      	lsls	r3, r3, #4
 801ffee:	b289      	uxth	r1, r1
 801fff0:	78b7      	ldrb	r7, [r6, #2]
 801fff2:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fff6:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fffa:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fffe:	eba3 0309 	sub.w	r3, r3, r9
 8020002:	b29b      	uxth	r3, r3
 8020004:	ebae 0e01 	sub.w	lr, lr, r1
 8020008:	fa1f fe8e 	uxth.w	lr, lr
 802000c:	435f      	muls	r7, r3
 802000e:	fb0e 770a 	mla	r7, lr, sl, r7
 8020012:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020016:	fb01 770a 	mla	r7, r1, sl, r7
 802001a:	f890 a002 	ldrb.w	sl, [r0, #2]
 802001e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020022:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020026:	f896 8000 	ldrb.w	r8, [r6]
 802002a:	7876      	ldrb	r6, [r6, #1]
 802002c:	fb03 f808 	mul.w	r8, r3, r8
 8020030:	fb0e 8807 	mla	r8, lr, r7, r8
 8020034:	7817      	ldrb	r7, [r2, #0]
 8020036:	fb01 8807 	mla	r8, r1, r7, r8
 802003a:	7807      	ldrb	r7, [r0, #0]
 802003c:	fb09 8707 	mla	r7, r9, r7, r8
 8020040:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020044:	4373      	muls	r3, r6
 8020046:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802004a:	7856      	ldrb	r6, [r2, #1]
 802004c:	ea47 070a 	orr.w	r7, r7, sl
 8020050:	fb0e 330c 	mla	r3, lr, ip, r3
 8020054:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020058:	fb01 3306 	mla	r3, r1, r6, r3
 802005c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020060:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020064:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020066:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802006a:	ea47 070a 	orr.w	r7, r7, sl
 802006e:	f823 7b02 	strh.w	r7, [r3], #2
 8020072:	930b      	str	r3, [sp, #44]	; 0x2c
 8020074:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020076:	449b      	add	fp, r3
 8020078:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802007a:	441d      	add	r5, r3
 802007c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802007e:	3b01      	subs	r3, #1
 8020080:	9309      	str	r3, [sp, #36]	; 0x24
 8020082:	e714      	b.n	801feae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020084:	b149      	cbz	r1, 802009a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020086:	5cba      	ldrb	r2, [r7, r2]
 8020088:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802008c:	4422      	add	r2, r4
 802008e:	4660      	mov	r0, ip
 8020090:	4666      	mov	r6, ip
 8020092:	e7a5      	b.n	801ffe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8020094:	4660      	mov	r0, ip
 8020096:	4662      	mov	r2, ip
 8020098:	e7a2      	b.n	801ffe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802009a:	4660      	mov	r0, ip
 802009c:	4662      	mov	r2, ip
 802009e:	e7f7      	b.n	8020090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80200a0:	b00f      	add	sp, #60	; 0x3c
 80200a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080200a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80200a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200aa:	b085      	sub	sp, #20
 80200ac:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 80200b0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80200b4:	9102      	str	r1, [sp, #8]
 80200b6:	2c00      	cmp	r4, #0
 80200b8:	fb04 710c 	mla	r1, r4, ip, r7
 80200bc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80200c0:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80200c4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80200c8:	eb02 0e01 	add.w	lr, r2, r1
 80200cc:	f2c0 8122 	blt.w	8020314 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80200d0:	45a0      	cmp	r8, r4
 80200d2:	f340 811f 	ble.w	8020314 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80200d6:	2f00      	cmp	r7, #0
 80200d8:	f2c0 811a 	blt.w	8020310 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80200dc:	45bc      	cmp	ip, r7
 80200de:	f340 8117 	ble.w	8020310 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80200e2:	5c52      	ldrb	r2, [r2, r1]
 80200e4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80200e8:	1c7a      	adds	r2, r7, #1
 80200ea:	f100 8116 	bmi.w	802031a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80200ee:	4594      	cmp	ip, r2
 80200f0:	f340 8113 	ble.w	802031a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80200f4:	2e00      	cmp	r6, #0
 80200f6:	f000 8112 	beq.w	802031e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80200fa:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80200fe:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020102:	3401      	adds	r4, #1
 8020104:	f100 810f 	bmi.w	8020326 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020108:	45a0      	cmp	r8, r4
 802010a:	f340 810c 	ble.w	8020326 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802010e:	2800      	cmp	r0, #0
 8020110:	f000 810c 	beq.w	802032c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8020114:	2f00      	cmp	r7, #0
 8020116:	f2c0 8104 	blt.w	8020322 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802011a:	45bc      	cmp	ip, r7
 802011c:	f340 8101 	ble.w	8020322 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020120:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8020124:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020128:	3701      	adds	r7, #1
 802012a:	f100 8102 	bmi.w	8020332 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802012e:	45bc      	cmp	ip, r7
 8020130:	f340 80ff 	ble.w	8020332 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020134:	2e00      	cmp	r6, #0
 8020136:	f000 80fe 	beq.w	8020336 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802013a:	44f4      	add	ip, lr
 802013c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020140:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020144:	b2b6      	uxth	r6, r6
 8020146:	b280      	uxth	r0, r0
 8020148:	fb00 fe06 	mul.w	lr, r0, r6
 802014c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020150:	0136      	lsls	r6, r6, #4
 8020152:	eba6 070e 	sub.w	r7, r6, lr
 8020156:	b280      	uxth	r0, r0
 8020158:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802015c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020160:	b2bf      	uxth	r7, r7
 8020162:	1a1b      	subs	r3, r3, r0
 8020164:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020168:	b29b      	uxth	r3, r3
 802016a:	fb0a f607 	mul.w	r6, sl, r7
 802016e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020172:	fb0b 6603 	mla	r6, fp, r3, r6
 8020176:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802017a:	fb00 6609 	mla	r6, r0, r9, r6
 802017e:	fb0e 6608 	mla	r6, lr, r8, r6
 8020182:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020186:	9600      	str	r6, [sp, #0]
 8020188:	2e00      	cmp	r6, #0
 802018a:	f000 80be 	beq.w	802030a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 802018e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8020192:	fb0b fc0c 	mul.w	ip, fp, ip
 8020196:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802019a:	fb0b f505 	mul.w	r5, fp, r5
 802019e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80201a2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80201a6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80201aa:	44dc      	add	ip, fp
 80201ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80201b0:	9501      	str	r5, [sp, #4]
 80201b2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80201b6:	9503      	str	r5, [sp, #12]
 80201b8:	9d01      	ldr	r5, [sp, #4]
 80201ba:	9e02      	ldr	r6, [sp, #8]
 80201bc:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80201c0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80201c4:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80201c8:	fb0a fc0c 	mul.w	ip, sl, ip
 80201cc:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80201d0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80201d4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80201d8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80201dc:	4465      	add	r5, ip
 80201de:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80201e2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80201e6:	fb09 fc0c 	mul.w	ip, r9, ip
 80201ea:	fb09 f904 	mul.w	r9, r9, r4
 80201ee:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80201f2:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80201f6:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80201fa:	fb08 f404 	mul.w	r4, r8, r4
 80201fe:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020202:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020206:	fb08 f802 	mul.w	r8, r8, r2
 802020a:	fb0a fa01 	mul.w	sl, sl, r1
 802020e:	0a22      	lsrs	r2, r4, #8
 8020210:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8020214:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020218:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802021c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020220:	4414      	add	r4, r2
 8020222:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020226:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802022a:	0a2d      	lsrs	r5, r5, #8
 802022c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020230:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020234:	9a03      	ldr	r2, [sp, #12]
 8020236:	8836      	ldrh	r6, [r6, #0]
 8020238:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802023c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020240:	437d      	muls	r5, r7
 8020242:	4461      	add	r1, ip
 8020244:	0a24      	lsrs	r4, r4, #8
 8020246:	fb02 5503 	mla	r5, r2, r3, r5
 802024a:	0a09      	lsrs	r1, r1, #8
 802024c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020250:	fb04 540e 	mla	r4, r4, lr, r5
 8020254:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020258:	fb01 4100 	mla	r1, r1, r0, r4
 802025c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020260:	0a09      	lsrs	r1, r1, #8
 8020262:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020266:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802026a:	fb07 f70a 	mul.w	r7, r7, sl
 802026e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020272:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8020276:	fb03 7101 	mla	r1, r3, r1, r7
 802027a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802027e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020282:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020286:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802028a:	fb00 e101 	mla	r1, r0, r1, lr
 802028e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8020292:	9a00      	ldr	r2, [sp, #0]
 8020294:	b287      	uxth	r7, r0
 8020296:	437a      	muls	r2, r7
 8020298:	0a09      	lsrs	r1, r1, #8
 802029a:	1c53      	adds	r3, r2, #1
 802029c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80202a0:	4321      	orrs	r1, r4
 80202a2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80202a6:	1235      	asrs	r5, r6, #8
 80202a8:	0c0a      	lsrs	r2, r1, #16
 80202aa:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80202ae:	b2db      	uxtb	r3, r3
 80202b0:	fb12 f207 	smulbb	r2, r2, r7
 80202b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80202b8:	fb05 2503 	mla	r5, r5, r3, r2
 80202bc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80202c0:	10f2      	asrs	r2, r6, #3
 80202c2:	b2c8      	uxtb	r0, r1
 80202c4:	00f6      	lsls	r6, r6, #3
 80202c6:	fb14 f407 	smulbb	r4, r4, r7
 80202ca:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80202ce:	b2f6      	uxtb	r6, r6
 80202d0:	fb10 f007 	smulbb	r0, r0, r7
 80202d4:	fb02 4203 	mla	r2, r2, r3, r4
 80202d8:	b2ad      	uxth	r5, r5
 80202da:	fb06 0303 	mla	r3, r6, r3, r0
 80202de:	b299      	uxth	r1, r3
 80202e0:	b294      	uxth	r4, r2
 80202e2:	1c6b      	adds	r3, r5, #1
 80202e4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80202e8:	1c62      	adds	r2, r4, #1
 80202ea:	1c4b      	adds	r3, r1, #1
 80202ec:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80202f0:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80202f4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80202f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80202fc:	0952      	lsrs	r2, r2, #5
 80202fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020302:	432b      	orrs	r3, r5
 8020304:	4313      	orrs	r3, r2
 8020306:	9a02      	ldr	r2, [sp, #8]
 8020308:	8013      	strh	r3, [r2, #0]
 802030a:	b005      	add	sp, #20
 802030c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020310:	2500      	movs	r5, #0
 8020312:	e6e9      	b.n	80200e8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8020314:	2100      	movs	r1, #0
 8020316:	460d      	mov	r5, r1
 8020318:	e6f3      	b.n	8020102 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802031a:	2100      	movs	r1, #0
 802031c:	e6f1      	b.n	8020102 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802031e:	4631      	mov	r1, r6
 8020320:	e6ef      	b.n	8020102 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020322:	2400      	movs	r4, #0
 8020324:	e700      	b.n	8020128 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8020326:	2200      	movs	r2, #0
 8020328:	4614      	mov	r4, r2
 802032a:	e70b      	b.n	8020144 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802032c:	4602      	mov	r2, r0
 802032e:	4604      	mov	r4, r0
 8020330:	e708      	b.n	8020144 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020332:	2200      	movs	r2, #0
 8020334:	e706      	b.n	8020144 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020336:	4632      	mov	r2, r6
 8020338:	e704      	b.n	8020144 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802033a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802033a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802033e:	b09f      	sub	sp, #124	; 0x7c
 8020340:	921b      	str	r2, [sp, #108]	; 0x6c
 8020342:	9309      	str	r3, [sp, #36]	; 0x24
 8020344:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8020346:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802034a:	931c      	str	r3, [sp, #112]	; 0x70
 802034c:	9119      	str	r1, [sp, #100]	; 0x64
 802034e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8020352:	901d      	str	r0, [sp, #116]	; 0x74
 8020354:	6850      	ldr	r0, [r2, #4]
 8020356:	6812      	ldr	r2, [r2, #0]
 8020358:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802035a:	fb00 1303 	mla	r3, r0, r3, r1
 802035e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020362:	930c      	str	r3, [sp, #48]	; 0x30
 8020364:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020366:	681b      	ldr	r3, [r3, #0]
 8020368:	9312      	str	r3, [sp, #72]	; 0x48
 802036a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802036c:	685e      	ldr	r6, [r3, #4]
 802036e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8020372:	930d      	str	r3, [sp, #52]	; 0x34
 8020374:	3604      	adds	r6, #4
 8020376:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020378:	2b00      	cmp	r3, #0
 802037a:	dc03      	bgt.n	8020384 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802037c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802037e:	2b00      	cmp	r3, #0
 8020380:	f340 8388 	ble.w	8020a94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020384:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020386:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802038a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802038e:	1e48      	subs	r0, r1, #1
 8020390:	1e57      	subs	r7, r2, #1
 8020392:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020394:	2b00      	cmp	r3, #0
 8020396:	f340 8195 	ble.w	80206c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802039a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802039c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80203a0:	ea4f 4325 	mov.w	r3, r5, asr #16
 80203a4:	d406      	bmi.n	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203a6:	4584      	cmp	ip, r0
 80203a8:	da04      	bge.n	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203aa:	2b00      	cmp	r3, #0
 80203ac:	db02      	blt.n	80203b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203ae:	42bb      	cmp	r3, r7
 80203b0:	f2c0 8189 	blt.w	80206c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80203b4:	f11c 0c01 	adds.w	ip, ip, #1
 80203b8:	f100 8177 	bmi.w	80206aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203bc:	4561      	cmp	r1, ip
 80203be:	f2c0 8174 	blt.w	80206aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203c2:	3301      	adds	r3, #1
 80203c4:	f100 8171 	bmi.w	80206aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203c8:	429a      	cmp	r2, r3
 80203ca:	f2c0 816e 	blt.w	80206aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203d0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80203d2:	931a      	str	r3, [sp, #104]	; 0x68
 80203d4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80203d6:	2b00      	cmp	r3, #0
 80203d8:	f340 8193 	ble.w	8020702 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80203dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80203de:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80203e2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80203e4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80203e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80203ea:	141b      	asrs	r3, r3, #16
 80203ec:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80203f0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80203f4:	f100 81d6 	bmi.w	80207a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80203f8:	f100 38ff 	add.w	r8, r0, #4294967295
 80203fc:	4543      	cmp	r3, r8
 80203fe:	f280 81d1 	bge.w	80207a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020402:	f1bc 0f00 	cmp.w	ip, #0
 8020406:	f2c0 81cd 	blt.w	80207a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802040a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802040e:	45c4      	cmp	ip, r8
 8020410:	f280 81c8 	bge.w	80207a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020414:	b200      	sxth	r0, r0
 8020416:	fb0c 3300 	mla	r3, ip, r0, r3
 802041a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802041c:	eb04 0803 	add.w	r8, r4, r3
 8020420:	5ce3      	ldrb	r3, [r4, r3]
 8020422:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020426:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802042a:	2a00      	cmp	r2, #0
 802042c:	f000 81af 	beq.w	802078e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020430:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020434:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020438:	940e      	str	r4, [sp, #56]	; 0x38
 802043a:	0e24      	lsrs	r4, r4, #24
 802043c:	9415      	str	r4, [sp, #84]	; 0x54
 802043e:	b179      	cbz	r1, 8020460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020440:	eb08 0c00 	add.w	ip, r8, r0
 8020444:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020448:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802044c:	900a      	str	r0, [sp, #40]	; 0x28
 802044e:	0e00      	lsrs	r0, r0, #24
 8020450:	9013      	str	r0, [sp, #76]	; 0x4c
 8020452:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8020456:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802045a:	900f      	str	r0, [sp, #60]	; 0x3c
 802045c:	0e00      	lsrs	r0, r0, #24
 802045e:	9016      	str	r0, [sp, #88]	; 0x58
 8020460:	b292      	uxth	r2, r2
 8020462:	b289      	uxth	r1, r1
 8020464:	fb02 f901 	mul.w	r9, r2, r1
 8020468:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802046c:	0112      	lsls	r2, r2, #4
 802046e:	eba2 0809 	sub.w	r8, r2, r9
 8020472:	b289      	uxth	r1, r1
 8020474:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020478:	9815      	ldr	r0, [sp, #84]	; 0x54
 802047a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802047c:	fa1f f888 	uxth.w	r8, r8
 8020480:	1a52      	subs	r2, r2, r1
 8020482:	b292      	uxth	r2, r2
 8020484:	fb08 f000 	mul.w	r0, r8, r0
 8020488:	fb02 000e 	mla	r0, r2, lr, r0
 802048c:	fb01 0004 	mla	r0, r1, r4, r0
 8020490:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020492:	fb09 0004 	mla	r0, r9, r4, r0
 8020496:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802049a:	2800      	cmp	r0, #0
 802049c:	f000 80fa 	beq.w	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80204a0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80204a4:	d01b      	beq.n	80204de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80204a6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80204aa:	fb0e fa0a 	mul.w	sl, lr, sl
 80204ae:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80204b2:	fb0e fe03 	mul.w	lr, lr, r3
 80204b6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80204ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80204be:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80204c2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80204c6:	4453      	add	r3, sl
 80204c8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80204cc:	0a1b      	lsrs	r3, r3, #8
 80204ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80204d6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80204da:	ea43 030c 	orr.w	r3, r3, ip
 80204de:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80204e0:	2cff      	cmp	r4, #255	; 0xff
 80204e2:	d021      	beq.n	8020528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80204e4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80204e6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80204ea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80204ec:	fb04 fb0b 	mul.w	fp, r4, fp
 80204f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80204f2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80204f6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80204f8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80204fc:	fb04 fa0a 	mul.w	sl, r4, sl
 8020500:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020504:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020508:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802050c:	44de      	add	lr, fp
 802050e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020512:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020516:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802051a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802051e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020522:	ea4e 040a 	orr.w	r4, lr, sl
 8020526:	940e      	str	r4, [sp, #56]	; 0x38
 8020528:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802052a:	2cff      	cmp	r4, #255	; 0xff
 802052c:	d021      	beq.n	8020572 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802052e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020530:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020534:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020536:	fb04 fb0b 	mul.w	fp, r4, fp
 802053a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802053c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020540:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020542:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020546:	fb04 fa0a 	mul.w	sl, r4, sl
 802054a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802054e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020552:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020556:	44de      	add	lr, fp
 8020558:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802055c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020560:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020564:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020568:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802056c:	ea4e 040a 	orr.w	r4, lr, sl
 8020570:	940a      	str	r4, [sp, #40]	; 0x28
 8020572:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020574:	2cff      	cmp	r4, #255	; 0xff
 8020576:	d021      	beq.n	80205bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020578:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802057a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802057e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020580:	fb04 fb0b 	mul.w	fp, r4, fp
 8020584:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020586:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802058a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802058c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020590:	fb04 fa0a 	mul.w	sl, r4, sl
 8020594:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020598:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802059c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80205a0:	44de      	add	lr, fp
 80205a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80205a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80205aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80205b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80205b6:	ea4e 040a 	orr.w	r4, lr, sl
 80205ba:	940f      	str	r4, [sp, #60]	; 0x3c
 80205bc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80205be:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80205c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80205c4:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80205c8:	fb08 fc0c 	mul.w	ip, r8, ip
 80205cc:	fb02 cc0e 	mla	ip, r2, lr, ip
 80205d0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80205d4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80205d6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80205da:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80205de:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80205e0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80205e4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80205e8:	fb08 f80e 	mul.w	r8, r8, lr
 80205ec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80205f0:	fb02 8303 	mla	r3, r2, r3, r8
 80205f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80205f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80205f8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80205fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80205fe:	fb01 330a 	mla	r3, r1, sl, r3
 8020602:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8020606:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020608:	fb09 3901 	mla	r9, r9, r1, r3
 802060c:	4342      	muls	r2, r0
 802060e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020612:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020616:	883b      	ldrh	r3, [r7, #0]
 8020618:	1c50      	adds	r0, r2, #1
 802061a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802061e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020622:	ea4c 0c09 	orr.w	ip, ip, r9
 8020626:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802062a:	1219      	asrs	r1, r3, #8
 802062c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020630:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020634:	b2c0      	uxtb	r0, r0
 8020636:	fb12 f204 	smulbb	r2, r2, r4
 802063a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802063e:	fb01 2100 	mla	r1, r1, r0, r2
 8020642:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020646:	10da      	asrs	r2, r3, #3
 8020648:	fa5f fc8c 	uxtb.w	ip, ip
 802064c:	00db      	lsls	r3, r3, #3
 802064e:	fb1c fc04 	smulbb	ip, ip, r4
 8020652:	b2db      	uxtb	r3, r3
 8020654:	b289      	uxth	r1, r1
 8020656:	fb03 c300 	mla	r3, r3, r0, ip
 802065a:	fa1f fc83 	uxth.w	ip, r3
 802065e:	1c4b      	adds	r3, r1, #1
 8020660:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020664:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020668:	fb1e fe04 	smulbb	lr, lr, r4
 802066c:	f10c 0301 	add.w	r3, ip, #1
 8020670:	fb02 e200 	mla	r2, r2, r0, lr
 8020674:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020678:	b292      	uxth	r2, r2
 802067a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802067e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020682:	430b      	orrs	r3, r1
 8020684:	1c51      	adds	r1, r2, #1
 8020686:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802068a:	0952      	lsrs	r2, r2, #5
 802068c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020690:	4313      	orrs	r3, r2
 8020692:	803b      	strh	r3, [r7, #0]
 8020694:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020696:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020698:	441a      	add	r2, r3
 802069a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802069c:	9229      	str	r2, [sp, #164]	; 0xa4
 802069e:	441d      	add	r5, r3
 80206a0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80206a2:	3b01      	subs	r3, #1
 80206a4:	3702      	adds	r7, #2
 80206a6:	931a      	str	r3, [sp, #104]	; 0x68
 80206a8:	e694      	b.n	80203d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80206aa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80206ac:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80206ae:	441c      	add	r4, r3
 80206b0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80206b2:	9429      	str	r4, [sp, #164]	; 0xa4
 80206b4:	441d      	add	r5, r3
 80206b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206b8:	3b01      	subs	r3, #1
 80206ba:	9309      	str	r3, [sp, #36]	; 0x24
 80206bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206be:	3302      	adds	r3, #2
 80206c0:	930c      	str	r3, [sp, #48]	; 0x30
 80206c2:	e666      	b.n	8020392 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80206c4:	d024      	beq.n	8020710 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80206c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206c8:	982b      	ldr	r0, [sp, #172]	; 0xac
 80206ca:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80206cc:	3b01      	subs	r3, #1
 80206ce:	fb00 4003 	mla	r0, r0, r3, r4
 80206d2:	1400      	asrs	r0, r0, #16
 80206d4:	f53f ae7b 	bmi.w	80203ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206d8:	3901      	subs	r1, #1
 80206da:	4288      	cmp	r0, r1
 80206dc:	f6bf ae77 	bge.w	80203ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206e0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80206e2:	fb01 5303 	mla	r3, r1, r3, r5
 80206e6:	141b      	asrs	r3, r3, #16
 80206e8:	f53f ae71 	bmi.w	80203ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206ec:	3a01      	subs	r2, #1
 80206ee:	4293      	cmp	r3, r2
 80206f0:	f6bf ae6d 	bge.w	80203ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206f4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80206f8:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80206fc:	f1bb 0f00 	cmp.w	fp, #0
 8020700:	dc70      	bgt.n	80207e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020702:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020704:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020708:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802070a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802070e:	930c      	str	r3, [sp, #48]	; 0x30
 8020710:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020712:	2b00      	cmp	r3, #0
 8020714:	f340 81be 	ble.w	8020a94 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020718:	ee30 0a04 	vadd.f32	s0, s0, s8
 802071c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020720:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020724:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020726:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802072a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802072e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020732:	eef0 6a62 	vmov.f32	s13, s5
 8020736:	ee61 7a27 	vmul.f32	s15, s2, s15
 802073a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802073e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020742:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8020746:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802074a:	eef0 6a43 	vmov.f32	s13, s6
 802074e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020752:	ee12 2a90 	vmov	r2, s5
 8020756:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802075a:	fb92 f3f3 	sdiv	r3, r2, r3
 802075e:	ee13 2a10 	vmov	r2, s6
 8020762:	932b      	str	r3, [sp, #172]	; 0xac
 8020764:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020766:	fb92 f3f3 	sdiv	r3, r2, r3
 802076a:	932c      	str	r3, [sp, #176]	; 0xb0
 802076c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802076e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020770:	3b01      	subs	r3, #1
 8020772:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020776:	9319      	str	r3, [sp, #100]	; 0x64
 8020778:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802077a:	bf08      	it	eq
 802077c:	4613      	moveq	r3, r2
 802077e:	ee16 5a90 	vmov	r5, s13
 8020782:	9309      	str	r3, [sp, #36]	; 0x24
 8020784:	eeb0 3a67 	vmov.f32	s6, s15
 8020788:	eef0 2a47 	vmov.f32	s5, s14
 802078c:	e5f3      	b.n	8020376 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802078e:	2900      	cmp	r1, #0
 8020790:	f43f ae66 	beq.w	8020460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020794:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020798:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802079c:	900a      	str	r0, [sp, #40]	; 0x28
 802079e:	0e00      	lsrs	r0, r0, #24
 80207a0:	9013      	str	r0, [sp, #76]	; 0x4c
 80207a2:	e65d      	b.n	8020460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80207a4:	f113 0801 	adds.w	r8, r3, #1
 80207a8:	f53f af74 	bmi.w	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207ac:	4540      	cmp	r0, r8
 80207ae:	f6ff af71 	blt.w	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207b2:	f11c 0801 	adds.w	r8, ip, #1
 80207b6:	f53f af6d 	bmi.w	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207ba:	45c6      	cmp	lr, r8
 80207bc:	f6ff af6a 	blt.w	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207c0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80207c2:	9302      	str	r3, [sp, #8]
 80207c4:	b200      	sxth	r0, r0
 80207c6:	fa0f f38e 	sxth.w	r3, lr
 80207ca:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80207ce:	e9cd c203 	strd	ip, r2, [sp, #12]
 80207d2:	9301      	str	r3, [sp, #4]
 80207d4:	9000      	str	r0, [sp, #0]
 80207d6:	4633      	mov	r3, r6
 80207d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80207da:	981d      	ldr	r0, [sp, #116]	; 0x74
 80207dc:	4639      	mov	r1, r7
 80207de:	f7ff fc62 	bl	80200a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80207e2:	e757      	b.n	8020694 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80207e6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80207e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80207ec:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80207ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80207f2:	1427      	asrs	r7, r4, #16
 80207f4:	142b      	asrs	r3, r5, #16
 80207f6:	fb01 7303 	mla	r3, r1, r3, r7
 80207fa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80207fc:	18e7      	adds	r7, r4, r3
 80207fe:	5ce3      	ldrb	r3, [r4, r3]
 8020800:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020804:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020808:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802080c:	2a00      	cmp	r2, #0
 802080e:	f000 8137 	beq.w	8020a80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020812:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020816:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802081a:	9410      	str	r4, [sp, #64]	; 0x40
 802081c:	0e24      	lsrs	r4, r4, #24
 802081e:	9417      	str	r4, [sp, #92]	; 0x5c
 8020820:	b170      	cbz	r0, 8020840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020822:	eb07 0e01 	add.w	lr, r7, r1
 8020826:	5c79      	ldrb	r1, [r7, r1]
 8020828:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802082c:	910b      	str	r1, [sp, #44]	; 0x2c
 802082e:	0e09      	lsrs	r1, r1, #24
 8020830:	9114      	str	r1, [sp, #80]	; 0x50
 8020832:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020836:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802083a:	9111      	str	r1, [sp, #68]	; 0x44
 802083c:	0e09      	lsrs	r1, r1, #24
 802083e:	9118      	str	r1, [sp, #96]	; 0x60
 8020840:	b292      	uxth	r2, r2
 8020842:	b280      	uxth	r0, r0
 8020844:	fb02 f800 	mul.w	r8, r2, r0
 8020848:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802084c:	0112      	lsls	r2, r2, #4
 802084e:	eba2 0e08 	sub.w	lr, r2, r8
 8020852:	b280      	uxth	r0, r0
 8020854:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020858:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802085a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802085c:	fa1f fe8e 	uxth.w	lr, lr
 8020860:	1a12      	subs	r2, r2, r0
 8020862:	b292      	uxth	r2, r2
 8020864:	fb0e f101 	mul.w	r1, lr, r1
 8020868:	fb02 110c 	mla	r1, r2, ip, r1
 802086c:	fb00 1104 	mla	r1, r0, r4, r1
 8020870:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020872:	fb08 1104 	mla	r1, r8, r4, r1
 8020876:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802087a:	2900      	cmp	r1, #0
 802087c:	f000 80f5 	beq.w	8020a6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020880:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020884:	d019      	beq.n	80208ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020886:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802088a:	fb0c fa0a 	mul.w	sl, ip, sl
 802088e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020892:	fb0c fc03 	mul.w	ip, ip, r3
 8020896:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802089a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802089e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80208a2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80208a6:	4453      	add	r3, sl
 80208a8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80208ac:	0a1b      	lsrs	r3, r3, #8
 80208ae:	0a3f      	lsrs	r7, r7, #8
 80208b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80208b4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80208b8:	433b      	orrs	r3, r7
 80208ba:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80208bc:	2cff      	cmp	r4, #255	; 0xff
 80208be:	d020      	beq.n	8020902 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80208c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80208c2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80208c6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80208c8:	4367      	muls	r7, r4
 80208ca:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80208cc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80208d0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80208d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80208d6:	fb04 fa0a 	mul.w	sl, r4, sl
 80208da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80208de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80208e2:	44bc      	add	ip, r7
 80208e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80208e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80208ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80208f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80208f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80208fc:	ea4c 040a 	orr.w	r4, ip, sl
 8020900:	9410      	str	r4, [sp, #64]	; 0x40
 8020902:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020904:	2cff      	cmp	r4, #255	; 0xff
 8020906:	d020      	beq.n	802094a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020908:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802090a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802090e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020910:	4367      	muls	r7, r4
 8020912:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020914:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020918:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802091a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802091e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020922:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020926:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802092a:	44bc      	add	ip, r7
 802092c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020930:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020934:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020938:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802093c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020940:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020944:	ea4c 040a 	orr.w	r4, ip, sl
 8020948:	940b      	str	r4, [sp, #44]	; 0x2c
 802094a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802094c:	2cff      	cmp	r4, #255	; 0xff
 802094e:	d020      	beq.n	8020992 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020950:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020952:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020956:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020958:	4367      	muls	r7, r4
 802095a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802095c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020960:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020962:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020966:	fb04 fa0a 	mul.w	sl, r4, sl
 802096a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802096e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020972:	44bc      	add	ip, r7
 8020974:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020978:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802097c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020980:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020984:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020988:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802098c:	ea4c 040a 	orr.w	r4, ip, sl
 8020990:	9411      	str	r4, [sp, #68]	; 0x44
 8020992:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020994:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020998:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802099a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802099e:	fb0e f707 	mul.w	r7, lr, r7
 80209a2:	fb02 770c 	mla	r7, r2, ip, r7
 80209a6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80209aa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80209ac:	fb00 770c 	mla	r7, r0, ip, r7
 80209b0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80209b4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80209b6:	fb08 770c 	mla	r7, r8, ip, r7
 80209ba:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80209be:	fb0e fe0c 	mul.w	lr, lr, ip
 80209c2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80209c6:	fb02 e303 	mla	r3, r2, r3, lr
 80209ca:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80209cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80209ce:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80209d2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80209d4:	fb00 330a 	mla	r3, r0, sl, r3
 80209d8:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80209dc:	fb08 3c0c 	mla	ip, r8, ip, r3
 80209e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80209e2:	f8b9 0000 	ldrh.w	r0, [r9]
 80209e6:	434b      	muls	r3, r1
 80209e8:	0a3f      	lsrs	r7, r7, #8
 80209ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209ee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80209f2:	1c59      	adds	r1, r3, #1
 80209f4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80209f8:	ea47 070c 	orr.w	r7, r7, ip
 80209fc:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020a00:	1202      	asrs	r2, r0, #8
 8020a02:	0c3b      	lsrs	r3, r7, #16
 8020a04:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020a08:	b2c9      	uxtb	r1, r1
 8020a0a:	fb13 f304 	smulbb	r3, r3, r4
 8020a0e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020a12:	fb02 3201 	mla	r2, r2, r1, r3
 8020a16:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020a1a:	10c3      	asrs	r3, r0, #3
 8020a1c:	b2ff      	uxtb	r7, r7
 8020a1e:	00c0      	lsls	r0, r0, #3
 8020a20:	b292      	uxth	r2, r2
 8020a22:	fb1c fc04 	smulbb	ip, ip, r4
 8020a26:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020a2a:	b2c0      	uxtb	r0, r0
 8020a2c:	fb17 f704 	smulbb	r7, r7, r4
 8020a30:	fb03 c301 	mla	r3, r3, r1, ip
 8020a34:	fb00 7001 	mla	r0, r0, r1, r7
 8020a38:	f102 0c01 	add.w	ip, r2, #1
 8020a3c:	b280      	uxth	r0, r0
 8020a3e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020a42:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020a46:	1c42      	adds	r2, r0, #1
 8020a48:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020a4c:	b29b      	uxth	r3, r3
 8020a4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020a52:	ea42 020c 	orr.w	r2, r2, ip
 8020a56:	f103 0c01 	add.w	ip, r3, #1
 8020a5a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020a5e:	095b      	lsrs	r3, r3, #5
 8020a60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a64:	431a      	orrs	r2, r3
 8020a66:	f8a9 2000 	strh.w	r2, [r9]
 8020a6a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020a6c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020a6e:	441a      	add	r2, r3
 8020a70:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020a72:	9229      	str	r2, [sp, #164]	; 0xa4
 8020a74:	f109 0902 	add.w	r9, r9, #2
 8020a78:	441d      	add	r5, r3
 8020a7a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020a7e:	e63d      	b.n	80206fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020a80:	2800      	cmp	r0, #0
 8020a82:	f43f aedd 	beq.w	8020840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020a86:	5c79      	ldrb	r1, [r7, r1]
 8020a88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a8c:	910b      	str	r1, [sp, #44]	; 0x2c
 8020a8e:	0e09      	lsrs	r1, r1, #24
 8020a90:	9114      	str	r1, [sp, #80]	; 0x50
 8020a92:	e6d5      	b.n	8020840 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020a94:	b01f      	add	sp, #124	; 0x7c
 8020a96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020a9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020a9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a9e:	b089      	sub	sp, #36	; 0x24
 8020aa0:	9101      	str	r1, [sp, #4]
 8020aa2:	9801      	ldr	r0, [sp, #4]
 8020aa4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8020aa8:	8800      	ldrh	r0, [r0, #0]
 8020aaa:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020aae:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020ab2:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8020ab6:	1206      	asrs	r6, r0, #8
 8020ab8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020abc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020ac0:	9602      	str	r6, [sp, #8]
 8020ac2:	10c6      	asrs	r6, r0, #3
 8020ac4:	00c0      	lsls	r0, r0, #3
 8020ac6:	b2c0      	uxtb	r0, r0
 8020ac8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020acc:	9004      	str	r0, [sp, #16]
 8020ace:	2f00      	cmp	r7, #0
 8020ad0:	fb07 100c 	mla	r0, r7, ip, r1
 8020ad4:	9603      	str	r6, [sp, #12]
 8020ad6:	eb02 0e00 	add.w	lr, r2, r0
 8020ada:	f2c0 810a 	blt.w	8020cf2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020ade:	45b8      	cmp	r8, r7
 8020ae0:	f340 8107 	ble.w	8020cf2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020ae4:	2900      	cmp	r1, #0
 8020ae6:	f2c0 8102 	blt.w	8020cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020aea:	458c      	cmp	ip, r1
 8020aec:	f340 80ff 	ble.w	8020cee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020af0:	5c12      	ldrb	r2, [r2, r0]
 8020af2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020af6:	1c4a      	adds	r2, r1, #1
 8020af8:	f100 80fe 	bmi.w	8020cf8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020afc:	4594      	cmp	ip, r2
 8020afe:	f340 80fb 	ble.w	8020cf8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020b02:	2d00      	cmp	r5, #0
 8020b04:	f000 80fa 	beq.w	8020cfc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020b08:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020b0c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020b10:	3701      	adds	r7, #1
 8020b12:	f100 80f7 	bmi.w	8020d04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020b16:	45b8      	cmp	r8, r7
 8020b18:	f340 80f4 	ble.w	8020d04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020b1c:	2c00      	cmp	r4, #0
 8020b1e:	f000 80f4 	beq.w	8020d0a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020b22:	2900      	cmp	r1, #0
 8020b24:	eb0e 020c 	add.w	r2, lr, ip
 8020b28:	f2c0 80ea 	blt.w	8020d00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020b2c:	458c      	cmp	ip, r1
 8020b2e:	f340 80e7 	ble.w	8020d00 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020b32:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020b36:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8020b3a:	3101      	adds	r1, #1
 8020b3c:	f100 80e8 	bmi.w	8020d10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020b40:	458c      	cmp	ip, r1
 8020b42:	f340 80e5 	ble.w	8020d10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020b46:	2d00      	cmp	r5, #0
 8020b48:	f000 80e4 	beq.w	8020d14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020b4c:	7852      	ldrb	r2, [r2, #1]
 8020b4e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020b52:	0e0b      	lsrs	r3, r1, #24
 8020b54:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020b58:	9300      	str	r3, [sp, #0]
 8020b5a:	b2a4      	uxth	r4, r4
 8020b5c:	b2ab      	uxth	r3, r5
 8020b5e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8020b62:	fb03 f904 	mul.w	r9, r3, r4
 8020b66:	fb0a f505 	mul.w	r5, sl, r5
 8020b6a:	011b      	lsls	r3, r3, #4
 8020b6c:	eba3 0e09 	sub.w	lr, r3, r9
 8020b70:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8020b74:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020b78:	0a28      	lsrs	r0, r5, #8
 8020b7a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020b7e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8020b82:	4405      	add	r5, r0
 8020b84:	0a2d      	lsrs	r5, r5, #8
 8020b86:	fb0a f303 	mul.w	r3, sl, r3
 8020b8a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8020b8e:	9005      	str	r0, [sp, #20]
 8020b90:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8020b94:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020b98:	0a1b      	lsrs	r3, r3, #8
 8020b9a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020b9e:	9306      	str	r3, [sp, #24]
 8020ba0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8020ba4:	fb0b f303 	mul.w	r3, fp, r3
 8020ba8:	0a1d      	lsrs	r5, r3, #8
 8020baa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020bae:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020bb2:	fb0b f606 	mul.w	r6, fp, r6
 8020bb6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8020bba:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8020bbe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020bc2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020bc6:	fb08 f707 	mul.w	r7, r8, r7
 8020bca:	441d      	add	r5, r3
 8020bcc:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020bd0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020bd4:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020bd8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020bdc:	fb08 fc0c 	mul.w	ip, r8, ip
 8020be0:	0a1b      	lsrs	r3, r3, #8
 8020be2:	9307      	str	r3, [sp, #28]
 8020be4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020be8:	0e0b      	lsrs	r3, r1, #24
 8020bea:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8020bee:	435f      	muls	r7, r3
 8020bf0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020bf4:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020bf8:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020bfc:	4460      	add	r0, ip
 8020bfe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020c02:	b2a4      	uxth	r4, r4
 8020c04:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020c08:	0a2d      	lsrs	r5, r5, #8
 8020c0a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020c0e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c12:	fa1f fe8e 	uxth.w	lr, lr
 8020c16:	4359      	muls	r1, r3
 8020c18:	1b12      	subs	r2, r2, r4
 8020c1a:	9b05      	ldr	r3, [sp, #20]
 8020c1c:	44bc      	add	ip, r7
 8020c1e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020c22:	b292      	uxth	r2, r2
 8020c24:	fb05 f50e 	mul.w	r5, r5, lr
 8020c28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c2c:	fb03 5502 	mla	r5, r3, r2, r5
 8020c30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c34:	9b06      	ldr	r3, [sp, #24]
 8020c36:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8020c3a:	0a36      	lsrs	r6, r6, #8
 8020c3c:	0a00      	lsrs	r0, r0, #8
 8020c3e:	fb0c 5509 	mla	r5, ip, r9, r5
 8020c42:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020c46:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020c4a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020c4e:	fb00 5504 	mla	r5, r0, r4, r5
 8020c52:	fb0e f606 	mul.w	r6, lr, r6
 8020c56:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8020c5a:	0a09      	lsrs	r1, r1, #8
 8020c5c:	9b07      	ldr	r3, [sp, #28]
 8020c5e:	fb02 6000 	mla	r0, r2, r0, r6
 8020c62:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020c66:	fb09 0001 	mla	r0, r9, r1, r0
 8020c6a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020c6e:	fb0e fe0b 	mul.w	lr, lr, fp
 8020c72:	fb04 0003 	mla	r0, r4, r3, r0
 8020c76:	fb02 e20a 	mla	r2, r2, sl, lr
 8020c7a:	9b00      	ldr	r3, [sp, #0]
 8020c7c:	fb04 2408 	mla	r4, r4, r8, r2
 8020c80:	fb09 4903 	mla	r9, r9, r3, r4
 8020c84:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020c88:	9b02      	ldr	r3, [sp, #8]
 8020c8a:	9a04      	ldr	r2, [sp, #16]
 8020c8c:	fa5f f989 	uxtb.w	r9, r9
 8020c90:	fb03 f109 	mul.w	r1, r3, r9
 8020c94:	9b03      	ldr	r3, [sp, #12]
 8020c96:	0a2d      	lsrs	r5, r5, #8
 8020c98:	0a00      	lsrs	r0, r0, #8
 8020c9a:	fb03 f309 	mul.w	r3, r3, r9
 8020c9e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020ca2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020ca6:	4305      	orrs	r5, r0
 8020ca8:	fb02 f909 	mul.w	r9, r2, r9
 8020cac:	1c58      	adds	r0, r3, #1
 8020cae:	1c4a      	adds	r2, r1, #1
 8020cb0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020cb4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020cb8:	0a2b      	lsrs	r3, r5, #8
 8020cba:	0c2a      	lsrs	r2, r5, #16
 8020cbc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020cc0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020cc4:	00db      	lsls	r3, r3, #3
 8020cc6:	0212      	lsls	r2, r2, #8
 8020cc8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020ccc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020cd0:	4313      	orrs	r3, r2
 8020cd2:	f109 0201 	add.w	r2, r9, #1
 8020cd6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8020cda:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020cde:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020ce2:	431d      	orrs	r5, r3
 8020ce4:	9b01      	ldr	r3, [sp, #4]
 8020ce6:	801d      	strh	r5, [r3, #0]
 8020ce8:	b009      	add	sp, #36	; 0x24
 8020cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020cee:	2000      	movs	r0, #0
 8020cf0:	e701      	b.n	8020af6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020cf2:	2600      	movs	r6, #0
 8020cf4:	4630      	mov	r0, r6
 8020cf6:	e70b      	b.n	8020b10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020cf8:	2600      	movs	r6, #0
 8020cfa:	e709      	b.n	8020b10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020cfc:	462e      	mov	r6, r5
 8020cfe:	e707      	b.n	8020b10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020d00:	2700      	movs	r7, #0
 8020d02:	e71a      	b.n	8020b3a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020d04:	2100      	movs	r1, #0
 8020d06:	460f      	mov	r7, r1
 8020d08:	e723      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020d0a:	4621      	mov	r1, r4
 8020d0c:	4627      	mov	r7, r4
 8020d0e:	e720      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020d10:	2100      	movs	r1, #0
 8020d12:	e71e      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020d14:	4629      	mov	r1, r5
 8020d16:	e71c      	b.n	8020b52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020d18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020d18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d1c:	b09b      	sub	sp, #108	; 0x6c
 8020d1e:	9218      	str	r2, [sp, #96]	; 0x60
 8020d20:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020d22:	9116      	str	r1, [sp, #88]	; 0x58
 8020d24:	9307      	str	r3, [sp, #28]
 8020d26:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020d2a:	9019      	str	r0, [sp, #100]	; 0x64
 8020d2c:	6850      	ldr	r0, [r2, #4]
 8020d2e:	6812      	ldr	r2, [r2, #0]
 8020d30:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020d32:	fb00 1303 	mla	r3, r0, r3, r1
 8020d36:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020d3a:	930a      	str	r3, [sp, #40]	; 0x28
 8020d3c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d3e:	681b      	ldr	r3, [r3, #0]
 8020d40:	930f      	str	r3, [sp, #60]	; 0x3c
 8020d42:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d44:	685e      	ldr	r6, [r3, #4]
 8020d46:	3604      	adds	r6, #4
 8020d48:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020d4a:	2b00      	cmp	r3, #0
 8020d4c:	dc03      	bgt.n	8020d56 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020d4e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d50:	2b00      	cmp	r3, #0
 8020d52:	f340 8373 	ble.w	802143c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020d56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d5c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020d60:	1e48      	subs	r0, r1, #1
 8020d62:	1e57      	subs	r7, r2, #1
 8020d64:	9b07      	ldr	r3, [sp, #28]
 8020d66:	2b00      	cmp	r3, #0
 8020d68:	f340 8190 	ble.w	802108c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020d6c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020d6e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020d72:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020d76:	d406      	bmi.n	8020d86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d78:	4584      	cmp	ip, r0
 8020d7a:	da04      	bge.n	8020d86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d7c:	2b00      	cmp	r3, #0
 8020d7e:	db02      	blt.n	8020d86 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d80:	42bb      	cmp	r3, r7
 8020d82:	f2c0 8184 	blt.w	802108e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020d86:	f11c 0c01 	adds.w	ip, ip, #1
 8020d8a:	f100 8172 	bmi.w	8021072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d8e:	4561      	cmp	r1, ip
 8020d90:	f2c0 816f 	blt.w	8021072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d94:	3301      	adds	r3, #1
 8020d96:	f100 816c 	bmi.w	8021072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d9a:	429a      	cmp	r2, r3
 8020d9c:	f2c0 8169 	blt.w	8021072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020da0:	9b07      	ldr	r3, [sp, #28]
 8020da2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020da4:	9317      	str	r3, [sp, #92]	; 0x5c
 8020da6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020da8:	2b00      	cmp	r3, #0
 8020daa:	f340 818e 	ble.w	80210ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020dae:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020db0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020db4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020db6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020dba:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020dbc:	141b      	asrs	r3, r3, #16
 8020dbe:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020dc2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020dc6:	f100 81d1 	bmi.w	802116c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020dca:	f101 38ff 	add.w	r8, r1, #4294967295
 8020dce:	4543      	cmp	r3, r8
 8020dd0:	f280 81cc 	bge.w	802116c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020dd4:	f1bc 0f00 	cmp.w	ip, #0
 8020dd8:	f2c0 81c8 	blt.w	802116c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020ddc:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020de0:	45c4      	cmp	ip, r8
 8020de2:	f280 81c3 	bge.w	802116c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020de6:	b209      	sxth	r1, r1
 8020de8:	fb0c 3301 	mla	r3, ip, r1, r3
 8020dec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020dee:	eb04 0803 	add.w	r8, r4, r3
 8020df2:	5ce3      	ldrb	r3, [r4, r3]
 8020df4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020df8:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020dfc:	2a00      	cmp	r2, #0
 8020dfe:	f000 81aa 	beq.w	8021156 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020e02:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020e06:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020e0a:	940b      	str	r4, [sp, #44]	; 0x2c
 8020e0c:	0e24      	lsrs	r4, r4, #24
 8020e0e:	9412      	str	r4, [sp, #72]	; 0x48
 8020e10:	b178      	cbz	r0, 8020e32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020e12:	eb08 0c01 	add.w	ip, r8, r1
 8020e16:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020e1a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e1e:	9108      	str	r1, [sp, #32]
 8020e20:	0e09      	lsrs	r1, r1, #24
 8020e22:	9110      	str	r1, [sp, #64]	; 0x40
 8020e24:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020e28:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e2c:	910c      	str	r1, [sp, #48]	; 0x30
 8020e2e:	0e09      	lsrs	r1, r1, #24
 8020e30:	9113      	str	r1, [sp, #76]	; 0x4c
 8020e32:	b292      	uxth	r2, r2
 8020e34:	b280      	uxth	r0, r0
 8020e36:	fb02 f900 	mul.w	r9, r2, r0
 8020e3a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020e3e:	0112      	lsls	r2, r2, #4
 8020e40:	eba2 0809 	sub.w	r8, r2, r9
 8020e44:	b280      	uxth	r0, r0
 8020e46:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020e4a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020e4c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020e4e:	fa1f f888 	uxth.w	r8, r8
 8020e52:	1a12      	subs	r2, r2, r0
 8020e54:	b292      	uxth	r2, r2
 8020e56:	fb08 f101 	mul.w	r1, r8, r1
 8020e5a:	fb02 110e 	mla	r1, r2, lr, r1
 8020e5e:	fb00 1104 	mla	r1, r0, r4, r1
 8020e62:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020e64:	fb09 1104 	mla	r1, r9, r4, r1
 8020e68:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020e6c:	2900      	cmp	r1, #0
 8020e6e:	f000 80f5 	beq.w	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e72:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020e76:	d01b      	beq.n	8020eb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e78:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020e7c:	fb0e fa0a 	mul.w	sl, lr, sl
 8020e80:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020e84:	fb0e fe03 	mul.w	lr, lr, r3
 8020e88:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020e8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020e90:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020e94:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020e98:	4453      	add	r3, sl
 8020e9a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020e9e:	0a1b      	lsrs	r3, r3, #8
 8020ea0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ea4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020ea8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020eac:	ea43 030c 	orr.w	r3, r3, ip
 8020eb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020eb2:	2cff      	cmp	r4, #255	; 0xff
 8020eb4:	d021      	beq.n	8020efa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020eb6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020eb8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020ebc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020ebe:	fb04 fb0b 	mul.w	fp, r4, fp
 8020ec2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ec4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ec8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020eca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ece:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ed2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ed6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020eda:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020ede:	44de      	add	lr, fp
 8020ee0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020ee4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020ee8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020eec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ef0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ef4:	ea4e 040a 	orr.w	r4, lr, sl
 8020ef8:	940b      	str	r4, [sp, #44]	; 0x2c
 8020efa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020efc:	2cff      	cmp	r4, #255	; 0xff
 8020efe:	d021      	beq.n	8020f44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020f00:	9c08      	ldr	r4, [sp, #32]
 8020f02:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020f06:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020f08:	fb04 fb0b 	mul.w	fp, r4, fp
 8020f0c:	9c08      	ldr	r4, [sp, #32]
 8020f0e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f12:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020f14:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020f18:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f1c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f20:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020f24:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020f28:	44de      	add	lr, fp
 8020f2a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020f2e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f32:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f36:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f3a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f3e:	ea4e 040a 	orr.w	r4, lr, sl
 8020f42:	9408      	str	r4, [sp, #32]
 8020f44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020f46:	2cff      	cmp	r4, #255	; 0xff
 8020f48:	d021      	beq.n	8020f8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020f4a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020f4c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020f50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020f52:	fb04 fb0b 	mul.w	fp, r4, fp
 8020f56:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020f58:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020f5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020f62:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f6a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020f6e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020f72:	44de      	add	lr, fp
 8020f74:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020f78:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f80:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f88:	ea4e 040a 	orr.w	r4, lr, sl
 8020f8c:	940c      	str	r4, [sp, #48]	; 0x30
 8020f8e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020f90:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020f94:	9c08      	ldr	r4, [sp, #32]
 8020f96:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020f9a:	fb08 fc0c 	mul.w	ip, r8, ip
 8020f9e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020fa2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020fa6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020fa8:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020fac:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020fb0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020fb2:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020fb6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020fba:	fb08 f80e 	mul.w	r8, r8, lr
 8020fbe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020fc2:	fb02 8303 	mla	r3, r2, r3, r8
 8020fc6:	9a08      	ldr	r2, [sp, #32]
 8020fc8:	f8b7 8000 	ldrh.w	r8, [r7]
 8020fcc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020fd0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020fd2:	fb00 330a 	mla	r3, r0, sl, r3
 8020fd6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020fda:	fb09 3900 	mla	r9, r9, r0, r3
 8020fde:	43c9      	mvns	r1, r1
 8020fe0:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020fe4:	fa5f fe81 	uxtb.w	lr, r1
 8020fe8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020fec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020ff0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020ff4:	fb02 f20e 	mul.w	r2, r2, lr
 8020ff8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020ffc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021000:	ea4c 0c09 	orr.w	ip, ip, r9
 8021004:	1c53      	adds	r3, r2, #1
 8021006:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802100a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802100e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021012:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021016:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802101a:	4a63      	ldr	r2, [pc, #396]	; (80211a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 802101c:	fb00 f00e 	mul.w	r0, r0, lr
 8021020:	b2db      	uxtb	r3, r3
 8021022:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021026:	1c43      	adds	r3, r0, #1
 8021028:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802102c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021030:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021034:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021038:	b2c9      	uxtb	r1, r1
 802103a:	00db      	lsls	r3, r3, #3
 802103c:	fb01 f10e 	mul.w	r1, r1, lr
 8021040:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021044:	4313      	orrs	r3, r2
 8021046:	1c4a      	adds	r2, r1, #1
 8021048:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802104c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021050:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021054:	ea4c 0c03 	orr.w	ip, ip, r3
 8021058:	f8a7 c000 	strh.w	ip, [r7]
 802105c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802105e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021060:	441a      	add	r2, r3
 8021062:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021064:	9225      	str	r2, [sp, #148]	; 0x94
 8021066:	441d      	add	r5, r3
 8021068:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802106a:	3b01      	subs	r3, #1
 802106c:	3702      	adds	r7, #2
 802106e:	9317      	str	r3, [sp, #92]	; 0x5c
 8021070:	e699      	b.n	8020da6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021072:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021074:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021076:	441c      	add	r4, r3
 8021078:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802107a:	9425      	str	r4, [sp, #148]	; 0x94
 802107c:	441d      	add	r5, r3
 802107e:	9b07      	ldr	r3, [sp, #28]
 8021080:	3b01      	subs	r3, #1
 8021082:	9307      	str	r3, [sp, #28]
 8021084:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021086:	3302      	adds	r3, #2
 8021088:	930a      	str	r3, [sp, #40]	; 0x28
 802108a:	e66b      	b.n	8020d64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802108c:	d024      	beq.n	80210d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802108e:	9b07      	ldr	r3, [sp, #28]
 8021090:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8021092:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021094:	3b01      	subs	r3, #1
 8021096:	fb00 4003 	mla	r0, r0, r3, r4
 802109a:	1400      	asrs	r0, r0, #16
 802109c:	f53f ae80 	bmi.w	8020da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210a0:	3901      	subs	r1, #1
 80210a2:	4288      	cmp	r0, r1
 80210a4:	f6bf ae7c 	bge.w	8020da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210a8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80210aa:	fb01 5303 	mla	r3, r1, r3, r5
 80210ae:	141b      	asrs	r3, r3, #16
 80210b0:	f53f ae76 	bmi.w	8020da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210b4:	3a01      	subs	r2, #1
 80210b6:	4293      	cmp	r3, r2
 80210b8:	f6bf ae72 	bge.w	8020da0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210bc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80210c0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80210c4:	f1bb 0f00 	cmp.w	fp, #0
 80210c8:	dc70      	bgt.n	80211ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80210ca:	9b07      	ldr	r3, [sp, #28]
 80210cc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80210d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80210d2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80210d6:	930a      	str	r3, [sp, #40]	; 0x28
 80210d8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80210da:	2b00      	cmp	r3, #0
 80210dc:	f340 81ae 	ble.w	802143c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80210e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80210e4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80210e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80210ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80210ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80210f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80210f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80210fa:	eef0 6a62 	vmov.f32	s13, s5
 80210fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021102:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021106:	ee77 2a62 	vsub.f32	s5, s14, s5
 802110a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802110e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021112:	eef0 6a43 	vmov.f32	s13, s6
 8021116:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802111a:	ee12 2a90 	vmov	r2, s5
 802111e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021122:	fb92 f3f3 	sdiv	r3, r2, r3
 8021126:	ee13 2a10 	vmov	r2, s6
 802112a:	9327      	str	r3, [sp, #156]	; 0x9c
 802112c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802112e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021132:	9328      	str	r3, [sp, #160]	; 0xa0
 8021134:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021136:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021138:	3b01      	subs	r3, #1
 802113a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802113e:	9316      	str	r3, [sp, #88]	; 0x58
 8021140:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021142:	bf08      	it	eq
 8021144:	4613      	moveq	r3, r2
 8021146:	ee16 5a90 	vmov	r5, s13
 802114a:	9307      	str	r3, [sp, #28]
 802114c:	eeb0 3a67 	vmov.f32	s6, s15
 8021150:	eef0 2a47 	vmov.f32	s5, s14
 8021154:	e5f8      	b.n	8020d48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021156:	2800      	cmp	r0, #0
 8021158:	f43f ae6b 	beq.w	8020e32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802115c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021160:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021164:	9108      	str	r1, [sp, #32]
 8021166:	0e09      	lsrs	r1, r1, #24
 8021168:	9110      	str	r1, [sp, #64]	; 0x40
 802116a:	e662      	b.n	8020e32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802116c:	f113 0801 	adds.w	r8, r3, #1
 8021170:	f53f af74 	bmi.w	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021174:	4541      	cmp	r1, r8
 8021176:	f6ff af71 	blt.w	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802117a:	f11c 0801 	adds.w	r8, ip, #1
 802117e:	f53f af6d 	bmi.w	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021182:	45c6      	cmp	lr, r8
 8021184:	f6ff af6a 	blt.w	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021188:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802118c:	b209      	sxth	r1, r1
 802118e:	fa0f f38e 	sxth.w	r3, lr
 8021192:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8021196:	9301      	str	r3, [sp, #4]
 8021198:	9100      	str	r1, [sp, #0]
 802119a:	4633      	mov	r3, r6
 802119c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802119e:	9819      	ldr	r0, [sp, #100]	; 0x64
 80211a0:	4639      	mov	r1, r7
 80211a2:	f7ff fc7a 	bl	8020a9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80211a6:	e759      	b.n	802105c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80211a8:	fffff800 	.word	0xfffff800
 80211ac:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80211ae:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80211b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80211b4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80211b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80211ba:	1427      	asrs	r7, r4, #16
 80211bc:	142b      	asrs	r3, r5, #16
 80211be:	fb01 7303 	mla	r3, r1, r3, r7
 80211c2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80211c4:	18e7      	adds	r7, r4, r3
 80211c6:	5ce3      	ldrb	r3, [r4, r3]
 80211c8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80211cc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80211d0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80211d4:	2a00      	cmp	r2, #0
 80211d6:	f000 8127 	beq.w	8021428 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80211da:	f897 e001 	ldrb.w	lr, [r7, #1]
 80211de:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80211e2:	940d      	str	r4, [sp, #52]	; 0x34
 80211e4:	0e24      	lsrs	r4, r4, #24
 80211e6:	9414      	str	r4, [sp, #80]	; 0x50
 80211e8:	b170      	cbz	r0, 8021208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80211ea:	eb07 0e01 	add.w	lr, r7, r1
 80211ee:	5c79      	ldrb	r1, [r7, r1]
 80211f0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80211f4:	9109      	str	r1, [sp, #36]	; 0x24
 80211f6:	0e09      	lsrs	r1, r1, #24
 80211f8:	9111      	str	r1, [sp, #68]	; 0x44
 80211fa:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80211fe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021202:	910e      	str	r1, [sp, #56]	; 0x38
 8021204:	0e09      	lsrs	r1, r1, #24
 8021206:	9115      	str	r1, [sp, #84]	; 0x54
 8021208:	b292      	uxth	r2, r2
 802120a:	b280      	uxth	r0, r0
 802120c:	fb02 f800 	mul.w	r8, r2, r0
 8021210:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021214:	0112      	lsls	r2, r2, #4
 8021216:	eba2 0e08 	sub.w	lr, r2, r8
 802121a:	b280      	uxth	r0, r0
 802121c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021220:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021222:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021224:	fa1f fe8e 	uxth.w	lr, lr
 8021228:	1a09      	subs	r1, r1, r0
 802122a:	b289      	uxth	r1, r1
 802122c:	fb0e f202 	mul.w	r2, lr, r2
 8021230:	fb01 220c 	mla	r2, r1, ip, r2
 8021234:	fb00 2204 	mla	r2, r0, r4, r2
 8021238:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802123a:	fb08 2204 	mla	r2, r8, r4, r2
 802123e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021242:	2a00      	cmp	r2, #0
 8021244:	f000 80e5 	beq.w	8021412 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021248:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802124c:	d019      	beq.n	8021282 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802124e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021252:	fb0c fa0a 	mul.w	sl, ip, sl
 8021256:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802125a:	fb0c fc03 	mul.w	ip, ip, r3
 802125e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021262:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021266:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802126a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802126e:	4453      	add	r3, sl
 8021270:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021274:	0a1b      	lsrs	r3, r3, #8
 8021276:	0a3f      	lsrs	r7, r7, #8
 8021278:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802127c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021280:	433b      	orrs	r3, r7
 8021282:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021284:	2cff      	cmp	r4, #255	; 0xff
 8021286:	d020      	beq.n	80212ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021288:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802128a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802128e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021290:	4367      	muls	r7, r4
 8021292:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021294:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021298:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802129a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802129e:	fb04 fa0a 	mul.w	sl, r4, sl
 80212a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80212a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212aa:	44bc      	add	ip, r7
 80212ac:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80212b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80212b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80212b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80212bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80212c4:	ea4c 040a 	orr.w	r4, ip, sl
 80212c8:	940d      	str	r4, [sp, #52]	; 0x34
 80212ca:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80212cc:	2cff      	cmp	r4, #255	; 0xff
 80212ce:	d020      	beq.n	8021312 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80212d0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80212d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80212d6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80212d8:	4367      	muls	r7, r4
 80212da:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80212dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80212e0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80212e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80212e6:	fb04 fa0a 	mul.w	sl, r4, sl
 80212ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80212ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212f2:	44bc      	add	ip, r7
 80212f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80212f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80212fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021300:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021304:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021308:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802130c:	ea4c 040a 	orr.w	r4, ip, sl
 8021310:	9409      	str	r4, [sp, #36]	; 0x24
 8021312:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021314:	2cff      	cmp	r4, #255	; 0xff
 8021316:	d020      	beq.n	802135a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8021318:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802131a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802131e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021320:	4367      	muls	r7, r4
 8021322:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021324:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021328:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802132a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802132e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021332:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021336:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802133a:	44bc      	add	ip, r7
 802133c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021340:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021344:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021348:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802134c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021350:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021354:	ea4c 040a 	orr.w	r4, ip, sl
 8021358:	940e      	str	r4, [sp, #56]	; 0x38
 802135a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802135c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021360:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021362:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021366:	fb0e f707 	mul.w	r7, lr, r7
 802136a:	fb01 770c 	mla	r7, r1, ip, r7
 802136e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021372:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021374:	fb00 770c 	mla	r7, r0, ip, r7
 8021378:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802137c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802137e:	fb08 770c 	mla	r7, r8, ip, r7
 8021382:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021386:	fb0e fe0c 	mul.w	lr, lr, ip
 802138a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802138e:	fb01 e303 	mla	r3, r1, r3, lr
 8021392:	9909      	ldr	r1, [sp, #36]	; 0x24
 8021394:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021398:	990e      	ldr	r1, [sp, #56]	; 0x38
 802139a:	fb00 330a 	mla	r3, r0, sl, r3
 802139e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80213a2:	fb08 3c0c 	mla	ip, r8, ip, r3
 80213a6:	f8b9 3000 	ldrh.w	r3, [r9]
 80213aa:	43d2      	mvns	r2, r2
 80213ac:	1218      	asrs	r0, r3, #8
 80213ae:	b2d2      	uxtb	r2, r2
 80213b0:	10d9      	asrs	r1, r3, #3
 80213b2:	0a3f      	lsrs	r7, r7, #8
 80213b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80213bc:	00db      	lsls	r3, r3, #3
 80213be:	4350      	muls	r0, r2
 80213c0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80213c4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80213c8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80213cc:	b2db      	uxtb	r3, r3
 80213ce:	ea47 070c 	orr.w	r7, r7, ip
 80213d2:	4351      	muls	r1, r2
 80213d4:	4353      	muls	r3, r2
 80213d6:	1c42      	adds	r2, r0, #1
 80213d8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80213dc:	0c3a      	lsrs	r2, r7, #16
 80213de:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80213e2:	4a18      	ldr	r2, [pc, #96]	; (8021444 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80213e4:	b2c0      	uxtb	r0, r0
 80213e6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80213ea:	1c4a      	adds	r2, r1, #1
 80213ec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80213f0:	0a3a      	lsrs	r2, r7, #8
 80213f2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80213f6:	00c9      	lsls	r1, r1, #3
 80213f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80213fc:	4301      	orrs	r1, r0
 80213fe:	1c58      	adds	r0, r3, #1
 8021400:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021404:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021408:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 802140c:	4308      	orrs	r0, r1
 802140e:	f8a9 0000 	strh.w	r0, [r9]
 8021412:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021414:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021416:	441a      	add	r2, r3
 8021418:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802141a:	9225      	str	r2, [sp, #148]	; 0x94
 802141c:	f109 0902 	add.w	r9, r9, #2
 8021420:	441d      	add	r5, r3
 8021422:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021426:	e64d      	b.n	80210c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8021428:	2800      	cmp	r0, #0
 802142a:	f43f aeed 	beq.w	8021208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802142e:	5c79      	ldrb	r1, [r7, r1]
 8021430:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021434:	9109      	str	r1, [sp, #36]	; 0x24
 8021436:	0e09      	lsrs	r1, r1, #24
 8021438:	9111      	str	r1, [sp, #68]	; 0x44
 802143a:	e6e5      	b.n	8021208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802143c:	b01b      	add	sp, #108	; 0x6c
 802143e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021442:	bf00      	nop
 8021444:	fffff800 	.word	0xfffff800

08021448 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802144c:	b085      	sub	sp, #20
 802144e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021452:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021456:	9103      	str	r1, [sp, #12]
 8021458:	fb00 7406 	mla	r4, r0, r6, r7
 802145c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021460:	2800      	cmp	r0, #0
 8021462:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021466:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802146a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802146e:	9501      	str	r5, [sp, #4]
 8021470:	eb03 0904 	add.w	r9, r3, r4
 8021474:	f2c0 8150 	blt.w	8021718 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021478:	4583      	cmp	fp, r0
 802147a:	f340 814d 	ble.w	8021718 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802147e:	2f00      	cmp	r7, #0
 8021480:	f2c0 8146 	blt.w	8021710 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021484:	42be      	cmp	r6, r7
 8021486:	f340 8143 	ble.w	8021710 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802148a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802148e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8021492:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021496:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802149a:	4355      	muls	r5, r2
 802149c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80214a0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80214a4:	fb0c f203 	mul.w	r2, ip, r3
 80214a8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80214ac:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80214b0:	441d      	add	r5, r3
 80214b2:	f102 0320 	add.w	r3, r2, #32
 80214b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80214ba:	0a1b      	lsrs	r3, r3, #8
 80214bc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80214c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80214c4:	431c      	orrs	r4, r3
 80214c6:	1c7b      	adds	r3, r7, #1
 80214c8:	f100 812b 	bmi.w	8021722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80214cc:	429e      	cmp	r6, r3
 80214ce:	f340 8128 	ble.w	8021722 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80214d2:	2900      	cmp	r1, #0
 80214d4:	f000 8128 	beq.w	8021728 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80214d8:	9a01      	ldr	r2, [sp, #4]
 80214da:	f899 3001 	ldrb.w	r3, [r9, #1]
 80214de:	8855      	ldrh	r5, [r2, #2]
 80214e0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80214e4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80214e8:	fb08 f802 	mul.w	r8, r8, r2
 80214ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80214f0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80214f4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80214f8:	435d      	muls	r5, r3
 80214fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80214fe:	44d0      	add	r8, sl
 8021500:	f105 0a20 	add.w	sl, r5, #32
 8021504:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021508:	0a2d      	lsrs	r5, r5, #8
 802150a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802150e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021512:	432a      	orrs	r2, r5
 8021514:	3001      	adds	r0, #1
 8021516:	f100 810d 	bmi.w	8021734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802151a:	4583      	cmp	fp, r0
 802151c:	f340 810a 	ble.w	8021734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021520:	f1be 0f00 	cmp.w	lr, #0
 8021524:	f000 810b 	beq.w	802173e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8021528:	2f00      	cmp	r7, #0
 802152a:	f2c0 8100 	blt.w	802172e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802152e:	42be      	cmp	r6, r7
 8021530:	f340 80fd 	ble.w	802172e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021534:	9801      	ldr	r0, [sp, #4]
 8021536:	f819 5006 	ldrb.w	r5, [r9, r6]
 802153a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802153e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021542:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021546:	fb0a fa00 	mul.w	sl, sl, r0
 802154a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802154e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021552:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021556:	fb05 f808 	mul.w	r8, r5, r8
 802155a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802155e:	4482      	add	sl, r0
 8021560:	f108 0020 	add.w	r0, r8, #32
 8021564:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021568:	0a00      	lsrs	r0, r0, #8
 802156a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802156e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021572:	ea4b 0b00 	orr.w	fp, fp, r0
 8021576:	3701      	adds	r7, #1
 8021578:	f100 80e6 	bmi.w	8021748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802157c:	42be      	cmp	r6, r7
 802157e:	f340 80e3 	ble.w	8021748 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021582:	2900      	cmp	r1, #0
 8021584:	f000 80e3 	beq.w	802174e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021588:	3601      	adds	r6, #1
 802158a:	9801      	ldr	r0, [sp, #4]
 802158c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021590:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021594:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021598:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802159c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215a0:	fb09 f906 	mul.w	r9, r9, r6
 80215a4:	fb07 f800 	mul.w	r8, r7, r0
 80215a8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80215ac:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80215b0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80215b4:	44d1      	add	r9, sl
 80215b6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80215ba:	f108 0020 	add.w	r0, r8, #32
 80215be:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80215c2:	0a00      	lsrs	r0, r0, #8
 80215c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215c8:	4330      	orrs	r0, r6
 80215ca:	b28e      	uxth	r6, r1
 80215cc:	fa1f f98e 	uxth.w	r9, lr
 80215d0:	fb06 f809 	mul.w	r8, r6, r9
 80215d4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80215d8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80215dc:	0136      	lsls	r6, r6, #4
 80215de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80215e2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80215e6:	9601      	str	r6, [sp, #4]
 80215e8:	ea4a 0404 	orr.w	r4, sl, r4
 80215ec:	fa1f f689 	uxth.w	r6, r9
 80215f0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80215f4:	fb11 f90e 	smulbb	r9, r1, lr
 80215f8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80215fc:	9602      	str	r6, [sp, #8]
 80215fe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021602:	4626      	mov	r6, r4
 8021604:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021608:	f1ce 0410 	rsb	r4, lr, #16
 802160c:	1a64      	subs	r4, r4, r1
 802160e:	ea4a 0202 	orr.w	r2, sl, r2
 8021612:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021616:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802161a:	434a      	muls	r2, r1
 802161c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021620:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021624:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021628:	fb04 2406 	mla	r4, r4, r6, r2
 802162c:	ea4a 0000 	orr.w	r0, sl, r0
 8021630:	fb09 4200 	mla	r2, r9, r0, r4
 8021634:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021638:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802163c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021640:	ea44 0b0b 	orr.w	fp, r4, fp
 8021644:	9c01      	ldr	r4, [sp, #4]
 8021646:	9e02      	ldr	r6, [sp, #8]
 8021648:	9903      	ldr	r1, [sp, #12]
 802164a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802164e:	1ba4      	subs	r4, r4, r6
 8021650:	9e01      	ldr	r6, [sp, #4]
 8021652:	8808      	ldrh	r0, [r1, #0]
 8021654:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021658:	eba6 0608 	sub.w	r6, r6, r8
 802165c:	b2b6      	uxth	r6, r6
 802165e:	b2a4      	uxth	r4, r4
 8021660:	4373      	muls	r3, r6
 8021662:	fb0c 3304 	mla	r3, ip, r4, r3
 8021666:	9c02      	ldr	r4, [sp, #8]
 8021668:	fb04 3505 	mla	r5, r4, r5, r3
 802166c:	fb08 5707 	mla	r7, r8, r7, r5
 8021670:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021674:	b289      	uxth	r1, r1
 8021676:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802167a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802167e:	434f      	muls	r7, r1
 8021680:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021684:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021688:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802168c:	1c7b      	adds	r3, r7, #1
 802168e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021692:	ea42 0e0e 	orr.w	lr, r2, lr
 8021696:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802169a:	fa1f f28e 	uxth.w	r2, lr
 802169e:	1203      	asrs	r3, r0, #8
 80216a0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80216a4:	b2ff      	uxtb	r7, r7
 80216a6:	1215      	asrs	r5, r2, #8
 80216a8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80216ac:	fb13 f307 	smulbb	r3, r3, r7
 80216b0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80216b4:	fb05 3501 	mla	r5, r5, r1, r3
 80216b8:	10c3      	asrs	r3, r0, #3
 80216ba:	10d4      	asrs	r4, r2, #3
 80216bc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80216c0:	fb13 f307 	smulbb	r3, r3, r7
 80216c4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80216c8:	fb04 3401 	mla	r4, r4, r1, r3
 80216cc:	00c3      	lsls	r3, r0, #3
 80216ce:	00d2      	lsls	r2, r2, #3
 80216d0:	b2db      	uxtb	r3, r3
 80216d2:	fb13 f307 	smulbb	r3, r3, r7
 80216d6:	b2d2      	uxtb	r2, r2
 80216d8:	fb02 3101 	mla	r1, r2, r1, r3
 80216dc:	b2ad      	uxth	r5, r5
 80216de:	b289      	uxth	r1, r1
 80216e0:	b2a4      	uxth	r4, r4
 80216e2:	1c6b      	adds	r3, r5, #1
 80216e4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80216e8:	1c62      	adds	r2, r4, #1
 80216ea:	1c4b      	adds	r3, r1, #1
 80216ec:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80216f0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80216f4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80216f8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80216fc:	0964      	lsrs	r4, r4, #5
 80216fe:	432b      	orrs	r3, r5
 8021700:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021704:	9a03      	ldr	r2, [sp, #12]
 8021706:	4323      	orrs	r3, r4
 8021708:	8013      	strh	r3, [r2, #0]
 802170a:	b005      	add	sp, #20
 802170c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021710:	f04f 0c00 	mov.w	ip, #0
 8021714:	4664      	mov	r4, ip
 8021716:	e6d6      	b.n	80214c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021718:	2300      	movs	r3, #0
 802171a:	469c      	mov	ip, r3
 802171c:	461a      	mov	r2, r3
 802171e:	461c      	mov	r4, r3
 8021720:	e6f8      	b.n	8021514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021722:	2300      	movs	r3, #0
 8021724:	461a      	mov	r2, r3
 8021726:	e6f5      	b.n	8021514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021728:	460b      	mov	r3, r1
 802172a:	460a      	mov	r2, r1
 802172c:	e6f2      	b.n	8021514 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802172e:	2500      	movs	r5, #0
 8021730:	46ab      	mov	fp, r5
 8021732:	e720      	b.n	8021576 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021734:	2700      	movs	r7, #0
 8021736:	463d      	mov	r5, r7
 8021738:	4638      	mov	r0, r7
 802173a:	46bb      	mov	fp, r7
 802173c:	e745      	b.n	80215ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802173e:	4677      	mov	r7, lr
 8021740:	4675      	mov	r5, lr
 8021742:	4670      	mov	r0, lr
 8021744:	46f3      	mov	fp, lr
 8021746:	e740      	b.n	80215ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021748:	2700      	movs	r7, #0
 802174a:	4638      	mov	r0, r7
 802174c:	e73d      	b.n	80215ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802174e:	460f      	mov	r7, r1
 8021750:	4608      	mov	r0, r1
 8021752:	e73a      	b.n	80215ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021758:	b097      	sub	sp, #92	; 0x5c
 802175a:	9214      	str	r2, [sp, #80]	; 0x50
 802175c:	9308      	str	r3, [sp, #32]
 802175e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021760:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021764:	9312      	str	r3, [sp, #72]	; 0x48
 8021766:	9111      	str	r1, [sp, #68]	; 0x44
 8021768:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802176c:	9015      	str	r0, [sp, #84]	; 0x54
 802176e:	6850      	ldr	r0, [r2, #4]
 8021770:	6812      	ldr	r2, [r2, #0]
 8021772:	fb00 1303 	mla	r3, r0, r3, r1
 8021776:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802177a:	9309      	str	r3, [sp, #36]	; 0x24
 802177c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802177e:	681b      	ldr	r3, [r3, #0]
 8021780:	930b      	str	r3, [sp, #44]	; 0x2c
 8021782:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021784:	685b      	ldr	r3, [r3, #4]
 8021786:	930c      	str	r3, [sp, #48]	; 0x30
 8021788:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 802178c:	930a      	str	r3, [sp, #40]	; 0x28
 802178e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021790:	2b00      	cmp	r3, #0
 8021792:	dc03      	bgt.n	802179c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021794:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8021796:	2b00      	cmp	r3, #0
 8021798:	f340 83cb 	ble.w	8021f32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802179c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802179e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80217a2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80217a6:	1e48      	subs	r0, r1, #1
 80217a8:	1e55      	subs	r5, r2, #1
 80217aa:	9b08      	ldr	r3, [sp, #32]
 80217ac:	2b00      	cmp	r3, #0
 80217ae:	f340 81a3 	ble.w	8021af8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80217b2:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80217b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80217b6:	1436      	asrs	r6, r6, #16
 80217b8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80217bc:	d406      	bmi.n	80217cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80217be:	4286      	cmp	r6, r0
 80217c0:	da04      	bge.n	80217cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80217c2:	2b00      	cmp	r3, #0
 80217c4:	db02      	blt.n	80217cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80217c6:	42ab      	cmp	r3, r5
 80217c8:	f2c0 8197 	blt.w	8021afa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80217cc:	3601      	adds	r6, #1
 80217ce:	f100 8184 	bmi.w	8021ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217d2:	42b1      	cmp	r1, r6
 80217d4:	f2c0 8181 	blt.w	8021ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217d8:	3301      	adds	r3, #1
 80217da:	f100 817e 	bmi.w	8021ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217de:	429a      	cmp	r2, r3
 80217e0:	f2c0 817b 	blt.w	8021ada <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217e4:	9b08      	ldr	r3, [sp, #32]
 80217e6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80217e8:	9313      	str	r3, [sp, #76]	; 0x4c
 80217ea:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80217ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80217f0:	2b00      	cmp	r3, #0
 80217f2:	f340 81a4 	ble.w	8021b3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80217f6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80217f8:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80217fa:	1418      	asrs	r0, r3, #16
 80217fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80217fe:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021802:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021804:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021808:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802180a:	142d      	asrs	r5, r5, #16
 802180c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021810:	f100 81f8 	bmi.w	8021c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021814:	f102 3eff 	add.w	lr, r2, #4294967295
 8021818:	4575      	cmp	r5, lr
 802181a:	f280 81f3 	bge.w	8021c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802181e:	2800      	cmp	r0, #0
 8021820:	f2c0 81f0 	blt.w	8021c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021824:	f103 3eff 	add.w	lr, r3, #4294967295
 8021828:	4570      	cmp	r0, lr
 802182a:	f280 81eb 	bge.w	8021c04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802182e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021830:	b212      	sxth	r2, r2
 8021832:	fb00 5002 	mla	r0, r0, r2, r5
 8021836:	fa1f fe81 	uxth.w	lr, r1
 802183a:	eb03 0a00 	add.w	sl, r3, r0
 802183e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021842:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021846:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802184a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802184e:	b29b      	uxth	r3, r3
 8021850:	f1bc 0f00 	cmp.w	ip, #0
 8021854:	f000 81b9 	beq.w	8021bca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021858:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802185c:	940d      	str	r4, [sp, #52]	; 0x34
 802185e:	eb0a 0b02 	add.w	fp, sl, r2
 8021862:	fa1f fa8c 	uxth.w	sl, ip
 8021866:	fb0a fe0e 	mul.w	lr, sl, lr
 802186a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802186e:	fa1f fa8a 	uxth.w	sl, sl
 8021872:	eba5 050e 	sub.w	r5, r5, lr
 8021876:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802187a:	940e      	str	r4, [sp, #56]	; 0x38
 802187c:	eba3 030a 	sub.w	r3, r3, sl
 8021880:	b2ad      	uxth	r5, r5
 8021882:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021884:	b29b      	uxth	r3, r3
 8021886:	fb08 f505 	mul.w	r5, r8, r5
 802188a:	fb09 5303 	mla	r3, r9, r3, r5
 802188e:	fb0a 3304 	mla	r3, sl, r4, r3
 8021892:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021894:	fb0e 3304 	mla	r3, lr, r4, r3
 8021898:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802189c:	2b00      	cmp	r3, #0
 802189e:	f000 810f 	beq.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80218a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80218a4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80218a8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80218ac:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80218b0:	f000 8190 	beq.w	8021bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80218b4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80218b8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80218bc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218c0:	fb09 f000 	mul.w	r0, r9, r0
 80218c4:	fb0a fe0e 	mul.w	lr, sl, lr
 80218c8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80218cc:	f100 0b20 	add.w	fp, r0, #32
 80218d0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80218d4:	44ce      	add	lr, r9
 80218d6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80218da:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80218de:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80218e2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80218e6:	ea4e 0909 	orr.w	r9, lr, r9
 80218ea:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80218ee:	8868      	ldrh	r0, [r5, #2]
 80218f0:	d019      	beq.n	8021926 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80218f2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80218f6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80218fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218fe:	fb08 f800 	mul.w	r8, r8, r0
 8021902:	fb0a fe0e 	mul.w	lr, sl, lr
 8021906:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802190a:	f108 0b20 	add.w	fp, r8, #32
 802190e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021912:	4486      	add	lr, r0
 8021914:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021918:	0a00      	lsrs	r0, r0, #8
 802191a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802191e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021922:	ea4e 0000 	orr.w	r0, lr, r0
 8021926:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802192a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802192e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021932:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021936:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802193a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802193e:	ea4e 0909 	orr.w	r9, lr, r9
 8021942:	ea4a 0000 	orr.w	r0, sl, r0
 8021946:	f1bc 0f00 	cmp.w	ip, #0
 802194a:	f000 8145 	beq.w	8021bd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802194e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021952:	3a01      	subs	r2, #1
 8021954:	0052      	lsls	r2, r2, #1
 8021956:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021958:	3202      	adds	r2, #2
 802195a:	2cff      	cmp	r4, #255	; 0xff
 802195c:	eb05 0e02 	add.w	lr, r5, r2
 8021960:	5aaa      	ldrh	r2, [r5, r2]
 8021962:	d018      	beq.n	8021996 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021964:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021968:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802196c:	fb04 fa02 	mul.w	sl, r4, r2
 8021970:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021974:	fb08 f805 	mul.w	r8, r8, r5
 8021978:	f10a 0520 	add.w	r5, sl, #32
 802197c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021980:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021984:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021988:	4442      	add	r2, r8
 802198a:	0a2d      	lsrs	r5, r5, #8
 802198c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021990:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021994:	432a      	orrs	r2, r5
 8021996:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021998:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802199c:	2cff      	cmp	r4, #255	; 0xff
 802199e:	d01a      	beq.n	80219d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80219a0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80219a4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80219a8:	fb04 fa05 	mul.w	sl, r4, r5
 80219ac:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80219b0:	fb08 f80e 	mul.w	r8, r8, lr
 80219b4:	f10a 0e20 	add.w	lr, sl, #32
 80219b8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80219bc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80219c0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80219c4:	4445      	add	r5, r8
 80219c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80219ca:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80219ce:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80219d2:	ea45 050e 	orr.w	r5, r5, lr
 80219d6:	fb1c fe01 	smulbb	lr, ip, r1
 80219da:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80219de:	f1cc 0810 	rsb	r8, ip, #16
 80219e2:	eba8 0801 	sub.w	r8, r8, r1
 80219e6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80219ea:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80219ee:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80219f2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80219f6:	4341      	muls	r1, r0
 80219f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80219fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021a00:	ea4a 0202 	orr.w	r2, sl, r2
 8021a04:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021a08:	fb09 1108 	mla	r1, r9, r8, r1
 8021a0c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021a10:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021a14:	fb0c 1102 	mla	r1, ip, r2, r1
 8021a18:	ea4b 0505 	orr.w	r5, fp, r5
 8021a1c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021a20:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021a24:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021a28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021a2c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021a30:	ea42 0e0e 	orr.w	lr, r2, lr
 8021a34:	fa1f f28e 	uxth.w	r2, lr
 8021a38:	2bff      	cmp	r3, #255	; 0xff
 8021a3a:	d103      	bne.n	8021a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021a3c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021a3e:	29ff      	cmp	r1, #255	; 0xff
 8021a40:	f000 80de 	beq.w	8021c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021a44:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021a46:	8838      	ldrh	r0, [r7, #0]
 8021a48:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021a4a:	434b      	muls	r3, r1
 8021a4c:	f103 0c01 	add.w	ip, r3, #1
 8021a50:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021a54:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021a58:	fa5f fc83 	uxtb.w	ip, r3
 8021a5c:	1203      	asrs	r3, r0, #8
 8021a5e:	1215      	asrs	r5, r2, #8
 8021a60:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021a64:	fb13 f30c 	smulbb	r3, r3, ip
 8021a68:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021a6c:	fb05 3501 	mla	r5, r5, r1, r3
 8021a70:	10c3      	asrs	r3, r0, #3
 8021a72:	10d1      	asrs	r1, r2, #3
 8021a74:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021a78:	fb13 f30c 	smulbb	r3, r3, ip
 8021a7c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021a80:	fb01 3104 	mla	r1, r1, r4, r3
 8021a84:	00c3      	lsls	r3, r0, #3
 8021a86:	00d2      	lsls	r2, r2, #3
 8021a88:	b2db      	uxtb	r3, r3
 8021a8a:	b2d2      	uxtb	r2, r2
 8021a8c:	fb13 f30c 	smulbb	r3, r3, ip
 8021a90:	b2ad      	uxth	r5, r5
 8021a92:	fb02 3304 	mla	r3, r2, r4, r3
 8021a96:	b29a      	uxth	r2, r3
 8021a98:	1c6b      	adds	r3, r5, #1
 8021a9a:	b289      	uxth	r1, r1
 8021a9c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021aa0:	1c53      	adds	r3, r2, #1
 8021aa2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021aa6:	1c4a      	adds	r2, r1, #1
 8021aa8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021aac:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021ab0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021ab4:	0949      	lsrs	r1, r1, #5
 8021ab6:	432b      	orrs	r3, r5
 8021ab8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021abc:	430b      	orrs	r3, r1
 8021abe:	803b      	strh	r3, [r7, #0]
 8021ac0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021ac2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021ac4:	4413      	add	r3, r2
 8021ac6:	9321      	str	r3, [sp, #132]	; 0x84
 8021ac8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021aca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021acc:	441a      	add	r2, r3
 8021ace:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021ad0:	9222      	str	r2, [sp, #136]	; 0x88
 8021ad2:	3b01      	subs	r3, #1
 8021ad4:	3702      	adds	r7, #2
 8021ad6:	9313      	str	r3, [sp, #76]	; 0x4c
 8021ad8:	e689      	b.n	80217ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021ada:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021adc:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8021ade:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021ae0:	4433      	add	r3, r6
 8021ae2:	9321      	str	r3, [sp, #132]	; 0x84
 8021ae4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ae6:	441c      	add	r4, r3
 8021ae8:	9b08      	ldr	r3, [sp, #32]
 8021aea:	9422      	str	r4, [sp, #136]	; 0x88
 8021aec:	3b01      	subs	r3, #1
 8021aee:	9308      	str	r3, [sp, #32]
 8021af0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021af2:	3302      	adds	r3, #2
 8021af4:	9309      	str	r3, [sp, #36]	; 0x24
 8021af6:	e658      	b.n	80217aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021af8:	d028      	beq.n	8021b4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021afa:	9b08      	ldr	r3, [sp, #32]
 8021afc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021afe:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021b00:	3b01      	subs	r3, #1
 8021b02:	fb00 5003 	mla	r0, r0, r3, r5
 8021b06:	1400      	asrs	r0, r0, #16
 8021b08:	f53f ae6c 	bmi.w	80217e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b0c:	3901      	subs	r1, #1
 8021b0e:	4288      	cmp	r0, r1
 8021b10:	f6bf ae68 	bge.w	80217e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b14:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021b16:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021b18:	fb01 0303 	mla	r3, r1, r3, r0
 8021b1c:	141b      	asrs	r3, r3, #16
 8021b1e:	f53f ae61 	bmi.w	80217e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b22:	3a01      	subs	r2, #1
 8021b24:	4293      	cmp	r3, r2
 8021b26:	f6bf ae5d 	bge.w	80217e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b2a:	9b08      	ldr	r3, [sp, #32]
 8021b2c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021b30:	9313      	str	r3, [sp, #76]	; 0x4c
 8021b32:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021b36:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021b38:	2b00      	cmp	r3, #0
 8021b3a:	f300 8082 	bgt.w	8021c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021b3e:	9b08      	ldr	r3, [sp, #32]
 8021b40:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021b44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b46:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021b4a:	9309      	str	r3, [sp, #36]	; 0x24
 8021b4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021b4e:	2b00      	cmp	r3, #0
 8021b50:	f340 81ef 	ble.w	8021f32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021b54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021b58:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021b5c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021b60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021b66:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021b6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021b6e:	eef0 6a62 	vmov.f32	s13, s5
 8021b72:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021b76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b7a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021b7e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8021b82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021b86:	eef0 6a43 	vmov.f32	s13, s6
 8021b8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021b8e:	ee12 2a90 	vmov	r2, s5
 8021b92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021b96:	fb92 f3f3 	sdiv	r3, r2, r3
 8021b9a:	ee13 2a10 	vmov	r2, s6
 8021b9e:	9323      	str	r3, [sp, #140]	; 0x8c
 8021ba0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021ba2:	fb92 f3f3 	sdiv	r3, r2, r3
 8021ba6:	9324      	str	r3, [sp, #144]	; 0x90
 8021ba8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021baa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021bac:	3b01      	subs	r3, #1
 8021bae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021bb2:	9311      	str	r3, [sp, #68]	; 0x44
 8021bb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021bb6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8021bba:	bf08      	it	eq
 8021bbc:	4613      	moveq	r3, r2
 8021bbe:	9308      	str	r3, [sp, #32]
 8021bc0:	eeb0 3a67 	vmov.f32	s6, s15
 8021bc4:	eef0 2a47 	vmov.f32	s5, s14
 8021bc8:	e5e1      	b.n	802178e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021bca:	fb08 f505 	mul.w	r5, r8, r5
 8021bce:	fb09 5303 	mla	r3, r9, r3, r5
 8021bd2:	e661      	b.n	8021898 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021bd4:	4681      	mov	r9, r0
 8021bd6:	e688      	b.n	80218ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021bd8:	f1c1 0210 	rsb	r2, r1, #16
 8021bdc:	4341      	muls	r1, r0
 8021bde:	fb09 1902 	mla	r9, r9, r2, r1
 8021be2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021be6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021bea:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021bee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021bf2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021bf6:	ea42 0909 	orr.w	r9, r2, r9
 8021bfa:	fa1f f289 	uxth.w	r2, r9
 8021bfe:	e71b      	b.n	8021a38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021c00:	803a      	strh	r2, [r7, #0]
 8021c02:	e75d      	b.n	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c04:	f115 0e01 	adds.w	lr, r5, #1
 8021c08:	f53f af5a 	bmi.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c0c:	4572      	cmp	r2, lr
 8021c0e:	f6ff af57 	blt.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c12:	f110 0e01 	adds.w	lr, r0, #1
 8021c16:	f53f af53 	bmi.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c1a:	4573      	cmp	r3, lr
 8021c1c:	f6ff af50 	blt.w	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c20:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021c22:	9502      	str	r5, [sp, #8]
 8021c24:	b21b      	sxth	r3, r3
 8021c26:	b212      	sxth	r2, r2
 8021c28:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021c2c:	9301      	str	r3, [sp, #4]
 8021c2e:	9200      	str	r2, [sp, #0]
 8021c30:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021c34:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021c38:	4639      	mov	r1, r7
 8021c3a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021c3c:	f7ff fc04 	bl	8021448 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021c40:	e73e      	b.n	8021ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c42:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021c44:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021c48:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021c4a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021c4e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021c50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021c54:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021c56:	141f      	asrs	r7, r3, #16
 8021c58:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021c5a:	141b      	asrs	r3, r3, #16
 8021c5c:	fb01 3707 	mla	r7, r1, r7, r3
 8021c60:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021c62:	fa1f fc82 	uxth.w	ip, r2
 8021c66:	eb03 0a07 	add.w	sl, r3, r7
 8021c6a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021c6e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021c72:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021c76:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021c7a:	b29b      	uxth	r3, r3
 8021c7c:	2d00      	cmp	r5, #0
 8021c7e:	f000 813d 	beq.w	8021efc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021c82:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021c86:	940f      	str	r4, [sp, #60]	; 0x3c
 8021c88:	eb0a 0b01 	add.w	fp, sl, r1
 8021c8c:	fa1f fa85 	uxth.w	sl, r5
 8021c90:	fb0a fc0c 	mul.w	ip, sl, ip
 8021c94:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021c98:	fa1f fa8a 	uxth.w	sl, sl
 8021c9c:	eba0 000c 	sub.w	r0, r0, ip
 8021ca0:	eba3 030a 	sub.w	r3, r3, sl
 8021ca4:	b280      	uxth	r0, r0
 8021ca6:	fb08 f000 	mul.w	r0, r8, r0
 8021caa:	b29b      	uxth	r3, r3
 8021cac:	fb09 0303 	mla	r3, r9, r3, r0
 8021cb0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021cb2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021cb6:	9410      	str	r4, [sp, #64]	; 0x40
 8021cb8:	fb0a 3300 	mla	r3, sl, r0, r3
 8021cbc:	fb0c 3304 	mla	r3, ip, r4, r3
 8021cc0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021cc4:	2b00      	cmp	r3, #0
 8021cc6:	f000 810b 	beq.w	8021ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021cca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021ccc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021cce:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021cd2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021cd6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021cda:	f000 8114 	beq.w	8021f06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8021cde:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021ce2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021ce6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021cea:	fb09 f707 	mul.w	r7, r9, r7
 8021cee:	fb0a fc0c 	mul.w	ip, sl, ip
 8021cf2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021cf6:	f107 0b20 	add.w	fp, r7, #32
 8021cfa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021cfe:	44cc      	add	ip, r9
 8021d00:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021d04:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021d08:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021d0c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021d10:	ea4c 0909 	orr.w	r9, ip, r9
 8021d14:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021d18:	8847      	ldrh	r7, [r0, #2]
 8021d1a:	d019      	beq.n	8021d50 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021d1c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021d20:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021d24:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021d28:	fb08 f807 	mul.w	r8, r8, r7
 8021d2c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021d30:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021d34:	f108 0b20 	add.w	fp, r8, #32
 8021d38:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021d3c:	44bc      	add	ip, r7
 8021d3e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021d42:	0a3f      	lsrs	r7, r7, #8
 8021d44:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021d48:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021d4c:	ea4c 0707 	orr.w	r7, ip, r7
 8021d50:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021d54:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021d58:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021d5c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021d60:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021d64:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021d68:	ea4c 0909 	orr.w	r9, ip, r9
 8021d6c:	ea4a 0707 	orr.w	r7, sl, r7
 8021d70:	2d00      	cmp	r5, #0
 8021d72:	f000 80ca 	beq.w	8021f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021d76:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021d7a:	3901      	subs	r1, #1
 8021d7c:	0049      	lsls	r1, r1, #1
 8021d7e:	3102      	adds	r1, #2
 8021d80:	eb00 0c01 	add.w	ip, r0, r1
 8021d84:	5a41      	ldrh	r1, [r0, r1]
 8021d86:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021d88:	28ff      	cmp	r0, #255	; 0xff
 8021d8a:	d019      	beq.n	8021dc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021d8c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021d8e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021d92:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021d96:	fb04 fa01 	mul.w	sl, r4, r1
 8021d9a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021d9e:	fb08 f800 	mul.w	r8, r8, r0
 8021da2:	f10a 0020 	add.w	r0, sl, #32
 8021da6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021daa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021dae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021db2:	4441      	add	r1, r8
 8021db4:	0a00      	lsrs	r0, r0, #8
 8021db6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021dba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021dbe:	4301      	orrs	r1, r0
 8021dc0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021dc2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021dc6:	2cff      	cmp	r4, #255	; 0xff
 8021dc8:	d01a      	beq.n	8021e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8021dca:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021dce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021dd2:	fb04 fa00 	mul.w	sl, r4, r0
 8021dd6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021dda:	fb08 f80c 	mul.w	r8, r8, ip
 8021dde:	f10a 0c20 	add.w	ip, sl, #32
 8021de2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021de6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021dea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021dee:	4440      	add	r0, r8
 8021df0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021df4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021df8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021dfc:	ea40 000c 	orr.w	r0, r0, ip
 8021e00:	fb15 fc02 	smulbb	ip, r5, r2
 8021e04:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021e08:	f1c5 0810 	rsb	r8, r5, #16
 8021e0c:	eba8 0802 	sub.w	r8, r8, r2
 8021e10:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021e14:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021e18:	437a      	muls	r2, r7
 8021e1a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021e1e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021e22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e26:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021e2a:	fb09 2208 	mla	r2, r9, r8, r2
 8021e2e:	ea4a 0101 	orr.w	r1, sl, r1
 8021e32:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021e36:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021e3a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e3e:	fb05 2201 	mla	r2, r5, r1, r2
 8021e42:	ea4b 0000 	orr.w	r0, fp, r0
 8021e46:	fb0c 2200 	mla	r2, ip, r0, r2
 8021e4a:	0d57      	lsrs	r7, r2, #21
 8021e4c:	0952      	lsrs	r2, r2, #5
 8021e4e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021e52:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021e56:	433a      	orrs	r2, r7
 8021e58:	2bff      	cmp	r3, #255	; 0xff
 8021e5a:	b292      	uxth	r2, r2
 8021e5c:	d102      	bne.n	8021e64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021e5e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021e60:	29ff      	cmp	r1, #255	; 0xff
 8021e62:	d063      	beq.n	8021f2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021e64:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021e66:	f8be 1000 	ldrh.w	r1, [lr]
 8021e6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021e6c:	4343      	muls	r3, r0
 8021e6e:	1c58      	adds	r0, r3, #1
 8021e70:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021e74:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021e78:	1208      	asrs	r0, r1, #8
 8021e7a:	b2db      	uxtb	r3, r3
 8021e7c:	1215      	asrs	r5, r2, #8
 8021e7e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021e82:	fb10 f003 	smulbb	r0, r0, r3
 8021e86:	10cf      	asrs	r7, r1, #3
 8021e88:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021e8c:	00c9      	lsls	r1, r1, #3
 8021e8e:	fb05 0504 	mla	r5, r5, r4, r0
 8021e92:	b2c9      	uxtb	r1, r1
 8021e94:	10d0      	asrs	r0, r2, #3
 8021e96:	00d2      	lsls	r2, r2, #3
 8021e98:	fb11 f103 	smulbb	r1, r1, r3
 8021e9c:	b2d2      	uxtb	r2, r2
 8021e9e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021ea2:	fb02 1204 	mla	r2, r2, r4, r1
 8021ea6:	fb17 f703 	smulbb	r7, r7, r3
 8021eaa:	b2ad      	uxth	r5, r5
 8021eac:	b292      	uxth	r2, r2
 8021eae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021eb2:	fb00 7004 	mla	r0, r0, r4, r7
 8021eb6:	1c6b      	adds	r3, r5, #1
 8021eb8:	1c57      	adds	r7, r2, #1
 8021eba:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021ebe:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021ec2:	b280      	uxth	r0, r0
 8021ec4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021ec8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021ecc:	433d      	orrs	r5, r7
 8021ece:	1c47      	adds	r7, r0, #1
 8021ed0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021ed4:	097f      	lsrs	r7, r7, #5
 8021ed6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021eda:	433d      	orrs	r5, r7
 8021edc:	f8ae 5000 	strh.w	r5, [lr]
 8021ee0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021ee2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021ee4:	4413      	add	r3, r2
 8021ee6:	9321      	str	r3, [sp, #132]	; 0x84
 8021ee8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021eea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021eec:	441a      	add	r2, r3
 8021eee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021ef0:	9222      	str	r2, [sp, #136]	; 0x88
 8021ef2:	3b01      	subs	r3, #1
 8021ef4:	f10e 0e02 	add.w	lr, lr, #2
 8021ef8:	9313      	str	r3, [sp, #76]	; 0x4c
 8021efa:	e61c      	b.n	8021b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021efc:	fb08 f000 	mul.w	r0, r8, r0
 8021f00:	fb09 0303 	mla	r3, r9, r3, r0
 8021f04:	e6dc      	b.n	8021cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021f06:	46b9      	mov	r9, r7
 8021f08:	e704      	b.n	8021d14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021f0a:	f1c2 0110 	rsb	r1, r2, #16
 8021f0e:	437a      	muls	r2, r7
 8021f10:	fb09 2901 	mla	r9, r9, r1, r2
 8021f14:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021f18:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021f1c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021f20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f24:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021f28:	4302      	orrs	r2, r0
 8021f2a:	e795      	b.n	8021e58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021f2c:	f8ae 2000 	strh.w	r2, [lr]
 8021f30:	e7d6      	b.n	8021ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021f32:	b017      	add	sp, #92	; 0x5c
 8021f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021f38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021f38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f3c:	b085      	sub	sp, #20
 8021f3e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021f42:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021f46:	9103      	str	r1, [sp, #12]
 8021f48:	fb00 7406 	mla	r4, r0, r6, r7
 8021f4c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021f50:	2800      	cmp	r0, #0
 8021f52:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021f56:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021f5a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021f5e:	9501      	str	r5, [sp, #4]
 8021f60:	eb02 0904 	add.w	r9, r2, r4
 8021f64:	f2c0 8141 	blt.w	80221ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021f68:	4583      	cmp	fp, r0
 8021f6a:	f340 813e 	ble.w	80221ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021f6e:	2f00      	cmp	r7, #0
 8021f70:	f2c0 8137 	blt.w	80221e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021f74:	42be      	cmp	r6, r7
 8021f76:	f340 8134 	ble.w	80221e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021f7a:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021f7e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021f82:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021f86:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021f8a:	4355      	muls	r5, r2
 8021f8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021f90:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021f94:	fb0c f203 	mul.w	r2, ip, r3
 8021f98:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021f9c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021fa0:	441d      	add	r5, r3
 8021fa2:	f102 0320 	add.w	r3, r2, #32
 8021fa6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021faa:	0a1b      	lsrs	r3, r3, #8
 8021fac:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021fb0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021fb4:	431c      	orrs	r4, r3
 8021fb6:	1c7b      	adds	r3, r7, #1
 8021fb8:	f100 811c 	bmi.w	80221f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021fbc:	429e      	cmp	r6, r3
 8021fbe:	f340 8119 	ble.w	80221f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021fc2:	2900      	cmp	r1, #0
 8021fc4:	f000 8119 	beq.w	80221fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021fc8:	9a01      	ldr	r2, [sp, #4]
 8021fca:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021fce:	8855      	ldrh	r5, [r2, #2]
 8021fd0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021fd4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021fd8:	fb08 f802 	mul.w	r8, r8, r2
 8021fdc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021fe0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021fe4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021fe8:	435d      	muls	r5, r3
 8021fea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021fee:	44d0      	add	r8, sl
 8021ff0:	f105 0a20 	add.w	sl, r5, #32
 8021ff4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021ff8:	0a2d      	lsrs	r5, r5, #8
 8021ffa:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021ffe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022002:	432a      	orrs	r2, r5
 8022004:	3001      	adds	r0, #1
 8022006:	f100 80fe 	bmi.w	8022206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802200a:	4583      	cmp	fp, r0
 802200c:	f340 80fb 	ble.w	8022206 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022010:	f1be 0f00 	cmp.w	lr, #0
 8022014:	f000 80fc 	beq.w	8022210 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022018:	2f00      	cmp	r7, #0
 802201a:	f2c0 80f1 	blt.w	8022200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802201e:	42be      	cmp	r6, r7
 8022020:	f340 80ee 	ble.w	8022200 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022024:	9801      	ldr	r0, [sp, #4]
 8022026:	f819 5006 	ldrb.w	r5, [r9, r6]
 802202a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802202e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022032:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022036:	fb0a fa00 	mul.w	sl, sl, r0
 802203a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802203e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022042:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022046:	fb05 f808 	mul.w	r8, r5, r8
 802204a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802204e:	4482      	add	sl, r0
 8022050:	f108 0020 	add.w	r0, r8, #32
 8022054:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022058:	0a00      	lsrs	r0, r0, #8
 802205a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802205e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022062:	ea4b 0b00 	orr.w	fp, fp, r0
 8022066:	3701      	adds	r7, #1
 8022068:	f100 80d7 	bmi.w	802221a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802206c:	42be      	cmp	r6, r7
 802206e:	f340 80d4 	ble.w	802221a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022072:	2900      	cmp	r1, #0
 8022074:	f000 80d4 	beq.w	8022220 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022078:	3601      	adds	r6, #1
 802207a:	9801      	ldr	r0, [sp, #4]
 802207c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022080:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022084:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022088:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802208c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022090:	fb09 f906 	mul.w	r9, r9, r6
 8022094:	fb07 f800 	mul.w	r8, r7, r0
 8022098:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802209c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80220a0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80220a4:	44d1      	add	r9, sl
 80220a6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80220aa:	f108 0020 	add.w	r0, r8, #32
 80220ae:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80220b2:	0a00      	lsrs	r0, r0, #8
 80220b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220b8:	4330      	orrs	r0, r6
 80220ba:	b28e      	uxth	r6, r1
 80220bc:	fa1f f98e 	uxth.w	r9, lr
 80220c0:	fb06 f809 	mul.w	r8, r6, r9
 80220c4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80220c8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80220cc:	0136      	lsls	r6, r6, #4
 80220ce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80220d2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80220d6:	9601      	str	r6, [sp, #4]
 80220d8:	ea4a 0404 	orr.w	r4, sl, r4
 80220dc:	fa1f f689 	uxth.w	r6, r9
 80220e0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80220e4:	fb11 f90e 	smulbb	r9, r1, lr
 80220e8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80220ec:	9602      	str	r6, [sp, #8]
 80220ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80220f2:	4626      	mov	r6, r4
 80220f4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80220f8:	f1ce 0410 	rsb	r4, lr, #16
 80220fc:	1a64      	subs	r4, r4, r1
 80220fe:	ea4a 0202 	orr.w	r2, sl, r2
 8022102:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022106:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802210a:	434a      	muls	r2, r1
 802210c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022110:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022114:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022118:	fb04 2406 	mla	r4, r4, r6, r2
 802211c:	ea4a 0000 	orr.w	r0, sl, r0
 8022120:	fb09 4200 	mla	r2, r9, r0, r4
 8022124:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022128:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802212c:	9801      	ldr	r0, [sp, #4]
 802212e:	9903      	ldr	r1, [sp, #12]
 8022130:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022134:	ea44 0b0b 	orr.w	fp, r4, fp
 8022138:	9c02      	ldr	r4, [sp, #8]
 802213a:	8809      	ldrh	r1, [r1, #0]
 802213c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022140:	1b00      	subs	r0, r0, r4
 8022142:	9c01      	ldr	r4, [sp, #4]
 8022144:	eba4 0608 	sub.w	r6, r4, r8
 8022148:	b2b6      	uxth	r6, r6
 802214a:	b280      	uxth	r0, r0
 802214c:	4373      	muls	r3, r6
 802214e:	fb0c 3300 	mla	r3, ip, r0, r3
 8022152:	9802      	ldr	r0, [sp, #8]
 8022154:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022158:	fb00 3505 	mla	r5, r0, r5, r3
 802215c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022160:	fb08 5707 	mla	r7, r8, r7, r5
 8022164:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022168:	120b      	asrs	r3, r1, #8
 802216a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802216e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022172:	b2ff      	uxtb	r7, r7
 8022174:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022178:	10c8      	asrs	r0, r1, #3
 802217a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802217e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022182:	00c9      	lsls	r1, r1, #3
 8022184:	437b      	muls	r3, r7
 8022186:	ea42 0e0e 	orr.w	lr, r2, lr
 802218a:	b2c9      	uxtb	r1, r1
 802218c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022190:	fa1f f28e 	uxth.w	r2, lr
 8022194:	4378      	muls	r0, r7
 8022196:	434f      	muls	r7, r1
 8022198:	1c59      	adds	r1, r3, #1
 802219a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802219e:	1213      	asrs	r3, r2, #8
 80221a0:	f023 0307 	bic.w	r3, r3, #7
 80221a4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80221a8:	1c41      	adds	r1, r0, #1
 80221aa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80221ae:	10d1      	asrs	r1, r2, #3
 80221b0:	f021 0103 	bic.w	r1, r1, #3
 80221b4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80221b8:	021b      	lsls	r3, r3, #8
 80221ba:	00c9      	lsls	r1, r1, #3
 80221bc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80221c0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80221c4:	430b      	orrs	r3, r1
 80221c6:	1c79      	adds	r1, r7, #1
 80221c8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80221cc:	00d2      	lsls	r2, r2, #3
 80221ce:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80221d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80221d6:	431a      	orrs	r2, r3
 80221d8:	9b03      	ldr	r3, [sp, #12]
 80221da:	801a      	strh	r2, [r3, #0]
 80221dc:	b005      	add	sp, #20
 80221de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221e2:	f04f 0c00 	mov.w	ip, #0
 80221e6:	4664      	mov	r4, ip
 80221e8:	e6e5      	b.n	8021fb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80221ea:	2300      	movs	r3, #0
 80221ec:	469c      	mov	ip, r3
 80221ee:	461a      	mov	r2, r3
 80221f0:	461c      	mov	r4, r3
 80221f2:	e707      	b.n	8022004 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80221f4:	2300      	movs	r3, #0
 80221f6:	461a      	mov	r2, r3
 80221f8:	e704      	b.n	8022004 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80221fa:	460b      	mov	r3, r1
 80221fc:	460a      	mov	r2, r1
 80221fe:	e701      	b.n	8022004 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022200:	2500      	movs	r5, #0
 8022202:	46ab      	mov	fp, r5
 8022204:	e72f      	b.n	8022066 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8022206:	2700      	movs	r7, #0
 8022208:	463d      	mov	r5, r7
 802220a:	4638      	mov	r0, r7
 802220c:	46bb      	mov	fp, r7
 802220e:	e754      	b.n	80220ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022210:	4677      	mov	r7, lr
 8022212:	4675      	mov	r5, lr
 8022214:	4670      	mov	r0, lr
 8022216:	46f3      	mov	fp, lr
 8022218:	e74f      	b.n	80220ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802221a:	2700      	movs	r7, #0
 802221c:	4638      	mov	r0, r7
 802221e:	e74c      	b.n	80220ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022220:	460f      	mov	r7, r1
 8022222:	4608      	mov	r0, r1
 8022224:	e749      	b.n	80220ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08022228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802222c:	b093      	sub	sp, #76	; 0x4c
 802222e:	9210      	str	r2, [sp, #64]	; 0x40
 8022230:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022232:	910e      	str	r1, [sp, #56]	; 0x38
 8022234:	9306      	str	r3, [sp, #24]
 8022236:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802223a:	9011      	str	r0, [sp, #68]	; 0x44
 802223c:	6850      	ldr	r0, [r2, #4]
 802223e:	6812      	ldr	r2, [r2, #0]
 8022240:	fb00 1303 	mla	r3, r0, r3, r1
 8022244:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022248:	9307      	str	r3, [sp, #28]
 802224a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802224c:	681b      	ldr	r3, [r3, #0]
 802224e:	9308      	str	r3, [sp, #32]
 8022250:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022252:	685b      	ldr	r3, [r3, #4]
 8022254:	9309      	str	r3, [sp, #36]	; 0x24
 8022256:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022258:	2b00      	cmp	r3, #0
 802225a:	dc03      	bgt.n	8022264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802225c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802225e:	2b00      	cmp	r3, #0
 8022260:	f340 83b4 	ble.w	80229cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022264:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022266:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802226a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802226e:	1e48      	subs	r0, r1, #1
 8022270:	1e55      	subs	r5, r2, #1
 8022272:	9b06      	ldr	r3, [sp, #24]
 8022274:	2b00      	cmp	r3, #0
 8022276:	f340 8163 	ble.w	8022540 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802227a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 802227c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802227e:	1436      	asrs	r6, r6, #16
 8022280:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022284:	d406      	bmi.n	8022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022286:	4286      	cmp	r6, r0
 8022288:	da04      	bge.n	8022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802228a:	2b00      	cmp	r3, #0
 802228c:	db02      	blt.n	8022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802228e:	42ab      	cmp	r3, r5
 8022290:	f2c0 8157 	blt.w	8022542 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8022294:	3601      	adds	r6, #1
 8022296:	f100 8144 	bmi.w	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802229a:	42b1      	cmp	r1, r6
 802229c:	f2c0 8141 	blt.w	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80222a0:	3301      	adds	r3, #1
 80222a2:	f100 813e 	bmi.w	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80222a6:	429a      	cmp	r2, r3
 80222a8:	f2c0 813b 	blt.w	8022522 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80222ac:	9b06      	ldr	r3, [sp, #24]
 80222ae:	9f07      	ldr	r7, [sp, #28]
 80222b0:	930f      	str	r3, [sp, #60]	; 0x3c
 80222b2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80222b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80222b8:	2b00      	cmp	r3, #0
 80222ba:	f340 8164 	ble.w	8022586 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80222be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80222c0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80222c2:	1418      	asrs	r0, r3, #16
 80222c4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80222c6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80222ca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80222cc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80222d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80222d2:	142d      	asrs	r5, r5, #16
 80222d4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80222d8:	f100 81ee 	bmi.w	80226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222dc:	f102 3eff 	add.w	lr, r2, #4294967295
 80222e0:	4575      	cmp	r5, lr
 80222e2:	f280 81e9 	bge.w	80226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222e6:	2800      	cmp	r0, #0
 80222e8:	f2c0 81e6 	blt.w	80226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222ec:	f103 3eff 	add.w	lr, r3, #4294967295
 80222f0:	4570      	cmp	r0, lr
 80222f2:	f280 81e1 	bge.w	80226b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80222f8:	b212      	sxth	r2, r2
 80222fa:	fb00 5002 	mla	r0, r0, r2, r5
 80222fe:	fa1f fe81 	uxth.w	lr, r1
 8022302:	eb03 0a00 	add.w	sl, r3, r0
 8022306:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802230a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802230e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022312:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022316:	b29b      	uxth	r3, r3
 8022318:	f1bc 0f00 	cmp.w	ip, #0
 802231c:	f000 8179 	beq.w	8022612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022320:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022324:	940a      	str	r4, [sp, #40]	; 0x28
 8022326:	eb0a 0b02 	add.w	fp, sl, r2
 802232a:	fa1f fa8c 	uxth.w	sl, ip
 802232e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022332:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022336:	fa1f fa8a 	uxth.w	sl, sl
 802233a:	eba5 050e 	sub.w	r5, r5, lr
 802233e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022342:	940b      	str	r4, [sp, #44]	; 0x2c
 8022344:	eba3 030a 	sub.w	r3, r3, sl
 8022348:	b2ad      	uxth	r5, r5
 802234a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802234c:	b29b      	uxth	r3, r3
 802234e:	fb08 f505 	mul.w	r5, r8, r5
 8022352:	fb09 5303 	mla	r3, r9, r3, r5
 8022356:	fb0a 3304 	mla	r3, sl, r4, r3
 802235a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802235c:	fb0e 3304 	mla	r3, lr, r4, r3
 8022360:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022364:	2b00      	cmp	r3, #0
 8022366:	f000 80cf 	beq.w	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802236a:	9c08      	ldr	r4, [sp, #32]
 802236c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022370:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022374:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022378:	f000 8150 	beq.w	802261c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802237c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022380:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022384:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022388:	fb09 f000 	mul.w	r0, r9, r0
 802238c:	fb0a fe0e 	mul.w	lr, sl, lr
 8022390:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022394:	f100 0b20 	add.w	fp, r0, #32
 8022398:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802239c:	44ce      	add	lr, r9
 802239e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80223a2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80223a6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80223aa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80223ae:	ea4e 0909 	orr.w	r9, lr, r9
 80223b2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80223b6:	8868      	ldrh	r0, [r5, #2]
 80223b8:	d019      	beq.n	80223ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80223ba:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80223be:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80223c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223c6:	fb08 f800 	mul.w	r8, r8, r0
 80223ca:	fb0a fe0e 	mul.w	lr, sl, lr
 80223ce:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80223d2:	f108 0b20 	add.w	fp, r8, #32
 80223d6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80223da:	4486      	add	lr, r0
 80223dc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80223e0:	0a00      	lsrs	r0, r0, #8
 80223e2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80223e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223ea:	ea4e 0000 	orr.w	r0, lr, r0
 80223ee:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80223f2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80223f6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80223fa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80223fe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022402:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022406:	ea4e 0909 	orr.w	r9, lr, r9
 802240a:	ea4a 0000 	orr.w	r0, sl, r0
 802240e:	f1bc 0f00 	cmp.w	ip, #0
 8022412:	f000 8105 	beq.w	8022620 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022416:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802241a:	3a01      	subs	r2, #1
 802241c:	0052      	lsls	r2, r2, #1
 802241e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022420:	3202      	adds	r2, #2
 8022422:	2cff      	cmp	r4, #255	; 0xff
 8022424:	eb05 0e02 	add.w	lr, r5, r2
 8022428:	5aaa      	ldrh	r2, [r5, r2]
 802242a:	d018      	beq.n	802245e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802242c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022430:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022434:	fb04 fa02 	mul.w	sl, r4, r2
 8022438:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802243c:	fb08 f805 	mul.w	r8, r8, r5
 8022440:	f10a 0520 	add.w	r5, sl, #32
 8022444:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022448:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802244c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022450:	4442      	add	r2, r8
 8022452:	0a2d      	lsrs	r5, r5, #8
 8022454:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022458:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802245c:	432a      	orrs	r2, r5
 802245e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022460:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022464:	2cff      	cmp	r4, #255	; 0xff
 8022466:	d01a      	beq.n	802249e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022468:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802246c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022470:	fb04 fa05 	mul.w	sl, r4, r5
 8022474:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022478:	fb08 f80e 	mul.w	r8, r8, lr
 802247c:	f10a 0e20 	add.w	lr, sl, #32
 8022480:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022484:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022488:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802248c:	4445      	add	r5, r8
 802248e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022492:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022496:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802249a:	ea45 050e 	orr.w	r5, r5, lr
 802249e:	fb1c fe01 	smulbb	lr, ip, r1
 80224a2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80224a6:	f1cc 0810 	rsb	r8, ip, #16
 80224aa:	eba8 0801 	sub.w	r8, r8, r1
 80224ae:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80224b2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80224b6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80224ba:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80224be:	4341      	muls	r1, r0
 80224c0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80224c4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80224c8:	ea4a 0202 	orr.w	r2, sl, r2
 80224cc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80224d0:	fb09 1108 	mla	r1, r9, r8, r1
 80224d4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80224d8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80224dc:	fb0c 1102 	mla	r1, ip, r2, r1
 80224e0:	ea4b 0505 	orr.w	r5, fp, r5
 80224e4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80224e8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80224ec:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80224f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80224f4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80224f8:	ea42 0e0e 	orr.w	lr, r2, lr
 80224fc:	fa1f f28e 	uxth.w	r2, lr
 8022500:	2bff      	cmp	r3, #255	; 0xff
 8022502:	f040 80a1 	bne.w	8022648 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8022506:	803a      	strh	r2, [r7, #0]
 8022508:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802250a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802250c:	4413      	add	r3, r2
 802250e:	931d      	str	r3, [sp, #116]	; 0x74
 8022510:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022512:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022514:	441a      	add	r2, r3
 8022516:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022518:	921e      	str	r2, [sp, #120]	; 0x78
 802251a:	3b01      	subs	r3, #1
 802251c:	3702      	adds	r7, #2
 802251e:	930f      	str	r3, [sp, #60]	; 0x3c
 8022520:	e6c9      	b.n	80222b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022522:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022524:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8022526:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8022528:	4433      	add	r3, r6
 802252a:	931d      	str	r3, [sp, #116]	; 0x74
 802252c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802252e:	441c      	add	r4, r3
 8022530:	9b06      	ldr	r3, [sp, #24]
 8022532:	941e      	str	r4, [sp, #120]	; 0x78
 8022534:	3b01      	subs	r3, #1
 8022536:	9306      	str	r3, [sp, #24]
 8022538:	9b07      	ldr	r3, [sp, #28]
 802253a:	3302      	adds	r3, #2
 802253c:	9307      	str	r3, [sp, #28]
 802253e:	e698      	b.n	8022272 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022540:	d028      	beq.n	8022594 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022542:	9b06      	ldr	r3, [sp, #24]
 8022544:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022546:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022548:	3b01      	subs	r3, #1
 802254a:	fb00 5003 	mla	r0, r0, r3, r5
 802254e:	1400      	asrs	r0, r0, #16
 8022550:	f53f aeac 	bmi.w	80222ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022554:	3901      	subs	r1, #1
 8022556:	4288      	cmp	r0, r1
 8022558:	f6bf aea8 	bge.w	80222ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802255c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802255e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022560:	fb01 0303 	mla	r3, r1, r3, r0
 8022564:	141b      	asrs	r3, r3, #16
 8022566:	f53f aea1 	bmi.w	80222ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802256a:	3a01      	subs	r2, #1
 802256c:	4293      	cmp	r3, r2
 802256e:	f6bf ae9d 	bge.w	80222ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022572:	9b06      	ldr	r3, [sp, #24]
 8022574:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022578:	930f      	str	r3, [sp, #60]	; 0x3c
 802257a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802257e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022580:	2b00      	cmp	r3, #0
 8022582:	f300 80b6 	bgt.w	80226f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8022586:	9b06      	ldr	r3, [sp, #24]
 8022588:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802258c:	9b07      	ldr	r3, [sp, #28]
 802258e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022592:	9307      	str	r3, [sp, #28]
 8022594:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022596:	2b00      	cmp	r3, #0
 8022598:	f340 8218 	ble.w	80229cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802259c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80225a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80225aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225b6:	eef0 6a62 	vmov.f32	s13, s5
 80225ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225c6:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80225ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225ce:	eef0 6a43 	vmov.f32	s13, s6
 80225d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80225d6:	ee12 2a90 	vmov	r2, s5
 80225da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80225de:	fb92 f3f3 	sdiv	r3, r2, r3
 80225e2:	ee13 2a10 	vmov	r2, s6
 80225e6:	931f      	str	r3, [sp, #124]	; 0x7c
 80225e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80225ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80225ee:	9320      	str	r3, [sp, #128]	; 0x80
 80225f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80225f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80225f4:	3b01      	subs	r3, #1
 80225f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225fa:	930e      	str	r3, [sp, #56]	; 0x38
 80225fc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80225fe:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8022602:	bf08      	it	eq
 8022604:	4613      	moveq	r3, r2
 8022606:	9306      	str	r3, [sp, #24]
 8022608:	eeb0 3a67 	vmov.f32	s6, s15
 802260c:	eef0 2a47 	vmov.f32	s5, s14
 8022610:	e621      	b.n	8022256 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022612:	fb08 f505 	mul.w	r5, r8, r5
 8022616:	fb09 5303 	mla	r3, r9, r3, r5
 802261a:	e6a1      	b.n	8022360 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802261c:	4681      	mov	r9, r0
 802261e:	e6c8      	b.n	80223b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022620:	f1c1 0210 	rsb	r2, r1, #16
 8022624:	4341      	muls	r1, r0
 8022626:	fb09 1902 	mla	r9, r9, r2, r1
 802262a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802262e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022632:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022636:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802263a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802263e:	ea42 0909 	orr.w	r9, r2, r9
 8022642:	fa1f f289 	uxth.w	r2, r9
 8022646:	e75b      	b.n	8022500 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022648:	f8b7 c000 	ldrh.w	ip, [r7]
 802264c:	43db      	mvns	r3, r3
 802264e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022652:	fa5f fe83 	uxtb.w	lr, r3
 8022656:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802265a:	fb00 f00e 	mul.w	r0, r0, lr
 802265e:	1c41      	adds	r1, r0, #1
 8022660:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022664:	1211      	asrs	r1, r2, #8
 8022666:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802266a:	f021 0107 	bic.w	r1, r1, #7
 802266e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022672:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022676:	48d7      	ldr	r0, [pc, #860]	; (80229d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022678:	fb05 f50e 	mul.w	r5, r5, lr
 802267c:	b2c9      	uxtb	r1, r1
 802267e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022682:	1c69      	adds	r1, r5, #1
 8022684:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022688:	10d1      	asrs	r1, r2, #3
 802268a:	f021 0103 	bic.w	r1, r1, #3
 802268e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022692:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022696:	b2db      	uxtb	r3, r3
 8022698:	00c9      	lsls	r1, r1, #3
 802269a:	fb03 f30e 	mul.w	r3, r3, lr
 802269e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80226a2:	4301      	orrs	r1, r0
 80226a4:	1c58      	adds	r0, r3, #1
 80226a6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80226aa:	00d2      	lsls	r2, r2, #3
 80226ac:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80226b0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80226b4:	430a      	orrs	r2, r1
 80226b6:	e726      	b.n	8022506 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80226b8:	f115 0e01 	adds.w	lr, r5, #1
 80226bc:	f53f af24 	bmi.w	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226c0:	4572      	cmp	r2, lr
 80226c2:	f6ff af21 	blt.w	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226c6:	f110 0e01 	adds.w	lr, r0, #1
 80226ca:	f53f af1d 	bmi.w	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226ce:	4573      	cmp	r3, lr
 80226d0:	f6ff af1a 	blt.w	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226d4:	b21b      	sxth	r3, r3
 80226d6:	b212      	sxth	r2, r2
 80226d8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80226dc:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80226e0:	9301      	str	r3, [sp, #4]
 80226e2:	9200      	str	r2, [sp, #0]
 80226e4:	4639      	mov	r1, r7
 80226e6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80226ea:	9811      	ldr	r0, [sp, #68]	; 0x44
 80226ec:	f7ff fc24 	bl	8021f38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80226f0:	e70a      	b.n	8022508 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226f2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80226f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80226f8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80226fa:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80226fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022700:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022704:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022706:	141f      	asrs	r7, r3, #16
 8022708:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802270a:	141b      	asrs	r3, r3, #16
 802270c:	fb01 3707 	mla	r7, r1, r7, r3
 8022710:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022712:	fa1f fc82 	uxth.w	ip, r2
 8022716:	eb03 0a07 	add.w	sl, r3, r7
 802271a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802271e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022722:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022726:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802272a:	b29b      	uxth	r3, r3
 802272c:	2d00      	cmp	r5, #0
 802272e:	f000 80fe 	beq.w	802292e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022732:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022736:	940c      	str	r4, [sp, #48]	; 0x30
 8022738:	eb0a 0b01 	add.w	fp, sl, r1
 802273c:	fa1f fa85 	uxth.w	sl, r5
 8022740:	fb0a fc0c 	mul.w	ip, sl, ip
 8022744:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022748:	fa1f fa8a 	uxth.w	sl, sl
 802274c:	eba0 000c 	sub.w	r0, r0, ip
 8022750:	eba3 030a 	sub.w	r3, r3, sl
 8022754:	b280      	uxth	r0, r0
 8022756:	fb08 f000 	mul.w	r0, r8, r0
 802275a:	b29b      	uxth	r3, r3
 802275c:	fb09 0303 	mla	r3, r9, r3, r0
 8022760:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022762:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022766:	940d      	str	r4, [sp, #52]	; 0x34
 8022768:	fb0a 3300 	mla	r3, sl, r0, r3
 802276c:	fb0c 3304 	mla	r3, ip, r4, r3
 8022770:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022774:	2b00      	cmp	r3, #0
 8022776:	f000 80cc 	beq.w	8022912 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802277a:	9808      	ldr	r0, [sp, #32]
 802277c:	9c08      	ldr	r4, [sp, #32]
 802277e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022782:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022786:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802278a:	f000 80d5 	beq.w	8022938 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802278e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022792:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022796:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802279a:	fb09 f707 	mul.w	r7, r9, r7
 802279e:	fb0a fc0c 	mul.w	ip, sl, ip
 80227a2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80227a6:	f107 0b20 	add.w	fp, r7, #32
 80227aa:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80227ae:	44cc      	add	ip, r9
 80227b0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80227b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80227b8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80227bc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80227c0:	ea4c 0909 	orr.w	r9, ip, r9
 80227c4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80227c8:	8847      	ldrh	r7, [r0, #2]
 80227ca:	d019      	beq.n	8022800 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80227cc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80227d0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80227d4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80227d8:	fb08 f807 	mul.w	r8, r8, r7
 80227dc:	fb0a fc0c 	mul.w	ip, sl, ip
 80227e0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80227e4:	f108 0b20 	add.w	fp, r8, #32
 80227e8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80227ec:	44bc      	add	ip, r7
 80227ee:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80227f2:	0a3f      	lsrs	r7, r7, #8
 80227f4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80227f8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80227fc:	ea4c 0707 	orr.w	r7, ip, r7
 8022800:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022804:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022808:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802280c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022810:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022814:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022818:	ea4c 0909 	orr.w	r9, ip, r9
 802281c:	ea4a 0707 	orr.w	r7, sl, r7
 8022820:	2d00      	cmp	r5, #0
 8022822:	f000 808b 	beq.w	802293c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022826:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802282a:	3901      	subs	r1, #1
 802282c:	0049      	lsls	r1, r1, #1
 802282e:	3102      	adds	r1, #2
 8022830:	eb00 0c01 	add.w	ip, r0, r1
 8022834:	5a41      	ldrh	r1, [r0, r1]
 8022836:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022838:	28ff      	cmp	r0, #255	; 0xff
 802283a:	d019      	beq.n	8022870 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802283c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802283e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022842:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022846:	fb04 fa01 	mul.w	sl, r4, r1
 802284a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802284e:	fb08 f800 	mul.w	r8, r8, r0
 8022852:	f10a 0020 	add.w	r0, sl, #32
 8022856:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802285a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802285e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022862:	4441      	add	r1, r8
 8022864:	0a00      	lsrs	r0, r0, #8
 8022866:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802286a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802286e:	4301      	orrs	r1, r0
 8022870:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022872:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022876:	2cff      	cmp	r4, #255	; 0xff
 8022878:	d01a      	beq.n	80228b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802287a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802287e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022882:	fb04 fa00 	mul.w	sl, r4, r0
 8022886:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802288a:	fb08 f80c 	mul.w	r8, r8, ip
 802288e:	f10a 0c20 	add.w	ip, sl, #32
 8022892:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8022896:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802289a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802289e:	4440      	add	r0, r8
 80228a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80228a4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80228a8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80228ac:	ea40 000c 	orr.w	r0, r0, ip
 80228b0:	fb15 fc02 	smulbb	ip, r5, r2
 80228b4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80228b8:	f1c5 0810 	rsb	r8, r5, #16
 80228bc:	eba8 0802 	sub.w	r8, r8, r2
 80228c0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80228c4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80228c8:	437a      	muls	r2, r7
 80228ca:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80228ce:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80228d2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80228d6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80228da:	fb09 2208 	mla	r2, r9, r8, r2
 80228de:	ea4a 0101 	orr.w	r1, sl, r1
 80228e2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80228e6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80228ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80228ee:	fb05 2201 	mla	r2, r5, r1, r2
 80228f2:	ea4b 0000 	orr.w	r0, fp, r0
 80228f6:	fb0c 2200 	mla	r2, ip, r0, r2
 80228fa:	0d57      	lsrs	r7, r2, #21
 80228fc:	0952      	lsrs	r2, r2, #5
 80228fe:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022902:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022906:	433a      	orrs	r2, r7
 8022908:	2bff      	cmp	r3, #255	; 0xff
 802290a:	b292      	uxth	r2, r2
 802290c:	d127      	bne.n	802295e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802290e:	f8ae 2000 	strh.w	r2, [lr]
 8022912:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022914:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022916:	4413      	add	r3, r2
 8022918:	931d      	str	r3, [sp, #116]	; 0x74
 802291a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802291c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802291e:	441a      	add	r2, r3
 8022920:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022922:	921e      	str	r2, [sp, #120]	; 0x78
 8022924:	3b01      	subs	r3, #1
 8022926:	f10e 0e02 	add.w	lr, lr, #2
 802292a:	930f      	str	r3, [sp, #60]	; 0x3c
 802292c:	e627      	b.n	802257e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802292e:	fb08 f000 	mul.w	r0, r8, r0
 8022932:	fb09 0303 	mla	r3, r9, r3, r0
 8022936:	e71b      	b.n	8022770 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022938:	46b9      	mov	r9, r7
 802293a:	e743      	b.n	80227c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802293c:	f1c2 0110 	rsb	r1, r2, #16
 8022940:	437a      	muls	r2, r7
 8022942:	fb09 2901 	mla	r9, r9, r1, r2
 8022946:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802294a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802294e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022952:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022956:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802295a:	4302      	orrs	r2, r0
 802295c:	e7d4      	b.n	8022908 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802295e:	f8be 7000 	ldrh.w	r7, [lr]
 8022962:	4c1c      	ldr	r4, [pc, #112]	; (80229d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022964:	43db      	mvns	r3, r3
 8022966:	1238      	asrs	r0, r7, #8
 8022968:	fa5f fc83 	uxtb.w	ip, r3
 802296c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022970:	10fd      	asrs	r5, r7, #3
 8022972:	fb00 f00c 	mul.w	r0, r0, ip
 8022976:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802297a:	fb05 f10c 	mul.w	r1, r5, ip
 802297e:	1c45      	adds	r5, r0, #1
 8022980:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022984:	1215      	asrs	r5, r2, #8
 8022986:	f025 0507 	bic.w	r5, r5, #7
 802298a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802298e:	1c4d      	adds	r5, r1, #1
 8022990:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022994:	10d1      	asrs	r1, r2, #3
 8022996:	f021 0103 	bic.w	r1, r1, #3
 802299a:	00fb      	lsls	r3, r7, #3
 802299c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80229a0:	b2db      	uxtb	r3, r3
 80229a2:	b2c0      	uxtb	r0, r0
 80229a4:	00c9      	lsls	r1, r1, #3
 80229a6:	fb03 f30c 	mul.w	r3, r3, ip
 80229aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80229ae:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80229b2:	4308      	orrs	r0, r1
 80229b4:	1c59      	adds	r1, r3, #1
 80229b6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80229ba:	00d2      	lsls	r2, r2, #3
 80229bc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80229c0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80229c4:	4318      	orrs	r0, r3
 80229c6:	f8ae 0000 	strh.w	r0, [lr]
 80229ca:	e7a2      	b.n	8022912 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80229cc:	b013      	add	sp, #76	; 0x4c
 80229ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80229d2:	bf00      	nop
 80229d4:	fffff800 	.word	0xfffff800

080229d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80229d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80229dc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80229e0:	fb05 4c03 	mla	ip, r5, r3, r4
 80229e4:	2d00      	cmp	r5, #0
 80229e6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80229ea:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80229ee:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80229f2:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80229f6:	8808      	ldrh	r0, [r1, #0]
 80229f8:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80229fc:	f2c0 80a7 	blt.w	8022b4e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022a00:	45aa      	cmp	sl, r5
 8022a02:	f340 80a4 	ble.w	8022b4e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022a06:	2c00      	cmp	r4, #0
 8022a08:	f2c0 809f 	blt.w	8022b4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022a0c:	42a3      	cmp	r3, r4
 8022a0e:	f340 809c 	ble.w	8022b4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022a12:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022a16:	1c62      	adds	r2, r4, #1
 8022a18:	f100 809c 	bmi.w	8022b54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022a1c:	4293      	cmp	r3, r2
 8022a1e:	f340 8099 	ble.w	8022b54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022a22:	f1b9 0f00 	cmp.w	r9, #0
 8022a26:	f000 8095 	beq.w	8022b54 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022a2a:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022a2e:	3501      	adds	r5, #1
 8022a30:	f100 8094 	bmi.w	8022b5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022a34:	45aa      	cmp	sl, r5
 8022a36:	f340 8091 	ble.w	8022b5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022a3a:	2f00      	cmp	r7, #0
 8022a3c:	f000 808e 	beq.w	8022b5c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022a40:	2c00      	cmp	r4, #0
 8022a42:	f2c0 8089 	blt.w	8022b58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022a46:	42a3      	cmp	r3, r4
 8022a48:	f340 8086 	ble.w	8022b58 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022a4c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022a50:	3401      	adds	r4, #1
 8022a52:	f100 8086 	bmi.w	8022b62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022a56:	42a3      	cmp	r3, r4
 8022a58:	f340 8083 	ble.w	8022b62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022a5c:	f1b9 0f00 	cmp.w	r9, #0
 8022a60:	d07f      	beq.n	8022b62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022a62:	3301      	adds	r3, #1
 8022a64:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022a68:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022a6c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022a70:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022a74:	fb19 fe07 	smulbb	lr, r9, r7
 8022a78:	ea44 0808 	orr.w	r8, r4, r8
 8022a7c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022a80:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022a84:	f1c7 0210 	rsb	r2, r7, #16
 8022a88:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022a8c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022a90:	ea44 0c0c 	orr.w	ip, r4, ip
 8022a94:	eba2 0209 	sub.w	r2, r2, r9
 8022a98:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022a9c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022aa0:	fb04 f40c 	mul.w	r4, r4, ip
 8022aa4:	fb02 4808 	mla	r8, r2, r8, r4
 8022aa8:	041a      	lsls	r2, r3, #16
 8022aaa:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022aae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022ab2:	4313      	orrs	r3, r2
 8022ab4:	042a      	lsls	r2, r5, #16
 8022ab6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022aba:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022abe:	fb0e 8303 	mla	r3, lr, r3, r8
 8022ac2:	432a      	orrs	r2, r5
 8022ac4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022ac8:	fb07 3202 	mla	r2, r7, r2, r3
 8022acc:	0d53      	lsrs	r3, r2, #21
 8022ace:	0952      	lsrs	r2, r2, #5
 8022ad0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ad4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022ad8:	431a      	orrs	r2, r3
 8022ada:	b293      	uxth	r3, r2
 8022adc:	b2b4      	uxth	r4, r6
 8022ade:	1202      	asrs	r2, r0, #8
 8022ae0:	43f6      	mvns	r6, r6
 8022ae2:	b2f6      	uxtb	r6, r6
 8022ae4:	121d      	asrs	r5, r3, #8
 8022ae6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022aea:	fb12 f206 	smulbb	r2, r2, r6
 8022aee:	10c7      	asrs	r7, r0, #3
 8022af0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022af4:	00c0      	lsls	r0, r0, #3
 8022af6:	fb05 2504 	mla	r5, r5, r4, r2
 8022afa:	b2c0      	uxtb	r0, r0
 8022afc:	10da      	asrs	r2, r3, #3
 8022afe:	00db      	lsls	r3, r3, #3
 8022b00:	b2db      	uxtb	r3, r3
 8022b02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022b06:	fb10 f006 	smulbb	r0, r0, r6
 8022b0a:	b2ad      	uxth	r5, r5
 8022b0c:	fb03 0004 	mla	r0, r3, r4, r0
 8022b10:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022b14:	fb17 f706 	smulbb	r7, r7, r6
 8022b18:	b280      	uxth	r0, r0
 8022b1a:	1c6b      	adds	r3, r5, #1
 8022b1c:	fb02 7204 	mla	r2, r2, r4, r7
 8022b20:	b292      	uxth	r2, r2
 8022b22:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022b26:	1c43      	adds	r3, r0, #1
 8022b28:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022b2c:	1c50      	adds	r0, r2, #1
 8022b2e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022b32:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022b36:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022b3a:	0952      	lsrs	r2, r2, #5
 8022b3c:	432b      	orrs	r3, r5
 8022b3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022b42:	4313      	orrs	r3, r2
 8022b44:	800b      	strh	r3, [r1, #0]
 8022b46:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022b4a:	4680      	mov	r8, r0
 8022b4c:	e763      	b.n	8022a16 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022b4e:	4684      	mov	ip, r0
 8022b50:	4680      	mov	r8, r0
 8022b52:	e76c      	b.n	8022a2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022b54:	4684      	mov	ip, r0
 8022b56:	e76a      	b.n	8022a2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022b58:	4605      	mov	r5, r0
 8022b5a:	e779      	b.n	8022a50 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022b5c:	4603      	mov	r3, r0
 8022b5e:	4605      	mov	r5, r0
 8022b60:	e782      	b.n	8022a68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022b62:	4603      	mov	r3, r0
 8022b64:	e780      	b.n	8022a68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022b66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022b66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b6a:	b093      	sub	sp, #76	; 0x4c
 8022b6c:	461d      	mov	r5, r3
 8022b6e:	9210      	str	r2, [sp, #64]	; 0x40
 8022b70:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022b72:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8022b76:	920b      	str	r2, [sp, #44]	; 0x2c
 8022b78:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8022b7c:	910a      	str	r1, [sp, #40]	; 0x28
 8022b7e:	6859      	ldr	r1, [r3, #4]
 8022b80:	681b      	ldr	r3, [r3, #0]
 8022b82:	9011      	str	r0, [sp, #68]	; 0x44
 8022b84:	fb01 2707 	mla	r7, r1, r7, r2
 8022b88:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022b8c:	9307      	str	r3, [sp, #28]
 8022b8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022b90:	681b      	ldr	r3, [r3, #0]
 8022b92:	9309      	str	r3, [sp, #36]	; 0x24
 8022b94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022b96:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022b9a:	43db      	mvns	r3, r3
 8022b9c:	b2db      	uxtb	r3, r3
 8022b9e:	9308      	str	r3, [sp, #32]
 8022ba0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022ba2:	2b00      	cmp	r3, #0
 8022ba4:	dc03      	bgt.n	8022bae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022ba6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022ba8:	2b00      	cmp	r3, #0
 8022baa:	f340 8203 	ble.w	8022fb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022bae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022bb0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022bb4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022bb8:	1e48      	subs	r0, r1, #1
 8022bba:	f102 3cff 	add.w	ip, r2, #4294967295
 8022bbe:	2d00      	cmp	r5, #0
 8022bc0:	f340 80da 	ble.w	8022d78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022bc4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022bc8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022bcc:	d406      	bmi.n	8022bdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022bce:	4586      	cmp	lr, r0
 8022bd0:	da04      	bge.n	8022bdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022bd2:	2b00      	cmp	r3, #0
 8022bd4:	db02      	blt.n	8022bdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022bd6:	4563      	cmp	r3, ip
 8022bd8:	f2c0 80cf 	blt.w	8022d7a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022bdc:	f11e 0e01 	adds.w	lr, lr, #1
 8022be0:	f100 80c1 	bmi.w	8022d66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022be4:	4571      	cmp	r1, lr
 8022be6:	f2c0 80be 	blt.w	8022d66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022bea:	3301      	adds	r3, #1
 8022bec:	f100 80bb 	bmi.w	8022d66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022bf0:	429a      	cmp	r2, r3
 8022bf2:	f2c0 80b8 	blt.w	8022d66 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022bf6:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022bfa:	46a9      	mov	r9, r5
 8022bfc:	f1b9 0f00 	cmp.w	r9, #0
 8022c00:	f340 80d8 	ble.w	8022db4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022c04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c06:	1421      	asrs	r1, r4, #16
 8022c08:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022c0c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022c10:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022c14:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022c18:	f100 8111 	bmi.w	8022e3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c1c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022c20:	4551      	cmp	r1, sl
 8022c22:	f280 810c 	bge.w	8022e3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c26:	2800      	cmp	r0, #0
 8022c28:	f2c0 8109 	blt.w	8022e3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c2c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022c30:	4550      	cmp	r0, sl
 8022c32:	f280 8104 	bge.w	8022e3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c36:	fa0f f38e 	sxth.w	r3, lr
 8022c3a:	fb00 1103 	mla	r1, r0, r3, r1
 8022c3e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022c40:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022c44:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022c48:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022c4c:	f1bc 0f00 	cmp.w	ip, #0
 8022c50:	d007      	beq.n	8022c62 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022c52:	005b      	lsls	r3, r3, #1
 8022c54:	eb0a 0003 	add.w	r0, sl, r3
 8022c58:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022c5c:	930c      	str	r3, [sp, #48]	; 0x30
 8022c5e:	8843      	ldrh	r3, [r0, #2]
 8022c60:	930d      	str	r3, [sp, #52]	; 0x34
 8022c62:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022c66:	fb12 f30c 	smulbb	r3, r2, ip
 8022c6a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022c6e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022c72:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022c76:	10db      	asrs	r3, r3, #3
 8022c78:	ea40 000e 	orr.w	r0, r0, lr
 8022c7c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c80:	f1cc 0e10 	rsb	lr, ip, #16
 8022c84:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022c88:	ebae 0e02 	sub.w	lr, lr, r2
 8022c8c:	ea4a 0101 	orr.w	r1, sl, r1
 8022c90:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022c94:	4351      	muls	r1, r2
 8022c96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022c98:	9f08      	ldr	r7, [sp, #32]
 8022c9a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022c9e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022ca2:	0410      	lsls	r0, r2, #16
 8022ca4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022ca8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022cac:	4310      	orrs	r0, r2
 8022cae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022cb0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022cb2:	0412      	lsls	r2, r2, #16
 8022cb4:	fb03 e000 	mla	r0, r3, r0, lr
 8022cb8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022cbc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022cc0:	ea42 020e 	orr.w	r2, r2, lr
 8022cc4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022cc8:	fb03 0302 	mla	r3, r3, r2, r0
 8022ccc:	0d5a      	lsrs	r2, r3, #21
 8022cce:	095b      	lsrs	r3, r3, #5
 8022cd0:	f8b8 0000 	ldrh.w	r0, [r8]
 8022cd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022cd8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022cdc:	4313      	orrs	r3, r2
 8022cde:	b29b      	uxth	r3, r3
 8022ce0:	1201      	asrs	r1, r0, #8
 8022ce2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022ce6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022cea:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022cee:	fb11 f107 	smulbb	r1, r1, r7
 8022cf2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022cf6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022cfa:	00c0      	lsls	r0, r0, #3
 8022cfc:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022d00:	b2c0      	uxtb	r0, r0
 8022d02:	10d9      	asrs	r1, r3, #3
 8022d04:	00db      	lsls	r3, r3, #3
 8022d06:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022d0a:	b2db      	uxtb	r3, r3
 8022d0c:	fb10 f007 	smulbb	r0, r0, r7
 8022d10:	fa1f fc8c 	uxth.w	ip, ip
 8022d14:	fb03 0302 	mla	r3, r3, r2, r0
 8022d18:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022d1c:	fb1e fe07 	smulbb	lr, lr, r7
 8022d20:	fb01 e102 	mla	r1, r1, r2, lr
 8022d24:	b29a      	uxth	r2, r3
 8022d26:	f10c 0301 	add.w	r3, ip, #1
 8022d2a:	b289      	uxth	r1, r1
 8022d2c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022d30:	1c53      	adds	r3, r2, #1
 8022d32:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022d36:	1c4a      	adds	r2, r1, #1
 8022d38:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022d3c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022d40:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022d44:	0949      	lsrs	r1, r1, #5
 8022d46:	ea43 030c 	orr.w	r3, r3, ip
 8022d4a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022d4e:	430b      	orrs	r3, r1
 8022d50:	f8a8 3000 	strh.w	r3, [r8]
 8022d54:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022d56:	441c      	add	r4, r3
 8022d58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d5a:	f108 0802 	add.w	r8, r8, #2
 8022d5e:	441e      	add	r6, r3
 8022d60:	f109 39ff 	add.w	r9, r9, #4294967295
 8022d64:	e74a      	b.n	8022bfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022d66:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022d68:	441c      	add	r4, r3
 8022d6a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d6c:	441e      	add	r6, r3
 8022d6e:	9b07      	ldr	r3, [sp, #28]
 8022d70:	3302      	adds	r3, #2
 8022d72:	3d01      	subs	r5, #1
 8022d74:	9307      	str	r3, [sp, #28]
 8022d76:	e722      	b.n	8022bbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022d78:	d022      	beq.n	8022dc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022d7a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022d7c:	1e6b      	subs	r3, r5, #1
 8022d7e:	fb00 4003 	mla	r0, r0, r3, r4
 8022d82:	1400      	asrs	r0, r0, #16
 8022d84:	f53f af37 	bmi.w	8022bf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022d88:	3901      	subs	r1, #1
 8022d8a:	4288      	cmp	r0, r1
 8022d8c:	f6bf af33 	bge.w	8022bf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022d90:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022d92:	fb01 6303 	mla	r3, r1, r3, r6
 8022d96:	141b      	asrs	r3, r3, #16
 8022d98:	f53f af2d 	bmi.w	8022bf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022d9c:	3a01      	subs	r2, #1
 8022d9e:	4293      	cmp	r3, r2
 8022da0:	f6bf af29 	bge.w	8022bf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022da4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022da8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022dac:	46a8      	mov	r8, r5
 8022dae:	f1b8 0f00 	cmp.w	r8, #0
 8022db2:	dc5e      	bgt.n	8022e72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022db4:	9b07      	ldr	r3, [sp, #28]
 8022db6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022dba:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022dbe:	9307      	str	r3, [sp, #28]
 8022dc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022dc2:	2b00      	cmp	r3, #0
 8022dc4:	f340 80f6 	ble.w	8022fb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022dc8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022dcc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022dd0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022dd4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022dd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022dda:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022dde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022de2:	eef0 6a62 	vmov.f32	s13, s5
 8022de6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022dea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022dee:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022df2:	ee16 4a90 	vmov	r4, s13
 8022df6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022dfa:	eef0 6a43 	vmov.f32	s13, s6
 8022dfe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022e02:	ee12 2a90 	vmov	r2, s5
 8022e06:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022e0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e0e:	ee13 2a10 	vmov	r2, s6
 8022e12:	931f      	str	r3, [sp, #124]	; 0x7c
 8022e14:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e16:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e1a:	9320      	str	r3, [sp, #128]	; 0x80
 8022e1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022e1e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022e20:	3b01      	subs	r3, #1
 8022e22:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022e26:	930a      	str	r3, [sp, #40]	; 0x28
 8022e28:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e2a:	ee16 6a90 	vmov	r6, s13
 8022e2e:	bf14      	ite	ne
 8022e30:	461d      	movne	r5, r3
 8022e32:	4615      	moveq	r5, r2
 8022e34:	eeb0 3a67 	vmov.f32	s6, s15
 8022e38:	eef0 2a47 	vmov.f32	s5, s14
 8022e3c:	e6b0      	b.n	8022ba0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022e3e:	f111 0a01 	adds.w	sl, r1, #1
 8022e42:	d487      	bmi.n	8022d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e44:	45d6      	cmp	lr, sl
 8022e46:	db85      	blt.n	8022d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e48:	f110 0a01 	adds.w	sl, r0, #1
 8022e4c:	d482      	bmi.n	8022d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e4e:	4553      	cmp	r3, sl
 8022e50:	db80      	blt.n	8022d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e52:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022e54:	9101      	str	r1, [sp, #4]
 8022e56:	b21b      	sxth	r3, r3
 8022e58:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022e5c:	9300      	str	r3, [sp, #0]
 8022e5e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022e62:	fa0f f38e 	sxth.w	r3, lr
 8022e66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022e68:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022e6a:	4641      	mov	r1, r8
 8022e6c:	f7ff fdb4 	bl	80229d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022e70:	e770      	b.n	8022d54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e72:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e74:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022e76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022e7a:	1430      	asrs	r0, r6, #16
 8022e7c:	1423      	asrs	r3, r4, #16
 8022e7e:	fb01 3000 	mla	r0, r1, r0, r3
 8022e82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022e84:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022e88:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022e8c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022e90:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022e94:	8858      	ldrh	r0, [r3, #2]
 8022e96:	f1be 0f00 	cmp.w	lr, #0
 8022e9a:	d00b      	beq.n	8022eb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022e9c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022ea0:	3901      	subs	r1, #1
 8022ea2:	0049      	lsls	r1, r1, #1
 8022ea4:	3102      	adds	r1, #2
 8022ea6:	eb03 0b01 	add.w	fp, r3, r1
 8022eaa:	5a5b      	ldrh	r3, [r3, r1]
 8022eac:	930e      	str	r3, [sp, #56]	; 0x38
 8022eae:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022eb2:	930f      	str	r3, [sp, #60]	; 0x3c
 8022eb4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022eb8:	fb12 f30e 	smulbb	r3, r2, lr
 8022ebc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022ec0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022ec4:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022ec8:	10db      	asrs	r3, r3, #3
 8022eca:	ea41 010c 	orr.w	r1, r1, ip
 8022ece:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ed2:	f1ce 0c10 	rsb	ip, lr, #16
 8022ed6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022eda:	ebac 0c02 	sub.w	ip, ip, r2
 8022ede:	ea4b 0000 	orr.w	r0, fp, r0
 8022ee2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022ee6:	4350      	muls	r0, r2
 8022ee8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022eea:	9f08      	ldr	r7, [sp, #32]
 8022eec:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022ef0:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022ef4:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022ef8:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022efc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022efe:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022f00:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022f04:	0412      	lsls	r2, r2, #16
 8022f06:	ea4b 0101 	orr.w	r1, fp, r1
 8022f0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f0e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022f12:	fb03 c101 	mla	r1, r3, r1, ip
 8022f16:	4302      	orrs	r2, r0
 8022f18:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022f1c:	fb03 1202 	mla	r2, r3, r2, r1
 8022f20:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022f24:	0952      	lsrs	r2, r2, #5
 8022f26:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022f2a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022f2e:	f8b9 2000 	ldrh.w	r2, [r9]
 8022f32:	ea4b 0303 	orr.w	r3, fp, r3
 8022f36:	b29b      	uxth	r3, r3
 8022f38:	1211      	asrs	r1, r2, #8
 8022f3a:	1218      	asrs	r0, r3, #8
 8022f3c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022f40:	fb11 f107 	smulbb	r1, r1, r7
 8022f44:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022f48:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022f4c:	00d2      	lsls	r2, r2, #3
 8022f4e:	fb00 100a 	mla	r0, r0, sl, r1
 8022f52:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022f56:	10d9      	asrs	r1, r3, #3
 8022f58:	b2d2      	uxtb	r2, r2
 8022f5a:	00db      	lsls	r3, r3, #3
 8022f5c:	fb1c fc07 	smulbb	ip, ip, r7
 8022f60:	fb12 f207 	smulbb	r2, r2, r7
 8022f64:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022f68:	b2db      	uxtb	r3, r3
 8022f6a:	b280      	uxth	r0, r0
 8022f6c:	fb01 c10a 	mla	r1, r1, sl, ip
 8022f70:	fb03 230a 	mla	r3, r3, sl, r2
 8022f74:	b29b      	uxth	r3, r3
 8022f76:	b289      	uxth	r1, r1
 8022f78:	1c42      	adds	r2, r0, #1
 8022f7a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022f7e:	f101 0c01 	add.w	ip, r1, #1
 8022f82:	1c5a      	adds	r2, r3, #1
 8022f84:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022f88:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022f8c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022f8e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022f92:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022f96:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022f9a:	4310      	orrs	r0, r2
 8022f9c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022fa0:	441c      	add	r4, r3
 8022fa2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022fa4:	ea40 000c 	orr.w	r0, r0, ip
 8022fa8:	f829 0b02 	strh.w	r0, [r9], #2
 8022fac:	441e      	add	r6, r3
 8022fae:	f108 38ff 	add.w	r8, r8, #4294967295
 8022fb2:	e6fc      	b.n	8022dae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022fb4:	b013      	add	sp, #76	; 0x4c
 8022fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022fba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022fba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022fbe:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022fc2:	fb0e 4703 	mla	r7, lr, r3, r4
 8022fc6:	f1be 0f00 	cmp.w	lr, #0
 8022fca:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022fce:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022fd2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022fd6:	8808      	ldrh	r0, [r1, #0]
 8022fd8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022fdc:	db60      	blt.n	80230a0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022fde:	45f1      	cmp	r9, lr
 8022fe0:	dd5e      	ble.n	80230a0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022fe2:	2c00      	cmp	r4, #0
 8022fe4:	db5a      	blt.n	802309c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022fe6:	42a3      	cmp	r3, r4
 8022fe8:	dd58      	ble.n	802309c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022fea:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022fee:	1c62      	adds	r2, r4, #1
 8022ff0:	d459      	bmi.n	80230a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022ff2:	4293      	cmp	r3, r2
 8022ff4:	dd57      	ble.n	80230a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022ff6:	2d00      	cmp	r5, #0
 8022ff8:	d055      	beq.n	80230a6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022ffa:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022ffe:	f11e 0e01 	adds.w	lr, lr, #1
 8023002:	d454      	bmi.n	80230ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023004:	45f1      	cmp	r9, lr
 8023006:	dd52      	ble.n	80230ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023008:	2e00      	cmp	r6, #0
 802300a:	d050      	beq.n	80230ae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802300c:	2c00      	cmp	r4, #0
 802300e:	db4c      	blt.n	80230aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023010:	42a3      	cmp	r3, r4
 8023012:	dd4a      	ble.n	80230aa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023014:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023018:	3401      	adds	r4, #1
 802301a:	d405      	bmi.n	8023028 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802301c:	42a3      	cmp	r3, r4
 802301e:	dd03      	ble.n	8023028 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023020:	b115      	cbz	r5, 8023028 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023022:	3301      	adds	r3, #1
 8023024:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023028:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802302c:	fb15 f406 	smulbb	r4, r5, r6
 8023030:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023034:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023038:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802303c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023040:	ea43 0c0c 	orr.w	ip, r3, ip
 8023044:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023048:	f1c6 0310 	rsb	r3, r6, #16
 802304c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023050:	1b5b      	subs	r3, r3, r5
 8023052:	ea4e 0707 	orr.w	r7, lr, r7
 8023056:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802305a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802305e:	437d      	muls	r5, r7
 8023060:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023064:	0403      	lsls	r3, r0, #16
 8023066:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802306a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802306e:	4318      	orrs	r0, r3
 8023070:	0413      	lsls	r3, r2, #16
 8023072:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023076:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802307a:	4313      	orrs	r3, r2
 802307c:	fb04 c000 	mla	r0, r4, r0, ip
 8023080:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023084:	fb06 0003 	mla	r0, r6, r3, r0
 8023088:	0d43      	lsrs	r3, r0, #21
 802308a:	0940      	lsrs	r0, r0, #5
 802308c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023090:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023094:	4318      	orrs	r0, r3
 8023096:	8008      	strh	r0, [r1, #0]
 8023098:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802309c:	4684      	mov	ip, r0
 802309e:	e7a6      	b.n	8022fee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80230a0:	4607      	mov	r7, r0
 80230a2:	4684      	mov	ip, r0
 80230a4:	e7ab      	b.n	8022ffe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80230a6:	4607      	mov	r7, r0
 80230a8:	e7a9      	b.n	8022ffe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80230aa:	4602      	mov	r2, r0
 80230ac:	e7b4      	b.n	8023018 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80230ae:	4602      	mov	r2, r0
 80230b0:	e7ba      	b.n	8023028 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080230b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80230b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80230b6:	b08f      	sub	sp, #60	; 0x3c
 80230b8:	461d      	mov	r5, r3
 80230ba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80230bc:	920c      	str	r2, [sp, #48]	; 0x30
 80230be:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80230c2:	9107      	str	r1, [sp, #28]
 80230c4:	6859      	ldr	r1, [r3, #4]
 80230c6:	681b      	ldr	r3, [r3, #0]
 80230c8:	900d      	str	r0, [sp, #52]	; 0x34
 80230ca:	fb01 2707 	mla	r7, r1, r7, r2
 80230ce:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80230d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230d4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80230d8:	f8d3 8000 	ldr.w	r8, [r3]
 80230dc:	9b07      	ldr	r3, [sp, #28]
 80230de:	2b00      	cmp	r3, #0
 80230e0:	dc03      	bgt.n	80230ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80230e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80230e4:	2b00      	cmp	r3, #0
 80230e6:	f340 8181 	ble.w	80233ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80230ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80230f0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80230f4:	1e48      	subs	r0, r1, #1
 80230f6:	f102 3cff 	add.w	ip, r2, #4294967295
 80230fa:	2d00      	cmp	r5, #0
 80230fc:	f340 809b 	ble.w	8023236 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023100:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023104:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023108:	d406      	bmi.n	8023118 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802310a:	4586      	cmp	lr, r0
 802310c:	da04      	bge.n	8023118 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802310e:	2b00      	cmp	r3, #0
 8023110:	db02      	blt.n	8023118 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023112:	4563      	cmp	r3, ip
 8023114:	f2c0 8090 	blt.w	8023238 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023118:	f11e 0e01 	adds.w	lr, lr, #1
 802311c:	f100 8084 	bmi.w	8023228 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023120:	4571      	cmp	r1, lr
 8023122:	f2c0 8081 	blt.w	8023228 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023126:	3301      	adds	r3, #1
 8023128:	d47e      	bmi.n	8023228 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802312a:	429a      	cmp	r2, r3
 802312c:	db7c      	blt.n	8023228 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802312e:	46aa      	mov	sl, r5
 8023130:	46b9      	mov	r9, r7
 8023132:	f1ba 0f00 	cmp.w	sl, #0
 8023136:	f340 8099 	ble.w	802326c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802313a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802313c:	1421      	asrs	r1, r4, #16
 802313e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023142:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023146:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802314a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802314e:	f100 80d0 	bmi.w	80232f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023152:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023156:	4559      	cmp	r1, fp
 8023158:	f280 80cb 	bge.w	80232f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802315c:	2800      	cmp	r0, #0
 802315e:	f2c0 80c8 	blt.w	80232f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023162:	f103 3bff 	add.w	fp, r3, #4294967295
 8023166:	4558      	cmp	r0, fp
 8023168:	f280 80c3 	bge.w	80232f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802316c:	fa0f fe8e 	sxth.w	lr, lr
 8023170:	fb00 110e 	mla	r1, r0, lr, r1
 8023174:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023178:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802317c:	8841      	ldrh	r1, [r0, #2]
 802317e:	f1bc 0f00 	cmp.w	ip, #0
 8023182:	d00b      	beq.n	802319c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023184:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023188:	3b01      	subs	r3, #1
 802318a:	005b      	lsls	r3, r3, #1
 802318c:	3302      	adds	r3, #2
 802318e:	eb00 0e03 	add.w	lr, r0, r3
 8023192:	5ac3      	ldrh	r3, [r0, r3]
 8023194:	9308      	str	r3, [sp, #32]
 8023196:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802319a:	9309      	str	r3, [sp, #36]	; 0x24
 802319c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80231a0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80231a4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80231a8:	ea40 000b 	orr.w	r0, r0, fp
 80231ac:	fb12 f30c 	smulbb	r3, r2, ip
 80231b0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80231b4:	10db      	asrs	r3, r3, #3
 80231b6:	f1cc 0e10 	rsb	lr, ip, #16
 80231ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80231be:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80231c2:	ebae 0e02 	sub.w	lr, lr, r2
 80231c6:	ea4b 0101 	orr.w	r1, fp, r1
 80231ca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80231ce:	4351      	muls	r1, r2
 80231d0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80231d2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80231d6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80231da:	0410      	lsls	r0, r2, #16
 80231dc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80231e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80231e4:	4310      	orrs	r0, r2
 80231e6:	9a08      	ldr	r2, [sp, #32]
 80231e8:	9908      	ldr	r1, [sp, #32]
 80231ea:	0412      	lsls	r2, r2, #16
 80231ec:	fb03 e000 	mla	r0, r3, r0, lr
 80231f0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80231f4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80231f8:	ea42 020e 	orr.w	r2, r2, lr
 80231fc:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023200:	fb03 0302 	mla	r3, r3, r2, r0
 8023204:	0d5a      	lsrs	r2, r3, #21
 8023206:	095b      	lsrs	r3, r3, #5
 8023208:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802320c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023210:	4313      	orrs	r3, r2
 8023212:	f8a9 3000 	strh.w	r3, [r9]
 8023216:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023218:	441c      	add	r4, r3
 802321a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802321c:	f109 0902 	add.w	r9, r9, #2
 8023220:	441e      	add	r6, r3
 8023222:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023226:	e784      	b.n	8023132 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8023228:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802322a:	441c      	add	r4, r3
 802322c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802322e:	3d01      	subs	r5, #1
 8023230:	441e      	add	r6, r3
 8023232:	3702      	adds	r7, #2
 8023234:	e761      	b.n	80230fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023236:	d01d      	beq.n	8023274 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023238:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802323a:	1e6b      	subs	r3, r5, #1
 802323c:	fb00 4003 	mla	r0, r0, r3, r4
 8023240:	1400      	asrs	r0, r0, #16
 8023242:	f53f af74 	bmi.w	802312e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023246:	3901      	subs	r1, #1
 8023248:	4288      	cmp	r0, r1
 802324a:	f6bf af70 	bge.w	802312e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802324e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023250:	fb01 6303 	mla	r3, r1, r3, r6
 8023254:	141b      	asrs	r3, r3, #16
 8023256:	f53f af6a 	bmi.w	802312e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802325a:	3a01      	subs	r2, #1
 802325c:	4293      	cmp	r3, r2
 802325e:	f6bf af66 	bge.w	802312e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023262:	46a9      	mov	r9, r5
 8023264:	46ba      	mov	sl, r7
 8023266:	f1b9 0f00 	cmp.w	r9, #0
 802326a:	dc5a      	bgt.n	8023322 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 802326c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023270:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8023274:	9b07      	ldr	r3, [sp, #28]
 8023276:	2b00      	cmp	r3, #0
 8023278:	f340 80b8 	ble.w	80233ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802327c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023280:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023284:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023288:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802328a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802328e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023292:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023296:	eef0 6a62 	vmov.f32	s13, s5
 802329a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802329e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80232a6:	ee16 4a90 	vmov	r4, s13
 80232aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80232ae:	eef0 6a43 	vmov.f32	s13, s6
 80232b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80232b6:	ee12 2a90 	vmov	r2, s5
 80232ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80232be:	fb92 f3f3 	sdiv	r3, r2, r3
 80232c2:	ee13 2a10 	vmov	r2, s6
 80232c6:	931b      	str	r3, [sp, #108]	; 0x6c
 80232c8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80232ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80232ce:	931c      	str	r3, [sp, #112]	; 0x70
 80232d0:	9b07      	ldr	r3, [sp, #28]
 80232d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80232d4:	3b01      	subs	r3, #1
 80232d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232da:	9307      	str	r3, [sp, #28]
 80232dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80232de:	ee16 6a90 	vmov	r6, s13
 80232e2:	bf14      	ite	ne
 80232e4:	461d      	movne	r5, r3
 80232e6:	4615      	moveq	r5, r2
 80232e8:	eeb0 3a67 	vmov.f32	s6, s15
 80232ec:	eef0 2a47 	vmov.f32	s5, s14
 80232f0:	e6f4      	b.n	80230dc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80232f2:	f111 0b01 	adds.w	fp, r1, #1
 80232f6:	d48e      	bmi.n	8023216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80232f8:	45de      	cmp	lr, fp
 80232fa:	db8c      	blt.n	8023216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80232fc:	f110 0b01 	adds.w	fp, r0, #1
 8023300:	d489      	bmi.n	8023216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023302:	455b      	cmp	r3, fp
 8023304:	db87      	blt.n	8023216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023306:	b21b      	sxth	r3, r3
 8023308:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802330c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8023310:	9300      	str	r3, [sp, #0]
 8023312:	4642      	mov	r2, r8
 8023314:	fa0f f38e 	sxth.w	r3, lr
 8023318:	4649      	mov	r1, r9
 802331a:	980d      	ldr	r0, [sp, #52]	; 0x34
 802331c:	f7ff fe4d 	bl	8022fba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8023320:	e779      	b.n	8023216 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023322:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023324:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023328:	1420      	asrs	r0, r4, #16
 802332a:	1431      	asrs	r1, r6, #16
 802332c:	fb03 0101 	mla	r1, r3, r1, r0
 8023330:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023334:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023338:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802333c:	8841      	ldrh	r1, [r0, #2]
 802333e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023342:	f1be 0f00 	cmp.w	lr, #0
 8023346:	d00b      	beq.n	8023360 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023348:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802334c:	3b01      	subs	r3, #1
 802334e:	005b      	lsls	r3, r3, #1
 8023350:	3302      	adds	r3, #2
 8023352:	eb00 0b03 	add.w	fp, r0, r3
 8023356:	5ac3      	ldrh	r3, [r0, r3]
 8023358:	930a      	str	r3, [sp, #40]	; 0x28
 802335a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802335e:	930b      	str	r3, [sp, #44]	; 0x2c
 8023360:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8023364:	fb12 f30e 	smulbb	r3, r2, lr
 8023368:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802336c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023370:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023374:	10db      	asrs	r3, r3, #3
 8023376:	ea40 000c 	orr.w	r0, r0, ip
 802337a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802337e:	f1ce 0c10 	rsb	ip, lr, #16
 8023382:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023386:	ebac 0c02 	sub.w	ip, ip, r2
 802338a:	ea4b 0101 	orr.w	r1, fp, r1
 802338e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023392:	4351      	muls	r1, r2
 8023394:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023396:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802339a:	fb0c 1c00 	mla	ip, ip, r0, r1
 802339e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80233a2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80233a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80233a8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80233aa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80233ae:	0412      	lsls	r2, r2, #16
 80233b0:	ea4b 0000 	orr.w	r0, fp, r0
 80233b4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80233b8:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80233bc:	fb03 c000 	mla	r0, r3, r0, ip
 80233c0:	ea42 0b0b 	orr.w	fp, r2, fp
 80233c4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80233c8:	fb03 000b 	mla	r0, r3, fp, r0
 80233cc:	0d43      	lsrs	r3, r0, #21
 80233ce:	0940      	lsrs	r0, r0, #5
 80233d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80233d4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80233d8:	4318      	orrs	r0, r3
 80233da:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80233dc:	f82a 0b02 	strh.w	r0, [sl], #2
 80233e0:	441c      	add	r4, r3
 80233e2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80233e4:	f109 39ff 	add.w	r9, r9, #4294967295
 80233e8:	441e      	add	r6, r3
 80233ea:	e73c      	b.n	8023266 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80233ec:	b00f      	add	sp, #60	; 0x3c
 80233ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080233f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80233f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233f6:	b085      	sub	sp, #20
 80233f8:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80233fc:	9102      	str	r1, [sp, #8]
 80233fe:	2c00      	cmp	r4, #0
 8023400:	fb04 7103 	mla	r1, r4, r3, r7
 8023404:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023408:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802340c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023410:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023414:	f2c0 811b 	blt.w	802364e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023418:	45a6      	cmp	lr, r4
 802341a:	f340 8118 	ble.w	802364e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802341e:	2f00      	cmp	r7, #0
 8023420:	f2c0 8113 	blt.w	802364a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8023424:	42bb      	cmp	r3, r7
 8023426:	f340 8110 	ble.w	802364a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802342a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802342e:	1c7a      	adds	r2, r7, #1
 8023430:	f100 8110 	bmi.w	8023654 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023434:	4293      	cmp	r3, r2
 8023436:	f340 810d 	ble.w	8023654 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802343a:	2e00      	cmp	r6, #0
 802343c:	f000 810c 	beq.w	8023658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8023440:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023444:	3401      	adds	r4, #1
 8023446:	f100 810b 	bmi.w	8023660 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802344a:	45a6      	cmp	lr, r4
 802344c:	f340 8108 	ble.w	8023660 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023450:	2800      	cmp	r0, #0
 8023452:	f000 8108 	beq.w	8023666 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8023456:	2f00      	cmp	r7, #0
 8023458:	f2c0 8100 	blt.w	802365c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802345c:	42bb      	cmp	r3, r7
 802345e:	f340 80fd 	ble.w	802365c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023462:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023466:	3701      	adds	r7, #1
 8023468:	f100 8100 	bmi.w	802366c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802346c:	42bb      	cmp	r3, r7
 802346e:	f340 80fd 	ble.w	802366c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023472:	2e00      	cmp	r6, #0
 8023474:	f000 80fc 	beq.w	8023670 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023478:	3301      	adds	r3, #1
 802347a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802347e:	b2b6      	uxth	r6, r6
 8023480:	b280      	uxth	r0, r0
 8023482:	fb00 fe06 	mul.w	lr, r0, r6
 8023486:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802348a:	0136      	lsls	r6, r6, #4
 802348c:	eba6 070e 	sub.w	r7, r6, lr
 8023490:	b280      	uxth	r0, r0
 8023492:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023496:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802349a:	b2bf      	uxth	r7, r7
 802349c:	1a1b      	subs	r3, r3, r0
 802349e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80234a2:	b29b      	uxth	r3, r3
 80234a4:	fb0a f607 	mul.w	r6, sl, r7
 80234a8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80234ac:	fb0b 6603 	mla	r6, fp, r3, r6
 80234b0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80234b4:	fb00 6609 	mla	r6, r0, r9, r6
 80234b8:	fb0e 6608 	mla	r6, lr, r8, r6
 80234bc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80234c0:	9600      	str	r6, [sp, #0]
 80234c2:	2e00      	cmp	r6, #0
 80234c4:	f000 80be 	beq.w	8023644 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80234c8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80234cc:	fb0b fc0c 	mul.w	ip, fp, ip
 80234d0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80234d4:	fb0b f505 	mul.w	r5, fp, r5
 80234d8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80234dc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80234e0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80234e4:	44dc      	add	ip, fp
 80234e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234ea:	9501      	str	r5, [sp, #4]
 80234ec:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80234f0:	9503      	str	r5, [sp, #12]
 80234f2:	9d01      	ldr	r5, [sp, #4]
 80234f4:	9e02      	ldr	r6, [sp, #8]
 80234f6:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80234fa:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80234fe:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023502:	fb0a fc0c 	mul.w	ip, sl, ip
 8023506:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802350a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802350e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023512:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023516:	4465      	add	r5, ip
 8023518:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802351c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023520:	fb09 fc0c 	mul.w	ip, r9, ip
 8023524:	fb09 f904 	mul.w	r9, r9, r4
 8023528:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802352c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023530:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023534:	fb08 f404 	mul.w	r4, r8, r4
 8023538:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802353c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023540:	fb08 f802 	mul.w	r8, r8, r2
 8023544:	fb0a fa01 	mul.w	sl, sl, r1
 8023548:	0a22      	lsrs	r2, r4, #8
 802354a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802354e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023552:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023556:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802355a:	4414      	add	r4, r2
 802355c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023560:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023564:	0a2d      	lsrs	r5, r5, #8
 8023566:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802356a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802356e:	9a03      	ldr	r2, [sp, #12]
 8023570:	8836      	ldrh	r6, [r6, #0]
 8023572:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023576:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802357a:	437d      	muls	r5, r7
 802357c:	4461      	add	r1, ip
 802357e:	0a24      	lsrs	r4, r4, #8
 8023580:	fb02 5503 	mla	r5, r2, r3, r5
 8023584:	0a09      	lsrs	r1, r1, #8
 8023586:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802358a:	fb04 540e 	mla	r4, r4, lr, r5
 802358e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023592:	fb01 4100 	mla	r1, r1, r0, r4
 8023596:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802359a:	0a09      	lsrs	r1, r1, #8
 802359c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235a0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80235a4:	fb07 f70a 	mul.w	r7, r7, sl
 80235a8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80235ac:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80235b0:	fb03 7101 	mla	r1, r3, r1, r7
 80235b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80235b8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80235bc:	fb0e 1e08 	mla	lr, lr, r8, r1
 80235c0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80235c4:	fb00 e101 	mla	r1, r0, r1, lr
 80235c8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80235cc:	9a00      	ldr	r2, [sp, #0]
 80235ce:	b287      	uxth	r7, r0
 80235d0:	437a      	muls	r2, r7
 80235d2:	0a09      	lsrs	r1, r1, #8
 80235d4:	1c53      	adds	r3, r2, #1
 80235d6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80235da:	4321      	orrs	r1, r4
 80235dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80235e0:	1235      	asrs	r5, r6, #8
 80235e2:	0c0a      	lsrs	r2, r1, #16
 80235e4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80235e8:	b2db      	uxtb	r3, r3
 80235ea:	fb12 f207 	smulbb	r2, r2, r7
 80235ee:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80235f2:	fb05 2503 	mla	r5, r5, r3, r2
 80235f6:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80235fa:	10f2      	asrs	r2, r6, #3
 80235fc:	b2c8      	uxtb	r0, r1
 80235fe:	00f6      	lsls	r6, r6, #3
 8023600:	fb14 f407 	smulbb	r4, r4, r7
 8023604:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023608:	b2f6      	uxtb	r6, r6
 802360a:	fb10 f007 	smulbb	r0, r0, r7
 802360e:	fb02 4203 	mla	r2, r2, r3, r4
 8023612:	b2ad      	uxth	r5, r5
 8023614:	fb06 0303 	mla	r3, r6, r3, r0
 8023618:	b299      	uxth	r1, r3
 802361a:	b294      	uxth	r4, r2
 802361c:	1c6b      	adds	r3, r5, #1
 802361e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023622:	1c62      	adds	r2, r4, #1
 8023624:	1c4b      	adds	r3, r1, #1
 8023626:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802362a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802362e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023632:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023636:	0952      	lsrs	r2, r2, #5
 8023638:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802363c:	432b      	orrs	r3, r5
 802363e:	4313      	orrs	r3, r2
 8023640:	9a02      	ldr	r2, [sp, #8]
 8023642:	8013      	strh	r3, [r2, #0]
 8023644:	b005      	add	sp, #20
 8023646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802364a:	2500      	movs	r5, #0
 802364c:	e6ef      	b.n	802342e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802364e:	2100      	movs	r1, #0
 8023650:	460d      	mov	r5, r1
 8023652:	e6f7      	b.n	8023444 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023654:	2100      	movs	r1, #0
 8023656:	e6f5      	b.n	8023444 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023658:	4631      	mov	r1, r6
 802365a:	e6f3      	b.n	8023444 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802365c:	2400      	movs	r4, #0
 802365e:	e702      	b.n	8023466 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023660:	2200      	movs	r2, #0
 8023662:	4614      	mov	r4, r2
 8023664:	e70b      	b.n	802347e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023666:	4602      	mov	r2, r0
 8023668:	4604      	mov	r4, r0
 802366a:	e708      	b.n	802347e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802366c:	2200      	movs	r2, #0
 802366e:	e706      	b.n	802347e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023670:	4632      	mov	r2, r6
 8023672:	e704      	b.n	802347e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023674 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023678:	b09d      	sub	sp, #116	; 0x74
 802367a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802367e:	9219      	str	r2, [sp, #100]	; 0x64
 8023680:	9307      	str	r3, [sp, #28]
 8023682:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023684:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023688:	931a      	str	r3, [sp, #104]	; 0x68
 802368a:	9117      	str	r1, [sp, #92]	; 0x5c
 802368c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023690:	901b      	str	r0, [sp, #108]	; 0x6c
 8023692:	6850      	ldr	r0, [r2, #4]
 8023694:	6812      	ldr	r2, [r2, #0]
 8023696:	fb00 1303 	mla	r3, r0, r3, r1
 802369a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802369e:	930a      	str	r3, [sp, #40]	; 0x28
 80236a0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80236a2:	681b      	ldr	r3, [r3, #0]
 80236a4:	9310      	str	r3, [sp, #64]	; 0x40
 80236a6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80236aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80236ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80236ae:	2b00      	cmp	r3, #0
 80236b0:	dc03      	bgt.n	80236ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80236b2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80236b4:	2b00      	cmp	r3, #0
 80236b6:	f340 8375 	ble.w	8023da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80236ba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80236bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80236c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80236c4:	1e48      	subs	r0, r1, #1
 80236c6:	1e57      	subs	r7, r2, #1
 80236c8:	9b07      	ldr	r3, [sp, #28]
 80236ca:	2b00      	cmp	r3, #0
 80236cc:	f340 818e 	ble.w	80239ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80236d0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80236d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80236d8:	d406      	bmi.n	80236e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80236da:	4584      	cmp	ip, r0
 80236dc:	da04      	bge.n	80236e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80236de:	2b00      	cmp	r3, #0
 80236e0:	db02      	blt.n	80236e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80236e2:	42bb      	cmp	r3, r7
 80236e4:	f2c0 8183 	blt.w	80239ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80236e8:	f11c 0c01 	adds.w	ip, ip, #1
 80236ec:	f100 8173 	bmi.w	80239d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80236f0:	4561      	cmp	r1, ip
 80236f2:	f2c0 8170 	blt.w	80239d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80236f6:	3301      	adds	r3, #1
 80236f8:	f100 816d 	bmi.w	80239d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80236fc:	429a      	cmp	r2, r3
 80236fe:	f2c0 816a 	blt.w	80239d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023702:	9b07      	ldr	r3, [sp, #28]
 8023704:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023706:	9318      	str	r3, [sp, #96]	; 0x60
 8023708:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802370a:	2b00      	cmp	r3, #0
 802370c:	f340 818c 	ble.w	8023a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023710:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8023712:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023714:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023718:	689b      	ldr	r3, [r3, #8]
 802371a:	1422      	asrs	r2, r4, #16
 802371c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023720:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023724:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023728:	f100 81cd 	bmi.w	8023ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802372c:	f103 38ff 	add.w	r8, r3, #4294967295
 8023730:	4542      	cmp	r2, r8
 8023732:	f280 81c8 	bge.w	8023ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023736:	f1bc 0f00 	cmp.w	ip, #0
 802373a:	f2c0 81c4 	blt.w	8023ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802373e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023742:	45c4      	cmp	ip, r8
 8023744:	f280 81bf 	bge.w	8023ac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023748:	b21b      	sxth	r3, r3
 802374a:	fb0c 2203 	mla	r2, ip, r3, r2
 802374e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023750:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023754:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023758:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802375c:	2800      	cmp	r0, #0
 802375e:	f000 81a9 	beq.w	8023ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023762:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023766:	950c      	str	r5, [sp, #48]	; 0x30
 8023768:	0e2d      	lsrs	r5, r5, #24
 802376a:	9513      	str	r5, [sp, #76]	; 0x4c
 802376c:	b181      	cbz	r1, 8023790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802376e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023772:	3b01      	subs	r3, #1
 8023774:	009b      	lsls	r3, r3, #2
 8023776:	3304      	adds	r3, #4
 8023778:	eb08 0c03 	add.w	ip, r8, r3
 802377c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023780:	9308      	str	r3, [sp, #32]
 8023782:	0e1b      	lsrs	r3, r3, #24
 8023784:	9311      	str	r3, [sp, #68]	; 0x44
 8023786:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802378a:	930d      	str	r3, [sp, #52]	; 0x34
 802378c:	0e1b      	lsrs	r3, r3, #24
 802378e:	9314      	str	r3, [sp, #80]	; 0x50
 8023790:	b280      	uxth	r0, r0
 8023792:	b289      	uxth	r1, r1
 8023794:	fb00 f901 	mul.w	r9, r0, r1
 8023798:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802379c:	0100      	lsls	r0, r0, #4
 802379e:	eba0 0809 	sub.w	r8, r0, r9
 80237a2:	b289      	uxth	r1, r1
 80237a4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80237a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80237aa:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80237ac:	fa1f f888 	uxth.w	r8, r8
 80237b0:	1a5b      	subs	r3, r3, r1
 80237b2:	b29b      	uxth	r3, r3
 80237b4:	fb08 f000 	mul.w	r0, r8, r0
 80237b8:	fb03 000e 	mla	r0, r3, lr, r0
 80237bc:	fb01 0005 	mla	r0, r1, r5, r0
 80237c0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80237c2:	fb09 0005 	mla	r0, r9, r5, r0
 80237c6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80237ca:	2800      	cmp	r0, #0
 80237cc:	f000 80fa 	beq.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80237d0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80237d4:	d01b      	beq.n	802380e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80237d6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80237da:	fb0e fa0a 	mul.w	sl, lr, sl
 80237de:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80237e2:	fb0e fe02 	mul.w	lr, lr, r2
 80237e6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80237ea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80237ee:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80237f2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80237f6:	4452      	add	r2, sl
 80237f8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80237fc:	0a12      	lsrs	r2, r2, #8
 80237fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023802:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023806:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802380a:	ea42 020c 	orr.w	r2, r2, ip
 802380e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023810:	2dff      	cmp	r5, #255	; 0xff
 8023812:	d021      	beq.n	8023858 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023814:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023816:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802381a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802381c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023820:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023822:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023826:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023828:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802382c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023830:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023834:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023838:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802383c:	44de      	add	lr, fp
 802383e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023842:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023846:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802384a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802384e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023852:	ea4e 050a 	orr.w	r5, lr, sl
 8023856:	950c      	str	r5, [sp, #48]	; 0x30
 8023858:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802385a:	2dff      	cmp	r5, #255	; 0xff
 802385c:	d021      	beq.n	80238a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802385e:	9d08      	ldr	r5, [sp, #32]
 8023860:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023864:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023866:	fb05 fb0b 	mul.w	fp, r5, fp
 802386a:	9d08      	ldr	r5, [sp, #32]
 802386c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023870:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023872:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023876:	fb05 fa0a 	mul.w	sl, r5, sl
 802387a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802387e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023882:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023886:	44de      	add	lr, fp
 8023888:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802388c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023890:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023894:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023898:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802389c:	ea4e 050a 	orr.w	r5, lr, sl
 80238a0:	9508      	str	r5, [sp, #32]
 80238a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80238a4:	2dff      	cmp	r5, #255	; 0xff
 80238a6:	d021      	beq.n	80238ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80238a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80238aa:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80238ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80238b0:	fb05 fb0b 	mul.w	fp, r5, fp
 80238b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80238b6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80238ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80238bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80238c0:	fb05 fa0a 	mul.w	sl, r5, sl
 80238c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80238c8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80238cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80238d0:	44de      	add	lr, fp
 80238d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80238d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80238da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80238de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80238e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80238e6:	ea4e 050a 	orr.w	r5, lr, sl
 80238ea:	950d      	str	r5, [sp, #52]	; 0x34
 80238ec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80238ee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80238f2:	9d08      	ldr	r5, [sp, #32]
 80238f4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80238f8:	fb08 fc0c 	mul.w	ip, r8, ip
 80238fc:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023900:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023904:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023906:	fb01 cc0e 	mla	ip, r1, lr, ip
 802390a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802390e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023910:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023914:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023918:	fb08 f80e 	mul.w	r8, r8, lr
 802391c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023920:	fb03 8202 	mla	r2, r3, r2, r8
 8023924:	9b08      	ldr	r3, [sp, #32]
 8023926:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023928:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802392c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802392e:	fb01 220a 	mla	r2, r1, sl, r2
 8023932:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023936:	fb09 2901 	mla	r9, r9, r1, r2
 802393a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802393c:	883b      	ldrh	r3, [r7, #0]
 802393e:	4342      	muls	r2, r0
 8023940:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023944:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023948:	1c50      	adds	r0, r2, #1
 802394a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802394e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023952:	ea4c 0c09 	orr.w	ip, ip, r9
 8023956:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802395a:	1219      	asrs	r1, r3, #8
 802395c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023960:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023964:	b2c0      	uxtb	r0, r0
 8023966:	fb12 f205 	smulbb	r2, r2, r5
 802396a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802396e:	fb01 2100 	mla	r1, r1, r0, r2
 8023972:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023976:	10da      	asrs	r2, r3, #3
 8023978:	fa5f fc8c 	uxtb.w	ip, ip
 802397c:	00db      	lsls	r3, r3, #3
 802397e:	fb1c fc05 	smulbb	ip, ip, r5
 8023982:	b2db      	uxtb	r3, r3
 8023984:	b289      	uxth	r1, r1
 8023986:	fb03 c300 	mla	r3, r3, r0, ip
 802398a:	fa1f fc83 	uxth.w	ip, r3
 802398e:	1c4b      	adds	r3, r1, #1
 8023990:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023994:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023998:	fb1e fe05 	smulbb	lr, lr, r5
 802399c:	f10c 0301 	add.w	r3, ip, #1
 80239a0:	fb02 e200 	mla	r2, r2, r0, lr
 80239a4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80239a8:	b292      	uxth	r2, r2
 80239aa:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80239ae:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80239b2:	430b      	orrs	r3, r1
 80239b4:	1c51      	adds	r1, r2, #1
 80239b6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80239ba:	0952      	lsrs	r2, r2, #5
 80239bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80239c0:	4313      	orrs	r3, r2
 80239c2:	803b      	strh	r3, [r7, #0]
 80239c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80239c6:	441c      	add	r4, r3
 80239c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80239ca:	441e      	add	r6, r3
 80239cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80239ce:	3b01      	subs	r3, #1
 80239d0:	3702      	adds	r7, #2
 80239d2:	9318      	str	r3, [sp, #96]	; 0x60
 80239d4:	e698      	b.n	8023708 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80239d6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80239d8:	441c      	add	r4, r3
 80239da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80239dc:	441e      	add	r6, r3
 80239de:	9b07      	ldr	r3, [sp, #28]
 80239e0:	3b01      	subs	r3, #1
 80239e2:	9307      	str	r3, [sp, #28]
 80239e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80239e6:	3302      	adds	r3, #2
 80239e8:	930a      	str	r3, [sp, #40]	; 0x28
 80239ea:	e66d      	b.n	80236c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80239ec:	d023      	beq.n	8023a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80239ee:	9b07      	ldr	r3, [sp, #28]
 80239f0:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80239f2:	3b01      	subs	r3, #1
 80239f4:	fb00 4003 	mla	r0, r0, r3, r4
 80239f8:	1400      	asrs	r0, r0, #16
 80239fa:	f53f ae82 	bmi.w	8023702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80239fe:	3901      	subs	r1, #1
 8023a00:	4288      	cmp	r0, r1
 8023a02:	f6bf ae7e 	bge.w	8023702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a06:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023a08:	fb01 6303 	mla	r3, r1, r3, r6
 8023a0c:	141b      	asrs	r3, r3, #16
 8023a0e:	f53f ae78 	bmi.w	8023702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a12:	3a01      	subs	r2, #1
 8023a14:	4293      	cmp	r3, r2
 8023a16:	f6bf ae74 	bge.w	8023702 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a1a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023a1e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023a22:	f1bb 0f00 	cmp.w	fp, #0
 8023a26:	dc6c      	bgt.n	8023b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023a28:	9b07      	ldr	r3, [sp, #28]
 8023a2a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023a2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a30:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023a34:	930a      	str	r3, [sp, #40]	; 0x28
 8023a36:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023a38:	2b00      	cmp	r3, #0
 8023a3a:	f340 81b3 	ble.w	8023da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023a3e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023a42:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023a46:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023a4a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023a4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023a50:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023a54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023a58:	eef0 6a62 	vmov.f32	s13, s5
 8023a5c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023a60:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a64:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a68:	ee16 4a90 	vmov	r4, s13
 8023a6c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023a70:	eef0 6a43 	vmov.f32	s13, s6
 8023a74:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023a78:	ee12 2a90 	vmov	r2, s5
 8023a7c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023a80:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a84:	ee13 2a10 	vmov	r2, s6
 8023a88:	9329      	str	r3, [sp, #164]	; 0xa4
 8023a8a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023a8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a90:	932a      	str	r3, [sp, #168]	; 0xa8
 8023a92:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023a94:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023a96:	3b01      	subs	r3, #1
 8023a98:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a9c:	9317      	str	r3, [sp, #92]	; 0x5c
 8023a9e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023aa0:	bf08      	it	eq
 8023aa2:	4613      	moveq	r3, r2
 8023aa4:	ee16 6a90 	vmov	r6, s13
 8023aa8:	9307      	str	r3, [sp, #28]
 8023aaa:	eeb0 3a67 	vmov.f32	s6, s15
 8023aae:	eef0 2a47 	vmov.f32	s5, s14
 8023ab2:	e5fb      	b.n	80236ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023ab4:	2900      	cmp	r1, #0
 8023ab6:	f43f ae6b 	beq.w	8023790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023aba:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023abe:	9308      	str	r3, [sp, #32]
 8023ac0:	0e1b      	lsrs	r3, r3, #24
 8023ac2:	9311      	str	r3, [sp, #68]	; 0x44
 8023ac4:	e664      	b.n	8023790 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023ac6:	f112 0801 	adds.w	r8, r2, #1
 8023aca:	f53f af7b 	bmi.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ace:	4543      	cmp	r3, r8
 8023ad0:	f6ff af78 	blt.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ad4:	f11c 0801 	adds.w	r8, ip, #1
 8023ad8:	f53f af74 	bmi.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023adc:	45c6      	cmp	lr, r8
 8023ade:	f6ff af71 	blt.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ae2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023ae4:	9201      	str	r2, [sp, #4]
 8023ae6:	fa0f f28e 	sxth.w	r2, lr
 8023aea:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023aee:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023af2:	9200      	str	r2, [sp, #0]
 8023af4:	b21b      	sxth	r3, r3
 8023af6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023af8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023afa:	4639      	mov	r1, r7
 8023afc:	f7ff fc79 	bl	80233f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023b00:	e760      	b.n	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023b02:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023b04:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023b06:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b0a:	1427      	asrs	r7, r4, #16
 8023b0c:	1433      	asrs	r3, r6, #16
 8023b0e:	fb01 7303 	mla	r3, r1, r3, r7
 8023b12:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023b16:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023b1a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023b1e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023b22:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023b26:	2a00      	cmp	r2, #0
 8023b28:	f000 8133 	beq.w	8023d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8023b2c:	687d      	ldr	r5, [r7, #4]
 8023b2e:	950e      	str	r5, [sp, #56]	; 0x38
 8023b30:	0e2d      	lsrs	r5, r5, #24
 8023b32:	9515      	str	r5, [sp, #84]	; 0x54
 8023b34:	b178      	cbz	r0, 8023b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023b36:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8023b3a:	3901      	subs	r1, #1
 8023b3c:	0089      	lsls	r1, r1, #2
 8023b3e:	3104      	adds	r1, #4
 8023b40:	eb07 0e01 	add.w	lr, r7, r1
 8023b44:	5879      	ldr	r1, [r7, r1]
 8023b46:	9109      	str	r1, [sp, #36]	; 0x24
 8023b48:	0e09      	lsrs	r1, r1, #24
 8023b4a:	9112      	str	r1, [sp, #72]	; 0x48
 8023b4c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023b50:	910f      	str	r1, [sp, #60]	; 0x3c
 8023b52:	0e09      	lsrs	r1, r1, #24
 8023b54:	9116      	str	r1, [sp, #88]	; 0x58
 8023b56:	b292      	uxth	r2, r2
 8023b58:	b280      	uxth	r0, r0
 8023b5a:	fb02 f800 	mul.w	r8, r2, r0
 8023b5e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023b62:	0112      	lsls	r2, r2, #4
 8023b64:	eba2 0e08 	sub.w	lr, r2, r8
 8023b68:	b280      	uxth	r0, r0
 8023b6a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023b6e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023b70:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023b72:	fa1f fe8e 	uxth.w	lr, lr
 8023b76:	1a12      	subs	r2, r2, r0
 8023b78:	b292      	uxth	r2, r2
 8023b7a:	fb0e f101 	mul.w	r1, lr, r1
 8023b7e:	fb02 110c 	mla	r1, r2, ip, r1
 8023b82:	fb00 1105 	mla	r1, r0, r5, r1
 8023b86:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023b88:	fb08 1105 	mla	r1, r8, r5, r1
 8023b8c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023b90:	2900      	cmp	r1, #0
 8023b92:	f000 80f5 	beq.w	8023d80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8023b96:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023b9a:	d019      	beq.n	8023bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023b9c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023ba0:	fb0c fa0a 	mul.w	sl, ip, sl
 8023ba4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023ba8:	fb0c fc03 	mul.w	ip, ip, r3
 8023bac:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023bb0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023bb4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023bb8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023bbc:	4453      	add	r3, sl
 8023bbe:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023bc2:	0a1b      	lsrs	r3, r3, #8
 8023bc4:	0a3f      	lsrs	r7, r7, #8
 8023bc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023bca:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023bce:	433b      	orrs	r3, r7
 8023bd0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023bd2:	2dff      	cmp	r5, #255	; 0xff
 8023bd4:	d020      	beq.n	8023c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023bd6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023bd8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023bdc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023bde:	436f      	muls	r7, r5
 8023be0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023be2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023be6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023be8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023bec:	fb05 fa0a 	mul.w	sl, r5, sl
 8023bf0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023bf4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023bf8:	44bc      	add	ip, r7
 8023bfa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023bfe:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023c02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c06:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c0e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c12:	ea4c 050a 	orr.w	r5, ip, sl
 8023c16:	950e      	str	r5, [sp, #56]	; 0x38
 8023c18:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023c1a:	2dff      	cmp	r5, #255	; 0xff
 8023c1c:	d020      	beq.n	8023c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023c1e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023c20:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023c24:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023c26:	436f      	muls	r7, r5
 8023c28:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023c2a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023c2e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023c30:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023c34:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c38:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023c3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c40:	44bc      	add	ip, r7
 8023c42:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023c46:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023c4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c4e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c52:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c56:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c5a:	ea4c 050a 	orr.w	r5, ip, sl
 8023c5e:	9509      	str	r5, [sp, #36]	; 0x24
 8023c60:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023c62:	2dff      	cmp	r5, #255	; 0xff
 8023c64:	d020      	beq.n	8023ca8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023c66:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023c68:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023c6c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023c6e:	436f      	muls	r7, r5
 8023c70:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023c72:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023c76:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023c78:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023c7c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c80:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023c84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c88:	44bc      	add	ip, r7
 8023c8a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023c8e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023c92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c9a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023ca2:	ea4c 050a 	orr.w	r5, ip, sl
 8023ca6:	950f      	str	r5, [sp, #60]	; 0x3c
 8023ca8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023caa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023cae:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023cb0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023cb4:	fb0e f707 	mul.w	r7, lr, r7
 8023cb8:	fb02 770c 	mla	r7, r2, ip, r7
 8023cbc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023cc0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023cc2:	fb00 770c 	mla	r7, r0, ip, r7
 8023cc6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023cca:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023ccc:	fb08 770c 	mla	r7, r8, ip, r7
 8023cd0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023cd4:	fb0e fe0c 	mul.w	lr, lr, ip
 8023cd8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023cdc:	fb02 e303 	mla	r3, r2, r3, lr
 8023ce0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023ce2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023ce4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023ce8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023cea:	fb00 330a 	mla	r3, r0, sl, r3
 8023cee:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023cf2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023cf6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023cf8:	f8b9 0000 	ldrh.w	r0, [r9]
 8023cfc:	4359      	muls	r1, r3
 8023cfe:	0a3f      	lsrs	r7, r7, #8
 8023d00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d04:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023d08:	1c4b      	adds	r3, r1, #1
 8023d0a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023d0e:	ea47 070c 	orr.w	r7, r7, ip
 8023d12:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023d16:	1202      	asrs	r2, r0, #8
 8023d18:	0c3b      	lsrs	r3, r7, #16
 8023d1a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023d1e:	b2c9      	uxtb	r1, r1
 8023d20:	fb13 f305 	smulbb	r3, r3, r5
 8023d24:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023d28:	fb02 3201 	mla	r2, r2, r1, r3
 8023d2c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023d30:	10c3      	asrs	r3, r0, #3
 8023d32:	b2ff      	uxtb	r7, r7
 8023d34:	00c0      	lsls	r0, r0, #3
 8023d36:	b2c0      	uxtb	r0, r0
 8023d38:	fb17 f705 	smulbb	r7, r7, r5
 8023d3c:	fb00 7001 	mla	r0, r0, r1, r7
 8023d40:	b292      	uxth	r2, r2
 8023d42:	fb1c fc05 	smulbb	ip, ip, r5
 8023d46:	b280      	uxth	r0, r0
 8023d48:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023d4c:	fb03 c301 	mla	r3, r3, r1, ip
 8023d50:	1c51      	adds	r1, r2, #1
 8023d52:	f100 0c01 	add.w	ip, r0, #1
 8023d56:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023d5a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023d5e:	b29b      	uxth	r3, r3
 8023d60:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023d64:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023d68:	ea4c 0202 	orr.w	r2, ip, r2
 8023d6c:	f103 0c01 	add.w	ip, r3, #1
 8023d70:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023d74:	095b      	lsrs	r3, r3, #5
 8023d76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023d7a:	431a      	orrs	r2, r3
 8023d7c:	f8a9 2000 	strh.w	r2, [r9]
 8023d80:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023d82:	441c      	add	r4, r3
 8023d84:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023d86:	f109 0902 	add.w	r9, r9, #2
 8023d8a:	441e      	add	r6, r3
 8023d8c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023d90:	e647      	b.n	8023a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023d92:	2800      	cmp	r0, #0
 8023d94:	f43f aedf 	beq.w	8023b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023d98:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023d9c:	9109      	str	r1, [sp, #36]	; 0x24
 8023d9e:	0e09      	lsrs	r1, r1, #24
 8023da0:	9112      	str	r1, [sp, #72]	; 0x48
 8023da2:	e6d8      	b.n	8023b56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023da4:	b01d      	add	sp, #116	; 0x74
 8023da6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023daa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023daa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023dae:	b085      	sub	sp, #20
 8023db0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023db4:	9102      	str	r1, [sp, #8]
 8023db6:	2c00      	cmp	r4, #0
 8023db8:	fb04 7103 	mla	r1, r4, r3, r7
 8023dbc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023dc0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023dc4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023dc8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023dcc:	f2c0 810c 	blt.w	8023fe8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023dd0:	45a6      	cmp	lr, r4
 8023dd2:	f340 8109 	ble.w	8023fe8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023dd6:	2f00      	cmp	r7, #0
 8023dd8:	f2c0 8104 	blt.w	8023fe4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023ddc:	42bb      	cmp	r3, r7
 8023dde:	f340 8101 	ble.w	8023fe4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023de2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023de6:	1c7a      	adds	r2, r7, #1
 8023de8:	f100 8101 	bmi.w	8023fee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023dec:	4293      	cmp	r3, r2
 8023dee:	f340 80fe 	ble.w	8023fee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023df2:	2e00      	cmp	r6, #0
 8023df4:	f000 80fd 	beq.w	8023ff2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023df8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023dfc:	3401      	adds	r4, #1
 8023dfe:	f100 80fc 	bmi.w	8023ffa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023e02:	45a6      	cmp	lr, r4
 8023e04:	f340 80f9 	ble.w	8023ffa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023e08:	2800      	cmp	r0, #0
 8023e0a:	f000 80f9 	beq.w	8024000 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023e0e:	2f00      	cmp	r7, #0
 8023e10:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023e14:	f2c0 80ef 	blt.w	8023ff6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023e18:	42bb      	cmp	r3, r7
 8023e1a:	f340 80ec 	ble.w	8023ff6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023e1e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023e22:	3701      	adds	r7, #1
 8023e24:	f100 80ef 	bmi.w	8024006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023e28:	42bb      	cmp	r3, r7
 8023e2a:	f340 80ec 	ble.w	8024006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023e2e:	2e00      	cmp	r6, #0
 8023e30:	f000 80eb 	beq.w	802400a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023e34:	6852      	ldr	r2, [r2, #4]
 8023e36:	b2b6      	uxth	r6, r6
 8023e38:	b280      	uxth	r0, r0
 8023e3a:	fb00 fe06 	mul.w	lr, r0, r6
 8023e3e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023e42:	0136      	lsls	r6, r6, #4
 8023e44:	eba6 070e 	sub.w	r7, r6, lr
 8023e48:	b280      	uxth	r0, r0
 8023e4a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023e4e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023e52:	b2bf      	uxth	r7, r7
 8023e54:	1a1b      	subs	r3, r3, r0
 8023e56:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023e5a:	b29b      	uxth	r3, r3
 8023e5c:	fb07 f60a 	mul.w	r6, r7, sl
 8023e60:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023e64:	fb0b 6603 	mla	r6, fp, r3, r6
 8023e68:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023e6c:	fb00 6609 	mla	r6, r0, r9, r6
 8023e70:	fb0e 6608 	mla	r6, lr, r8, r6
 8023e74:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023e78:	9600      	str	r6, [sp, #0]
 8023e7a:	2e00      	cmp	r6, #0
 8023e7c:	f000 80af 	beq.w	8023fde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023e80:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023e84:	fb0b fc0c 	mul.w	ip, fp, ip
 8023e88:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023e8c:	fb0b f505 	mul.w	r5, fp, r5
 8023e90:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023e94:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023e98:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023e9c:	44dc      	add	ip, fp
 8023e9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ea2:	9501      	str	r5, [sp, #4]
 8023ea4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023ea8:	9503      	str	r5, [sp, #12]
 8023eaa:	9d01      	ldr	r5, [sp, #4]
 8023eac:	9e02      	ldr	r6, [sp, #8]
 8023eae:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023eb2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023eb6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023eba:	fb0a fc0c 	mul.w	ip, sl, ip
 8023ebe:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023ec2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023ec6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023eca:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023ece:	4465      	add	r5, ip
 8023ed0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023ed4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023ed8:	fb09 fc0c 	mul.w	ip, r9, ip
 8023edc:	fb09 f904 	mul.w	r9, r9, r4
 8023ee0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023ee4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023ee8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023eec:	fb08 f404 	mul.w	r4, r8, r4
 8023ef0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023ef4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023ef8:	fb08 f802 	mul.w	r8, r8, r2
 8023efc:	fb0a fa01 	mul.w	sl, sl, r1
 8023f00:	0a22      	lsrs	r2, r4, #8
 8023f02:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023f06:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023f0a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023f0e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023f12:	4414      	add	r4, r2
 8023f14:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023f18:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023f1c:	0a2d      	lsrs	r5, r5, #8
 8023f1e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023f22:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023f26:	9a03      	ldr	r2, [sp, #12]
 8023f28:	8836      	ldrh	r6, [r6, #0]
 8023f2a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023f2e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023f32:	437d      	muls	r5, r7
 8023f34:	4461      	add	r1, ip
 8023f36:	0a24      	lsrs	r4, r4, #8
 8023f38:	fb02 5503 	mla	r5, r2, r3, r5
 8023f3c:	0a09      	lsrs	r1, r1, #8
 8023f3e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023f42:	fb04 540e 	mla	r4, r4, lr, r5
 8023f46:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023f4a:	fb01 4100 	mla	r1, r1, r0, r4
 8023f4e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f52:	0a09      	lsrs	r1, r1, #8
 8023f54:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f58:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023f5c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023f60:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023f64:	fb07 f70a 	mul.w	r7, r7, sl
 8023f68:	fb03 7101 	mla	r1, r3, r1, r7
 8023f6c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023f70:	9b00      	ldr	r3, [sp, #0]
 8023f72:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023f76:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023f7a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023f7e:	fb00 e101 	mla	r1, r0, r1, lr
 8023f82:	43da      	mvns	r2, r3
 8023f84:	1233      	asrs	r3, r6, #8
 8023f86:	b2d2      	uxtb	r2, r2
 8023f88:	10f0      	asrs	r0, r6, #3
 8023f8a:	0a09      	lsrs	r1, r1, #8
 8023f8c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023f90:	00f6      	lsls	r6, r6, #3
 8023f92:	4353      	muls	r3, r2
 8023f94:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023f98:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023f9c:	b2f6      	uxtb	r6, r6
 8023f9e:	4321      	orrs	r1, r4
 8023fa0:	4350      	muls	r0, r2
 8023fa2:	4356      	muls	r6, r2
 8023fa4:	1c5a      	adds	r2, r3, #1
 8023fa6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023faa:	0c0b      	lsrs	r3, r1, #16
 8023fac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023fb0:	1c42      	adds	r2, r0, #1
 8023fb2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023fb6:	0a0a      	lsrs	r2, r1, #8
 8023fb8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023fbc:	021b      	lsls	r3, r3, #8
 8023fbe:	00d2      	lsls	r2, r2, #3
 8023fc0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023fc4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023fc8:	4313      	orrs	r3, r2
 8023fca:	1c72      	adds	r2, r6, #1
 8023fcc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023fd0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023fd4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023fd8:	4319      	orrs	r1, r3
 8023fda:	9b02      	ldr	r3, [sp, #8]
 8023fdc:	8019      	strh	r1, [r3, #0]
 8023fde:	b005      	add	sp, #20
 8023fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023fe4:	2500      	movs	r5, #0
 8023fe6:	e6fe      	b.n	8023de6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023fe8:	2100      	movs	r1, #0
 8023fea:	460d      	mov	r5, r1
 8023fec:	e706      	b.n	8023dfc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023fee:	2100      	movs	r1, #0
 8023ff0:	e704      	b.n	8023dfc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023ff2:	4631      	mov	r1, r6
 8023ff4:	e702      	b.n	8023dfc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023ff6:	2400      	movs	r4, #0
 8023ff8:	e713      	b.n	8023e22 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023ffa:	2200      	movs	r2, #0
 8023ffc:	4614      	mov	r4, r2
 8023ffe:	e71a      	b.n	8023e36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024000:	4602      	mov	r2, r0
 8024002:	4604      	mov	r4, r0
 8024004:	e717      	b.n	8023e36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024006:	2200      	movs	r2, #0
 8024008:	e715      	b.n	8023e36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802400a:	4632      	mov	r2, r6
 802400c:	e713      	b.n	8023e36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024010 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024014:	b09b      	sub	sp, #108	; 0x6c
 8024016:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802401a:	9218      	str	r2, [sp, #96]	; 0x60
 802401c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802401e:	9116      	str	r1, [sp, #88]	; 0x58
 8024020:	9307      	str	r3, [sp, #28]
 8024022:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024026:	9019      	str	r0, [sp, #100]	; 0x64
 8024028:	6850      	ldr	r0, [r2, #4]
 802402a:	6812      	ldr	r2, [r2, #0]
 802402c:	fb00 1303 	mla	r3, r0, r3, r1
 8024030:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024034:	930a      	str	r3, [sp, #40]	; 0x28
 8024036:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024038:	681b      	ldr	r3, [r3, #0]
 802403a:	930f      	str	r3, [sp, #60]	; 0x3c
 802403c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802403e:	2b00      	cmp	r3, #0
 8024040:	dc03      	bgt.n	802404a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024042:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024044:	2b00      	cmp	r3, #0
 8024046:	f340 8386 	ble.w	8024756 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802404a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802404c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024050:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024054:	1e48      	subs	r0, r1, #1
 8024056:	1e57      	subs	r7, r2, #1
 8024058:	9b07      	ldr	r3, [sp, #28]
 802405a:	2b00      	cmp	r3, #0
 802405c:	f340 8166 	ble.w	802432c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024060:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024064:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024068:	d406      	bmi.n	8024078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802406a:	4584      	cmp	ip, r0
 802406c:	da04      	bge.n	8024078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802406e:	2b00      	cmp	r3, #0
 8024070:	db02      	blt.n	8024078 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024072:	42bb      	cmp	r3, r7
 8024074:	f2c0 815b 	blt.w	802432e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024078:	f11c 0c01 	adds.w	ip, ip, #1
 802407c:	f100 814b 	bmi.w	8024316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024080:	4561      	cmp	r1, ip
 8024082:	f2c0 8148 	blt.w	8024316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024086:	3301      	adds	r3, #1
 8024088:	f100 8145 	bmi.w	8024316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802408c:	429a      	cmp	r2, r3
 802408e:	f2c0 8142 	blt.w	8024316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024092:	9b07      	ldr	r3, [sp, #28]
 8024094:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8024096:	9317      	str	r3, [sp, #92]	; 0x5c
 8024098:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802409a:	2b00      	cmp	r3, #0
 802409c:	f340 8165 	ble.w	802436a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80240a0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80240a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80240a4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80240a8:	689b      	ldr	r3, [r3, #8]
 80240aa:	1422      	asrs	r2, r4, #16
 80240ac:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80240b0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80240b4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80240b8:	f100 81d5 	bmi.w	8024466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240bc:	f103 38ff 	add.w	r8, r3, #4294967295
 80240c0:	4542      	cmp	r2, r8
 80240c2:	f280 81d0 	bge.w	8024466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240c6:	f1bc 0f00 	cmp.w	ip, #0
 80240ca:	f2c0 81cc 	blt.w	8024466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240ce:	f10e 38ff 	add.w	r8, lr, #4294967295
 80240d2:	45c4      	cmp	ip, r8
 80240d4:	f280 81c7 	bge.w	8024466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240d8:	b21b      	sxth	r3, r3
 80240da:	fb0c 2203 	mla	r2, ip, r3, r2
 80240de:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80240e0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80240e4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80240e8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80240ec:	2900      	cmp	r1, #0
 80240ee:	f000 8182 	beq.w	80243f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80240f2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80240f6:	950b      	str	r5, [sp, #44]	; 0x2c
 80240f8:	0e2d      	lsrs	r5, r5, #24
 80240fa:	9512      	str	r5, [sp, #72]	; 0x48
 80240fc:	b180      	cbz	r0, 8024120 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80240fe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024102:	3b01      	subs	r3, #1
 8024104:	009b      	lsls	r3, r3, #2
 8024106:	3304      	adds	r3, #4
 8024108:	eb08 0c03 	add.w	ip, r8, r3
 802410c:	f858 3003 	ldr.w	r3, [r8, r3]
 8024110:	9308      	str	r3, [sp, #32]
 8024112:	0e1b      	lsrs	r3, r3, #24
 8024114:	9310      	str	r3, [sp, #64]	; 0x40
 8024116:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802411a:	930c      	str	r3, [sp, #48]	; 0x30
 802411c:	0e1b      	lsrs	r3, r3, #24
 802411e:	9313      	str	r3, [sp, #76]	; 0x4c
 8024120:	b289      	uxth	r1, r1
 8024122:	b280      	uxth	r0, r0
 8024124:	fb01 f900 	mul.w	r9, r1, r0
 8024128:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802412c:	0109      	lsls	r1, r1, #4
 802412e:	eba1 0809 	sub.w	r8, r1, r9
 8024132:	b280      	uxth	r0, r0
 8024134:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024138:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802413a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802413c:	fa1f f888 	uxth.w	r8, r8
 8024140:	1a09      	subs	r1, r1, r0
 8024142:	b289      	uxth	r1, r1
 8024144:	fb08 f303 	mul.w	r3, r8, r3
 8024148:	fb01 330e 	mla	r3, r1, lr, r3
 802414c:	fb00 3305 	mla	r3, r0, r5, r3
 8024150:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024152:	fb09 3305 	mla	r3, r9, r5, r3
 8024156:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802415a:	2b00      	cmp	r3, #0
 802415c:	f000 80d2 	beq.w	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024160:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024164:	d01b      	beq.n	802419e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024166:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802416a:	fb0e fa0a 	mul.w	sl, lr, sl
 802416e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024172:	fb0e fe02 	mul.w	lr, lr, r2
 8024176:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802417a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802417e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024182:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024186:	4452      	add	r2, sl
 8024188:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802418c:	0a12      	lsrs	r2, r2, #8
 802418e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024192:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024196:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802419a:	ea42 020c 	orr.w	r2, r2, ip
 802419e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80241a0:	2dff      	cmp	r5, #255	; 0xff
 80241a2:	d021      	beq.n	80241e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80241a4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80241a6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80241aa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80241ac:	fb05 fb0b 	mul.w	fp, r5, fp
 80241b0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80241b2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80241b6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80241b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80241bc:	fb05 fa0a 	mul.w	sl, r5, sl
 80241c0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241c4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80241c8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80241cc:	44de      	add	lr, fp
 80241ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80241d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80241d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241e2:	ea4e 050a 	orr.w	r5, lr, sl
 80241e6:	950b      	str	r5, [sp, #44]	; 0x2c
 80241e8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80241ea:	2dff      	cmp	r5, #255	; 0xff
 80241ec:	d021      	beq.n	8024232 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80241ee:	9d08      	ldr	r5, [sp, #32]
 80241f0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80241f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80241f6:	fb05 fb0b 	mul.w	fp, r5, fp
 80241fa:	9d08      	ldr	r5, [sp, #32]
 80241fc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024200:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024202:	fb05 fa0e 	mul.w	sl, r5, lr
 8024206:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802420a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802420e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024212:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024216:	44de      	add	lr, fp
 8024218:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802421c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024220:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024224:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024228:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802422c:	ea4e 050a 	orr.w	r5, lr, sl
 8024230:	9508      	str	r5, [sp, #32]
 8024232:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024234:	2dff      	cmp	r5, #255	; 0xff
 8024236:	d021      	beq.n	802427c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024238:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802423a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802423e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024240:	fb05 fb0b 	mul.w	fp, r5, fp
 8024244:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024246:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802424a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802424c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024250:	fb05 fa0a 	mul.w	sl, r5, sl
 8024254:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024258:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802425c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024260:	44de      	add	lr, fp
 8024262:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024266:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802426a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802426e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024272:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024276:	ea4e 050a 	orr.w	r5, lr, sl
 802427a:	950c      	str	r5, [sp, #48]	; 0x30
 802427c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802427e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024282:	9d08      	ldr	r5, [sp, #32]
 8024284:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024288:	fb08 fc0c 	mul.w	ip, r8, ip
 802428c:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024290:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024294:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024296:	fb00 cc0e 	mla	ip, r0, lr, ip
 802429a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802429e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80242a0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80242a4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80242a8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80242ac:	fb08 f80e 	mul.w	r8, r8, lr
 80242b0:	fb01 8202 	mla	r2, r1, r2, r8
 80242b4:	9908      	ldr	r1, [sp, #32]
 80242b6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80242ba:	990c      	ldr	r1, [sp, #48]	; 0x30
 80242bc:	fb00 220a 	mla	r2, r0, sl, r2
 80242c0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80242c4:	fb09 2900 	mla	r9, r9, r0, r2
 80242c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80242d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242d4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80242d8:	ea4c 0c09 	orr.w	ip, ip, r9
 80242dc:	2bff      	cmp	r3, #255	; 0xff
 80242de:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80242e2:	f040 8091 	bne.w	8024408 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80242e6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80242ea:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80242ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80242f2:	f022 0207 	bic.w	r2, r2, #7
 80242f6:	431a      	orrs	r2, r3
 80242f8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80242fc:	ea4c 0c02 	orr.w	ip, ip, r2
 8024300:	f8a7 c000 	strh.w	ip, [r7]
 8024304:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024306:	441c      	add	r4, r3
 8024308:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802430a:	441e      	add	r6, r3
 802430c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802430e:	3b01      	subs	r3, #1
 8024310:	3702      	adds	r7, #2
 8024312:	9317      	str	r3, [sp, #92]	; 0x5c
 8024314:	e6c0      	b.n	8024098 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024316:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024318:	441c      	add	r4, r3
 802431a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802431c:	441e      	add	r6, r3
 802431e:	9b07      	ldr	r3, [sp, #28]
 8024320:	3b01      	subs	r3, #1
 8024322:	9307      	str	r3, [sp, #28]
 8024324:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024326:	3302      	adds	r3, #2
 8024328:	930a      	str	r3, [sp, #40]	; 0x28
 802432a:	e695      	b.n	8024058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802432c:	d024      	beq.n	8024378 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802432e:	9b07      	ldr	r3, [sp, #28]
 8024330:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024332:	3b01      	subs	r3, #1
 8024334:	fb00 4003 	mla	r0, r0, r3, r4
 8024338:	1400      	asrs	r0, r0, #16
 802433a:	f53f aeaa 	bmi.w	8024092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802433e:	3901      	subs	r1, #1
 8024340:	4288      	cmp	r0, r1
 8024342:	f6bf aea6 	bge.w	8024092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024346:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024348:	fb01 6303 	mla	r3, r1, r3, r6
 802434c:	141b      	asrs	r3, r3, #16
 802434e:	f53f aea0 	bmi.w	8024092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024352:	3a01      	subs	r2, #1
 8024354:	4293      	cmp	r3, r2
 8024356:	f6bf ae9c 	bge.w	8024092 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802435a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802435e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8024362:	f1bb 0f00 	cmp.w	fp, #0
 8024366:	f300 809a 	bgt.w	802449e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802436a:	9b07      	ldr	r3, [sp, #28]
 802436c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024370:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024372:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024376:	930a      	str	r3, [sp, #40]	; 0x28
 8024378:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802437a:	2b00      	cmp	r3, #0
 802437c:	f340 81eb 	ble.w	8024756 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024380:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024384:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024388:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802438c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802438e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024392:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024396:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802439a:	eef0 6a62 	vmov.f32	s13, s5
 802439e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80243a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80243aa:	ee16 4a90 	vmov	r4, s13
 80243ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80243b2:	eef0 6a43 	vmov.f32	s13, s6
 80243b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80243ba:	ee12 2a90 	vmov	r2, s5
 80243be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80243c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80243c6:	ee13 2a10 	vmov	r2, s6
 80243ca:	9327      	str	r3, [sp, #156]	; 0x9c
 80243cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80243ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80243d2:	9328      	str	r3, [sp, #160]	; 0xa0
 80243d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80243d6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80243d8:	3b01      	subs	r3, #1
 80243da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243de:	9316      	str	r3, [sp, #88]	; 0x58
 80243e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80243e2:	bf08      	it	eq
 80243e4:	4613      	moveq	r3, r2
 80243e6:	ee16 6a90 	vmov	r6, s13
 80243ea:	9307      	str	r3, [sp, #28]
 80243ec:	eeb0 3a67 	vmov.f32	s6, s15
 80243f0:	eef0 2a47 	vmov.f32	s5, s14
 80243f4:	e622      	b.n	802403c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 80243f6:	2800      	cmp	r0, #0
 80243f8:	f43f ae92 	beq.w	8024120 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80243fc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024400:	9308      	str	r3, [sp, #32]
 8024402:	0e1b      	lsrs	r3, r3, #24
 8024404:	9310      	str	r3, [sp, #64]	; 0x40
 8024406:	e68b      	b.n	8024120 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024408:	8839      	ldrh	r1, [r7, #0]
 802440a:	4dd4      	ldr	r5, [pc, #848]	; (802475c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802440c:	43db      	mvns	r3, r3
 802440e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8024412:	fa5f f883 	uxtb.w	r8, r3
 8024416:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802441a:	fb0e fe08 	mul.w	lr, lr, r8
 802441e:	10c8      	asrs	r0, r1, #3
 8024420:	00cb      	lsls	r3, r1, #3
 8024422:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024426:	f10e 0101 	add.w	r1, lr, #1
 802442a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802442e:	fb00 f008 	mul.w	r0, r0, r8
 8024432:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8024436:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802443a:	f100 0e01 	add.w	lr, r0, #1
 802443e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8024442:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024446:	b2db      	uxtb	r3, r3
 8024448:	b2c9      	uxtb	r1, r1
 802444a:	00d2      	lsls	r2, r2, #3
 802444c:	fb03 f308 	mul.w	r3, r3, r8
 8024450:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8024454:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024458:	430a      	orrs	r2, r1
 802445a:	1c59      	adds	r1, r3, #1
 802445c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024460:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024464:	e748      	b.n	80242f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8024466:	f112 0801 	adds.w	r8, r2, #1
 802446a:	f53f af4b 	bmi.w	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802446e:	4543      	cmp	r3, r8
 8024470:	f6ff af48 	blt.w	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024474:	f11c 0801 	adds.w	r8, ip, #1
 8024478:	f53f af44 	bmi.w	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802447c:	45c6      	cmp	lr, r8
 802447e:	f6ff af41 	blt.w	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024482:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8024486:	fa0f f28e 	sxth.w	r2, lr
 802448a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802448e:	9200      	str	r2, [sp, #0]
 8024490:	b21b      	sxth	r3, r3
 8024492:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024494:	9819      	ldr	r0, [sp, #100]	; 0x64
 8024496:	4639      	mov	r1, r7
 8024498:	f7ff fc87 	bl	8023daa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802449c:	e732      	b.n	8024304 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802449e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80244a0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80244a2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80244a6:	1421      	asrs	r1, r4, #16
 80244a8:	1433      	asrs	r3, r6, #16
 80244aa:	fb07 1303 	mla	r3, r7, r3, r1
 80244ae:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80244b0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80244b4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80244b8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80244bc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80244c0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80244c4:	2a00      	cmp	r2, #0
 80244c6:	f000 8107 	beq.w	80246d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80244ca:	684d      	ldr	r5, [r1, #4]
 80244cc:	950d      	str	r5, [sp, #52]	; 0x34
 80244ce:	0e2d      	lsrs	r5, r5, #24
 80244d0:	9514      	str	r5, [sp, #80]	; 0x50
 80244d2:	b178      	cbz	r0, 80244f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80244d4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80244d8:	3f01      	subs	r7, #1
 80244da:	00bf      	lsls	r7, r7, #2
 80244dc:	3704      	adds	r7, #4
 80244de:	eb01 0e07 	add.w	lr, r1, r7
 80244e2:	59c9      	ldr	r1, [r1, r7]
 80244e4:	9109      	str	r1, [sp, #36]	; 0x24
 80244e6:	0e09      	lsrs	r1, r1, #24
 80244e8:	9111      	str	r1, [sp, #68]	; 0x44
 80244ea:	f8de 1004 	ldr.w	r1, [lr, #4]
 80244ee:	910e      	str	r1, [sp, #56]	; 0x38
 80244f0:	0e09      	lsrs	r1, r1, #24
 80244f2:	9115      	str	r1, [sp, #84]	; 0x54
 80244f4:	b292      	uxth	r2, r2
 80244f6:	b280      	uxth	r0, r0
 80244f8:	fb02 f900 	mul.w	r9, r2, r0
 80244fc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024500:	0112      	lsls	r2, r2, #4
 8024502:	eba2 0e09 	sub.w	lr, r2, r9
 8024506:	b280      	uxth	r0, r0
 8024508:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802450c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802450e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024510:	fa1f fe8e 	uxth.w	lr, lr
 8024514:	1a09      	subs	r1, r1, r0
 8024516:	b289      	uxth	r1, r1
 8024518:	fb0e f202 	mul.w	r2, lr, r2
 802451c:	fb01 220c 	mla	r2, r1, ip, r2
 8024520:	fb00 2205 	mla	r2, r0, r5, r2
 8024524:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024526:	fb09 2205 	mla	r2, r9, r5, r2
 802452a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802452e:	2a00      	cmp	r2, #0
 8024530:	f000 80c9 	beq.w	80246c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024534:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024538:	d019      	beq.n	802456e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802453a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802453e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024542:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024546:	fb0c fc03 	mul.w	ip, ip, r3
 802454a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802454e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024552:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024556:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802455a:	4453      	add	r3, sl
 802455c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024560:	0a1b      	lsrs	r3, r3, #8
 8024562:	0a3f      	lsrs	r7, r7, #8
 8024564:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024568:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802456c:	433b      	orrs	r3, r7
 802456e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024570:	2dff      	cmp	r5, #255	; 0xff
 8024572:	d020      	beq.n	80245b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024574:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024576:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802457a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802457c:	436f      	muls	r7, r5
 802457e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024580:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024584:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024586:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802458a:	fb05 fa0a 	mul.w	sl, r5, sl
 802458e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024592:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024596:	44bc      	add	ip, r7
 8024598:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802459c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245b0:	ea4c 050a 	orr.w	r5, ip, sl
 80245b4:	950d      	str	r5, [sp, #52]	; 0x34
 80245b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245b8:	2dff      	cmp	r5, #255	; 0xff
 80245ba:	d020      	beq.n	80245fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80245bc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80245be:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80245c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245c4:	436f      	muls	r7, r5
 80245c6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80245c8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80245cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245ce:	fb05 fa0c 	mul.w	sl, r5, ip
 80245d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80245d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80245de:	44bc      	add	ip, r7
 80245e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80245e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245f8:	ea4c 050a 	orr.w	r5, ip, sl
 80245fc:	9509      	str	r5, [sp, #36]	; 0x24
 80245fe:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024600:	2dff      	cmp	r5, #255	; 0xff
 8024602:	d020      	beq.n	8024646 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024604:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024606:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802460a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802460c:	436f      	muls	r7, r5
 802460e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024610:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024614:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024616:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802461a:	fb05 fa0a 	mul.w	sl, r5, sl
 802461e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024622:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024626:	44bc      	add	ip, r7
 8024628:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802462c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024630:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024634:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024638:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802463c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024640:	ea4c 050a 	orr.w	r5, ip, sl
 8024644:	950e      	str	r5, [sp, #56]	; 0x38
 8024646:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024648:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802464c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802464e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024652:	fb0e f707 	mul.w	r7, lr, r7
 8024656:	fb01 770c 	mla	r7, r1, ip, r7
 802465a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802465e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024660:	fb00 770c 	mla	r7, r0, ip, r7
 8024664:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024668:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802466a:	fb09 770c 	mla	r7, r9, ip, r7
 802466e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024672:	fb0e fe0c 	mul.w	lr, lr, ip
 8024676:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802467a:	fb01 e303 	mla	r3, r1, r3, lr
 802467e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024680:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024684:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024686:	fb00 330a 	mla	r3, r0, sl, r3
 802468a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802468e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024692:	0a3f      	lsrs	r7, r7, #8
 8024694:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024698:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802469c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80246a0:	ea47 070c 	orr.w	r7, r7, ip
 80246a4:	2aff      	cmp	r2, #255	; 0xff
 80246a6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80246aa:	d11e      	bne.n	80246ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80246ac:	097a      	lsrs	r2, r7, #5
 80246ae:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80246b2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80246b6:	f023 0307 	bic.w	r3, r3, #7
 80246ba:	4313      	orrs	r3, r2
 80246bc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80246c0:	431f      	orrs	r7, r3
 80246c2:	f8a8 7000 	strh.w	r7, [r8]
 80246c6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80246c8:	441c      	add	r4, r3
 80246ca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80246cc:	f108 0802 	add.w	r8, r8, #2
 80246d0:	441e      	add	r6, r3
 80246d2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80246d6:	e644      	b.n	8024362 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80246d8:	2800      	cmp	r0, #0
 80246da:	f43f af0b 	beq.w	80244f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80246de:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80246e2:	9109      	str	r1, [sp, #36]	; 0x24
 80246e4:	0e09      	lsrs	r1, r1, #24
 80246e6:	9111      	str	r1, [sp, #68]	; 0x44
 80246e8:	e704      	b.n	80244f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80246ea:	f8b8 1000 	ldrh.w	r1, [r8]
 80246ee:	43d2      	mvns	r2, r2
 80246f0:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80246f4:	fa5f fe82 	uxtb.w	lr, r2
 80246f8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80246fc:	fb0c fc0e 	mul.w	ip, ip, lr
 8024700:	10c8      	asrs	r0, r1, #3
 8024702:	00ca      	lsls	r2, r1, #3
 8024704:	f10c 0101 	add.w	r1, ip, #1
 8024708:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802470c:	0c39      	lsrs	r1, r7, #16
 802470e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024712:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024716:	4911      	ldr	r1, [pc, #68]	; (802475c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024718:	fb00 f00e 	mul.w	r0, r0, lr
 802471c:	fa5f fc8c 	uxtb.w	ip, ip
 8024720:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024724:	b2d2      	uxtb	r2, r2
 8024726:	1c41      	adds	r1, r0, #1
 8024728:	fb02 f20e 	mul.w	r2, r2, lr
 802472c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024730:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024734:	1c51      	adds	r1, r2, #1
 8024736:	00c0      	lsls	r0, r0, #3
 8024738:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802473c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024740:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024744:	ea4c 0c00 	orr.w	ip, ip, r0
 8024748:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802474c:	ea47 0c0c 	orr.w	ip, r7, ip
 8024750:	f8a8 c000 	strh.w	ip, [r8]
 8024754:	e7b7      	b.n	80246c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024756:	b01b      	add	sp, #108	; 0x6c
 8024758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802475c:	fffff800 	.word	0xfffff800

08024760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024760:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024764:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024768:	2d00      	cmp	r5, #0
 802476a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802476e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024772:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024776:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802477a:	fb05 0e03 	mla	lr, r5, r3, r0
 802477e:	f2c0 808c 	blt.w	802489a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024782:	45a9      	cmp	r9, r5
 8024784:	f340 8089 	ble.w	802489a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024788:	2800      	cmp	r0, #0
 802478a:	f2c0 8084 	blt.w	8024896 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802478e:	4580      	cmp	r8, r0
 8024790:	f340 8081 	ble.w	8024896 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024794:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024798:	f01e 0f01 	tst.w	lr, #1
 802479c:	5d16      	ldrb	r6, [r2, r4]
 802479e:	bf0c      	ite	eq
 80247a0:	f006 060f 	andeq.w	r6, r6, #15
 80247a4:	1136      	asrne	r6, r6, #4
 80247a6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80247aa:	b2f6      	uxtb	r6, r6
 80247ac:	1c44      	adds	r4, r0, #1
 80247ae:	d477      	bmi.n	80248a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80247b0:	45a0      	cmp	r8, r4
 80247b2:	dd75      	ble.n	80248a0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80247b4:	2f00      	cmp	r7, #0
 80247b6:	d075      	beq.n	80248a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80247b8:	f10e 0a01 	add.w	sl, lr, #1
 80247bc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80247c0:	f01a 0f01 	tst.w	sl, #1
 80247c4:	5d14      	ldrb	r4, [r2, r4]
 80247c6:	bf0c      	ite	eq
 80247c8:	f004 040f 	andeq.w	r4, r4, #15
 80247cc:	1124      	asrne	r4, r4, #4
 80247ce:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80247d2:	b2e4      	uxtb	r4, r4
 80247d4:	3501      	adds	r5, #1
 80247d6:	d469      	bmi.n	80248ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80247d8:	45a9      	cmp	r9, r5
 80247da:	dd67      	ble.n	80248ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80247dc:	f1bc 0f00 	cmp.w	ip, #0
 80247e0:	d067      	beq.n	80248b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80247e2:	2800      	cmp	r0, #0
 80247e4:	db60      	blt.n	80248a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80247e6:	4580      	cmp	r8, r0
 80247e8:	dd5e      	ble.n	80248a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80247ea:	eb03 090e 	add.w	r9, r3, lr
 80247ee:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80247f2:	f019 0f01 	tst.w	r9, #1
 80247f6:	5d55      	ldrb	r5, [r2, r5]
 80247f8:	bf0c      	ite	eq
 80247fa:	f005 050f 	andeq.w	r5, r5, #15
 80247fe:	112d      	asrne	r5, r5, #4
 8024800:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024804:	b2ed      	uxtb	r5, r5
 8024806:	3001      	adds	r0, #1
 8024808:	d456      	bmi.n	80248b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802480a:	4580      	cmp	r8, r0
 802480c:	dd54      	ble.n	80248b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802480e:	2f00      	cmp	r7, #0
 8024810:	d054      	beq.n	80248bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024812:	3301      	adds	r3, #1
 8024814:	449e      	add	lr, r3
 8024816:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802481a:	f01e 0f01 	tst.w	lr, #1
 802481e:	5cd0      	ldrb	r0, [r2, r3]
 8024820:	bf0c      	ite	eq
 8024822:	f000 000f 	andeq.w	r0, r0, #15
 8024826:	1100      	asrne	r0, r0, #4
 8024828:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802482c:	b2c3      	uxtb	r3, r0
 802482e:	b2ba      	uxth	r2, r7
 8024830:	fa1f fc8c 	uxth.w	ip, ip
 8024834:	fb02 f00c 	mul.w	r0, r2, ip
 8024838:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802483c:	0112      	lsls	r2, r2, #4
 802483e:	fa1f fc8c 	uxth.w	ip, ip
 8024842:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024846:	1a12      	subs	r2, r2, r0
 8024848:	eba7 070c 	sub.w	r7, r7, ip
 802484c:	b292      	uxth	r2, r2
 802484e:	b2bf      	uxth	r7, r7
 8024850:	4362      	muls	r2, r4
 8024852:	fb06 2207 	mla	r2, r6, r7, r2
 8024856:	fb0c 2505 	mla	r5, ip, r5, r2
 802485a:	fb00 5303 	mla	r3, r0, r3, r5
 802485e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024862:	b1b3      	cbz	r3, 8024892 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024864:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024868:	435a      	muls	r2, r3
 802486a:	1c53      	adds	r3, r2, #1
 802486c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024870:	4a2d      	ldr	r2, [pc, #180]	; (8024928 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024872:	121b      	asrs	r3, r3, #8
 8024874:	6812      	ldr	r2, [r2, #0]
 8024876:	2bff      	cmp	r3, #255	; 0xff
 8024878:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802487c:	d120      	bne.n	80248c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802487e:	4b2b      	ldr	r3, [pc, #172]	; (802492c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024880:	0950      	lsrs	r0, r2, #5
 8024882:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024886:	4033      	ands	r3, r6
 8024888:	4318      	orrs	r0, r3
 802488a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802488e:	4302      	orrs	r2, r0
 8024890:	800a      	strh	r2, [r1, #0]
 8024892:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024896:	2600      	movs	r6, #0
 8024898:	e788      	b.n	80247ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802489a:	2400      	movs	r4, #0
 802489c:	4626      	mov	r6, r4
 802489e:	e799      	b.n	80247d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80248a0:	2400      	movs	r4, #0
 80248a2:	e797      	b.n	80247d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80248a4:	463c      	mov	r4, r7
 80248a6:	e795      	b.n	80247d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80248a8:	2500      	movs	r5, #0
 80248aa:	e7ac      	b.n	8024806 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80248ac:	2300      	movs	r3, #0
 80248ae:	461d      	mov	r5, r3
 80248b0:	e7bd      	b.n	802482e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248b2:	4663      	mov	r3, ip
 80248b4:	4665      	mov	r5, ip
 80248b6:	e7ba      	b.n	802482e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248b8:	2300      	movs	r3, #0
 80248ba:	e7b8      	b.n	802482e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248bc:	463b      	mov	r3, r7
 80248be:	e7b6      	b.n	802482e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248c0:	880d      	ldrh	r5, [r1, #0]
 80248c2:	b29f      	uxth	r7, r3
 80248c4:	122c      	asrs	r4, r5, #8
 80248c6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80248ca:	43db      	mvns	r3, r3
 80248cc:	b2db      	uxtb	r3, r3
 80248ce:	fb10 f007 	smulbb	r0, r0, r7
 80248d2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80248d6:	fb04 0403 	mla	r4, r4, r3, r0
 80248da:	b2f6      	uxtb	r6, r6
 80248dc:	10e8      	asrs	r0, r5, #3
 80248de:	b2d2      	uxtb	r2, r2
 80248e0:	00ed      	lsls	r5, r5, #3
 80248e2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80248e6:	fb12 f207 	smulbb	r2, r2, r7
 80248ea:	fb16 f607 	smulbb	r6, r6, r7
 80248ee:	b2ed      	uxtb	r5, r5
 80248f0:	b2a4      	uxth	r4, r4
 80248f2:	fb00 6603 	mla	r6, r0, r3, r6
 80248f6:	fb05 2303 	mla	r3, r5, r3, r2
 80248fa:	b29a      	uxth	r2, r3
 80248fc:	1c63      	adds	r3, r4, #1
 80248fe:	b2b0      	uxth	r0, r6
 8024900:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024904:	1c53      	adds	r3, r2, #1
 8024906:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802490a:	1c42      	adds	r2, r0, #1
 802490c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024910:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024914:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024918:	0940      	lsrs	r0, r0, #5
 802491a:	4323      	orrs	r3, r4
 802491c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024920:	4303      	orrs	r3, r0
 8024922:	800b      	strh	r3, [r1, #0]
 8024924:	e7b5      	b.n	8024892 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024926:	bf00      	nop
 8024928:	20012e84 	.word	0x20012e84
 802492c:	00fff800 	.word	0x00fff800

08024930 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024934:	b097      	sub	sp, #92	; 0x5c
 8024936:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802493a:	9214      	str	r2, [sp, #80]	; 0x50
 802493c:	9309      	str	r3, [sp, #36]	; 0x24
 802493e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024940:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024944:	910d      	str	r1, [sp, #52]	; 0x34
 8024946:	930f      	str	r3, [sp, #60]	; 0x3c
 8024948:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802494c:	9015      	str	r0, [sp, #84]	; 0x54
 802494e:	6850      	ldr	r0, [r2, #4]
 8024950:	6812      	ldr	r2, [r2, #0]
 8024952:	fb00 1303 	mla	r3, r0, r3, r1
 8024956:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802495a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802495c:	689b      	ldr	r3, [r3, #8]
 802495e:	3301      	adds	r3, #1
 8024960:	f023 0301 	bic.w	r3, r3, #1
 8024964:	930a      	str	r3, [sp, #40]	; 0x28
 8024966:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024968:	681f      	ldr	r7, [r3, #0]
 802496a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802496c:	2b00      	cmp	r3, #0
 802496e:	dc03      	bgt.n	8024978 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024970:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024972:	2b00      	cmp	r3, #0
 8024974:	f340 8287 	ble.w	8024e86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024978:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802497a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802497e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024982:	1e48      	subs	r0, r1, #1
 8024984:	f102 3cff 	add.w	ip, r2, #4294967295
 8024988:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802498a:	2b00      	cmp	r3, #0
 802498c:	f340 80c4 	ble.w	8024b18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024990:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024994:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024998:	d406      	bmi.n	80249a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802499a:	4586      	cmp	lr, r0
 802499c:	da04      	bge.n	80249a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802499e:	2b00      	cmp	r3, #0
 80249a0:	db02      	blt.n	80249a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80249a2:	4563      	cmp	r3, ip
 80249a4:	f2c0 80b9 	blt.w	8024b1a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80249a8:	f11e 0e01 	adds.w	lr, lr, #1
 80249ac:	f100 80aa 	bmi.w	8024b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249b0:	4571      	cmp	r1, lr
 80249b2:	f2c0 80a7 	blt.w	8024b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249b6:	3301      	adds	r3, #1
 80249b8:	f100 80a4 	bmi.w	8024b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249bc:	429a      	cmp	r2, r3
 80249be:	f2c0 80a1 	blt.w	8024b04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80249c4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80249c8:	930e      	str	r3, [sp, #56]	; 0x38
 80249ca:	46c8      	mov	r8, r9
 80249cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80249ce:	2b00      	cmp	r3, #0
 80249d0:	f340 80c3 	ble.w	8024b5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80249d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80249d6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80249da:	1423      	asrs	r3, r4, #16
 80249dc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80249e0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80249e4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80249e8:	f100 814d 	bmi.w	8024c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80249ec:	f10c 3bff 	add.w	fp, ip, #4294967295
 80249f0:	455b      	cmp	r3, fp
 80249f2:	f280 8148 	bge.w	8024c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80249f6:	2800      	cmp	r0, #0
 80249f8:	f2c0 8145 	blt.w	8024c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80249fc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024a00:	4558      	cmp	r0, fp
 8024a02:	f280 8140 	bge.w	8024c86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024a06:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024a08:	fb00 3305 	mla	r3, r0, r5, r3
 8024a0c:	0858      	lsrs	r0, r3, #1
 8024a0e:	07dd      	lsls	r5, r3, #31
 8024a10:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024a14:	bf54      	ite	pl
 8024a16:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024a1a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024a1e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024a22:	fa5f fc8c 	uxtb.w	ip, ip
 8024a26:	2a00      	cmp	r2, #0
 8024a28:	f000 80db 	beq.w	8024be2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024a2c:	1c58      	adds	r0, r3, #1
 8024a2e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024a32:	07c0      	lsls	r0, r0, #31
 8024a34:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024a38:	bf54      	ite	pl
 8024a3a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024a3e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024a42:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024a46:	fa5f f08e 	uxtb.w	r0, lr
 8024a4a:	9010      	str	r0, [sp, #64]	; 0x40
 8024a4c:	b1c9      	cbz	r1, 8024a82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024a4e:	4453      	add	r3, sl
 8024a50:	0858      	lsrs	r0, r3, #1
 8024a52:	07dd      	lsls	r5, r3, #31
 8024a54:	5c38      	ldrb	r0, [r7, r0]
 8024a56:	bf54      	ite	pl
 8024a58:	f000 000f 	andpl.w	r0, r0, #15
 8024a5c:	1100      	asrmi	r0, r0, #4
 8024a5e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024a62:	3301      	adds	r3, #1
 8024a64:	b2c0      	uxtb	r0, r0
 8024a66:	900b      	str	r0, [sp, #44]	; 0x2c
 8024a68:	0858      	lsrs	r0, r3, #1
 8024a6a:	07dd      	lsls	r5, r3, #31
 8024a6c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024a70:	bf54      	ite	pl
 8024a72:	f00e 030f 	andpl.w	r3, lr, #15
 8024a76:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024a7a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024a7e:	b2db      	uxtb	r3, r3
 8024a80:	9311      	str	r3, [sp, #68]	; 0x44
 8024a82:	b292      	uxth	r2, r2
 8024a84:	b289      	uxth	r1, r1
 8024a86:	fb02 f301 	mul.w	r3, r2, r1
 8024a8a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024a8e:	0112      	lsls	r2, r2, #4
 8024a90:	b289      	uxth	r1, r1
 8024a92:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024a96:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024a98:	1ad2      	subs	r2, r2, r3
 8024a9a:	1a40      	subs	r0, r0, r1
 8024a9c:	b292      	uxth	r2, r2
 8024a9e:	436a      	muls	r2, r5
 8024aa0:	b280      	uxth	r0, r0
 8024aa2:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024aa6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024aa8:	fb01 c102 	mla	r1, r1, r2, ip
 8024aac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024aae:	fb03 1302 	mla	r3, r3, r2, r1
 8024ab2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024ab6:	b1db      	cbz	r3, 8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024ab8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024aba:	4353      	muls	r3, r2
 8024abc:	1c5a      	adds	r2, r3, #1
 8024abe:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024ac2:	4ac6      	ldr	r2, [pc, #792]	; (8024ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024ac4:	121b      	asrs	r3, r3, #8
 8024ac6:	6812      	ldr	r2, [r2, #0]
 8024ac8:	2bff      	cmp	r3, #255	; 0xff
 8024aca:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024ace:	f040 8099 	bne.w	8024c04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024ad2:	0953      	lsrs	r3, r2, #5
 8024ad4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024ad8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024adc:	f02c 0c07 	bic.w	ip, ip, #7
 8024ae0:	ea43 0c0c 	orr.w	ip, r3, ip
 8024ae4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024ae8:	ea4c 0202 	orr.w	r2, ip, r2
 8024aec:	f8a8 2000 	strh.w	r2, [r8]
 8024af0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024af2:	441c      	add	r4, r3
 8024af4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024af6:	441e      	add	r6, r3
 8024af8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024afa:	3b01      	subs	r3, #1
 8024afc:	f108 0802 	add.w	r8, r8, #2
 8024b00:	930e      	str	r3, [sp, #56]	; 0x38
 8024b02:	e763      	b.n	80249cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024b04:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024b06:	441c      	add	r4, r3
 8024b08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024b0a:	441e      	add	r6, r3
 8024b0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b0e:	3b01      	subs	r3, #1
 8024b10:	9309      	str	r3, [sp, #36]	; 0x24
 8024b12:	f109 0902 	add.w	r9, r9, #2
 8024b16:	e737      	b.n	8024988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024b18:	d024      	beq.n	8024b64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8024b1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b1c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8024b1e:	3b01      	subs	r3, #1
 8024b20:	fb00 4003 	mla	r0, r0, r3, r4
 8024b24:	1400      	asrs	r0, r0, #16
 8024b26:	f53f af4c 	bmi.w	80249c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b2a:	3901      	subs	r1, #1
 8024b2c:	4288      	cmp	r0, r1
 8024b2e:	f6bf af48 	bge.w	80249c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b32:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024b34:	fb01 6303 	mla	r3, r1, r3, r6
 8024b38:	141b      	asrs	r3, r3, #16
 8024b3a:	f53f af42 	bmi.w	80249c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b3e:	3a01      	subs	r2, #1
 8024b40:	4293      	cmp	r3, r2
 8024b42:	f6bf af3e 	bge.w	80249c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b46:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024b4a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024b4e:	930e      	str	r3, [sp, #56]	; 0x38
 8024b50:	46c8      	mov	r8, r9
 8024b52:	f1bb 0f00 	cmp.w	fp, #0
 8024b56:	f300 80b7 	bgt.w	8024cc8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8024b5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b5c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024b60:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024b64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024b66:	2b00      	cmp	r3, #0
 8024b68:	f340 818d 	ble.w	8024e86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024b6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024b70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024b74:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024b78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024b7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024b7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024b82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024b86:	eef0 6a62 	vmov.f32	s13, s5
 8024b8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024b8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024b92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024b96:	ee16 4a90 	vmov	r4, s13
 8024b9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024b9e:	eef0 6a43 	vmov.f32	s13, s6
 8024ba2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024ba6:	ee12 2a90 	vmov	r2, s5
 8024baa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024bae:	fb92 f3f3 	sdiv	r3, r2, r3
 8024bb2:	ee13 2a10 	vmov	r2, s6
 8024bb6:	9323      	str	r3, [sp, #140]	; 0x8c
 8024bb8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024bba:	fb92 f3f3 	sdiv	r3, r2, r3
 8024bbe:	9324      	str	r3, [sp, #144]	; 0x90
 8024bc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024bc2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024bc4:	3b01      	subs	r3, #1
 8024bc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024bca:	930d      	str	r3, [sp, #52]	; 0x34
 8024bcc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024bce:	bf08      	it	eq
 8024bd0:	4613      	moveq	r3, r2
 8024bd2:	ee16 6a90 	vmov	r6, s13
 8024bd6:	9309      	str	r3, [sp, #36]	; 0x24
 8024bd8:	eeb0 3a67 	vmov.f32	s6, s15
 8024bdc:	eef0 2a47 	vmov.f32	s5, s14
 8024be0:	e6c3      	b.n	802496a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024be2:	2900      	cmp	r1, #0
 8024be4:	f43f af4d 	beq.w	8024a82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024be8:	eb0a 0003 	add.w	r0, sl, r3
 8024bec:	0843      	lsrs	r3, r0, #1
 8024bee:	07c0      	lsls	r0, r0, #31
 8024bf0:	5cfb      	ldrb	r3, [r7, r3]
 8024bf2:	bf54      	ite	pl
 8024bf4:	f003 030f 	andpl.w	r3, r3, #15
 8024bf8:	111b      	asrmi	r3, r3, #4
 8024bfa:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024bfe:	b2db      	uxtb	r3, r3
 8024c00:	930b      	str	r3, [sp, #44]	; 0x2c
 8024c02:	e73e      	b.n	8024a82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024c04:	f8b8 e000 	ldrh.w	lr, [r8]
 8024c08:	fa1f fb83 	uxth.w	fp, r3
 8024c0c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024c10:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024c14:	43db      	mvns	r3, r3
 8024c16:	b2db      	uxtb	r3, r3
 8024c18:	fb11 f10b 	smulbb	r1, r1, fp
 8024c1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024c20:	fb00 1003 	mla	r0, r0, r3, r1
 8024c24:	fa5f fc8c 	uxtb.w	ip, ip
 8024c28:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024c2c:	b2d2      	uxtb	r2, r2
 8024c2e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024c32:	b280      	uxth	r0, r0
 8024c34:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024c38:	fb1c fc0b 	smulbb	ip, ip, fp
 8024c3c:	fa5f fe8e 	uxtb.w	lr, lr
 8024c40:	fb12 fb0b 	smulbb	fp, r2, fp
 8024c44:	fb01 cc03 	mla	ip, r1, r3, ip
 8024c48:	fb0e bb03 	mla	fp, lr, r3, fp
 8024c4c:	1c43      	adds	r3, r0, #1
 8024c4e:	fa1f fc8c 	uxth.w	ip, ip
 8024c52:	fa1f fb8b 	uxth.w	fp, fp
 8024c56:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024c5a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8024c5e:	f10c 0101 	add.w	r1, ip, #1
 8024c62:	f10b 0001 	add.w	r0, fp, #1
 8024c66:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024c6a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024c6e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024c72:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024c76:	4318      	orrs	r0, r3
 8024c78:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024c7c:	ea40 000c 	orr.w	r0, r0, ip
 8024c80:	f8a8 0000 	strh.w	r0, [r8]
 8024c84:	e734      	b.n	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024c86:	f113 0b01 	adds.w	fp, r3, #1
 8024c8a:	f53f af31 	bmi.w	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024c8e:	45dc      	cmp	ip, fp
 8024c90:	f6ff af2e 	blt.w	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024c94:	f110 0b01 	adds.w	fp, r0, #1
 8024c98:	f53f af2a 	bmi.w	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024c9c:	45de      	cmp	lr, fp
 8024c9e:	f6ff af27 	blt.w	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024ca2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024ca4:	9302      	str	r3, [sp, #8]
 8024ca6:	fa0f f38e 	sxth.w	r3, lr
 8024caa:	9301      	str	r3, [sp, #4]
 8024cac:	fa0f f38c 	sxth.w	r3, ip
 8024cb0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024cb4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024cb8:	9300      	str	r3, [sp, #0]
 8024cba:	463a      	mov	r2, r7
 8024cbc:	4653      	mov	r3, sl
 8024cbe:	4641      	mov	r1, r8
 8024cc0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024cc2:	f7ff fd4d 	bl	8024760 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024cc6:	e713      	b.n	8024af0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024cc8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024cca:	1422      	asrs	r2, r4, #16
 8024ccc:	1433      	asrs	r3, r6, #16
 8024cce:	fb05 2303 	mla	r3, r5, r3, r2
 8024cd2:	085a      	lsrs	r2, r3, #1
 8024cd4:	07dd      	lsls	r5, r3, #31
 8024cd6:	5cba      	ldrb	r2, [r7, r2]
 8024cd8:	bf54      	ite	pl
 8024cda:	f002 020f 	andpl.w	r2, r2, #15
 8024cde:	1112      	asrmi	r2, r2, #4
 8024ce0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024ce4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024ce8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024cec:	b2d2      	uxtb	r2, r2
 8024cee:	2900      	cmp	r1, #0
 8024cf0:	d076      	beq.n	8024de0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024cf2:	f103 0e01 	add.w	lr, r3, #1
 8024cf6:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024cfa:	f01e 0f01 	tst.w	lr, #1
 8024cfe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024d02:	bf0c      	ite	eq
 8024d04:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024d08:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024d0c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d10:	fa5f f58c 	uxtb.w	r5, ip
 8024d14:	9512      	str	r5, [sp, #72]	; 0x48
 8024d16:	b300      	cbz	r0, 8024d5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024d18:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024d1a:	442b      	add	r3, r5
 8024d1c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024d20:	07dd      	lsls	r5, r3, #31
 8024d22:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024d26:	bf54      	ite	pl
 8024d28:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024d2c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024d30:	3301      	adds	r3, #1
 8024d32:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d36:	fa5f f58c 	uxtb.w	r5, ip
 8024d3a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024d3e:	950c      	str	r5, [sp, #48]	; 0x30
 8024d40:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024d44:	07dd      	lsls	r5, r3, #31
 8024d46:	bf54      	ite	pl
 8024d48:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024d4c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024d50:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d54:	fa5f f38c 	uxtb.w	r3, ip
 8024d58:	9313      	str	r3, [sp, #76]	; 0x4c
 8024d5a:	b289      	uxth	r1, r1
 8024d5c:	b280      	uxth	r0, r0
 8024d5e:	fb01 f300 	mul.w	r3, r1, r0
 8024d62:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024d66:	0109      	lsls	r1, r1, #4
 8024d68:	b280      	uxth	r0, r0
 8024d6a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024d6e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024d70:	1ac9      	subs	r1, r1, r3
 8024d72:	ebac 0c00 	sub.w	ip, ip, r0
 8024d76:	b289      	uxth	r1, r1
 8024d78:	4369      	muls	r1, r5
 8024d7a:	fa1f fc8c 	uxth.w	ip, ip
 8024d7e:	fb02 120c 	mla	r2, r2, ip, r1
 8024d82:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024d84:	fb00 2001 	mla	r0, r0, r1, r2
 8024d88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024d8a:	fb03 0302 	mla	r3, r3, r2, r0
 8024d8e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024d92:	b1d3      	cbz	r3, 8024dca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024d94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024d96:	4353      	muls	r3, r2
 8024d98:	1c5a      	adds	r2, r3, #1
 8024d9a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024d9e:	4a0f      	ldr	r2, [pc, #60]	; (8024ddc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024da0:	121b      	asrs	r3, r3, #8
 8024da2:	6812      	ldr	r2, [r2, #0]
 8024da4:	2bff      	cmp	r3, #255	; 0xff
 8024da6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024daa:	d12d      	bne.n	8024e08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024dac:	0953      	lsrs	r3, r2, #5
 8024dae:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024db2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024db6:	f02c 0c07 	bic.w	ip, ip, #7
 8024dba:	ea43 0c0c 	orr.w	ip, r3, ip
 8024dbe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024dc2:	ea4c 0202 	orr.w	r2, ip, r2
 8024dc6:	f8a8 2000 	strh.w	r2, [r8]
 8024dca:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024dcc:	441c      	add	r4, r3
 8024dce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024dd0:	f108 0802 	add.w	r8, r8, #2
 8024dd4:	441e      	add	r6, r3
 8024dd6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024dda:	e6ba      	b.n	8024b52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024ddc:	20012e84 	.word	0x20012e84
 8024de0:	2800      	cmp	r0, #0
 8024de2:	d0ba      	beq.n	8024d5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024de4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024de6:	442b      	add	r3, r5
 8024de8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024dec:	07db      	lsls	r3, r3, #31
 8024dee:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024df2:	bf54      	ite	pl
 8024df4:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024df8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024dfc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024e00:	fa5f f38c 	uxtb.w	r3, ip
 8024e04:	930c      	str	r3, [sp, #48]	; 0x30
 8024e06:	e7a8      	b.n	8024d5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024e08:	f8b8 e000 	ldrh.w	lr, [r8]
 8024e0c:	fa1f fa83 	uxth.w	sl, r3
 8024e10:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024e14:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024e18:	43db      	mvns	r3, r3
 8024e1a:	b2db      	uxtb	r3, r3
 8024e1c:	fb11 f10a 	smulbb	r1, r1, sl
 8024e20:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024e24:	fb00 1003 	mla	r0, r0, r3, r1
 8024e28:	b2d2      	uxtb	r2, r2
 8024e2a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024e2e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024e32:	fa5f fe8e 	uxtb.w	lr, lr
 8024e36:	fb12 f20a 	smulbb	r2, r2, sl
 8024e3a:	fb0e 2203 	mla	r2, lr, r3, r2
 8024e3e:	fa5f fc8c 	uxtb.w	ip, ip
 8024e42:	b280      	uxth	r0, r0
 8024e44:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024e48:	b292      	uxth	r2, r2
 8024e4a:	fb1c fc0a 	smulbb	ip, ip, sl
 8024e4e:	fb01 cc03 	mla	ip, r1, r3, ip
 8024e52:	1c43      	adds	r3, r0, #1
 8024e54:	1c51      	adds	r1, r2, #1
 8024e56:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024e5a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024e5e:	fa1f fc8c 	uxth.w	ip, ip
 8024e62:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024e66:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024e6a:	4308      	orrs	r0, r1
 8024e6c:	f10c 0101 	add.w	r1, ip, #1
 8024e70:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024e74:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024e78:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024e7c:	ea40 000c 	orr.w	r0, r0, ip
 8024e80:	f8a8 0000 	strh.w	r0, [r8]
 8024e84:	e7a1      	b.n	8024dca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024e86:	b017      	add	sp, #92	; 0x5c
 8024e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024e8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024e8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024e90:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024e94:	2d00      	cmp	r5, #0
 8024e96:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024e9a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024e9e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024ea2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024ea6:	fb05 0e03 	mla	lr, r5, r3, r0
 8024eaa:	f2c0 80b0 	blt.w	802500e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024eae:	45a9      	cmp	r9, r5
 8024eb0:	f340 80ad 	ble.w	802500e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024eb4:	2800      	cmp	r0, #0
 8024eb6:	f2c0 80a8 	blt.w	802500a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024eba:	4580      	cmp	r8, r0
 8024ebc:	f340 80a5 	ble.w	802500a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024ec0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024ec4:	f01e 0f01 	tst.w	lr, #1
 8024ec8:	5d16      	ldrb	r6, [r2, r4]
 8024eca:	bf0c      	ite	eq
 8024ecc:	f006 060f 	andeq.w	r6, r6, #15
 8024ed0:	1136      	asrne	r6, r6, #4
 8024ed2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024ed6:	b2f6      	uxtb	r6, r6
 8024ed8:	1c44      	adds	r4, r0, #1
 8024eda:	f100 809b 	bmi.w	8025014 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024ede:	45a0      	cmp	r8, r4
 8024ee0:	f340 8098 	ble.w	8025014 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024ee4:	2f00      	cmp	r7, #0
 8024ee6:	f000 8097 	beq.w	8025018 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024eea:	f10e 0a01 	add.w	sl, lr, #1
 8024eee:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024ef2:	f01a 0f01 	tst.w	sl, #1
 8024ef6:	5d14      	ldrb	r4, [r2, r4]
 8024ef8:	bf0c      	ite	eq
 8024efa:	f004 040f 	andeq.w	r4, r4, #15
 8024efe:	1124      	asrne	r4, r4, #4
 8024f00:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024f04:	b2e4      	uxtb	r4, r4
 8024f06:	3501      	adds	r5, #1
 8024f08:	f100 808a 	bmi.w	8025020 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024f0c:	45a9      	cmp	r9, r5
 8024f0e:	f340 8087 	ble.w	8025020 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024f12:	f1bc 0f00 	cmp.w	ip, #0
 8024f16:	f000 8086 	beq.w	8025026 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024f1a:	2800      	cmp	r0, #0
 8024f1c:	db7e      	blt.n	802501c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024f1e:	4580      	cmp	r8, r0
 8024f20:	dd7c      	ble.n	802501c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024f22:	eb03 090e 	add.w	r9, r3, lr
 8024f26:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024f2a:	f019 0f01 	tst.w	r9, #1
 8024f2e:	5d55      	ldrb	r5, [r2, r5]
 8024f30:	bf0c      	ite	eq
 8024f32:	f005 050f 	andeq.w	r5, r5, #15
 8024f36:	112d      	asrne	r5, r5, #4
 8024f38:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024f3c:	b2ed      	uxtb	r5, r5
 8024f3e:	3001      	adds	r0, #1
 8024f40:	d474      	bmi.n	802502c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024f42:	4580      	cmp	r8, r0
 8024f44:	dd72      	ble.n	802502c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024f46:	2f00      	cmp	r7, #0
 8024f48:	d072      	beq.n	8025030 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024f4a:	3301      	adds	r3, #1
 8024f4c:	449e      	add	lr, r3
 8024f4e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024f52:	f01e 0f01 	tst.w	lr, #1
 8024f56:	5cd0      	ldrb	r0, [r2, r3]
 8024f58:	bf0c      	ite	eq
 8024f5a:	f000 000f 	andeq.w	r0, r0, #15
 8024f5e:	1100      	asrne	r0, r0, #4
 8024f60:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024f64:	b2c3      	uxtb	r3, r0
 8024f66:	b2ba      	uxth	r2, r7
 8024f68:	fa1f fc8c 	uxth.w	ip, ip
 8024f6c:	fb02 f00c 	mul.w	r0, r2, ip
 8024f70:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024f74:	0112      	lsls	r2, r2, #4
 8024f76:	fa1f fc8c 	uxth.w	ip, ip
 8024f7a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024f7e:	1a12      	subs	r2, r2, r0
 8024f80:	eba7 070c 	sub.w	r7, r7, ip
 8024f84:	b292      	uxth	r2, r2
 8024f86:	b2bf      	uxth	r7, r7
 8024f88:	4362      	muls	r2, r4
 8024f8a:	fb06 2207 	mla	r2, r6, r7, r2
 8024f8e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024f92:	fb00 5303 	mla	r3, r0, r3, r5
 8024f96:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f9a:	b3a3      	cbz	r3, 8025006 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024f9c:	4a25      	ldr	r2, [pc, #148]	; (8025034 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024f9e:	880e      	ldrh	r6, [r1, #0]
 8024fa0:	6815      	ldr	r5, [r2, #0]
 8024fa2:	1234      	asrs	r4, r6, #8
 8024fa4:	b29a      	uxth	r2, r3
 8024fa6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024faa:	43db      	mvns	r3, r3
 8024fac:	b2db      	uxtb	r3, r3
 8024fae:	fb10 f002 	smulbb	r0, r0, r2
 8024fb2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024fb6:	fb04 0403 	mla	r4, r4, r3, r0
 8024fba:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024fbe:	10f0      	asrs	r0, r6, #3
 8024fc0:	b2ed      	uxtb	r5, r5
 8024fc2:	00f6      	lsls	r6, r6, #3
 8024fc4:	fb17 f702 	smulbb	r7, r7, r2
 8024fc8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024fcc:	fb15 f202 	smulbb	r2, r5, r2
 8024fd0:	b2f6      	uxtb	r6, r6
 8024fd2:	b2a4      	uxth	r4, r4
 8024fd4:	fb00 7003 	mla	r0, r0, r3, r7
 8024fd8:	fb06 2303 	mla	r3, r6, r3, r2
 8024fdc:	b29a      	uxth	r2, r3
 8024fde:	1c63      	adds	r3, r4, #1
 8024fe0:	b280      	uxth	r0, r0
 8024fe2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024fe6:	1c53      	adds	r3, r2, #1
 8024fe8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024fec:	1c42      	adds	r2, r0, #1
 8024fee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024ff2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024ff6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024ffa:	0940      	lsrs	r0, r0, #5
 8024ffc:	4323      	orrs	r3, r4
 8024ffe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025002:	4303      	orrs	r3, r0
 8025004:	800b      	strh	r3, [r1, #0]
 8025006:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802500a:	2600      	movs	r6, #0
 802500c:	e764      	b.n	8024ed8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802500e:	2400      	movs	r4, #0
 8025010:	4626      	mov	r6, r4
 8025012:	e778      	b.n	8024f06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025014:	2400      	movs	r4, #0
 8025016:	e776      	b.n	8024f06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025018:	463c      	mov	r4, r7
 802501a:	e774      	b.n	8024f06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802501c:	2500      	movs	r5, #0
 802501e:	e78e      	b.n	8024f3e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025020:	2300      	movs	r3, #0
 8025022:	461d      	mov	r5, r3
 8025024:	e79f      	b.n	8024f66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025026:	4663      	mov	r3, ip
 8025028:	4665      	mov	r5, ip
 802502a:	e79c      	b.n	8024f66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802502c:	2300      	movs	r3, #0
 802502e:	e79a      	b.n	8024f66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025030:	463b      	mov	r3, r7
 8025032:	e798      	b.n	8024f66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025034:	20012e84 	.word	0x20012e84

08025038 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025038:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802503c:	b093      	sub	sp, #76	; 0x4c
 802503e:	461d      	mov	r5, r3
 8025040:	920c      	str	r2, [sp, #48]	; 0x30
 8025042:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025044:	9107      	str	r1, [sp, #28]
 8025046:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802504a:	9011      	str	r0, [sp, #68]	; 0x44
 802504c:	6850      	ldr	r0, [r2, #4]
 802504e:	6812      	ldr	r2, [r2, #0]
 8025050:	fb00 1303 	mla	r3, r0, r3, r1
 8025054:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025058:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802505a:	689b      	ldr	r3, [r3, #8]
 802505c:	3301      	adds	r3, #1
 802505e:	f023 0301 	bic.w	r3, r3, #1
 8025062:	9306      	str	r3, [sp, #24]
 8025064:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025066:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802506a:	681f      	ldr	r7, [r3, #0]
 802506c:	9b07      	ldr	r3, [sp, #28]
 802506e:	2b00      	cmp	r3, #0
 8025070:	dc03      	bgt.n	802507a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025072:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025074:	2b00      	cmp	r3, #0
 8025076:	f340 8267 	ble.w	8025548 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802507a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802507c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025080:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025084:	1e48      	subs	r0, r1, #1
 8025086:	f102 3cff 	add.w	ip, r2, #4294967295
 802508a:	2d00      	cmp	r5, #0
 802508c:	f340 80b8 	ble.w	8025200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8025090:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025094:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025098:	d406      	bmi.n	80250a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802509a:	4586      	cmp	lr, r0
 802509c:	da04      	bge.n	80250a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802509e:	2b00      	cmp	r3, #0
 80250a0:	db02      	blt.n	80250a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80250a2:	4563      	cmp	r3, ip
 80250a4:	f2c0 80ad 	blt.w	8025202 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80250a8:	f11e 0e01 	adds.w	lr, lr, #1
 80250ac:	f100 80a0 	bmi.w	80251f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250b0:	4571      	cmp	r1, lr
 80250b2:	f2c0 809d 	blt.w	80251f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250b6:	3301      	adds	r3, #1
 80250b8:	f100 809a 	bmi.w	80251f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250bc:	429a      	cmp	r2, r3
 80250be:	f2c0 8097 	blt.w	80251f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250c2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80250c6:	9509      	str	r5, [sp, #36]	; 0x24
 80250c8:	46c8      	mov	r8, r9
 80250ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80250cc:	2b00      	cmp	r3, #0
 80250ce:	f340 80b6 	ble.w	802523e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80250d2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80250d6:	9308      	str	r3, [sp, #32]
 80250d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80250da:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80250de:	1423      	asrs	r3, r4, #16
 80250e0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80250e4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80250e8:	f100 813e 	bmi.w	8025368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80250ec:	f10c 3bff 	add.w	fp, ip, #4294967295
 80250f0:	455b      	cmp	r3, fp
 80250f2:	f280 8139 	bge.w	8025368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80250f6:	2800      	cmp	r0, #0
 80250f8:	f2c0 8136 	blt.w	8025368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80250fc:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025100:	4558      	cmp	r0, fp
 8025102:	f280 8131 	bge.w	8025368 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025106:	9a06      	ldr	r2, [sp, #24]
 8025108:	fb00 3302 	mla	r3, r0, r2, r3
 802510c:	0858      	lsrs	r0, r3, #1
 802510e:	07da      	lsls	r2, r3, #31
 8025110:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025114:	9a08      	ldr	r2, [sp, #32]
 8025116:	bf54      	ite	pl
 8025118:	f00c 0c0f 	andpl.w	ip, ip, #15
 802511c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025120:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025124:	fa5f fc8c 	uxtb.w	ip, ip
 8025128:	2a00      	cmp	r2, #0
 802512a:	f000 80cb 	beq.w	80252c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802512e:	1c58      	adds	r0, r3, #1
 8025130:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025134:	07c0      	lsls	r0, r0, #31
 8025136:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802513a:	bf54      	ite	pl
 802513c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025140:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025144:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025148:	fa5f fe8e 	uxtb.w	lr, lr
 802514c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025150:	b1b9      	cbz	r1, 8025182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025152:	4453      	add	r3, sl
 8025154:	0858      	lsrs	r0, r3, #1
 8025156:	07da      	lsls	r2, r3, #31
 8025158:	5c38      	ldrb	r0, [r7, r0]
 802515a:	bf54      	ite	pl
 802515c:	f000 000f 	andpl.w	r0, r0, #15
 8025160:	1100      	asrmi	r0, r0, #4
 8025162:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025166:	b2c0      	uxtb	r0, r0
 8025168:	900a      	str	r0, [sp, #40]	; 0x28
 802516a:	1c58      	adds	r0, r3, #1
 802516c:	0843      	lsrs	r3, r0, #1
 802516e:	07c2      	lsls	r2, r0, #31
 8025170:	5cfb      	ldrb	r3, [r7, r3]
 8025172:	bf54      	ite	pl
 8025174:	f003 030f 	andpl.w	r3, r3, #15
 8025178:	111b      	asrmi	r3, r3, #4
 802517a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802517e:	b2db      	uxtb	r3, r3
 8025180:	930e      	str	r3, [sp, #56]	; 0x38
 8025182:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025186:	b289      	uxth	r1, r1
 8025188:	fb02 f301 	mul.w	r3, r2, r1
 802518c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025190:	0112      	lsls	r2, r2, #4
 8025192:	b289      	uxth	r1, r1
 8025194:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8025198:	1a40      	subs	r0, r0, r1
 802519a:	fa1f fe80 	uxth.w	lr, r0
 802519e:	1ad2      	subs	r2, r2, r3
 80251a0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80251a2:	b292      	uxth	r2, r2
 80251a4:	4342      	muls	r2, r0
 80251a6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80251aa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80251ac:	fb01 c102 	mla	r1, r1, r2, ip
 80251b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80251b2:	fb03 1302 	mla	r3, r3, r2, r1
 80251b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80251ba:	2bff      	cmp	r3, #255	; 0xff
 80251bc:	f040 8093 	bne.w	80252e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80251c0:	4bbe      	ldr	r3, [pc, #760]	; (80254bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80251c2:	681a      	ldr	r2, [r3, #0]
 80251c4:	4bbe      	ldr	r3, [pc, #760]	; (80254c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80251c6:	0951      	lsrs	r1, r2, #5
 80251c8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80251cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80251d0:	430b      	orrs	r3, r1
 80251d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80251d6:	4313      	orrs	r3, r2
 80251d8:	f8a8 3000 	strh.w	r3, [r8]
 80251dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80251de:	441c      	add	r4, r3
 80251e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251e2:	441e      	add	r6, r3
 80251e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80251e6:	3b01      	subs	r3, #1
 80251e8:	f108 0802 	add.w	r8, r8, #2
 80251ec:	9309      	str	r3, [sp, #36]	; 0x24
 80251ee:	e76c      	b.n	80250ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80251f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80251f2:	441c      	add	r4, r3
 80251f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251f6:	3d01      	subs	r5, #1
 80251f8:	441e      	add	r6, r3
 80251fa:	f109 0902 	add.w	r9, r9, #2
 80251fe:	e744      	b.n	802508a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025200:	d021      	beq.n	8025246 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8025202:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8025204:	1e6b      	subs	r3, r5, #1
 8025206:	fb00 4003 	mla	r0, r0, r3, r4
 802520a:	1400      	asrs	r0, r0, #16
 802520c:	f53f af59 	bmi.w	80250c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025210:	3901      	subs	r1, #1
 8025212:	4288      	cmp	r0, r1
 8025214:	f6bf af55 	bge.w	80250c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025218:	9920      	ldr	r1, [sp, #128]	; 0x80
 802521a:	fb01 6303 	mla	r3, r1, r3, r6
 802521e:	141b      	asrs	r3, r3, #16
 8025220:	f53f af4f 	bmi.w	80250c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025224:	3a01      	subs	r2, #1
 8025226:	4293      	cmp	r3, r2
 8025228:	f6bf af4b 	bge.w	80250c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802522c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025230:	9308      	str	r3, [sp, #32]
 8025232:	46a8      	mov	r8, r5
 8025234:	46ce      	mov	lr, r9
 8025236:	f1b8 0f00 	cmp.w	r8, #0
 802523a:	f300 80b5 	bgt.w	80253a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802523e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025242:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025246:	9b07      	ldr	r3, [sp, #28]
 8025248:	2b00      	cmp	r3, #0
 802524a:	f340 817d 	ble.w	8025548 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802524e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025252:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025256:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802525a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802525c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025260:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025264:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025268:	eef0 6a62 	vmov.f32	s13, s5
 802526c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025270:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025274:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025278:	ee16 4a90 	vmov	r4, s13
 802527c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025280:	eef0 6a43 	vmov.f32	s13, s6
 8025284:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025288:	ee12 2a90 	vmov	r2, s5
 802528c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025290:	fb92 f3f3 	sdiv	r3, r2, r3
 8025294:	ee13 2a10 	vmov	r2, s6
 8025298:	931f      	str	r3, [sp, #124]	; 0x7c
 802529a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802529c:	fb92 f3f3 	sdiv	r3, r2, r3
 80252a0:	9320      	str	r3, [sp, #128]	; 0x80
 80252a2:	9b07      	ldr	r3, [sp, #28]
 80252a4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80252a6:	3b01      	subs	r3, #1
 80252a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252ac:	9307      	str	r3, [sp, #28]
 80252ae:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80252b0:	ee16 6a90 	vmov	r6, s13
 80252b4:	bf14      	ite	ne
 80252b6:	461d      	movne	r5, r3
 80252b8:	4615      	moveq	r5, r2
 80252ba:	eeb0 3a67 	vmov.f32	s6, s15
 80252be:	eef0 2a47 	vmov.f32	s5, s14
 80252c2:	e6d3      	b.n	802506c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80252c4:	2900      	cmp	r1, #0
 80252c6:	f43f af5c 	beq.w	8025182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80252ca:	eb0a 0003 	add.w	r0, sl, r3
 80252ce:	0843      	lsrs	r3, r0, #1
 80252d0:	07c0      	lsls	r0, r0, #31
 80252d2:	5cfb      	ldrb	r3, [r7, r3]
 80252d4:	bf54      	ite	pl
 80252d6:	f003 030f 	andpl.w	r3, r3, #15
 80252da:	111b      	asrmi	r3, r3, #4
 80252dc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80252e0:	b2db      	uxtb	r3, r3
 80252e2:	930a      	str	r3, [sp, #40]	; 0x28
 80252e4:	e74d      	b.n	8025182 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80252e6:	2b00      	cmp	r3, #0
 80252e8:	f43f af78 	beq.w	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80252ec:	4a73      	ldr	r2, [pc, #460]	; (80254bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80252ee:	f8b8 c000 	ldrh.w	ip, [r8]
 80252f2:	6810      	ldr	r0, [r2, #0]
 80252f4:	fa1f fe83 	uxth.w	lr, r3
 80252f8:	ea4f 212c 	mov.w	r1, ip, asr #8
 80252fc:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025300:	43db      	mvns	r3, r3
 8025302:	b2db      	uxtb	r3, r3
 8025304:	fb12 f20e 	smulbb	r2, r2, lr
 8025308:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802530c:	fb01 2103 	mla	r1, r1, r3, r2
 8025310:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025314:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025318:	b2c0      	uxtb	r0, r0
 802531a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802531e:	fb1b fb0e 	smulbb	fp, fp, lr
 8025322:	b289      	uxth	r1, r1
 8025324:	fb10 fe0e 	smulbb	lr, r0, lr
 8025328:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802532c:	fa5f fc8c 	uxtb.w	ip, ip
 8025330:	fb02 b203 	mla	r2, r2, r3, fp
 8025334:	1c48      	adds	r0, r1, #1
 8025336:	fb0c e303 	mla	r3, ip, r3, lr
 802533a:	b292      	uxth	r2, r2
 802533c:	b29b      	uxth	r3, r3
 802533e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8025342:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8025346:	f102 0b01 	add.w	fp, r2, #1
 802534a:	1c59      	adds	r1, r3, #1
 802534c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025350:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025354:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025358:	0952      	lsrs	r2, r2, #5
 802535a:	4301      	orrs	r1, r0
 802535c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025360:	4311      	orrs	r1, r2
 8025362:	f8a8 1000 	strh.w	r1, [r8]
 8025366:	e739      	b.n	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025368:	f113 0b01 	adds.w	fp, r3, #1
 802536c:	f53f af36 	bmi.w	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025370:	45dc      	cmp	ip, fp
 8025372:	f6ff af33 	blt.w	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025376:	f110 0b01 	adds.w	fp, r0, #1
 802537a:	f53f af2f 	bmi.w	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802537e:	45de      	cmp	lr, fp
 8025380:	f6ff af2c 	blt.w	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025384:	9a08      	ldr	r2, [sp, #32]
 8025386:	9302      	str	r3, [sp, #8]
 8025388:	fa0f f38e 	sxth.w	r3, lr
 802538c:	9301      	str	r3, [sp, #4]
 802538e:	fa0f f38c 	sxth.w	r3, ip
 8025392:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8025396:	9105      	str	r1, [sp, #20]
 8025398:	9300      	str	r3, [sp, #0]
 802539a:	463a      	mov	r2, r7
 802539c:	4653      	mov	r3, sl
 802539e:	4641      	mov	r1, r8
 80253a0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80253a2:	f7ff fd73 	bl	8024e8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80253a6:	e719      	b.n	80251dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80253a8:	9906      	ldr	r1, [sp, #24]
 80253aa:	1422      	asrs	r2, r4, #16
 80253ac:	1433      	asrs	r3, r6, #16
 80253ae:	fb01 2303 	mla	r3, r1, r3, r2
 80253b2:	085a      	lsrs	r2, r3, #1
 80253b4:	07d9      	lsls	r1, r3, #31
 80253b6:	5cba      	ldrb	r2, [r7, r2]
 80253b8:	bf54      	ite	pl
 80253ba:	f002 020f 	andpl.w	r2, r2, #15
 80253be:	1112      	asrmi	r2, r2, #4
 80253c0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80253c4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80253c8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80253cc:	b2d2      	uxtb	r2, r2
 80253ce:	2800      	cmp	r0, #0
 80253d0:	d062      	beq.n	8025498 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80253d2:	f103 0a01 	add.w	sl, r3, #1
 80253d6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80253da:	f01a 0f01 	tst.w	sl, #1
 80253de:	5c79      	ldrb	r1, [r7, r1]
 80253e0:	bf0c      	ite	eq
 80253e2:	f001 010f 	andeq.w	r1, r1, #15
 80253e6:	1109      	asrne	r1, r1, #4
 80253e8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80253ec:	b2c9      	uxtb	r1, r1
 80253ee:	910f      	str	r1, [sp, #60]	; 0x3c
 80253f0:	f1bc 0f00 	cmp.w	ip, #0
 80253f4:	d019      	beq.n	802542a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80253f6:	9908      	ldr	r1, [sp, #32]
 80253f8:	440b      	add	r3, r1
 80253fa:	0859      	lsrs	r1, r3, #1
 80253fc:	f013 0f01 	tst.w	r3, #1
 8025400:	5c79      	ldrb	r1, [r7, r1]
 8025402:	bf0c      	ite	eq
 8025404:	f001 010f 	andeq.w	r1, r1, #15
 8025408:	1109      	asrne	r1, r1, #4
 802540a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802540e:	b2c9      	uxtb	r1, r1
 8025410:	3301      	adds	r3, #1
 8025412:	910b      	str	r1, [sp, #44]	; 0x2c
 8025414:	0859      	lsrs	r1, r3, #1
 8025416:	07db      	lsls	r3, r3, #31
 8025418:	5c79      	ldrb	r1, [r7, r1]
 802541a:	bf54      	ite	pl
 802541c:	f001 010f 	andpl.w	r1, r1, #15
 8025420:	1109      	asrmi	r1, r1, #4
 8025422:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025426:	b2c9      	uxtb	r1, r1
 8025428:	9110      	str	r1, [sp, #64]	; 0x40
 802542a:	b280      	uxth	r0, r0
 802542c:	fa1f fc8c 	uxth.w	ip, ip
 8025430:	fb00 f30c 	mul.w	r3, r0, ip
 8025434:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025438:	0100      	lsls	r0, r0, #4
 802543a:	fa1f fc8c 	uxth.w	ip, ip
 802543e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8025442:	eba1 010c 	sub.w	r1, r1, ip
 8025446:	fa1f fa81 	uxth.w	sl, r1
 802544a:	1ac0      	subs	r0, r0, r3
 802544c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802544e:	b280      	uxth	r0, r0
 8025450:	4348      	muls	r0, r1
 8025452:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8025454:	fb02 020a 	mla	r2, r2, sl, r0
 8025458:	fb0c 2c01 	mla	ip, ip, r1, r2
 802545c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802545e:	fb03 c302 	mla	r3, r3, r2, ip
 8025462:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025466:	2bff      	cmp	r3, #255	; 0xff
 8025468:	d12c      	bne.n	80254c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802546a:	4b14      	ldr	r3, [pc, #80]	; (80254bc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802546c:	681a      	ldr	r2, [r3, #0]
 802546e:	4b14      	ldr	r3, [pc, #80]	; (80254c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025470:	0951      	lsrs	r1, r2, #5
 8025472:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025476:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802547a:	430b      	orrs	r3, r1
 802547c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025480:	4313      	orrs	r3, r2
 8025482:	f8ae 3000 	strh.w	r3, [lr]
 8025486:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025488:	441c      	add	r4, r3
 802548a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802548c:	f10e 0e02 	add.w	lr, lr, #2
 8025490:	441e      	add	r6, r3
 8025492:	f108 38ff 	add.w	r8, r8, #4294967295
 8025496:	e6ce      	b.n	8025236 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8025498:	f1bc 0f00 	cmp.w	ip, #0
 802549c:	d0c5      	beq.n	802542a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802549e:	9908      	ldr	r1, [sp, #32]
 80254a0:	440b      	add	r3, r1
 80254a2:	0859      	lsrs	r1, r3, #1
 80254a4:	07db      	lsls	r3, r3, #31
 80254a6:	5c79      	ldrb	r1, [r7, r1]
 80254a8:	bf54      	ite	pl
 80254aa:	f001 010f 	andpl.w	r1, r1, #15
 80254ae:	1109      	asrmi	r1, r1, #4
 80254b0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80254b4:	b2c9      	uxtb	r1, r1
 80254b6:	910b      	str	r1, [sp, #44]	; 0x2c
 80254b8:	e7b7      	b.n	802542a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80254ba:	bf00      	nop
 80254bc:	20012e84 	.word	0x20012e84
 80254c0:	fffff800 	.word	0xfffff800
 80254c4:	2b00      	cmp	r3, #0
 80254c6:	d0de      	beq.n	8025486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80254c8:	4a21      	ldr	r2, [pc, #132]	; (8025550 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80254ca:	f8be c000 	ldrh.w	ip, [lr]
 80254ce:	6810      	ldr	r0, [r2, #0]
 80254d0:	fa1f fa83 	uxth.w	sl, r3
 80254d4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80254d8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80254dc:	43db      	mvns	r3, r3
 80254de:	b2db      	uxtb	r3, r3
 80254e0:	fb12 f20a 	smulbb	r2, r2, sl
 80254e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80254e8:	fb01 2103 	mla	r1, r1, r3, r2
 80254ec:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80254f0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80254f4:	b2c0      	uxtb	r0, r0
 80254f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80254fa:	fa5f fc8c 	uxtb.w	ip, ip
 80254fe:	fb10 f00a 	smulbb	r0, r0, sl
 8025502:	fb0c 0003 	mla	r0, ip, r3, r0
 8025506:	b289      	uxth	r1, r1
 8025508:	fb1b fb0a 	smulbb	fp, fp, sl
 802550c:	b280      	uxth	r0, r0
 802550e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025512:	fb02 b203 	mla	r2, r2, r3, fp
 8025516:	1c4b      	adds	r3, r1, #1
 8025518:	f100 0b01 	add.w	fp, r0, #1
 802551c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025520:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025524:	b292      	uxth	r2, r2
 8025526:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802552a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802552e:	ea4b 0101 	orr.w	r1, fp, r1
 8025532:	f102 0b01 	add.w	fp, r2, #1
 8025536:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802553a:	0952      	lsrs	r2, r2, #5
 802553c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025540:	4311      	orrs	r1, r2
 8025542:	f8ae 1000 	strh.w	r1, [lr]
 8025546:	e79e      	b.n	8025486 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025548:	b013      	add	sp, #76	; 0x4c
 802554a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802554e:	bf00      	nop
 8025550:	20012e84 	.word	0x20012e84

08025554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8025554:	b570      	push	{r4, r5, r6, lr}
 8025556:	1208      	asrs	r0, r1, #8
 8025558:	b29e      	uxth	r6, r3
 802555a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802555e:	1213      	asrs	r3, r2, #8
 8025560:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025564:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025568:	fb13 f305 	smulbb	r3, r3, r5
 802556c:	fb10 f006 	smulbb	r0, r0, r6
 8025570:	4418      	add	r0, r3
 8025572:	10cc      	asrs	r4, r1, #3
 8025574:	10d3      	asrs	r3, r2, #3
 8025576:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802557a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802557e:	fb13 f305 	smulbb	r3, r3, r5
 8025582:	fb14 f406 	smulbb	r4, r4, r6
 8025586:	00c9      	lsls	r1, r1, #3
 8025588:	00d2      	lsls	r2, r2, #3
 802558a:	441c      	add	r4, r3
 802558c:	b2d2      	uxtb	r2, r2
 802558e:	b2cb      	uxtb	r3, r1
 8025590:	fb12 f205 	smulbb	r2, r2, r5
 8025594:	b280      	uxth	r0, r0
 8025596:	fb13 f306 	smulbb	r3, r3, r6
 802559a:	4413      	add	r3, r2
 802559c:	1c42      	adds	r2, r0, #1
 802559e:	b29b      	uxth	r3, r3
 80255a0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80255a4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80255a8:	1c58      	adds	r0, r3, #1
 80255aa:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80255ae:	b2a4      	uxth	r4, r4
 80255b0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80255b4:	4310      	orrs	r0, r2
 80255b6:	1c62      	adds	r2, r4, #1
 80255b8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80255bc:	0964      	lsrs	r4, r4, #5
 80255be:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80255c2:	4320      	orrs	r0, r4
 80255c4:	bd70      	pop	{r4, r5, r6, pc}
	...

080255c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80255c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255cc:	b08f      	sub	sp, #60	; 0x3c
 80255ce:	461c      	mov	r4, r3
 80255d0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80255d4:	9004      	str	r0, [sp, #16]
 80255d6:	460d      	mov	r5, r1
 80255d8:	4616      	mov	r6, r2
 80255da:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80255dc:	2f00      	cmp	r7, #0
 80255de:	f000 80f6 	beq.w	80257ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80255e2:	6820      	ldr	r0, [r4, #0]
 80255e4:	6861      	ldr	r1, [r4, #4]
 80255e6:	aa0a      	add	r2, sp, #40	; 0x28
 80255e8:	c203      	stmia	r2!, {r0, r1}
 80255ea:	6818      	ldr	r0, [r3, #0]
 80255ec:	6859      	ldr	r1, [r3, #4]
 80255ee:	aa0c      	add	r2, sp, #48	; 0x30
 80255f0:	c203      	stmia	r2!, {r0, r1}
 80255f2:	a80a      	add	r0, sp, #40	; 0x28
 80255f4:	f7ef fc90 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80255f8:	4621      	mov	r1, r4
 80255fa:	a80c      	add	r0, sp, #48	; 0x30
 80255fc:	f7ef fcd0 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025600:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025604:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025608:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802560c:	f002 0301 	and.w	r3, r2, #1
 8025610:	9306      	str	r3, [sp, #24]
 8025612:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025616:	f003 0101 	and.w	r1, r3, #1
 802561a:	9105      	str	r1, [sp, #20]
 802561c:	9805      	ldr	r0, [sp, #20]
 802561e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025622:	4403      	add	r3, r0
 8025624:	fb01 2303 	mla	r3, r1, r3, r2
 8025628:	f04f 0802 	mov.w	r8, #2
 802562c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025630:	441d      	add	r5, r3
 8025632:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025636:	441a      	add	r2, r3
 8025638:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802563c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025640:	4419      	add	r1, r3
 8025642:	4b64      	ldr	r3, [pc, #400]	; (80257d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025644:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025648:	6818      	ldr	r0, [r3, #0]
 802564a:	6803      	ldr	r3, [r0, #0]
 802564c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802564e:	4798      	blx	r3
 8025650:	4a61      	ldr	r2, [pc, #388]	; (80257d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025652:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025656:	8813      	ldrh	r3, [r2, #0]
 8025658:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 802565c:	2fff      	cmp	r7, #255	; 0xff
 802565e:	fb03 a404 	mla	r4, r3, r4, sl
 8025662:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025666:	f106 0604 	add.w	r6, r6, #4
 802566a:	4611      	mov	r1, r2
 802566c:	fb03 fb0b 	mul.w	fp, r3, fp
 8025670:	d06b      	beq.n	802574a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025672:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8025676:	9303      	str	r3, [sp, #12]
 8025678:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802567c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025680:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025684:	9b07      	ldr	r3, [sp, #28]
 8025686:	42a3      	cmp	r3, r4
 8025688:	f240 809c 	bls.w	80257c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802568c:	9b06      	ldr	r3, [sp, #24]
 802568e:	2b00      	cmp	r3, #0
 8025690:	d039      	beq.n	8025706 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8025692:	782b      	ldrb	r3, [r5, #0]
 8025694:	8822      	ldrh	r2, [r4, #0]
 8025696:	9804      	ldr	r0, [sp, #16]
 8025698:	f003 030f 	and.w	r3, r3, #15
 802569c:	f105 0801 	add.w	r8, r5, #1
 80256a0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80256a4:	9b03      	ldr	r3, [sp, #12]
 80256a6:	9300      	str	r3, [sp, #0]
 80256a8:	463b      	mov	r3, r7
 80256aa:	f7ff ff53 	bl	8025554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80256ae:	f824 0b02 	strh.w	r0, [r4], #2
 80256b2:	f109 3bff 	add.w	fp, r9, #4294967295
 80256b6:	f1bb 0f01 	cmp.w	fp, #1
 80256ba:	46a2      	mov	sl, r4
 80256bc:	f104 0404 	add.w	r4, r4, #4
 80256c0:	dd24      	ble.n	802570c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80256c2:	f898 3000 	ldrb.w	r3, [r8]
 80256c6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80256ca:	9804      	ldr	r0, [sp, #16]
 80256cc:	091b      	lsrs	r3, r3, #4
 80256ce:	f1ab 0b02 	sub.w	fp, fp, #2
 80256d2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80256d6:	9b03      	ldr	r3, [sp, #12]
 80256d8:	9300      	str	r3, [sp, #0]
 80256da:	463b      	mov	r3, r7
 80256dc:	f7ff ff3a 	bl	8025554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80256e0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80256e4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80256e8:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80256ec:	9804      	ldr	r0, [sp, #16]
 80256ee:	f003 030f 	and.w	r3, r3, #15
 80256f2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80256f6:	9b03      	ldr	r3, [sp, #12]
 80256f8:	9300      	str	r3, [sp, #0]
 80256fa:	463b      	mov	r3, r7
 80256fc:	f7ff ff2a 	bl	8025554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025700:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025704:	e7d7      	b.n	80256b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025706:	46a8      	mov	r8, r5
 8025708:	46cb      	mov	fp, r9
 802570a:	e7d4      	b.n	80256b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802570c:	d10e      	bne.n	802572c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802570e:	f898 3000 	ldrb.w	r3, [r8]
 8025712:	f8ba 2000 	ldrh.w	r2, [sl]
 8025716:	9804      	ldr	r0, [sp, #16]
 8025718:	091b      	lsrs	r3, r3, #4
 802571a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802571e:	9b03      	ldr	r3, [sp, #12]
 8025720:	9300      	str	r3, [sp, #0]
 8025722:	463b      	mov	r3, r7
 8025724:	f7ff ff16 	bl	8025554 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025728:	f82a 0b02 	strh.w	r0, [sl], #2
 802572c:	9b08      	ldr	r3, [sp, #32]
 802572e:	9a05      	ldr	r2, [sp, #20]
 8025730:	881c      	ldrh	r4, [r3, #0]
 8025732:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025736:	eba4 0409 	sub.w	r4, r4, r9
 802573a:	4413      	add	r3, r2
 802573c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025740:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025742:	fb93 f3f2 	sdiv	r3, r3, r2
 8025746:	441d      	add	r5, r3
 8025748:	e79c      	b.n	8025684 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802574a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802574e:	45a3      	cmp	fp, r4
 8025750:	d938      	bls.n	80257c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025752:	9b06      	ldr	r3, [sp, #24]
 8025754:	b1f3      	cbz	r3, 8025794 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8025756:	782b      	ldrb	r3, [r5, #0]
 8025758:	f003 030f 	and.w	r3, r3, #15
 802575c:	1c6a      	adds	r2, r5, #1
 802575e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025762:	8023      	strh	r3, [r4, #0]
 8025764:	f109 30ff 	add.w	r0, r9, #4294967295
 8025768:	3402      	adds	r4, #2
 802576a:	2801      	cmp	r0, #1
 802576c:	4623      	mov	r3, r4
 802576e:	f104 0404 	add.w	r4, r4, #4
 8025772:	dd12      	ble.n	802579a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025774:	7813      	ldrb	r3, [r2, #0]
 8025776:	091b      	lsrs	r3, r3, #4
 8025778:	3802      	subs	r0, #2
 802577a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802577e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025782:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025786:	f003 030f 	and.w	r3, r3, #15
 802578a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802578e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025792:	e7ea      	b.n	802576a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025794:	462a      	mov	r2, r5
 8025796:	4648      	mov	r0, r9
 8025798:	e7e7      	b.n	802576a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802579a:	d106      	bne.n	80257aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 802579c:	7812      	ldrb	r2, [r2, #0]
 802579e:	0912      	lsrs	r2, r2, #4
 80257a0:	3302      	adds	r3, #2
 80257a2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80257a6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80257aa:	880c      	ldrh	r4, [r1, #0]
 80257ac:	9a05      	ldr	r2, [sp, #20]
 80257ae:	eba4 0409 	sub.w	r4, r4, r9
 80257b2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80257b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80257ba:	4413      	add	r3, r2
 80257bc:	fb93 f3f8 	sdiv	r3, r3, r8
 80257c0:	441d      	add	r5, r3
 80257c2:	e7c4      	b.n	802574e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80257c4:	4b03      	ldr	r3, [pc, #12]	; (80257d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80257c6:	6818      	ldr	r0, [r3, #0]
 80257c8:	6803      	ldr	r3, [r0, #0]
 80257ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80257cc:	4798      	blx	r3
 80257ce:	b00f      	add	sp, #60	; 0x3c
 80257d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80257d4:	20012e74 	.word	0x20012e74
 80257d8:	20012e6e 	.word	0x20012e6e

080257dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80257dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80257de:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80257e2:	2dff      	cmp	r5, #255	; 0xff
 80257e4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80257e8:	d10c      	bne.n	8025804 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80257ea:	2bff      	cmp	r3, #255	; 0xff
 80257ec:	d10a      	bne.n	8025804 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80257ee:	4b25      	ldr	r3, [pc, #148]	; (8025884 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80257f0:	0948      	lsrs	r0, r1, #5
 80257f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80257f6:	403b      	ands	r3, r7
 80257f8:	4318      	orrs	r0, r3
 80257fa:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80257fe:	4308      	orrs	r0, r1
 8025800:	b280      	uxth	r0, r0
 8025802:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025804:	fb15 f503 	smulbb	r5, r5, r3
 8025808:	b2ab      	uxth	r3, r5
 802580a:	1c5d      	adds	r5, r3, #1
 802580c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025810:	1214      	asrs	r4, r2, #8
 8025812:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025816:	fa1f fc85 	uxth.w	ip, r5
 802581a:	10d6      	asrs	r6, r2, #3
 802581c:	00d0      	lsls	r0, r2, #3
 802581e:	43ed      	mvns	r5, r5
 8025820:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025824:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025828:	b2eb      	uxtb	r3, r5
 802582a:	b2c0      	uxtb	r0, r0
 802582c:	fb12 f20c 	smulbb	r2, r2, ip
 8025830:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025834:	fb04 2403 	mla	r4, r4, r3, r2
 8025838:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802583c:	b2c8      	uxtb	r0, r1
 802583e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025842:	b2fd      	uxtb	r5, r7
 8025844:	fb10 f00c 	smulbb	r0, r0, ip
 8025848:	b2a4      	uxth	r4, r4
 802584a:	fb02 0003 	mla	r0, r2, r3, r0
 802584e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025852:	fb15 f50c 	smulbb	r5, r5, ip
 8025856:	fb06 5503 	mla	r5, r6, r3, r5
 802585a:	b283      	uxth	r3, r0
 802585c:	1c60      	adds	r0, r4, #1
 802585e:	b2ad      	uxth	r5, r5
 8025860:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025864:	1c58      	adds	r0, r3, #1
 8025866:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802586a:	1c6b      	adds	r3, r5, #1
 802586c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025870:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025874:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025878:	096d      	lsrs	r5, r5, #5
 802587a:	4320      	orrs	r0, r4
 802587c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025880:	4328      	orrs	r0, r5
 8025882:	e7be      	b.n	8025802 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025884:	00fff800 	.word	0x00fff800

08025888 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025888:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802588c:	461c      	mov	r4, r3
 802588e:	b08d      	sub	sp, #52	; 0x34
 8025890:	460d      	mov	r5, r1
 8025892:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025894:	6861      	ldr	r1, [r4, #4]
 8025896:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802589a:	4680      	mov	r8, r0
 802589c:	6820      	ldr	r0, [r4, #0]
 802589e:	4616      	mov	r6, r2
 80258a0:	aa08      	add	r2, sp, #32
 80258a2:	c203      	stmia	r2!, {r0, r1}
 80258a4:	6818      	ldr	r0, [r3, #0]
 80258a6:	6859      	ldr	r1, [r3, #4]
 80258a8:	aa0a      	add	r2, sp, #40	; 0x28
 80258aa:	c203      	stmia	r2!, {r0, r1}
 80258ac:	a808      	add	r0, sp, #32
 80258ae:	f7ef fb33 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80258b2:	4621      	mov	r1, r4
 80258b4:	a80a      	add	r0, sp, #40	; 0x28
 80258b6:	f7ef fb73 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80258ba:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80258be:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80258c2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80258c6:	f002 0301 	and.w	r3, r2, #1
 80258ca:	9303      	str	r3, [sp, #12]
 80258cc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80258d0:	f003 0101 	and.w	r1, r3, #1
 80258d4:	9102      	str	r1, [sp, #8]
 80258d6:	9802      	ldr	r0, [sp, #8]
 80258d8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80258dc:	4403      	add	r3, r0
 80258de:	fb01 2303 	mla	r3, r1, r3, r2
 80258e2:	f04f 0a02 	mov.w	sl, #2
 80258e6:	fb93 f3fa 	sdiv	r3, r3, sl
 80258ea:	441d      	add	r5, r3
 80258ec:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80258f0:	441a      	add	r2, r3
 80258f2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80258f6:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80258fa:	4a3f      	ldr	r2, [pc, #252]	; (80259f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80258fc:	9205      	str	r2, [sp, #20]
 80258fe:	4419      	add	r1, r3
 8025900:	6810      	ldr	r0, [r2, #0]
 8025902:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025906:	6803      	ldr	r3, [r0, #0]
 8025908:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802590a:	4798      	blx	r3
 802590c:	4b3b      	ldr	r3, [pc, #236]	; (80259fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802590e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025912:	8819      	ldrh	r1, [r3, #0]
 8025914:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025918:	fb01 c404 	mla	r4, r1, r4, ip
 802591c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025920:	434f      	muls	r7, r1
 8025922:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025926:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802592a:	3604      	adds	r6, #4
 802592c:	9204      	str	r2, [sp, #16]
 802592e:	9b04      	ldr	r3, [sp, #16]
 8025930:	429c      	cmp	r4, r3
 8025932:	d258      	bcs.n	80259e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025934:	9b03      	ldr	r3, [sp, #12]
 8025936:	2b00      	cmp	r3, #0
 8025938:	d034      	beq.n	80259a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802593a:	782b      	ldrb	r3, [r5, #0]
 802593c:	f003 030f 	and.w	r3, r3, #15
 8025940:	1c6f      	adds	r7, r5, #1
 8025942:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025946:	0e0b      	lsrs	r3, r1, #24
 8025948:	d006      	beq.n	8025958 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802594a:	8822      	ldrh	r2, [r4, #0]
 802594c:	9300      	str	r3, [sp, #0]
 802594e:	4640      	mov	r0, r8
 8025950:	464b      	mov	r3, r9
 8025952:	f7ff ff43 	bl	80257dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025956:	8020      	strh	r0, [r4, #0]
 8025958:	3402      	adds	r4, #2
 802595a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802595e:	f1ba 0f01 	cmp.w	sl, #1
 8025962:	dd22      	ble.n	80259aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025964:	783b      	ldrb	r3, [r7, #0]
 8025966:	091b      	lsrs	r3, r3, #4
 8025968:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802596c:	0e0b      	lsrs	r3, r1, #24
 802596e:	d006      	beq.n	802597e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025970:	8822      	ldrh	r2, [r4, #0]
 8025972:	9300      	str	r3, [sp, #0]
 8025974:	4640      	mov	r0, r8
 8025976:	464b      	mov	r3, r9
 8025978:	f7ff ff30 	bl	80257dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802597c:	8020      	strh	r0, [r4, #0]
 802597e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025982:	f003 030f 	and.w	r3, r3, #15
 8025986:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802598a:	0e0b      	lsrs	r3, r1, #24
 802598c:	d006      	beq.n	802599c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802598e:	8862      	ldrh	r2, [r4, #2]
 8025990:	9300      	str	r3, [sp, #0]
 8025992:	4640      	mov	r0, r8
 8025994:	464b      	mov	r3, r9
 8025996:	f7ff ff21 	bl	80257dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802599a:	8060      	strh	r0, [r4, #2]
 802599c:	3404      	adds	r4, #4
 802599e:	f1aa 0a02 	sub.w	sl, sl, #2
 80259a2:	e7dc      	b.n	802595e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80259a4:	462f      	mov	r7, r5
 80259a6:	46da      	mov	sl, fp
 80259a8:	e7d9      	b.n	802595e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80259aa:	d10d      	bne.n	80259c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80259ac:	783b      	ldrb	r3, [r7, #0]
 80259ae:	091b      	lsrs	r3, r3, #4
 80259b0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80259b4:	0e0b      	lsrs	r3, r1, #24
 80259b6:	d006      	beq.n	80259c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80259b8:	8822      	ldrh	r2, [r4, #0]
 80259ba:	9300      	str	r3, [sp, #0]
 80259bc:	4640      	mov	r0, r8
 80259be:	464b      	mov	r3, r9
 80259c0:	f7ff ff0c 	bl	80257dc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80259c4:	8020      	strh	r0, [r4, #0]
 80259c6:	3402      	adds	r4, #2
 80259c8:	9b06      	ldr	r3, [sp, #24]
 80259ca:	9a02      	ldr	r2, [sp, #8]
 80259cc:	881b      	ldrh	r3, [r3, #0]
 80259ce:	eba3 030b 	sub.w	r3, r3, fp
 80259d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80259d6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80259da:	4413      	add	r3, r2
 80259dc:	9a07      	ldr	r2, [sp, #28]
 80259de:	fb93 f3f2 	sdiv	r3, r3, r2
 80259e2:	441d      	add	r5, r3
 80259e4:	e7a3      	b.n	802592e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80259e6:	9b05      	ldr	r3, [sp, #20]
 80259e8:	6818      	ldr	r0, [r3, #0]
 80259ea:	6803      	ldr	r3, [r0, #0]
 80259ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80259ee:	4798      	blx	r3
 80259f0:	b00d      	add	sp, #52	; 0x34
 80259f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80259f6:	bf00      	nop
 80259f8:	20012e74 	.word	0x20012e74
 80259fc:	20012e6e 	.word	0x20012e6e

08025a00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025a00:	b570      	push	{r4, r5, r6, lr}
 8025a02:	1214      	asrs	r4, r2, #8
 8025a04:	788d      	ldrb	r5, [r1, #2]
 8025a06:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025a0a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025a0e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025a12:	fb15 f503 	smulbb	r5, r5, r3
 8025a16:	fb04 5506 	mla	r5, r4, r6, r5
 8025a1a:	10d0      	asrs	r0, r2, #3
 8025a1c:	784c      	ldrb	r4, [r1, #1]
 8025a1e:	7809      	ldrb	r1, [r1, #0]
 8025a20:	00d2      	lsls	r2, r2, #3
 8025a22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025a26:	b2d2      	uxtb	r2, r2
 8025a28:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025a2c:	fb14 f403 	smulbb	r4, r4, r3
 8025a30:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025a34:	fb11 f303 	smulbb	r3, r1, r3
 8025a38:	fb00 4406 	mla	r4, r0, r6, r4
 8025a3c:	fb02 3306 	mla	r3, r2, r6, r3
 8025a40:	b2ad      	uxth	r5, r5
 8025a42:	b29b      	uxth	r3, r3
 8025a44:	b2a4      	uxth	r4, r4
 8025a46:	1c68      	adds	r0, r5, #1
 8025a48:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025a4c:	1c62      	adds	r2, r4, #1
 8025a4e:	1c58      	adds	r0, r3, #1
 8025a50:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025a54:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025a58:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025a5c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025a60:	0964      	lsrs	r4, r4, #5
 8025a62:	4328      	orrs	r0, r5
 8025a64:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025a68:	4320      	orrs	r0, r4
 8025a6a:	bd70      	pop	{r4, r5, r6, pc}

08025a6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a70:	b08f      	sub	sp, #60	; 0x3c
 8025a72:	461c      	mov	r4, r3
 8025a74:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025a78:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025a7a:	4682      	mov	sl, r0
 8025a7c:	460e      	mov	r6, r1
 8025a7e:	4615      	mov	r5, r2
 8025a80:	2f00      	cmp	r7, #0
 8025a82:	f000 8142 	beq.w	8025d0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8025a86:	6820      	ldr	r0, [r4, #0]
 8025a88:	6861      	ldr	r1, [r4, #4]
 8025a8a:	aa0a      	add	r2, sp, #40	; 0x28
 8025a8c:	c203      	stmia	r2!, {r0, r1}
 8025a8e:	6818      	ldr	r0, [r3, #0]
 8025a90:	6859      	ldr	r1, [r3, #4]
 8025a92:	aa0c      	add	r2, sp, #48	; 0x30
 8025a94:	c203      	stmia	r2!, {r0, r1}
 8025a96:	a80a      	add	r0, sp, #40	; 0x28
 8025a98:	f7ef fa3e 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025a9c:	4621      	mov	r1, r4
 8025a9e:	a80c      	add	r0, sp, #48	; 0x30
 8025aa0:	f7ef fa7e 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025aa4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025aa8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025aac:	f002 0301 	and.w	r3, r2, #1
 8025ab0:	9306      	str	r3, [sp, #24]
 8025ab2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025ab6:	f003 0101 	and.w	r1, r3, #1
 8025aba:	9105      	str	r1, [sp, #20]
 8025abc:	9805      	ldr	r0, [sp, #20]
 8025abe:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025ac2:	4403      	add	r3, r0
 8025ac4:	fb01 2303 	mla	r3, r1, r3, r2
 8025ac8:	f04f 0802 	mov.w	r8, #2
 8025acc:	fb93 f3f8 	sdiv	r3, r3, r8
 8025ad0:	441e      	add	r6, r3
 8025ad2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025ad6:	441a      	add	r2, r3
 8025ad8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025adc:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025ae0:	4419      	add	r1, r3
 8025ae2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025ae6:	9303      	str	r3, [sp, #12]
 8025ae8:	4b89      	ldr	r3, [pc, #548]	; (8025d10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025aea:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025aee:	6818      	ldr	r0, [r3, #0]
 8025af0:	6803      	ldr	r3, [r0, #0]
 8025af2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025af4:	4798      	blx	r3
 8025af6:	4a87      	ldr	r2, [pc, #540]	; (8025d14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025af8:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025afc:	8813      	ldrh	r3, [r2, #0]
 8025afe:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8025b02:	2fff      	cmp	r7, #255	; 0xff
 8025b04:	fb03 9404 	mla	r4, r3, r4, r9
 8025b08:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025b0c:	f105 0504 	add.w	r5, r5, #4
 8025b10:	4694      	mov	ip, r2
 8025b12:	fb03 f30b 	mul.w	r3, r3, fp
 8025b16:	d071      	beq.n	8025bfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025b18:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025b1c:	43f9      	mvns	r1, r7
 8025b1e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025b22:	b2c9      	uxtb	r1, r1
 8025b24:	9104      	str	r1, [sp, #16]
 8025b26:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025b2a:	9b07      	ldr	r3, [sp, #28]
 8025b2c:	42a3      	cmp	r3, r4
 8025b2e:	f240 80e7 	bls.w	8025d00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025b32:	9b06      	ldr	r3, [sp, #24]
 8025b34:	2b00      	cmp	r3, #0
 8025b36:	d03d      	beq.n	8025bb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025b38:	7831      	ldrb	r1, [r6, #0]
 8025b3a:	9b04      	ldr	r3, [sp, #16]
 8025b3c:	8822      	ldrh	r2, [r4, #0]
 8025b3e:	9300      	str	r3, [sp, #0]
 8025b40:	f001 010f 	and.w	r1, r1, #15
 8025b44:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025b48:	463b      	mov	r3, r7
 8025b4a:	4429      	add	r1, r5
 8025b4c:	4650      	mov	r0, sl
 8025b4e:	f7ff ff57 	bl	8025a00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025b52:	9b03      	ldr	r3, [sp, #12]
 8025b54:	f824 0b02 	strh.w	r0, [r4], #2
 8025b58:	f106 0801 	add.w	r8, r6, #1
 8025b5c:	f103 3bff 	add.w	fp, r3, #4294967295
 8025b60:	f1bb 0f01 	cmp.w	fp, #1
 8025b64:	46a1      	mov	r9, r4
 8025b66:	f104 0404 	add.w	r4, r4, #4
 8025b6a:	dd27      	ble.n	8025bbc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8025b6c:	f898 1000 	ldrb.w	r1, [r8]
 8025b70:	9b04      	ldr	r3, [sp, #16]
 8025b72:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025b76:	9300      	str	r3, [sp, #0]
 8025b78:	0909      	lsrs	r1, r1, #4
 8025b7a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025b7e:	463b      	mov	r3, r7
 8025b80:	4429      	add	r1, r5
 8025b82:	4650      	mov	r0, sl
 8025b84:	f7ff ff3c 	bl	8025a00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025b88:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025b8c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025b90:	9b04      	ldr	r3, [sp, #16]
 8025b92:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025b96:	9300      	str	r3, [sp, #0]
 8025b98:	f001 010f 	and.w	r1, r1, #15
 8025b9c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025ba0:	463b      	mov	r3, r7
 8025ba2:	4429      	add	r1, r5
 8025ba4:	4650      	mov	r0, sl
 8025ba6:	f7ff ff2b 	bl	8025a00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025baa:	f1ab 0b02 	sub.w	fp, fp, #2
 8025bae:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025bb2:	e7d5      	b.n	8025b60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025bb4:	46b0      	mov	r8, r6
 8025bb6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8025bba:	e7d1      	b.n	8025b60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025bbc:	d10f      	bne.n	8025bde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8025bbe:	f898 1000 	ldrb.w	r1, [r8]
 8025bc2:	9b04      	ldr	r3, [sp, #16]
 8025bc4:	f8b9 2000 	ldrh.w	r2, [r9]
 8025bc8:	9300      	str	r3, [sp, #0]
 8025bca:	0909      	lsrs	r1, r1, #4
 8025bcc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025bd0:	463b      	mov	r3, r7
 8025bd2:	4429      	add	r1, r5
 8025bd4:	4650      	mov	r0, sl
 8025bd6:	f7ff ff13 	bl	8025a00 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025bda:	f829 0b02 	strh.w	r0, [r9], #2
 8025bde:	9b08      	ldr	r3, [sp, #32]
 8025be0:	9a05      	ldr	r2, [sp, #20]
 8025be2:	881c      	ldrh	r4, [r3, #0]
 8025be4:	9b03      	ldr	r3, [sp, #12]
 8025be6:	1ae4      	subs	r4, r4, r3
 8025be8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025bec:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025bf0:	4413      	add	r3, r2
 8025bf2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025bf4:	fb93 f3f2 	sdiv	r3, r3, r2
 8025bf8:	441e      	add	r6, r3
 8025bfa:	e796      	b.n	8025b2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8025bfc:	4f46      	ldr	r7, [pc, #280]	; (8025d18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025bfe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025c02:	42a3      	cmp	r3, r4
 8025c04:	d97c      	bls.n	8025d00 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025c06:	9a06      	ldr	r2, [sp, #24]
 8025c08:	2a00      	cmp	r2, #0
 8025c0a:	d054      	beq.n	8025cb6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8025c0c:	7830      	ldrb	r0, [r6, #0]
 8025c0e:	f000 000f 	and.w	r0, r0, #15
 8025c12:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025c16:	eb05 0e00 	add.w	lr, r5, r0
 8025c1a:	5c28      	ldrb	r0, [r5, r0]
 8025c1c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025c20:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025c24:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025c28:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025c2c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025c30:	ea42 020e 	orr.w	r2, r2, lr
 8025c34:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025c38:	f824 2b02 	strh.w	r2, [r4], #2
 8025c3c:	9a03      	ldr	r2, [sp, #12]
 8025c3e:	1c71      	adds	r1, r6, #1
 8025c40:	f102 3eff 	add.w	lr, r2, #4294967295
 8025c44:	f1be 0f01 	cmp.w	lr, #1
 8025c48:	4620      	mov	r0, r4
 8025c4a:	f104 0404 	add.w	r4, r4, #4
 8025c4e:	dd36      	ble.n	8025cbe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025c50:	7808      	ldrb	r0, [r1, #0]
 8025c52:	0900      	lsrs	r0, r0, #4
 8025c54:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025c58:	eb05 0a00 	add.w	sl, r5, r0
 8025c5c:	f1ae 0e02 	sub.w	lr, lr, #2
 8025c60:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025c64:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025c68:	00d2      	lsls	r2, r2, #3
 8025c6a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025c6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025c72:	ea49 0202 	orr.w	r2, r9, r2
 8025c76:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025c7a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025c7e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025c82:	f811 0b01 	ldrb.w	r0, [r1], #1
 8025c86:	f000 000f 	and.w	r0, r0, #15
 8025c8a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025c8e:	eb05 0a00 	add.w	sl, r5, r0
 8025c92:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025c96:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025c9a:	00d2      	lsls	r2, r2, #3
 8025c9c:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025ca0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025ca4:	ea49 0202 	orr.w	r2, r9, r2
 8025ca8:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025cac:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025cb0:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025cb4:	e7c6      	b.n	8025c44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025cb6:	4631      	mov	r1, r6
 8025cb8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025cbc:	e7c2      	b.n	8025c44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025cbe:	d111      	bne.n	8025ce4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025cc0:	7809      	ldrb	r1, [r1, #0]
 8025cc2:	0909      	lsrs	r1, r1, #4
 8025cc4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025cc8:	186c      	adds	r4, r5, r1
 8025cca:	5c69      	ldrb	r1, [r5, r1]
 8025ccc:	78a2      	ldrb	r2, [r4, #2]
 8025cce:	7864      	ldrb	r4, [r4, #1]
 8025cd0:	00e4      	lsls	r4, r4, #3
 8025cd2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025cd6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025cda:	4322      	orrs	r2, r4
 8025cdc:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025ce0:	f820 2b02 	strh.w	r2, [r0], #2
 8025ce4:	9a03      	ldr	r2, [sp, #12]
 8025ce6:	f8bc 4000 	ldrh.w	r4, [ip]
 8025cea:	9905      	ldr	r1, [sp, #20]
 8025cec:	1aa4      	subs	r4, r4, r2
 8025cee:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025cf2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025cf6:	440a      	add	r2, r1
 8025cf8:	fb92 f2f8 	sdiv	r2, r2, r8
 8025cfc:	4416      	add	r6, r2
 8025cfe:	e780      	b.n	8025c02 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025d00:	4b03      	ldr	r3, [pc, #12]	; (8025d10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025d02:	6818      	ldr	r0, [r3, #0]
 8025d04:	6803      	ldr	r3, [r0, #0]
 8025d06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025d08:	4798      	blx	r3
 8025d0a:	b00f      	add	sp, #60	; 0x3c
 8025d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d10:	20012e74 	.word	0x20012e74
 8025d14:	20012e6e 	.word	0x20012e6e
 8025d18:	fffff800 	.word	0xfffff800

08025d1c <CRC_Lock>:
 8025d1c:	b530      	push	{r4, r5, lr}
 8025d1e:	4a20      	ldr	r2, [pc, #128]	; (8025da0 <CRC_Lock+0x84>)
 8025d20:	6813      	ldr	r3, [r2, #0]
 8025d22:	f023 0301 	bic.w	r3, r3, #1
 8025d26:	6013      	str	r3, [r2, #0]
 8025d28:	4b1e      	ldr	r3, [pc, #120]	; (8025da4 <CRC_Lock+0x88>)
 8025d2a:	681a      	ldr	r2, [r3, #0]
 8025d2c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025d30:	4022      	ands	r2, r4
 8025d32:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025d36:	42aa      	cmp	r2, r5
 8025d38:	d005      	beq.n	8025d46 <CRC_Lock+0x2a>
 8025d3a:	681b      	ldr	r3, [r3, #0]
 8025d3c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025d40:	4023      	ands	r3, r4
 8025d42:	4293      	cmp	r3, r2
 8025d44:	d124      	bne.n	8025d90 <CRC_Lock+0x74>
 8025d46:	4b18      	ldr	r3, [pc, #96]	; (8025da8 <CRC_Lock+0x8c>)
 8025d48:	681b      	ldr	r3, [r3, #0]
 8025d4a:	bb0b      	cbnz	r3, 8025d90 <CRC_Lock+0x74>
 8025d4c:	4b17      	ldr	r3, [pc, #92]	; (8025dac <CRC_Lock+0x90>)
 8025d4e:	681a      	ldr	r2, [r3, #0]
 8025d50:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025d54:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025d58:	d00d      	beq.n	8025d76 <CRC_Lock+0x5a>
 8025d5a:	681a      	ldr	r2, [r3, #0]
 8025d5c:	f240 4483 	movw	r4, #1155	; 0x483
 8025d60:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025d64:	42a2      	cmp	r2, r4
 8025d66:	d006      	beq.n	8025d76 <CRC_Lock+0x5a>
 8025d68:	681b      	ldr	r3, [r3, #0]
 8025d6a:	f240 4285 	movw	r2, #1157	; 0x485
 8025d6e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025d72:	4293      	cmp	r3, r2
 8025d74:	d10c      	bne.n	8025d90 <CRC_Lock+0x74>
 8025d76:	4b0e      	ldr	r3, [pc, #56]	; (8025db0 <CRC_Lock+0x94>)
 8025d78:	2201      	movs	r2, #1
 8025d7a:	601a      	str	r2, [r3, #0]
 8025d7c:	681a      	ldr	r2, [r3, #0]
 8025d7e:	2a00      	cmp	r2, #0
 8025d80:	d1fc      	bne.n	8025d7c <CRC_Lock+0x60>
 8025d82:	4b0c      	ldr	r3, [pc, #48]	; (8025db4 <CRC_Lock+0x98>)
 8025d84:	6018      	str	r0, [r3, #0]
 8025d86:	6818      	ldr	r0, [r3, #0]
 8025d88:	1a43      	subs	r3, r0, r1
 8025d8a:	4258      	negs	r0, r3
 8025d8c:	4158      	adcs	r0, r3
 8025d8e:	bd30      	pop	{r4, r5, pc}
 8025d90:	4b09      	ldr	r3, [pc, #36]	; (8025db8 <CRC_Lock+0x9c>)
 8025d92:	2201      	movs	r2, #1
 8025d94:	601a      	str	r2, [r3, #0]
 8025d96:	681a      	ldr	r2, [r3, #0]
 8025d98:	2a00      	cmp	r2, #0
 8025d9a:	d1fc      	bne.n	8025d96 <CRC_Lock+0x7a>
 8025d9c:	4b07      	ldr	r3, [pc, #28]	; (8025dbc <CRC_Lock+0xa0>)
 8025d9e:	e7f1      	b.n	8025d84 <CRC_Lock+0x68>
 8025da0:	e0002000 	.word	0xe0002000
 8025da4:	e000ed00 	.word	0xe000ed00
 8025da8:	e0042000 	.word	0xe0042000
 8025dac:	5c001000 	.word	0x5c001000
 8025db0:	58024c08 	.word	0x58024c08
 8025db4:	58024c00 	.word	0x58024c00
 8025db8:	40023008 	.word	0x40023008
 8025dbc:	40023000 	.word	0x40023000

08025dc0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025dc0:	6101      	str	r1, [r0, #16]
 8025dc2:	4770      	bx	lr

08025dc4 <_ZN8touchgfx8Gestures4tickEv>:
 8025dc4:	7b83      	ldrb	r3, [r0, #14]
 8025dc6:	b14b      	cbz	r3, 8025ddc <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025dc8:	8903      	ldrh	r3, [r0, #8]
 8025dca:	3301      	adds	r3, #1
 8025dcc:	b29b      	uxth	r3, r3
 8025dce:	2b07      	cmp	r3, #7
 8025dd0:	8103      	strh	r3, [r0, #8]
 8025dd2:	bf81      	itttt	hi
 8025dd4:	2300      	movhi	r3, #0
 8025dd6:	8143      	strhhi	r3, [r0, #10]
 8025dd8:	8183      	strhhi	r3, [r0, #12]
 8025dda:	7383      	strbhi	r3, [r0, #14]
 8025ddc:	4770      	bx	lr
	...

08025de0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025de0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025de4:	4698      	mov	r8, r3
 8025de6:	8883      	ldrh	r3, [r0, #4]
 8025de8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025dec:	eba8 0303 	sub.w	r3, r8, r3
 8025df0:	b21b      	sxth	r3, r3
 8025df2:	4604      	mov	r4, r0
 8025df4:	2b00      	cmp	r3, #0
 8025df6:	4617      	mov	r7, r2
 8025df8:	4a18      	ldr	r2, [pc, #96]	; (8025e5c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025dfa:	9200      	str	r2, [sp, #0]
 8025dfc:	bfb8      	it	lt
 8025dfe:	425b      	neglt	r3, r3
 8025e00:	8aa2      	ldrh	r2, [r4, #20]
 8025e02:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025e06:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025e0a:	b21b      	sxth	r3, r3
 8025e0c:	460e      	mov	r6, r1
 8025e0e:	4293      	cmp	r3, r2
 8025e10:	88c1      	ldrh	r1, [r0, #6]
 8025e12:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025e16:	f04f 0000 	mov.w	r0, #0
 8025e1a:	f88d 0004 	strb.w	r0, [sp, #4]
 8025e1e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025e22:	dc07      	bgt.n	8025e34 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025e24:	1a69      	subs	r1, r5, r1
 8025e26:	b209      	sxth	r1, r1
 8025e28:	2900      	cmp	r1, #0
 8025e2a:	bfb8      	it	lt
 8025e2c:	4249      	neglt	r1, r1
 8025e2e:	b209      	sxth	r1, r1
 8025e30:	428a      	cmp	r2, r1
 8025e32:	da10      	bge.n	8025e56 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025e34:	6920      	ldr	r0, [r4, #16]
 8025e36:	6803      	ldr	r3, [r0, #0]
 8025e38:	4669      	mov	r1, sp
 8025e3a:	685b      	ldr	r3, [r3, #4]
 8025e3c:	4798      	blx	r3
 8025e3e:	eba8 0606 	sub.w	r6, r8, r6
 8025e42:	2300      	movs	r3, #0
 8025e44:	1bef      	subs	r7, r5, r7
 8025e46:	2001      	movs	r0, #1
 8025e48:	8123      	strh	r3, [r4, #8]
 8025e4a:	8166      	strh	r6, [r4, #10]
 8025e4c:	81a7      	strh	r7, [r4, #12]
 8025e4e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025e52:	80e5      	strh	r5, [r4, #6]
 8025e54:	73a0      	strb	r0, [r4, #14]
 8025e56:	b004      	add	sp, #16
 8025e58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025e5c:	0802e480 	.word	0x0802e480

08025e60 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025e60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025e62:	461e      	mov	r6, r3
 8025e64:	1e4b      	subs	r3, r1, #1
 8025e66:	2b01      	cmp	r3, #1
 8025e68:	b085      	sub	sp, #20
 8025e6a:	4604      	mov	r4, r0
 8025e6c:	460d      	mov	r5, r1
 8025e6e:	4617      	mov	r7, r2
 8025e70:	d84b      	bhi.n	8025f0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025e72:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025e76:	1cd3      	adds	r3, r2, #3
 8025e78:	b29b      	uxth	r3, r3
 8025e7a:	2b06      	cmp	r3, #6
 8025e7c:	d916      	bls.n	8025eac <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025e7e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025f20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025e82:	f8cd c004 	str.w	ip, [sp, #4]
 8025e86:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025e8a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025e8e:	6900      	ldr	r0, [r0, #16]
 8025e90:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025e94:	f04f 0c00 	mov.w	ip, #0
 8025e98:	f88d c008 	strb.w	ip, [sp, #8]
 8025e9c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025ea0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025ea4:	6803      	ldr	r3, [r0, #0]
 8025ea6:	a901      	add	r1, sp, #4
 8025ea8:	689b      	ldr	r3, [r3, #8]
 8025eaa:	4798      	blx	r3
 8025eac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025eb0:	1cd3      	adds	r3, r2, #3
 8025eb2:	b29b      	uxth	r3, r3
 8025eb4:	2b06      	cmp	r3, #6
 8025eb6:	d916      	bls.n	8025ee6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025eb8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025f20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025ebc:	f8cd c004 	str.w	ip, [sp, #4]
 8025ec0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025ec4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025ec8:	6920      	ldr	r0, [r4, #16]
 8025eca:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025ece:	f04f 0c01 	mov.w	ip, #1
 8025ed2:	f88d c008 	strb.w	ip, [sp, #8]
 8025ed6:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025eda:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025ede:	6803      	ldr	r3, [r0, #0]
 8025ee0:	a901      	add	r1, sp, #4
 8025ee2:	689b      	ldr	r3, [r3, #8]
 8025ee4:	4798      	blx	r3
 8025ee6:	4b0d      	ldr	r3, [pc, #52]	; (8025f1c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025ee8:	9301      	str	r3, [sp, #4]
 8025eea:	6920      	ldr	r0, [r4, #16]
 8025eec:	f88d 5008 	strb.w	r5, [sp, #8]
 8025ef0:	2300      	movs	r3, #0
 8025ef2:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025ef6:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025efa:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025efe:	6803      	ldr	r3, [r0, #0]
 8025f00:	a901      	add	r1, sp, #4
 8025f02:	681b      	ldr	r3, [r3, #0]
 8025f04:	4798      	blx	r3
 8025f06:	b005      	add	sp, #20
 8025f08:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025f0a:	2900      	cmp	r1, #0
 8025f0c:	d1eb      	bne.n	8025ee6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025f0e:	80a2      	strh	r2, [r4, #4]
 8025f10:	80c6      	strh	r6, [r0, #6]
 8025f12:	60a1      	str	r1, [r4, #8]
 8025f14:	81a1      	strh	r1, [r4, #12]
 8025f16:	73a1      	strb	r1, [r4, #14]
 8025f18:	e7e5      	b.n	8025ee6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025f1a:	bf00      	nop
 8025f1c:	0802e46c 	.word	0x0802e46c
 8025f20:	0802e494 	.word	0x0802e494

08025f24 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025f24:	10c9      	asrs	r1, r1, #3
 8025f26:	2900      	cmp	r1, #0
 8025f28:	bfb8      	it	lt
 8025f2a:	4249      	neglt	r1, r1
 8025f2c:	2801      	cmp	r0, #1
 8025f2e:	d108      	bne.n	8025f42 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025f30:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025f34:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025f38:	4601      	mov	r1, r0
 8025f3a:	dd02      	ble.n	8025f42 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025f3c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025f40:	4770      	bx	lr
 8025f42:	29ff      	cmp	r1, #255	; 0xff
 8025f44:	bfa8      	it	ge
 8025f46:	21ff      	movge	r1, #255	; 0xff
 8025f48:	4608      	mov	r0, r1
 8025f4a:	4770      	bx	lr

08025f4c <_ZN8touchgfx10Rasterizer6lineToEii>:
 8025f4c:	b410      	push	{r4}
 8025f4e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025f52:	429c      	cmp	r4, r3
 8025f54:	d803      	bhi.n	8025f5e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025f56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025f5a:	f7ed bae3 	b.w	8013524 <_ZN8touchgfx7Outline6lineToEii>
 8025f5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025f62:	4770      	bx	lr

08025f64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f68:	b08b      	sub	sp, #44	; 0x2c
 8025f6a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8025f6e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8025f72:	9308      	str	r3, [sp, #32]
 8025f74:	4606      	mov	r6, r0
 8025f76:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8025f7a:	9309      	str	r3, [sp, #36]	; 0x24
 8025f7c:	468a      	mov	sl, r1
 8025f7e:	f7ed fc3e 	bl	80137fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8025f82:	68b5      	ldr	r5, [r6, #8]
 8025f84:	4604      	mov	r4, r0
 8025f86:	2d00      	cmp	r5, #0
 8025f88:	d044      	beq.n	8026014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025f8a:	6873      	ldr	r3, [r6, #4]
 8025f8c:	42ab      	cmp	r3, r5
 8025f8e:	d33d      	bcc.n	802600c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8025f90:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8025f94:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8025f98:	eb02 0b03 	add.w	fp, r2, r3
 8025f9c:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8025fa0:	fb02 1203 	mla	r2, r2, r3, r1
 8025fa4:	9205      	str	r2, [sp, #20]
 8025fa6:	1e6a      	subs	r2, r5, #1
 8025fa8:	9204      	str	r2, [sp, #16]
 8025faa:	f04f 0800 	mov.w	r8, #0
 8025fae:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8025fb2:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025fb6:	454b      	cmp	r3, r9
 8025fb8:	463a      	mov	r2, r7
 8025fba:	d008      	beq.n	8025fce <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8025fbc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8025fc0:	eb03 0b09 	add.w	fp, r3, r9
 8025fc4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025fc8:	fb03 1309 	mla	r3, r3, r9, r1
 8025fcc:	9305      	str	r3, [sp, #20]
 8025fce:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8025fd2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8025fd6:	4498      	add	r8, r3
 8025fd8:	9b04      	ldr	r3, [sp, #16]
 8025fda:	3b01      	subs	r3, #1
 8025fdc:	9304      	str	r3, [sp, #16]
 8025fde:	9b04      	ldr	r3, [sp, #16]
 8025fe0:	3301      	adds	r3, #1
 8025fe2:	d015      	beq.n	8026010 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025fe4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025fe8:	42bb      	cmp	r3, r7
 8025fea:	d117      	bne.n	802601c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8025fec:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8025ff0:	9b04      	ldr	r3, [sp, #16]
 8025ff2:	4548      	cmp	r0, r9
 8025ff4:	f103 33ff 	add.w	r3, r3, #4294967295
 8025ff8:	d17f      	bne.n	80260fa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8025ffa:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8025ffe:	4401      	add	r1, r0
 8026000:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026004:	4480      	add	r8, r0
 8026006:	e7e9      	b.n	8025fdc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026008:	461f      	mov	r7, r3
 802600a:	e044      	b.n	8026096 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802600c:	2000      	movs	r0, #0
 802600e:	e002      	b.n	8026016 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026010:	2900      	cmp	r1, #0
 8026012:	d16f      	bne.n	80260f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026014:	2001      	movs	r0, #1
 8026016:	b00b      	add	sp, #44	; 0x2c
 8026018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802601c:	2900      	cmp	r1, #0
 802601e:	d030      	beq.n	8026082 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026020:	2f00      	cmp	r7, #0
 8026022:	db29      	blt.n	8026078 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026024:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026028:	42bb      	cmp	r3, r7
 802602a:	dd25      	ble.n	8026078 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802602c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026030:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026034:	f7ff ff76 	bl	8025f24 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026038:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802603a:	fb10 f003 	smulbb	r0, r0, r3
 802603e:	b280      	uxth	r0, r0
 8026040:	1c41      	adds	r1, r0, #1
 8026042:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026046:	1209      	asrs	r1, r1, #8
 8026048:	f011 0fff 	tst.w	r1, #255	; 0xff
 802604c:	d014      	beq.n	8026078 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802604e:	9808      	ldr	r0, [sp, #32]
 8026050:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026052:	b2c9      	uxtb	r1, r1
 8026054:	b2ba      	uxth	r2, r7
 8026056:	9102      	str	r1, [sp, #8]
 8026058:	2101      	movs	r1, #1
 802605a:	4413      	add	r3, r2
 802605c:	9101      	str	r1, [sp, #4]
 802605e:	4402      	add	r2, r0
 8026060:	fa0f f18b 	sxth.w	r1, fp
 8026064:	f8da 0000 	ldr.w	r0, [sl]
 8026068:	9100      	str	r1, [sp, #0]
 802606a:	6941      	ldr	r1, [r0, #20]
 802606c:	b21b      	sxth	r3, r3
 802606e:	460d      	mov	r5, r1
 8026070:	b212      	sxth	r2, r2
 8026072:	9905      	ldr	r1, [sp, #20]
 8026074:	4650      	mov	r0, sl
 8026076:	47a8      	blx	r5
 8026078:	9b04      	ldr	r3, [sp, #16]
 802607a:	3301      	adds	r3, #1
 802607c:	f107 0201 	add.w	r2, r7, #1
 8026080:	d0c8      	beq.n	8026014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026082:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026086:	1abb      	subs	r3, r7, r2
 8026088:	2b00      	cmp	r3, #0
 802608a:	dd31      	ble.n	80260f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802608c:	2a00      	cmp	r2, #0
 802608e:	dabb      	bge.n	8026008 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8026090:	2f00      	cmp	r7, #0
 8026092:	dd2d      	ble.n	80260f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8026094:	2200      	movs	r2, #0
 8026096:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802609a:	19d1      	adds	r1, r2, r7
 802609c:	4299      	cmp	r1, r3
 802609e:	db02      	blt.n	80260a6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80260a0:	1a9f      	subs	r7, r3, r2
 80260a2:	2f00      	cmp	r7, #0
 80260a4:	dd24      	ble.n	80260f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80260a6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80260aa:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80260ae:	f7ff ff39 	bl	8025f24 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80260b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80260b4:	fb10 f003 	smulbb	r0, r0, r3
 80260b8:	b280      	uxth	r0, r0
 80260ba:	1c41      	adds	r1, r0, #1
 80260bc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80260c0:	1209      	asrs	r1, r1, #8
 80260c2:	f011 0fff 	tst.w	r1, #255	; 0xff
 80260c6:	d013      	beq.n	80260f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80260c8:	9808      	ldr	r0, [sp, #32]
 80260ca:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80260cc:	b292      	uxth	r2, r2
 80260ce:	b2c9      	uxtb	r1, r1
 80260d0:	4413      	add	r3, r2
 80260d2:	9102      	str	r1, [sp, #8]
 80260d4:	4402      	add	r2, r0
 80260d6:	b23f      	sxth	r7, r7
 80260d8:	f8da 0000 	ldr.w	r0, [sl]
 80260dc:	9701      	str	r7, [sp, #4]
 80260de:	fa0f f18b 	sxth.w	r1, fp
 80260e2:	9100      	str	r1, [sp, #0]
 80260e4:	6947      	ldr	r7, [r0, #20]
 80260e6:	9905      	ldr	r1, [sp, #20]
 80260e8:	b21b      	sxth	r3, r3
 80260ea:	b212      	sxth	r2, r2
 80260ec:	4650      	mov	r0, sl
 80260ee:	47b8      	blx	r7
 80260f0:	464b      	mov	r3, r9
 80260f2:	e75c      	b.n	8025fae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 80260f4:	2f00      	cmp	r7, #0
 80260f6:	da95      	bge.n	8026024 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 80260f8:	e78c      	b.n	8026014 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80260fa:	2900      	cmp	r1, #0
 80260fc:	d0f8      	beq.n	80260f0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80260fe:	e78f      	b.n	8026020 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026100 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026100:	4b4b      	ldr	r3, [pc, #300]	; (8026230 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8026102:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8026106:	2500      	movs	r5, #0
 8026108:	f100 0620 	add.w	r6, r0, #32
 802610c:	4604      	mov	r4, r0
 802610e:	e9c0 3100 	strd	r3, r1, [r0]
 8026112:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8026116:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802611a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802611e:	f100 0718 	add.w	r7, r0, #24
 8026122:	4630      	mov	r0, r6
 8026124:	4690      	mov	r8, r2
 8026126:	f7ec fd35 	bl	8012b94 <_ZN8touchgfx7OutlineC1Ev>
 802612a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802612e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8026132:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8026136:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802613a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802613e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8026142:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8026146:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802614a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802614e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8026152:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8026156:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802615a:	9500      	str	r5, [sp, #0]
 802615c:	4410      	add	r0, r2
 802615e:	b280      	uxth	r0, r0
 8026160:	fa0f fa80 	sxth.w	sl, r0
 8026164:	45aa      	cmp	sl, r5
 8026166:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802616a:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802616e:	dd5c      	ble.n	802622a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026170:	4591      	cmp	r9, r2
 8026172:	dd5a      	ble.n	802622a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026174:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026178:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802617c:	440b      	add	r3, r1
 802617e:	b29b      	uxth	r3, r3
 8026180:	b21d      	sxth	r5, r3
 8026182:	2d00      	cmp	r5, #0
 8026184:	dd51      	ble.n	802622a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026186:	458e      	cmp	lr, r1
 8026188:	dd4f      	ble.n	802622a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802618a:	45d1      	cmp	r9, sl
 802618c:	bfb8      	it	lt
 802618e:	fa1f f089 	uxthlt.w	r0, r9
 8026192:	45ae      	cmp	lr, r5
 8026194:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8026198:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 802619c:	bfb8      	it	lt
 802619e:	fa1f f38e 	uxthlt.w	r3, lr
 80261a2:	1a80      	subs	r0, r0, r2
 80261a4:	1a5b      	subs	r3, r3, r1
 80261a6:	f8ad 0004 	strh.w	r0, [sp, #4]
 80261aa:	f8ad 3006 	strh.w	r3, [sp, #6]
 80261ae:	f8ad 2000 	strh.w	r2, [sp]
 80261b2:	f8ad 1002 	strh.w	r1, [sp, #2]
 80261b6:	466d      	mov	r5, sp
 80261b8:	e895 0003 	ldmia.w	r5, {r0, r1}
 80261bc:	e887 0003 	stmia.w	r7, {r0, r1}
 80261c0:	f8dc 3000 	ldr.w	r3, [ip]
 80261c4:	4660      	mov	r0, ip
 80261c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80261c8:	4639      	mov	r1, r7
 80261ca:	4798      	blx	r3
 80261cc:	6861      	ldr	r1, [r4, #4]
 80261ce:	4628      	mov	r0, r5
 80261d0:	3104      	adds	r1, #4
 80261d2:	f7ee fee5 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80261d6:	4638      	mov	r0, r7
 80261d8:	f7ee fe9e 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80261dc:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80261e0:	f8bd 2000 	ldrh.w	r2, [sp]
 80261e4:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80261e8:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80261ec:	4630      	mov	r0, r6
 80261ee:	f7ec fcb5 	bl	8012b5c <_ZN8touchgfx7Outline5resetEv>
 80261f2:	f9bd 3000 	ldrsh.w	r3, [sp]
 80261f6:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 80261fa:	015b      	lsls	r3, r3, #5
 80261fc:	60a3      	str	r3, [r4, #8]
 80261fe:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026202:	015b      	lsls	r3, r3, #5
 8026204:	60e3      	str	r3, [r4, #12]
 8026206:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802620a:	015b      	lsls	r3, r3, #5
 802620c:	6123      	str	r3, [r4, #16]
 802620e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8026212:	015b      	lsls	r3, r3, #5
 8026214:	6163      	str	r3, [r4, #20]
 8026216:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802621a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 802621e:	4620      	mov	r0, r4
 8026220:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8026224:	b002      	add	sp, #8
 8026226:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802622a:	2300      	movs	r3, #0
 802622c:	9301      	str	r3, [sp, #4]
 802622e:	e7c2      	b.n	80261b6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8026230:	0802e7b8 	.word	0x0802e7b8

08026234 <_ZN8touchgfx6Canvas5closeEv>:
 8026234:	b538      	push	{r3, r4, r5, lr}
 8026236:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802623a:	4604      	mov	r4, r0
 802623c:	b193      	cbz	r3, 8026264 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802623e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8026242:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8026246:	4213      	tst	r3, r2
 8026248:	d10c      	bne.n	8026264 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802624a:	f100 0520 	add.w	r5, r0, #32
 802624e:	b123      	cbz	r3, 802625a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026250:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8026254:	4628      	mov	r0, r5
 8026256:	f7ff fe79 	bl	8025f4c <_ZN8touchgfx10Rasterizer6lineToEii>
 802625a:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802625e:	4628      	mov	r0, r5
 8026260:	f7ff fe74 	bl	8025f4c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026264:	2300      	movs	r3, #0
 8026266:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802626a:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802626e:	4298      	cmp	r0, r3
 8026270:	bf34      	ite	cc
 8026272:	2000      	movcc	r0, #0
 8026274:	2001      	movcs	r0, #1
 8026276:	bd38      	pop	{r3, r4, r5, pc}

08026278 <_ZN8touchgfx6Canvas6renderEh>:
 8026278:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802627c:	4604      	mov	r4, r0
 802627e:	6840      	ldr	r0, [r0, #4]
 8026280:	6803      	ldr	r3, [r0, #0]
 8026282:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8026284:	460d      	mov	r5, r1
 8026286:	4798      	blx	r3
 8026288:	fb10 f105 	smulbb	r1, r0, r5
 802628c:	b289      	uxth	r1, r1
 802628e:	1c4d      	adds	r5, r1, #1
 8026290:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8026294:	122d      	asrs	r5, r5, #8
 8026296:	f000 809d 	beq.w	80263d4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802629a:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 802629e:	2b00      	cmp	r3, #0
 80262a0:	f000 8098 	beq.w	80263d4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80262a4:	4620      	mov	r0, r4
 80262a6:	f7ff ffc5 	bl	8026234 <_ZN8touchgfx6Canvas5closeEv>
 80262aa:	4607      	mov	r7, r0
 80262ac:	2800      	cmp	r0, #0
 80262ae:	d048      	beq.n	8026342 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80262b0:	6863      	ldr	r3, [r4, #4]
 80262b2:	4e49      	ldr	r6, [pc, #292]	; (80263d8 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 80262b4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80262b6:	6837      	ldr	r7, [r6, #0]
 80262b8:	6803      	ldr	r3, [r0, #0]
 80262ba:	689b      	ldr	r3, [r3, #8]
 80262bc:	4798      	blx	r3
 80262be:	4601      	mov	r1, r0
 80262c0:	4638      	mov	r0, r7
 80262c2:	f7ea fdb9 	bl	8010e38 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80262c6:	4607      	mov	r7, r0
 80262c8:	f7dd fc2a 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 80262cc:	6803      	ldr	r3, [r0, #0]
 80262ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80262d0:	4798      	blx	r3
 80262d2:	4680      	mov	r8, r0
 80262d4:	f7dd fc24 	bl	8003b20 <_ZN8touchgfx3HAL3lcdEv>
 80262d8:	6803      	ldr	r3, [r0, #0]
 80262da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80262dc:	4798      	blx	r3
 80262de:	280b      	cmp	r0, #11
 80262e0:	d85d      	bhi.n	802639e <_ZN8touchgfx6Canvas6renderEh+0x126>
 80262e2:	e8df f000 	tbb	[pc, r0]
 80262e6:	5e53      	.short	0x5e53
 80262e8:	325c066e 	.word	0x325c066e
 80262ec:	67676742 	.word	0x67676742
 80262f0:	6767      	.short	0x6767
 80262f2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80262f6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80262fa:	2208      	movs	r2, #8
 80262fc:	fb91 f2f2 	sdiv	r2, r1, r2
 8026300:	fb08 2303 	mla	r3, r8, r3, r2
 8026304:	441f      	add	r7, r3
 8026306:	424b      	negs	r3, r1
 8026308:	f003 0307 	and.w	r3, r3, #7
 802630c:	f001 0107 	and.w	r1, r1, #7
 8026310:	bf58      	it	pl
 8026312:	4259      	negpl	r1, r3
 8026314:	b2c9      	uxtb	r1, r1
 8026316:	b2ed      	uxtb	r5, r5
 8026318:	e9cd 1500 	strd	r1, r5, [sp]
 802631c:	6860      	ldr	r0, [r4, #4]
 802631e:	463a      	mov	r2, r7
 8026320:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8026322:	fa0f f388 	sxth.w	r3, r8
 8026326:	f104 0020 	add.w	r0, r4, #32
 802632a:	f7ff fe1b 	bl	8025f64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802632e:	6863      	ldr	r3, [r4, #4]
 8026330:	4607      	mov	r7, r0
 8026332:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8026334:	6803      	ldr	r3, [r0, #0]
 8026336:	691b      	ldr	r3, [r3, #16]
 8026338:	4798      	blx	r3
 802633a:	6830      	ldr	r0, [r6, #0]
 802633c:	6803      	ldr	r3, [r0, #0]
 802633e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026340:	4798      	blx	r3
 8026342:	4638      	mov	r0, r7
 8026344:	b002      	add	sp, #8
 8026346:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802634a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802634e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026352:	2204      	movs	r2, #4
 8026354:	fb91 f2f2 	sdiv	r2, r1, r2
 8026358:	fb08 2303 	mla	r3, r8, r3, r2
 802635c:	441f      	add	r7, r3
 802635e:	424b      	negs	r3, r1
 8026360:	f003 0303 	and.w	r3, r3, #3
 8026364:	f001 0103 	and.w	r1, r1, #3
 8026368:	e7d2      	b.n	8026310 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802636a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802636e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026372:	2900      	cmp	r1, #0
 8026374:	f04f 0202 	mov.w	r2, #2
 8026378:	fb91 f2f2 	sdiv	r2, r1, r2
 802637c:	f001 0101 	and.w	r1, r1, #1
 8026380:	fb08 2303 	mla	r3, r8, r3, r2
 8026384:	441f      	add	r7, r3
 8026386:	bfb8      	it	lt
 8026388:	4249      	neglt	r1, r1
 802638a:	e7c3      	b.n	8026314 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802638c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026390:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8026394:	fb08 f303 	mul.w	r3, r8, r3
 8026398:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802639c:	441f      	add	r7, r3
 802639e:	2100      	movs	r1, #0
 80263a0:	e7b9      	b.n	8026316 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80263a2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263a6:	fb08 f203 	mul.w	r2, r8, r3
 80263aa:	8b23      	ldrh	r3, [r4, #24]
 80263ac:	2103      	movs	r1, #3
 80263ae:	fb13 2301 	smlabb	r3, r3, r1, r2
 80263b2:	e7f3      	b.n	802639c <_ZN8touchgfx6Canvas6renderEh+0x124>
 80263b4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263b8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80263bc:	fb08 2303 	mla	r3, r8, r3, r2
 80263c0:	e7ec      	b.n	802639c <_ZN8touchgfx6Canvas6renderEh+0x124>
 80263c2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263c6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80263ca:	fb08 f303 	mul.w	r3, r8, r3
 80263ce:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80263d2:	e7e3      	b.n	802639c <_ZN8touchgfx6Canvas6renderEh+0x124>
 80263d4:	2701      	movs	r7, #1
 80263d6:	e7b4      	b.n	8026342 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80263d8:	20012e74 	.word	0x20012e74

080263dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80263dc:	b510      	push	{r4, lr}
 80263de:	4b07      	ldr	r3, [pc, #28]	; (80263fc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80263e0:	781b      	ldrb	r3, [r3, #0]
 80263e2:	2b01      	cmp	r3, #1
 80263e4:	d108      	bne.n	80263f8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80263e6:	6843      	ldr	r3, [r0, #4]
 80263e8:	6814      	ldr	r4, [r2, #0]
 80263ea:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80263ee:	680b      	ldr	r3, [r1, #0]
 80263f0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80263f4:	6013      	str	r3, [r2, #0]
 80263f6:	600c      	str	r4, [r1, #0]
 80263f8:	bd10      	pop	{r4, pc}
 80263fa:	bf00      	nop
 80263fc:	20012e6c 	.word	0x20012e6c

08026400 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8026400:	b513      	push	{r0, r1, r4, lr}
 8026402:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026406:	4604      	mov	r4, r0
 8026408:	e9cd 2100 	strd	r2, r1, [sp]
 802640c:	b9a3      	cbnz	r3, 8026438 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802640e:	466a      	mov	r2, sp
 8026410:	a901      	add	r1, sp, #4
 8026412:	4620      	mov	r0, r4
 8026414:	f7ff ffe2 	bl	80263dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026418:	68a3      	ldr	r3, [r4, #8]
 802641a:	9901      	ldr	r1, [sp, #4]
 802641c:	9a00      	ldr	r2, [sp, #0]
 802641e:	1ac9      	subs	r1, r1, r3
 8026420:	68e3      	ldr	r3, [r4, #12]
 8026422:	9101      	str	r1, [sp, #4]
 8026424:	1ad2      	subs	r2, r2, r3
 8026426:	2a00      	cmp	r2, #0
 8026428:	9200      	str	r2, [sp, #0]
 802642a:	da0b      	bge.n	8026444 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802642c:	2301      	movs	r3, #1
 802642e:	2900      	cmp	r1, #0
 8026430:	da0e      	bge.n	8026450 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8026432:	f043 0304 	orr.w	r3, r3, #4
 8026436:	e013      	b.n	8026460 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8026438:	f7ff fefc 	bl	8026234 <_ZN8touchgfx6Canvas5closeEv>
 802643c:	2800      	cmp	r0, #0
 802643e:	d1e6      	bne.n	802640e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8026440:	b002      	add	sp, #8
 8026442:	bd10      	pop	{r4, pc}
 8026444:	6963      	ldr	r3, [r4, #20]
 8026446:	429a      	cmp	r2, r3
 8026448:	bfac      	ite	ge
 802644a:	2302      	movge	r3, #2
 802644c:	2300      	movlt	r3, #0
 802644e:	e7ee      	b.n	802642e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8026450:	6920      	ldr	r0, [r4, #16]
 8026452:	4281      	cmp	r1, r0
 8026454:	bfac      	ite	ge
 8026456:	2008      	movge	r0, #8
 8026458:	2000      	movlt	r0, #0
 802645a:	4318      	orrs	r0, r3
 802645c:	b2c3      	uxtb	r3, r0
 802645e:	b158      	cbz	r0, 8026478 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026460:	2200      	movs	r2, #0
 8026462:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8026466:	9901      	ldr	r1, [sp, #4]
 8026468:	9a00      	ldr	r2, [sp, #0]
 802646a:	66a1      	str	r1, [r4, #104]	; 0x68
 802646c:	66e2      	str	r2, [r4, #108]	; 0x6c
 802646e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8026472:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8026476:	e7e3      	b.n	8026440 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026478:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802647c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026480:	4298      	cmp	r0, r3
 8026482:	d803      	bhi.n	802648c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8026484:	f104 0020 	add.w	r0, r4, #32
 8026488:	f7ed f866 	bl	8013558 <_ZN8touchgfx7Outline6moveToEii>
 802648c:	2301      	movs	r3, #1
 802648e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026492:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026496:	2300      	movs	r3, #0
 8026498:	e7e5      	b.n	8026466 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802649a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802649c:	ab02      	add	r3, sp, #8
 802649e:	4604      	mov	r4, r0
 80264a0:	f843 2d08 	str.w	r2, [r3, #-8]!
 80264a4:	9101      	str	r1, [sp, #4]
 80264a6:	461a      	mov	r2, r3
 80264a8:	a901      	add	r1, sp, #4
 80264aa:	f7ff ff97 	bl	80263dc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80264ae:	68a3      	ldr	r3, [r4, #8]
 80264b0:	9901      	ldr	r1, [sp, #4]
 80264b2:	9a00      	ldr	r2, [sp, #0]
 80264b4:	1ac9      	subs	r1, r1, r3
 80264b6:	68e3      	ldr	r3, [r4, #12]
 80264b8:	9101      	str	r1, [sp, #4]
 80264ba:	1ad2      	subs	r2, r2, r3
 80264bc:	2a00      	cmp	r2, #0
 80264be:	9200      	str	r2, [sp, #0]
 80264c0:	db1c      	blt.n	80264fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80264c2:	6963      	ldr	r3, [r4, #20]
 80264c4:	429a      	cmp	r2, r3
 80264c6:	bfac      	ite	ge
 80264c8:	2002      	movge	r0, #2
 80264ca:	2000      	movlt	r0, #0
 80264cc:	2900      	cmp	r1, #0
 80264ce:	db17      	blt.n	8026500 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80264d0:	6923      	ldr	r3, [r4, #16]
 80264d2:	4299      	cmp	r1, r3
 80264d4:	bfac      	ite	ge
 80264d6:	2308      	movge	r3, #8
 80264d8:	2300      	movlt	r3, #0
 80264da:	4303      	orrs	r3, r0
 80264dc:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80264e0:	b2dd      	uxtb	r5, r3
 80264e2:	b978      	cbnz	r0, 8026504 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80264e4:	f104 0020 	add.w	r0, r4, #32
 80264e8:	f7ff fd30 	bl	8025f4c <_ZN8touchgfx10Rasterizer6lineToEii>
 80264ec:	9b01      	ldr	r3, [sp, #4]
 80264ee:	65e3      	str	r3, [r4, #92]	; 0x5c
 80264f0:	9b00      	ldr	r3, [sp, #0]
 80264f2:	6623      	str	r3, [r4, #96]	; 0x60
 80264f4:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80264f8:	b002      	add	sp, #8
 80264fa:	bd70      	pop	{r4, r5, r6, pc}
 80264fc:	2001      	movs	r0, #1
 80264fe:	e7e5      	b.n	80264cc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8026500:	2304      	movs	r3, #4
 8026502:	e7ea      	b.n	80264da <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8026504:	b113      	cbz	r3, 802650c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8026506:	ea10 0305 	ands.w	r3, r0, r5
 802650a:	d11c      	bne.n	8026546 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802650c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8026510:	f104 0620 	add.w	r6, r4, #32
 8026514:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8026518:	b98b      	cbnz	r3, 802653e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802651a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802651e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026522:	4298      	cmp	r0, r3
 8026524:	d802      	bhi.n	802652c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8026526:	4630      	mov	r0, r6
 8026528:	f7ed f816 	bl	8013558 <_ZN8touchgfx7Outline6moveToEii>
 802652c:	2301      	movs	r3, #1
 802652e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026532:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026536:	e9dd 2100 	ldrd	r2, r1, [sp]
 802653a:	4630      	mov	r0, r6
 802653c:	e7d4      	b.n	80264e8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802653e:	4630      	mov	r0, r6
 8026540:	f7ff fd04 	bl	8025f4c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026544:	e7f7      	b.n	8026536 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8026546:	461d      	mov	r5, r3
 8026548:	e7d0      	b.n	80264ec <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802654c <_ZN8touchgfx6CanvasD1Ev>:
 802654c:	b510      	push	{r4, lr}
 802654e:	4b04      	ldr	r3, [pc, #16]	; (8026560 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026550:	4604      	mov	r4, r0
 8026552:	f840 3b20 	str.w	r3, [r0], #32
 8026556:	f7ec faf9 	bl	8012b4c <_ZN8touchgfx7OutlineD1Ev>
 802655a:	4620      	mov	r0, r4
 802655c:	bd10      	pop	{r4, pc}
 802655e:	bf00      	nop
 8026560:	0802e7b8 	.word	0x0802e7b8

08026564 <_ZN8touchgfx6CanvasD0Ev>:
 8026564:	b510      	push	{r4, lr}
 8026566:	4604      	mov	r4, r0
 8026568:	f7ff fff0 	bl	802654c <_ZN8touchgfx6CanvasD1Ev>
 802656c:	4620      	mov	r0, r4
 802656e:	2170      	movs	r1, #112	; 0x70
 8026570:	f002 fd09 	bl	8028f86 <_ZdlPvj>
 8026574:	4620      	mov	r0, r4
 8026576:	bd10      	pop	{r4, pc}

08026578 <_ZN8touchgfx6CircleD1Ev>:
 8026578:	4770      	bx	lr

0802657a <_ZN8touchgfx6CircleD0Ev>:
 802657a:	b510      	push	{r4, lr}
 802657c:	2148      	movs	r1, #72	; 0x48
 802657e:	4604      	mov	r4, r0
 8026580:	f002 fd01 	bl	8028f86 <_ZdlPvj>
 8026584:	4620      	mov	r0, r4
 8026586:	bd10      	pop	{r4, pc}

08026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8026588:	b508      	push	{r3, lr}
 802658a:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 802658e:	f7ea ffa9 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026592:	bd08      	pop	{r3, pc}

08026594 <_ZN8touchgfx6CircleC1Ev>:
 8026594:	b510      	push	{r4, lr}
 8026596:	4604      	mov	r4, r0
 8026598:	f7ea fe40 	bl	801121c <_ZN8touchgfx12CanvasWidgetC1Ev>
 802659c:	4b08      	ldr	r3, [pc, #32]	; (80265c0 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 802659e:	6023      	str	r3, [r4, #0]
 80265a0:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 80265a4:	2300      	movs	r3, #0
 80265a6:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 80265aa:	f24b 4205 	movw	r2, #46085	; 0xb405
 80265ae:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80265b2:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80265b6:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80265ba:	60a3      	str	r3, [r4, #8]
 80265bc:	4620      	mov	r0, r4
 80265be:	bd10      	pop	{r4, pc}
 80265c0:	0802e7cc 	.word	0x0802e7cc

080265c4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80265c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80265c8:	428a      	cmp	r2, r1
 80265ca:	4680      	mov	r8, r0
 80265cc:	4610      	mov	r0, r2
 80265ce:	4699      	mov	r9, r3
 80265d0:	bfa6      	itte	ge
 80265d2:	460a      	movge	r2, r1
 80265d4:	4603      	movge	r3, r0
 80265d6:	460b      	movlt	r3, r1
 80265d8:	1a99      	subs	r1, r3, r2
 80265da:	b085      	sub	sp, #20
 80265dc:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 80265e0:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 80265e4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80265e6:	bfa4      	itt	ge
 80265e8:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 80265ec:	2200      	movge	r2, #0
 80265ee:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 80265f2:	9300      	str	r3, [sp, #0]
 80265f4:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 80265f8:	f102 0b01 	add.w	fp, r2, #1
 80265fc:	2c00      	cmp	r4, #0
 80265fe:	f040 80af 	bne.w	8026760 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8026602:	4610      	mov	r0, r2
 8026604:	9201      	str	r2, [sp, #4]
 8026606:	f7ea ff6d 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802660a:	a903      	add	r1, sp, #12
 802660c:	9003      	str	r0, [sp, #12]
 802660e:	4650      	mov	r0, sl
 8026610:	f7ea fe30 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026614:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026618:	9a01      	ldr	r2, [sp, #4]
 802661a:	4408      	add	r0, r1
 802661c:	f8d9 1000 	ldr.w	r1, [r9]
 8026620:	4281      	cmp	r1, r0
 8026622:	bfc8      	it	gt
 8026624:	f8c9 0000 	strgt.w	r0, [r9]
 8026628:	6839      	ldr	r1, [r7, #0]
 802662a:	4288      	cmp	r0, r1
 802662c:	bfc8      	it	gt
 802662e:	6038      	strgt	r0, [r7, #0]
 8026630:	4610      	mov	r0, r2
 8026632:	f7ff ffa9 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026636:	a903      	add	r1, sp, #12
 8026638:	9003      	str	r0, [sp, #12]
 802663a:	4650      	mov	r0, sl
 802663c:	f7ea fe1a 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026640:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026644:	1a10      	subs	r0, r2, r0
 8026646:	6832      	ldr	r2, [r6, #0]
 8026648:	4282      	cmp	r2, r0
 802664a:	bfc8      	it	gt
 802664c:	6030      	strgt	r0, [r6, #0]
 802664e:	682a      	ldr	r2, [r5, #0]
 8026650:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8026654:	4290      	cmp	r0, r2
 8026656:	fb9b f2f1 	sdiv	r2, fp, r1
 802665a:	fb01 b212 	mls	r2, r1, r2, fp
 802665e:	eba1 0202 	sub.w	r2, r1, r2
 8026662:	bfc8      	it	gt
 8026664:	6028      	strgt	r0, [r5, #0]
 8026666:	fb92 f0f1 	sdiv	r0, r2, r1
 802666a:	fb01 2210 	mls	r2, r1, r0, r2
 802666e:	4493      	add	fp, r2
 8026670:	9b00      	ldr	r3, [sp, #0]
 8026672:	455b      	cmp	r3, fp
 8026674:	db2a      	blt.n	80266cc <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 8026676:	4658      	mov	r0, fp
 8026678:	f7ea ff34 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802667c:	a903      	add	r1, sp, #12
 802667e:	9003      	str	r0, [sp, #12]
 8026680:	4650      	mov	r0, sl
 8026682:	f7ea fdf7 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026686:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802668a:	4410      	add	r0, r2
 802668c:	f8d9 2000 	ldr.w	r2, [r9]
 8026690:	4282      	cmp	r2, r0
 8026692:	bfc8      	it	gt
 8026694:	f8c9 0000 	strgt.w	r0, [r9]
 8026698:	683a      	ldr	r2, [r7, #0]
 802669a:	4290      	cmp	r0, r2
 802669c:	bfc8      	it	gt
 802669e:	6038      	strgt	r0, [r7, #0]
 80266a0:	4658      	mov	r0, fp
 80266a2:	f7ff ff71 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80266a6:	a903      	add	r1, sp, #12
 80266a8:	9003      	str	r0, [sp, #12]
 80266aa:	4650      	mov	r0, sl
 80266ac:	f7ea fde2 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80266b0:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80266b4:	1a10      	subs	r0, r2, r0
 80266b6:	6832      	ldr	r2, [r6, #0]
 80266b8:	4282      	cmp	r2, r0
 80266ba:	bfc8      	it	gt
 80266bc:	6030      	strgt	r0, [r6, #0]
 80266be:	682a      	ldr	r2, [r5, #0]
 80266c0:	4290      	cmp	r0, r2
 80266c2:	bfc8      	it	gt
 80266c4:	6028      	strgt	r0, [r5, #0]
 80266c6:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 80266ca:	e7d1      	b.n	8026670 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 80266cc:	9b00      	ldr	r3, [sp, #0]
 80266ce:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 80266d2:	455b      	cmp	r3, fp
 80266d4:	dd27      	ble.n	8026726 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 80266d6:	4618      	mov	r0, r3
 80266d8:	f7ea ff04 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80266dc:	a903      	add	r1, sp, #12
 80266de:	9003      	str	r0, [sp, #12]
 80266e0:	4650      	mov	r0, sl
 80266e2:	f7ea fdc7 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80266e6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80266ea:	4410      	add	r0, r2
 80266ec:	f8d9 2000 	ldr.w	r2, [r9]
 80266f0:	4282      	cmp	r2, r0
 80266f2:	bfc8      	it	gt
 80266f4:	f8c9 0000 	strgt.w	r0, [r9]
 80266f8:	683a      	ldr	r2, [r7, #0]
 80266fa:	4290      	cmp	r0, r2
 80266fc:	bfc8      	it	gt
 80266fe:	6038      	strgt	r0, [r7, #0]
 8026700:	9800      	ldr	r0, [sp, #0]
 8026702:	f7ff ff41 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026706:	a903      	add	r1, sp, #12
 8026708:	9003      	str	r0, [sp, #12]
 802670a:	4650      	mov	r0, sl
 802670c:	f7ea fdb2 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026710:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026714:	1a10      	subs	r0, r2, r0
 8026716:	6832      	ldr	r2, [r6, #0]
 8026718:	4282      	cmp	r2, r0
 802671a:	bfc8      	it	gt
 802671c:	6030      	strgt	r0, [r6, #0]
 802671e:	682a      	ldr	r2, [r5, #0]
 8026720:	4290      	cmp	r0, r2
 8026722:	bfc8      	it	gt
 8026724:	6028      	strgt	r0, [r5, #0]
 8026726:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802672a:	f8d9 1000 	ldr.w	r1, [r9]
 802672e:	4291      	cmp	r1, r2
 8026730:	bfc8      	it	gt
 8026732:	f8c9 2000 	strgt.w	r2, [r9]
 8026736:	683a      	ldr	r2, [r7, #0]
 8026738:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 802673c:	429a      	cmp	r2, r3
 802673e:	bfb8      	it	lt
 8026740:	603b      	strlt	r3, [r7, #0]
 8026742:	6832      	ldr	r2, [r6, #0]
 8026744:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026748:	429a      	cmp	r2, r3
 802674a:	bfc8      	it	gt
 802674c:	6033      	strgt	r3, [r6, #0]
 802674e:	682a      	ldr	r2, [r5, #0]
 8026750:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026754:	429a      	cmp	r2, r3
 8026756:	da00      	bge.n	802675a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026758:	602b      	str	r3, [r5, #0]
 802675a:	b005      	add	sp, #20
 802675c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026760:	2002      	movs	r0, #2
 8026762:	3401      	adds	r4, #1
 8026764:	fb94 f4f0 	sdiv	r4, r4, r0
 8026768:	4610      	mov	r0, r2
 802676a:	9201      	str	r2, [sp, #4]
 802676c:	f7ea feba 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026770:	a903      	add	r1, sp, #12
 8026772:	9003      	str	r0, [sp, #12]
 8026774:	4650      	mov	r0, sl
 8026776:	f7ea fd7d 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802677a:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 802677e:	9a01      	ldr	r2, [sp, #4]
 8026780:	4408      	add	r0, r1
 8026782:	f8d9 1000 	ldr.w	r1, [r9]
 8026786:	1b03      	subs	r3, r0, r4
 8026788:	4299      	cmp	r1, r3
 802678a:	bfc8      	it	gt
 802678c:	f8c9 3000 	strgt.w	r3, [r9]
 8026790:	6839      	ldr	r1, [r7, #0]
 8026792:	428b      	cmp	r3, r1
 8026794:	bfc8      	it	gt
 8026796:	603b      	strgt	r3, [r7, #0]
 8026798:	f8d9 1000 	ldr.w	r1, [r9]
 802679c:	4420      	add	r0, r4
 802679e:	4281      	cmp	r1, r0
 80267a0:	bfc8      	it	gt
 80267a2:	f8c9 0000 	strgt.w	r0, [r9]
 80267a6:	6839      	ldr	r1, [r7, #0]
 80267a8:	4288      	cmp	r0, r1
 80267aa:	bfc8      	it	gt
 80267ac:	6038      	strgt	r0, [r7, #0]
 80267ae:	4610      	mov	r0, r2
 80267b0:	f7ff feea 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80267b4:	a903      	add	r1, sp, #12
 80267b6:	9003      	str	r0, [sp, #12]
 80267b8:	4650      	mov	r0, sl
 80267ba:	f7ea fd5b 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80267be:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80267c2:	1a10      	subs	r0, r2, r0
 80267c4:	6832      	ldr	r2, [r6, #0]
 80267c6:	1b01      	subs	r1, r0, r4
 80267c8:	428a      	cmp	r2, r1
 80267ca:	bfc8      	it	gt
 80267cc:	6031      	strgt	r1, [r6, #0]
 80267ce:	682a      	ldr	r2, [r5, #0]
 80267d0:	4291      	cmp	r1, r2
 80267d2:	bfc8      	it	gt
 80267d4:	6029      	strgt	r1, [r5, #0]
 80267d6:	6832      	ldr	r2, [r6, #0]
 80267d8:	4420      	add	r0, r4
 80267da:	4282      	cmp	r2, r0
 80267dc:	bfc8      	it	gt
 80267de:	6030      	strgt	r0, [r6, #0]
 80267e0:	682a      	ldr	r2, [r5, #0]
 80267e2:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80267e6:	4290      	cmp	r0, r2
 80267e8:	fb9b f2f1 	sdiv	r2, fp, r1
 80267ec:	fb01 b212 	mls	r2, r1, r2, fp
 80267f0:	eba1 0202 	sub.w	r2, r1, r2
 80267f4:	bfc8      	it	gt
 80267f6:	6028      	strgt	r0, [r5, #0]
 80267f8:	fb92 f0f1 	sdiv	r0, r2, r1
 80267fc:	fb01 2210 	mls	r2, r1, r0, r2
 8026800:	4493      	add	fp, r2
 8026802:	9b00      	ldr	r3, [sp, #0]
 8026804:	455b      	cmp	r3, fp
 8026806:	db40      	blt.n	802688a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 8026808:	4658      	mov	r0, fp
 802680a:	f7ea fe6b 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802680e:	a903      	add	r1, sp, #12
 8026810:	9003      	str	r0, [sp, #12]
 8026812:	4650      	mov	r0, sl
 8026814:	f7ea fd2e 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026818:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802681c:	4410      	add	r0, r2
 802681e:	f8d9 2000 	ldr.w	r2, [r9]
 8026822:	1b01      	subs	r1, r0, r4
 8026824:	428a      	cmp	r2, r1
 8026826:	bfc8      	it	gt
 8026828:	f8c9 1000 	strgt.w	r1, [r9]
 802682c:	683a      	ldr	r2, [r7, #0]
 802682e:	4291      	cmp	r1, r2
 8026830:	bfc8      	it	gt
 8026832:	6039      	strgt	r1, [r7, #0]
 8026834:	f8d9 2000 	ldr.w	r2, [r9]
 8026838:	4420      	add	r0, r4
 802683a:	4282      	cmp	r2, r0
 802683c:	bfc8      	it	gt
 802683e:	f8c9 0000 	strgt.w	r0, [r9]
 8026842:	683a      	ldr	r2, [r7, #0]
 8026844:	4290      	cmp	r0, r2
 8026846:	bfc8      	it	gt
 8026848:	6038      	strgt	r0, [r7, #0]
 802684a:	4658      	mov	r0, fp
 802684c:	f7ff fe9c 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026850:	a903      	add	r1, sp, #12
 8026852:	9003      	str	r0, [sp, #12]
 8026854:	4650      	mov	r0, sl
 8026856:	f7ea fd0d 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802685a:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802685e:	1a10      	subs	r0, r2, r0
 8026860:	6832      	ldr	r2, [r6, #0]
 8026862:	1b01      	subs	r1, r0, r4
 8026864:	428a      	cmp	r2, r1
 8026866:	bfc8      	it	gt
 8026868:	6031      	strgt	r1, [r6, #0]
 802686a:	682a      	ldr	r2, [r5, #0]
 802686c:	4291      	cmp	r1, r2
 802686e:	bfc8      	it	gt
 8026870:	6029      	strgt	r1, [r5, #0]
 8026872:	6832      	ldr	r2, [r6, #0]
 8026874:	4420      	add	r0, r4
 8026876:	4282      	cmp	r2, r0
 8026878:	bfc8      	it	gt
 802687a:	6030      	strgt	r0, [r6, #0]
 802687c:	682a      	ldr	r2, [r5, #0]
 802687e:	4290      	cmp	r0, r2
 8026880:	bfc8      	it	gt
 8026882:	6028      	strgt	r0, [r5, #0]
 8026884:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026888:	e7bb      	b.n	8026802 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802688a:	9b00      	ldr	r3, [sp, #0]
 802688c:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026890:	455b      	cmp	r3, fp
 8026892:	f77f af62 	ble.w	802675a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026896:	4618      	mov	r0, r3
 8026898:	f7ea fe24 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802689c:	a903      	add	r1, sp, #12
 802689e:	9003      	str	r0, [sp, #12]
 80268a0:	4650      	mov	r0, sl
 80268a2:	f7ea fce7 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268a6:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80268aa:	4410      	add	r0, r2
 80268ac:	f8d9 2000 	ldr.w	r2, [r9]
 80268b0:	1b01      	subs	r1, r0, r4
 80268b2:	428a      	cmp	r2, r1
 80268b4:	bfc8      	it	gt
 80268b6:	f8c9 1000 	strgt.w	r1, [r9]
 80268ba:	683a      	ldr	r2, [r7, #0]
 80268bc:	4291      	cmp	r1, r2
 80268be:	bfc8      	it	gt
 80268c0:	6039      	strgt	r1, [r7, #0]
 80268c2:	f8d9 2000 	ldr.w	r2, [r9]
 80268c6:	4420      	add	r0, r4
 80268c8:	4282      	cmp	r2, r0
 80268ca:	bfc8      	it	gt
 80268cc:	f8c9 0000 	strgt.w	r0, [r9]
 80268d0:	683b      	ldr	r3, [r7, #0]
 80268d2:	4298      	cmp	r0, r3
 80268d4:	bfc8      	it	gt
 80268d6:	6038      	strgt	r0, [r7, #0]
 80268d8:	9800      	ldr	r0, [sp, #0]
 80268da:	f7ff fe55 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80268de:	a903      	add	r1, sp, #12
 80268e0:	9003      	str	r0, [sp, #12]
 80268e2:	4650      	mov	r0, sl
 80268e4:	f7ea fcc6 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268e8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80268ec:	6832      	ldr	r2, [r6, #0]
 80268ee:	1a18      	subs	r0, r3, r0
 80268f0:	1b03      	subs	r3, r0, r4
 80268f2:	429a      	cmp	r2, r3
 80268f4:	bfc8      	it	gt
 80268f6:	6033      	strgt	r3, [r6, #0]
 80268f8:	682a      	ldr	r2, [r5, #0]
 80268fa:	4293      	cmp	r3, r2
 80268fc:	bfc8      	it	gt
 80268fe:	602b      	strgt	r3, [r5, #0]
 8026900:	6833      	ldr	r3, [r6, #0]
 8026902:	4404      	add	r4, r0
 8026904:	42a3      	cmp	r3, r4
 8026906:	bfc8      	it	gt
 8026908:	6034      	strgt	r4, [r6, #0]
 802690a:	682b      	ldr	r3, [r5, #0]
 802690c:	429c      	cmp	r4, r3
 802690e:	bfc8      	it	gt
 8026910:	602c      	strgt	r4, [r5, #0]
 8026912:	e722      	b.n	802675a <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

08026914 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 8026914:	b530      	push	{r4, r5, lr}
 8026916:	4604      	mov	r4, r0
 8026918:	4608      	mov	r0, r1
 802691a:	4611      	mov	r1, r2
 802691c:	461a      	mov	r2, r3
 802691e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8026922:	b089      	sub	sp, #36	; 0x24
 8026924:	015b      	lsls	r3, r3, #5
 8026926:	9304      	str	r3, [sp, #16]
 8026928:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 802692c:	2500      	movs	r5, #0
 802692e:	015b      	lsls	r3, r3, #5
 8026930:	e9cd 3506 	strd	r3, r5, [sp, #24]
 8026934:	ab07      	add	r3, sp, #28
 8026936:	9302      	str	r3, [sp, #8]
 8026938:	ab06      	add	r3, sp, #24
 802693a:	9301      	str	r3, [sp, #4]
 802693c:	ab05      	add	r3, sp, #20
 802693e:	9300      	str	r3, [sp, #0]
 8026940:	ab04      	add	r3, sp, #16
 8026942:	9505      	str	r5, [sp, #20]
 8026944:	f7ff fe3e 	bl	80265c4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 8026948:	2520      	movs	r5, #32
 802694a:	9a04      	ldr	r2, [sp, #16]
 802694c:	9805      	ldr	r0, [sp, #20]
 802694e:	fb92 f2f5 	sdiv	r2, r2, r5
 8026952:	fb90 f0f5 	sdiv	r0, r0, r5
 8026956:	b292      	uxth	r2, r2
 8026958:	3002      	adds	r0, #2
 802695a:	1a80      	subs	r0, r0, r2
 802695c:	9b06      	ldr	r3, [sp, #24]
 802695e:	9907      	ldr	r1, [sp, #28]
 8026960:	fb93 f3f5 	sdiv	r3, r3, r5
 8026964:	fb91 f1f5 	sdiv	r1, r1, r5
 8026968:	b29b      	uxth	r3, r3
 802696a:	3102      	adds	r1, #2
 802696c:	1ac9      	subs	r1, r1, r3
 802696e:	3a01      	subs	r2, #1
 8026970:	3b01      	subs	r3, #1
 8026972:	80a0      	strh	r0, [r4, #4]
 8026974:	4620      	mov	r0, r4
 8026976:	8022      	strh	r2, [r4, #0]
 8026978:	8063      	strh	r3, [r4, #2]
 802697a:	80e1      	strh	r1, [r4, #6]
 802697c:	b009      	add	sp, #36	; 0x24
 802697e:	bd30      	pop	{r4, r5, pc}

08026980 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8026980:	b510      	push	{r4, lr}
 8026982:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 8026986:	4604      	mov	r4, r0
 8026988:	f7ff ffc4 	bl	8026914 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 802698c:	4620      	mov	r0, r4
 802698e:	bd10      	pop	{r4, pc}

08026990 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8026990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026992:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 8026996:	4606      	mov	r6, r0
 8026998:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 802699c:	6813      	ldr	r3, [r2, #0]
 802699e:	42a5      	cmp	r5, r4
 80269a0:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80269a4:	da2b      	bge.n	80269fe <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 80269a6:	42a3      	cmp	r3, r4
 80269a8:	dd14      	ble.n	80269d4 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 80269aa:	b168      	cbz	r0, 80269c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80269ac:	4267      	negs	r7, r4
 80269ae:	fb97 f2f0 	sdiv	r2, r7, r0
 80269b2:	fb00 7212 	mls	r2, r0, r2, r7
 80269b6:	1a82      	subs	r2, r0, r2
 80269b8:	fb92 f7f0 	sdiv	r7, r2, r0
 80269bc:	fb00 2017 	mls	r0, r0, r7, r2
 80269c0:	1a24      	subs	r4, r4, r0
 80269c2:	42ac      	cmp	r4, r5
 80269c4:	bfb8      	it	lt
 80269c6:	462c      	movlt	r4, r5
 80269c8:	4630      	mov	r0, r6
 80269ca:	4622      	mov	r2, r4
 80269cc:	f7ff ffa2 	bl	8026914 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80269d0:	4630      	mov	r0, r6
 80269d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80269d4:	42ab      	cmp	r3, r5
 80269d6:	dd0e      	ble.n	80269f6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80269d8:	b168      	cbz	r0, 80269f6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80269da:	425f      	negs	r7, r3
 80269dc:	fb97 f2f0 	sdiv	r2, r7, r0
 80269e0:	fb00 7212 	mls	r2, r0, r2, r7
 80269e4:	1a82      	subs	r2, r0, r2
 80269e6:	fb92 f7f0 	sdiv	r7, r2, r0
 80269ea:	fb00 2017 	mls	r0, r0, r7, r2
 80269ee:	1a1b      	subs	r3, r3, r0
 80269f0:	42ab      	cmp	r3, r5
 80269f2:	bfb8      	it	lt
 80269f4:	462b      	movlt	r3, r5
 80269f6:	4622      	mov	r2, r4
 80269f8:	461c      	mov	r4, r3
 80269fa:	4613      	mov	r3, r2
 80269fc:	e7e4      	b.n	80269c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80269fe:	42a3      	cmp	r3, r4
 8026a00:	da10      	bge.n	8026a24 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 8026a02:	b148      	cbz	r0, 8026a18 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 8026a04:	fb94 f2f0 	sdiv	r2, r4, r0
 8026a08:	fb00 4212 	mls	r2, r0, r2, r4
 8026a0c:	1a82      	subs	r2, r0, r2
 8026a0e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026a12:	fb00 2017 	mls	r0, r0, r7, r2
 8026a16:	4404      	add	r4, r0
 8026a18:	42a5      	cmp	r5, r4
 8026a1a:	bfa8      	it	ge
 8026a1c:	4625      	movge	r5, r4
 8026a1e:	461c      	mov	r4, r3
 8026a20:	462b      	mov	r3, r5
 8026a22:	e7d1      	b.n	80269c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026a24:	42ab      	cmp	r3, r5
 8026a26:	dacf      	bge.n	80269c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026a28:	2800      	cmp	r0, #0
 8026a2a:	d0cd      	beq.n	80269c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026a2c:	fb93 f2f0 	sdiv	r2, r3, r0
 8026a30:	fb00 3212 	mls	r2, r0, r2, r3
 8026a34:	1a82      	subs	r2, r0, r2
 8026a36:	fb92 f7f0 	sdiv	r7, r2, r0
 8026a3a:	fb00 2017 	mls	r0, r0, r7, r2
 8026a3e:	4403      	add	r3, r0
 8026a40:	42ab      	cmp	r3, r5
 8026a42:	bfa8      	it	ge
 8026a44:	462b      	movge	r3, r5
 8026a46:	e7bf      	b.n	80269c8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

08026a48 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 8026a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026a4c:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8026a50:	42ae      	cmp	r6, r5
 8026a52:	bfa2      	ittt	ge
 8026a54:	4633      	movge	r3, r6
 8026a56:	462e      	movge	r6, r5
 8026a58:	461d      	movge	r5, r3
 8026a5a:	1bab      	subs	r3, r5, r6
 8026a5c:	468b      	mov	fp, r1
 8026a5e:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8026a60:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8026a64:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8026a68:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026a6c:	f04f 0220 	mov.w	r2, #32
 8026a70:	b0ab      	sub	sp, #172	; 0xac
 8026a72:	4604      	mov	r4, r0
 8026a74:	bfa4      	itt	ge
 8026a76:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8026a7a:	2600      	movge	r6, #0
 8026a7c:	fb99 f9f2 	sdiv	r9, r9, r2
 8026a80:	fb9a faf2 	sdiv	sl, sl, r2
 8026a84:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8026a86:	2900      	cmp	r1, #0
 8026a88:	f000 80f5 	beq.w	8026c76 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8026a8c:	f9bb 0000 	ldrsh.w	r0, [fp]
 8026a90:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8026a94:	eba9 0700 	sub.w	r7, r9, r0
 8026a98:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8026a9c:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8026aa0:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8026aa4:	ebaa 0802 	sub.w	r8, sl, r2
 8026aa8:	4407      	add	r7, r0
 8026aaa:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8026aae:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8026ab2:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 8026ab6:	b23f      	sxth	r7, r7
 8026ab8:	4490      	add	r8, r2
 8026aba:	eba9 0707 	sub.w	r7, r9, r7
 8026abe:	fa0f f888 	sxth.w	r8, r8
 8026ac2:	ebaa 0808 	sub.w	r8, sl, r8
 8026ac6:	2f00      	cmp	r7, #0
 8026ac8:	bfb8      	it	lt
 8026aca:	427f      	neglt	r7, r7
 8026acc:	f1b8 0f00 	cmp.w	r8, #0
 8026ad0:	bfb8      	it	lt
 8026ad2:	f1c8 0800 	rsblt	r8, r8, #0
 8026ad6:	45bc      	cmp	ip, r7
 8026ad8:	bfcc      	ite	gt
 8026ada:	f10c 0701 	addgt.w	r7, ip, #1
 8026ade:	3701      	addle	r7, #1
 8026ae0:	4540      	cmp	r0, r8
 8026ae2:	bfc8      	it	gt
 8026ae4:	f100 0801 	addgt.w	r8, r0, #1
 8026ae8:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8026aec:	f100 0001 	add.w	r0, r0, #1
 8026af0:	ea4f 0060 	mov.w	r0, r0, asr #1
 8026af4:	f04f 0202 	mov.w	r2, #2
 8026af8:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8026afc:	fb91 f1f2 	sdiv	r1, r1, r2
 8026b00:	eba3 0301 	sub.w	r3, r3, r1
 8026b04:	bfd8      	it	le
 8026b06:	f108 0801 	addle.w	r8, r8, #1
 8026b0a:	9201      	str	r2, [sp, #4]
 8026b0c:	930d      	str	r3, [sp, #52]	; 0x34
 8026b0e:	f7ea fcc9 	bl	80114a4 <_ZN8touchgfx7CWRUtil4sineEi>
 8026b12:	a92a      	add	r1, sp, #168	; 0xa8
 8026b14:	fb08 f808 	mul.w	r8, r8, r8
 8026b18:	f841 0d70 	str.w	r0, [r1, #-112]!
 8026b1c:	a80d      	add	r0, sp, #52	; 0x34
 8026b1e:	f7ea fba9 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b22:	fb07 8707 	mla	r7, r7, r7, r8
 8026b26:	f04f 0c20 	mov.w	ip, #32
 8026b2a:	fb90 f0fc 	sdiv	r0, r0, ip
 8026b2e:	4340      	muls	r0, r0
 8026b30:	4287      	cmp	r7, r0
 8026b32:	9a01      	ldr	r2, [sp, #4]
 8026b34:	da04      	bge.n	8026b40 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 8026b36:	2401      	movs	r4, #1
 8026b38:	4620      	mov	r0, r4
 8026b3a:	b02b      	add	sp, #172	; 0xac
 8026b3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b40:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8026b42:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8026b44:	fb91 f3f2 	sdiv	r3, r1, r2
 8026b48:	4403      	add	r3, r0
 8026b4a:	fb93 f3fc 	sdiv	r3, r3, ip
 8026b4e:	f9bb 1000 	ldrsh.w	r1, [fp]
 8026b52:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8026b56:	440a      	add	r2, r1
 8026b58:	b212      	sxth	r2, r2
 8026b5a:	454a      	cmp	r2, r9
 8026b5c:	bfa8      	it	ge
 8026b5e:	464a      	movge	r2, r9
 8026b60:	428a      	cmp	r2, r1
 8026b62:	bfac      	ite	ge
 8026b64:	eba9 0902 	subge.w	r9, r9, r2
 8026b68:	eba9 0901 	sublt.w	r9, r9, r1
 8026b6c:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8026b70:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8026b74:	440a      	add	r2, r1
 8026b76:	b212      	sxth	r2, r2
 8026b78:	4552      	cmp	r2, sl
 8026b7a:	bfa8      	it	ge
 8026b7c:	4652      	movge	r2, sl
 8026b7e:	428a      	cmp	r2, r1
 8026b80:	bfac      	ite	ge
 8026b82:	ebaa 0a02 	subge.w	sl, sl, r2
 8026b86:	ebaa 0a01 	sublt.w	sl, sl, r1
 8026b8a:	3301      	adds	r3, #1
 8026b8c:	fb0a fa0a 	mul.w	sl, sl, sl
 8026b90:	fb09 a909 	mla	r9, r9, r9, sl
 8026b94:	435b      	muls	r3, r3
 8026b96:	4599      	cmp	r9, r3
 8026b98:	dccd      	bgt.n	8026b36 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8026b9a:	465a      	mov	r2, fp
 8026b9c:	4621      	mov	r1, r4
 8026b9e:	a80e      	add	r0, sp, #56	; 0x38
 8026ba0:	f7ff faae 	bl	8026100 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8026ba4:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8026ba6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026ba8:	9209      	str	r2, [sp, #36]	; 0x24
 8026baa:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8026bae:	930a      	str	r3, [sp, #40]	; 0x28
 8026bb0:	dd07      	ble.n	8026bc2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8026bb2:	2102      	movs	r1, #2
 8026bb4:	fb93 f3f1 	sdiv	r3, r3, r1
 8026bb8:	4413      	add	r3, r2
 8026bba:	930a      	str	r3, [sp, #40]	; 0x28
 8026bbc:	fb93 f3f1 	sdiv	r3, r3, r1
 8026bc0:	9309      	str	r3, [sp, #36]	; 0x24
 8026bc2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026bc6:	4630      	mov	r0, r6
 8026bc8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026bcc:	930b      	str	r3, [sp, #44]	; 0x2c
 8026bce:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8026bd2:	f7ea fc87 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026bd6:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8026bda:	f04f 0a02 	mov.w	sl, #2
 8026bde:	f849 0d74 	str.w	r0, [r9, #-116]!
 8026be2:	a80b      	add	r0, sp, #44	; 0x2c
 8026be4:	4649      	mov	r1, r9
 8026be6:	f7ea fb45 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026bec:	fb90 f0fa 	sdiv	r0, r0, sl
 8026bf0:	eb00 0b03 	add.w	fp, r0, r3
 8026bf4:	4630      	mov	r0, r6
 8026bf6:	f7ff fcc7 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026bfa:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 8026bfe:	017f      	lsls	r7, r7, #5
 8026c00:	f848 0d78 	str.w	r0, [r8, #-120]!
 8026c04:	a80b      	add	r0, sp, #44	; 0x2c
 8026c06:	4641      	mov	r1, r8
 8026c08:	f7ea fb34 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c0c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026c0e:	fb90 f0fa 	sdiv	r0, r0, sl
 8026c12:	4659      	mov	r1, fp
 8026c14:	1a12      	subs	r2, r2, r0
 8026c16:	a80e      	add	r0, sp, #56	; 0x38
 8026c18:	f7ff fbf2 	bl	8026400 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8026c1c:	f106 0a20 	add.w	sl, r6, #32
 8026c20:	bb67      	cbnz	r7, 8026c7c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 8026c22:	46b3      	mov	fp, r6
 8026c24:	45aa      	cmp	sl, r5
 8026c26:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026c28:	dc33      	bgt.n	8026c92 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 8026c2a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026c2c:	4650      	mov	r0, sl
 8026c2e:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8026c32:	920b      	str	r2, [sp, #44]	; 0x2c
 8026c34:	f7ea fc56 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026c38:	4641      	mov	r1, r8
 8026c3a:	900c      	str	r0, [sp, #48]	; 0x30
 8026c3c:	a80b      	add	r0, sp, #44	; 0x2c
 8026c3e:	f7ea fb19 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c42:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8026c44:	2302      	movs	r3, #2
 8026c46:	fb90 f0f3 	sdiv	r0, r0, r3
 8026c4a:	eb00 0b02 	add.w	fp, r0, r2
 8026c4e:	4650      	mov	r0, sl
 8026c50:	f7ff fc9a 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026c54:	4649      	mov	r1, r9
 8026c56:	900d      	str	r0, [sp, #52]	; 0x34
 8026c58:	a80b      	add	r0, sp, #44	; 0x2c
 8026c5a:	f7ea fb0b 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c5e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026c60:	2302      	movs	r3, #2
 8026c62:	4659      	mov	r1, fp
 8026c64:	fb90 f0f3 	sdiv	r0, r0, r3
 8026c68:	1a12      	subs	r2, r2, r0
 8026c6a:	a80e      	add	r0, sp, #56	; 0x38
 8026c6c:	46d3      	mov	fp, sl
 8026c6e:	f7ff fc14 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026c72:	44ba      	add	sl, r7
 8026c74:	e7d6      	b.n	8026c24 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8026c76:	fb93 f3f2 	sdiv	r3, r3, r2
 8026c7a:	e768      	b.n	8026b4e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8026c7c:	fb9a f2f7 	sdiv	r2, sl, r7
 8026c80:	fb07 a212 	mls	r2, r7, r2, sl
 8026c84:	1aba      	subs	r2, r7, r2
 8026c86:	fb92 f1f7 	sdiv	r1, r2, r7
 8026c8a:	fb07 2211 	mls	r2, r7, r1, r2
 8026c8e:	4492      	add	sl, r2
 8026c90:	e7c7      	b.n	8026c22 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8026c92:	45ab      	cmp	fp, r5
 8026c94:	da23      	bge.n	8026cde <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8026c96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026c98:	4628      	mov	r0, r5
 8026c9a:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8026c9e:	920b      	str	r2, [sp, #44]	; 0x2c
 8026ca0:	f7ea fc20 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026ca4:	4641      	mov	r1, r8
 8026ca6:	900c      	str	r0, [sp, #48]	; 0x30
 8026ca8:	a80b      	add	r0, sp, #44	; 0x2c
 8026caa:	f7ea fae3 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026cae:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026cb0:	f04f 0a02 	mov.w	sl, #2
 8026cb4:	fb90 f0fa 	sdiv	r0, r0, sl
 8026cb8:	4403      	add	r3, r0
 8026cba:	4628      	mov	r0, r5
 8026cbc:	9301      	str	r3, [sp, #4]
 8026cbe:	f7ff fc63 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026cc2:	4649      	mov	r1, r9
 8026cc4:	900d      	str	r0, [sp, #52]	; 0x34
 8026cc6:	a80b      	add	r0, sp, #44	; 0x2c
 8026cc8:	f7ea fad4 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ccc:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026cce:	9b01      	ldr	r3, [sp, #4]
 8026cd0:	fb90 f0fa 	sdiv	r0, r0, sl
 8026cd4:	4619      	mov	r1, r3
 8026cd6:	1a12      	subs	r2, r2, r0
 8026cd8:	a80e      	add	r0, sp, #56	; 0x38
 8026cda:	f7ff fbde 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026cde:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026ce0:	b99b      	cbnz	r3, 8026d0a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8026ce2:	1bad      	subs	r5, r5, r6
 8026ce4:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8026ce8:	da04      	bge.n	8026cf4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026cea:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8026cee:	a80e      	add	r0, sp, #56	; 0x38
 8026cf0:	f7ff fbd3 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026cf4:	21ff      	movs	r1, #255	; 0xff
 8026cf6:	a80e      	add	r0, sp, #56	; 0x38
 8026cf8:	f7ff fabe 	bl	8026278 <_ZN8touchgfx6Canvas6renderEh>
 8026cfc:	4604      	mov	r4, r0
 8026cfe:	4b8a      	ldr	r3, [pc, #552]	; (8026f28 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8026d00:	930e      	str	r3, [sp, #56]	; 0x38
 8026d02:	a816      	add	r0, sp, #88	; 0x58
 8026d04:	f7eb ff22 	bl	8012b4c <_ZN8touchgfx7OutlineD1Ev>
 8026d08:	e716      	b.n	8026b38 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8026d0a:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8026d0e:	429a      	cmp	r2, r3
 8026d10:	f0c0 8107 	bcc.w	8026f22 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8026d14:	1bab      	subs	r3, r5, r6
 8026d16:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8026d1a:	9301      	str	r3, [sp, #4]
 8026d1c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026d20:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8026d24:	da43      	bge.n	8026dae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026d26:	4628      	mov	r0, r5
 8026d28:	f7ea fbdc 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026d2c:	4649      	mov	r1, r9
 8026d2e:	900d      	str	r0, [sp, #52]	; 0x34
 8026d30:	a809      	add	r0, sp, #36	; 0x24
 8026d32:	f7ea fa9f 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d36:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026d38:	18c3      	adds	r3, r0, r3
 8026d3a:	4628      	mov	r0, r5
 8026d3c:	9303      	str	r3, [sp, #12]
 8026d3e:	f7ff fc23 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026d42:	4649      	mov	r1, r9
 8026d44:	900d      	str	r0, [sp, #52]	; 0x34
 8026d46:	a809      	add	r0, sp, #36	; 0x24
 8026d48:	f7ea fa94 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d4c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026d4e:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8026d52:	1a1b      	subs	r3, r3, r0
 8026d54:	9302      	str	r3, [sp, #8]
 8026d56:	9204      	str	r2, [sp, #16]
 8026d58:	eb0a 0305 	add.w	r3, sl, r5
 8026d5c:	9a04      	ldr	r2, [sp, #16]
 8026d5e:	4293      	cmp	r3, r2
 8026d60:	da25      	bge.n	8026dae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026d62:	4618      	mov	r0, r3
 8026d64:	9306      	str	r3, [sp, #24]
 8026d66:	f7ea fbbd 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026d6a:	4649      	mov	r1, r9
 8026d6c:	900d      	str	r0, [sp, #52]	; 0x34
 8026d6e:	a80a      	add	r0, sp, #40	; 0x28
 8026d70:	f7ea fa80 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d74:	9b03      	ldr	r3, [sp, #12]
 8026d76:	2202      	movs	r2, #2
 8026d78:	fb90 f0f2 	sdiv	r0, r0, r2
 8026d7c:	18c3      	adds	r3, r0, r3
 8026d7e:	9305      	str	r3, [sp, #20]
 8026d80:	9b06      	ldr	r3, [sp, #24]
 8026d82:	9207      	str	r2, [sp, #28]
 8026d84:	4618      	mov	r0, r3
 8026d86:	f7ff fbff 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026d8a:	a92a      	add	r1, sp, #168	; 0xa8
 8026d8c:	f841 0d78 	str.w	r0, [r1, #-120]!
 8026d90:	a80a      	add	r0, sp, #40	; 0x28
 8026d92:	f7ea fa6f 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026d96:	9b02      	ldr	r3, [sp, #8]
 8026d98:	9a07      	ldr	r2, [sp, #28]
 8026d9a:	9905      	ldr	r1, [sp, #20]
 8026d9c:	fb90 f2f2 	sdiv	r2, r0, r2
 8026da0:	a80e      	add	r0, sp, #56	; 0x38
 8026da2:	1a9a      	subs	r2, r3, r2
 8026da4:	f7ff fb79 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026da8:	9b06      	ldr	r3, [sp, #24]
 8026daa:	4453      	add	r3, sl
 8026dac:	e7d6      	b.n	8026d5c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8026dae:	45ab      	cmp	fp, r5
 8026db0:	da25      	bge.n	8026dfe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8026db2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026db6:	4628      	mov	r0, r5
 8026db8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026dbc:	930b      	str	r3, [sp, #44]	; 0x2c
 8026dbe:	f7ea fb91 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026dc2:	4641      	mov	r1, r8
 8026dc4:	900c      	str	r0, [sp, #48]	; 0x30
 8026dc6:	a80b      	add	r0, sp, #44	; 0x2c
 8026dc8:	f7ea fa54 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026dcc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026dce:	2202      	movs	r2, #2
 8026dd0:	fb90 f0f2 	sdiv	r0, r0, r2
 8026dd4:	eb00 0903 	add.w	r9, r0, r3
 8026dd8:	4628      	mov	r0, r5
 8026dda:	9202      	str	r2, [sp, #8]
 8026ddc:	f7ff fbd4 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026de0:	a92a      	add	r1, sp, #168	; 0xa8
 8026de2:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026de6:	a80b      	add	r0, sp, #44	; 0x2c
 8026de8:	f7ea fa44 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026dec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026dee:	9a02      	ldr	r2, [sp, #8]
 8026df0:	fb90 f2f2 	sdiv	r2, r0, r2
 8026df4:	4649      	mov	r1, r9
 8026df6:	1a9a      	subs	r2, r3, r2
 8026df8:	a80e      	add	r0, sp, #56	; 0x38
 8026dfa:	f7ff fb4e 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026dfe:	46d9      	mov	r9, fp
 8026e00:	2502      	movs	r5, #2
 8026e02:	45b1      	cmp	r9, r6
 8026e04:	db25      	blt.n	8026e52 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8026e06:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026e0a:	4648      	mov	r0, r9
 8026e0c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026e10:	930b      	str	r3, [sp, #44]	; 0x2c
 8026e12:	f7ea fb67 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026e16:	4641      	mov	r1, r8
 8026e18:	900c      	str	r0, [sp, #48]	; 0x30
 8026e1a:	a80b      	add	r0, sp, #44	; 0x2c
 8026e1c:	f7ea fa2a 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e20:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026e22:	fb90 f0f5 	sdiv	r0, r0, r5
 8026e26:	eb00 0b03 	add.w	fp, r0, r3
 8026e2a:	4648      	mov	r0, r9
 8026e2c:	f7ff fbac 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026e30:	a90d      	add	r1, sp, #52	; 0x34
 8026e32:	900d      	str	r0, [sp, #52]	; 0x34
 8026e34:	a80b      	add	r0, sp, #44	; 0x2c
 8026e36:	f7ea fa1d 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e3a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026e3c:	fb90 f0f5 	sdiv	r0, r0, r5
 8026e40:	4659      	mov	r1, fp
 8026e42:	1a12      	subs	r2, r2, r0
 8026e44:	a80e      	add	r0, sp, #56	; 0x38
 8026e46:	46cb      	mov	fp, r9
 8026e48:	f7ff fb27 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026e4c:	eba9 0907 	sub.w	r9, r9, r7
 8026e50:	e7d7      	b.n	8026e02 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8026e52:	455e      	cmp	r6, fp
 8026e54:	da22      	bge.n	8026e9c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8026e56:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026e5a:	4630      	mov	r0, r6
 8026e5c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026e60:	930b      	str	r3, [sp, #44]	; 0x2c
 8026e62:	f7ea fb3f 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026e66:	4641      	mov	r1, r8
 8026e68:	900c      	str	r0, [sp, #48]	; 0x30
 8026e6a:	a80b      	add	r0, sp, #44	; 0x2c
 8026e6c:	f7ea fa02 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e70:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8026e72:	2502      	movs	r5, #2
 8026e74:	fb90 f0f5 	sdiv	r0, r0, r5
 8026e78:	4407      	add	r7, r0
 8026e7a:	4630      	mov	r0, r6
 8026e7c:	f7ff fb84 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026e80:	a92a      	add	r1, sp, #168	; 0xa8
 8026e82:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026e86:	a80b      	add	r0, sp, #44	; 0x2c
 8026e88:	f7ea f9f4 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026e8c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026e8e:	fb90 f0f5 	sdiv	r0, r0, r5
 8026e92:	4639      	mov	r1, r7
 8026e94:	1a12      	subs	r2, r2, r0
 8026e96:	a80e      	add	r0, sp, #56	; 0x38
 8026e98:	f7ff faff 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026e9c:	9b01      	ldr	r3, [sp, #4]
 8026e9e:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026ea2:	f6bf af27 	bge.w	8026cf4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026ea6:	4630      	mov	r0, r6
 8026ea8:	f7ea fb1c 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026eac:	ad2a      	add	r5, sp, #168	; 0xa8
 8026eae:	f04f 0b02 	mov.w	fp, #2
 8026eb2:	f845 0d74 	str.w	r0, [r5, #-116]!
 8026eb6:	a809      	add	r0, sp, #36	; 0x24
 8026eb8:	4629      	mov	r1, r5
 8026eba:	f7ea f9db 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ebe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026ec0:	eb00 0903 	add.w	r9, r0, r3
 8026ec4:	4630      	mov	r0, r6
 8026ec6:	f7ff fb5f 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026eca:	4629      	mov	r1, r5
 8026ecc:	900d      	str	r0, [sp, #52]	; 0x34
 8026ece:	a809      	add	r0, sp, #36	; 0x24
 8026ed0:	f7ea f9d0 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ed4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026ed6:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8026eda:	eba3 0800 	sub.w	r8, r3, r0
 8026ede:	4454      	add	r4, sl
 8026ee0:	42a6      	cmp	r6, r4
 8026ee2:	f77f af07 	ble.w	8026cf4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026ee6:	4620      	mov	r0, r4
 8026ee8:	f7ea fafc 	bl	80114e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026eec:	4629      	mov	r1, r5
 8026eee:	900d      	str	r0, [sp, #52]	; 0x34
 8026ef0:	a80a      	add	r0, sp, #40	; 0x28
 8026ef2:	f7ea f9bf 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ef6:	fb90 f0fb 	sdiv	r0, r0, fp
 8026efa:	eb00 0709 	add.w	r7, r0, r9
 8026efe:	4620      	mov	r0, r4
 8026f00:	f7ff fb42 	bl	8026588 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026f04:	a90c      	add	r1, sp, #48	; 0x30
 8026f06:	900c      	str	r0, [sp, #48]	; 0x30
 8026f08:	a80a      	add	r0, sp, #40	; 0x28
 8026f0a:	f7ea f9b3 	bl	8011274 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026f0e:	4639      	mov	r1, r7
 8026f10:	fb90 f2fb 	sdiv	r2, r0, fp
 8026f14:	a80e      	add	r0, sp, #56	; 0x38
 8026f16:	eba8 0202 	sub.w	r2, r8, r2
 8026f1a:	f7ff fabe 	bl	802649a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026f1e:	4454      	add	r4, sl
 8026f20:	e7de      	b.n	8026ee0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8026f22:	2400      	movs	r4, #0
 8026f24:	e6eb      	b.n	8026cfe <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8026f26:	bf00      	nop
 8026f28:	0802e7b8 	.word	0x0802e7b8

08026f2c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8026f2c:	b570      	push	{r4, r5, r6, lr}
 8026f2e:	790b      	ldrb	r3, [r1, #4]
 8026f30:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026f34:	2b00      	cmp	r3, #0
 8026f36:	bf0c      	ite	eq
 8026f38:	2301      	moveq	r3, #1
 8026f3a:	2300      	movne	r3, #0
 8026f3c:	4604      	mov	r4, r0
 8026f3e:	460e      	mov	r6, r1
 8026f40:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8026f44:	d109      	bne.n	8026f5a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026f46:	b14d      	cbz	r5, 8026f5c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026f48:	7933      	ldrb	r3, [r6, #4]
 8026f4a:	2b01      	cmp	r3, #1
 8026f4c:	d10c      	bne.n	8026f68 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026f4e:	6823      	ldr	r3, [r4, #0]
 8026f50:	4620      	mov	r0, r4
 8026f52:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8026f54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026f58:	4718      	bx	r3
 8026f5a:	b12d      	cbz	r5, 8026f68 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026f5c:	6823      	ldr	r3, [r4, #0]
 8026f5e:	4620      	mov	r0, r4
 8026f60:	695b      	ldr	r3, [r3, #20]
 8026f62:	4798      	blx	r3
 8026f64:	2d00      	cmp	r5, #0
 8026f66:	d1ef      	bne.n	8026f48 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8026f68:	bd70      	pop	{r4, r5, r6, pc}

08026f6a <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8026f6a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8026f6e:	4770      	bx	lr

08026f70 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8026f70:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8026f74:	4770      	bx	lr

08026f76 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8026f76:	6802      	ldr	r2, [r0, #0]
 8026f78:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026f7c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026f7e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026f82:	4710      	bx	r2

08026f84 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8026f84:	6802      	ldr	r2, [r0, #0]
 8026f86:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026f8a:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026f8c:	eef0 0a40 	vmov.f32	s1, s0
 8026f90:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026f94:	4710      	bx	r2

08026f96 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8026f96:	6802      	ldr	r2, [r0, #0]
 8026f98:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026f9c:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026f9e:	eeb0 1a40 	vmov.f32	s2, s0
 8026fa2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026fa6:	4710      	bx	r2

08026fa8 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8026fa8:	6802      	ldr	r2, [r0, #0]
 8026faa:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026fae:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026fb0:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026fb4:	4710      	bx	r2

08026fb6 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8026fb6:	6802      	ldr	r2, [r0, #0]
 8026fb8:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026fbc:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026fbe:	eef0 0a40 	vmov.f32	s1, s0
 8026fc2:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026fc6:	4710      	bx	r2

08026fc8 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8026fc8:	6802      	ldr	r2, [r0, #0]
 8026fca:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026fce:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026fd0:	eeb0 1a40 	vmov.f32	s2, s0
 8026fd4:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026fd8:	4710      	bx	r2

08026fda <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8026fda:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026fde:	4770      	bx	lr

08026fe0 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8026fe0:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8026fe4:	4770      	bx	lr

08026fe6 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8026fe6:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8026fea:	4770      	bx	lr

08026fec <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8026fec:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8026ff0:	4770      	bx	lr

08026ff2 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8026ff2:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8026ff6:	4770      	bx	lr

08026ff8 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8026ff8:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8026ffc:	4770      	bx	lr

08026ffe <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8026ffe:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8027002:	4770      	bx	lr

08027004 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8027004:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8027008:	4770      	bx	lr

0802700a <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 802700a:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 802700e:	4770      	bx	lr

08027010 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8027010:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8027014:	4770      	bx	lr

08027016 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8027016:	ee07 2a90 	vmov	s15, r2
 802701a:	6803      	ldr	r3, [r0, #0]
 802701c:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8027020:	ee07 1a90 	vmov	s15, r1
 8027024:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8027028:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802702c:	4718      	bx	r3

0802702e <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 802702e:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8027032:	4770      	bx	lr

08027034 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8027034:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8027038:	4770      	bx	lr

0802703a <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 802703a:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 802703e:	4770      	bx	lr

08027040 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8027040:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8027044:	4770      	bx	lr

08027046 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8027046:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 802704a:	4770      	bx	lr

0802704c <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 802704c:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8027050:	4770      	bx	lr

08027052 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8027052:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8027056:	4770      	bx	lr

08027058 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8027058:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 802705c:	4770      	bx	lr

0802705e <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 802705e:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8027062:	4770      	bx	lr

08027064 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8027064:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8027068:	4770      	bx	lr

0802706a <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 802706a:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 802706e:	4770      	bx	lr

08027070 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8027070:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8027074:	4770      	bx	lr

08027076 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8027076:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 802707a:	4770      	bx	lr

0802707c <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 802707c:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8027080:	4770      	bx	lr

08027082 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8027082:	b510      	push	{r4, lr}
 8027084:	ed2d 8b04 	vpush	{d8-d9}
 8027088:	6803      	ldr	r3, [r0, #0]
 802708a:	4604      	mov	r4, r0
 802708c:	699b      	ldr	r3, [r3, #24]
 802708e:	eeb0 8a40 	vmov.f32	s16, s0
 8027092:	eef0 8a60 	vmov.f32	s17, s1
 8027096:	eeb0 9a41 	vmov.f32	s18, s2
 802709a:	4798      	blx	r3
 802709c:	6823      	ldr	r3, [r4, #0]
 802709e:	4620      	mov	r0, r4
 80270a0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80270a2:	eeb0 1a49 	vmov.f32	s2, s18
 80270a6:	eef0 0a68 	vmov.f32	s1, s17
 80270aa:	eeb0 0a48 	vmov.f32	s0, s16
 80270ae:	4798      	blx	r3
 80270b0:	ecbd 8b04 	vpop	{d8-d9}
 80270b4:	6823      	ldr	r3, [r4, #0]
 80270b6:	4620      	mov	r0, r4
 80270b8:	699b      	ldr	r3, [r3, #24]
 80270ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80270be:	4718      	bx	r3

080270c0 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 80270c0:	b510      	push	{r4, lr}
 80270c2:	ed2d 8b02 	vpush	{d8}
 80270c6:	6803      	ldr	r3, [r0, #0]
 80270c8:	4604      	mov	r4, r0
 80270ca:	699b      	ldr	r3, [r3, #24]
 80270cc:	eeb0 8a40 	vmov.f32	s16, s0
 80270d0:	4798      	blx	r3
 80270d2:	6823      	ldr	r3, [r4, #0]
 80270d4:	4620      	mov	r0, r4
 80270d6:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80270da:	eeb0 0a48 	vmov.f32	s0, s16
 80270de:	4798      	blx	r3
 80270e0:	ecbd 8b02 	vpop	{d8}
 80270e4:	6823      	ldr	r3, [r4, #0]
 80270e6:	4620      	mov	r0, r4
 80270e8:	699b      	ldr	r3, [r3, #24]
 80270ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80270ee:	4718      	bx	r3

080270f0 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 80270f0:	2200      	movs	r2, #0
 80270f2:	8002      	strh	r2, [r0, #0]
 80270f4:	8042      	strh	r2, [r0, #2]
 80270f6:	8082      	strh	r2, [r0, #4]
 80270f8:	80c2      	strh	r2, [r0, #6]
 80270fa:	4770      	bx	lr

080270fc <_ZN8touchgfx13TextureMapperD1Ev>:
 80270fc:	4770      	bx	lr

080270fe <_ZN8touchgfx13TextureMapperD0Ev>:
 80270fe:	b510      	push	{r4, lr}
 8027100:	2190      	movs	r1, #144	; 0x90
 8027102:	4604      	mov	r4, r0
 8027104:	f001 ff3f 	bl	8028f86 <_ZdlPvj>
 8027108:	4620      	mov	r0, r4
 802710a:	bd10      	pop	{r4, pc}

0802710c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 802710c:	b538      	push	{r3, r4, r5, lr}
 802710e:	2500      	movs	r5, #0
 8027110:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8027114:	2301      	movs	r3, #1
 8027116:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 802711a:	4b1f      	ldr	r3, [pc, #124]	; (8027198 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 802711c:	8085      	strh	r5, [r0, #4]
 802711e:	80c5      	strh	r5, [r0, #6]
 8027120:	8105      	strh	r5, [r0, #8]
 8027122:	8145      	strh	r5, [r0, #10]
 8027124:	8185      	strh	r5, [r0, #12]
 8027126:	81c5      	strh	r5, [r0, #14]
 8027128:	8205      	strh	r5, [r0, #16]
 802712a:	8245      	strh	r5, [r0, #18]
 802712c:	61c5      	str	r5, [r0, #28]
 802712e:	8405      	strh	r5, [r0, #32]
 8027130:	8445      	strh	r5, [r0, #34]	; 0x22
 8027132:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8027136:	6003      	str	r3, [r0, #0]
 8027138:	880b      	ldrh	r3, [r1, #0]
 802713a:	84c3      	strh	r3, [r0, #38]	; 0x26
 802713c:	23ff      	movs	r3, #255	; 0xff
 802713e:	4604      	mov	r4, r0
 8027140:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8027144:	f7eb fb93 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027148:	4b14      	ldr	r3, [pc, #80]	; (802719c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 802714a:	6023      	str	r3, [r4, #0]
 802714c:	2300      	movs	r3, #0
 802714e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8027152:	4913      	ldr	r1, [pc, #76]	; (80271a0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8027154:	62e3      	str	r3, [r4, #44]	; 0x2c
 8027156:	6323      	str	r3, [r4, #48]	; 0x30
 8027158:	6363      	str	r3, [r4, #52]	; 0x34
 802715a:	63a3      	str	r3, [r4, #56]	; 0x38
 802715c:	63e3      	str	r3, [r4, #60]	; 0x3c
 802715e:	6463      	str	r3, [r4, #68]	; 0x44
 8027160:	64a3      	str	r3, [r4, #72]	; 0x48
 8027162:	6523      	str	r3, [r4, #80]	; 0x50
 8027164:	6563      	str	r3, [r4, #84]	; 0x54
 8027166:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027168:	6623      	str	r3, [r4, #96]	; 0x60
 802716a:	66a3      	str	r3, [r4, #104]	; 0x68
 802716c:	66e3      	str	r3, [r4, #108]	; 0x6c
 802716e:	6763      	str	r3, [r4, #116]	; 0x74
 8027170:	67a3      	str	r3, [r4, #120]	; 0x78
 8027172:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8027176:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 802717a:	230c      	movs	r3, #12
 802717c:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8027180:	6422      	str	r2, [r4, #64]	; 0x40
 8027182:	64e1      	str	r1, [r4, #76]	; 0x4c
 8027184:	65a1      	str	r1, [r4, #88]	; 0x58
 8027186:	6662      	str	r2, [r4, #100]	; 0x64
 8027188:	6722      	str	r2, [r4, #112]	; 0x70
 802718a:	67e2      	str	r2, [r4, #124]	; 0x7c
 802718c:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8027190:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8027194:	4620      	mov	r0, r4
 8027196:	bd38      	pop	{r3, r4, r5, pc}
 8027198:	0802e260 	.word	0x0802e260
 802719c:	0802e844 	.word	0x0802e844
 80271a0:	447a0000 	.word	0x447a0000

080271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 80271a4:	b570      	push	{r4, r5, r6, lr}
 80271a6:	ed2d 8b04 	vpush	{d8-d9}
 80271aa:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 80271ae:	add0      	add	r5, sp, #832	; 0x340
 80271b0:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80271b2:	f825 3d40 	strh.w	r3, [r5, #-64]!
 80271b6:	4604      	mov	r4, r0
 80271b8:	4628      	mov	r0, r5
 80271ba:	f7f1 fa7f 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80271be:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80271c0:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 80271c4:	4606      	mov	r6, r0
 80271c6:	4628      	mov	r0, r5
 80271c8:	f7f1 faac 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80271cc:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80271d0:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 80271d4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80271d6:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 80271da:	9312      	str	r3, [sp, #72]	; 0x48
 80271dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80271e0:	1c72      	adds	r2, r6, #1
 80271e2:	3001      	adds	r0, #1
 80271e4:	ee76 5ac7 	vsub.f32	s11, s13, s14
 80271e8:	ee07 2a90 	vmov	s15, r2
 80271ec:	ee06 0a90 	vmov	s13, r0
 80271f0:	ee36 6a47 	vsub.f32	s12, s12, s14
 80271f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80271f8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80271fc:	ee77 7a86 	vadd.f32	s15, s15, s12
 8027200:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8027204:	9316      	str	r3, [sp, #88]	; 0x58
 8027206:	931a      	str	r3, [sp, #104]	; 0x68
 8027208:	931e      	str	r3, [sp, #120]	; 0x78
 802720a:	2300      	movs	r3, #0
 802720c:	9320      	str	r3, [sp, #128]	; 0x80
 802720e:	9321      	str	r3, [sp, #132]	; 0x84
 8027210:	9322      	str	r3, [sp, #136]	; 0x88
 8027212:	9324      	str	r3, [sp, #144]	; 0x90
 8027214:	9325      	str	r3, [sp, #148]	; 0x94
 8027216:	9326      	str	r3, [sp, #152]	; 0x98
 8027218:	9328      	str	r3, [sp, #160]	; 0xa0
 802721a:	9329      	str	r3, [sp, #164]	; 0xa4
 802721c:	932a      	str	r3, [sp, #168]	; 0xa8
 802721e:	932c      	str	r3, [sp, #176]	; 0xb0
 8027220:	932d      	str	r3, [sp, #180]	; 0xb4
 8027222:	932e      	str	r3, [sp, #184]	; 0xb8
 8027224:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8027228:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 802722c:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027230:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027234:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8027238:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 802723c:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8027240:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8027244:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8027248:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 802724c:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8027250:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8027254:	a830      	add	r0, sp, #192	; 0xc0
 8027256:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 802725a:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 802725e:	f000 fc43 	bl	8027ae8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027262:	eeb1 0a49 	vneg.f32	s0, s18
 8027266:	a830      	add	r0, sp, #192	; 0xc0
 8027268:	f000 fd12 	bl	8027c90 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802726c:	eeb1 0a68 	vneg.f32	s0, s17
 8027270:	f000 fd1c 	bl	8027cac <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027274:	eeb1 0a48 	vneg.f32	s0, s16
 8027278:	f000 fd27 	bl	8027cca <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 802727c:	a840      	add	r0, sp, #256	; 0x100
 802727e:	f000 fc33 	bl	8027ae8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027282:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8027286:	a840      	add	r0, sp, #256	; 0x100
 8027288:	f000 fc86 	bl	8027b98 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 802728c:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8027290:	f000 fcac 	bl	8027bec <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8027294:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8027298:	f000 fcd1 	bl	8027c3e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 802729c:	a850      	add	r0, sp, #320	; 0x140
 802729e:	f000 fc23 	bl	8027ae8 <_ZN8touchgfx9Matrix4x4C1Ev>
 80272a2:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80272a6:	a850      	add	r0, sp, #320	; 0x140
 80272a8:	f000 fd1e 	bl	8027ce8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 80272ac:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80272b0:	f000 fd26 	bl	8027d00 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 80272b4:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 80272b8:	f000 fd2f 	bl	8027d1a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 80272bc:	a860      	add	r0, sp, #384	; 0x180
 80272be:	f000 fc13 	bl	8027ae8 <_ZN8touchgfx9Matrix4x4C1Ev>
 80272c2:	eeb0 0a49 	vmov.f32	s0, s18
 80272c6:	a860      	add	r0, sp, #384	; 0x180
 80272c8:	f000 fce2 	bl	8027c90 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80272cc:	eeb0 0a68 	vmov.f32	s0, s17
 80272d0:	f000 fcec 	bl	8027cac <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80272d4:	eeb0 0a48 	vmov.f32	s0, s16
 80272d8:	f000 fcf7 	bl	8027cca <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80272dc:	aa50      	add	r2, sp, #320	; 0x140
 80272de:	a960      	add	r1, sp, #384	; 0x180
 80272e0:	a8b0      	add	r0, sp, #704	; 0x2c0
 80272e2:	f000 fc1b 	bl	8027b1c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80272e6:	4628      	mov	r0, r5
 80272e8:	aa40      	add	r2, sp, #256	; 0x100
 80272ea:	a9b0      	add	r1, sp, #704	; 0x2c0
 80272ec:	f000 fc16 	bl	8027b1c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80272f0:	4629      	mov	r1, r5
 80272f2:	aa30      	add	r2, sp, #192	; 0xc0
 80272f4:	a870      	add	r0, sp, #448	; 0x1c0
 80272f6:	f000 fc11 	bl	8027b1c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80272fa:	a880      	add	r0, sp, #512	; 0x200
 80272fc:	f000 fbf4 	bl	8027ae8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027300:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8027304:	a880      	add	r0, sp, #512	; 0x200
 8027306:	eeb1 0a40 	vneg.f32	s0, s0
 802730a:	f000 fcc1 	bl	8027c90 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802730e:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8027312:	a880      	add	r0, sp, #512	; 0x200
 8027314:	eeb1 0a40 	vneg.f32	s0, s0
 8027318:	f000 fcc8 	bl	8027cac <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802731c:	a890      	add	r0, sp, #576	; 0x240
 802731e:	f000 fbe3 	bl	8027ae8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027322:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8027326:	a890      	add	r0, sp, #576	; 0x240
 8027328:	f000 fc26 	bl	8027b78 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 802732c:	a8a0      	add	r0, sp, #640	; 0x280
 802732e:	f000 fbdb 	bl	8027ae8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027332:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8027336:	a8a0      	add	r0, sp, #640	; 0x280
 8027338:	f000 fcaa 	bl	8027c90 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802733c:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8027340:	f000 fcb4 	bl	8027cac <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8027344:	aa90      	add	r2, sp, #576	; 0x240
 8027346:	a9a0      	add	r1, sp, #640	; 0x280
 8027348:	a8b0      	add	r0, sp, #704	; 0x2c0
 802734a:	f000 fbe7 	bl	8027b1c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802734e:	4628      	mov	r0, r5
 8027350:	aa80      	add	r2, sp, #512	; 0x200
 8027352:	a9b0      	add	r1, sp, #704	; 0x2c0
 8027354:	f000 fbe2 	bl	8027b1c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027358:	4629      	mov	r1, r5
 802735a:	aa70      	add	r2, sp, #448	; 0x1c0
 802735c:	4668      	mov	r0, sp
 802735e:	466d      	mov	r5, sp
 8027360:	f000 fbdc 	bl	8027b1c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027364:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027366:	ae70      	add	r6, sp, #448	; 0x1c0
 8027368:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802736a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802736c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802736e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027370:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027372:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8027376:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 802737a:	2500      	movs	r5, #0
 802737c:	0129      	lsls	r1, r5, #4
 802737e:	ab20      	add	r3, sp, #128	; 0x80
 8027380:	185e      	adds	r6, r3, r1
 8027382:	ab10      	add	r3, sp, #64	; 0x40
 8027384:	4419      	add	r1, r3
 8027386:	a870      	add	r0, sp, #448	; 0x1c0
 8027388:	f000 fb7e 	bl	8027a88 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 802738c:	3501      	adds	r5, #1
 802738e:	2d04      	cmp	r5, #4
 8027390:	ed86 0a00 	vstr	s0, [r6]
 8027394:	edc6 0a01 	vstr	s1, [r6, #4]
 8027398:	ed86 1a02 	vstr	s2, [r6, #8]
 802739c:	edc6 1a03 	vstr	s3, [r6, #12]
 80273a0:	d1ec      	bne.n	802737c <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80273a2:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 80273a6:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 80273aa:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 80273ae:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80273b2:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 80273b6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80273ba:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 80273be:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 80273c2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80273c6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80273ca:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 80273ce:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80273d2:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 80273d6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80273da:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 80273de:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80273e2:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 80273e6:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 80273ea:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80273ee:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80273f2:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 80273f6:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 80273fa:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80273fe:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027402:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8027406:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802740a:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802740e:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8027412:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027416:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802741a:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802741e:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8027422:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8027426:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802742a:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802742e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027432:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8027436:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 802743a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802743e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8027442:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8027446:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 802744a:	ecbd 8b04 	vpop	{d8-d9}
 802744e:	bd70      	pop	{r4, r5, r6, pc}

08027450 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8027450:	b510      	push	{r4, lr}
 8027452:	4604      	mov	r4, r0
 8027454:	f7eb fa0b 	bl	801286e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027458:	4620      	mov	r0, r4
 802745a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802745e:	f7ff bea1 	b.w	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027462 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8027462:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8027466:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 802746a:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 802746e:	f7ff be99 	b.w	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027472 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8027472:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8027476:	f7ff be95 	b.w	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802747a <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 802747a:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 802747e:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8027482:	f7ff be8f 	b.w	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027486 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8027486:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802748a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 802748e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027492:	bfd8      	it	le
 8027494:	eeb0 0a67 	vmovle.f32	s0, s15
 8027498:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 802749c:	f7ff be82 	b.w	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080274a0 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80274a0:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 80274a4:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 80274a8:	f7ff be7c 	b.w	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080274ac <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 80274ac:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80274b0:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80274b4:	f7ff be76 	b.w	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080274b8 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 80274b8:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 80274bc:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 80274c0:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 80274c4:	f7ff be6e 	b.w	80271a4 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080274c8 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 80274c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80274cc:	ed2d 8b04 	vpush	{d8-d9}
 80274d0:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 80274d4:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 80274d8:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 80274dc:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 80274e0:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80274e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80274e8:	bf54      	ite	pl
 80274ea:	eeb0 0a69 	vmovpl.f32	s0, s19
 80274ee:	eeb0 0a48 	vmovmi.f32	s0, s16
 80274f2:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80274f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80274fa:	bfd8      	it	le
 80274fc:	eeb0 0a49 	vmovle.f32	s0, s18
 8027500:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027504:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027508:	bfd8      	it	le
 802750a:	eeb0 0a68 	vmovle.f32	s0, s17
 802750e:	460c      	mov	r4, r1
 8027510:	4607      	mov	r7, r0
 8027512:	f001 fe4f 	bl	80291b4 <floorf>
 8027516:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802751a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802751e:	bf58      	it	pl
 8027520:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8027524:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027528:	bf56      	itet	pl
 802752a:	ee10 3a10 	vmovpl	r3, s0
 802752e:	2600      	movmi	r6, #0
 8027530:	b21e      	sxthpl	r6, r3
 8027532:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027536:	bfd8      	it	le
 8027538:	eeb0 8a69 	vmovle.f32	s16, s19
 802753c:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027544:	bf58      	it	pl
 8027546:	eeb0 8a49 	vmovpl.f32	s16, s18
 802754a:	eef4 8ac8 	vcmpe.f32	s17, s16
 802754e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027552:	bf54      	ite	pl
 8027554:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027558:	eeb0 0a48 	vmovmi.f32	s0, s16
 802755c:	f001 fde8 	bl	8029130 <ceilf>
 8027560:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8027564:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8027568:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 802756c:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8027570:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8027574:	ee07 8a90 	vmov	s15, r8
 8027578:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802757c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027584:	bfd8      	it	le
 8027586:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802758a:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802758e:	bfdc      	itt	le
 8027590:	ee10 3a10 	vmovle	r3, s0
 8027594:	fa0f f883 	sxthle.w	r8, r3
 8027598:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802759c:	bf54      	ite	pl
 802759e:	eeb0 0a69 	vmovpl.f32	s0, s19
 80275a2:	eeb0 0a48 	vmovmi.f32	s0, s16
 80275a6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 80275aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275ae:	bfd8      	it	le
 80275b0:	eeb0 0a49 	vmovle.f32	s0, s18
 80275b4:	eef4 8ac0 	vcmpe.f32	s17, s0
 80275b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275bc:	bfd8      	it	le
 80275be:	eeb0 0a68 	vmovle.f32	s0, s17
 80275c2:	f001 fdf7 	bl	80291b4 <floorf>
 80275c6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80275ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275ce:	bf58      	it	pl
 80275d0:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80275d4:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80275d8:	bf56      	itet	pl
 80275da:	ee10 3a10 	vmovpl	r3, s0
 80275de:	2500      	movmi	r5, #0
 80275e0:	b21d      	sxthpl	r5, r3
 80275e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275e6:	bfd8      	it	le
 80275e8:	eeb0 8a69 	vmovle.f32	s16, s19
 80275ec:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80275f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80275f4:	bf58      	it	pl
 80275f6:	eeb0 8a49 	vmovpl.f32	s16, s18
 80275fa:	eef4 8ac8 	vcmpe.f32	s17, s16
 80275fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027602:	bf54      	ite	pl
 8027604:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027608:	eeb0 0a48 	vmovmi.f32	s0, s16
 802760c:	f001 fd90 	bl	8029130 <ceilf>
 8027610:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8027614:	803e      	strh	r6, [r7, #0]
 8027616:	ee07 3a90 	vmov	s15, r3
 802761a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802761e:	807d      	strh	r5, [r7, #2]
 8027620:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027624:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027628:	bfd8      	it	le
 802762a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802762e:	eba8 0606 	sub.w	r6, r8, r6
 8027632:	bfdc      	itt	le
 8027634:	ee10 3a10 	vmovle	r3, s0
 8027638:	b21b      	sxthle	r3, r3
 802763a:	1b5d      	subs	r5, r3, r5
 802763c:	80be      	strh	r6, [r7, #4]
 802763e:	80fd      	strh	r5, [r7, #6]
 8027640:	ecbd 8b04 	vpop	{d8-d9}
 8027644:	4638      	mov	r0, r7
 8027646:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0802764a <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 802764a:	b513      	push	{r0, r1, r4, lr}
 802764c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027650:	4604      	mov	r4, r0
 8027652:	b143      	cbz	r3, 8027666 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8027654:	4601      	mov	r1, r0
 8027656:	4668      	mov	r0, sp
 8027658:	f7ff ff36 	bl	80274c8 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 802765c:	6823      	ldr	r3, [r4, #0]
 802765e:	4669      	mov	r1, sp
 8027660:	691b      	ldr	r3, [r3, #16]
 8027662:	4620      	mov	r0, r4
 8027664:	4798      	blx	r3
 8027666:	b002      	add	sp, #8
 8027668:	bd10      	pop	{r4, pc}

0802766a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802766a:	4603      	mov	r3, r0
 802766c:	3026      	adds	r0, #38	; 0x26
 802766e:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8027672:	b90b      	cbnz	r3, 8027678 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8027674:	f7ef b82c 	b.w	80166d0 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8027678:	f7ef b83a 	b.w	80166f0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

0802767c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 802767c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027680:	ed2d 8b04 	vpush	{d8-d9}
 8027684:	4604      	mov	r4, r0
 8027686:	469b      	mov	fp, r3
 8027688:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 802768c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027690:	f9b1 6000 	ldrsh.w	r6, [r1]
 8027694:	8888      	ldrh	r0, [r1, #4]
 8027696:	b0b3      	sub	sp, #204	; 0xcc
 8027698:	4430      	add	r0, r6
 802769a:	b280      	uxth	r0, r0
 802769c:	9206      	str	r2, [sp, #24]
 802769e:	fa0f fe80 	sxth.w	lr, r0
 80276a2:	2200      	movs	r2, #0
 80276a4:	4596      	cmp	lr, r2
 80276a6:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 80276aa:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 80276ae:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 80276b2:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 80276b4:	9211      	str	r2, [sp, #68]	; 0x44
 80276b6:	f340 8129 	ble.w	802790c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80276ba:	45b4      	cmp	ip, r6
 80276bc:	f340 8126 	ble.w	802790c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80276c0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80276c4:	88ca      	ldrh	r2, [r1, #6]
 80276c6:	442a      	add	r2, r5
 80276c8:	b292      	uxth	r2, r2
 80276ca:	b211      	sxth	r1, r2
 80276cc:	2900      	cmp	r1, #0
 80276ce:	f340 811d 	ble.w	802790c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80276d2:	42ab      	cmp	r3, r5
 80276d4:	f340 811a 	ble.w	802790c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 80276d8:	45f4      	cmp	ip, lr
 80276da:	bfb8      	it	lt
 80276dc:	fa1f f08c 	uxthlt.w	r0, ip
 80276e0:	428b      	cmp	r3, r1
 80276e2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80276e6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80276ea:	bfb8      	it	lt
 80276ec:	b29a      	uxthlt	r2, r3
 80276ee:	1b80      	subs	r0, r0, r6
 80276f0:	1b52      	subs	r2, r2, r5
 80276f2:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80276f6:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80276fa:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80276fe:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 8027702:	ab11      	add	r3, sp, #68	; 0x44
 8027704:	e893 0003 	ldmia.w	r3, {r0, r1}
 8027708:	6822      	ldr	r2, [r4, #0]
 802770a:	9307      	str	r3, [sp, #28]
 802770c:	ad13      	add	r5, sp, #76	; 0x4c
 802770e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8027710:	e885 0003 	stmia.w	r5, {r0, r1}
 8027714:	4629      	mov	r1, r5
 8027716:	4620      	mov	r0, r4
 8027718:	4790      	blx	r2
 802771a:	4621      	mov	r1, r4
 802771c:	a815      	add	r0, sp, #84	; 0x54
 802771e:	f7ee ff33 	bl	8016588 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8027722:	a815      	add	r0, sp, #84	; 0x54
 8027724:	f7ed fbf8 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027728:	9b07      	ldr	r3, [sp, #28]
 802772a:	1d26      	adds	r6, r4, #4
 802772c:	4618      	mov	r0, r3
 802772e:	4631      	mov	r1, r6
 8027730:	f7ed fc36 	bl	8014fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027734:	4628      	mov	r0, r5
 8027736:	f104 0526 	add.w	r5, r4, #38	; 0x26
 802773a:	f7ed fbed 	bl	8014f18 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802773e:	4628      	mov	r0, r5
 8027740:	f7f1 f8a8 	bl	8018894 <_ZNK8touchgfx6Bitmap7getDataEv>
 8027744:	9007      	str	r0, [sp, #28]
 8027746:	2800      	cmp	r0, #0
 8027748:	f000 80db 	beq.w	8027902 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 802774c:	f8db 2000 	ldr.w	r2, [fp]
 8027750:	9209      	str	r2, [sp, #36]	; 0x24
 8027752:	f8db 2004 	ldr.w	r2, [fp, #4]
 8027756:	920a      	str	r2, [sp, #40]	; 0x28
 8027758:	f8db 2008 	ldr.w	r2, [fp, #8]
 802775c:	920b      	str	r2, [sp, #44]	; 0x2c
 802775e:	f8db 200c 	ldr.w	r2, [fp, #12]
 8027762:	920c      	str	r2, [sp, #48]	; 0x30
 8027764:	f8da 2000 	ldr.w	r2, [sl]
 8027768:	920d      	str	r2, [sp, #52]	; 0x34
 802776a:	f8da 2004 	ldr.w	r2, [sl, #4]
 802776e:	920e      	str	r2, [sp, #56]	; 0x38
 8027770:	f8da 2008 	ldr.w	r2, [sl, #8]
 8027774:	920f      	str	r2, [sp, #60]	; 0x3c
 8027776:	f8da 200c 	ldr.w	r2, [sl, #12]
 802777a:	9210      	str	r2, [sp, #64]	; 0x40
 802777c:	a90d      	add	r1, sp, #52	; 0x34
 802777e:	4632      	mov	r2, r6
 8027780:	a809      	add	r0, sp, #36	; 0x24
 8027782:	f7ed fbf1 	bl	8014f68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027786:	4632      	mov	r2, r6
 8027788:	a90e      	add	r1, sp, #56	; 0x38
 802778a:	a80a      	add	r0, sp, #40	; 0x28
 802778c:	f7ed fbec 	bl	8014f68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027790:	4632      	mov	r2, r6
 8027792:	a90f      	add	r1, sp, #60	; 0x3c
 8027794:	a80b      	add	r0, sp, #44	; 0x2c
 8027796:	f7ed fbe7 	bl	8014f68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802779a:	4632      	mov	r2, r6
 802779c:	a910      	add	r1, sp, #64	; 0x40
 802779e:	a80c      	add	r0, sp, #48	; 0x30
 80277a0:	f7ed fbe2 	bl	8014f68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80277a4:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 80277a8:	edd7 4a00 	vldr	s9, [r7]
 80277ac:	edd7 5a01 	vldr	s11, [r7, #4]
 80277b0:	ed98 4a00 	vldr	s8, [r8]
 80277b4:	ed98 5a01 	vldr	s10, [r8, #4]
 80277b8:	ed99 9a00 	vldr	s18, [r9]
 80277bc:	ed99 8a01 	vldr	s16, [r9, #4]
 80277c0:	edd9 8a02 	vldr	s17, [r9, #8]
 80277c4:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 80277c8:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 80277cc:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 80277d0:	eef0 6a67 	vmov.f32	s13, s15
 80277d4:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 80277d8:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 80277dc:	eeb0 7a67 	vmov.f32	s14, s15
 80277e0:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 80277e4:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 80277e8:	eeb0 6a67 	vmov.f32	s12, s15
 80277ec:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80277f0:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80277f4:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80277f8:	ee16 6a10 	vmov	r6, s12
 80277fc:	eeb0 6a67 	vmov.f32	s12, s15
 8027800:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027804:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8027808:	f8d7 a008 	ldr.w	sl, [r7, #8]
 802780c:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8027810:	68ff      	ldr	r7, [r7, #12]
 8027812:	9624      	str	r6, [sp, #144]	; 0x90
 8027814:	ee16 0a10 	vmov	r0, s12
 8027818:	eeb0 6a67 	vmov.f32	s12, s15
 802781c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027820:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8027824:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8027828:	ee16 1a10 	vmov	r1, s12
 802782c:	eeb0 6a67 	vmov.f32	s12, s15
 8027830:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027834:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8027838:	ee16 2a10 	vmov	r2, s12
 802783c:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8027840:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8027844:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8027848:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 802784c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027850:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8027854:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027858:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 802785c:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027860:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8027864:	922d      	str	r2, [sp, #180]	; 0xb4
 8027866:	4a2b      	ldr	r2, [pc, #172]	; (8027914 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027868:	9b06      	ldr	r3, [sp, #24]
 802786a:	8812      	ldrh	r2, [r2, #0]
 802786c:	9317      	str	r3, [sp, #92]	; 0x5c
 802786e:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8027872:	9b07      	ldr	r3, [sp, #28]
 8027874:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027878:	4628      	mov	r0, r5
 802787a:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 802787e:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8027882:	9218      	str	r2, [sp, #96]	; 0x60
 8027884:	9319      	str	r3, [sp, #100]	; 0x64
 8027886:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802788a:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 802788e:	9731      	str	r7, [sp, #196]	; 0xc4
 8027890:	f7f1 f830 	bl	80188f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8027894:	901a      	str	r0, [sp, #104]	; 0x68
 8027896:	4628      	mov	r0, r5
 8027898:	f7f0 ff10 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 802789c:	901b      	str	r0, [sp, #108]	; 0x6c
 802789e:	4628      	mov	r0, r5
 80278a0:	f7f0 ff40 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80278a4:	901c      	str	r0, [sp, #112]	; 0x70
 80278a6:	4628      	mov	r0, r5
 80278a8:	f7f0 ff08 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80278ac:	eeb4 9a48 	vcmp.f32	s18, s16
 80278b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80278b4:	901d      	str	r0, [sp, #116]	; 0x74
 80278b6:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 80278ba:	d107      	bne.n	80278cc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 80278bc:	eeb4 8a68 	vcmp.f32	s16, s17
 80278c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80278c4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80278c8:	bf08      	it	eq
 80278ca:	461e      	moveq	r6, r3
 80278cc:	4b12      	ldr	r3, [pc, #72]	; (8027918 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 80278ce:	681b      	ldr	r3, [r3, #0]
 80278d0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80278d4:	b10a      	cbz	r2, 80278da <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 80278d6:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 80278d8:	b905      	cbnz	r5, 80278dc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 80278da:	689d      	ldr	r5, [r3, #8]
 80278dc:	682b      	ldr	r3, [r5, #0]
 80278de:	4620      	mov	r0, r4
 80278e0:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 80278e2:	f7ff fec2 	bl	802766a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 80278e6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80278ea:	9604      	str	r6, [sp, #16]
 80278ec:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80278f0:	ab13      	add	r3, sp, #76	; 0x4c
 80278f2:	9301      	str	r3, [sp, #4]
 80278f4:	ab15      	add	r3, sp, #84	; 0x54
 80278f6:	9300      	str	r3, [sp, #0]
 80278f8:	aa1e      	add	r2, sp, #120	; 0x78
 80278fa:	ab19      	add	r3, sp, #100	; 0x64
 80278fc:	a917      	add	r1, sp, #92	; 0x5c
 80278fe:	4628      	mov	r0, r5
 8027900:	47b8      	blx	r7
 8027902:	b033      	add	sp, #204	; 0xcc
 8027904:	ecbd 8b04 	vpop	{d8-d9}
 8027908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802790c:	2300      	movs	r3, #0
 802790e:	9312      	str	r3, [sp, #72]	; 0x48
 8027910:	e6f7      	b.n	8027702 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8027912:	bf00      	nop
 8027914:	20012e6e 	.word	0x20012e6e
 8027918:	20012e74 	.word	0x20012e74

0802791c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 802791c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027920:	ed2d 8b02 	vpush	{d8}
 8027924:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8027928:	b098      	sub	sp, #96	; 0x60
 802792a:	4604      	mov	r4, r0
 802792c:	4688      	mov	r8, r1
 802792e:	2b00      	cmp	r3, #0
 8027930:	d077      	beq.n	8027a22 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8027932:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8027936:	4628      	mov	r0, r5
 8027938:	f7f0 fec0 	bl	80186bc <_ZNK8touchgfx6Bitmap8getWidthEv>
 802793c:	ee07 0a90 	vmov	s15, r0
 8027940:	4628      	mov	r0, r5
 8027942:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8027946:	f7f0 feed 	bl	8018724 <_ZNK8touchgfx6Bitmap9getHeightEv>
 802794a:	4b4e      	ldr	r3, [pc, #312]	; (8027a84 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 802794c:	781b      	ldrb	r3, [r3, #0]
 802794e:	ee07 0a90 	vmov	s15, r0
 8027952:	2b01      	cmp	r3, #1
 8027954:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027958:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 802795c:	d066      	beq.n	8027a2c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 802795e:	eeb0 6a47 	vmov.f32	s12, s14
 8027962:	ee17 3a10 	vmov	r3, s14
 8027966:	eeb0 4a48 	vmov.f32	s8, s16
 802796a:	eeb0 7a48 	vmov.f32	s14, s16
 802796e:	eef0 4a67 	vmov.f32	s9, s15
 8027972:	eeb0 8a67 	vmov.f32	s16, s15
 8027976:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802797a:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 802797e:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8027982:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8027986:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802798a:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 802798e:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8027990:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8027992:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8027994:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8027998:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 802799c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80279a0:	ee73 1a65 	vsub.f32	s3, s6, s11
 80279a4:	ee72 6ac5 	vsub.f32	s13, s5, s10
 80279a8:	ee32 1a45 	vsub.f32	s2, s4, s10
 80279ac:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 80279b0:	ee73 1ae5 	vsub.f32	s3, s7, s11
 80279b4:	eee1 6a21 	vfma.f32	s13, s2, s3
 80279b8:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 80279bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80279c0:	dd3d      	ble.n	8027a3e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 80279c2:	ed8d 5a04 	vstr	s10, [sp, #16]
 80279c6:	ed8d 2a05 	vstr	s4, [sp, #20]
 80279ca:	edcd 2a06 	vstr	s5, [sp, #24]
 80279ce:	f8cd c01c 	str.w	ip, [sp, #28]
 80279d2:	edcd 5a08 	vstr	s11, [sp, #32]
 80279d6:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 80279da:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 80279de:	970b      	str	r7, [sp, #44]	; 0x2c
 80279e0:	960c      	str	r6, [sp, #48]	; 0x30
 80279e2:	950d      	str	r5, [sp, #52]	; 0x34
 80279e4:	920e      	str	r2, [sp, #56]	; 0x38
 80279e6:	900f      	str	r0, [sp, #60]	; 0x3c
 80279e8:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80279ec:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80279f0:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80279f4:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80279f8:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80279fc:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8027a00:	9316      	str	r3, [sp, #88]	; 0x58
 8027a02:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8027a06:	ab14      	add	r3, sp, #80	; 0x50
 8027a08:	9303      	str	r3, [sp, #12]
 8027a0a:	ab10      	add	r3, sp, #64	; 0x40
 8027a0c:	9302      	str	r3, [sp, #8]
 8027a0e:	ab0c      	add	r3, sp, #48	; 0x30
 8027a10:	9301      	str	r3, [sp, #4]
 8027a12:	ab08      	add	r3, sp, #32
 8027a14:	9300      	str	r3, [sp, #0]
 8027a16:	2200      	movs	r2, #0
 8027a18:	ab04      	add	r3, sp, #16
 8027a1a:	4641      	mov	r1, r8
 8027a1c:	4620      	mov	r0, r4
 8027a1e:	f7ff fe2d 	bl	802767c <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8027a22:	b018      	add	sp, #96	; 0x60
 8027a24:	ecbd 8b02 	vpop	{d8}
 8027a28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027a2c:	eeb0 6a48 	vmov.f32	s12, s16
 8027a30:	eef0 4a47 	vmov.f32	s9, s14
 8027a34:	ee17 3a90 	vmov	r3, s15
 8027a38:	eeb0 4a67 	vmov.f32	s8, s15
 8027a3c:	e79b      	b.n	8027976 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8027a3e:	ed8d 5a05 	vstr	s10, [sp, #20]
 8027a42:	ed8d 2a04 	vstr	s4, [sp, #16]
 8027a46:	f8cd c018 	str.w	ip, [sp, #24]
 8027a4a:	edcd 2a07 	vstr	s5, [sp, #28]
 8027a4e:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8027a52:	ed8d 3a08 	vstr	s6, [sp, #32]
 8027a56:	970a      	str	r7, [sp, #40]	; 0x28
 8027a58:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8027a5c:	960d      	str	r6, [sp, #52]	; 0x34
 8027a5e:	950c      	str	r5, [sp, #48]	; 0x30
 8027a60:	900e      	str	r0, [sp, #56]	; 0x38
 8027a62:	920f      	str	r2, [sp, #60]	; 0x3c
 8027a64:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8027a68:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8027a6c:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8027a70:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8027a74:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8027a78:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027a7c:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8027a80:	9317      	str	r3, [sp, #92]	; 0x5c
 8027a82:	e7c0      	b.n	8027a06 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8027a84:	20012e6c 	.word	0x20012e6c

08027a88 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8027a88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027a8a:	b08d      	sub	sp, #52	; 0x34
 8027a8c:	2300      	movs	r3, #0
 8027a8e:	9304      	str	r3, [sp, #16]
 8027a90:	9305      	str	r3, [sp, #20]
 8027a92:	9306      	str	r3, [sp, #24]
 8027a94:	aa04      	add	r2, sp, #16
 8027a96:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8027a9a:	9307      	str	r3, [sp, #28]
 8027a9c:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8027aa0:	4613      	mov	r3, r2
 8027aa2:	f101 0710 	add.w	r7, r1, #16
 8027aa6:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027ae4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8027aaa:	460c      	mov	r4, r1
 8027aac:	4605      	mov	r5, r0
 8027aae:	ecb4 7a01 	vldmia	r4!, {s14}
 8027ab2:	ecf5 6a01 	vldmia	r5!, {s13}
 8027ab6:	42bc      	cmp	r4, r7
 8027ab8:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027abc:	d1f7      	bne.n	8027aae <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8027abe:	3010      	adds	r0, #16
 8027ac0:	42b0      	cmp	r0, r6
 8027ac2:	ece2 7a01 	vstmia	r2!, {s15}
 8027ac6:	d1ee      	bne.n	8027aa6 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8027ac8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8027aca:	ac0c      	add	r4, sp, #48	; 0x30
 8027acc:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8027ad0:	ed9d 0a08 	vldr	s0, [sp, #32]
 8027ad4:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8027ad8:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8027adc:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8027ae0:	b00d      	add	sp, #52	; 0x34
 8027ae2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8027ae4:	00000000 	.word	0x00000000

08027ae8 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8027ae8:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8027b18 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8027aec:	2300      	movs	r3, #0
 8027aee:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027af2:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8027af6:	2200      	movs	r2, #0
 8027af8:	4293      	cmp	r3, r2
 8027afa:	f102 0201 	add.w	r2, r2, #1
 8027afe:	bf14      	ite	ne
 8027b00:	eef0 6a47 	vmovne.f32	s13, s14
 8027b04:	eef0 6a67 	vmoveq.f32	s13, s15
 8027b08:	2a04      	cmp	r2, #4
 8027b0a:	ece1 6a01 	vstmia	r1!, {s13}
 8027b0e:	d1f3      	bne.n	8027af8 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8027b10:	3301      	adds	r3, #1
 8027b12:	2b04      	cmp	r3, #4
 8027b14:	d1ed      	bne.n	8027af2 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8027b16:	4770      	bx	lr
 8027b18:	00000000 	.word	0x00000000

08027b1c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8027b1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027b20:	460c      	mov	r4, r1
 8027b22:	4605      	mov	r5, r0
 8027b24:	4690      	mov	r8, r2
 8027b26:	f7ff ffdf 	bl	8027ae8 <_ZN8touchgfx9Matrix4x4C1Ev>
 8027b2a:	4628      	mov	r0, r5
 8027b2c:	4621      	mov	r1, r4
 8027b2e:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8027b32:	2300      	movs	r3, #0
 8027b34:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8027b74 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8027b38:	eb08 0603 	add.w	r6, r8, r3
 8027b3c:	460f      	mov	r7, r1
 8027b3e:	2400      	movs	r4, #0
 8027b40:	4632      	mov	r2, r6
 8027b42:	ecf7 6a01 	vldmia	r7!, {s13}
 8027b46:	ed92 7a00 	vldr	s14, [r2]
 8027b4a:	3401      	adds	r4, #1
 8027b4c:	2c04      	cmp	r4, #4
 8027b4e:	f106 0610 	add.w	r6, r6, #16
 8027b52:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027b56:	d1f3      	bne.n	8027b40 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8027b58:	18c2      	adds	r2, r0, r3
 8027b5a:	3304      	adds	r3, #4
 8027b5c:	2b10      	cmp	r3, #16
 8027b5e:	edc2 7a00 	vstr	s15, [r2]
 8027b62:	d1e7      	bne.n	8027b34 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8027b64:	3110      	adds	r1, #16
 8027b66:	4561      	cmp	r1, ip
 8027b68:	f100 0010 	add.w	r0, r0, #16
 8027b6c:	d1e1      	bne.n	8027b32 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8027b6e:	4628      	mov	r0, r5
 8027b70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027b74:	00000000 	.word	0x00000000

08027b78 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8027b78:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027b7c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8027b80:	f100 0320 	add.w	r3, r0, #32
 8027b84:	3030      	adds	r0, #48	; 0x30
 8027b86:	ecf3 7a01 	vldmia	r3!, {s15}
 8027b8a:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027b8e:	4283      	cmp	r3, r0
 8027b90:	edc3 7a03 	vstr	s15, [r3, #12]
 8027b94:	d1f7      	bne.n	8027b86 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8027b96:	4770      	bx	lr

08027b98 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8027b98:	b510      	push	{r4, lr}
 8027b9a:	ed2d 8b02 	vpush	{d8}
 8027b9e:	4604      	mov	r4, r0
 8027ba0:	eef0 8a40 	vmov.f32	s17, s0
 8027ba4:	f001 fa7a 	bl	802909c <sinf>
 8027ba8:	eeb0 8a40 	vmov.f32	s16, s0
 8027bac:	eeb0 0a68 	vmov.f32	s0, s17
 8027bb0:	f001 fa30 	bl	8029014 <cosf>
 8027bb4:	f104 0310 	add.w	r3, r4, #16
 8027bb8:	f104 0220 	add.w	r2, r4, #32
 8027bbc:	eeb1 6a48 	vneg.f32	s12, s16
 8027bc0:	edd3 7a04 	vldr	s15, [r3, #16]
 8027bc4:	edd3 6a00 	vldr	s13, [r3]
 8027bc8:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027bcc:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027bd0:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027bd4:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027bd8:	eca3 7a01 	vstmia	r3!, {s14}
 8027bdc:	429a      	cmp	r2, r3
 8027bde:	edc3 7a03 	vstr	s15, [r3, #12]
 8027be2:	d1ed      	bne.n	8027bc0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8027be4:	ecbd 8b02 	vpop	{d8}
 8027be8:	4620      	mov	r0, r4
 8027bea:	bd10      	pop	{r4, pc}

08027bec <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8027bec:	b510      	push	{r4, lr}
 8027bee:	ed2d 8b02 	vpush	{d8}
 8027bf2:	4604      	mov	r4, r0
 8027bf4:	eef0 8a40 	vmov.f32	s17, s0
 8027bf8:	f001 fa50 	bl	802909c <sinf>
 8027bfc:	eeb0 8a40 	vmov.f32	s16, s0
 8027c00:	eeb0 0a68 	vmov.f32	s0, s17
 8027c04:	f001 fa06 	bl	8029014 <cosf>
 8027c08:	4623      	mov	r3, r4
 8027c0a:	f104 0210 	add.w	r2, r4, #16
 8027c0e:	eeb1 6a48 	vneg.f32	s12, s16
 8027c12:	edd3 7a08 	vldr	s15, [r3, #32]
 8027c16:	edd3 6a00 	vldr	s13, [r3]
 8027c1a:	ee27 7a88 	vmul.f32	s14, s15, s16
 8027c1e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027c22:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027c26:	eee6 7a26 	vfma.f32	s15, s12, s13
 8027c2a:	eca3 7a01 	vstmia	r3!, {s14}
 8027c2e:	429a      	cmp	r2, r3
 8027c30:	edc3 7a07 	vstr	s15, [r3, #28]
 8027c34:	d1ed      	bne.n	8027c12 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8027c36:	ecbd 8b02 	vpop	{d8}
 8027c3a:	4620      	mov	r0, r4
 8027c3c:	bd10      	pop	{r4, pc}

08027c3e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8027c3e:	b510      	push	{r4, lr}
 8027c40:	ed2d 8b02 	vpush	{d8}
 8027c44:	4604      	mov	r4, r0
 8027c46:	eef0 8a40 	vmov.f32	s17, s0
 8027c4a:	f001 fa27 	bl	802909c <sinf>
 8027c4e:	eeb0 8a40 	vmov.f32	s16, s0
 8027c52:	eeb0 0a68 	vmov.f32	s0, s17
 8027c56:	f001 f9dd 	bl	8029014 <cosf>
 8027c5a:	4623      	mov	r3, r4
 8027c5c:	f104 0210 	add.w	r2, r4, #16
 8027c60:	eeb1 6a48 	vneg.f32	s12, s16
 8027c64:	edd3 7a04 	vldr	s15, [r3, #16]
 8027c68:	edd3 6a00 	vldr	s13, [r3]
 8027c6c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027c70:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027c74:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027c78:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027c7c:	eca3 7a01 	vstmia	r3!, {s14}
 8027c80:	429a      	cmp	r2, r3
 8027c82:	edc3 7a03 	vstr	s15, [r3, #12]
 8027c86:	d1ed      	bne.n	8027c64 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8027c88:	ecbd 8b02 	vpop	{d8}
 8027c8c:	4620      	mov	r0, r4
 8027c8e:	bd10      	pop	{r4, pc}

08027c90 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8027c90:	4603      	mov	r3, r0
 8027c92:	f100 0210 	add.w	r2, r0, #16
 8027c96:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8027c9a:	edd3 7a00 	vldr	s15, [r3]
 8027c9e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027ca2:	ece3 7a01 	vstmia	r3!, {s15}
 8027ca6:	4293      	cmp	r3, r2
 8027ca8:	d1f5      	bne.n	8027c96 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8027caa:	4770      	bx	lr

08027cac <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8027cac:	f100 0310 	add.w	r3, r0, #16
 8027cb0:	f100 0220 	add.w	r2, r0, #32
 8027cb4:	ed93 7a08 	vldr	s14, [r3, #32]
 8027cb8:	edd3 7a00 	vldr	s15, [r3]
 8027cbc:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027cc0:	ece3 7a01 	vstmia	r3!, {s15}
 8027cc4:	4293      	cmp	r3, r2
 8027cc6:	d1f5      	bne.n	8027cb4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8027cc8:	4770      	bx	lr

08027cca <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8027cca:	f100 0320 	add.w	r3, r0, #32
 8027cce:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027cd2:	ed93 7a04 	vldr	s14, [r3, #16]
 8027cd6:	edd3 7a00 	vldr	s15, [r3]
 8027cda:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027cde:	ece3 7a01 	vstmia	r3!, {s15}
 8027ce2:	4293      	cmp	r3, r2
 8027ce4:	d1f5      	bne.n	8027cd2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8027ce6:	4770      	bx	lr

08027ce8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8027ce8:	4603      	mov	r3, r0
 8027cea:	f100 0210 	add.w	r2, r0, #16
 8027cee:	edd3 7a00 	vldr	s15, [r3]
 8027cf2:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027cf6:	ece3 7a01 	vstmia	r3!, {s15}
 8027cfa:	4293      	cmp	r3, r2
 8027cfc:	d1f7      	bne.n	8027cee <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8027cfe:	4770      	bx	lr

08027d00 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8027d00:	f100 0310 	add.w	r3, r0, #16
 8027d04:	f100 0220 	add.w	r2, r0, #32
 8027d08:	edd3 7a00 	vldr	s15, [r3]
 8027d0c:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027d10:	ece3 7a01 	vstmia	r3!, {s15}
 8027d14:	4293      	cmp	r3, r2
 8027d16:	d1f7      	bne.n	8027d08 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8027d18:	4770      	bx	lr

08027d1a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8027d1a:	f100 0320 	add.w	r3, r0, #32
 8027d1e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027d22:	edd3 7a00 	vldr	s15, [r3]
 8027d26:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027d2a:	ece3 7a01 	vstmia	r3!, {s15}
 8027d2e:	4293      	cmp	r3, r2
 8027d30:	d1f7      	bne.n	8027d22 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8027d32:	4770      	bx	lr

08027d34 <arm_max_f32>:
 8027d34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027d38:	1e4f      	subs	r7, r1, #1
 8027d3a:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8027d3e:	f100 0e04 	add.w	lr, r0, #4
 8027d42:	edd0 7a00 	vldr	s15, [r0]
 8027d46:	d058      	beq.n	8027dfa <arm_max_f32+0xc6>
 8027d48:	3014      	adds	r0, #20
 8027d4a:	46c4      	mov	ip, r8
 8027d4c:	2604      	movs	r6, #4
 8027d4e:	2400      	movs	r4, #0
 8027d50:	ed10 6a04 	vldr	s12, [r0, #-16]
 8027d54:	ed50 6a03 	vldr	s13, [r0, #-12]
 8027d58:	ed10 7a02 	vldr	s14, [r0, #-8]
 8027d5c:	ed50 5a01 	vldr	s11, [r0, #-4]
 8027d60:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8027d64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027d68:	bfc8      	it	gt
 8027d6a:	eef0 7a46 	vmovgt.f32	s15, s12
 8027d6e:	f1a6 0503 	sub.w	r5, r6, #3
 8027d72:	eef4 7ae6 	vcmpe.f32	s15, s13
 8027d76:	bfc8      	it	gt
 8027d78:	462c      	movgt	r4, r5
 8027d7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027d7e:	bf48      	it	mi
 8027d80:	eef0 7a66 	vmovmi.f32	s15, s13
 8027d84:	f1a6 0502 	sub.w	r5, r6, #2
 8027d88:	eef4 7ac7 	vcmpe.f32	s15, s14
 8027d8c:	bf48      	it	mi
 8027d8e:	462c      	movmi	r4, r5
 8027d90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027d94:	bf48      	it	mi
 8027d96:	eef0 7a47 	vmovmi.f32	s15, s14
 8027d9a:	f106 35ff 	add.w	r5, r6, #4294967295
 8027d9e:	eef4 7ae5 	vcmpe.f32	s15, s11
 8027da2:	bf48      	it	mi
 8027da4:	462c      	movmi	r4, r5
 8027da6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027daa:	bf48      	it	mi
 8027dac:	4634      	movmi	r4, r6
 8027dae:	bf48      	it	mi
 8027db0:	eef0 7a65 	vmovmi.f32	s15, s11
 8027db4:	f1bc 0c01 	subs.w	ip, ip, #1
 8027db8:	f106 0604 	add.w	r6, r6, #4
 8027dbc:	f100 0010 	add.w	r0, r0, #16
 8027dc0:	d1c6      	bne.n	8027d50 <arm_max_f32+0x1c>
 8027dc2:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8027dc6:	f017 0003 	ands.w	r0, r7, #3
 8027dca:	d018      	beq.n	8027dfe <arm_max_f32+0xca>
 8027dcc:	1a08      	subs	r0, r1, r0
 8027dce:	ecbe 7a01 	vldmia	lr!, {s14}
 8027dd2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8027dd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027dda:	bfc8      	it	gt
 8027ddc:	4604      	movgt	r4, r0
 8027dde:	f100 0001 	add.w	r0, r0, #1
 8027de2:	bfd8      	it	le
 8027de4:	eeb0 7a67 	vmovle.f32	s14, s15
 8027de8:	4288      	cmp	r0, r1
 8027dea:	eef0 7a47 	vmov.f32	s15, s14
 8027dee:	d1ee      	bne.n	8027dce <arm_max_f32+0x9a>
 8027df0:	ed82 7a00 	vstr	s14, [r2]
 8027df4:	601c      	str	r4, [r3, #0]
 8027df6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027dfa:	4644      	mov	r4, r8
 8027dfc:	e7e3      	b.n	8027dc6 <arm_max_f32+0x92>
 8027dfe:	eeb0 7a67 	vmov.f32	s14, s15
 8027e02:	e7f5      	b.n	8027df0 <arm_max_f32+0xbc>

08027e04 <arm_rfft_fast_init_f32>:
 8027e04:	084b      	lsrs	r3, r1, #1
 8027e06:	2b80      	cmp	r3, #128	; 0x80
 8027e08:	b410      	push	{r4}
 8027e0a:	8201      	strh	r1, [r0, #16]
 8027e0c:	8003      	strh	r3, [r0, #0]
 8027e0e:	d047      	beq.n	8027ea0 <arm_rfft_fast_init_f32+0x9c>
 8027e10:	d917      	bls.n	8027e42 <arm_rfft_fast_init_f32+0x3e>
 8027e12:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8027e16:	d03d      	beq.n	8027e94 <arm_rfft_fast_init_f32+0x90>
 8027e18:	d929      	bls.n	8027e6e <arm_rfft_fast_init_f32+0x6a>
 8027e1a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8027e1e:	d020      	beq.n	8027e62 <arm_rfft_fast_init_f32+0x5e>
 8027e20:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8027e24:	d113      	bne.n	8027e4e <arm_rfft_fast_init_f32+0x4a>
 8027e26:	4921      	ldr	r1, [pc, #132]	; (8027eac <arm_rfft_fast_init_f32+0xa8>)
 8027e28:	4a21      	ldr	r2, [pc, #132]	; (8027eb0 <arm_rfft_fast_init_f32+0xac>)
 8027e2a:	4b22      	ldr	r3, [pc, #136]	; (8027eb4 <arm_rfft_fast_init_f32+0xb0>)
 8027e2c:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8027e30:	8184      	strh	r4, [r0, #12]
 8027e32:	6081      	str	r1, [r0, #8]
 8027e34:	6042      	str	r2, [r0, #4]
 8027e36:	6143      	str	r3, [r0, #20]
 8027e38:	2000      	movs	r0, #0
 8027e3a:	b240      	sxtb	r0, r0
 8027e3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027e40:	4770      	bx	lr
 8027e42:	2b20      	cmp	r3, #32
 8027e44:	d01c      	beq.n	8027e80 <arm_rfft_fast_init_f32+0x7c>
 8027e46:	2b40      	cmp	r3, #64	; 0x40
 8027e48:	d006      	beq.n	8027e58 <arm_rfft_fast_init_f32+0x54>
 8027e4a:	2b10      	cmp	r3, #16
 8027e4c:	d01d      	beq.n	8027e8a <arm_rfft_fast_init_f32+0x86>
 8027e4e:	20ff      	movs	r0, #255	; 0xff
 8027e50:	b240      	sxtb	r0, r0
 8027e52:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027e56:	4770      	bx	lr
 8027e58:	2438      	movs	r4, #56	; 0x38
 8027e5a:	4917      	ldr	r1, [pc, #92]	; (8027eb8 <arm_rfft_fast_init_f32+0xb4>)
 8027e5c:	4a17      	ldr	r2, [pc, #92]	; (8027ebc <arm_rfft_fast_init_f32+0xb8>)
 8027e5e:	4b18      	ldr	r3, [pc, #96]	; (8027ec0 <arm_rfft_fast_init_f32+0xbc>)
 8027e60:	e7e6      	b.n	8027e30 <arm_rfft_fast_init_f32+0x2c>
 8027e62:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8027e66:	4917      	ldr	r1, [pc, #92]	; (8027ec4 <arm_rfft_fast_init_f32+0xc0>)
 8027e68:	4a17      	ldr	r2, [pc, #92]	; (8027ec8 <arm_rfft_fast_init_f32+0xc4>)
 8027e6a:	4b18      	ldr	r3, [pc, #96]	; (8027ecc <arm_rfft_fast_init_f32+0xc8>)
 8027e6c:	e7e0      	b.n	8027e30 <arm_rfft_fast_init_f32+0x2c>
 8027e6e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8027e72:	d1ec      	bne.n	8027e4e <arm_rfft_fast_init_f32+0x4a>
 8027e74:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8027e78:	4915      	ldr	r1, [pc, #84]	; (8027ed0 <arm_rfft_fast_init_f32+0xcc>)
 8027e7a:	4a16      	ldr	r2, [pc, #88]	; (8027ed4 <arm_rfft_fast_init_f32+0xd0>)
 8027e7c:	4b16      	ldr	r3, [pc, #88]	; (8027ed8 <arm_rfft_fast_init_f32+0xd4>)
 8027e7e:	e7d7      	b.n	8027e30 <arm_rfft_fast_init_f32+0x2c>
 8027e80:	2430      	movs	r4, #48	; 0x30
 8027e82:	4916      	ldr	r1, [pc, #88]	; (8027edc <arm_rfft_fast_init_f32+0xd8>)
 8027e84:	4a16      	ldr	r2, [pc, #88]	; (8027ee0 <arm_rfft_fast_init_f32+0xdc>)
 8027e86:	4b17      	ldr	r3, [pc, #92]	; (8027ee4 <arm_rfft_fast_init_f32+0xe0>)
 8027e88:	e7d2      	b.n	8027e30 <arm_rfft_fast_init_f32+0x2c>
 8027e8a:	2414      	movs	r4, #20
 8027e8c:	4916      	ldr	r1, [pc, #88]	; (8027ee8 <arm_rfft_fast_init_f32+0xe4>)
 8027e8e:	4a17      	ldr	r2, [pc, #92]	; (8027eec <arm_rfft_fast_init_f32+0xe8>)
 8027e90:	4b17      	ldr	r3, [pc, #92]	; (8027ef0 <arm_rfft_fast_init_f32+0xec>)
 8027e92:	e7cd      	b.n	8027e30 <arm_rfft_fast_init_f32+0x2c>
 8027e94:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8027e98:	4916      	ldr	r1, [pc, #88]	; (8027ef4 <arm_rfft_fast_init_f32+0xf0>)
 8027e9a:	4a17      	ldr	r2, [pc, #92]	; (8027ef8 <arm_rfft_fast_init_f32+0xf4>)
 8027e9c:	4b17      	ldr	r3, [pc, #92]	; (8027efc <arm_rfft_fast_init_f32+0xf8>)
 8027e9e:	e7c7      	b.n	8027e30 <arm_rfft_fast_init_f32+0x2c>
 8027ea0:	24d0      	movs	r4, #208	; 0xd0
 8027ea2:	4917      	ldr	r1, [pc, #92]	; (8027f00 <arm_rfft_fast_init_f32+0xfc>)
 8027ea4:	4a17      	ldr	r2, [pc, #92]	; (8027f04 <arm_rfft_fast_init_f32+0x100>)
 8027ea6:	4b18      	ldr	r3, [pc, #96]	; (8027f08 <arm_rfft_fast_init_f32+0x104>)
 8027ea8:	e7c2      	b.n	8027e30 <arm_rfft_fast_init_f32+0x2c>
 8027eaa:	bf00      	nop
 8027eac:	0803d758 	.word	0x0803d758
 8027eb0:	0802e950 	.word	0x0802e950
 8027eb4:	08034ac0 	.word	0x08034ac0
 8027eb8:	08032a50 	.word	0x08032a50
 8027ebc:	0803f518 	.word	0x0803f518
 8027ec0:	08041a08 	.word	0x08041a08
 8027ec4:	0803b440 	.word	0x0803b440
 8027ec8:	08039340 	.word	0x08039340
 8027ecc:	08032ac0 	.word	0x08032ac0
 8027ed0:	08041698 	.word	0x08041698
 8027ed4:	08038ac0 	.word	0x08038ac0
 8027ed8:	0803f718 	.word	0x0803f718
 8027edc:	0803c2f8 	.word	0x0803c2f8
 8027ee0:	0803b340 	.word	0x0803b340
 8027ee4:	08032950 	.word	0x08032950
 8027ee8:	0803c250 	.word	0x0803c250
 8027eec:	080392c0 	.word	0x080392c0
 8027ef0:	0803c278 	.word	0x0803c278
 8027ef4:	0803ff18 	.word	0x0803ff18
 8027ef8:	0803c758 	.word	0x0803c758
 8027efc:	08040298 	.word	0x08040298
 8027f00:	08041c08 	.word	0x08041c08
 8027f04:	0803c358 	.word	0x0803c358
 8027f08:	08041298 	.word	0x08041298

08027f0c <arm_rfft_fast_f32>:
 8027f0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027f10:	8a06      	ldrh	r6, [r0, #16]
 8027f12:	0876      	lsrs	r6, r6, #1
 8027f14:	4607      	mov	r7, r0
 8027f16:	4615      	mov	r5, r2
 8027f18:	8006      	strh	r6, [r0, #0]
 8027f1a:	460c      	mov	r4, r1
 8027f1c:	2b00      	cmp	r3, #0
 8027f1e:	d15c      	bne.n	8027fda <arm_rfft_fast_f32+0xce>
 8027f20:	461a      	mov	r2, r3
 8027f22:	2301      	movs	r3, #1
 8027f24:	f000 fbe6 	bl	80286f4 <arm_cfft_f32>
 8027f28:	edd4 7a00 	vldr	s15, [r4]
 8027f2c:	ed94 7a01 	vldr	s14, [r4, #4]
 8027f30:	883e      	ldrh	r6, [r7, #0]
 8027f32:	6978      	ldr	r0, [r7, #20]
 8027f34:	ee37 7a07 	vadd.f32	s14, s14, s14
 8027f38:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8027f3c:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8027f40:	ee77 6a87 	vadd.f32	s13, s15, s14
 8027f44:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027f48:	3e01      	subs	r6, #1
 8027f4a:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8027f4e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027f52:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8027f56:	ed85 7a00 	vstr	s14, [r5]
 8027f5a:	edc5 7a01 	vstr	s15, [r5, #4]
 8027f5e:	3010      	adds	r0, #16
 8027f60:	f105 0210 	add.w	r2, r5, #16
 8027f64:	3b08      	subs	r3, #8
 8027f66:	f104 0110 	add.w	r1, r4, #16
 8027f6a:	ed51 4a02 	vldr	s9, [r1, #-8]
 8027f6e:	ed93 5a02 	vldr	s10, [r3, #8]
 8027f72:	ed11 7a01 	vldr	s14, [r1, #-4]
 8027f76:	ed10 6a02 	vldr	s12, [r0, #-8]
 8027f7a:	edd3 5a03 	vldr	s11, [r3, #12]
 8027f7e:	ed50 6a01 	vldr	s13, [r0, #-4]
 8027f82:	ee75 7a64 	vsub.f32	s15, s10, s9
 8027f86:	ee35 4a87 	vadd.f32	s8, s11, s14
 8027f8a:	ee35 5a24 	vadd.f32	s10, s10, s9
 8027f8e:	ee77 5a65 	vsub.f32	s11, s14, s11
 8027f92:	ee66 4a27 	vmul.f32	s9, s12, s15
 8027f96:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8027f9a:	ee34 5a85 	vadd.f32	s10, s9, s10
 8027f9e:	ee26 6a04 	vmul.f32	s12, s12, s8
 8027fa2:	ee66 6a84 	vmul.f32	s13, s13, s8
 8027fa6:	ee77 7a25 	vadd.f32	s15, s14, s11
 8027faa:	ee76 6a85 	vadd.f32	s13, s13, s10
 8027fae:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8027fb2:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8027fb6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027fba:	3e01      	subs	r6, #1
 8027fbc:	ed42 6a02 	vstr	s13, [r2, #-8]
 8027fc0:	ed42 7a01 	vstr	s15, [r2, #-4]
 8027fc4:	f1a3 0308 	sub.w	r3, r3, #8
 8027fc8:	f101 0108 	add.w	r1, r1, #8
 8027fcc:	f100 0008 	add.w	r0, r0, #8
 8027fd0:	f102 0208 	add.w	r2, r2, #8
 8027fd4:	d1c9      	bne.n	8027f6a <arm_rfft_fast_f32+0x5e>
 8027fd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027fda:	edd1 7a00 	vldr	s15, [r1]
 8027fde:	edd1 6a01 	vldr	s13, [r1, #4]
 8027fe2:	6941      	ldr	r1, [r0, #20]
 8027fe4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027fe8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8027fec:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8027ff0:	ee27 7a23 	vmul.f32	s14, s14, s7
 8027ff4:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027ff8:	3e01      	subs	r6, #1
 8027ffa:	ed82 7a00 	vstr	s14, [r2]
 8027ffe:	edc2 7a01 	vstr	s15, [r2, #4]
 8028002:	00f0      	lsls	r0, r6, #3
 8028004:	b3ee      	cbz	r6, 8028082 <arm_rfft_fast_f32+0x176>
 8028006:	3808      	subs	r0, #8
 8028008:	f101 0e10 	add.w	lr, r1, #16
 802800c:	4420      	add	r0, r4
 802800e:	f104 0110 	add.w	r1, r4, #16
 8028012:	f102 0c10 	add.w	ip, r2, #16
 8028016:	ed90 7a02 	vldr	s14, [r0, #8]
 802801a:	ed51 6a02 	vldr	s13, [r1, #-8]
 802801e:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8028022:	ed90 4a03 	vldr	s8, [r0, #12]
 8028026:	ed11 5a01 	vldr	s10, [r1, #-4]
 802802a:	ed5e 5a01 	vldr	s11, [lr, #-4]
 802802e:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8028032:	ee74 4a05 	vadd.f32	s9, s8, s10
 8028036:	ee26 3a27 	vmul.f32	s6, s12, s15
 802803a:	ee77 6a26 	vadd.f32	s13, s14, s13
 802803e:	ee35 5a44 	vsub.f32	s10, s10, s8
 8028042:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8028046:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802804a:	ee77 7a05 	vadd.f32	s15, s14, s10
 802804e:	ee26 6a24 	vmul.f32	s12, s12, s9
 8028052:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8028056:	ee77 7ac6 	vsub.f32	s15, s15, s12
 802805a:	ee36 7ae5 	vsub.f32	s14, s13, s11
 802805e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8028062:	ee27 7a23 	vmul.f32	s14, s14, s7
 8028066:	3e01      	subs	r6, #1
 8028068:	ed0c 7a02 	vstr	s14, [ip, #-8]
 802806c:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8028070:	f1a0 0008 	sub.w	r0, r0, #8
 8028074:	f101 0108 	add.w	r1, r1, #8
 8028078:	f10e 0e08 	add.w	lr, lr, #8
 802807c:	f10c 0c08 	add.w	ip, ip, #8
 8028080:	d1c9      	bne.n	8028016 <arm_rfft_fast_f32+0x10a>
 8028082:	4638      	mov	r0, r7
 8028084:	4629      	mov	r1, r5
 8028086:	461a      	mov	r2, r3
 8028088:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802808c:	2301      	movs	r3, #1
 802808e:	f000 bb31 	b.w	80286f4 <arm_cfft_f32>
 8028092:	bf00      	nop

08028094 <arm_cfft_radix8by2_f32>:
 8028094:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028098:	ed2d 8b08 	vpush	{d8-d11}
 802809c:	f8b0 e000 	ldrh.w	lr, [r0]
 80280a0:	6842      	ldr	r2, [r0, #4]
 80280a2:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80280a6:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 80280aa:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 80280ae:	4607      	mov	r7, r0
 80280b0:	ea4f 038c 	mov.w	r3, ip, lsl #2
 80280b4:	f000 80af 	beq.w	8028216 <arm_cfft_radix8by2_f32+0x182>
 80280b8:	3310      	adds	r3, #16
 80280ba:	18ce      	adds	r6, r1, r3
 80280bc:	3210      	adds	r2, #16
 80280be:	4443      	add	r3, r8
 80280c0:	f101 0510 	add.w	r5, r1, #16
 80280c4:	f108 0410 	add.w	r4, r8, #16
 80280c8:	ed54 1a04 	vldr	s3, [r4, #-16]
 80280cc:	ed13 4a04 	vldr	s8, [r3, #-16]
 80280d0:	ed53 3a03 	vldr	s7, [r3, #-12]
 80280d4:	ed53 5a02 	vldr	s11, [r3, #-8]
 80280d8:	ed13 5a01 	vldr	s10, [r3, #-4]
 80280dc:	ed54 6a03 	vldr	s13, [r4, #-12]
 80280e0:	ed14 0a02 	vldr	s0, [r4, #-8]
 80280e4:	ed16 2a04 	vldr	s4, [r6, #-16]
 80280e8:	ed56 2a03 	vldr	s5, [r6, #-12]
 80280ec:	ed15 6a03 	vldr	s12, [r5, #-12]
 80280f0:	ed15 7a01 	vldr	s14, [r5, #-4]
 80280f4:	ed15 3a04 	vldr	s6, [r5, #-16]
 80280f8:	ed54 7a01 	vldr	s15, [r4, #-4]
 80280fc:	ed56 0a02 	vldr	s1, [r6, #-8]
 8028100:	ed16 1a01 	vldr	s2, [r6, #-4]
 8028104:	ed55 4a02 	vldr	s9, [r5, #-8]
 8028108:	ee73 ba21 	vadd.f32	s23, s6, s3
 802810c:	ee36 ba26 	vadd.f32	s22, s12, s13
 8028110:	ee37 aa27 	vadd.f32	s20, s14, s15
 8028114:	ee72 9a04 	vadd.f32	s19, s4, s8
 8028118:	ee32 9aa3 	vadd.f32	s18, s5, s7
 802811c:	ee31 8a05 	vadd.f32	s16, s2, s10
 8028120:	ee74 aa80 	vadd.f32	s21, s9, s0
 8028124:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8028128:	ed45 ba04 	vstr	s23, [r5, #-16]
 802812c:	ed05 ba03 	vstr	s22, [r5, #-12]
 8028130:	ed45 aa02 	vstr	s21, [r5, #-8]
 8028134:	ed05 aa01 	vstr	s20, [r5, #-4]
 8028138:	ed06 8a01 	vstr	s16, [r6, #-4]
 802813c:	ed46 9a04 	vstr	s19, [r6, #-16]
 8028140:	ed06 9a03 	vstr	s18, [r6, #-12]
 8028144:	ed46 8a02 	vstr	s17, [r6, #-8]
 8028148:	ee76 6a66 	vsub.f32	s13, s12, s13
 802814c:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8028150:	ed12 6a03 	vldr	s12, [r2, #-12]
 8028154:	ed52 2a04 	vldr	s5, [r2, #-16]
 8028158:	ee33 3a61 	vsub.f32	s6, s6, s3
 802815c:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028160:	ee26 8a86 	vmul.f32	s16, s13, s12
 8028164:	ee24 2a06 	vmul.f32	s4, s8, s12
 8028168:	ee63 1a22 	vmul.f32	s3, s6, s5
 802816c:	ee24 4a22 	vmul.f32	s8, s8, s5
 8028170:	ee23 3a06 	vmul.f32	s6, s6, s12
 8028174:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8028178:	ee23 6a86 	vmul.f32	s12, s7, s12
 802817c:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028180:	ee36 6a04 	vadd.f32	s12, s12, s8
 8028184:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028188:	ee72 3a63 	vsub.f32	s7, s4, s7
 802818c:	ee71 2a88 	vadd.f32	s5, s3, s16
 8028190:	ed44 6a03 	vstr	s13, [r4, #-12]
 8028194:	ed44 2a04 	vstr	s5, [r4, #-16]
 8028198:	ed43 3a04 	vstr	s7, [r3, #-16]
 802819c:	ed03 6a03 	vstr	s12, [r3, #-12]
 80281a0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80281a4:	ee75 6ae0 	vsub.f32	s13, s11, s1
 80281a8:	ed12 7a01 	vldr	s14, [r2, #-4]
 80281ac:	ed52 5a02 	vldr	s11, [r2, #-8]
 80281b0:	ee35 6a41 	vsub.f32	s12, s10, s2
 80281b4:	ee74 4ac0 	vsub.f32	s9, s9, s0
 80281b8:	ee67 3a87 	vmul.f32	s7, s15, s14
 80281bc:	ee26 5a87 	vmul.f32	s10, s13, s14
 80281c0:	ee24 4aa5 	vmul.f32	s8, s9, s11
 80281c4:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80281c8:	ee64 4a87 	vmul.f32	s9, s9, s14
 80281cc:	ee66 6aa5 	vmul.f32	s13, s13, s11
 80281d0:	ee26 7a07 	vmul.f32	s14, s12, s14
 80281d4:	ee26 6a25 	vmul.f32	s12, s12, s11
 80281d8:	ee77 7ae4 	vsub.f32	s15, s15, s9
 80281dc:	ee74 5a23 	vadd.f32	s11, s8, s7
 80281e0:	ee35 6a46 	vsub.f32	s12, s10, s12
 80281e4:	ee37 7a26 	vadd.f32	s14, s14, s13
 80281e8:	f1be 0e01 	subs.w	lr, lr, #1
 80281ec:	ed44 5a02 	vstr	s11, [r4, #-8]
 80281f0:	f105 0510 	add.w	r5, r5, #16
 80281f4:	ed44 7a01 	vstr	s15, [r4, #-4]
 80281f8:	f106 0610 	add.w	r6, r6, #16
 80281fc:	ed03 6a02 	vstr	s12, [r3, #-8]
 8028200:	ed03 7a01 	vstr	s14, [r3, #-4]
 8028204:	f102 0210 	add.w	r2, r2, #16
 8028208:	f104 0410 	add.w	r4, r4, #16
 802820c:	f103 0310 	add.w	r3, r3, #16
 8028210:	f47f af5a 	bne.w	80280c8 <arm_cfft_radix8by2_f32+0x34>
 8028214:	687a      	ldr	r2, [r7, #4]
 8028216:	fa1f f48c 	uxth.w	r4, ip
 802821a:	4608      	mov	r0, r1
 802821c:	2302      	movs	r3, #2
 802821e:	4621      	mov	r1, r4
 8028220:	f000 fbca 	bl	80289b8 <arm_radix8_butterfly_f32>
 8028224:	ecbd 8b08 	vpop	{d8-d11}
 8028228:	4640      	mov	r0, r8
 802822a:	4621      	mov	r1, r4
 802822c:	687a      	ldr	r2, [r7, #4]
 802822e:	2302      	movs	r3, #2
 8028230:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8028234:	f000 bbc0 	b.w	80289b8 <arm_radix8_butterfly_f32>

08028238 <arm_cfft_radix8by4_f32>:
 8028238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802823c:	ed2d 8b0a 	vpush	{d8-d12}
 8028240:	8802      	ldrh	r2, [r0, #0]
 8028242:	ed91 6a00 	vldr	s12, [r1]
 8028246:	b08f      	sub	sp, #60	; 0x3c
 8028248:	460f      	mov	r7, r1
 802824a:	0852      	lsrs	r2, r2, #1
 802824c:	0093      	lsls	r3, r2, #2
 802824e:	900c      	str	r0, [sp, #48]	; 0x30
 8028250:	9103      	str	r1, [sp, #12]
 8028252:	6841      	ldr	r1, [r0, #4]
 8028254:	ed97 7a01 	vldr	s14, [r7, #4]
 8028258:	4638      	mov	r0, r7
 802825a:	4418      	add	r0, r3
 802825c:	4606      	mov	r6, r0
 802825e:	9009      	str	r0, [sp, #36]	; 0x24
 8028260:	4418      	add	r0, r3
 8028262:	edd0 6a00 	vldr	s13, [r0]
 8028266:	edd6 3a00 	vldr	s7, [r6]
 802826a:	edd6 2a01 	vldr	s5, [r6, #4]
 802826e:	edd0 7a01 	vldr	s15, [r0, #4]
 8028272:	900a      	str	r0, [sp, #40]	; 0x28
 8028274:	ee76 5a26 	vadd.f32	s11, s12, s13
 8028278:	4604      	mov	r4, r0
 802827a:	4625      	mov	r5, r4
 802827c:	441c      	add	r4, r3
 802827e:	ed94 4a00 	vldr	s8, [r4]
 8028282:	ed94 5a01 	vldr	s10, [r4, #4]
 8028286:	9401      	str	r4, [sp, #4]
 8028288:	ee75 4aa3 	vadd.f32	s9, s11, s7
 802828c:	4630      	mov	r0, r6
 802828e:	ee74 4a24 	vadd.f32	s9, s8, s9
 8028292:	463e      	mov	r6, r7
 8028294:	ee14 ea90 	vmov	lr, s9
 8028298:	ee76 6a66 	vsub.f32	s13, s12, s13
 802829c:	f846 eb08 	str.w	lr, [r6], #8
 80282a0:	ee37 6a27 	vadd.f32	s12, s14, s15
 80282a4:	edd0 4a01 	vldr	s9, [r0, #4]
 80282a8:	9604      	str	r6, [sp, #16]
 80282aa:	ee77 7a67 	vsub.f32	s15, s14, s15
 80282ae:	9e01      	ldr	r6, [sp, #4]
 80282b0:	ee32 3aa6 	vadd.f32	s6, s5, s13
 80282b4:	ed96 2a01 	vldr	s4, [r6, #4]
 80282b8:	ee36 7a24 	vadd.f32	s14, s12, s9
 80282bc:	ee75 5ae3 	vsub.f32	s11, s11, s7
 80282c0:	ee77 4ae3 	vsub.f32	s9, s15, s7
 80282c4:	ee36 6a62 	vsub.f32	s12, s12, s5
 80282c8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80282cc:	ee76 6ae2 	vsub.f32	s13, s13, s5
 80282d0:	ee73 3a45 	vsub.f32	s7, s6, s10
 80282d4:	4604      	mov	r4, r0
 80282d6:	ee36 6a45 	vsub.f32	s12, s12, s10
 80282da:	ee75 6a26 	vadd.f32	s13, s10, s13
 80282de:	46a3      	mov	fp, r4
 80282e0:	ee37 7a02 	vadd.f32	s14, s14, s4
 80282e4:	ee34 5a84 	vadd.f32	s10, s9, s8
 80282e8:	ee13 8a90 	vmov	r8, s7
 80282ec:	46a4      	mov	ip, r4
 80282ee:	ee75 5ac4 	vsub.f32	s11, s11, s8
 80282f2:	ed87 7a01 	vstr	s14, [r7, #4]
 80282f6:	f84b 8b08 	str.w	r8, [fp], #8
 80282fa:	f1ac 0704 	sub.w	r7, ip, #4
 80282fe:	ed8c 5a01 	vstr	s10, [ip, #4]
 8028302:	f101 0c08 	add.w	ip, r1, #8
 8028306:	462c      	mov	r4, r5
 8028308:	f8cd c014 	str.w	ip, [sp, #20]
 802830c:	ee15 ca90 	vmov	ip, s11
 8028310:	f844 cb08 	str.w	ip, [r4], #8
 8028314:	9407      	str	r4, [sp, #28]
 8028316:	f101 0410 	add.w	r4, r1, #16
 802831a:	ed85 6a01 	vstr	s12, [r5, #4]
 802831e:	0852      	lsrs	r2, r2, #1
 8028320:	9402      	str	r4, [sp, #8]
 8028322:	462c      	mov	r4, r5
 8028324:	f101 0518 	add.w	r5, r1, #24
 8028328:	920b      	str	r2, [sp, #44]	; 0x2c
 802832a:	46b2      	mov	sl, r6
 802832c:	9506      	str	r5, [sp, #24]
 802832e:	ee77 7ac4 	vsub.f32	s15, s15, s8
 8028332:	3a02      	subs	r2, #2
 8028334:	ee16 5a90 	vmov	r5, s13
 8028338:	46b6      	mov	lr, r6
 802833a:	4630      	mov	r0, r6
 802833c:	0852      	lsrs	r2, r2, #1
 802833e:	f84a 5b08 	str.w	r5, [sl], #8
 8028342:	f1a0 0604 	sub.w	r6, r0, #4
 8028346:	edce 7a01 	vstr	s15, [lr, #4]
 802834a:	9208      	str	r2, [sp, #32]
 802834c:	f000 8130 	beq.w	80285b0 <arm_cfft_radix8by4_f32+0x378>
 8028350:	4691      	mov	r9, r2
 8028352:	9a03      	ldr	r2, [sp, #12]
 8028354:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8028358:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 802835c:	3b08      	subs	r3, #8
 802835e:	f102 0510 	add.w	r5, r2, #16
 8028362:	f101 0c20 	add.w	ip, r1, #32
 8028366:	f1a4 020c 	sub.w	r2, r4, #12
 802836a:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 802836e:	4433      	add	r3, r6
 8028370:	3410      	adds	r4, #16
 8028372:	4650      	mov	r0, sl
 8028374:	4659      	mov	r1, fp
 8028376:	ed55 3a02 	vldr	s7, [r5, #-8]
 802837a:	ed14 5a02 	vldr	s10, [r4, #-8]
 802837e:	ed91 7a00 	vldr	s14, [r1]
 8028382:	edd0 7a00 	vldr	s15, [r0]
 8028386:	ed15 4a01 	vldr	s8, [r5, #-4]
 802838a:	ed54 5a01 	vldr	s11, [r4, #-4]
 802838e:	edd0 6a01 	vldr	s13, [r0, #4]
 8028392:	ed91 6a01 	vldr	s12, [r1, #4]
 8028396:	ee33 8a85 	vadd.f32	s16, s7, s10
 802839a:	ee34 0a25 	vadd.f32	s0, s8, s11
 802839e:	ee78 4a07 	vadd.f32	s9, s16, s14
 80283a2:	ee74 5a65 	vsub.f32	s11, s8, s11
 80283a6:	ee77 4aa4 	vadd.f32	s9, s15, s9
 80283aa:	ee33 5ac5 	vsub.f32	s10, s7, s10
 80283ae:	ed45 4a02 	vstr	s9, [r5, #-8]
 80283b2:	edd1 4a01 	vldr	s9, [r1, #4]
 80283b6:	ed90 4a01 	vldr	s8, [r0, #4]
 80283ba:	ee70 4a24 	vadd.f32	s9, s0, s9
 80283be:	ee76 aa05 	vadd.f32	s21, s12, s10
 80283c2:	ee74 4a84 	vadd.f32	s9, s9, s8
 80283c6:	ee35 aac7 	vsub.f32	s20, s11, s14
 80283ca:	ed45 4a01 	vstr	s9, [r5, #-4]
 80283ce:	edd6 1a00 	vldr	s3, [r6]
 80283d2:	edd7 0a00 	vldr	s1, [r7]
 80283d6:	ed92 4a02 	vldr	s8, [r2, #8]
 80283da:	edd3 3a02 	vldr	s7, [r3, #8]
 80283de:	ed93 2a01 	vldr	s4, [r3, #4]
 80283e2:	ed16 1a01 	vldr	s2, [r6, #-4]
 80283e6:	edd2 2a01 	vldr	s5, [r2, #4]
 80283ea:	ed57 9a01 	vldr	s19, [r7, #-4]
 80283ee:	ee70 4aa1 	vadd.f32	s9, s1, s3
 80283f2:	ee39 3a81 	vadd.f32	s6, s19, s2
 80283f6:	ee74 8a84 	vadd.f32	s17, s9, s8
 80283fa:	ee70 1ae1 	vsub.f32	s3, s1, s3
 80283fe:	ee73 8aa8 	vadd.f32	s17, s7, s17
 8028402:	ee7a aae6 	vsub.f32	s21, s21, s13
 8028406:	ee18 aa90 	vmov	sl, s17
 802840a:	f847 a908 	str.w	sl, [r7], #-8
 802840e:	edd2 8a01 	vldr	s17, [r2, #4]
 8028412:	ed93 9a01 	vldr	s18, [r3, #4]
 8028416:	ee73 8a28 	vadd.f32	s17, s6, s17
 802841a:	ee3a aa27 	vadd.f32	s20, s20, s15
 802841e:	ee78 8a89 	vadd.f32	s17, s17, s18
 8028422:	ee74 0a63 	vsub.f32	s1, s8, s7
 8028426:	edc7 8a01 	vstr	s17, [r7, #4]
 802842a:	ed18 ba02 	vldr	s22, [r8, #-8]
 802842e:	ed58 8a01 	vldr	s17, [r8, #-4]
 8028432:	ee39 1ac1 	vsub.f32	s2, s19, s2
 8028436:	ee6a ba28 	vmul.f32	s23, s20, s17
 802843a:	ee2a ca8b 	vmul.f32	s24, s21, s22
 802843e:	ee71 9ae2 	vsub.f32	s19, s3, s5
 8028442:	ee30 9a81 	vadd.f32	s18, s1, s2
 8028446:	ee79 9a82 	vadd.f32	s19, s19, s4
 802844a:	ee3c ca2b 	vadd.f32	s24, s24, s23
 802844e:	ee6a aaa8 	vmul.f32	s21, s21, s17
 8028452:	ee69 baa8 	vmul.f32	s23, s19, s17
 8028456:	ee2a aa0b 	vmul.f32	s20, s20, s22
 802845a:	ee69 9a8b 	vmul.f32	s19, s19, s22
 802845e:	ee69 8a28 	vmul.f32	s17, s18, s17
 8028462:	ee29 ba0b 	vmul.f32	s22, s18, s22
 8028466:	ee1c aa10 	vmov	sl, s24
 802846a:	ee78 8aa9 	vadd.f32	s17, s17, s19
 802846e:	f841 ab08 	str.w	sl, [r1], #8
 8028472:	ee3a aa6a 	vsub.f32	s20, s20, s21
 8028476:	ee3b bacb 	vsub.f32	s22, s23, s22
 802847a:	ee34 4ac4 	vsub.f32	s8, s9, s8
 802847e:	ee33 3a62 	vsub.f32	s6, s6, s5
 8028482:	ed01 aa01 	vstr	s20, [r1, #-4]
 8028486:	edc2 8a01 	vstr	s17, [r2, #4]
 802848a:	ed82 ba02 	vstr	s22, [r2, #8]
 802848e:	ed5c 4a04 	vldr	s9, [ip, #-16]
 8028492:	ee74 3a63 	vsub.f32	s7, s8, s7
 8028496:	ee38 8a47 	vsub.f32	s16, s16, s14
 802849a:	ed1c 4a03 	vldr	s8, [ip, #-12]
 802849e:	ee30 0a46 	vsub.f32	s0, s0, s12
 80284a2:	ee33 3a42 	vsub.f32	s6, s6, s4
 80284a6:	ee38 8a67 	vsub.f32	s16, s16, s15
 80284aa:	ee30 0a66 	vsub.f32	s0, s0, s13
 80284ae:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 80284b2:	ee63 8a04 	vmul.f32	s17, s6, s8
 80284b6:	ee28 aa24 	vmul.f32	s20, s16, s9
 80284ba:	ee60 9a04 	vmul.f32	s19, s0, s8
 80284be:	ee28 8a04 	vmul.f32	s16, s16, s8
 80284c2:	ee20 0a24 	vmul.f32	s0, s0, s9
 80284c6:	ee63 3a84 	vmul.f32	s7, s7, s8
 80284ca:	ee39 4a68 	vsub.f32	s8, s18, s17
 80284ce:	ee7a 9a29 	vadd.f32	s19, s20, s19
 80284d2:	ee14 aa10 	vmov	sl, s8
 80284d6:	ee30 0a48 	vsub.f32	s0, s0, s16
 80284da:	ee63 4a24 	vmul.f32	s9, s6, s9
 80284de:	ed44 9a02 	vstr	s19, [r4, #-8]
 80284e2:	ee73 3ae4 	vsub.f32	s7, s7, s9
 80284e6:	ed04 0a01 	vstr	s0, [r4, #-4]
 80284ea:	f846 a908 	str.w	sl, [r6], #-8
 80284ee:	ee35 6a46 	vsub.f32	s12, s10, s12
 80284f2:	ee35 7a87 	vadd.f32	s14, s11, s14
 80284f6:	edc6 3a01 	vstr	s7, [r6, #4]
 80284fa:	ee76 6a86 	vadd.f32	s13, s13, s12
 80284fe:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028502:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8028506:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 802850a:	ee67 5a86 	vmul.f32	s11, s15, s12
 802850e:	ee26 5a87 	vmul.f32	s10, s13, s14
 8028512:	ee72 2a62 	vsub.f32	s5, s4, s5
 8028516:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802851a:	ee72 2ae1 	vsub.f32	s5, s5, s3
 802851e:	ee75 5a25 	vadd.f32	s11, s10, s11
 8028522:	ee62 0a86 	vmul.f32	s1, s5, s12
 8028526:	ee66 6a86 	vmul.f32	s13, s13, s12
 802852a:	ee67 7a87 	vmul.f32	s15, s15, s14
 802852e:	ee21 6a06 	vmul.f32	s12, s2, s12
 8028532:	ee62 2a87 	vmul.f32	s5, s5, s14
 8028536:	ee21 1a07 	vmul.f32	s2, s2, s14
 802853a:	ee15 aa90 	vmov	sl, s11
 802853e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8028542:	f840 ab08 	str.w	sl, [r0], #8
 8028546:	ee30 1ac1 	vsub.f32	s2, s1, s2
 802854a:	ee76 2a22 	vadd.f32	s5, s12, s5
 802854e:	f1b9 0901 	subs.w	r9, r9, #1
 8028552:	ed40 7a01 	vstr	s15, [r0, #-4]
 8028556:	f105 0508 	add.w	r5, r5, #8
 802855a:	ed83 1a02 	vstr	s2, [r3, #8]
 802855e:	edc3 2a01 	vstr	s5, [r3, #4]
 8028562:	f108 0808 	add.w	r8, r8, #8
 8028566:	f1a2 0208 	sub.w	r2, r2, #8
 802856a:	f10c 0c10 	add.w	ip, ip, #16
 802856e:	f104 0408 	add.w	r4, r4, #8
 8028572:	f10e 0e18 	add.w	lr, lr, #24
 8028576:	f1a3 0308 	sub.w	r3, r3, #8
 802857a:	f47f aefc 	bne.w	8028376 <arm_cfft_radix8by4_f32+0x13e>
 802857e:	9908      	ldr	r1, [sp, #32]
 8028580:	9802      	ldr	r0, [sp, #8]
 8028582:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8028586:	00cb      	lsls	r3, r1, #3
 8028588:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 802858c:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8028590:	9102      	str	r1, [sp, #8]
 8028592:	9904      	ldr	r1, [sp, #16]
 8028594:	4419      	add	r1, r3
 8028596:	9104      	str	r1, [sp, #16]
 8028598:	9905      	ldr	r1, [sp, #20]
 802859a:	4419      	add	r1, r3
 802859c:	9105      	str	r1, [sp, #20]
 802859e:	9907      	ldr	r1, [sp, #28]
 80285a0:	449b      	add	fp, r3
 80285a2:	4419      	add	r1, r3
 80285a4:	449a      	add	sl, r3
 80285a6:	9b06      	ldr	r3, [sp, #24]
 80285a8:	9107      	str	r1, [sp, #28]
 80285aa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80285ae:	9306      	str	r3, [sp, #24]
 80285b0:	9a04      	ldr	r2, [sp, #16]
 80285b2:	9807      	ldr	r0, [sp, #28]
 80285b4:	edd2 3a00 	vldr	s7, [r2]
 80285b8:	ed90 4a00 	vldr	s8, [r0]
 80285bc:	eddb 7a00 	vldr	s15, [fp]
 80285c0:	ed9a 3a00 	vldr	s6, [sl]
 80285c4:	edd2 4a01 	vldr	s9, [r2, #4]
 80285c8:	ed90 7a01 	vldr	s14, [r0, #4]
 80285cc:	ed9b 2a01 	vldr	s4, [fp, #4]
 80285d0:	edda 5a01 	vldr	s11, [sl, #4]
 80285d4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 80285d8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80285da:	ee73 6a84 	vadd.f32	s13, s7, s8
 80285de:	ee34 6a87 	vadd.f32	s12, s9, s14
 80285e2:	ee36 5aa7 	vadd.f32	s10, s13, s15
 80285e6:	ee34 7ac7 	vsub.f32	s14, s9, s14
 80285ea:	ee33 5a05 	vadd.f32	s10, s6, s10
 80285ee:	ee33 4ac4 	vsub.f32	s8, s7, s8
 80285f2:	ed82 5a00 	vstr	s10, [r2]
 80285f6:	ed9b 5a01 	vldr	s10, [fp, #4]
 80285fa:	edda 4a01 	vldr	s9, [sl, #4]
 80285fe:	ee36 5a05 	vadd.f32	s10, s12, s10
 8028602:	ee72 3a04 	vadd.f32	s7, s4, s8
 8028606:	ee35 5a24 	vadd.f32	s10, s10, s9
 802860a:	ee77 4a67 	vsub.f32	s9, s14, s15
 802860e:	ed82 5a01 	vstr	s10, [r2, #4]
 8028612:	9a05      	ldr	r2, [sp, #20]
 8028614:	ee34 5a83 	vadd.f32	s10, s9, s6
 8028618:	edd2 1a00 	vldr	s3, [r2]
 802861c:	edd2 2a01 	vldr	s5, [r2, #4]
 8028620:	9a02      	ldr	r2, [sp, #8]
 8028622:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8028626:	ee36 6a42 	vsub.f32	s12, s12, s4
 802862a:	ee63 4aa1 	vmul.f32	s9, s7, s3
 802862e:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8028632:	ee65 2a22 	vmul.f32	s5, s10, s5
 8028636:	ee25 5a21 	vmul.f32	s10, s10, s3
 802863a:	ee74 2aa2 	vadd.f32	s5, s9, s5
 802863e:	ee35 5a63 	vsub.f32	s10, s10, s7
 8028642:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8028646:	edcb 2a00 	vstr	s5, [fp]
 802864a:	ed8b 5a01 	vstr	s10, [fp, #4]
 802864e:	edd2 3a01 	vldr	s7, [r2, #4]
 8028652:	ed92 5a00 	vldr	s10, [r2]
 8028656:	9a06      	ldr	r2, [sp, #24]
 8028658:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802865c:	ee36 6a65 	vsub.f32	s12, s12, s11
 8028660:	ee66 4a85 	vmul.f32	s9, s13, s10
 8028664:	ee26 5a05 	vmul.f32	s10, s12, s10
 8028668:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802866c:	ee26 6a23 	vmul.f32	s12, s12, s7
 8028670:	ee75 6a66 	vsub.f32	s13, s10, s13
 8028674:	ee34 6a86 	vadd.f32	s12, s9, s12
 8028678:	ee34 4a42 	vsub.f32	s8, s8, s4
 802867c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8028680:	edc0 6a01 	vstr	s13, [r0, #4]
 8028684:	ed80 6a00 	vstr	s12, [r0]
 8028688:	ed92 6a01 	vldr	s12, [r2, #4]
 802868c:	9803      	ldr	r0, [sp, #12]
 802868e:	ee77 7a43 	vsub.f32	s15, s14, s6
 8028692:	ee75 5a84 	vadd.f32	s11, s11, s8
 8028696:	ed92 7a00 	vldr	s14, [r2]
 802869a:	ee65 6a87 	vmul.f32	s13, s11, s14
 802869e:	ee27 7a87 	vmul.f32	s14, s15, s14
 80286a2:	ee65 5a86 	vmul.f32	s11, s11, s12
 80286a6:	ee67 7a86 	vmul.f32	s15, s15, s12
 80286aa:	ee77 5a65 	vsub.f32	s11, s14, s11
 80286ae:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80286b2:	edca 5a01 	vstr	s11, [sl, #4]
 80286b6:	edca 7a00 	vstr	s15, [sl]
 80286ba:	6872      	ldr	r2, [r6, #4]
 80286bc:	4621      	mov	r1, r4
 80286be:	2304      	movs	r3, #4
 80286c0:	f000 f97a 	bl	80289b8 <arm_radix8_butterfly_f32>
 80286c4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80286c6:	6872      	ldr	r2, [r6, #4]
 80286c8:	4621      	mov	r1, r4
 80286ca:	2304      	movs	r3, #4
 80286cc:	f000 f974 	bl	80289b8 <arm_radix8_butterfly_f32>
 80286d0:	980a      	ldr	r0, [sp, #40]	; 0x28
 80286d2:	6872      	ldr	r2, [r6, #4]
 80286d4:	4621      	mov	r1, r4
 80286d6:	2304      	movs	r3, #4
 80286d8:	f000 f96e 	bl	80289b8 <arm_radix8_butterfly_f32>
 80286dc:	9801      	ldr	r0, [sp, #4]
 80286de:	6872      	ldr	r2, [r6, #4]
 80286e0:	4621      	mov	r1, r4
 80286e2:	2304      	movs	r3, #4
 80286e4:	b00f      	add	sp, #60	; 0x3c
 80286e6:	ecbd 8b0a 	vpop	{d8-d12}
 80286ea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80286ee:	f000 b963 	b.w	80289b8 <arm_radix8_butterfly_f32>
 80286f2:	bf00      	nop

080286f4 <arm_cfft_f32>:
 80286f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80286f8:	2a01      	cmp	r2, #1
 80286fa:	4606      	mov	r6, r0
 80286fc:	4617      	mov	r7, r2
 80286fe:	460c      	mov	r4, r1
 8028700:	4698      	mov	r8, r3
 8028702:	8805      	ldrh	r5, [r0, #0]
 8028704:	d054      	beq.n	80287b0 <arm_cfft_f32+0xbc>
 8028706:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802870a:	d04c      	beq.n	80287a6 <arm_cfft_f32+0xb2>
 802870c:	d916      	bls.n	802873c <arm_cfft_f32+0x48>
 802870e:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 8028712:	d01a      	beq.n	802874a <arm_cfft_f32+0x56>
 8028714:	d95c      	bls.n	80287d0 <arm_cfft_f32+0xdc>
 8028716:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802871a:	d044      	beq.n	80287a6 <arm_cfft_f32+0xb2>
 802871c:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 8028720:	d105      	bne.n	802872e <arm_cfft_f32+0x3a>
 8028722:	4620      	mov	r0, r4
 8028724:	4629      	mov	r1, r5
 8028726:	6872      	ldr	r2, [r6, #4]
 8028728:	2301      	movs	r3, #1
 802872a:	f000 f945 	bl	80289b8 <arm_radix8_butterfly_f32>
 802872e:	f1b8 0f00 	cmp.w	r8, #0
 8028732:	d111      	bne.n	8028758 <arm_cfft_f32+0x64>
 8028734:	2f01      	cmp	r7, #1
 8028736:	d016      	beq.n	8028766 <arm_cfft_f32+0x72>
 8028738:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802873c:	2d20      	cmp	r5, #32
 802873e:	d032      	beq.n	80287a6 <arm_cfft_f32+0xb2>
 8028740:	d94a      	bls.n	80287d8 <arm_cfft_f32+0xe4>
 8028742:	2d40      	cmp	r5, #64	; 0x40
 8028744:	d0ed      	beq.n	8028722 <arm_cfft_f32+0x2e>
 8028746:	2d80      	cmp	r5, #128	; 0x80
 8028748:	d1f1      	bne.n	802872e <arm_cfft_f32+0x3a>
 802874a:	4630      	mov	r0, r6
 802874c:	4621      	mov	r1, r4
 802874e:	f7ff fca1 	bl	8028094 <arm_cfft_radix8by2_f32>
 8028752:	f1b8 0f00 	cmp.w	r8, #0
 8028756:	d0ed      	beq.n	8028734 <arm_cfft_f32+0x40>
 8028758:	4620      	mov	r0, r4
 802875a:	89b1      	ldrh	r1, [r6, #12]
 802875c:	68b2      	ldr	r2, [r6, #8]
 802875e:	f7d7 fd47 	bl	80001f0 <arm_bitreversal_32>
 8028762:	2f01      	cmp	r7, #1
 8028764:	d1e8      	bne.n	8028738 <arm_cfft_f32+0x44>
 8028766:	ee07 5a90 	vmov	s15, r5
 802876a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802876e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028772:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 8028776:	2d00      	cmp	r5, #0
 8028778:	d0de      	beq.n	8028738 <arm_cfft_f32+0x44>
 802877a:	f104 0108 	add.w	r1, r4, #8
 802877e:	2300      	movs	r3, #0
 8028780:	3301      	adds	r3, #1
 8028782:	429d      	cmp	r5, r3
 8028784:	f101 0108 	add.w	r1, r1, #8
 8028788:	ed11 7a04 	vldr	s14, [r1, #-16]
 802878c:	ed51 7a03 	vldr	s15, [r1, #-12]
 8028790:	ee27 7a26 	vmul.f32	s14, s14, s13
 8028794:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8028798:	ed01 7a04 	vstr	s14, [r1, #-16]
 802879c:	ed41 7a03 	vstr	s15, [r1, #-12]
 80287a0:	d1ee      	bne.n	8028780 <arm_cfft_f32+0x8c>
 80287a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80287a6:	4630      	mov	r0, r6
 80287a8:	4621      	mov	r1, r4
 80287aa:	f7ff fd45 	bl	8028238 <arm_cfft_radix8by4_f32>
 80287ae:	e7be      	b.n	802872e <arm_cfft_f32+0x3a>
 80287b0:	b1ad      	cbz	r5, 80287de <arm_cfft_f32+0xea>
 80287b2:	f101 030c 	add.w	r3, r1, #12
 80287b6:	2200      	movs	r2, #0
 80287b8:	ed53 7a02 	vldr	s15, [r3, #-8]
 80287bc:	3201      	adds	r2, #1
 80287be:	eef1 7a67 	vneg.f32	s15, s15
 80287c2:	4295      	cmp	r5, r2
 80287c4:	ed43 7a02 	vstr	s15, [r3, #-8]
 80287c8:	f103 0308 	add.w	r3, r3, #8
 80287cc:	d1f4      	bne.n	80287b8 <arm_cfft_f32+0xc4>
 80287ce:	e79a      	b.n	8028706 <arm_cfft_f32+0x12>
 80287d0:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 80287d4:	d0a5      	beq.n	8028722 <arm_cfft_f32+0x2e>
 80287d6:	e7aa      	b.n	802872e <arm_cfft_f32+0x3a>
 80287d8:	2d10      	cmp	r5, #16
 80287da:	d0b6      	beq.n	802874a <arm_cfft_f32+0x56>
 80287dc:	e7a7      	b.n	802872e <arm_cfft_f32+0x3a>
 80287de:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80287e2:	d894      	bhi.n	802870e <arm_cfft_f32+0x1a>
 80287e4:	e7aa      	b.n	802873c <arm_cfft_f32+0x48>
 80287e6:	bf00      	nop

080287e8 <arm_cmplx_mag_f32>:
 80287e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80287ec:	ea5f 0892 	movs.w	r8, r2, lsr #2
 80287f0:	b084      	sub	sp, #16
 80287f2:	d07f      	beq.n	80288f4 <arm_cmplx_mag_f32+0x10c>
 80287f4:	2700      	movs	r7, #0
 80287f6:	f100 0420 	add.w	r4, r0, #32
 80287fa:	f101 0510 	add.w	r5, r1, #16
 80287fe:	4646      	mov	r6, r8
 8028800:	e05a      	b.n	80288b8 <arm_cmplx_mag_f32+0xd0>
 8028802:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028806:	eeb4 0a40 	vcmp.f32	s0, s0
 802880a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802880e:	f040 80a4 	bne.w	802895a <arm_cmplx_mag_f32+0x172>
 8028812:	ed05 0a04 	vstr	s0, [r5, #-16]
 8028816:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802881a:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802881e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028822:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028826:	ee77 7a80 	vadd.f32	s15, s15, s0
 802882a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802882e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028832:	f2c0 808f 	blt.w	8028954 <arm_cmplx_mag_f32+0x16c>
 8028836:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802883a:	eeb4 0a40 	vcmp.f32	s0, s0
 802883e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028842:	f040 80af 	bne.w	80289a4 <arm_cmplx_mag_f32+0x1bc>
 8028846:	ed05 0a03 	vstr	s0, [r5, #-12]
 802884a:	ed54 7a04 	vldr	s15, [r4, #-16]
 802884e:	ed14 0a03 	vldr	s0, [r4, #-12]
 8028852:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028856:	ee20 0a00 	vmul.f32	s0, s0, s0
 802885a:	ee77 7a80 	vadd.f32	s15, s15, s0
 802885e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028862:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028866:	db72      	blt.n	802894e <arm_cmplx_mag_f32+0x166>
 8028868:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802886c:	eeb4 0a40 	vcmp.f32	s0, s0
 8028870:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028874:	f040 808c 	bne.w	8028990 <arm_cmplx_mag_f32+0x1a8>
 8028878:	ed05 0a02 	vstr	s0, [r5, #-8]
 802887c:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028880:	ed14 0a01 	vldr	s0, [r4, #-4]
 8028884:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028888:	ee20 0a00 	vmul.f32	s0, s0, s0
 802888c:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028890:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028898:	db20      	blt.n	80288dc <arm_cmplx_mag_f32+0xf4>
 802889a:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802889e:	eeb4 0a40 	vcmp.f32	s0, s0
 80288a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80288a6:	d169      	bne.n	802897c <arm_cmplx_mag_f32+0x194>
 80288a8:	3e01      	subs	r6, #1
 80288aa:	ed05 0a01 	vstr	s0, [r5, #-4]
 80288ae:	f104 0420 	add.w	r4, r4, #32
 80288b2:	f105 0510 	add.w	r5, r5, #16
 80288b6:	d019      	beq.n	80288ec <arm_cmplx_mag_f32+0x104>
 80288b8:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 80288bc:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 80288c0:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80288c4:	ee20 0a00 	vmul.f32	s0, s0, s0
 80288c8:	ee77 7a80 	vadd.f32	s15, s15, s0
 80288cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80288d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80288d4:	da95      	bge.n	8028802 <arm_cmplx_mag_f32+0x1a>
 80288d6:	f845 7c10 	str.w	r7, [r5, #-16]
 80288da:	e79c      	b.n	8028816 <arm_cmplx_mag_f32+0x2e>
 80288dc:	3e01      	subs	r6, #1
 80288de:	f845 7c04 	str.w	r7, [r5, #-4]
 80288e2:	f104 0420 	add.w	r4, r4, #32
 80288e6:	f105 0510 	add.w	r5, r5, #16
 80288ea:	d1e5      	bne.n	80288b8 <arm_cmplx_mag_f32+0xd0>
 80288ec:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 80288f0:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 80288f4:	f012 0503 	ands.w	r5, r2, #3
 80288f8:	d026      	beq.n	8028948 <arm_cmplx_mag_f32+0x160>
 80288fa:	2600      	movs	r6, #0
 80288fc:	f100 0408 	add.w	r4, r0, #8
 8028900:	e00c      	b.n	802891c <arm_cmplx_mag_f32+0x134>
 8028902:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028906:	eeb4 0a40 	vcmp.f32	s0, s0
 802890a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802890e:	d12e      	bne.n	802896e <arm_cmplx_mag_f32+0x186>
 8028910:	3d01      	subs	r5, #1
 8028912:	ed01 0a01 	vstr	s0, [r1, #-4]
 8028916:	f104 0408 	add.w	r4, r4, #8
 802891a:	d015      	beq.n	8028948 <arm_cmplx_mag_f32+0x160>
 802891c:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028920:	ed14 0a01 	vldr	s0, [r4, #-4]
 8028924:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028928:	ee20 0a00 	vmul.f32	s0, s0, s0
 802892c:	3104      	adds	r1, #4
 802892e:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028932:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028936:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802893a:	dae2      	bge.n	8028902 <arm_cmplx_mag_f32+0x11a>
 802893c:	3d01      	subs	r5, #1
 802893e:	f841 6c04 	str.w	r6, [r1, #-4]
 8028942:	f104 0408 	add.w	r4, r4, #8
 8028946:	d1e9      	bne.n	802891c <arm_cmplx_mag_f32+0x134>
 8028948:	b004      	add	sp, #16
 802894a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802894e:	f845 7c08 	str.w	r7, [r5, #-8]
 8028952:	e793      	b.n	802887c <arm_cmplx_mag_f32+0x94>
 8028954:	f845 7c0c 	str.w	r7, [r5, #-12]
 8028958:	e777      	b.n	802884a <arm_cmplx_mag_f32+0x62>
 802895a:	eeb0 0a67 	vmov.f32	s0, s15
 802895e:	9203      	str	r2, [sp, #12]
 8028960:	9102      	str	r1, [sp, #8]
 8028962:	9001      	str	r0, [sp, #4]
 8028964:	f000 fb38 	bl	8028fd8 <sqrtf>
 8028968:	a801      	add	r0, sp, #4
 802896a:	c807      	ldmia	r0, {r0, r1, r2}
 802896c:	e751      	b.n	8028812 <arm_cmplx_mag_f32+0x2a>
 802896e:	eeb0 0a67 	vmov.f32	s0, s15
 8028972:	9101      	str	r1, [sp, #4]
 8028974:	f000 fb30 	bl	8028fd8 <sqrtf>
 8028978:	9901      	ldr	r1, [sp, #4]
 802897a:	e7c9      	b.n	8028910 <arm_cmplx_mag_f32+0x128>
 802897c:	eeb0 0a67 	vmov.f32	s0, s15
 8028980:	9203      	str	r2, [sp, #12]
 8028982:	9102      	str	r1, [sp, #8]
 8028984:	9001      	str	r0, [sp, #4]
 8028986:	f000 fb27 	bl	8028fd8 <sqrtf>
 802898a:	a801      	add	r0, sp, #4
 802898c:	c807      	ldmia	r0, {r0, r1, r2}
 802898e:	e78b      	b.n	80288a8 <arm_cmplx_mag_f32+0xc0>
 8028990:	eeb0 0a67 	vmov.f32	s0, s15
 8028994:	9203      	str	r2, [sp, #12]
 8028996:	9102      	str	r1, [sp, #8]
 8028998:	9001      	str	r0, [sp, #4]
 802899a:	f000 fb1d 	bl	8028fd8 <sqrtf>
 802899e:	a801      	add	r0, sp, #4
 80289a0:	c807      	ldmia	r0, {r0, r1, r2}
 80289a2:	e769      	b.n	8028878 <arm_cmplx_mag_f32+0x90>
 80289a4:	eeb0 0a67 	vmov.f32	s0, s15
 80289a8:	9203      	str	r2, [sp, #12]
 80289aa:	9102      	str	r1, [sp, #8]
 80289ac:	9001      	str	r0, [sp, #4]
 80289ae:	f000 fb13 	bl	8028fd8 <sqrtf>
 80289b2:	a801      	add	r0, sp, #4
 80289b4:	c807      	ldmia	r0, {r0, r1, r2}
 80289b6:	e746      	b.n	8028846 <arm_cmplx_mag_f32+0x5e>

080289b8 <arm_radix8_butterfly_f32>:
 80289b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80289bc:	ed2d 8b10 	vpush	{d8-d15}
 80289c0:	b09d      	sub	sp, #116	; 0x74
 80289c2:	461c      	mov	r4, r3
 80289c4:	ed9f bac8 	vldr	s22, [pc, #800]	; 8028ce8 <arm_radix8_butterfly_f32+0x330>
 80289c8:	921a      	str	r2, [sp, #104]	; 0x68
 80289ca:	1d03      	adds	r3, r0, #4
 80289cc:	4682      	mov	sl, r0
 80289ce:	4689      	mov	r9, r1
 80289d0:	468b      	mov	fp, r1
 80289d2:	931b      	str	r3, [sp, #108]	; 0x6c
 80289d4:	9400      	str	r4, [sp, #0]
 80289d6:	469e      	mov	lr, r3
 80289d8:	ea4f 03db 	mov.w	r3, fp, lsr #3
 80289dc:	005a      	lsls	r2, r3, #1
 80289de:	18d6      	adds	r6, r2, r3
 80289e0:	18f5      	adds	r5, r6, r3
 80289e2:	9203      	str	r2, [sp, #12]
 80289e4:	195a      	adds	r2, r3, r5
 80289e6:	18d0      	adds	r0, r2, r3
 80289e8:	00df      	lsls	r7, r3, #3
 80289ea:	1819      	adds	r1, r3, r0
 80289ec:	463c      	mov	r4, r7
 80289ee:	9701      	str	r7, [sp, #4]
 80289f0:	4457      	add	r7, sl
 80289f2:	930c      	str	r3, [sp, #48]	; 0x30
 80289f4:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 80289f8:	011b      	lsls	r3, r3, #4
 80289fa:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 80289fe:	eb07 0c04 	add.w	ip, r7, r4
 8028a02:	9c00      	ldr	r4, [sp, #0]
 8028a04:	9302      	str	r3, [sp, #8]
 8028a06:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 8028a0a:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 8028a0e:	3204      	adds	r2, #4
 8028a10:	3104      	adds	r1, #4
 8028a12:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 8028a16:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8028a1a:	f04f 0800 	mov.w	r8, #0
 8028a1e:	eddc 7a00 	vldr	s15, [ip]
 8028a22:	edd7 6a00 	vldr	s13, [r7]
 8028a26:	edd6 3a00 	vldr	s7, [r6]
 8028a2a:	ed5e aa01 	vldr	s21, [lr, #-4]
 8028a2e:	edd5 4a00 	vldr	s9, [r5]
 8028a32:	ed90 2a00 	vldr	s4, [r0]
 8028a36:	ed12 7a01 	vldr	s14, [r2, #-4]
 8028a3a:	ed51 0a01 	vldr	s1, [r1, #-4]
 8028a3e:	ee77 8a82 	vadd.f32	s17, s15, s4
 8028a42:	ee33 4aa0 	vadd.f32	s8, s7, s1
 8028a46:	ee76 1a87 	vadd.f32	s3, s13, s14
 8028a4a:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 8028a4e:	ee31 6a84 	vadd.f32	s12, s3, s8
 8028a52:	ee33 5a28 	vadd.f32	s10, s6, s17
 8028a56:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8028a5a:	ee75 6a06 	vadd.f32	s13, s10, s12
 8028a5e:	ee35 5a46 	vsub.f32	s10, s10, s12
 8028a62:	ed4e 6a01 	vstr	s13, [lr, #-4]
 8028a66:	ed85 5a00 	vstr	s10, [r5]
 8028a6a:	ed96 1a01 	vldr	s2, [r6, #4]
 8028a6e:	edd7 5a01 	vldr	s11, [r7, #4]
 8028a72:	ed92 aa00 	vldr	s20, [r2]
 8028a76:	ed91 6a00 	vldr	s12, [r1]
 8028a7a:	ed9e 9a00 	vldr	s18, [lr]
 8028a7e:	ed95 5a01 	vldr	s10, [r5, #4]
 8028a82:	eddc 6a01 	vldr	s13, [ip, #4]
 8028a86:	edd0 9a01 	vldr	s19, [r0, #4]
 8028a8a:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8028a8e:	ee71 2a46 	vsub.f32	s5, s2, s12
 8028a92:	ee75 3aca 	vsub.f32	s7, s11, s20
 8028a96:	ee37 0a60 	vsub.f32	s0, s14, s1
 8028a9a:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8028a9e:	ee37 7a20 	vadd.f32	s14, s14, s1
 8028aa2:	ee73 2ae2 	vsub.f32	s5, s7, s5
 8028aa6:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8028aaa:	ee79 3a05 	vadd.f32	s7, s18, s10
 8028aae:	ee60 0a0b 	vmul.f32	s1, s0, s22
 8028ab2:	ee39 5a45 	vsub.f32	s10, s18, s10
 8028ab6:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8028aba:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8028abe:	ee75 5a8a 	vadd.f32	s11, s11, s20
 8028ac2:	ee31 6a06 	vadd.f32	s12, s2, s12
 8028ac6:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8028aca:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8028ace:	ee62 2a8b 	vmul.f32	s5, s5, s22
 8028ad2:	ee67 7a0b 	vmul.f32	s15, s14, s22
 8028ad6:	ee33 3a68 	vsub.f32	s6, s6, s17
 8028ada:	ee36 0a88 	vadd.f32	s0, s13, s16
 8028ade:	ee75 8a86 	vadd.f32	s17, s11, s12
 8028ae2:	ee36 7ac8 	vsub.f32	s14, s13, s16
 8028ae6:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8028aea:	ee75 6a62 	vsub.f32	s13, s10, s5
 8028aee:	ee33 4ac9 	vsub.f32	s8, s7, s18
 8028af2:	ee35 6ac6 	vsub.f32	s12, s11, s12
 8028af6:	ee33 1a89 	vadd.f32	s2, s7, s18
 8028afa:	ee74 5ae0 	vsub.f32	s11, s9, s1
 8028afe:	ee74 3aa0 	vadd.f32	s7, s9, s1
 8028b02:	ee75 4a22 	vadd.f32	s9, s10, s5
 8028b06:	ee32 5a27 	vadd.f32	s10, s4, s15
 8028b0a:	ee72 7a67 	vsub.f32	s15, s4, s15
 8028b0e:	ee33 8a06 	vadd.f32	s16, s6, s12
 8028b12:	ee75 2a87 	vadd.f32	s5, s11, s14
 8028b16:	ee31 9a28 	vadd.f32	s18, s2, s17
 8028b1a:	ee33 6a46 	vsub.f32	s12, s6, s12
 8028b1e:	ee74 0a61 	vsub.f32	s1, s8, s3
 8028b22:	ee33 2a80 	vadd.f32	s4, s7, s0
 8028b26:	ee35 7ac7 	vsub.f32	s14, s11, s14
 8028b2a:	ee34 3ac5 	vsub.f32	s6, s9, s10
 8028b2e:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8028b32:	ee31 1a68 	vsub.f32	s2, s2, s17
 8028b36:	ee34 4a21 	vadd.f32	s8, s8, s3
 8028b3a:	ee73 3ac0 	vsub.f32	s7, s7, s0
 8028b3e:	ee74 4a85 	vadd.f32	s9, s9, s10
 8028b42:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8028b46:	44d8      	add	r8, fp
 8028b48:	45c1      	cmp	r9, r8
 8028b4a:	ed8e 9a00 	vstr	s18, [lr]
 8028b4e:	ed85 1a01 	vstr	s2, [r5, #4]
 8028b52:	449e      	add	lr, r3
 8028b54:	ed8c 8a00 	vstr	s16, [ip]
 8028b58:	441d      	add	r5, r3
 8028b5a:	ed80 6a00 	vstr	s12, [r0]
 8028b5e:	edcc 0a01 	vstr	s1, [ip, #4]
 8028b62:	ed80 4a01 	vstr	s8, [r0, #4]
 8028b66:	449c      	add	ip, r3
 8028b68:	ed87 2a00 	vstr	s4, [r7]
 8028b6c:	4418      	add	r0, r3
 8028b6e:	ed41 3a01 	vstr	s7, [r1, #-4]
 8028b72:	ed42 2a01 	vstr	s5, [r2, #-4]
 8028b76:	ed86 7a00 	vstr	s14, [r6]
 8028b7a:	ed87 3a01 	vstr	s6, [r7, #4]
 8028b7e:	edc1 4a00 	vstr	s9, [r1]
 8028b82:	441f      	add	r7, r3
 8028b84:	edc2 5a00 	vstr	s11, [r2]
 8028b88:	4419      	add	r1, r3
 8028b8a:	edc6 6a01 	vstr	s13, [r6, #4]
 8028b8e:	441a      	add	r2, r3
 8028b90:	441e      	add	r6, r3
 8028b92:	f63f af44 	bhi.w	8028a1e <arm_radix8_butterfly_f32+0x66>
 8028b96:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028b98:	2907      	cmp	r1, #7
 8028b9a:	4620      	mov	r0, r4
 8028b9c:	f240 81e9 	bls.w	8028f72 <arm_radix8_butterfly_f32+0x5ba>
 8028ba0:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 8028ba4:	193e      	adds	r6, r7, r4
 8028ba6:	1935      	adds	r5, r6, r4
 8028ba8:	9c03      	ldr	r4, [sp, #12]
 8028baa:	9000      	str	r0, [sp, #0]
 8028bac:	4622      	mov	r2, r4
 8028bae:	3201      	adds	r2, #1
 8028bb0:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8028bb4:	9900      	ldr	r1, [sp, #0]
 8028bb6:	1828      	adds	r0, r5, r0
 8028bb8:	eb00 0e01 	add.w	lr, r0, r1
 8028bbc:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028bbe:	440a      	add	r2, r1
 8028bc0:	eb04 0c01 	add.w	ip, r4, r1
 8028bc4:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8028bc8:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8028bcc:	9a00      	ldr	r2, [sp, #0]
 8028bce:	940f      	str	r4, [sp, #60]	; 0x3c
 8028bd0:	00ed      	lsls	r5, r5, #3
 8028bd2:	9511      	str	r5, [sp, #68]	; 0x44
 8028bd4:	00d5      	lsls	r5, r2, #3
 8028bd6:	950d      	str	r5, [sp, #52]	; 0x34
 8028bd8:	9d01      	ldr	r5, [sp, #4]
 8028bda:	3508      	adds	r5, #8
 8028bdc:	9516      	str	r5, [sp, #88]	; 0x58
 8028bde:	9d02      	ldr	r5, [sp, #8]
 8028be0:	3508      	adds	r5, #8
 8028be2:	0114      	lsls	r4, r2, #4
 8028be4:	9517      	str	r5, [sp, #92]	; 0x5c
 8028be6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028be8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8028bea:	940e      	str	r4, [sp, #56]	; 0x38
 8028bec:	00c0      	lsls	r0, r0, #3
 8028bee:	9010      	str	r0, [sp, #64]	; 0x40
 8028bf0:	18aa      	adds	r2, r5, r2
 8028bf2:	9207      	str	r2, [sp, #28]
 8028bf4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8028bf6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8028bf8:	18aa      	adds	r2, r5, r2
 8028bfa:	9208      	str	r2, [sp, #32]
 8028bfc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028bfe:	18aa      	adds	r2, r5, r2
 8028c00:	9209      	str	r2, [sp, #36]	; 0x24
 8028c02:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8028c06:	f10e 0204 	add.w	r2, lr, #4
 8028c0a:	920a      	str	r2, [sp, #40]	; 0x28
 8028c0c:	00c9      	lsls	r1, r1, #3
 8028c0e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8028c10:	310c      	adds	r1, #12
 8028c12:	00f6      	lsls	r6, r6, #3
 8028c14:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 8028c18:	9114      	str	r1, [sp, #80]	; 0x50
 8028c1a:	18a9      	adds	r1, r5, r2
 8028c1c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8028c1e:	9612      	str	r6, [sp, #72]	; 0x48
 8028c20:	00ff      	lsls	r7, r7, #3
 8028c22:	19ae      	adds	r6, r5, r6
 8028c24:	3008      	adds	r0, #8
 8028c26:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 8028c2a:	9606      	str	r6, [sp, #24]
 8028c2c:	9019      	str	r0, [sp, #100]	; 0x64
 8028c2e:	18aa      	adds	r2, r5, r2
 8028c30:	0164      	lsls	r4, r4, #5
 8028c32:	19ee      	adds	r6, r5, r7
 8028c34:	f10c 000c 	add.w	r0, ip, #12
 8028c38:	9713      	str	r7, [sp, #76]	; 0x4c
 8028c3a:	9604      	str	r6, [sp, #16]
 8028c3c:	9015      	str	r0, [sp, #84]	; 0x54
 8028c3e:	9103      	str	r1, [sp, #12]
 8028c40:	9205      	str	r2, [sp, #20]
 8028c42:	f104 0208 	add.w	r2, r4, #8
 8028c46:	9218      	str	r2, [sp, #96]	; 0x60
 8028c48:	f04f 0801 	mov.w	r8, #1
 8028c4c:	2200      	movs	r2, #0
 8028c4e:	f102 0108 	add.w	r1, r2, #8
 8028c52:	460f      	mov	r7, r1
 8028c54:	910b      	str	r1, [sp, #44]	; 0x2c
 8028c56:	9918      	ldr	r1, [sp, #96]	; 0x60
 8028c58:	188e      	adds	r6, r1, r2
 8028c5a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8028c5c:	188d      	adds	r5, r1, r2
 8028c5e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8028c60:	188c      	adds	r4, r1, r2
 8028c62:	9919      	ldr	r1, [sp, #100]	; 0x64
 8028c64:	1888      	adds	r0, r1, r2
 8028c66:	9914      	ldr	r1, [sp, #80]	; 0x50
 8028c68:	eb01 0c02 	add.w	ip, r1, r2
 8028c6c:	9915      	ldr	r1, [sp, #84]	; 0x54
 8028c6e:	440a      	add	r2, r1
 8028c70:	9903      	ldr	r1, [sp, #12]
 8028c72:	edd1 fa00 	vldr	s31, [r1]
 8028c76:	9905      	ldr	r1, [sp, #20]
 8028c78:	ed91 fa00 	vldr	s30, [r1]
 8028c7c:	9904      	ldr	r1, [sp, #16]
 8028c7e:	edd1 ea00 	vldr	s29, [r1]
 8028c82:	9906      	ldr	r1, [sp, #24]
 8028c84:	ed91 ea00 	vldr	s28, [r1]
 8028c88:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028c8a:	edd1 da00 	vldr	s27, [r1]
 8028c8e:	9908      	ldr	r1, [sp, #32]
 8028c90:	ed91 da00 	vldr	s26, [r1]
 8028c94:	9907      	ldr	r1, [sp, #28]
 8028c96:	edd1 ca00 	vldr	s25, [r1]
 8028c9a:	9903      	ldr	r1, [sp, #12]
 8028c9c:	ed91 ca01 	vldr	s24, [r1, #4]
 8028ca0:	9905      	ldr	r1, [sp, #20]
 8028ca2:	edd1 ba01 	vldr	s23, [r1, #4]
 8028ca6:	9904      	ldr	r1, [sp, #16]
 8028ca8:	edd1 aa01 	vldr	s21, [r1, #4]
 8028cac:	9906      	ldr	r1, [sp, #24]
 8028cae:	ed91 aa01 	vldr	s20, [r1, #4]
 8028cb2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028cb4:	edd1 7a01 	vldr	s15, [r1, #4]
 8028cb8:	9908      	ldr	r1, [sp, #32]
 8028cba:	edcd 7a00 	vstr	s15, [sp]
 8028cbe:	edd1 7a01 	vldr	s15, [r1, #4]
 8028cc2:	9907      	ldr	r1, [sp, #28]
 8028cc4:	edcd 7a01 	vstr	s15, [sp, #4]
 8028cc8:	edd1 7a01 	vldr	s15, [r1, #4]
 8028ccc:	eb0a 0e07 	add.w	lr, sl, r7
 8028cd0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8028cd2:	edcd 7a02 	vstr	s15, [sp, #8]
 8028cd6:	eb0c 010a 	add.w	r1, ip, sl
 8028cda:	4456      	add	r6, sl
 8028cdc:	4455      	add	r5, sl
 8028cde:	4454      	add	r4, sl
 8028ce0:	4450      	add	r0, sl
 8028ce2:	4452      	add	r2, sl
 8028ce4:	46c4      	mov	ip, r8
 8028ce6:	e001      	b.n	8028cec <arm_radix8_butterfly_f32+0x334>
 8028ce8:	3f3504f3 	.word	0x3f3504f3
 8028cec:	ed96 5a00 	vldr	s10, [r6]
 8028cf0:	ed52 9a01 	vldr	s19, [r2, #-4]
 8028cf4:	ed11 6a01 	vldr	s12, [r1, #-4]
 8028cf8:	edd0 7a00 	vldr	s15, [r0]
 8028cfc:	ed17 7a01 	vldr	s14, [r7, #-4]
 8028d00:	edde 3a00 	vldr	s7, [lr]
 8028d04:	ed94 3a00 	vldr	s6, [r4]
 8028d08:	ed95 2a00 	vldr	s4, [r5]
 8028d0c:	ed9e 0a01 	vldr	s0, [lr, #4]
 8028d10:	ee33 8a85 	vadd.f32	s16, s7, s10
 8028d14:	ee32 1a06 	vadd.f32	s2, s4, s12
 8028d18:	ee33 4a29 	vadd.f32	s8, s6, s19
 8028d1c:	ee77 4a87 	vadd.f32	s9, s15, s14
 8028d20:	ee78 1a04 	vadd.f32	s3, s16, s8
 8028d24:	ee71 6a24 	vadd.f32	s13, s2, s9
 8028d28:	ee32 2a46 	vsub.f32	s4, s4, s12
 8028d2c:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8028d30:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028d34:	ed8e 6a00 	vstr	s12, [lr]
 8028d38:	edd0 8a01 	vldr	s17, [r0, #4]
 8028d3c:	ed95 9a01 	vldr	s18, [r5, #4]
 8028d40:	edd1 2a00 	vldr	s5, [r1]
 8028d44:	ed97 7a00 	vldr	s14, [r7]
 8028d48:	edd4 0a01 	vldr	s1, [r4, #4]
 8028d4c:	ed96 6a01 	vldr	s12, [r6, #4]
 8028d50:	edd2 5a00 	vldr	s11, [r2]
 8028d54:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8028d58:	ee33 3a69 	vsub.f32	s6, s6, s19
 8028d5c:	ee39 5a62 	vsub.f32	s10, s18, s5
 8028d60:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8028d64:	ee38 4a44 	vsub.f32	s8, s16, s8
 8028d68:	ee38 7a87 	vadd.f32	s14, s17, s14
 8028d6c:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8028d70:	ee79 2a22 	vadd.f32	s5, s18, s5
 8028d74:	ee75 8a69 	vsub.f32	s17, s10, s19
 8028d78:	ee32 9a27 	vadd.f32	s18, s4, s15
 8028d7c:	ee35 5a29 	vadd.f32	s10, s10, s19
 8028d80:	ee72 7a67 	vsub.f32	s15, s4, s15
 8028d84:	ee30 2a06 	vadd.f32	s4, s0, s12
 8028d88:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8028d8c:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8028d90:	ee32 9a08 	vadd.f32	s18, s4, s16
 8028d94:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8028d98:	ee32 2a48 	vsub.f32	s4, s4, s16
 8028d9c:	ee71 4a64 	vsub.f32	s9, s2, s9
 8028da0:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8028da4:	ee32 1a87 	vadd.f32	s2, s5, s14
 8028da8:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8028dac:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8028db0:	ee30 6a46 	vsub.f32	s12, s0, s12
 8028db4:	ee73 0a29 	vadd.f32	s1, s6, s19
 8028db8:	ee36 0a28 	vadd.f32	s0, s12, s17
 8028dbc:	ee33 3a69 	vsub.f32	s6, s6, s19
 8028dc0:	ee32 7a64 	vsub.f32	s14, s4, s9
 8028dc4:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8028dc8:	ee36 6a68 	vsub.f32	s12, s12, s17
 8028dcc:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8028dd0:	ee75 8a85 	vadd.f32	s17, s11, s10
 8028dd4:	ee74 3a22 	vadd.f32	s7, s8, s5
 8028dd8:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8028ddc:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8028de0:	ee79 1a41 	vsub.f32	s3, s18, s2
 8028de4:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8028de8:	ee76 5a43 	vsub.f32	s11, s12, s6
 8028dec:	ee74 2a62 	vsub.f32	s5, s8, s5
 8028df0:	ee72 4a24 	vadd.f32	s9, s4, s9
 8028df4:	ee30 4a60 	vsub.f32	s8, s0, s1
 8028df8:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8028dfc:	ee30 0a20 	vadd.f32	s0, s0, s1
 8028e00:	ee77 9a85 	vadd.f32	s19, s15, s10
 8028e04:	ee36 6a03 	vadd.f32	s12, s12, s6
 8028e08:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8028e0c:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8028e10:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8028e14:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8028e18:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8028e1c:	ee39 1a01 	vadd.f32	s2, s18, s2
 8028e20:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8028e24:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8028e28:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8028e2c:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8028e30:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8028e34:	ee35 3a03 	vadd.f32	s6, s10, s6
 8028e38:	ee72 6a66 	vsub.f32	s13, s4, s13
 8028e3c:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8028e40:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8028e44:	ed9d 4a02 	vldr	s8, [sp, #8]
 8028e48:	ed8e 1a01 	vstr	s2, [lr, #4]
 8028e4c:	ee77 3a63 	vsub.f32	s7, s14, s7
 8028e50:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8028e54:	ed9d 7a01 	vldr	s14, [sp, #4]
 8028e58:	ed86 3a00 	vstr	s6, [r6]
 8028e5c:	ee30 9a89 	vadd.f32	s18, s1, s18
 8028e60:	ee32 2a05 	vadd.f32	s4, s4, s10
 8028e64:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8028e68:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8028e6c:	ee67 2a22 	vmul.f32	s5, s14, s5
 8028e70:	ee64 1a00 	vmul.f32	s3, s8, s0
 8028e74:	ee27 7a24 	vmul.f32	s14, s14, s9
 8028e78:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8028e7c:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8028e80:	ee64 8a28 	vmul.f32	s17, s8, s17
 8028e84:	ed9d 4a00 	vldr	s8, [sp]
 8028e88:	edc6 6a01 	vstr	s13, [r6, #4]
 8028e8c:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8028e90:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8028e94:	ee64 9a29 	vmul.f32	s19, s8, s19
 8028e98:	ee24 4a25 	vmul.f32	s8, s8, s11
 8028e9c:	ee30 7a87 	vadd.f32	s14, s1, s14
 8028ea0:	ee74 4a84 	vadd.f32	s9, s9, s8
 8028ea4:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8028ea8:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8028eac:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8028eb0:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8028eb4:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8028eb8:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8028ebc:	ee75 1a21 	vadd.f32	s3, s10, s3
 8028ec0:	ee30 0a68 	vsub.f32	s0, s0, s17
 8028ec4:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8028ec8:	ee70 0a84 	vadd.f32	s1, s1, s8
 8028ecc:	ee36 6a67 	vsub.f32	s12, s12, s15
 8028ed0:	44dc      	add	ip, fp
 8028ed2:	45e1      	cmp	r9, ip
 8028ed4:	ed84 9a00 	vstr	s18, [r4]
 8028ed8:	edc4 3a01 	vstr	s7, [r4, #4]
 8028edc:	449e      	add	lr, r3
 8028ede:	ed02 7a01 	vstr	s14, [r2, #-4]
 8028ee2:	edc2 2a00 	vstr	s5, [r2]
 8028ee6:	441e      	add	r6, r3
 8028ee8:	ed85 2a00 	vstr	s4, [r5]
 8028eec:	ed85 8a01 	vstr	s16, [r5, #4]
 8028ef0:	441c      	add	r4, r3
 8028ef2:	ed47 1a01 	vstr	s3, [r7, #-4]
 8028ef6:	ed87 0a00 	vstr	s0, [r7]
 8028efa:	441a      	add	r2, r3
 8028efc:	ed41 4a01 	vstr	s9, [r1, #-4]
 8028f00:	edc1 9a00 	vstr	s19, [r1]
 8028f04:	441d      	add	r5, r3
 8028f06:	edc0 0a00 	vstr	s1, [r0]
 8028f0a:	441f      	add	r7, r3
 8028f0c:	ed80 6a01 	vstr	s12, [r0, #4]
 8028f10:	4419      	add	r1, r3
 8028f12:	4418      	add	r0, r3
 8028f14:	f63f aeea 	bhi.w	8028cec <arm_radix8_butterfly_f32+0x334>
 8028f18:	9a03      	ldr	r2, [sp, #12]
 8028f1a:	990d      	ldr	r1, [sp, #52]	; 0x34
 8028f1c:	440a      	add	r2, r1
 8028f1e:	9203      	str	r2, [sp, #12]
 8028f20:	990e      	ldr	r1, [sp, #56]	; 0x38
 8028f22:	9a05      	ldr	r2, [sp, #20]
 8028f24:	440a      	add	r2, r1
 8028f26:	9205      	str	r2, [sp, #20]
 8028f28:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8028f2a:	9a04      	ldr	r2, [sp, #16]
 8028f2c:	440a      	add	r2, r1
 8028f2e:	9204      	str	r2, [sp, #16]
 8028f30:	9912      	ldr	r1, [sp, #72]	; 0x48
 8028f32:	9a06      	ldr	r2, [sp, #24]
 8028f34:	440a      	add	r2, r1
 8028f36:	9206      	str	r2, [sp, #24]
 8028f38:	9911      	ldr	r1, [sp, #68]	; 0x44
 8028f3a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028f3c:	440a      	add	r2, r1
 8028f3e:	9209      	str	r2, [sp, #36]	; 0x24
 8028f40:	9910      	ldr	r1, [sp, #64]	; 0x40
 8028f42:	9a08      	ldr	r2, [sp, #32]
 8028f44:	440a      	add	r2, r1
 8028f46:	9208      	str	r2, [sp, #32]
 8028f48:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028f4a:	9a07      	ldr	r2, [sp, #28]
 8028f4c:	440a      	add	r2, r1
 8028f4e:	9207      	str	r2, [sp, #28]
 8028f50:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028f52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028f54:	f108 0801 	add.w	r8, r8, #1
 8028f58:	3208      	adds	r2, #8
 8028f5a:	4588      	cmp	r8, r1
 8028f5c:	920a      	str	r2, [sp, #40]	; 0x28
 8028f5e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8028f60:	f47f ae75 	bne.w	8028c4e <arm_radix8_butterfly_f32+0x296>
 8028f64:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8028f68:	9300      	str	r3, [sp, #0]
 8028f6a:	46c3      	mov	fp, r8
 8028f6c:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8028f70:	e532      	b.n	80289d8 <arm_radix8_butterfly_f32+0x20>
 8028f72:	b01d      	add	sp, #116	; 0x74
 8028f74:	ecbd 8b10 	vpop	{d8-d15}
 8028f78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028f7c <__aeabi_atexit>:
 8028f7c:	460b      	mov	r3, r1
 8028f7e:	4601      	mov	r1, r0
 8028f80:	4618      	mov	r0, r3
 8028f82:	f000 bef3 	b.w	8029d6c <__cxa_atexit>

08028f86 <_ZdlPvj>:
 8028f86:	f000 b812 	b.w	8028fae <_ZdlPv>

08028f8a <__cxa_guard_acquire>:
 8028f8a:	6803      	ldr	r3, [r0, #0]
 8028f8c:	07db      	lsls	r3, r3, #31
 8028f8e:	d406      	bmi.n	8028f9e <__cxa_guard_acquire+0x14>
 8028f90:	7843      	ldrb	r3, [r0, #1]
 8028f92:	b103      	cbz	r3, 8028f96 <__cxa_guard_acquire+0xc>
 8028f94:	deff      	udf	#255	; 0xff
 8028f96:	2301      	movs	r3, #1
 8028f98:	7043      	strb	r3, [r0, #1]
 8028f9a:	4618      	mov	r0, r3
 8028f9c:	4770      	bx	lr
 8028f9e:	2000      	movs	r0, #0
 8028fa0:	4770      	bx	lr

08028fa2 <__cxa_guard_release>:
 8028fa2:	2301      	movs	r3, #1
 8028fa4:	6003      	str	r3, [r0, #0]
 8028fa6:	4770      	bx	lr

08028fa8 <__cxa_pure_virtual>:
 8028fa8:	b508      	push	{r3, lr}
 8028faa:	f000 f80f 	bl	8028fcc <_ZSt9terminatev>

08028fae <_ZdlPv>:
 8028fae:	f000 be29 	b.w	8029c04 <free>

08028fb2 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8028fb2:	b508      	push	{r3, lr}
 8028fb4:	4780      	blx	r0
 8028fb6:	f000 fdf1 	bl	8029b9c <abort>
	...

08028fbc <_ZSt13get_terminatev>:
 8028fbc:	4b02      	ldr	r3, [pc, #8]	; (8028fc8 <_ZSt13get_terminatev+0xc>)
 8028fbe:	6818      	ldr	r0, [r3, #0]
 8028fc0:	f3bf 8f5b 	dmb	ish
 8028fc4:	4770      	bx	lr
 8028fc6:	bf00      	nop
 8028fc8:	20000104 	.word	0x20000104

08028fcc <_ZSt9terminatev>:
 8028fcc:	b508      	push	{r3, lr}
 8028fce:	f7ff fff5 	bl	8028fbc <_ZSt13get_terminatev>
 8028fd2:	f7ff ffee 	bl	8028fb2 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08028fd8 <sqrtf>:
 8028fd8:	b508      	push	{r3, lr}
 8028fda:	ed2d 8b02 	vpush	{d8}
 8028fde:	eeb0 8a40 	vmov.f32	s16, s0
 8028fe2:	f000 f8a1 	bl	8029128 <__ieee754_sqrtf>
 8028fe6:	eeb4 8a48 	vcmp.f32	s16, s16
 8028fea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028fee:	d60c      	bvs.n	802900a <sqrtf+0x32>
 8028ff0:	eddf 8a07 	vldr	s17, [pc, #28]	; 8029010 <sqrtf+0x38>
 8028ff4:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8028ff8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ffc:	d505      	bpl.n	802900a <sqrtf+0x32>
 8028ffe:	f001 f8d3 	bl	802a1a8 <__errno>
 8029002:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8029006:	2321      	movs	r3, #33	; 0x21
 8029008:	6003      	str	r3, [r0, #0]
 802900a:	ecbd 8b02 	vpop	{d8}
 802900e:	bd08      	pop	{r3, pc}
 8029010:	00000000 	.word	0x00000000

08029014 <cosf>:
 8029014:	ee10 3a10 	vmov	r3, s0
 8029018:	b507      	push	{r0, r1, r2, lr}
 802901a:	4a1e      	ldr	r2, [pc, #120]	; (8029094 <cosf+0x80>)
 802901c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029020:	4293      	cmp	r3, r2
 8029022:	dc06      	bgt.n	8029032 <cosf+0x1e>
 8029024:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8029098 <cosf+0x84>
 8029028:	b003      	add	sp, #12
 802902a:	f85d eb04 	ldr.w	lr, [sp], #4
 802902e:	f000 b903 	b.w	8029238 <__kernel_cosf>
 8029032:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8029036:	db04      	blt.n	8029042 <cosf+0x2e>
 8029038:	ee30 0a40 	vsub.f32	s0, s0, s0
 802903c:	b003      	add	sp, #12
 802903e:	f85d fb04 	ldr.w	pc, [sp], #4
 8029042:	4668      	mov	r0, sp
 8029044:	f000 f99e 	bl	8029384 <__ieee754_rem_pio2f>
 8029048:	f000 0003 	and.w	r0, r0, #3
 802904c:	2801      	cmp	r0, #1
 802904e:	d009      	beq.n	8029064 <cosf+0x50>
 8029050:	2802      	cmp	r0, #2
 8029052:	d010      	beq.n	8029076 <cosf+0x62>
 8029054:	b9b0      	cbnz	r0, 8029084 <cosf+0x70>
 8029056:	eddd 0a01 	vldr	s1, [sp, #4]
 802905a:	ed9d 0a00 	vldr	s0, [sp]
 802905e:	f000 f8eb 	bl	8029238 <__kernel_cosf>
 8029062:	e7eb      	b.n	802903c <cosf+0x28>
 8029064:	eddd 0a01 	vldr	s1, [sp, #4]
 8029068:	ed9d 0a00 	vldr	s0, [sp]
 802906c:	f000 f942 	bl	80292f4 <__kernel_sinf>
 8029070:	eeb1 0a40 	vneg.f32	s0, s0
 8029074:	e7e2      	b.n	802903c <cosf+0x28>
 8029076:	eddd 0a01 	vldr	s1, [sp, #4]
 802907a:	ed9d 0a00 	vldr	s0, [sp]
 802907e:	f000 f8db 	bl	8029238 <__kernel_cosf>
 8029082:	e7f5      	b.n	8029070 <cosf+0x5c>
 8029084:	eddd 0a01 	vldr	s1, [sp, #4]
 8029088:	ed9d 0a00 	vldr	s0, [sp]
 802908c:	2001      	movs	r0, #1
 802908e:	f000 f931 	bl	80292f4 <__kernel_sinf>
 8029092:	e7d3      	b.n	802903c <cosf+0x28>
 8029094:	3f490fd8 	.word	0x3f490fd8
 8029098:	00000000 	.word	0x00000000

0802909c <sinf>:
 802909c:	ee10 3a10 	vmov	r3, s0
 80290a0:	b507      	push	{r0, r1, r2, lr}
 80290a2:	4a1f      	ldr	r2, [pc, #124]	; (8029120 <sinf+0x84>)
 80290a4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80290a8:	4293      	cmp	r3, r2
 80290aa:	dc07      	bgt.n	80290bc <sinf+0x20>
 80290ac:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8029124 <sinf+0x88>
 80290b0:	2000      	movs	r0, #0
 80290b2:	b003      	add	sp, #12
 80290b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80290b8:	f000 b91c 	b.w	80292f4 <__kernel_sinf>
 80290bc:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80290c0:	db04      	blt.n	80290cc <sinf+0x30>
 80290c2:	ee30 0a40 	vsub.f32	s0, s0, s0
 80290c6:	b003      	add	sp, #12
 80290c8:	f85d fb04 	ldr.w	pc, [sp], #4
 80290cc:	4668      	mov	r0, sp
 80290ce:	f000 f959 	bl	8029384 <__ieee754_rem_pio2f>
 80290d2:	f000 0003 	and.w	r0, r0, #3
 80290d6:	2801      	cmp	r0, #1
 80290d8:	d00a      	beq.n	80290f0 <sinf+0x54>
 80290da:	2802      	cmp	r0, #2
 80290dc:	d00f      	beq.n	80290fe <sinf+0x62>
 80290de:	b9c0      	cbnz	r0, 8029112 <sinf+0x76>
 80290e0:	eddd 0a01 	vldr	s1, [sp, #4]
 80290e4:	ed9d 0a00 	vldr	s0, [sp]
 80290e8:	2001      	movs	r0, #1
 80290ea:	f000 f903 	bl	80292f4 <__kernel_sinf>
 80290ee:	e7ea      	b.n	80290c6 <sinf+0x2a>
 80290f0:	eddd 0a01 	vldr	s1, [sp, #4]
 80290f4:	ed9d 0a00 	vldr	s0, [sp]
 80290f8:	f000 f89e 	bl	8029238 <__kernel_cosf>
 80290fc:	e7e3      	b.n	80290c6 <sinf+0x2a>
 80290fe:	eddd 0a01 	vldr	s1, [sp, #4]
 8029102:	ed9d 0a00 	vldr	s0, [sp]
 8029106:	2001      	movs	r0, #1
 8029108:	f000 f8f4 	bl	80292f4 <__kernel_sinf>
 802910c:	eeb1 0a40 	vneg.f32	s0, s0
 8029110:	e7d9      	b.n	80290c6 <sinf+0x2a>
 8029112:	eddd 0a01 	vldr	s1, [sp, #4]
 8029116:	ed9d 0a00 	vldr	s0, [sp]
 802911a:	f000 f88d 	bl	8029238 <__kernel_cosf>
 802911e:	e7f5      	b.n	802910c <sinf+0x70>
 8029120:	3f490fd8 	.word	0x3f490fd8
 8029124:	00000000 	.word	0x00000000

08029128 <__ieee754_sqrtf>:
 8029128:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802912c:	4770      	bx	lr
	...

08029130 <ceilf>:
 8029130:	ee10 3a10 	vmov	r3, s0
 8029134:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8029138:	3a7f      	subs	r2, #127	; 0x7f
 802913a:	2a16      	cmp	r2, #22
 802913c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8029140:	dc2a      	bgt.n	8029198 <ceilf+0x68>
 8029142:	2a00      	cmp	r2, #0
 8029144:	da11      	bge.n	802916a <ceilf+0x3a>
 8029146:	eddf 7a19 	vldr	s15, [pc, #100]	; 80291ac <ceilf+0x7c>
 802914a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802914e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029152:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029156:	dd05      	ble.n	8029164 <ceilf+0x34>
 8029158:	2b00      	cmp	r3, #0
 802915a:	db23      	blt.n	80291a4 <ceilf+0x74>
 802915c:	2900      	cmp	r1, #0
 802915e:	bf18      	it	ne
 8029160:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8029164:	ee00 3a10 	vmov	s0, r3
 8029168:	4770      	bx	lr
 802916a:	4911      	ldr	r1, [pc, #68]	; (80291b0 <ceilf+0x80>)
 802916c:	4111      	asrs	r1, r2
 802916e:	420b      	tst	r3, r1
 8029170:	d0fa      	beq.n	8029168 <ceilf+0x38>
 8029172:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80291ac <ceilf+0x7c>
 8029176:	ee30 0a27 	vadd.f32	s0, s0, s15
 802917a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802917e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029182:	ddef      	ble.n	8029164 <ceilf+0x34>
 8029184:	2b00      	cmp	r3, #0
 8029186:	bfc2      	ittt	gt
 8029188:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802918c:	fa40 f202 	asrgt.w	r2, r0, r2
 8029190:	189b      	addgt	r3, r3, r2
 8029192:	ea23 0301 	bic.w	r3, r3, r1
 8029196:	e7e5      	b.n	8029164 <ceilf+0x34>
 8029198:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802919c:	d3e4      	bcc.n	8029168 <ceilf+0x38>
 802919e:	ee30 0a00 	vadd.f32	s0, s0, s0
 80291a2:	4770      	bx	lr
 80291a4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80291a8:	e7dc      	b.n	8029164 <ceilf+0x34>
 80291aa:	bf00      	nop
 80291ac:	7149f2ca 	.word	0x7149f2ca
 80291b0:	007fffff 	.word	0x007fffff

080291b4 <floorf>:
 80291b4:	ee10 3a10 	vmov	r3, s0
 80291b8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80291bc:	3a7f      	subs	r2, #127	; 0x7f
 80291be:	2a16      	cmp	r2, #22
 80291c0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80291c4:	dc2a      	bgt.n	802921c <floorf+0x68>
 80291c6:	2a00      	cmp	r2, #0
 80291c8:	da11      	bge.n	80291ee <floorf+0x3a>
 80291ca:	eddf 7a18 	vldr	s15, [pc, #96]	; 802922c <floorf+0x78>
 80291ce:	ee30 0a27 	vadd.f32	s0, s0, s15
 80291d2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80291d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80291da:	dd05      	ble.n	80291e8 <floorf+0x34>
 80291dc:	2b00      	cmp	r3, #0
 80291de:	da23      	bge.n	8029228 <floorf+0x74>
 80291e0:	4a13      	ldr	r2, [pc, #76]	; (8029230 <floorf+0x7c>)
 80291e2:	2900      	cmp	r1, #0
 80291e4:	bf18      	it	ne
 80291e6:	4613      	movne	r3, r2
 80291e8:	ee00 3a10 	vmov	s0, r3
 80291ec:	4770      	bx	lr
 80291ee:	4911      	ldr	r1, [pc, #68]	; (8029234 <floorf+0x80>)
 80291f0:	4111      	asrs	r1, r2
 80291f2:	420b      	tst	r3, r1
 80291f4:	d0fa      	beq.n	80291ec <floorf+0x38>
 80291f6:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802922c <floorf+0x78>
 80291fa:	ee30 0a27 	vadd.f32	s0, s0, s15
 80291fe:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8029202:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029206:	ddef      	ble.n	80291e8 <floorf+0x34>
 8029208:	2b00      	cmp	r3, #0
 802920a:	bfbe      	ittt	lt
 802920c:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8029210:	fa40 f202 	asrlt.w	r2, r0, r2
 8029214:	189b      	addlt	r3, r3, r2
 8029216:	ea23 0301 	bic.w	r3, r3, r1
 802921a:	e7e5      	b.n	80291e8 <floorf+0x34>
 802921c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8029220:	d3e4      	bcc.n	80291ec <floorf+0x38>
 8029222:	ee30 0a00 	vadd.f32	s0, s0, s0
 8029226:	4770      	bx	lr
 8029228:	2300      	movs	r3, #0
 802922a:	e7dd      	b.n	80291e8 <floorf+0x34>
 802922c:	7149f2ca 	.word	0x7149f2ca
 8029230:	bf800000 	.word	0xbf800000
 8029234:	007fffff 	.word	0x007fffff

08029238 <__kernel_cosf>:
 8029238:	ee10 3a10 	vmov	r3, s0
 802923c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8029240:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8029244:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8029248:	da05      	bge.n	8029256 <__kernel_cosf+0x1e>
 802924a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802924e:	ee17 2a90 	vmov	r2, s15
 8029252:	2a00      	cmp	r2, #0
 8029254:	d03b      	beq.n	80292ce <__kernel_cosf+0x96>
 8029256:	ee20 7a00 	vmul.f32	s14, s0, s0
 802925a:	eddf 7a1e 	vldr	s15, [pc, #120]	; 80292d4 <__kernel_cosf+0x9c>
 802925e:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 80292d8 <__kernel_cosf+0xa0>
 8029262:	4a1e      	ldr	r2, [pc, #120]	; (80292dc <__kernel_cosf+0xa4>)
 8029264:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029268:	4293      	cmp	r3, r2
 802926a:	eddf 7a1d 	vldr	s15, [pc, #116]	; 80292e0 <__kernel_cosf+0xa8>
 802926e:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029272:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 80292e4 <__kernel_cosf+0xac>
 8029276:	eea7 6a87 	vfma.f32	s12, s15, s14
 802927a:	eddf 7a1b 	vldr	s15, [pc, #108]	; 80292e8 <__kernel_cosf+0xb0>
 802927e:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029282:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 80292ec <__kernel_cosf+0xb4>
 8029286:	eea7 6a87 	vfma.f32	s12, s15, s14
 802928a:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802928e:	ee26 6a07 	vmul.f32	s12, s12, s14
 8029292:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029296:	eee7 0a06 	vfma.f32	s1, s14, s12
 802929a:	ee67 7a27 	vmul.f32	s15, s14, s15
 802929e:	dc04      	bgt.n	80292aa <__kernel_cosf+0x72>
 80292a0:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80292a4:	ee36 0ae7 	vsub.f32	s0, s13, s15
 80292a8:	4770      	bx	lr
 80292aa:	4a11      	ldr	r2, [pc, #68]	; (80292f0 <__kernel_cosf+0xb8>)
 80292ac:	4293      	cmp	r3, r2
 80292ae:	bfda      	itte	le
 80292b0:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 80292b4:	ee07 3a10 	vmovle	s14, r3
 80292b8:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 80292bc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80292c0:	ee36 0ac7 	vsub.f32	s0, s13, s14
 80292c4:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80292c8:	ee30 0a67 	vsub.f32	s0, s0, s15
 80292cc:	4770      	bx	lr
 80292ce:	eeb0 0a66 	vmov.f32	s0, s13
 80292d2:	4770      	bx	lr
 80292d4:	ad47d74e 	.word	0xad47d74e
 80292d8:	310f74f6 	.word	0x310f74f6
 80292dc:	3e999999 	.word	0x3e999999
 80292e0:	b493f27c 	.word	0xb493f27c
 80292e4:	37d00d01 	.word	0x37d00d01
 80292e8:	bab60b61 	.word	0xbab60b61
 80292ec:	3d2aaaab 	.word	0x3d2aaaab
 80292f0:	3f480000 	.word	0x3f480000

080292f4 <__kernel_sinf>:
 80292f4:	ee10 3a10 	vmov	r3, s0
 80292f8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80292fc:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8029300:	da04      	bge.n	802930c <__kernel_sinf+0x18>
 8029302:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8029306:	ee17 3a90 	vmov	r3, s15
 802930a:	b35b      	cbz	r3, 8029364 <__kernel_sinf+0x70>
 802930c:	ee20 7a00 	vmul.f32	s14, s0, s0
 8029310:	eddf 7a15 	vldr	s15, [pc, #84]	; 8029368 <__kernel_sinf+0x74>
 8029314:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802936c <__kernel_sinf+0x78>
 8029318:	eea7 6a27 	vfma.f32	s12, s14, s15
 802931c:	eddf 7a14 	vldr	s15, [pc, #80]	; 8029370 <__kernel_sinf+0x7c>
 8029320:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029324:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8029374 <__kernel_sinf+0x80>
 8029328:	eea7 6a87 	vfma.f32	s12, s15, s14
 802932c:	eddf 7a12 	vldr	s15, [pc, #72]	; 8029378 <__kernel_sinf+0x84>
 8029330:	ee60 6a07 	vmul.f32	s13, s0, s14
 8029334:	eee6 7a07 	vfma.f32	s15, s12, s14
 8029338:	b930      	cbnz	r0, 8029348 <__kernel_sinf+0x54>
 802933a:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802937c <__kernel_sinf+0x88>
 802933e:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029342:	eea6 0a26 	vfma.f32	s0, s12, s13
 8029346:	4770      	bx	lr
 8029348:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802934c:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8029350:	eee0 7a86 	vfma.f32	s15, s1, s12
 8029354:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8029358:	eddf 7a09 	vldr	s15, [pc, #36]	; 8029380 <__kernel_sinf+0x8c>
 802935c:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8029360:	ee30 0a60 	vsub.f32	s0, s0, s1
 8029364:	4770      	bx	lr
 8029366:	bf00      	nop
 8029368:	2f2ec9d3 	.word	0x2f2ec9d3
 802936c:	b2d72f34 	.word	0xb2d72f34
 8029370:	3638ef1b 	.word	0x3638ef1b
 8029374:	b9500d01 	.word	0xb9500d01
 8029378:	3c088889 	.word	0x3c088889
 802937c:	be2aaaab 	.word	0xbe2aaaab
 8029380:	3e2aaaab 	.word	0x3e2aaaab

08029384 <__ieee754_rem_pio2f>:
 8029384:	b5f0      	push	{r4, r5, r6, r7, lr}
 8029386:	ee10 6a10 	vmov	r6, s0
 802938a:	4b86      	ldr	r3, [pc, #536]	; (80295a4 <__ieee754_rem_pio2f+0x220>)
 802938c:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8029390:	429d      	cmp	r5, r3
 8029392:	b087      	sub	sp, #28
 8029394:	4604      	mov	r4, r0
 8029396:	dc05      	bgt.n	80293a4 <__ieee754_rem_pio2f+0x20>
 8029398:	2300      	movs	r3, #0
 802939a:	ed80 0a00 	vstr	s0, [r0]
 802939e:	6043      	str	r3, [r0, #4]
 80293a0:	2000      	movs	r0, #0
 80293a2:	e020      	b.n	80293e6 <__ieee754_rem_pio2f+0x62>
 80293a4:	4b80      	ldr	r3, [pc, #512]	; (80295a8 <__ieee754_rem_pio2f+0x224>)
 80293a6:	429d      	cmp	r5, r3
 80293a8:	dc38      	bgt.n	802941c <__ieee754_rem_pio2f+0x98>
 80293aa:	2e00      	cmp	r6, #0
 80293ac:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 80295ac <__ieee754_rem_pio2f+0x228>
 80293b0:	4b7f      	ldr	r3, [pc, #508]	; (80295b0 <__ieee754_rem_pio2f+0x22c>)
 80293b2:	f025 050f 	bic.w	r5, r5, #15
 80293b6:	dd18      	ble.n	80293ea <__ieee754_rem_pio2f+0x66>
 80293b8:	429d      	cmp	r5, r3
 80293ba:	ee70 7a47 	vsub.f32	s15, s0, s14
 80293be:	bf09      	itett	eq
 80293c0:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 80295b4 <__ieee754_rem_pio2f+0x230>
 80293c4:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 80295b8 <__ieee754_rem_pio2f+0x234>
 80293c8:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80293cc:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 80295bc <__ieee754_rem_pio2f+0x238>
 80293d0:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80293d4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80293d8:	edc0 6a00 	vstr	s13, [r0]
 80293dc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80293e0:	edc0 7a01 	vstr	s15, [r0, #4]
 80293e4:	2001      	movs	r0, #1
 80293e6:	b007      	add	sp, #28
 80293e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80293ea:	429d      	cmp	r5, r3
 80293ec:	ee70 7a07 	vadd.f32	s15, s0, s14
 80293f0:	bf09      	itett	eq
 80293f2:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 80295b4 <__ieee754_rem_pio2f+0x230>
 80293f6:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 80295b8 <__ieee754_rem_pio2f+0x234>
 80293fa:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80293fe:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 80295bc <__ieee754_rem_pio2f+0x238>
 8029402:	ee77 6a87 	vadd.f32	s13, s15, s14
 8029406:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802940a:	edc0 6a00 	vstr	s13, [r0]
 802940e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029412:	edc0 7a01 	vstr	s15, [r0, #4]
 8029416:	f04f 30ff 	mov.w	r0, #4294967295
 802941a:	e7e4      	b.n	80293e6 <__ieee754_rem_pio2f+0x62>
 802941c:	4b68      	ldr	r3, [pc, #416]	; (80295c0 <__ieee754_rem_pio2f+0x23c>)
 802941e:	429d      	cmp	r5, r3
 8029420:	dc71      	bgt.n	8029506 <__ieee754_rem_pio2f+0x182>
 8029422:	f000 f8db 	bl	80295dc <fabsf>
 8029426:	ed9f 7a67 	vldr	s14, [pc, #412]	; 80295c4 <__ieee754_rem_pio2f+0x240>
 802942a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802942e:	eee0 7a07 	vfma.f32	s15, s0, s14
 8029432:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029436:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802943a:	ee17 0a90 	vmov	r0, s15
 802943e:	eddf 7a5b 	vldr	s15, [pc, #364]	; 80295ac <__ieee754_rem_pio2f+0x228>
 8029442:	eea7 0a67 	vfms.f32	s0, s14, s15
 8029446:	281f      	cmp	r0, #31
 8029448:	eddf 7a5b 	vldr	s15, [pc, #364]	; 80295b8 <__ieee754_rem_pio2f+0x234>
 802944c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029450:	eeb1 6a47 	vneg.f32	s12, s14
 8029454:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029458:	ee16 2a90 	vmov	r2, s13
 802945c:	dc1c      	bgt.n	8029498 <__ieee754_rem_pio2f+0x114>
 802945e:	495a      	ldr	r1, [pc, #360]	; (80295c8 <__ieee754_rem_pio2f+0x244>)
 8029460:	1e47      	subs	r7, r0, #1
 8029462:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 8029466:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802946a:	428b      	cmp	r3, r1
 802946c:	d014      	beq.n	8029498 <__ieee754_rem_pio2f+0x114>
 802946e:	6022      	str	r2, [r4, #0]
 8029470:	ed94 7a00 	vldr	s14, [r4]
 8029474:	ee30 0a47 	vsub.f32	s0, s0, s14
 8029478:	2e00      	cmp	r6, #0
 802947a:	ee30 0a67 	vsub.f32	s0, s0, s15
 802947e:	ed84 0a01 	vstr	s0, [r4, #4]
 8029482:	dab0      	bge.n	80293e6 <__ieee754_rem_pio2f+0x62>
 8029484:	eeb1 7a47 	vneg.f32	s14, s14
 8029488:	eeb1 0a40 	vneg.f32	s0, s0
 802948c:	ed84 7a00 	vstr	s14, [r4]
 8029490:	ed84 0a01 	vstr	s0, [r4, #4]
 8029494:	4240      	negs	r0, r0
 8029496:	e7a6      	b.n	80293e6 <__ieee754_rem_pio2f+0x62>
 8029498:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802949c:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 80294a0:	2908      	cmp	r1, #8
 80294a2:	ea4f 53e5 	mov.w	r3, r5, asr #23
 80294a6:	dde2      	ble.n	802946e <__ieee754_rem_pio2f+0xea>
 80294a8:	eddf 5a42 	vldr	s11, [pc, #264]	; 80295b4 <__ieee754_rem_pio2f+0x230>
 80294ac:	eef0 6a40 	vmov.f32	s13, s0
 80294b0:	eee6 6a25 	vfma.f32	s13, s12, s11
 80294b4:	ee70 7a66 	vsub.f32	s15, s0, s13
 80294b8:	eee6 7a25 	vfma.f32	s15, s12, s11
 80294bc:	eddf 5a3f 	vldr	s11, [pc, #252]	; 80295bc <__ieee754_rem_pio2f+0x238>
 80294c0:	eed7 7a25 	vfnms.f32	s15, s14, s11
 80294c4:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80294c8:	ee15 2a90 	vmov	r2, s11
 80294cc:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 80294d0:	1a5b      	subs	r3, r3, r1
 80294d2:	2b19      	cmp	r3, #25
 80294d4:	dc04      	bgt.n	80294e0 <__ieee754_rem_pio2f+0x15c>
 80294d6:	edc4 5a00 	vstr	s11, [r4]
 80294da:	eeb0 0a66 	vmov.f32	s0, s13
 80294de:	e7c7      	b.n	8029470 <__ieee754_rem_pio2f+0xec>
 80294e0:	eddf 5a3a 	vldr	s11, [pc, #232]	; 80295cc <__ieee754_rem_pio2f+0x248>
 80294e4:	eeb0 0a66 	vmov.f32	s0, s13
 80294e8:	eea6 0a25 	vfma.f32	s0, s12, s11
 80294ec:	ee76 7ac0 	vsub.f32	s15, s13, s0
 80294f0:	eddf 6a37 	vldr	s13, [pc, #220]	; 80295d0 <__ieee754_rem_pio2f+0x24c>
 80294f4:	eee6 7a25 	vfma.f32	s15, s12, s11
 80294f8:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80294fc:	ee30 7a67 	vsub.f32	s14, s0, s15
 8029500:	ed84 7a00 	vstr	s14, [r4]
 8029504:	e7b4      	b.n	8029470 <__ieee754_rem_pio2f+0xec>
 8029506:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802950a:	db06      	blt.n	802951a <__ieee754_rem_pio2f+0x196>
 802950c:	ee70 7a40 	vsub.f32	s15, s0, s0
 8029510:	edc0 7a01 	vstr	s15, [r0, #4]
 8029514:	edc0 7a00 	vstr	s15, [r0]
 8029518:	e742      	b.n	80293a0 <__ieee754_rem_pio2f+0x1c>
 802951a:	15ea      	asrs	r2, r5, #23
 802951c:	3a86      	subs	r2, #134	; 0x86
 802951e:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 8029522:	ee07 3a90 	vmov	s15, r3
 8029526:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802952a:	eddf 6a2a 	vldr	s13, [pc, #168]	; 80295d4 <__ieee754_rem_pio2f+0x250>
 802952e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8029532:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029536:	ed8d 7a03 	vstr	s14, [sp, #12]
 802953a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802953e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8029542:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8029546:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802954a:	ed8d 7a04 	vstr	s14, [sp, #16]
 802954e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8029552:	eef5 7a40 	vcmp.f32	s15, #0.0
 8029556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802955a:	edcd 7a05 	vstr	s15, [sp, #20]
 802955e:	d11e      	bne.n	802959e <__ieee754_rem_pio2f+0x21a>
 8029560:	eeb5 7a40 	vcmp.f32	s14, #0.0
 8029564:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029568:	bf14      	ite	ne
 802956a:	2302      	movne	r3, #2
 802956c:	2301      	moveq	r3, #1
 802956e:	491a      	ldr	r1, [pc, #104]	; (80295d8 <__ieee754_rem_pio2f+0x254>)
 8029570:	9101      	str	r1, [sp, #4]
 8029572:	2102      	movs	r1, #2
 8029574:	9100      	str	r1, [sp, #0]
 8029576:	a803      	add	r0, sp, #12
 8029578:	4621      	mov	r1, r4
 802957a:	f000 f89d 	bl	80296b8 <__kernel_rem_pio2f>
 802957e:	2e00      	cmp	r6, #0
 8029580:	f6bf af31 	bge.w	80293e6 <__ieee754_rem_pio2f+0x62>
 8029584:	edd4 7a00 	vldr	s15, [r4]
 8029588:	eef1 7a67 	vneg.f32	s15, s15
 802958c:	edc4 7a00 	vstr	s15, [r4]
 8029590:	edd4 7a01 	vldr	s15, [r4, #4]
 8029594:	eef1 7a67 	vneg.f32	s15, s15
 8029598:	edc4 7a01 	vstr	s15, [r4, #4]
 802959c:	e77a      	b.n	8029494 <__ieee754_rem_pio2f+0x110>
 802959e:	2303      	movs	r3, #3
 80295a0:	e7e5      	b.n	802956e <__ieee754_rem_pio2f+0x1ea>
 80295a2:	bf00      	nop
 80295a4:	3f490fd8 	.word	0x3f490fd8
 80295a8:	4016cbe3 	.word	0x4016cbe3
 80295ac:	3fc90f80 	.word	0x3fc90f80
 80295b0:	3fc90fd0 	.word	0x3fc90fd0
 80295b4:	37354400 	.word	0x37354400
 80295b8:	37354443 	.word	0x37354443
 80295bc:	2e85a308 	.word	0x2e85a308
 80295c0:	43490f80 	.word	0x43490f80
 80295c4:	3f22f984 	.word	0x3f22f984
 80295c8:	08041da8 	.word	0x08041da8
 80295cc:	2e85a300 	.word	0x2e85a300
 80295d0:	248d3132 	.word	0x248d3132
 80295d4:	43800000 	.word	0x43800000
 80295d8:	08041e28 	.word	0x08041e28

080295dc <fabsf>:
 80295dc:	ee10 3a10 	vmov	r3, s0
 80295e0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80295e4:	ee00 3a10 	vmov	s0, r3
 80295e8:	4770      	bx	lr
	...

080295ec <scalbnf>:
 80295ec:	ee10 3a10 	vmov	r3, s0
 80295f0:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 80295f4:	d02b      	beq.n	802964e <scalbnf+0x62>
 80295f6:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80295fa:	d302      	bcc.n	8029602 <scalbnf+0x16>
 80295fc:	ee30 0a00 	vadd.f32	s0, s0, s0
 8029600:	4770      	bx	lr
 8029602:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8029606:	d123      	bne.n	8029650 <scalbnf+0x64>
 8029608:	4b24      	ldr	r3, [pc, #144]	; (802969c <scalbnf+0xb0>)
 802960a:	eddf 7a25 	vldr	s15, [pc, #148]	; 80296a0 <scalbnf+0xb4>
 802960e:	4298      	cmp	r0, r3
 8029610:	ee20 0a27 	vmul.f32	s0, s0, s15
 8029614:	db17      	blt.n	8029646 <scalbnf+0x5a>
 8029616:	ee10 3a10 	vmov	r3, s0
 802961a:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802961e:	3a19      	subs	r2, #25
 8029620:	f24c 3150 	movw	r1, #50000	; 0xc350
 8029624:	4288      	cmp	r0, r1
 8029626:	dd15      	ble.n	8029654 <scalbnf+0x68>
 8029628:	eddf 7a1e 	vldr	s15, [pc, #120]	; 80296a4 <scalbnf+0xb8>
 802962c:	eddf 6a1e 	vldr	s13, [pc, #120]	; 80296a8 <scalbnf+0xbc>
 8029630:	ee10 3a10 	vmov	r3, s0
 8029634:	eeb0 7a67 	vmov.f32	s14, s15
 8029638:	2b00      	cmp	r3, #0
 802963a:	bfb8      	it	lt
 802963c:	eef0 7a66 	vmovlt.f32	s15, s13
 8029640:	ee27 0a87 	vmul.f32	s0, s15, s14
 8029644:	4770      	bx	lr
 8029646:	eddf 7a19 	vldr	s15, [pc, #100]	; 80296ac <scalbnf+0xc0>
 802964a:	ee27 0a80 	vmul.f32	s0, s15, s0
 802964e:	4770      	bx	lr
 8029650:	0dd2      	lsrs	r2, r2, #23
 8029652:	e7e5      	b.n	8029620 <scalbnf+0x34>
 8029654:	4410      	add	r0, r2
 8029656:	28fe      	cmp	r0, #254	; 0xfe
 8029658:	dce6      	bgt.n	8029628 <scalbnf+0x3c>
 802965a:	2800      	cmp	r0, #0
 802965c:	dd06      	ble.n	802966c <scalbnf+0x80>
 802965e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029662:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029666:	ee00 3a10 	vmov	s0, r3
 802966a:	4770      	bx	lr
 802966c:	f110 0f16 	cmn.w	r0, #22
 8029670:	da09      	bge.n	8029686 <scalbnf+0x9a>
 8029672:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80296ac <scalbnf+0xc0>
 8029676:	eddf 6a0e 	vldr	s13, [pc, #56]	; 80296b0 <scalbnf+0xc4>
 802967a:	ee10 3a10 	vmov	r3, s0
 802967e:	eeb0 7a67 	vmov.f32	s14, s15
 8029682:	2b00      	cmp	r3, #0
 8029684:	e7d9      	b.n	802963a <scalbnf+0x4e>
 8029686:	3019      	adds	r0, #25
 8029688:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802968c:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029690:	ed9f 0a08 	vldr	s0, [pc, #32]	; 80296b4 <scalbnf+0xc8>
 8029694:	ee07 3a90 	vmov	s15, r3
 8029698:	e7d7      	b.n	802964a <scalbnf+0x5e>
 802969a:	bf00      	nop
 802969c:	ffff3cb0 	.word	0xffff3cb0
 80296a0:	4c000000 	.word	0x4c000000
 80296a4:	7149f2ca 	.word	0x7149f2ca
 80296a8:	f149f2ca 	.word	0xf149f2ca
 80296ac:	0da24260 	.word	0x0da24260
 80296b0:	8da24260 	.word	0x8da24260
 80296b4:	33000000 	.word	0x33000000

080296b8 <__kernel_rem_pio2f>:
 80296b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80296bc:	ed2d 8b04 	vpush	{d8-d9}
 80296c0:	b0d9      	sub	sp, #356	; 0x164
 80296c2:	4688      	mov	r8, r1
 80296c4:	9002      	str	r0, [sp, #8]
 80296c6:	49b8      	ldr	r1, [pc, #736]	; (80299a8 <__kernel_rem_pio2f+0x2f0>)
 80296c8:	9866      	ldr	r0, [sp, #408]	; 0x198
 80296ca:	9301      	str	r3, [sp, #4]
 80296cc:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 80296d0:	9901      	ldr	r1, [sp, #4]
 80296d2:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 80296d4:	f101 3bff 	add.w	fp, r1, #4294967295
 80296d8:	1d11      	adds	r1, r2, #4
 80296da:	db25      	blt.n	8029728 <__kernel_rem_pio2f+0x70>
 80296dc:	1ed0      	subs	r0, r2, #3
 80296de:	bf48      	it	mi
 80296e0:	1d10      	addmi	r0, r2, #4
 80296e2:	10c0      	asrs	r0, r0, #3
 80296e4:	1c45      	adds	r5, r0, #1
 80296e6:	00e9      	lsls	r1, r5, #3
 80296e8:	eba0 070b 	sub.w	r7, r0, fp
 80296ec:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 80299b8 <__kernel_rem_pio2f+0x300>
 80296f0:	9103      	str	r1, [sp, #12]
 80296f2:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 80296f6:	eb0a 0c0b 	add.w	ip, sl, fp
 80296fa:	ae1c      	add	r6, sp, #112	; 0x70
 80296fc:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 8029700:	2400      	movs	r4, #0
 8029702:	4564      	cmp	r4, ip
 8029704:	dd12      	ble.n	802972c <__kernel_rem_pio2f+0x74>
 8029706:	9901      	ldr	r1, [sp, #4]
 8029708:	ac1c      	add	r4, sp, #112	; 0x70
 802970a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802970e:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 8029712:	f04f 0c00 	mov.w	ip, #0
 8029716:	45d4      	cmp	ip, sl
 8029718:	dc27      	bgt.n	802976a <__kernel_rem_pio2f+0xb2>
 802971a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802971e:	eddf 7aa6 	vldr	s15, [pc, #664]	; 80299b8 <__kernel_rem_pio2f+0x300>
 8029722:	4627      	mov	r7, r4
 8029724:	2600      	movs	r6, #0
 8029726:	e016      	b.n	8029756 <__kernel_rem_pio2f+0x9e>
 8029728:	2000      	movs	r0, #0
 802972a:	e7db      	b.n	80296e4 <__kernel_rem_pio2f+0x2c>
 802972c:	42e7      	cmn	r7, r4
 802972e:	bf5d      	ittte	pl
 8029730:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 8029734:	ee07 1a90 	vmovpl	s15, r1
 8029738:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802973c:	eef0 7a47 	vmovmi.f32	s15, s14
 8029740:	ece6 7a01 	vstmia	r6!, {s15}
 8029744:	3401      	adds	r4, #1
 8029746:	e7dc      	b.n	8029702 <__kernel_rem_pio2f+0x4a>
 8029748:	ecfe 6a01 	vldmia	lr!, {s13}
 802974c:	ed97 7a00 	vldr	s14, [r7]
 8029750:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029754:	3601      	adds	r6, #1
 8029756:	455e      	cmp	r6, fp
 8029758:	f1a7 0704 	sub.w	r7, r7, #4
 802975c:	ddf4      	ble.n	8029748 <__kernel_rem_pio2f+0x90>
 802975e:	ece9 7a01 	vstmia	r9!, {s15}
 8029762:	f10c 0c01 	add.w	ip, ip, #1
 8029766:	3404      	adds	r4, #4
 8029768:	e7d5      	b.n	8029716 <__kernel_rem_pio2f+0x5e>
 802976a:	a908      	add	r1, sp, #32
 802976c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8029770:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8029774:	eddf 8a8f 	vldr	s17, [pc, #572]	; 80299b4 <__kernel_rem_pio2f+0x2fc>
 8029778:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 80299b0 <__kernel_rem_pio2f+0x2f8>
 802977c:	9105      	str	r1, [sp, #20]
 802977e:	9304      	str	r3, [sp, #16]
 8029780:	4656      	mov	r6, sl
 8029782:	00b3      	lsls	r3, r6, #2
 8029784:	9306      	str	r3, [sp, #24]
 8029786:	ab58      	add	r3, sp, #352	; 0x160
 8029788:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802978c:	ac08      	add	r4, sp, #32
 802978e:	ab44      	add	r3, sp, #272	; 0x110
 8029790:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 8029794:	46a4      	mov	ip, r4
 8029796:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802979a:	4637      	mov	r7, r6
 802979c:	2f00      	cmp	r7, #0
 802979e:	f1a0 0004 	sub.w	r0, r0, #4
 80297a2:	dc4a      	bgt.n	802983a <__kernel_rem_pio2f+0x182>
 80297a4:	4628      	mov	r0, r5
 80297a6:	9207      	str	r2, [sp, #28]
 80297a8:	f7ff ff20 	bl	80295ec <scalbnf>
 80297ac:	eeb0 8a40 	vmov.f32	s16, s0
 80297b0:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 80297b4:	ee28 0a00 	vmul.f32	s0, s16, s0
 80297b8:	f7ff fcfc 	bl	80291b4 <floorf>
 80297bc:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 80297c0:	eea0 8a67 	vfms.f32	s16, s0, s15
 80297c4:	2d00      	cmp	r5, #0
 80297c6:	9a07      	ldr	r2, [sp, #28]
 80297c8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80297cc:	ee17 9a90 	vmov	r9, s15
 80297d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80297d4:	ee38 8a67 	vsub.f32	s16, s16, s15
 80297d8:	dd41      	ble.n	802985e <__kernel_rem_pio2f+0x1a6>
 80297da:	f106 3cff 	add.w	ip, r6, #4294967295
 80297de:	ab08      	add	r3, sp, #32
 80297e0:	f1c5 0e08 	rsb	lr, r5, #8
 80297e4:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 80297e8:	fa47 f00e 	asr.w	r0, r7, lr
 80297ec:	4481      	add	r9, r0
 80297ee:	fa00 f00e 	lsl.w	r0, r0, lr
 80297f2:	1a3f      	subs	r7, r7, r0
 80297f4:	f1c5 0007 	rsb	r0, r5, #7
 80297f8:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 80297fc:	4107      	asrs	r7, r0
 80297fe:	2f00      	cmp	r7, #0
 8029800:	dd3c      	ble.n	802987c <__kernel_rem_pio2f+0x1c4>
 8029802:	f04f 0e00 	mov.w	lr, #0
 8029806:	f109 0901 	add.w	r9, r9, #1
 802980a:	4671      	mov	r1, lr
 802980c:	4576      	cmp	r6, lr
 802980e:	dc67      	bgt.n	80298e0 <__kernel_rem_pio2f+0x228>
 8029810:	2d00      	cmp	r5, #0
 8029812:	dd03      	ble.n	802981c <__kernel_rem_pio2f+0x164>
 8029814:	2d01      	cmp	r5, #1
 8029816:	d074      	beq.n	8029902 <__kernel_rem_pio2f+0x24a>
 8029818:	2d02      	cmp	r5, #2
 802981a:	d07b      	beq.n	8029914 <__kernel_rem_pio2f+0x25c>
 802981c:	2f02      	cmp	r7, #2
 802981e:	d12d      	bne.n	802987c <__kernel_rem_pio2f+0x1c4>
 8029820:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029824:	ee30 8a48 	vsub.f32	s16, s0, s16
 8029828:	b341      	cbz	r1, 802987c <__kernel_rem_pio2f+0x1c4>
 802982a:	4628      	mov	r0, r5
 802982c:	9207      	str	r2, [sp, #28]
 802982e:	f7ff fedd 	bl	80295ec <scalbnf>
 8029832:	9a07      	ldr	r2, [sp, #28]
 8029834:	ee38 8a40 	vsub.f32	s16, s16, s0
 8029838:	e020      	b.n	802987c <__kernel_rem_pio2f+0x1c4>
 802983a:	ee60 7a28 	vmul.f32	s15, s0, s17
 802983e:	3f01      	subs	r7, #1
 8029840:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8029844:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029848:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802984c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029850:	ecac 0a01 	vstmia	ip!, {s0}
 8029854:	ed90 0a00 	vldr	s0, [r0]
 8029858:	ee37 0a80 	vadd.f32	s0, s15, s0
 802985c:	e79e      	b.n	802979c <__kernel_rem_pio2f+0xe4>
 802985e:	d105      	bne.n	802986c <__kernel_rem_pio2f+0x1b4>
 8029860:	1e70      	subs	r0, r6, #1
 8029862:	ab08      	add	r3, sp, #32
 8029864:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8029868:	11ff      	asrs	r7, r7, #7
 802986a:	e7c8      	b.n	80297fe <__kernel_rem_pio2f+0x146>
 802986c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029870:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8029874:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029878:	da30      	bge.n	80298dc <__kernel_rem_pio2f+0x224>
 802987a:	2700      	movs	r7, #0
 802987c:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8029880:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029884:	f040 809a 	bne.w	80299bc <__kernel_rem_pio2f+0x304>
 8029888:	1e74      	subs	r4, r6, #1
 802988a:	46a4      	mov	ip, r4
 802988c:	2100      	movs	r1, #0
 802988e:	45d4      	cmp	ip, sl
 8029890:	da47      	bge.n	8029922 <__kernel_rem_pio2f+0x26a>
 8029892:	2900      	cmp	r1, #0
 8029894:	d063      	beq.n	802995e <__kernel_rem_pio2f+0x2a6>
 8029896:	ab08      	add	r3, sp, #32
 8029898:	3d08      	subs	r5, #8
 802989a:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802989e:	2b00      	cmp	r3, #0
 80298a0:	d07f      	beq.n	80299a2 <__kernel_rem_pio2f+0x2ea>
 80298a2:	4628      	mov	r0, r5
 80298a4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80298a8:	f7ff fea0 	bl	80295ec <scalbnf>
 80298ac:	1c63      	adds	r3, r4, #1
 80298ae:	aa44      	add	r2, sp, #272	; 0x110
 80298b0:	ed9f 7a40 	vldr	s14, [pc, #256]	; 80299b4 <__kernel_rem_pio2f+0x2fc>
 80298b4:	0099      	lsls	r1, r3, #2
 80298b6:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80298ba:	4623      	mov	r3, r4
 80298bc:	2b00      	cmp	r3, #0
 80298be:	f280 80ad 	bge.w	8029a1c <__kernel_rem_pio2f+0x364>
 80298c2:	4623      	mov	r3, r4
 80298c4:	2b00      	cmp	r3, #0
 80298c6:	f2c0 80cb 	blt.w	8029a60 <__kernel_rem_pio2f+0x3a8>
 80298ca:	aa44      	add	r2, sp, #272	; 0x110
 80298cc:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80298d0:	4e36      	ldr	r6, [pc, #216]	; (80299ac <__kernel_rem_pio2f+0x2f4>)
 80298d2:	eddf 7a39 	vldr	s15, [pc, #228]	; 80299b8 <__kernel_rem_pio2f+0x300>
 80298d6:	2000      	movs	r0, #0
 80298d8:	1ae2      	subs	r2, r4, r3
 80298da:	e0b6      	b.n	8029a4a <__kernel_rem_pio2f+0x392>
 80298dc:	2702      	movs	r7, #2
 80298de:	e790      	b.n	8029802 <__kernel_rem_pio2f+0x14a>
 80298e0:	6820      	ldr	r0, [r4, #0]
 80298e2:	b949      	cbnz	r1, 80298f8 <__kernel_rem_pio2f+0x240>
 80298e4:	b118      	cbz	r0, 80298ee <__kernel_rem_pio2f+0x236>
 80298e6:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80298ea:	6020      	str	r0, [r4, #0]
 80298ec:	2001      	movs	r0, #1
 80298ee:	f10e 0e01 	add.w	lr, lr, #1
 80298f2:	3404      	adds	r4, #4
 80298f4:	4601      	mov	r1, r0
 80298f6:	e789      	b.n	802980c <__kernel_rem_pio2f+0x154>
 80298f8:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 80298fc:	6020      	str	r0, [r4, #0]
 80298fe:	4608      	mov	r0, r1
 8029900:	e7f5      	b.n	80298ee <__kernel_rem_pio2f+0x236>
 8029902:	1e74      	subs	r4, r6, #1
 8029904:	ab08      	add	r3, sp, #32
 8029906:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802990a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802990e:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8029912:	e783      	b.n	802981c <__kernel_rem_pio2f+0x164>
 8029914:	1e74      	subs	r4, r6, #1
 8029916:	ab08      	add	r3, sp, #32
 8029918:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802991c:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 8029920:	e7f5      	b.n	802990e <__kernel_rem_pio2f+0x256>
 8029922:	ab08      	add	r3, sp, #32
 8029924:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 8029928:	f10c 3cff 	add.w	ip, ip, #4294967295
 802992c:	4301      	orrs	r1, r0
 802992e:	e7ae      	b.n	802988e <__kernel_rem_pio2f+0x1d6>
 8029930:	3001      	adds	r0, #1
 8029932:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 8029936:	2f00      	cmp	r7, #0
 8029938:	d0fa      	beq.n	8029930 <__kernel_rem_pio2f+0x278>
 802993a:	9b06      	ldr	r3, [sp, #24]
 802993c:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 8029940:	eb0d 0403 	add.w	r4, sp, r3
 8029944:	9b01      	ldr	r3, [sp, #4]
 8029946:	18f7      	adds	r7, r6, r3
 8029948:	ab1c      	add	r3, sp, #112	; 0x70
 802994a:	f106 0c01 	add.w	ip, r6, #1
 802994e:	3c4c      	subs	r4, #76	; 0x4c
 8029950:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8029954:	4430      	add	r0, r6
 8029956:	4560      	cmp	r0, ip
 8029958:	da04      	bge.n	8029964 <__kernel_rem_pio2f+0x2ac>
 802995a:	4606      	mov	r6, r0
 802995c:	e711      	b.n	8029782 <__kernel_rem_pio2f+0xca>
 802995e:	9c05      	ldr	r4, [sp, #20]
 8029960:	2001      	movs	r0, #1
 8029962:	e7e6      	b.n	8029932 <__kernel_rem_pio2f+0x27a>
 8029964:	9b04      	ldr	r3, [sp, #16]
 8029966:	f8dd e008 	ldr.w	lr, [sp, #8]
 802996a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802996e:	9306      	str	r3, [sp, #24]
 8029970:	ee07 3a90 	vmov	s15, r3
 8029974:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029978:	2600      	movs	r6, #0
 802997a:	ece7 7a01 	vstmia	r7!, {s15}
 802997e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 80299b8 <__kernel_rem_pio2f+0x300>
 8029982:	46b9      	mov	r9, r7
 8029984:	455e      	cmp	r6, fp
 8029986:	dd04      	ble.n	8029992 <__kernel_rem_pio2f+0x2da>
 8029988:	ece4 7a01 	vstmia	r4!, {s15}
 802998c:	f10c 0c01 	add.w	ip, ip, #1
 8029990:	e7e1      	b.n	8029956 <__kernel_rem_pio2f+0x29e>
 8029992:	ecfe 6a01 	vldmia	lr!, {s13}
 8029996:	ed39 7a01 	vldmdb	r9!, {s14}
 802999a:	3601      	adds	r6, #1
 802999c:	eee6 7a87 	vfma.f32	s15, s13, s14
 80299a0:	e7f0      	b.n	8029984 <__kernel_rem_pio2f+0x2cc>
 80299a2:	3c01      	subs	r4, #1
 80299a4:	e777      	b.n	8029896 <__kernel_rem_pio2f+0x1de>
 80299a6:	bf00      	nop
 80299a8:	0804216c 	.word	0x0804216c
 80299ac:	08042140 	.word	0x08042140
 80299b0:	43800000 	.word	0x43800000
 80299b4:	3b800000 	.word	0x3b800000
 80299b8:	00000000 	.word	0x00000000
 80299bc:	9b03      	ldr	r3, [sp, #12]
 80299be:	eeb0 0a48 	vmov.f32	s0, s16
 80299c2:	1a98      	subs	r0, r3, r2
 80299c4:	f7ff fe12 	bl	80295ec <scalbnf>
 80299c8:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 80299b0 <__kernel_rem_pio2f+0x2f8>
 80299cc:	eeb4 0ac7 	vcmpe.f32	s0, s14
 80299d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80299d4:	db19      	blt.n	8029a0a <__kernel_rem_pio2f+0x352>
 80299d6:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 80299b4 <__kernel_rem_pio2f+0x2fc>
 80299da:	ee60 7a27 	vmul.f32	s15, s0, s15
 80299de:	aa08      	add	r2, sp, #32
 80299e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80299e4:	1c74      	adds	r4, r6, #1
 80299e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80299ea:	3508      	adds	r5, #8
 80299ec:	eea7 0ac7 	vfms.f32	s0, s15, s14
 80299f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80299f4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80299f8:	ee10 3a10 	vmov	r3, s0
 80299fc:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029a00:	ee17 3a90 	vmov	r3, s15
 8029a04:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 8029a08:	e74b      	b.n	80298a2 <__kernel_rem_pio2f+0x1ea>
 8029a0a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8029a0e:	aa08      	add	r2, sp, #32
 8029a10:	ee10 3a10 	vmov	r3, s0
 8029a14:	4634      	mov	r4, r6
 8029a16:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8029a1a:	e742      	b.n	80298a2 <__kernel_rem_pio2f+0x1ea>
 8029a1c:	a808      	add	r0, sp, #32
 8029a1e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 8029a22:	9001      	str	r0, [sp, #4]
 8029a24:	ee07 0a90 	vmov	s15, r0
 8029a28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029a2c:	3b01      	subs	r3, #1
 8029a2e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029a32:	ee20 0a07 	vmul.f32	s0, s0, s14
 8029a36:	ed62 7a01 	vstmdb	r2!, {s15}
 8029a3a:	e73f      	b.n	80298bc <__kernel_rem_pio2f+0x204>
 8029a3c:	ecf6 6a01 	vldmia	r6!, {s13}
 8029a40:	ecb5 7a01 	vldmia	r5!, {s14}
 8029a44:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029a48:	3001      	adds	r0, #1
 8029a4a:	4550      	cmp	r0, sl
 8029a4c:	dc01      	bgt.n	8029a52 <__kernel_rem_pio2f+0x39a>
 8029a4e:	4290      	cmp	r0, r2
 8029a50:	ddf4      	ble.n	8029a3c <__kernel_rem_pio2f+0x384>
 8029a52:	a858      	add	r0, sp, #352	; 0x160
 8029a54:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8029a58:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8029a5c:	3b01      	subs	r3, #1
 8029a5e:	e731      	b.n	80298c4 <__kernel_rem_pio2f+0x20c>
 8029a60:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029a62:	2b02      	cmp	r3, #2
 8029a64:	dc09      	bgt.n	8029a7a <__kernel_rem_pio2f+0x3c2>
 8029a66:	2b00      	cmp	r3, #0
 8029a68:	dc2b      	bgt.n	8029ac2 <__kernel_rem_pio2f+0x40a>
 8029a6a:	d044      	beq.n	8029af6 <__kernel_rem_pio2f+0x43e>
 8029a6c:	f009 0007 	and.w	r0, r9, #7
 8029a70:	b059      	add	sp, #356	; 0x164
 8029a72:	ecbd 8b04 	vpop	{d8-d9}
 8029a76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029a7a:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029a7c:	2b03      	cmp	r3, #3
 8029a7e:	d1f5      	bne.n	8029a6c <__kernel_rem_pio2f+0x3b4>
 8029a80:	aa30      	add	r2, sp, #192	; 0xc0
 8029a82:	1f0b      	subs	r3, r1, #4
 8029a84:	4413      	add	r3, r2
 8029a86:	461a      	mov	r2, r3
 8029a88:	4620      	mov	r0, r4
 8029a8a:	2800      	cmp	r0, #0
 8029a8c:	f1a2 0204 	sub.w	r2, r2, #4
 8029a90:	dc52      	bgt.n	8029b38 <__kernel_rem_pio2f+0x480>
 8029a92:	4622      	mov	r2, r4
 8029a94:	2a01      	cmp	r2, #1
 8029a96:	f1a3 0304 	sub.w	r3, r3, #4
 8029a9a:	dc5d      	bgt.n	8029b58 <__kernel_rem_pio2f+0x4a0>
 8029a9c:	ab30      	add	r3, sp, #192	; 0xc0
 8029a9e:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 80299b8 <__kernel_rem_pio2f+0x300>
 8029aa2:	440b      	add	r3, r1
 8029aa4:	2c01      	cmp	r4, #1
 8029aa6:	dc67      	bgt.n	8029b78 <__kernel_rem_pio2f+0x4c0>
 8029aa8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8029aac:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8029ab0:	2f00      	cmp	r7, #0
 8029ab2:	d167      	bne.n	8029b84 <__kernel_rem_pio2f+0x4cc>
 8029ab4:	edc8 6a00 	vstr	s13, [r8]
 8029ab8:	ed88 7a01 	vstr	s14, [r8, #4]
 8029abc:	edc8 7a02 	vstr	s15, [r8, #8]
 8029ac0:	e7d4      	b.n	8029a6c <__kernel_rem_pio2f+0x3b4>
 8029ac2:	ab30      	add	r3, sp, #192	; 0xc0
 8029ac4:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 80299b8 <__kernel_rem_pio2f+0x300>
 8029ac8:	440b      	add	r3, r1
 8029aca:	4622      	mov	r2, r4
 8029acc:	2a00      	cmp	r2, #0
 8029ace:	da24      	bge.n	8029b1a <__kernel_rem_pio2f+0x462>
 8029ad0:	b34f      	cbz	r7, 8029b26 <__kernel_rem_pio2f+0x46e>
 8029ad2:	eef1 7a47 	vneg.f32	s15, s14
 8029ad6:	edc8 7a00 	vstr	s15, [r8]
 8029ada:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8029ade:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029ae2:	aa31      	add	r2, sp, #196	; 0xc4
 8029ae4:	2301      	movs	r3, #1
 8029ae6:	429c      	cmp	r4, r3
 8029ae8:	da20      	bge.n	8029b2c <__kernel_rem_pio2f+0x474>
 8029aea:	b10f      	cbz	r7, 8029af0 <__kernel_rem_pio2f+0x438>
 8029aec:	eef1 7a67 	vneg.f32	s15, s15
 8029af0:	edc8 7a01 	vstr	s15, [r8, #4]
 8029af4:	e7ba      	b.n	8029a6c <__kernel_rem_pio2f+0x3b4>
 8029af6:	ab30      	add	r3, sp, #192	; 0xc0
 8029af8:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 80299b8 <__kernel_rem_pio2f+0x300>
 8029afc:	440b      	add	r3, r1
 8029afe:	2c00      	cmp	r4, #0
 8029b00:	da05      	bge.n	8029b0e <__kernel_rem_pio2f+0x456>
 8029b02:	b10f      	cbz	r7, 8029b08 <__kernel_rem_pio2f+0x450>
 8029b04:	eef1 7a67 	vneg.f32	s15, s15
 8029b08:	edc8 7a00 	vstr	s15, [r8]
 8029b0c:	e7ae      	b.n	8029a6c <__kernel_rem_pio2f+0x3b4>
 8029b0e:	ed33 7a01 	vldmdb	r3!, {s14}
 8029b12:	3c01      	subs	r4, #1
 8029b14:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029b18:	e7f1      	b.n	8029afe <__kernel_rem_pio2f+0x446>
 8029b1a:	ed73 7a01 	vldmdb	r3!, {s15}
 8029b1e:	3a01      	subs	r2, #1
 8029b20:	ee37 7a27 	vadd.f32	s14, s14, s15
 8029b24:	e7d2      	b.n	8029acc <__kernel_rem_pio2f+0x414>
 8029b26:	eef0 7a47 	vmov.f32	s15, s14
 8029b2a:	e7d4      	b.n	8029ad6 <__kernel_rem_pio2f+0x41e>
 8029b2c:	ecb2 7a01 	vldmia	r2!, {s14}
 8029b30:	3301      	adds	r3, #1
 8029b32:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029b36:	e7d6      	b.n	8029ae6 <__kernel_rem_pio2f+0x42e>
 8029b38:	edd2 7a00 	vldr	s15, [r2]
 8029b3c:	edd2 6a01 	vldr	s13, [r2, #4]
 8029b40:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029b44:	3801      	subs	r0, #1
 8029b46:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029b4a:	ed82 7a00 	vstr	s14, [r2]
 8029b4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8029b52:	edc2 7a01 	vstr	s15, [r2, #4]
 8029b56:	e798      	b.n	8029a8a <__kernel_rem_pio2f+0x3d2>
 8029b58:	edd3 7a00 	vldr	s15, [r3]
 8029b5c:	edd3 6a01 	vldr	s13, [r3, #4]
 8029b60:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8029b64:	3a01      	subs	r2, #1
 8029b66:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029b6a:	ed83 7a00 	vstr	s14, [r3]
 8029b6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8029b72:	edc3 7a01 	vstr	s15, [r3, #4]
 8029b76:	e78d      	b.n	8029a94 <__kernel_rem_pio2f+0x3dc>
 8029b78:	ed33 7a01 	vldmdb	r3!, {s14}
 8029b7c:	3c01      	subs	r4, #1
 8029b7e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8029b82:	e78f      	b.n	8029aa4 <__kernel_rem_pio2f+0x3ec>
 8029b84:	eef1 6a66 	vneg.f32	s13, s13
 8029b88:	eeb1 7a47 	vneg.f32	s14, s14
 8029b8c:	edc8 6a00 	vstr	s13, [r8]
 8029b90:	ed88 7a01 	vstr	s14, [r8, #4]
 8029b94:	eef1 7a67 	vneg.f32	s15, s15
 8029b98:	e790      	b.n	8029abc <__kernel_rem_pio2f+0x404>
 8029b9a:	bf00      	nop

08029b9c <abort>:
 8029b9c:	b508      	push	{r3, lr}
 8029b9e:	2006      	movs	r0, #6
 8029ba0:	f000 fa3a 	bl	802a018 <raise>
 8029ba4:	2001      	movs	r0, #1
 8029ba6:	f7d8 fd7b 	bl	80026a0 <_exit>
	...

08029bac <__assert_func>:
 8029bac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8029bae:	4614      	mov	r4, r2
 8029bb0:	461a      	mov	r2, r3
 8029bb2:	4b09      	ldr	r3, [pc, #36]	; (8029bd8 <__assert_func+0x2c>)
 8029bb4:	681b      	ldr	r3, [r3, #0]
 8029bb6:	4605      	mov	r5, r0
 8029bb8:	68d8      	ldr	r0, [r3, #12]
 8029bba:	b14c      	cbz	r4, 8029bd0 <__assert_func+0x24>
 8029bbc:	4b07      	ldr	r3, [pc, #28]	; (8029bdc <__assert_func+0x30>)
 8029bbe:	9100      	str	r1, [sp, #0]
 8029bc0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8029bc4:	4906      	ldr	r1, [pc, #24]	; (8029be0 <__assert_func+0x34>)
 8029bc6:	462b      	mov	r3, r5
 8029bc8:	f000 f982 	bl	8029ed0 <fiprintf>
 8029bcc:	f7ff ffe6 	bl	8029b9c <abort>
 8029bd0:	4b04      	ldr	r3, [pc, #16]	; (8029be4 <__assert_func+0x38>)
 8029bd2:	461c      	mov	r4, r3
 8029bd4:	e7f3      	b.n	8029bbe <__assert_func+0x12>
 8029bd6:	bf00      	nop
 8029bd8:	20000160 	.word	0x20000160
 8029bdc:	08042178 	.word	0x08042178
 8029be0:	08042185 	.word	0x08042185
 8029be4:	080421b3 	.word	0x080421b3

08029be8 <atexit>:
 8029be8:	2300      	movs	r3, #0
 8029bea:	4601      	mov	r1, r0
 8029bec:	461a      	mov	r2, r3
 8029bee:	4618      	mov	r0, r3
 8029bf0:	f000 bb16 	b.w	802a220 <__register_exitproc>

08029bf4 <malloc>:
 8029bf4:	4b02      	ldr	r3, [pc, #8]	; (8029c00 <malloc+0xc>)
 8029bf6:	4601      	mov	r1, r0
 8029bf8:	6818      	ldr	r0, [r3, #0]
 8029bfa:	f000 b82b 	b.w	8029c54 <_malloc_r>
 8029bfe:	bf00      	nop
 8029c00:	20000160 	.word	0x20000160

08029c04 <free>:
 8029c04:	4b02      	ldr	r3, [pc, #8]	; (8029c10 <free+0xc>)
 8029c06:	4601      	mov	r1, r0
 8029c08:	6818      	ldr	r0, [r3, #0]
 8029c0a:	f000 bb67 	b.w	802a2dc <_free_r>
 8029c0e:	bf00      	nop
 8029c10:	20000160 	.word	0x20000160

08029c14 <sbrk_aligned>:
 8029c14:	b570      	push	{r4, r5, r6, lr}
 8029c16:	4e0e      	ldr	r6, [pc, #56]	; (8029c50 <sbrk_aligned+0x3c>)
 8029c18:	460c      	mov	r4, r1
 8029c1a:	6831      	ldr	r1, [r6, #0]
 8029c1c:	4605      	mov	r5, r0
 8029c1e:	b911      	cbnz	r1, 8029c26 <sbrk_aligned+0x12>
 8029c20:	f000 faa0 	bl	802a164 <_sbrk_r>
 8029c24:	6030      	str	r0, [r6, #0]
 8029c26:	4621      	mov	r1, r4
 8029c28:	4628      	mov	r0, r5
 8029c2a:	f000 fa9b 	bl	802a164 <_sbrk_r>
 8029c2e:	1c43      	adds	r3, r0, #1
 8029c30:	d00a      	beq.n	8029c48 <sbrk_aligned+0x34>
 8029c32:	1cc4      	adds	r4, r0, #3
 8029c34:	f024 0403 	bic.w	r4, r4, #3
 8029c38:	42a0      	cmp	r0, r4
 8029c3a:	d007      	beq.n	8029c4c <sbrk_aligned+0x38>
 8029c3c:	1a21      	subs	r1, r4, r0
 8029c3e:	4628      	mov	r0, r5
 8029c40:	f000 fa90 	bl	802a164 <_sbrk_r>
 8029c44:	3001      	adds	r0, #1
 8029c46:	d101      	bne.n	8029c4c <sbrk_aligned+0x38>
 8029c48:	f04f 34ff 	mov.w	r4, #4294967295
 8029c4c:	4620      	mov	r0, r4
 8029c4e:	bd70      	pop	{r4, r5, r6, pc}
 8029c50:	200137cc 	.word	0x200137cc

08029c54 <_malloc_r>:
 8029c54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029c58:	1ccd      	adds	r5, r1, #3
 8029c5a:	f025 0503 	bic.w	r5, r5, #3
 8029c5e:	3508      	adds	r5, #8
 8029c60:	2d0c      	cmp	r5, #12
 8029c62:	bf38      	it	cc
 8029c64:	250c      	movcc	r5, #12
 8029c66:	2d00      	cmp	r5, #0
 8029c68:	4607      	mov	r7, r0
 8029c6a:	db01      	blt.n	8029c70 <_malloc_r+0x1c>
 8029c6c:	42a9      	cmp	r1, r5
 8029c6e:	d905      	bls.n	8029c7c <_malloc_r+0x28>
 8029c70:	230c      	movs	r3, #12
 8029c72:	603b      	str	r3, [r7, #0]
 8029c74:	2600      	movs	r6, #0
 8029c76:	4630      	mov	r0, r6
 8029c78:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029c7c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8029d50 <_malloc_r+0xfc>
 8029c80:	f000 f868 	bl	8029d54 <__malloc_lock>
 8029c84:	f8d8 3000 	ldr.w	r3, [r8]
 8029c88:	461c      	mov	r4, r3
 8029c8a:	bb5c      	cbnz	r4, 8029ce4 <_malloc_r+0x90>
 8029c8c:	4629      	mov	r1, r5
 8029c8e:	4638      	mov	r0, r7
 8029c90:	f7ff ffc0 	bl	8029c14 <sbrk_aligned>
 8029c94:	1c43      	adds	r3, r0, #1
 8029c96:	4604      	mov	r4, r0
 8029c98:	d155      	bne.n	8029d46 <_malloc_r+0xf2>
 8029c9a:	f8d8 4000 	ldr.w	r4, [r8]
 8029c9e:	4626      	mov	r6, r4
 8029ca0:	2e00      	cmp	r6, #0
 8029ca2:	d145      	bne.n	8029d30 <_malloc_r+0xdc>
 8029ca4:	2c00      	cmp	r4, #0
 8029ca6:	d048      	beq.n	8029d3a <_malloc_r+0xe6>
 8029ca8:	6823      	ldr	r3, [r4, #0]
 8029caa:	4631      	mov	r1, r6
 8029cac:	4638      	mov	r0, r7
 8029cae:	eb04 0903 	add.w	r9, r4, r3
 8029cb2:	f000 fa57 	bl	802a164 <_sbrk_r>
 8029cb6:	4581      	cmp	r9, r0
 8029cb8:	d13f      	bne.n	8029d3a <_malloc_r+0xe6>
 8029cba:	6821      	ldr	r1, [r4, #0]
 8029cbc:	1a6d      	subs	r5, r5, r1
 8029cbe:	4629      	mov	r1, r5
 8029cc0:	4638      	mov	r0, r7
 8029cc2:	f7ff ffa7 	bl	8029c14 <sbrk_aligned>
 8029cc6:	3001      	adds	r0, #1
 8029cc8:	d037      	beq.n	8029d3a <_malloc_r+0xe6>
 8029cca:	6823      	ldr	r3, [r4, #0]
 8029ccc:	442b      	add	r3, r5
 8029cce:	6023      	str	r3, [r4, #0]
 8029cd0:	f8d8 3000 	ldr.w	r3, [r8]
 8029cd4:	2b00      	cmp	r3, #0
 8029cd6:	d038      	beq.n	8029d4a <_malloc_r+0xf6>
 8029cd8:	685a      	ldr	r2, [r3, #4]
 8029cda:	42a2      	cmp	r2, r4
 8029cdc:	d12b      	bne.n	8029d36 <_malloc_r+0xe2>
 8029cde:	2200      	movs	r2, #0
 8029ce0:	605a      	str	r2, [r3, #4]
 8029ce2:	e00f      	b.n	8029d04 <_malloc_r+0xb0>
 8029ce4:	6822      	ldr	r2, [r4, #0]
 8029ce6:	1b52      	subs	r2, r2, r5
 8029ce8:	d41f      	bmi.n	8029d2a <_malloc_r+0xd6>
 8029cea:	2a0b      	cmp	r2, #11
 8029cec:	d917      	bls.n	8029d1e <_malloc_r+0xca>
 8029cee:	1961      	adds	r1, r4, r5
 8029cf0:	42a3      	cmp	r3, r4
 8029cf2:	6025      	str	r5, [r4, #0]
 8029cf4:	bf18      	it	ne
 8029cf6:	6059      	strne	r1, [r3, #4]
 8029cf8:	6863      	ldr	r3, [r4, #4]
 8029cfa:	bf08      	it	eq
 8029cfc:	f8c8 1000 	streq.w	r1, [r8]
 8029d00:	5162      	str	r2, [r4, r5]
 8029d02:	604b      	str	r3, [r1, #4]
 8029d04:	4638      	mov	r0, r7
 8029d06:	f104 060b 	add.w	r6, r4, #11
 8029d0a:	f000 f829 	bl	8029d60 <__malloc_unlock>
 8029d0e:	f026 0607 	bic.w	r6, r6, #7
 8029d12:	1d23      	adds	r3, r4, #4
 8029d14:	1af2      	subs	r2, r6, r3
 8029d16:	d0ae      	beq.n	8029c76 <_malloc_r+0x22>
 8029d18:	1b9b      	subs	r3, r3, r6
 8029d1a:	50a3      	str	r3, [r4, r2]
 8029d1c:	e7ab      	b.n	8029c76 <_malloc_r+0x22>
 8029d1e:	42a3      	cmp	r3, r4
 8029d20:	6862      	ldr	r2, [r4, #4]
 8029d22:	d1dd      	bne.n	8029ce0 <_malloc_r+0x8c>
 8029d24:	f8c8 2000 	str.w	r2, [r8]
 8029d28:	e7ec      	b.n	8029d04 <_malloc_r+0xb0>
 8029d2a:	4623      	mov	r3, r4
 8029d2c:	6864      	ldr	r4, [r4, #4]
 8029d2e:	e7ac      	b.n	8029c8a <_malloc_r+0x36>
 8029d30:	4634      	mov	r4, r6
 8029d32:	6876      	ldr	r6, [r6, #4]
 8029d34:	e7b4      	b.n	8029ca0 <_malloc_r+0x4c>
 8029d36:	4613      	mov	r3, r2
 8029d38:	e7cc      	b.n	8029cd4 <_malloc_r+0x80>
 8029d3a:	230c      	movs	r3, #12
 8029d3c:	603b      	str	r3, [r7, #0]
 8029d3e:	4638      	mov	r0, r7
 8029d40:	f000 f80e 	bl	8029d60 <__malloc_unlock>
 8029d44:	e797      	b.n	8029c76 <_malloc_r+0x22>
 8029d46:	6025      	str	r5, [r4, #0]
 8029d48:	e7dc      	b.n	8029d04 <_malloc_r+0xb0>
 8029d4a:	605b      	str	r3, [r3, #4]
 8029d4c:	deff      	udf	#255	; 0xff
 8029d4e:	bf00      	nop
 8029d50:	200137c8 	.word	0x200137c8

08029d54 <__malloc_lock>:
 8029d54:	4801      	ldr	r0, [pc, #4]	; (8029d5c <__malloc_lock+0x8>)
 8029d56:	f000 ba52 	b.w	802a1fe <__retarget_lock_acquire_recursive>
 8029d5a:	bf00      	nop
 8029d5c:	20013911 	.word	0x20013911

08029d60 <__malloc_unlock>:
 8029d60:	4801      	ldr	r0, [pc, #4]	; (8029d68 <__malloc_unlock+0x8>)
 8029d62:	f000 ba4d 	b.w	802a200 <__retarget_lock_release_recursive>
 8029d66:	bf00      	nop
 8029d68:	20013911 	.word	0x20013911

08029d6c <__cxa_atexit>:
 8029d6c:	b510      	push	{r4, lr}
 8029d6e:	4c05      	ldr	r4, [pc, #20]	; (8029d84 <__cxa_atexit+0x18>)
 8029d70:	4613      	mov	r3, r2
 8029d72:	b12c      	cbz	r4, 8029d80 <__cxa_atexit+0x14>
 8029d74:	460a      	mov	r2, r1
 8029d76:	4601      	mov	r1, r0
 8029d78:	2002      	movs	r0, #2
 8029d7a:	f000 fa51 	bl	802a220 <__register_exitproc>
 8029d7e:	bd10      	pop	{r4, pc}
 8029d80:	4620      	mov	r0, r4
 8029d82:	e7fc      	b.n	8029d7e <__cxa_atexit+0x12>
 8029d84:	0802a221 	.word	0x0802a221

08029d88 <std>:
 8029d88:	2300      	movs	r3, #0
 8029d8a:	b510      	push	{r4, lr}
 8029d8c:	4604      	mov	r4, r0
 8029d8e:	e9c0 3300 	strd	r3, r3, [r0]
 8029d92:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8029d96:	6083      	str	r3, [r0, #8]
 8029d98:	8181      	strh	r1, [r0, #12]
 8029d9a:	6643      	str	r3, [r0, #100]	; 0x64
 8029d9c:	81c2      	strh	r2, [r0, #14]
 8029d9e:	6183      	str	r3, [r0, #24]
 8029da0:	4619      	mov	r1, r3
 8029da2:	2208      	movs	r2, #8
 8029da4:	305c      	adds	r0, #92	; 0x5c
 8029da6:	f000 f906 	bl	8029fb6 <memset>
 8029daa:	4b0d      	ldr	r3, [pc, #52]	; (8029de0 <std+0x58>)
 8029dac:	6263      	str	r3, [r4, #36]	; 0x24
 8029dae:	4b0d      	ldr	r3, [pc, #52]	; (8029de4 <std+0x5c>)
 8029db0:	62a3      	str	r3, [r4, #40]	; 0x28
 8029db2:	4b0d      	ldr	r3, [pc, #52]	; (8029de8 <std+0x60>)
 8029db4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8029db6:	4b0d      	ldr	r3, [pc, #52]	; (8029dec <std+0x64>)
 8029db8:	6323      	str	r3, [r4, #48]	; 0x30
 8029dba:	4b0d      	ldr	r3, [pc, #52]	; (8029df0 <std+0x68>)
 8029dbc:	6224      	str	r4, [r4, #32]
 8029dbe:	429c      	cmp	r4, r3
 8029dc0:	d006      	beq.n	8029dd0 <std+0x48>
 8029dc2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8029dc6:	4294      	cmp	r4, r2
 8029dc8:	d002      	beq.n	8029dd0 <std+0x48>
 8029dca:	33d0      	adds	r3, #208	; 0xd0
 8029dcc:	429c      	cmp	r4, r3
 8029dce:	d105      	bne.n	8029ddc <std+0x54>
 8029dd0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8029dd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029dd8:	f000 ba10 	b.w	802a1fc <__retarget_lock_init_recursive>
 8029ddc:	bd10      	pop	{r4, pc}
 8029dde:	bf00      	nop
 8029de0:	08029f31 	.word	0x08029f31
 8029de4:	08029f53 	.word	0x08029f53
 8029de8:	08029f8b 	.word	0x08029f8b
 8029dec:	08029faf 	.word	0x08029faf
 8029df0:	200137d0 	.word	0x200137d0

08029df4 <stdio_exit_handler>:
 8029df4:	4a02      	ldr	r2, [pc, #8]	; (8029e00 <stdio_exit_handler+0xc>)
 8029df6:	4903      	ldr	r1, [pc, #12]	; (8029e04 <stdio_exit_handler+0x10>)
 8029df8:	4803      	ldr	r0, [pc, #12]	; (8029e08 <stdio_exit_handler+0x14>)
 8029dfa:	f000 b87b 	b.w	8029ef4 <_fwalk_sglue>
 8029dfe:	bf00      	nop
 8029e00:	20000108 	.word	0x20000108
 8029e04:	0802aa29 	.word	0x0802aa29
 8029e08:	20000114 	.word	0x20000114

08029e0c <cleanup_stdio>:
 8029e0c:	6841      	ldr	r1, [r0, #4]
 8029e0e:	4b0c      	ldr	r3, [pc, #48]	; (8029e40 <cleanup_stdio+0x34>)
 8029e10:	4299      	cmp	r1, r3
 8029e12:	b510      	push	{r4, lr}
 8029e14:	4604      	mov	r4, r0
 8029e16:	d001      	beq.n	8029e1c <cleanup_stdio+0x10>
 8029e18:	f000 fe06 	bl	802aa28 <_fflush_r>
 8029e1c:	68a1      	ldr	r1, [r4, #8]
 8029e1e:	4b09      	ldr	r3, [pc, #36]	; (8029e44 <cleanup_stdio+0x38>)
 8029e20:	4299      	cmp	r1, r3
 8029e22:	d002      	beq.n	8029e2a <cleanup_stdio+0x1e>
 8029e24:	4620      	mov	r0, r4
 8029e26:	f000 fdff 	bl	802aa28 <_fflush_r>
 8029e2a:	68e1      	ldr	r1, [r4, #12]
 8029e2c:	4b06      	ldr	r3, [pc, #24]	; (8029e48 <cleanup_stdio+0x3c>)
 8029e2e:	4299      	cmp	r1, r3
 8029e30:	d004      	beq.n	8029e3c <cleanup_stdio+0x30>
 8029e32:	4620      	mov	r0, r4
 8029e34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029e38:	f000 bdf6 	b.w	802aa28 <_fflush_r>
 8029e3c:	bd10      	pop	{r4, pc}
 8029e3e:	bf00      	nop
 8029e40:	200137d0 	.word	0x200137d0
 8029e44:	20013838 	.word	0x20013838
 8029e48:	200138a0 	.word	0x200138a0

08029e4c <global_stdio_init.part.0>:
 8029e4c:	b510      	push	{r4, lr}
 8029e4e:	4b0b      	ldr	r3, [pc, #44]	; (8029e7c <global_stdio_init.part.0+0x30>)
 8029e50:	4c0b      	ldr	r4, [pc, #44]	; (8029e80 <global_stdio_init.part.0+0x34>)
 8029e52:	4a0c      	ldr	r2, [pc, #48]	; (8029e84 <global_stdio_init.part.0+0x38>)
 8029e54:	601a      	str	r2, [r3, #0]
 8029e56:	4620      	mov	r0, r4
 8029e58:	2200      	movs	r2, #0
 8029e5a:	2104      	movs	r1, #4
 8029e5c:	f7ff ff94 	bl	8029d88 <std>
 8029e60:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8029e64:	2201      	movs	r2, #1
 8029e66:	2109      	movs	r1, #9
 8029e68:	f7ff ff8e 	bl	8029d88 <std>
 8029e6c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8029e70:	2202      	movs	r2, #2
 8029e72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029e76:	2112      	movs	r1, #18
 8029e78:	f7ff bf86 	b.w	8029d88 <std>
 8029e7c:	20013908 	.word	0x20013908
 8029e80:	200137d0 	.word	0x200137d0
 8029e84:	08029df5 	.word	0x08029df5

08029e88 <__sfp_lock_acquire>:
 8029e88:	4801      	ldr	r0, [pc, #4]	; (8029e90 <__sfp_lock_acquire+0x8>)
 8029e8a:	f000 b9b8 	b.w	802a1fe <__retarget_lock_acquire_recursive>
 8029e8e:	bf00      	nop
 8029e90:	20013912 	.word	0x20013912

08029e94 <__sfp_lock_release>:
 8029e94:	4801      	ldr	r0, [pc, #4]	; (8029e9c <__sfp_lock_release+0x8>)
 8029e96:	f000 b9b3 	b.w	802a200 <__retarget_lock_release_recursive>
 8029e9a:	bf00      	nop
 8029e9c:	20013912 	.word	0x20013912

08029ea0 <__sinit>:
 8029ea0:	b510      	push	{r4, lr}
 8029ea2:	4604      	mov	r4, r0
 8029ea4:	f7ff fff0 	bl	8029e88 <__sfp_lock_acquire>
 8029ea8:	6a23      	ldr	r3, [r4, #32]
 8029eaa:	b11b      	cbz	r3, 8029eb4 <__sinit+0x14>
 8029eac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029eb0:	f7ff bff0 	b.w	8029e94 <__sfp_lock_release>
 8029eb4:	4b04      	ldr	r3, [pc, #16]	; (8029ec8 <__sinit+0x28>)
 8029eb6:	6223      	str	r3, [r4, #32]
 8029eb8:	4b04      	ldr	r3, [pc, #16]	; (8029ecc <__sinit+0x2c>)
 8029eba:	681b      	ldr	r3, [r3, #0]
 8029ebc:	2b00      	cmp	r3, #0
 8029ebe:	d1f5      	bne.n	8029eac <__sinit+0xc>
 8029ec0:	f7ff ffc4 	bl	8029e4c <global_stdio_init.part.0>
 8029ec4:	e7f2      	b.n	8029eac <__sinit+0xc>
 8029ec6:	bf00      	nop
 8029ec8:	08029e0d 	.word	0x08029e0d
 8029ecc:	20013908 	.word	0x20013908

08029ed0 <fiprintf>:
 8029ed0:	b40e      	push	{r1, r2, r3}
 8029ed2:	b503      	push	{r0, r1, lr}
 8029ed4:	4601      	mov	r1, r0
 8029ed6:	ab03      	add	r3, sp, #12
 8029ed8:	4805      	ldr	r0, [pc, #20]	; (8029ef0 <fiprintf+0x20>)
 8029eda:	f853 2b04 	ldr.w	r2, [r3], #4
 8029ede:	6800      	ldr	r0, [r0, #0]
 8029ee0:	9301      	str	r3, [sp, #4]
 8029ee2:	f000 fa71 	bl	802a3c8 <_vfiprintf_r>
 8029ee6:	b002      	add	sp, #8
 8029ee8:	f85d eb04 	ldr.w	lr, [sp], #4
 8029eec:	b003      	add	sp, #12
 8029eee:	4770      	bx	lr
 8029ef0:	20000160 	.word	0x20000160

08029ef4 <_fwalk_sglue>:
 8029ef4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029ef8:	4607      	mov	r7, r0
 8029efa:	4688      	mov	r8, r1
 8029efc:	4614      	mov	r4, r2
 8029efe:	2600      	movs	r6, #0
 8029f00:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8029f04:	f1b9 0901 	subs.w	r9, r9, #1
 8029f08:	d505      	bpl.n	8029f16 <_fwalk_sglue+0x22>
 8029f0a:	6824      	ldr	r4, [r4, #0]
 8029f0c:	2c00      	cmp	r4, #0
 8029f0e:	d1f7      	bne.n	8029f00 <_fwalk_sglue+0xc>
 8029f10:	4630      	mov	r0, r6
 8029f12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029f16:	89ab      	ldrh	r3, [r5, #12]
 8029f18:	2b01      	cmp	r3, #1
 8029f1a:	d907      	bls.n	8029f2c <_fwalk_sglue+0x38>
 8029f1c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8029f20:	3301      	adds	r3, #1
 8029f22:	d003      	beq.n	8029f2c <_fwalk_sglue+0x38>
 8029f24:	4629      	mov	r1, r5
 8029f26:	4638      	mov	r0, r7
 8029f28:	47c0      	blx	r8
 8029f2a:	4306      	orrs	r6, r0
 8029f2c:	3568      	adds	r5, #104	; 0x68
 8029f2e:	e7e9      	b.n	8029f04 <_fwalk_sglue+0x10>

08029f30 <__sread>:
 8029f30:	b510      	push	{r4, lr}
 8029f32:	460c      	mov	r4, r1
 8029f34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029f38:	f000 f8ee 	bl	802a118 <_read_r>
 8029f3c:	2800      	cmp	r0, #0
 8029f3e:	bfab      	itete	ge
 8029f40:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8029f42:	89a3      	ldrhlt	r3, [r4, #12]
 8029f44:	181b      	addge	r3, r3, r0
 8029f46:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8029f4a:	bfac      	ite	ge
 8029f4c:	6563      	strge	r3, [r4, #84]	; 0x54
 8029f4e:	81a3      	strhlt	r3, [r4, #12]
 8029f50:	bd10      	pop	{r4, pc}

08029f52 <__swrite>:
 8029f52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029f56:	461f      	mov	r7, r3
 8029f58:	898b      	ldrh	r3, [r1, #12]
 8029f5a:	05db      	lsls	r3, r3, #23
 8029f5c:	4605      	mov	r5, r0
 8029f5e:	460c      	mov	r4, r1
 8029f60:	4616      	mov	r6, r2
 8029f62:	d505      	bpl.n	8029f70 <__swrite+0x1e>
 8029f64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029f68:	2302      	movs	r3, #2
 8029f6a:	2200      	movs	r2, #0
 8029f6c:	f000 f8c2 	bl	802a0f4 <_lseek_r>
 8029f70:	89a3      	ldrh	r3, [r4, #12]
 8029f72:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029f76:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8029f7a:	81a3      	strh	r3, [r4, #12]
 8029f7c:	4632      	mov	r2, r6
 8029f7e:	463b      	mov	r3, r7
 8029f80:	4628      	mov	r0, r5
 8029f82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029f86:	f000 b8fd 	b.w	802a184 <_write_r>

08029f8a <__sseek>:
 8029f8a:	b510      	push	{r4, lr}
 8029f8c:	460c      	mov	r4, r1
 8029f8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029f92:	f000 f8af 	bl	802a0f4 <_lseek_r>
 8029f96:	1c43      	adds	r3, r0, #1
 8029f98:	89a3      	ldrh	r3, [r4, #12]
 8029f9a:	bf15      	itete	ne
 8029f9c:	6560      	strne	r0, [r4, #84]	; 0x54
 8029f9e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8029fa2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8029fa6:	81a3      	strheq	r3, [r4, #12]
 8029fa8:	bf18      	it	ne
 8029faa:	81a3      	strhne	r3, [r4, #12]
 8029fac:	bd10      	pop	{r4, pc}

08029fae <__sclose>:
 8029fae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029fb2:	f000 b839 	b.w	802a028 <_close_r>

08029fb6 <memset>:
 8029fb6:	4402      	add	r2, r0
 8029fb8:	4603      	mov	r3, r0
 8029fba:	4293      	cmp	r3, r2
 8029fbc:	d100      	bne.n	8029fc0 <memset+0xa>
 8029fbe:	4770      	bx	lr
 8029fc0:	f803 1b01 	strb.w	r1, [r3], #1
 8029fc4:	e7f9      	b.n	8029fba <memset+0x4>

08029fc6 <_raise_r>:
 8029fc6:	291f      	cmp	r1, #31
 8029fc8:	b538      	push	{r3, r4, r5, lr}
 8029fca:	4604      	mov	r4, r0
 8029fcc:	460d      	mov	r5, r1
 8029fce:	d904      	bls.n	8029fda <_raise_r+0x14>
 8029fd0:	2316      	movs	r3, #22
 8029fd2:	6003      	str	r3, [r0, #0]
 8029fd4:	f04f 30ff 	mov.w	r0, #4294967295
 8029fd8:	bd38      	pop	{r3, r4, r5, pc}
 8029fda:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8029fdc:	b112      	cbz	r2, 8029fe4 <_raise_r+0x1e>
 8029fde:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8029fe2:	b94b      	cbnz	r3, 8029ff8 <_raise_r+0x32>
 8029fe4:	4620      	mov	r0, r4
 8029fe6:	f000 f8bb 	bl	802a160 <_getpid_r>
 8029fea:	462a      	mov	r2, r5
 8029fec:	4601      	mov	r1, r0
 8029fee:	4620      	mov	r0, r4
 8029ff0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8029ff4:	f000 b8a2 	b.w	802a13c <_kill_r>
 8029ff8:	2b01      	cmp	r3, #1
 8029ffa:	d00a      	beq.n	802a012 <_raise_r+0x4c>
 8029ffc:	1c59      	adds	r1, r3, #1
 8029ffe:	d103      	bne.n	802a008 <_raise_r+0x42>
 802a000:	2316      	movs	r3, #22
 802a002:	6003      	str	r3, [r0, #0]
 802a004:	2001      	movs	r0, #1
 802a006:	e7e7      	b.n	8029fd8 <_raise_r+0x12>
 802a008:	2400      	movs	r4, #0
 802a00a:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802a00e:	4628      	mov	r0, r5
 802a010:	4798      	blx	r3
 802a012:	2000      	movs	r0, #0
 802a014:	e7e0      	b.n	8029fd8 <_raise_r+0x12>
	...

0802a018 <raise>:
 802a018:	4b02      	ldr	r3, [pc, #8]	; (802a024 <raise+0xc>)
 802a01a:	4601      	mov	r1, r0
 802a01c:	6818      	ldr	r0, [r3, #0]
 802a01e:	f7ff bfd2 	b.w	8029fc6 <_raise_r>
 802a022:	bf00      	nop
 802a024:	20000160 	.word	0x20000160

0802a028 <_close_r>:
 802a028:	b538      	push	{r3, r4, r5, lr}
 802a02a:	4d06      	ldr	r5, [pc, #24]	; (802a044 <_close_r+0x1c>)
 802a02c:	2300      	movs	r3, #0
 802a02e:	4604      	mov	r4, r0
 802a030:	4608      	mov	r0, r1
 802a032:	602b      	str	r3, [r5, #0]
 802a034:	f7d8 fb56 	bl	80026e4 <_close>
 802a038:	1c43      	adds	r3, r0, #1
 802a03a:	d102      	bne.n	802a042 <_close_r+0x1a>
 802a03c:	682b      	ldr	r3, [r5, #0]
 802a03e:	b103      	cbz	r3, 802a042 <_close_r+0x1a>
 802a040:	6023      	str	r3, [r4, #0]
 802a042:	bd38      	pop	{r3, r4, r5, pc}
 802a044:	2001390c 	.word	0x2001390c

0802a048 <_reclaim_reent>:
 802a048:	4b29      	ldr	r3, [pc, #164]	; (802a0f0 <_reclaim_reent+0xa8>)
 802a04a:	681b      	ldr	r3, [r3, #0]
 802a04c:	4283      	cmp	r3, r0
 802a04e:	b570      	push	{r4, r5, r6, lr}
 802a050:	4604      	mov	r4, r0
 802a052:	d04b      	beq.n	802a0ec <_reclaim_reent+0xa4>
 802a054:	69c3      	ldr	r3, [r0, #28]
 802a056:	b143      	cbz	r3, 802a06a <_reclaim_reent+0x22>
 802a058:	68db      	ldr	r3, [r3, #12]
 802a05a:	2b00      	cmp	r3, #0
 802a05c:	d144      	bne.n	802a0e8 <_reclaim_reent+0xa0>
 802a05e:	69e3      	ldr	r3, [r4, #28]
 802a060:	6819      	ldr	r1, [r3, #0]
 802a062:	b111      	cbz	r1, 802a06a <_reclaim_reent+0x22>
 802a064:	4620      	mov	r0, r4
 802a066:	f000 f939 	bl	802a2dc <_free_r>
 802a06a:	6961      	ldr	r1, [r4, #20]
 802a06c:	b111      	cbz	r1, 802a074 <_reclaim_reent+0x2c>
 802a06e:	4620      	mov	r0, r4
 802a070:	f000 f934 	bl	802a2dc <_free_r>
 802a074:	69e1      	ldr	r1, [r4, #28]
 802a076:	b111      	cbz	r1, 802a07e <_reclaim_reent+0x36>
 802a078:	4620      	mov	r0, r4
 802a07a:	f000 f92f 	bl	802a2dc <_free_r>
 802a07e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802a080:	b111      	cbz	r1, 802a088 <_reclaim_reent+0x40>
 802a082:	4620      	mov	r0, r4
 802a084:	f000 f92a 	bl	802a2dc <_free_r>
 802a088:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a08a:	b111      	cbz	r1, 802a092 <_reclaim_reent+0x4a>
 802a08c:	4620      	mov	r0, r4
 802a08e:	f000 f925 	bl	802a2dc <_free_r>
 802a092:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802a094:	b111      	cbz	r1, 802a09c <_reclaim_reent+0x54>
 802a096:	4620      	mov	r0, r4
 802a098:	f000 f920 	bl	802a2dc <_free_r>
 802a09c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802a09e:	b111      	cbz	r1, 802a0a6 <_reclaim_reent+0x5e>
 802a0a0:	4620      	mov	r0, r4
 802a0a2:	f000 f91b 	bl	802a2dc <_free_r>
 802a0a6:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802a0a8:	b111      	cbz	r1, 802a0b0 <_reclaim_reent+0x68>
 802a0aa:	4620      	mov	r0, r4
 802a0ac:	f000 f916 	bl	802a2dc <_free_r>
 802a0b0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802a0b2:	b111      	cbz	r1, 802a0ba <_reclaim_reent+0x72>
 802a0b4:	4620      	mov	r0, r4
 802a0b6:	f000 f911 	bl	802a2dc <_free_r>
 802a0ba:	6a23      	ldr	r3, [r4, #32]
 802a0bc:	b1b3      	cbz	r3, 802a0ec <_reclaim_reent+0xa4>
 802a0be:	4620      	mov	r0, r4
 802a0c0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802a0c4:	4718      	bx	r3
 802a0c6:	5949      	ldr	r1, [r1, r5]
 802a0c8:	b941      	cbnz	r1, 802a0dc <_reclaim_reent+0x94>
 802a0ca:	3504      	adds	r5, #4
 802a0cc:	69e3      	ldr	r3, [r4, #28]
 802a0ce:	2d80      	cmp	r5, #128	; 0x80
 802a0d0:	68d9      	ldr	r1, [r3, #12]
 802a0d2:	d1f8      	bne.n	802a0c6 <_reclaim_reent+0x7e>
 802a0d4:	4620      	mov	r0, r4
 802a0d6:	f000 f901 	bl	802a2dc <_free_r>
 802a0da:	e7c0      	b.n	802a05e <_reclaim_reent+0x16>
 802a0dc:	680e      	ldr	r6, [r1, #0]
 802a0de:	4620      	mov	r0, r4
 802a0e0:	f000 f8fc 	bl	802a2dc <_free_r>
 802a0e4:	4631      	mov	r1, r6
 802a0e6:	e7ef      	b.n	802a0c8 <_reclaim_reent+0x80>
 802a0e8:	2500      	movs	r5, #0
 802a0ea:	e7ef      	b.n	802a0cc <_reclaim_reent+0x84>
 802a0ec:	bd70      	pop	{r4, r5, r6, pc}
 802a0ee:	bf00      	nop
 802a0f0:	20000160 	.word	0x20000160

0802a0f4 <_lseek_r>:
 802a0f4:	b538      	push	{r3, r4, r5, lr}
 802a0f6:	4d07      	ldr	r5, [pc, #28]	; (802a114 <_lseek_r+0x20>)
 802a0f8:	4604      	mov	r4, r0
 802a0fa:	4608      	mov	r0, r1
 802a0fc:	4611      	mov	r1, r2
 802a0fe:	2200      	movs	r2, #0
 802a100:	602a      	str	r2, [r5, #0]
 802a102:	461a      	mov	r2, r3
 802a104:	f7d8 fafa 	bl	80026fc <_lseek>
 802a108:	1c43      	adds	r3, r0, #1
 802a10a:	d102      	bne.n	802a112 <_lseek_r+0x1e>
 802a10c:	682b      	ldr	r3, [r5, #0]
 802a10e:	b103      	cbz	r3, 802a112 <_lseek_r+0x1e>
 802a110:	6023      	str	r3, [r4, #0]
 802a112:	bd38      	pop	{r3, r4, r5, pc}
 802a114:	2001390c 	.word	0x2001390c

0802a118 <_read_r>:
 802a118:	b538      	push	{r3, r4, r5, lr}
 802a11a:	4d07      	ldr	r5, [pc, #28]	; (802a138 <_read_r+0x20>)
 802a11c:	4604      	mov	r4, r0
 802a11e:	4608      	mov	r0, r1
 802a120:	4611      	mov	r1, r2
 802a122:	2200      	movs	r2, #0
 802a124:	602a      	str	r2, [r5, #0]
 802a126:	461a      	mov	r2, r3
 802a128:	f7d8 fac0 	bl	80026ac <_read>
 802a12c:	1c43      	adds	r3, r0, #1
 802a12e:	d102      	bne.n	802a136 <_read_r+0x1e>
 802a130:	682b      	ldr	r3, [r5, #0]
 802a132:	b103      	cbz	r3, 802a136 <_read_r+0x1e>
 802a134:	6023      	str	r3, [r4, #0]
 802a136:	bd38      	pop	{r3, r4, r5, pc}
 802a138:	2001390c 	.word	0x2001390c

0802a13c <_kill_r>:
 802a13c:	b538      	push	{r3, r4, r5, lr}
 802a13e:	4d07      	ldr	r5, [pc, #28]	; (802a15c <_kill_r+0x20>)
 802a140:	2300      	movs	r3, #0
 802a142:	4604      	mov	r4, r0
 802a144:	4608      	mov	r0, r1
 802a146:	4611      	mov	r1, r2
 802a148:	602b      	str	r3, [r5, #0]
 802a14a:	f7d8 faa1 	bl	8002690 <_kill>
 802a14e:	1c43      	adds	r3, r0, #1
 802a150:	d102      	bne.n	802a158 <_kill_r+0x1c>
 802a152:	682b      	ldr	r3, [r5, #0]
 802a154:	b103      	cbz	r3, 802a158 <_kill_r+0x1c>
 802a156:	6023      	str	r3, [r4, #0]
 802a158:	bd38      	pop	{r3, r4, r5, pc}
 802a15a:	bf00      	nop
 802a15c:	2001390c 	.word	0x2001390c

0802a160 <_getpid_r>:
 802a160:	f7d8 ba94 	b.w	800268c <_getpid>

0802a164 <_sbrk_r>:
 802a164:	b538      	push	{r3, r4, r5, lr}
 802a166:	4d06      	ldr	r5, [pc, #24]	; (802a180 <_sbrk_r+0x1c>)
 802a168:	2300      	movs	r3, #0
 802a16a:	4604      	mov	r4, r0
 802a16c:	4608      	mov	r0, r1
 802a16e:	602b      	str	r3, [r5, #0]
 802a170:	f7d8 fac6 	bl	8002700 <_sbrk>
 802a174:	1c43      	adds	r3, r0, #1
 802a176:	d102      	bne.n	802a17e <_sbrk_r+0x1a>
 802a178:	682b      	ldr	r3, [r5, #0]
 802a17a:	b103      	cbz	r3, 802a17e <_sbrk_r+0x1a>
 802a17c:	6023      	str	r3, [r4, #0]
 802a17e:	bd38      	pop	{r3, r4, r5, pc}
 802a180:	2001390c 	.word	0x2001390c

0802a184 <_write_r>:
 802a184:	b538      	push	{r3, r4, r5, lr}
 802a186:	4d07      	ldr	r5, [pc, #28]	; (802a1a4 <_write_r+0x20>)
 802a188:	4604      	mov	r4, r0
 802a18a:	4608      	mov	r0, r1
 802a18c:	4611      	mov	r1, r2
 802a18e:	2200      	movs	r2, #0
 802a190:	602a      	str	r2, [r5, #0]
 802a192:	461a      	mov	r2, r3
 802a194:	f7d8 fa98 	bl	80026c8 <_write>
 802a198:	1c43      	adds	r3, r0, #1
 802a19a:	d102      	bne.n	802a1a2 <_write_r+0x1e>
 802a19c:	682b      	ldr	r3, [r5, #0]
 802a19e:	b103      	cbz	r3, 802a1a2 <_write_r+0x1e>
 802a1a0:	6023      	str	r3, [r4, #0]
 802a1a2:	bd38      	pop	{r3, r4, r5, pc}
 802a1a4:	2001390c 	.word	0x2001390c

0802a1a8 <__errno>:
 802a1a8:	4b01      	ldr	r3, [pc, #4]	; (802a1b0 <__errno+0x8>)
 802a1aa:	6818      	ldr	r0, [r3, #0]
 802a1ac:	4770      	bx	lr
 802a1ae:	bf00      	nop
 802a1b0:	20000160 	.word	0x20000160

0802a1b4 <__libc_init_array>:
 802a1b4:	b570      	push	{r4, r5, r6, lr}
 802a1b6:	4d0d      	ldr	r5, [pc, #52]	; (802a1ec <__libc_init_array+0x38>)
 802a1b8:	4c0d      	ldr	r4, [pc, #52]	; (802a1f0 <__libc_init_array+0x3c>)
 802a1ba:	1b64      	subs	r4, r4, r5
 802a1bc:	10a4      	asrs	r4, r4, #2
 802a1be:	2600      	movs	r6, #0
 802a1c0:	42a6      	cmp	r6, r4
 802a1c2:	d109      	bne.n	802a1d8 <__libc_init_array+0x24>
 802a1c4:	4d0b      	ldr	r5, [pc, #44]	; (802a1f4 <__libc_init_array+0x40>)
 802a1c6:	4c0c      	ldr	r4, [pc, #48]	; (802a1f8 <__libc_init_array+0x44>)
 802a1c8:	f000 fd70 	bl	802acac <_init>
 802a1cc:	1b64      	subs	r4, r4, r5
 802a1ce:	10a4      	asrs	r4, r4, #2
 802a1d0:	2600      	movs	r6, #0
 802a1d2:	42a6      	cmp	r6, r4
 802a1d4:	d105      	bne.n	802a1e2 <__libc_init_array+0x2e>
 802a1d6:	bd70      	pop	{r4, r5, r6, pc}
 802a1d8:	f855 3b04 	ldr.w	r3, [r5], #4
 802a1dc:	4798      	blx	r3
 802a1de:	3601      	adds	r6, #1
 802a1e0:	e7ee      	b.n	802a1c0 <__libc_init_array+0xc>
 802a1e2:	f855 3b04 	ldr.w	r3, [r5], #4
 802a1e6:	4798      	blx	r3
 802a1e8:	3601      	adds	r6, #1
 802a1ea:	e7f2      	b.n	802a1d2 <__libc_init_array+0x1e>
 802a1ec:	0815e73c 	.word	0x0815e73c
 802a1f0:	0815e73c 	.word	0x0815e73c
 802a1f4:	0815e73c 	.word	0x0815e73c
 802a1f8:	0815e750 	.word	0x0815e750

0802a1fc <__retarget_lock_init_recursive>:
 802a1fc:	4770      	bx	lr

0802a1fe <__retarget_lock_acquire_recursive>:
 802a1fe:	4770      	bx	lr

0802a200 <__retarget_lock_release_recursive>:
 802a200:	4770      	bx	lr

0802a202 <memcpy>:
 802a202:	440a      	add	r2, r1
 802a204:	4291      	cmp	r1, r2
 802a206:	f100 33ff 	add.w	r3, r0, #4294967295
 802a20a:	d100      	bne.n	802a20e <memcpy+0xc>
 802a20c:	4770      	bx	lr
 802a20e:	b510      	push	{r4, lr}
 802a210:	f811 4b01 	ldrb.w	r4, [r1], #1
 802a214:	f803 4f01 	strb.w	r4, [r3, #1]!
 802a218:	4291      	cmp	r1, r2
 802a21a:	d1f9      	bne.n	802a210 <memcpy+0xe>
 802a21c:	bd10      	pop	{r4, pc}
	...

0802a220 <__register_exitproc>:
 802a220:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802a224:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802a2d8 <__register_exitproc+0xb8>
 802a228:	4606      	mov	r6, r0
 802a22a:	f8d8 0000 	ldr.w	r0, [r8]
 802a22e:	461f      	mov	r7, r3
 802a230:	460d      	mov	r5, r1
 802a232:	4691      	mov	r9, r2
 802a234:	f7ff ffe3 	bl	802a1fe <__retarget_lock_acquire_recursive>
 802a238:	4b23      	ldr	r3, [pc, #140]	; (802a2c8 <__register_exitproc+0xa8>)
 802a23a:	681c      	ldr	r4, [r3, #0]
 802a23c:	b934      	cbnz	r4, 802a24c <__register_exitproc+0x2c>
 802a23e:	4c23      	ldr	r4, [pc, #140]	; (802a2cc <__register_exitproc+0xac>)
 802a240:	601c      	str	r4, [r3, #0]
 802a242:	4b23      	ldr	r3, [pc, #140]	; (802a2d0 <__register_exitproc+0xb0>)
 802a244:	b113      	cbz	r3, 802a24c <__register_exitproc+0x2c>
 802a246:	681b      	ldr	r3, [r3, #0]
 802a248:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802a24c:	6863      	ldr	r3, [r4, #4]
 802a24e:	2b1f      	cmp	r3, #31
 802a250:	dd07      	ble.n	802a262 <__register_exitproc+0x42>
 802a252:	f8d8 0000 	ldr.w	r0, [r8]
 802a256:	f7ff ffd3 	bl	802a200 <__retarget_lock_release_recursive>
 802a25a:	f04f 30ff 	mov.w	r0, #4294967295
 802a25e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a262:	b32e      	cbz	r6, 802a2b0 <__register_exitproc+0x90>
 802a264:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802a268:	b968      	cbnz	r0, 802a286 <__register_exitproc+0x66>
 802a26a:	4b1a      	ldr	r3, [pc, #104]	; (802a2d4 <__register_exitproc+0xb4>)
 802a26c:	2b00      	cmp	r3, #0
 802a26e:	d0f0      	beq.n	802a252 <__register_exitproc+0x32>
 802a270:	f44f 7084 	mov.w	r0, #264	; 0x108
 802a274:	f7ff fcbe 	bl	8029bf4 <malloc>
 802a278:	2800      	cmp	r0, #0
 802a27a:	d0ea      	beq.n	802a252 <__register_exitproc+0x32>
 802a27c:	2300      	movs	r3, #0
 802a27e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802a282:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802a286:	6863      	ldr	r3, [r4, #4]
 802a288:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802a28c:	2201      	movs	r2, #1
 802a28e:	409a      	lsls	r2, r3
 802a290:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802a294:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802a298:	4313      	orrs	r3, r2
 802a29a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802a29e:	2e02      	cmp	r6, #2
 802a2a0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802a2a4:	bf02      	ittt	eq
 802a2a6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802a2aa:	4313      	orreq	r3, r2
 802a2ac:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802a2b0:	6863      	ldr	r3, [r4, #4]
 802a2b2:	f8d8 0000 	ldr.w	r0, [r8]
 802a2b6:	1c5a      	adds	r2, r3, #1
 802a2b8:	3302      	adds	r3, #2
 802a2ba:	6062      	str	r2, [r4, #4]
 802a2bc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802a2c0:	f7ff ff9e 	bl	802a200 <__retarget_lock_release_recursive>
 802a2c4:	2000      	movs	r0, #0
 802a2c6:	e7ca      	b.n	802a25e <__register_exitproc+0x3e>
 802a2c8:	200139a0 	.word	0x200139a0
 802a2cc:	20013914 	.word	0x20013914
 802a2d0:	080421b4 	.word	0x080421b4
 802a2d4:	08029bf5 	.word	0x08029bf5
 802a2d8:	20000164 	.word	0x20000164

0802a2dc <_free_r>:
 802a2dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802a2de:	2900      	cmp	r1, #0
 802a2e0:	d044      	beq.n	802a36c <_free_r+0x90>
 802a2e2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802a2e6:	9001      	str	r0, [sp, #4]
 802a2e8:	2b00      	cmp	r3, #0
 802a2ea:	f1a1 0404 	sub.w	r4, r1, #4
 802a2ee:	bfb8      	it	lt
 802a2f0:	18e4      	addlt	r4, r4, r3
 802a2f2:	f7ff fd2f 	bl	8029d54 <__malloc_lock>
 802a2f6:	4a1e      	ldr	r2, [pc, #120]	; (802a370 <_free_r+0x94>)
 802a2f8:	9801      	ldr	r0, [sp, #4]
 802a2fa:	6813      	ldr	r3, [r2, #0]
 802a2fc:	b933      	cbnz	r3, 802a30c <_free_r+0x30>
 802a2fe:	6063      	str	r3, [r4, #4]
 802a300:	6014      	str	r4, [r2, #0]
 802a302:	b003      	add	sp, #12
 802a304:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802a308:	f7ff bd2a 	b.w	8029d60 <__malloc_unlock>
 802a30c:	42a3      	cmp	r3, r4
 802a30e:	d908      	bls.n	802a322 <_free_r+0x46>
 802a310:	6825      	ldr	r5, [r4, #0]
 802a312:	1961      	adds	r1, r4, r5
 802a314:	428b      	cmp	r3, r1
 802a316:	bf01      	itttt	eq
 802a318:	6819      	ldreq	r1, [r3, #0]
 802a31a:	685b      	ldreq	r3, [r3, #4]
 802a31c:	1949      	addeq	r1, r1, r5
 802a31e:	6021      	streq	r1, [r4, #0]
 802a320:	e7ed      	b.n	802a2fe <_free_r+0x22>
 802a322:	461a      	mov	r2, r3
 802a324:	685b      	ldr	r3, [r3, #4]
 802a326:	b10b      	cbz	r3, 802a32c <_free_r+0x50>
 802a328:	42a3      	cmp	r3, r4
 802a32a:	d9fa      	bls.n	802a322 <_free_r+0x46>
 802a32c:	6811      	ldr	r1, [r2, #0]
 802a32e:	1855      	adds	r5, r2, r1
 802a330:	42a5      	cmp	r5, r4
 802a332:	d10b      	bne.n	802a34c <_free_r+0x70>
 802a334:	6824      	ldr	r4, [r4, #0]
 802a336:	4421      	add	r1, r4
 802a338:	1854      	adds	r4, r2, r1
 802a33a:	42a3      	cmp	r3, r4
 802a33c:	6011      	str	r1, [r2, #0]
 802a33e:	d1e0      	bne.n	802a302 <_free_r+0x26>
 802a340:	681c      	ldr	r4, [r3, #0]
 802a342:	685b      	ldr	r3, [r3, #4]
 802a344:	6053      	str	r3, [r2, #4]
 802a346:	440c      	add	r4, r1
 802a348:	6014      	str	r4, [r2, #0]
 802a34a:	e7da      	b.n	802a302 <_free_r+0x26>
 802a34c:	d902      	bls.n	802a354 <_free_r+0x78>
 802a34e:	230c      	movs	r3, #12
 802a350:	6003      	str	r3, [r0, #0]
 802a352:	e7d6      	b.n	802a302 <_free_r+0x26>
 802a354:	6825      	ldr	r5, [r4, #0]
 802a356:	1961      	adds	r1, r4, r5
 802a358:	428b      	cmp	r3, r1
 802a35a:	bf04      	itt	eq
 802a35c:	6819      	ldreq	r1, [r3, #0]
 802a35e:	685b      	ldreq	r3, [r3, #4]
 802a360:	6063      	str	r3, [r4, #4]
 802a362:	bf04      	itt	eq
 802a364:	1949      	addeq	r1, r1, r5
 802a366:	6021      	streq	r1, [r4, #0]
 802a368:	6054      	str	r4, [r2, #4]
 802a36a:	e7ca      	b.n	802a302 <_free_r+0x26>
 802a36c:	b003      	add	sp, #12
 802a36e:	bd30      	pop	{r4, r5, pc}
 802a370:	200137c8 	.word	0x200137c8

0802a374 <__sfputc_r>:
 802a374:	6893      	ldr	r3, [r2, #8]
 802a376:	3b01      	subs	r3, #1
 802a378:	2b00      	cmp	r3, #0
 802a37a:	b410      	push	{r4}
 802a37c:	6093      	str	r3, [r2, #8]
 802a37e:	da08      	bge.n	802a392 <__sfputc_r+0x1e>
 802a380:	6994      	ldr	r4, [r2, #24]
 802a382:	42a3      	cmp	r3, r4
 802a384:	db01      	blt.n	802a38a <__sfputc_r+0x16>
 802a386:	290a      	cmp	r1, #10
 802a388:	d103      	bne.n	802a392 <__sfputc_r+0x1e>
 802a38a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a38e:	f000 bb73 	b.w	802aa78 <__swbuf_r>
 802a392:	6813      	ldr	r3, [r2, #0]
 802a394:	1c58      	adds	r0, r3, #1
 802a396:	6010      	str	r0, [r2, #0]
 802a398:	7019      	strb	r1, [r3, #0]
 802a39a:	4608      	mov	r0, r1
 802a39c:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a3a0:	4770      	bx	lr

0802a3a2 <__sfputs_r>:
 802a3a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a3a4:	4606      	mov	r6, r0
 802a3a6:	460f      	mov	r7, r1
 802a3a8:	4614      	mov	r4, r2
 802a3aa:	18d5      	adds	r5, r2, r3
 802a3ac:	42ac      	cmp	r4, r5
 802a3ae:	d101      	bne.n	802a3b4 <__sfputs_r+0x12>
 802a3b0:	2000      	movs	r0, #0
 802a3b2:	e007      	b.n	802a3c4 <__sfputs_r+0x22>
 802a3b4:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a3b8:	463a      	mov	r2, r7
 802a3ba:	4630      	mov	r0, r6
 802a3bc:	f7ff ffda 	bl	802a374 <__sfputc_r>
 802a3c0:	1c43      	adds	r3, r0, #1
 802a3c2:	d1f3      	bne.n	802a3ac <__sfputs_r+0xa>
 802a3c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802a3c8 <_vfiprintf_r>:
 802a3c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a3cc:	460d      	mov	r5, r1
 802a3ce:	b09d      	sub	sp, #116	; 0x74
 802a3d0:	4614      	mov	r4, r2
 802a3d2:	4698      	mov	r8, r3
 802a3d4:	4606      	mov	r6, r0
 802a3d6:	b118      	cbz	r0, 802a3e0 <_vfiprintf_r+0x18>
 802a3d8:	6a03      	ldr	r3, [r0, #32]
 802a3da:	b90b      	cbnz	r3, 802a3e0 <_vfiprintf_r+0x18>
 802a3dc:	f7ff fd60 	bl	8029ea0 <__sinit>
 802a3e0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a3e2:	07d9      	lsls	r1, r3, #31
 802a3e4:	d405      	bmi.n	802a3f2 <_vfiprintf_r+0x2a>
 802a3e6:	89ab      	ldrh	r3, [r5, #12]
 802a3e8:	059a      	lsls	r2, r3, #22
 802a3ea:	d402      	bmi.n	802a3f2 <_vfiprintf_r+0x2a>
 802a3ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a3ee:	f7ff ff06 	bl	802a1fe <__retarget_lock_acquire_recursive>
 802a3f2:	89ab      	ldrh	r3, [r5, #12]
 802a3f4:	071b      	lsls	r3, r3, #28
 802a3f6:	d501      	bpl.n	802a3fc <_vfiprintf_r+0x34>
 802a3f8:	692b      	ldr	r3, [r5, #16]
 802a3fa:	b99b      	cbnz	r3, 802a424 <_vfiprintf_r+0x5c>
 802a3fc:	4629      	mov	r1, r5
 802a3fe:	4630      	mov	r0, r6
 802a400:	f000 fb78 	bl	802aaf4 <__swsetup_r>
 802a404:	b170      	cbz	r0, 802a424 <_vfiprintf_r+0x5c>
 802a406:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a408:	07dc      	lsls	r4, r3, #31
 802a40a:	d504      	bpl.n	802a416 <_vfiprintf_r+0x4e>
 802a40c:	f04f 30ff 	mov.w	r0, #4294967295
 802a410:	b01d      	add	sp, #116	; 0x74
 802a412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a416:	89ab      	ldrh	r3, [r5, #12]
 802a418:	0598      	lsls	r0, r3, #22
 802a41a:	d4f7      	bmi.n	802a40c <_vfiprintf_r+0x44>
 802a41c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a41e:	f7ff feef 	bl	802a200 <__retarget_lock_release_recursive>
 802a422:	e7f3      	b.n	802a40c <_vfiprintf_r+0x44>
 802a424:	2300      	movs	r3, #0
 802a426:	9309      	str	r3, [sp, #36]	; 0x24
 802a428:	2320      	movs	r3, #32
 802a42a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802a42e:	f8cd 800c 	str.w	r8, [sp, #12]
 802a432:	2330      	movs	r3, #48	; 0x30
 802a434:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802a5e8 <_vfiprintf_r+0x220>
 802a438:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802a43c:	f04f 0901 	mov.w	r9, #1
 802a440:	4623      	mov	r3, r4
 802a442:	469a      	mov	sl, r3
 802a444:	f813 2b01 	ldrb.w	r2, [r3], #1
 802a448:	b10a      	cbz	r2, 802a44e <_vfiprintf_r+0x86>
 802a44a:	2a25      	cmp	r2, #37	; 0x25
 802a44c:	d1f9      	bne.n	802a442 <_vfiprintf_r+0x7a>
 802a44e:	ebba 0b04 	subs.w	fp, sl, r4
 802a452:	d00b      	beq.n	802a46c <_vfiprintf_r+0xa4>
 802a454:	465b      	mov	r3, fp
 802a456:	4622      	mov	r2, r4
 802a458:	4629      	mov	r1, r5
 802a45a:	4630      	mov	r0, r6
 802a45c:	f7ff ffa1 	bl	802a3a2 <__sfputs_r>
 802a460:	3001      	adds	r0, #1
 802a462:	f000 80a9 	beq.w	802a5b8 <_vfiprintf_r+0x1f0>
 802a466:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a468:	445a      	add	r2, fp
 802a46a:	9209      	str	r2, [sp, #36]	; 0x24
 802a46c:	f89a 3000 	ldrb.w	r3, [sl]
 802a470:	2b00      	cmp	r3, #0
 802a472:	f000 80a1 	beq.w	802a5b8 <_vfiprintf_r+0x1f0>
 802a476:	2300      	movs	r3, #0
 802a478:	f04f 32ff 	mov.w	r2, #4294967295
 802a47c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802a480:	f10a 0a01 	add.w	sl, sl, #1
 802a484:	9304      	str	r3, [sp, #16]
 802a486:	9307      	str	r3, [sp, #28]
 802a488:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802a48c:	931a      	str	r3, [sp, #104]	; 0x68
 802a48e:	4654      	mov	r4, sl
 802a490:	2205      	movs	r2, #5
 802a492:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a496:	4854      	ldr	r0, [pc, #336]	; (802a5e8 <_vfiprintf_r+0x220>)
 802a498:	f7d5 ff0a 	bl	80002b0 <memchr>
 802a49c:	9a04      	ldr	r2, [sp, #16]
 802a49e:	b9d8      	cbnz	r0, 802a4d8 <_vfiprintf_r+0x110>
 802a4a0:	06d1      	lsls	r1, r2, #27
 802a4a2:	bf44      	itt	mi
 802a4a4:	2320      	movmi	r3, #32
 802a4a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a4aa:	0713      	lsls	r3, r2, #28
 802a4ac:	bf44      	itt	mi
 802a4ae:	232b      	movmi	r3, #43	; 0x2b
 802a4b0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a4b4:	f89a 3000 	ldrb.w	r3, [sl]
 802a4b8:	2b2a      	cmp	r3, #42	; 0x2a
 802a4ba:	d015      	beq.n	802a4e8 <_vfiprintf_r+0x120>
 802a4bc:	9a07      	ldr	r2, [sp, #28]
 802a4be:	4654      	mov	r4, sl
 802a4c0:	2000      	movs	r0, #0
 802a4c2:	f04f 0c0a 	mov.w	ip, #10
 802a4c6:	4621      	mov	r1, r4
 802a4c8:	f811 3b01 	ldrb.w	r3, [r1], #1
 802a4cc:	3b30      	subs	r3, #48	; 0x30
 802a4ce:	2b09      	cmp	r3, #9
 802a4d0:	d94d      	bls.n	802a56e <_vfiprintf_r+0x1a6>
 802a4d2:	b1b0      	cbz	r0, 802a502 <_vfiprintf_r+0x13a>
 802a4d4:	9207      	str	r2, [sp, #28]
 802a4d6:	e014      	b.n	802a502 <_vfiprintf_r+0x13a>
 802a4d8:	eba0 0308 	sub.w	r3, r0, r8
 802a4dc:	fa09 f303 	lsl.w	r3, r9, r3
 802a4e0:	4313      	orrs	r3, r2
 802a4e2:	9304      	str	r3, [sp, #16]
 802a4e4:	46a2      	mov	sl, r4
 802a4e6:	e7d2      	b.n	802a48e <_vfiprintf_r+0xc6>
 802a4e8:	9b03      	ldr	r3, [sp, #12]
 802a4ea:	1d19      	adds	r1, r3, #4
 802a4ec:	681b      	ldr	r3, [r3, #0]
 802a4ee:	9103      	str	r1, [sp, #12]
 802a4f0:	2b00      	cmp	r3, #0
 802a4f2:	bfbb      	ittet	lt
 802a4f4:	425b      	neglt	r3, r3
 802a4f6:	f042 0202 	orrlt.w	r2, r2, #2
 802a4fa:	9307      	strge	r3, [sp, #28]
 802a4fc:	9307      	strlt	r3, [sp, #28]
 802a4fe:	bfb8      	it	lt
 802a500:	9204      	strlt	r2, [sp, #16]
 802a502:	7823      	ldrb	r3, [r4, #0]
 802a504:	2b2e      	cmp	r3, #46	; 0x2e
 802a506:	d10c      	bne.n	802a522 <_vfiprintf_r+0x15a>
 802a508:	7863      	ldrb	r3, [r4, #1]
 802a50a:	2b2a      	cmp	r3, #42	; 0x2a
 802a50c:	d134      	bne.n	802a578 <_vfiprintf_r+0x1b0>
 802a50e:	9b03      	ldr	r3, [sp, #12]
 802a510:	1d1a      	adds	r2, r3, #4
 802a512:	681b      	ldr	r3, [r3, #0]
 802a514:	9203      	str	r2, [sp, #12]
 802a516:	2b00      	cmp	r3, #0
 802a518:	bfb8      	it	lt
 802a51a:	f04f 33ff 	movlt.w	r3, #4294967295
 802a51e:	3402      	adds	r4, #2
 802a520:	9305      	str	r3, [sp, #20]
 802a522:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802a5f8 <_vfiprintf_r+0x230>
 802a526:	7821      	ldrb	r1, [r4, #0]
 802a528:	2203      	movs	r2, #3
 802a52a:	4650      	mov	r0, sl
 802a52c:	f7d5 fec0 	bl	80002b0 <memchr>
 802a530:	b138      	cbz	r0, 802a542 <_vfiprintf_r+0x17a>
 802a532:	9b04      	ldr	r3, [sp, #16]
 802a534:	eba0 000a 	sub.w	r0, r0, sl
 802a538:	2240      	movs	r2, #64	; 0x40
 802a53a:	4082      	lsls	r2, r0
 802a53c:	4313      	orrs	r3, r2
 802a53e:	3401      	adds	r4, #1
 802a540:	9304      	str	r3, [sp, #16]
 802a542:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a546:	4829      	ldr	r0, [pc, #164]	; (802a5ec <_vfiprintf_r+0x224>)
 802a548:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802a54c:	2206      	movs	r2, #6
 802a54e:	f7d5 feaf 	bl	80002b0 <memchr>
 802a552:	2800      	cmp	r0, #0
 802a554:	d03f      	beq.n	802a5d6 <_vfiprintf_r+0x20e>
 802a556:	4b26      	ldr	r3, [pc, #152]	; (802a5f0 <_vfiprintf_r+0x228>)
 802a558:	bb1b      	cbnz	r3, 802a5a2 <_vfiprintf_r+0x1da>
 802a55a:	9b03      	ldr	r3, [sp, #12]
 802a55c:	3307      	adds	r3, #7
 802a55e:	f023 0307 	bic.w	r3, r3, #7
 802a562:	3308      	adds	r3, #8
 802a564:	9303      	str	r3, [sp, #12]
 802a566:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a568:	443b      	add	r3, r7
 802a56a:	9309      	str	r3, [sp, #36]	; 0x24
 802a56c:	e768      	b.n	802a440 <_vfiprintf_r+0x78>
 802a56e:	fb0c 3202 	mla	r2, ip, r2, r3
 802a572:	460c      	mov	r4, r1
 802a574:	2001      	movs	r0, #1
 802a576:	e7a6      	b.n	802a4c6 <_vfiprintf_r+0xfe>
 802a578:	2300      	movs	r3, #0
 802a57a:	3401      	adds	r4, #1
 802a57c:	9305      	str	r3, [sp, #20]
 802a57e:	4619      	mov	r1, r3
 802a580:	f04f 0c0a 	mov.w	ip, #10
 802a584:	4620      	mov	r0, r4
 802a586:	f810 2b01 	ldrb.w	r2, [r0], #1
 802a58a:	3a30      	subs	r2, #48	; 0x30
 802a58c:	2a09      	cmp	r2, #9
 802a58e:	d903      	bls.n	802a598 <_vfiprintf_r+0x1d0>
 802a590:	2b00      	cmp	r3, #0
 802a592:	d0c6      	beq.n	802a522 <_vfiprintf_r+0x15a>
 802a594:	9105      	str	r1, [sp, #20]
 802a596:	e7c4      	b.n	802a522 <_vfiprintf_r+0x15a>
 802a598:	fb0c 2101 	mla	r1, ip, r1, r2
 802a59c:	4604      	mov	r4, r0
 802a59e:	2301      	movs	r3, #1
 802a5a0:	e7f0      	b.n	802a584 <_vfiprintf_r+0x1bc>
 802a5a2:	ab03      	add	r3, sp, #12
 802a5a4:	9300      	str	r3, [sp, #0]
 802a5a6:	462a      	mov	r2, r5
 802a5a8:	4b12      	ldr	r3, [pc, #72]	; (802a5f4 <_vfiprintf_r+0x22c>)
 802a5aa:	a904      	add	r1, sp, #16
 802a5ac:	4630      	mov	r0, r6
 802a5ae:	f3af 8000 	nop.w
 802a5b2:	4607      	mov	r7, r0
 802a5b4:	1c78      	adds	r0, r7, #1
 802a5b6:	d1d6      	bne.n	802a566 <_vfiprintf_r+0x19e>
 802a5b8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a5ba:	07d9      	lsls	r1, r3, #31
 802a5bc:	d405      	bmi.n	802a5ca <_vfiprintf_r+0x202>
 802a5be:	89ab      	ldrh	r3, [r5, #12]
 802a5c0:	059a      	lsls	r2, r3, #22
 802a5c2:	d402      	bmi.n	802a5ca <_vfiprintf_r+0x202>
 802a5c4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a5c6:	f7ff fe1b 	bl	802a200 <__retarget_lock_release_recursive>
 802a5ca:	89ab      	ldrh	r3, [r5, #12]
 802a5cc:	065b      	lsls	r3, r3, #25
 802a5ce:	f53f af1d 	bmi.w	802a40c <_vfiprintf_r+0x44>
 802a5d2:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a5d4:	e71c      	b.n	802a410 <_vfiprintf_r+0x48>
 802a5d6:	ab03      	add	r3, sp, #12
 802a5d8:	9300      	str	r3, [sp, #0]
 802a5da:	462a      	mov	r2, r5
 802a5dc:	4b05      	ldr	r3, [pc, #20]	; (802a5f4 <_vfiprintf_r+0x22c>)
 802a5de:	a904      	add	r1, sp, #16
 802a5e0:	4630      	mov	r0, r6
 802a5e2:	f000 f879 	bl	802a6d8 <_printf_i>
 802a5e6:	e7e4      	b.n	802a5b2 <_vfiprintf_r+0x1ea>
 802a5e8:	080421b8 	.word	0x080421b8
 802a5ec:	080421c2 	.word	0x080421c2
 802a5f0:	00000000 	.word	0x00000000
 802a5f4:	0802a3a3 	.word	0x0802a3a3
 802a5f8:	080421be 	.word	0x080421be

0802a5fc <_printf_common>:
 802a5fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802a600:	4616      	mov	r6, r2
 802a602:	4699      	mov	r9, r3
 802a604:	688a      	ldr	r2, [r1, #8]
 802a606:	690b      	ldr	r3, [r1, #16]
 802a608:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802a60c:	4293      	cmp	r3, r2
 802a60e:	bfb8      	it	lt
 802a610:	4613      	movlt	r3, r2
 802a612:	6033      	str	r3, [r6, #0]
 802a614:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802a618:	4607      	mov	r7, r0
 802a61a:	460c      	mov	r4, r1
 802a61c:	b10a      	cbz	r2, 802a622 <_printf_common+0x26>
 802a61e:	3301      	adds	r3, #1
 802a620:	6033      	str	r3, [r6, #0]
 802a622:	6823      	ldr	r3, [r4, #0]
 802a624:	0699      	lsls	r1, r3, #26
 802a626:	bf42      	ittt	mi
 802a628:	6833      	ldrmi	r3, [r6, #0]
 802a62a:	3302      	addmi	r3, #2
 802a62c:	6033      	strmi	r3, [r6, #0]
 802a62e:	6825      	ldr	r5, [r4, #0]
 802a630:	f015 0506 	ands.w	r5, r5, #6
 802a634:	d106      	bne.n	802a644 <_printf_common+0x48>
 802a636:	f104 0a19 	add.w	sl, r4, #25
 802a63a:	68e3      	ldr	r3, [r4, #12]
 802a63c:	6832      	ldr	r2, [r6, #0]
 802a63e:	1a9b      	subs	r3, r3, r2
 802a640:	42ab      	cmp	r3, r5
 802a642:	dc26      	bgt.n	802a692 <_printf_common+0x96>
 802a644:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802a648:	1e13      	subs	r3, r2, #0
 802a64a:	6822      	ldr	r2, [r4, #0]
 802a64c:	bf18      	it	ne
 802a64e:	2301      	movne	r3, #1
 802a650:	0692      	lsls	r2, r2, #26
 802a652:	d42b      	bmi.n	802a6ac <_printf_common+0xb0>
 802a654:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802a658:	4649      	mov	r1, r9
 802a65a:	4638      	mov	r0, r7
 802a65c:	47c0      	blx	r8
 802a65e:	3001      	adds	r0, #1
 802a660:	d01e      	beq.n	802a6a0 <_printf_common+0xa4>
 802a662:	6823      	ldr	r3, [r4, #0]
 802a664:	6922      	ldr	r2, [r4, #16]
 802a666:	f003 0306 	and.w	r3, r3, #6
 802a66a:	2b04      	cmp	r3, #4
 802a66c:	bf02      	ittt	eq
 802a66e:	68e5      	ldreq	r5, [r4, #12]
 802a670:	6833      	ldreq	r3, [r6, #0]
 802a672:	1aed      	subeq	r5, r5, r3
 802a674:	68a3      	ldr	r3, [r4, #8]
 802a676:	bf0c      	ite	eq
 802a678:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802a67c:	2500      	movne	r5, #0
 802a67e:	4293      	cmp	r3, r2
 802a680:	bfc4      	itt	gt
 802a682:	1a9b      	subgt	r3, r3, r2
 802a684:	18ed      	addgt	r5, r5, r3
 802a686:	2600      	movs	r6, #0
 802a688:	341a      	adds	r4, #26
 802a68a:	42b5      	cmp	r5, r6
 802a68c:	d11a      	bne.n	802a6c4 <_printf_common+0xc8>
 802a68e:	2000      	movs	r0, #0
 802a690:	e008      	b.n	802a6a4 <_printf_common+0xa8>
 802a692:	2301      	movs	r3, #1
 802a694:	4652      	mov	r2, sl
 802a696:	4649      	mov	r1, r9
 802a698:	4638      	mov	r0, r7
 802a69a:	47c0      	blx	r8
 802a69c:	3001      	adds	r0, #1
 802a69e:	d103      	bne.n	802a6a8 <_printf_common+0xac>
 802a6a0:	f04f 30ff 	mov.w	r0, #4294967295
 802a6a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a6a8:	3501      	adds	r5, #1
 802a6aa:	e7c6      	b.n	802a63a <_printf_common+0x3e>
 802a6ac:	18e1      	adds	r1, r4, r3
 802a6ae:	1c5a      	adds	r2, r3, #1
 802a6b0:	2030      	movs	r0, #48	; 0x30
 802a6b2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802a6b6:	4422      	add	r2, r4
 802a6b8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802a6bc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802a6c0:	3302      	adds	r3, #2
 802a6c2:	e7c7      	b.n	802a654 <_printf_common+0x58>
 802a6c4:	2301      	movs	r3, #1
 802a6c6:	4622      	mov	r2, r4
 802a6c8:	4649      	mov	r1, r9
 802a6ca:	4638      	mov	r0, r7
 802a6cc:	47c0      	blx	r8
 802a6ce:	3001      	adds	r0, #1
 802a6d0:	d0e6      	beq.n	802a6a0 <_printf_common+0xa4>
 802a6d2:	3601      	adds	r6, #1
 802a6d4:	e7d9      	b.n	802a68a <_printf_common+0x8e>
	...

0802a6d8 <_printf_i>:
 802a6d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802a6dc:	7e0f      	ldrb	r7, [r1, #24]
 802a6de:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802a6e0:	2f78      	cmp	r7, #120	; 0x78
 802a6e2:	4691      	mov	r9, r2
 802a6e4:	4680      	mov	r8, r0
 802a6e6:	460c      	mov	r4, r1
 802a6e8:	469a      	mov	sl, r3
 802a6ea:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802a6ee:	d807      	bhi.n	802a700 <_printf_i+0x28>
 802a6f0:	2f62      	cmp	r7, #98	; 0x62
 802a6f2:	d80a      	bhi.n	802a70a <_printf_i+0x32>
 802a6f4:	2f00      	cmp	r7, #0
 802a6f6:	f000 80d4 	beq.w	802a8a2 <_printf_i+0x1ca>
 802a6fa:	2f58      	cmp	r7, #88	; 0x58
 802a6fc:	f000 80c0 	beq.w	802a880 <_printf_i+0x1a8>
 802a700:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802a704:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802a708:	e03a      	b.n	802a780 <_printf_i+0xa8>
 802a70a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802a70e:	2b15      	cmp	r3, #21
 802a710:	d8f6      	bhi.n	802a700 <_printf_i+0x28>
 802a712:	a101      	add	r1, pc, #4	; (adr r1, 802a718 <_printf_i+0x40>)
 802a714:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802a718:	0802a771 	.word	0x0802a771
 802a71c:	0802a785 	.word	0x0802a785
 802a720:	0802a701 	.word	0x0802a701
 802a724:	0802a701 	.word	0x0802a701
 802a728:	0802a701 	.word	0x0802a701
 802a72c:	0802a701 	.word	0x0802a701
 802a730:	0802a785 	.word	0x0802a785
 802a734:	0802a701 	.word	0x0802a701
 802a738:	0802a701 	.word	0x0802a701
 802a73c:	0802a701 	.word	0x0802a701
 802a740:	0802a701 	.word	0x0802a701
 802a744:	0802a889 	.word	0x0802a889
 802a748:	0802a7b1 	.word	0x0802a7b1
 802a74c:	0802a843 	.word	0x0802a843
 802a750:	0802a701 	.word	0x0802a701
 802a754:	0802a701 	.word	0x0802a701
 802a758:	0802a8ab 	.word	0x0802a8ab
 802a75c:	0802a701 	.word	0x0802a701
 802a760:	0802a7b1 	.word	0x0802a7b1
 802a764:	0802a701 	.word	0x0802a701
 802a768:	0802a701 	.word	0x0802a701
 802a76c:	0802a84b 	.word	0x0802a84b
 802a770:	682b      	ldr	r3, [r5, #0]
 802a772:	1d1a      	adds	r2, r3, #4
 802a774:	681b      	ldr	r3, [r3, #0]
 802a776:	602a      	str	r2, [r5, #0]
 802a778:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802a77c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802a780:	2301      	movs	r3, #1
 802a782:	e09f      	b.n	802a8c4 <_printf_i+0x1ec>
 802a784:	6820      	ldr	r0, [r4, #0]
 802a786:	682b      	ldr	r3, [r5, #0]
 802a788:	0607      	lsls	r7, r0, #24
 802a78a:	f103 0104 	add.w	r1, r3, #4
 802a78e:	6029      	str	r1, [r5, #0]
 802a790:	d501      	bpl.n	802a796 <_printf_i+0xbe>
 802a792:	681e      	ldr	r6, [r3, #0]
 802a794:	e003      	b.n	802a79e <_printf_i+0xc6>
 802a796:	0646      	lsls	r6, r0, #25
 802a798:	d5fb      	bpl.n	802a792 <_printf_i+0xba>
 802a79a:	f9b3 6000 	ldrsh.w	r6, [r3]
 802a79e:	2e00      	cmp	r6, #0
 802a7a0:	da03      	bge.n	802a7aa <_printf_i+0xd2>
 802a7a2:	232d      	movs	r3, #45	; 0x2d
 802a7a4:	4276      	negs	r6, r6
 802a7a6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802a7aa:	485a      	ldr	r0, [pc, #360]	; (802a914 <_printf_i+0x23c>)
 802a7ac:	230a      	movs	r3, #10
 802a7ae:	e012      	b.n	802a7d6 <_printf_i+0xfe>
 802a7b0:	682b      	ldr	r3, [r5, #0]
 802a7b2:	6820      	ldr	r0, [r4, #0]
 802a7b4:	1d19      	adds	r1, r3, #4
 802a7b6:	6029      	str	r1, [r5, #0]
 802a7b8:	0605      	lsls	r5, r0, #24
 802a7ba:	d501      	bpl.n	802a7c0 <_printf_i+0xe8>
 802a7bc:	681e      	ldr	r6, [r3, #0]
 802a7be:	e002      	b.n	802a7c6 <_printf_i+0xee>
 802a7c0:	0641      	lsls	r1, r0, #25
 802a7c2:	d5fb      	bpl.n	802a7bc <_printf_i+0xe4>
 802a7c4:	881e      	ldrh	r6, [r3, #0]
 802a7c6:	4853      	ldr	r0, [pc, #332]	; (802a914 <_printf_i+0x23c>)
 802a7c8:	2f6f      	cmp	r7, #111	; 0x6f
 802a7ca:	bf0c      	ite	eq
 802a7cc:	2308      	moveq	r3, #8
 802a7ce:	230a      	movne	r3, #10
 802a7d0:	2100      	movs	r1, #0
 802a7d2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802a7d6:	6865      	ldr	r5, [r4, #4]
 802a7d8:	60a5      	str	r5, [r4, #8]
 802a7da:	2d00      	cmp	r5, #0
 802a7dc:	bfa2      	ittt	ge
 802a7de:	6821      	ldrge	r1, [r4, #0]
 802a7e0:	f021 0104 	bicge.w	r1, r1, #4
 802a7e4:	6021      	strge	r1, [r4, #0]
 802a7e6:	b90e      	cbnz	r6, 802a7ec <_printf_i+0x114>
 802a7e8:	2d00      	cmp	r5, #0
 802a7ea:	d04b      	beq.n	802a884 <_printf_i+0x1ac>
 802a7ec:	4615      	mov	r5, r2
 802a7ee:	fbb6 f1f3 	udiv	r1, r6, r3
 802a7f2:	fb03 6711 	mls	r7, r3, r1, r6
 802a7f6:	5dc7      	ldrb	r7, [r0, r7]
 802a7f8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802a7fc:	4637      	mov	r7, r6
 802a7fe:	42bb      	cmp	r3, r7
 802a800:	460e      	mov	r6, r1
 802a802:	d9f4      	bls.n	802a7ee <_printf_i+0x116>
 802a804:	2b08      	cmp	r3, #8
 802a806:	d10b      	bne.n	802a820 <_printf_i+0x148>
 802a808:	6823      	ldr	r3, [r4, #0]
 802a80a:	07de      	lsls	r6, r3, #31
 802a80c:	d508      	bpl.n	802a820 <_printf_i+0x148>
 802a80e:	6923      	ldr	r3, [r4, #16]
 802a810:	6861      	ldr	r1, [r4, #4]
 802a812:	4299      	cmp	r1, r3
 802a814:	bfde      	ittt	le
 802a816:	2330      	movle	r3, #48	; 0x30
 802a818:	f805 3c01 	strble.w	r3, [r5, #-1]
 802a81c:	f105 35ff 	addle.w	r5, r5, #4294967295
 802a820:	1b52      	subs	r2, r2, r5
 802a822:	6122      	str	r2, [r4, #16]
 802a824:	f8cd a000 	str.w	sl, [sp]
 802a828:	464b      	mov	r3, r9
 802a82a:	aa03      	add	r2, sp, #12
 802a82c:	4621      	mov	r1, r4
 802a82e:	4640      	mov	r0, r8
 802a830:	f7ff fee4 	bl	802a5fc <_printf_common>
 802a834:	3001      	adds	r0, #1
 802a836:	d14a      	bne.n	802a8ce <_printf_i+0x1f6>
 802a838:	f04f 30ff 	mov.w	r0, #4294967295
 802a83c:	b004      	add	sp, #16
 802a83e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a842:	6823      	ldr	r3, [r4, #0]
 802a844:	f043 0320 	orr.w	r3, r3, #32
 802a848:	6023      	str	r3, [r4, #0]
 802a84a:	4833      	ldr	r0, [pc, #204]	; (802a918 <_printf_i+0x240>)
 802a84c:	2778      	movs	r7, #120	; 0x78
 802a84e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802a852:	6823      	ldr	r3, [r4, #0]
 802a854:	6829      	ldr	r1, [r5, #0]
 802a856:	061f      	lsls	r7, r3, #24
 802a858:	f851 6b04 	ldr.w	r6, [r1], #4
 802a85c:	d402      	bmi.n	802a864 <_printf_i+0x18c>
 802a85e:	065f      	lsls	r7, r3, #25
 802a860:	bf48      	it	mi
 802a862:	b2b6      	uxthmi	r6, r6
 802a864:	07df      	lsls	r7, r3, #31
 802a866:	bf48      	it	mi
 802a868:	f043 0320 	orrmi.w	r3, r3, #32
 802a86c:	6029      	str	r1, [r5, #0]
 802a86e:	bf48      	it	mi
 802a870:	6023      	strmi	r3, [r4, #0]
 802a872:	b91e      	cbnz	r6, 802a87c <_printf_i+0x1a4>
 802a874:	6823      	ldr	r3, [r4, #0]
 802a876:	f023 0320 	bic.w	r3, r3, #32
 802a87a:	6023      	str	r3, [r4, #0]
 802a87c:	2310      	movs	r3, #16
 802a87e:	e7a7      	b.n	802a7d0 <_printf_i+0xf8>
 802a880:	4824      	ldr	r0, [pc, #144]	; (802a914 <_printf_i+0x23c>)
 802a882:	e7e4      	b.n	802a84e <_printf_i+0x176>
 802a884:	4615      	mov	r5, r2
 802a886:	e7bd      	b.n	802a804 <_printf_i+0x12c>
 802a888:	682b      	ldr	r3, [r5, #0]
 802a88a:	6826      	ldr	r6, [r4, #0]
 802a88c:	6961      	ldr	r1, [r4, #20]
 802a88e:	1d18      	adds	r0, r3, #4
 802a890:	6028      	str	r0, [r5, #0]
 802a892:	0635      	lsls	r5, r6, #24
 802a894:	681b      	ldr	r3, [r3, #0]
 802a896:	d501      	bpl.n	802a89c <_printf_i+0x1c4>
 802a898:	6019      	str	r1, [r3, #0]
 802a89a:	e002      	b.n	802a8a2 <_printf_i+0x1ca>
 802a89c:	0670      	lsls	r0, r6, #25
 802a89e:	d5fb      	bpl.n	802a898 <_printf_i+0x1c0>
 802a8a0:	8019      	strh	r1, [r3, #0]
 802a8a2:	2300      	movs	r3, #0
 802a8a4:	6123      	str	r3, [r4, #16]
 802a8a6:	4615      	mov	r5, r2
 802a8a8:	e7bc      	b.n	802a824 <_printf_i+0x14c>
 802a8aa:	682b      	ldr	r3, [r5, #0]
 802a8ac:	1d1a      	adds	r2, r3, #4
 802a8ae:	602a      	str	r2, [r5, #0]
 802a8b0:	681d      	ldr	r5, [r3, #0]
 802a8b2:	6862      	ldr	r2, [r4, #4]
 802a8b4:	2100      	movs	r1, #0
 802a8b6:	4628      	mov	r0, r5
 802a8b8:	f7d5 fcfa 	bl	80002b0 <memchr>
 802a8bc:	b108      	cbz	r0, 802a8c2 <_printf_i+0x1ea>
 802a8be:	1b40      	subs	r0, r0, r5
 802a8c0:	6060      	str	r0, [r4, #4]
 802a8c2:	6863      	ldr	r3, [r4, #4]
 802a8c4:	6123      	str	r3, [r4, #16]
 802a8c6:	2300      	movs	r3, #0
 802a8c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802a8cc:	e7aa      	b.n	802a824 <_printf_i+0x14c>
 802a8ce:	6923      	ldr	r3, [r4, #16]
 802a8d0:	462a      	mov	r2, r5
 802a8d2:	4649      	mov	r1, r9
 802a8d4:	4640      	mov	r0, r8
 802a8d6:	47d0      	blx	sl
 802a8d8:	3001      	adds	r0, #1
 802a8da:	d0ad      	beq.n	802a838 <_printf_i+0x160>
 802a8dc:	6823      	ldr	r3, [r4, #0]
 802a8de:	079b      	lsls	r3, r3, #30
 802a8e0:	d413      	bmi.n	802a90a <_printf_i+0x232>
 802a8e2:	68e0      	ldr	r0, [r4, #12]
 802a8e4:	9b03      	ldr	r3, [sp, #12]
 802a8e6:	4298      	cmp	r0, r3
 802a8e8:	bfb8      	it	lt
 802a8ea:	4618      	movlt	r0, r3
 802a8ec:	e7a6      	b.n	802a83c <_printf_i+0x164>
 802a8ee:	2301      	movs	r3, #1
 802a8f0:	4632      	mov	r2, r6
 802a8f2:	4649      	mov	r1, r9
 802a8f4:	4640      	mov	r0, r8
 802a8f6:	47d0      	blx	sl
 802a8f8:	3001      	adds	r0, #1
 802a8fa:	d09d      	beq.n	802a838 <_printf_i+0x160>
 802a8fc:	3501      	adds	r5, #1
 802a8fe:	68e3      	ldr	r3, [r4, #12]
 802a900:	9903      	ldr	r1, [sp, #12]
 802a902:	1a5b      	subs	r3, r3, r1
 802a904:	42ab      	cmp	r3, r5
 802a906:	dcf2      	bgt.n	802a8ee <_printf_i+0x216>
 802a908:	e7eb      	b.n	802a8e2 <_printf_i+0x20a>
 802a90a:	2500      	movs	r5, #0
 802a90c:	f104 0619 	add.w	r6, r4, #25
 802a910:	e7f5      	b.n	802a8fe <_printf_i+0x226>
 802a912:	bf00      	nop
 802a914:	080421c9 	.word	0x080421c9
 802a918:	080421da 	.word	0x080421da

0802a91c <__sflush_r>:
 802a91c:	898a      	ldrh	r2, [r1, #12]
 802a91e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a922:	4605      	mov	r5, r0
 802a924:	0710      	lsls	r0, r2, #28
 802a926:	460c      	mov	r4, r1
 802a928:	d458      	bmi.n	802a9dc <__sflush_r+0xc0>
 802a92a:	684b      	ldr	r3, [r1, #4]
 802a92c:	2b00      	cmp	r3, #0
 802a92e:	dc05      	bgt.n	802a93c <__sflush_r+0x20>
 802a930:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802a932:	2b00      	cmp	r3, #0
 802a934:	dc02      	bgt.n	802a93c <__sflush_r+0x20>
 802a936:	2000      	movs	r0, #0
 802a938:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a93c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802a93e:	2e00      	cmp	r6, #0
 802a940:	d0f9      	beq.n	802a936 <__sflush_r+0x1a>
 802a942:	2300      	movs	r3, #0
 802a944:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802a948:	682f      	ldr	r7, [r5, #0]
 802a94a:	6a21      	ldr	r1, [r4, #32]
 802a94c:	602b      	str	r3, [r5, #0]
 802a94e:	d032      	beq.n	802a9b6 <__sflush_r+0x9a>
 802a950:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802a952:	89a3      	ldrh	r3, [r4, #12]
 802a954:	075a      	lsls	r2, r3, #29
 802a956:	d505      	bpl.n	802a964 <__sflush_r+0x48>
 802a958:	6863      	ldr	r3, [r4, #4]
 802a95a:	1ac0      	subs	r0, r0, r3
 802a95c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802a95e:	b10b      	cbz	r3, 802a964 <__sflush_r+0x48>
 802a960:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802a962:	1ac0      	subs	r0, r0, r3
 802a964:	2300      	movs	r3, #0
 802a966:	4602      	mov	r2, r0
 802a968:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802a96a:	6a21      	ldr	r1, [r4, #32]
 802a96c:	4628      	mov	r0, r5
 802a96e:	47b0      	blx	r6
 802a970:	1c43      	adds	r3, r0, #1
 802a972:	89a3      	ldrh	r3, [r4, #12]
 802a974:	d106      	bne.n	802a984 <__sflush_r+0x68>
 802a976:	6829      	ldr	r1, [r5, #0]
 802a978:	291d      	cmp	r1, #29
 802a97a:	d82b      	bhi.n	802a9d4 <__sflush_r+0xb8>
 802a97c:	4a29      	ldr	r2, [pc, #164]	; (802aa24 <__sflush_r+0x108>)
 802a97e:	410a      	asrs	r2, r1
 802a980:	07d6      	lsls	r6, r2, #31
 802a982:	d427      	bmi.n	802a9d4 <__sflush_r+0xb8>
 802a984:	2200      	movs	r2, #0
 802a986:	6062      	str	r2, [r4, #4]
 802a988:	04d9      	lsls	r1, r3, #19
 802a98a:	6922      	ldr	r2, [r4, #16]
 802a98c:	6022      	str	r2, [r4, #0]
 802a98e:	d504      	bpl.n	802a99a <__sflush_r+0x7e>
 802a990:	1c42      	adds	r2, r0, #1
 802a992:	d101      	bne.n	802a998 <__sflush_r+0x7c>
 802a994:	682b      	ldr	r3, [r5, #0]
 802a996:	b903      	cbnz	r3, 802a99a <__sflush_r+0x7e>
 802a998:	6560      	str	r0, [r4, #84]	; 0x54
 802a99a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a99c:	602f      	str	r7, [r5, #0]
 802a99e:	2900      	cmp	r1, #0
 802a9a0:	d0c9      	beq.n	802a936 <__sflush_r+0x1a>
 802a9a2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802a9a6:	4299      	cmp	r1, r3
 802a9a8:	d002      	beq.n	802a9b0 <__sflush_r+0x94>
 802a9aa:	4628      	mov	r0, r5
 802a9ac:	f7ff fc96 	bl	802a2dc <_free_r>
 802a9b0:	2000      	movs	r0, #0
 802a9b2:	6360      	str	r0, [r4, #52]	; 0x34
 802a9b4:	e7c0      	b.n	802a938 <__sflush_r+0x1c>
 802a9b6:	2301      	movs	r3, #1
 802a9b8:	4628      	mov	r0, r5
 802a9ba:	47b0      	blx	r6
 802a9bc:	1c41      	adds	r1, r0, #1
 802a9be:	d1c8      	bne.n	802a952 <__sflush_r+0x36>
 802a9c0:	682b      	ldr	r3, [r5, #0]
 802a9c2:	2b00      	cmp	r3, #0
 802a9c4:	d0c5      	beq.n	802a952 <__sflush_r+0x36>
 802a9c6:	2b1d      	cmp	r3, #29
 802a9c8:	d001      	beq.n	802a9ce <__sflush_r+0xb2>
 802a9ca:	2b16      	cmp	r3, #22
 802a9cc:	d101      	bne.n	802a9d2 <__sflush_r+0xb6>
 802a9ce:	602f      	str	r7, [r5, #0]
 802a9d0:	e7b1      	b.n	802a936 <__sflush_r+0x1a>
 802a9d2:	89a3      	ldrh	r3, [r4, #12]
 802a9d4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802a9d8:	81a3      	strh	r3, [r4, #12]
 802a9da:	e7ad      	b.n	802a938 <__sflush_r+0x1c>
 802a9dc:	690f      	ldr	r7, [r1, #16]
 802a9de:	2f00      	cmp	r7, #0
 802a9e0:	d0a9      	beq.n	802a936 <__sflush_r+0x1a>
 802a9e2:	0793      	lsls	r3, r2, #30
 802a9e4:	680e      	ldr	r6, [r1, #0]
 802a9e6:	bf08      	it	eq
 802a9e8:	694b      	ldreq	r3, [r1, #20]
 802a9ea:	600f      	str	r7, [r1, #0]
 802a9ec:	bf18      	it	ne
 802a9ee:	2300      	movne	r3, #0
 802a9f0:	eba6 0807 	sub.w	r8, r6, r7
 802a9f4:	608b      	str	r3, [r1, #8]
 802a9f6:	f1b8 0f00 	cmp.w	r8, #0
 802a9fa:	dd9c      	ble.n	802a936 <__sflush_r+0x1a>
 802a9fc:	6a21      	ldr	r1, [r4, #32]
 802a9fe:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802aa00:	4643      	mov	r3, r8
 802aa02:	463a      	mov	r2, r7
 802aa04:	4628      	mov	r0, r5
 802aa06:	47b0      	blx	r6
 802aa08:	2800      	cmp	r0, #0
 802aa0a:	dc06      	bgt.n	802aa1a <__sflush_r+0xfe>
 802aa0c:	89a3      	ldrh	r3, [r4, #12]
 802aa0e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802aa12:	81a3      	strh	r3, [r4, #12]
 802aa14:	f04f 30ff 	mov.w	r0, #4294967295
 802aa18:	e78e      	b.n	802a938 <__sflush_r+0x1c>
 802aa1a:	4407      	add	r7, r0
 802aa1c:	eba8 0800 	sub.w	r8, r8, r0
 802aa20:	e7e9      	b.n	802a9f6 <__sflush_r+0xda>
 802aa22:	bf00      	nop
 802aa24:	dfbffffe 	.word	0xdfbffffe

0802aa28 <_fflush_r>:
 802aa28:	b538      	push	{r3, r4, r5, lr}
 802aa2a:	690b      	ldr	r3, [r1, #16]
 802aa2c:	4605      	mov	r5, r0
 802aa2e:	460c      	mov	r4, r1
 802aa30:	b913      	cbnz	r3, 802aa38 <_fflush_r+0x10>
 802aa32:	2500      	movs	r5, #0
 802aa34:	4628      	mov	r0, r5
 802aa36:	bd38      	pop	{r3, r4, r5, pc}
 802aa38:	b118      	cbz	r0, 802aa42 <_fflush_r+0x1a>
 802aa3a:	6a03      	ldr	r3, [r0, #32]
 802aa3c:	b90b      	cbnz	r3, 802aa42 <_fflush_r+0x1a>
 802aa3e:	f7ff fa2f 	bl	8029ea0 <__sinit>
 802aa42:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802aa46:	2b00      	cmp	r3, #0
 802aa48:	d0f3      	beq.n	802aa32 <_fflush_r+0xa>
 802aa4a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802aa4c:	07d0      	lsls	r0, r2, #31
 802aa4e:	d404      	bmi.n	802aa5a <_fflush_r+0x32>
 802aa50:	0599      	lsls	r1, r3, #22
 802aa52:	d402      	bmi.n	802aa5a <_fflush_r+0x32>
 802aa54:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802aa56:	f7ff fbd2 	bl	802a1fe <__retarget_lock_acquire_recursive>
 802aa5a:	4628      	mov	r0, r5
 802aa5c:	4621      	mov	r1, r4
 802aa5e:	f7ff ff5d 	bl	802a91c <__sflush_r>
 802aa62:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802aa64:	07da      	lsls	r2, r3, #31
 802aa66:	4605      	mov	r5, r0
 802aa68:	d4e4      	bmi.n	802aa34 <_fflush_r+0xc>
 802aa6a:	89a3      	ldrh	r3, [r4, #12]
 802aa6c:	059b      	lsls	r3, r3, #22
 802aa6e:	d4e1      	bmi.n	802aa34 <_fflush_r+0xc>
 802aa70:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802aa72:	f7ff fbc5 	bl	802a200 <__retarget_lock_release_recursive>
 802aa76:	e7dd      	b.n	802aa34 <_fflush_r+0xc>

0802aa78 <__swbuf_r>:
 802aa78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802aa7a:	460e      	mov	r6, r1
 802aa7c:	4614      	mov	r4, r2
 802aa7e:	4605      	mov	r5, r0
 802aa80:	b118      	cbz	r0, 802aa8a <__swbuf_r+0x12>
 802aa82:	6a03      	ldr	r3, [r0, #32]
 802aa84:	b90b      	cbnz	r3, 802aa8a <__swbuf_r+0x12>
 802aa86:	f7ff fa0b 	bl	8029ea0 <__sinit>
 802aa8a:	69a3      	ldr	r3, [r4, #24]
 802aa8c:	60a3      	str	r3, [r4, #8]
 802aa8e:	89a3      	ldrh	r3, [r4, #12]
 802aa90:	071a      	lsls	r2, r3, #28
 802aa92:	d525      	bpl.n	802aae0 <__swbuf_r+0x68>
 802aa94:	6923      	ldr	r3, [r4, #16]
 802aa96:	b31b      	cbz	r3, 802aae0 <__swbuf_r+0x68>
 802aa98:	6823      	ldr	r3, [r4, #0]
 802aa9a:	6922      	ldr	r2, [r4, #16]
 802aa9c:	1a98      	subs	r0, r3, r2
 802aa9e:	6963      	ldr	r3, [r4, #20]
 802aaa0:	b2f6      	uxtb	r6, r6
 802aaa2:	4283      	cmp	r3, r0
 802aaa4:	4637      	mov	r7, r6
 802aaa6:	dc04      	bgt.n	802aab2 <__swbuf_r+0x3a>
 802aaa8:	4621      	mov	r1, r4
 802aaaa:	4628      	mov	r0, r5
 802aaac:	f7ff ffbc 	bl	802aa28 <_fflush_r>
 802aab0:	b9e0      	cbnz	r0, 802aaec <__swbuf_r+0x74>
 802aab2:	68a3      	ldr	r3, [r4, #8]
 802aab4:	3b01      	subs	r3, #1
 802aab6:	60a3      	str	r3, [r4, #8]
 802aab8:	6823      	ldr	r3, [r4, #0]
 802aaba:	1c5a      	adds	r2, r3, #1
 802aabc:	6022      	str	r2, [r4, #0]
 802aabe:	701e      	strb	r6, [r3, #0]
 802aac0:	6962      	ldr	r2, [r4, #20]
 802aac2:	1c43      	adds	r3, r0, #1
 802aac4:	429a      	cmp	r2, r3
 802aac6:	d004      	beq.n	802aad2 <__swbuf_r+0x5a>
 802aac8:	89a3      	ldrh	r3, [r4, #12]
 802aaca:	07db      	lsls	r3, r3, #31
 802aacc:	d506      	bpl.n	802aadc <__swbuf_r+0x64>
 802aace:	2e0a      	cmp	r6, #10
 802aad0:	d104      	bne.n	802aadc <__swbuf_r+0x64>
 802aad2:	4621      	mov	r1, r4
 802aad4:	4628      	mov	r0, r5
 802aad6:	f7ff ffa7 	bl	802aa28 <_fflush_r>
 802aada:	b938      	cbnz	r0, 802aaec <__swbuf_r+0x74>
 802aadc:	4638      	mov	r0, r7
 802aade:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802aae0:	4621      	mov	r1, r4
 802aae2:	4628      	mov	r0, r5
 802aae4:	f000 f806 	bl	802aaf4 <__swsetup_r>
 802aae8:	2800      	cmp	r0, #0
 802aaea:	d0d5      	beq.n	802aa98 <__swbuf_r+0x20>
 802aaec:	f04f 37ff 	mov.w	r7, #4294967295
 802aaf0:	e7f4      	b.n	802aadc <__swbuf_r+0x64>
	...

0802aaf4 <__swsetup_r>:
 802aaf4:	b538      	push	{r3, r4, r5, lr}
 802aaf6:	4b2a      	ldr	r3, [pc, #168]	; (802aba0 <__swsetup_r+0xac>)
 802aaf8:	4605      	mov	r5, r0
 802aafa:	6818      	ldr	r0, [r3, #0]
 802aafc:	460c      	mov	r4, r1
 802aafe:	b118      	cbz	r0, 802ab08 <__swsetup_r+0x14>
 802ab00:	6a03      	ldr	r3, [r0, #32]
 802ab02:	b90b      	cbnz	r3, 802ab08 <__swsetup_r+0x14>
 802ab04:	f7ff f9cc 	bl	8029ea0 <__sinit>
 802ab08:	89a3      	ldrh	r3, [r4, #12]
 802ab0a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ab0e:	0718      	lsls	r0, r3, #28
 802ab10:	d422      	bmi.n	802ab58 <__swsetup_r+0x64>
 802ab12:	06d9      	lsls	r1, r3, #27
 802ab14:	d407      	bmi.n	802ab26 <__swsetup_r+0x32>
 802ab16:	2309      	movs	r3, #9
 802ab18:	602b      	str	r3, [r5, #0]
 802ab1a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802ab1e:	81a3      	strh	r3, [r4, #12]
 802ab20:	f04f 30ff 	mov.w	r0, #4294967295
 802ab24:	e034      	b.n	802ab90 <__swsetup_r+0x9c>
 802ab26:	0758      	lsls	r0, r3, #29
 802ab28:	d512      	bpl.n	802ab50 <__swsetup_r+0x5c>
 802ab2a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ab2c:	b141      	cbz	r1, 802ab40 <__swsetup_r+0x4c>
 802ab2e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802ab32:	4299      	cmp	r1, r3
 802ab34:	d002      	beq.n	802ab3c <__swsetup_r+0x48>
 802ab36:	4628      	mov	r0, r5
 802ab38:	f7ff fbd0 	bl	802a2dc <_free_r>
 802ab3c:	2300      	movs	r3, #0
 802ab3e:	6363      	str	r3, [r4, #52]	; 0x34
 802ab40:	89a3      	ldrh	r3, [r4, #12]
 802ab42:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802ab46:	81a3      	strh	r3, [r4, #12]
 802ab48:	2300      	movs	r3, #0
 802ab4a:	6063      	str	r3, [r4, #4]
 802ab4c:	6923      	ldr	r3, [r4, #16]
 802ab4e:	6023      	str	r3, [r4, #0]
 802ab50:	89a3      	ldrh	r3, [r4, #12]
 802ab52:	f043 0308 	orr.w	r3, r3, #8
 802ab56:	81a3      	strh	r3, [r4, #12]
 802ab58:	6923      	ldr	r3, [r4, #16]
 802ab5a:	b94b      	cbnz	r3, 802ab70 <__swsetup_r+0x7c>
 802ab5c:	89a3      	ldrh	r3, [r4, #12]
 802ab5e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802ab62:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802ab66:	d003      	beq.n	802ab70 <__swsetup_r+0x7c>
 802ab68:	4621      	mov	r1, r4
 802ab6a:	4628      	mov	r0, r5
 802ab6c:	f000 f840 	bl	802abf0 <__smakebuf_r>
 802ab70:	89a0      	ldrh	r0, [r4, #12]
 802ab72:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ab76:	f010 0301 	ands.w	r3, r0, #1
 802ab7a:	d00a      	beq.n	802ab92 <__swsetup_r+0x9e>
 802ab7c:	2300      	movs	r3, #0
 802ab7e:	60a3      	str	r3, [r4, #8]
 802ab80:	6963      	ldr	r3, [r4, #20]
 802ab82:	425b      	negs	r3, r3
 802ab84:	61a3      	str	r3, [r4, #24]
 802ab86:	6923      	ldr	r3, [r4, #16]
 802ab88:	b943      	cbnz	r3, 802ab9c <__swsetup_r+0xa8>
 802ab8a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ab8e:	d1c4      	bne.n	802ab1a <__swsetup_r+0x26>
 802ab90:	bd38      	pop	{r3, r4, r5, pc}
 802ab92:	0781      	lsls	r1, r0, #30
 802ab94:	bf58      	it	pl
 802ab96:	6963      	ldrpl	r3, [r4, #20]
 802ab98:	60a3      	str	r3, [r4, #8]
 802ab9a:	e7f4      	b.n	802ab86 <__swsetup_r+0x92>
 802ab9c:	2000      	movs	r0, #0
 802ab9e:	e7f7      	b.n	802ab90 <__swsetup_r+0x9c>
 802aba0:	20000160 	.word	0x20000160

0802aba4 <__swhatbuf_r>:
 802aba4:	b570      	push	{r4, r5, r6, lr}
 802aba6:	460c      	mov	r4, r1
 802aba8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802abac:	2900      	cmp	r1, #0
 802abae:	b096      	sub	sp, #88	; 0x58
 802abb0:	4615      	mov	r5, r2
 802abb2:	461e      	mov	r6, r3
 802abb4:	da0d      	bge.n	802abd2 <__swhatbuf_r+0x2e>
 802abb6:	89a3      	ldrh	r3, [r4, #12]
 802abb8:	f013 0f80 	tst.w	r3, #128	; 0x80
 802abbc:	f04f 0100 	mov.w	r1, #0
 802abc0:	bf0c      	ite	eq
 802abc2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802abc6:	2340      	movne	r3, #64	; 0x40
 802abc8:	2000      	movs	r0, #0
 802abca:	6031      	str	r1, [r6, #0]
 802abcc:	602b      	str	r3, [r5, #0]
 802abce:	b016      	add	sp, #88	; 0x58
 802abd0:	bd70      	pop	{r4, r5, r6, pc}
 802abd2:	466a      	mov	r2, sp
 802abd4:	f000 f848 	bl	802ac68 <_fstat_r>
 802abd8:	2800      	cmp	r0, #0
 802abda:	dbec      	blt.n	802abb6 <__swhatbuf_r+0x12>
 802abdc:	9901      	ldr	r1, [sp, #4]
 802abde:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802abe2:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802abe6:	4259      	negs	r1, r3
 802abe8:	4159      	adcs	r1, r3
 802abea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802abee:	e7eb      	b.n	802abc8 <__swhatbuf_r+0x24>

0802abf0 <__smakebuf_r>:
 802abf0:	898b      	ldrh	r3, [r1, #12]
 802abf2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802abf4:	079d      	lsls	r5, r3, #30
 802abf6:	4606      	mov	r6, r0
 802abf8:	460c      	mov	r4, r1
 802abfa:	d507      	bpl.n	802ac0c <__smakebuf_r+0x1c>
 802abfc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802ac00:	6023      	str	r3, [r4, #0]
 802ac02:	6123      	str	r3, [r4, #16]
 802ac04:	2301      	movs	r3, #1
 802ac06:	6163      	str	r3, [r4, #20]
 802ac08:	b002      	add	sp, #8
 802ac0a:	bd70      	pop	{r4, r5, r6, pc}
 802ac0c:	ab01      	add	r3, sp, #4
 802ac0e:	466a      	mov	r2, sp
 802ac10:	f7ff ffc8 	bl	802aba4 <__swhatbuf_r>
 802ac14:	9900      	ldr	r1, [sp, #0]
 802ac16:	4605      	mov	r5, r0
 802ac18:	4630      	mov	r0, r6
 802ac1a:	f7ff f81b 	bl	8029c54 <_malloc_r>
 802ac1e:	b948      	cbnz	r0, 802ac34 <__smakebuf_r+0x44>
 802ac20:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802ac24:	059a      	lsls	r2, r3, #22
 802ac26:	d4ef      	bmi.n	802ac08 <__smakebuf_r+0x18>
 802ac28:	f023 0303 	bic.w	r3, r3, #3
 802ac2c:	f043 0302 	orr.w	r3, r3, #2
 802ac30:	81a3      	strh	r3, [r4, #12]
 802ac32:	e7e3      	b.n	802abfc <__smakebuf_r+0xc>
 802ac34:	89a3      	ldrh	r3, [r4, #12]
 802ac36:	6020      	str	r0, [r4, #0]
 802ac38:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802ac3c:	81a3      	strh	r3, [r4, #12]
 802ac3e:	9b00      	ldr	r3, [sp, #0]
 802ac40:	6163      	str	r3, [r4, #20]
 802ac42:	9b01      	ldr	r3, [sp, #4]
 802ac44:	6120      	str	r0, [r4, #16]
 802ac46:	b15b      	cbz	r3, 802ac60 <__smakebuf_r+0x70>
 802ac48:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ac4c:	4630      	mov	r0, r6
 802ac4e:	f000 f81d 	bl	802ac8c <_isatty_r>
 802ac52:	b128      	cbz	r0, 802ac60 <__smakebuf_r+0x70>
 802ac54:	89a3      	ldrh	r3, [r4, #12]
 802ac56:	f023 0303 	bic.w	r3, r3, #3
 802ac5a:	f043 0301 	orr.w	r3, r3, #1
 802ac5e:	81a3      	strh	r3, [r4, #12]
 802ac60:	89a3      	ldrh	r3, [r4, #12]
 802ac62:	431d      	orrs	r5, r3
 802ac64:	81a5      	strh	r5, [r4, #12]
 802ac66:	e7cf      	b.n	802ac08 <__smakebuf_r+0x18>

0802ac68 <_fstat_r>:
 802ac68:	b538      	push	{r3, r4, r5, lr}
 802ac6a:	4d07      	ldr	r5, [pc, #28]	; (802ac88 <_fstat_r+0x20>)
 802ac6c:	2300      	movs	r3, #0
 802ac6e:	4604      	mov	r4, r0
 802ac70:	4608      	mov	r0, r1
 802ac72:	4611      	mov	r1, r2
 802ac74:	602b      	str	r3, [r5, #0]
 802ac76:	f7d7 fd39 	bl	80026ec <_fstat>
 802ac7a:	1c43      	adds	r3, r0, #1
 802ac7c:	d102      	bne.n	802ac84 <_fstat_r+0x1c>
 802ac7e:	682b      	ldr	r3, [r5, #0]
 802ac80:	b103      	cbz	r3, 802ac84 <_fstat_r+0x1c>
 802ac82:	6023      	str	r3, [r4, #0]
 802ac84:	bd38      	pop	{r3, r4, r5, pc}
 802ac86:	bf00      	nop
 802ac88:	2001390c 	.word	0x2001390c

0802ac8c <_isatty_r>:
 802ac8c:	b538      	push	{r3, r4, r5, lr}
 802ac8e:	4d06      	ldr	r5, [pc, #24]	; (802aca8 <_isatty_r+0x1c>)
 802ac90:	2300      	movs	r3, #0
 802ac92:	4604      	mov	r4, r0
 802ac94:	4608      	mov	r0, r1
 802ac96:	602b      	str	r3, [r5, #0]
 802ac98:	f7d7 fd2e 	bl	80026f8 <_isatty>
 802ac9c:	1c43      	adds	r3, r0, #1
 802ac9e:	d102      	bne.n	802aca6 <_isatty_r+0x1a>
 802aca0:	682b      	ldr	r3, [r5, #0]
 802aca2:	b103      	cbz	r3, 802aca6 <_isatty_r+0x1a>
 802aca4:	6023      	str	r3, [r4, #0]
 802aca6:	bd38      	pop	{r3, r4, r5, pc}
 802aca8:	2001390c 	.word	0x2001390c

0802acac <_init>:
 802acac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802acae:	bf00      	nop
 802acb0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802acb2:	bc08      	pop	{r3}
 802acb4:	469e      	mov	lr, r3
 802acb6:	4770      	bx	lr

0802acb8 <_fini>:
 802acb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802acba:	bf00      	nop
 802acbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802acbe:	bc08      	pop	{r3}
 802acc0:	469e      	mov	lr, r3
 802acc2:	4770      	bx	lr
